  private handleHostConnection(connection: Connection, hostRoomCode?: string) {
    const roomCode = hostRoomCode || this.generateRoomCode();
    
    if (this.rooms.has(roomCode)) {
      this.sendError(connection, 'Room already exists');
      return;
    }

    const room: Room = {
      code: roomCode,
      host: connection.id,
      players: new Set([connection.id]),
      connections: new Map([[connection.id, connection.ws]]),
      created: Date.now(),
    };

    this.rooms.set(roomCode, room);
    connection.room = roomCode;
    connection.user = { name: 'Host', type: 'host' };

    // Send consistent field names
    this.sendMessage(connection, {
      type: 'event',
      data: { 
        name: 'session/created', 
        roomCode, // Use roomCode instead of room for consistency
        room: roomCode, // Keep both for backward compatibility
        uuid: connection.id 
      },
      timestamp: Date.now(),
    });

    console.log(`üè† Room created: ${roomCode} by ${connection.id}`);
  }

  private handleJoinConnection(connection: Connection, roomCode: string) {
    const room = this.rooms.get(roomCode);
    
    if (!room) {
      this.sendError(connection, 'Room not found');
      return;
    }

    room.players.add(connection.id);
    room.connections.set(connection.id, connection.ws);
    connection.room = roomCode;
    connection.user = { name: 'Player', type: 'player' };

    // Notify player they joined
    this.sendMessage(connection, {
      type: 'event',
      data: { 
        name: 'session/joined', 
        roomCode, // Use roomCode instead of room for consistency
        room: roomCode, // Keep both for backward compatibility
        uuid: connection.id,
        hostId: room.host 
      },
      timestamp: Date.now(),
    });

    // Notify other players
    this.broadcastToRoom(roomCode, {
      type: 'event',
      data: { 
        name: 'session/join', 
        uuid: connection.id 
      },
      timestamp: Date.now(),
    }, connection.id);

    console.log(`üëã Player joined room ${roomCode}: ${connection.id}`);
  }