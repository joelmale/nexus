/* Dice Animation Overlay */
.dice-animation-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
  pointer-events: none;
  overflow: hidden;
}

.dice-animation-container {
  position: relative;
  width: 100%;
  height: 100%;
  perspective: 1200px;
  perspective-origin: center center;
}

/* Animated Die Container */
.animated-die {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 100px;
  height: 100px;
  transform-style: preserve-3d;
  animation: diceRoll 2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  animation-delay: var(--delay, 0s);
}

.animated-die.landed {
  animation: diceLand 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
  animation-delay: calc(var(--delay, 0s) + 1.7s);
}

.die-inner {
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  position: relative;
}

/* Dice Rolling Animation */
@keyframes diceRoll {
  0% {
    transform:
      translate(var(--start-x, 0%), var(--start-y, -100%))
      rotateX(0deg)
      rotateY(0deg)
      rotateZ(0deg)
      scale(0.5);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  40% {
    transform:
      translate(calc(var(--start-x, 0%) * 0.5), -20%)
      rotateX(calc(var(--rotate-x, 360deg) * 0.3))
      rotateY(calc(var(--rotate-y, 360deg) * 0.3))
      rotateZ(calc(var(--rotate-z, 360deg) * 0.3))
      scale(1.2);
  }
  70% {
    transform:
      translate(0%, 10%)
      rotateX(calc(var(--rotate-x, 360deg) * 0.7))
      rotateY(calc(var(--rotate-y, 360deg) * 0.7))
      rotateZ(calc(var(--rotate-z, 360deg) * 0.7))
      scale(1.1);
  }
  85% {
    transform:
      translate(0%, 0%)
      rotateX(var(--rotate-x, 360deg))
      rotateY(var(--rotate-y, 360deg))
      rotateZ(var(--rotate-z, 360deg))
      scale(1);
  }
  92% {
    transform:
      translate(0%, 2%)
      rotateX(var(--rotate-x, 360deg))
      rotateY(var(--rotate-y, 360deg))
      rotateZ(var(--rotate-z, 360deg))
      scale(1.05);
  }
  100% {
    transform:
      translate(0%, 0%)
      rotateX(var(--rotate-x, 360deg))
      rotateY(var(--rotate-y, 360deg))
      rotateZ(var(--rotate-z, 360deg))
      scale(1);
  }
}

/* Landing Animation */
@keyframes diceLand {
  0% {
    transform:
      translate(0%, 0%)
      rotateX(var(--rotate-x, 360deg))
      rotateY(var(--rotate-y, 360deg))
      rotateZ(var(--rotate-z, 360deg))
      scale(1);
  }
  50% {
    transform:
      translate(0%, -5%)
      rotateX(0deg)
      rotateY(0deg)
      rotateZ(0deg)
      scale(1.15);
  }
  70% {
    transform:
      translate(0%, 2%)
      rotateX(0deg)
      rotateY(0deg)
      rotateZ(0deg)
      scale(0.95);
  }
  85% {
    transform:
      translate(0%, -1%)
      rotateX(0deg)
      rotateY(0deg)
      rotateZ(0deg)
      scale(1.05);
  }
  100% {
    transform:
      translate(0%, 0%)
      rotateX(0deg)
      rotateY(0deg)
      rotateZ(0deg)
      scale(1.3);
    filter: drop-shadow(0 10px 30px rgba(0, 0, 0, 0.5));
  }
}

/* === D6 CUBE === */
.cube {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
}

.cube-face {
  position: absolute;
  width: 100px;
  height: 100px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 48px;
  font-weight: bold;
  color: white;
  box-shadow:
    inset 0 0 20px rgba(255, 255, 255, 0.1),
    0 5px 15px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(4px);
}

.cube-face.front  { transform: rotateY(0deg) translateZ(50px); }
.cube-face.back   { transform: rotateY(180deg) translateZ(50px); }
.cube-face.right  { transform: rotateY(90deg) translateZ(50px); }
.cube-face.left   { transform: rotateY(-90deg) translateZ(50px); }
.cube-face.top    { transform: rotateX(90deg) translateZ(50px); }
.cube-face.bottom { transform: rotateX(-90deg) translateZ(50px); }

/* Show specific face on landing */
.cube.show-face-1 { transform: rotateY(0deg) rotateX(0deg); }
.cube.show-face-2 { transform: rotateX(-90deg) rotateY(0deg); }
.cube.show-face-3 { transform: rotateY(-90deg) rotateX(0deg); }
.cube.show-face-4 { transform: rotateY(90deg) rotateX(0deg); }
.cube.show-face-5 { transform: rotateX(90deg) rotateY(0deg); }
.cube.show-face-6 { transform: rotateY(180deg) rotateX(0deg); }

/* Dots for D6 */
.dots {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  padding: 15px;
  position: relative;
}

.dot {
  width: 16px;
  height: 16px;
  background: white;
  border-radius: 50%;
  box-shadow:
    0 2px 4px rgba(0, 0, 0, 0.3),
    inset 0 1px 2px rgba(255, 255, 255, 0.5);
}

.dot.top-left { grid-column: 1; grid-row: 1; }
.dot.top-right { grid-column: 3; grid-row: 1; }
.dot.middle-left { grid-column: 1; grid-row: 2; }
.dot.center { grid-column: 2; grid-row: 2; }
.dot.middle-right { grid-column: 3; grid-row: 2; }
.dot.bottom-left { grid-column: 1; grid-row: 3; }
.dot.bottom-right { grid-column: 3; grid-row: 3; }

/* === POLYHEDRON SHAPES (d4, d8, d10, d12, d20) === */
.polyhedron {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 12px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  box-shadow:
    inset 0 0 30px rgba(255, 255, 255, 0.2),
    0 5px 20px rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(4px);
}

/* D4 - Tetrahedron (pyramid) */
.d4-shape {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  background: linear-gradient(135deg, var(--die-color, #8b5cf6), #6d28d9);
}

/* D8 - Octahedron (diamond) */
.d8-shape {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  background: linear-gradient(135deg, var(--die-color, #10b981), #059669);
}

/* D10 - Pentagonal trapezohedron */
.d10-shape {
  clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);
  background: linear-gradient(135deg, var(--die-color, #3b82f6), #2563eb);
}

/* D12 - Dodecahedron (pentagon-based) */
.d12-shape {
  clip-path: polygon(50% 0%, 80% 10%, 100% 35%, 100% 65%, 80% 90%, 50% 100%, 20% 90%, 0% 65%, 0% 35%, 20% 10%);
  background: linear-gradient(135deg, var(--die-color, #f59e0b), #d97706);
}

/* D20 - Icosahedron (most sides) */
.d20-shape {
  clip-path: polygon(50% 0%, 75% 5%, 95% 25%, 100% 50%, 95% 75%, 75% 95%, 50% 100%, 25% 95%, 5% 75%, 0% 50%, 5% 25%, 25% 5%);
  background: linear-gradient(135deg, var(--die-color, #ec4899), #db2777);
}

/* Die Result Number */
.die-result {
  font-size: 48px;
  font-weight: bold;
  color: white;
  text-shadow:
    0 2px 4px rgba(0, 0, 0, 0.5),
    0 0 10px rgba(255, 255, 255, 0.3);
  animation: resultPop 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  z-index: 10;
  position: relative;
}

@keyframes resultPop {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Size variations for different dice */
.animated-die.d4 {
  width: 80px;
  height: 80px;
}

.animated-die.d4 .cube-face,
.animated-die.d4 .polyhedron {
  width: 80px;
  height: 80px;
}

.animated-die.d4 .die-result {
  font-size: 36px;
}

.animated-die.d20,
.animated-die.d12 {
  width: 120px;
  height: 120px;
}

.animated-die.d20 .polyhedron,
.animated-die.d12 .polyhedron {
  width: 120px;
  height: 120px;
}

.animated-die.d20 .die-result,
.animated-die.d12 .die-result {
  font-size: 56px;
}

/* Critical Success Glow (Natural 20) */
.animated-die.d20.crit-success .polyhedron {
  animation: critSuccessGlow 0.5s ease-in-out infinite alternate;
}

@keyframes critSuccessGlow {
  from {
    box-shadow:
      inset 0 0 30px rgba(255, 255, 255, 0.2),
      0 0 30px rgba(16, 185, 129, 0.8),
      0 0 60px rgba(16, 185, 129, 0.6);
  }
  to {
    box-shadow:
      inset 0 0 30px rgba(255, 255, 255, 0.3),
      0 0 50px rgba(16, 185, 129, 1),
      0 0 100px rgba(16, 185, 129, 0.8);
  }
}

/* Critical Failure Glow (Natural 1) */
.animated-die.d20.crit-failure .polyhedron {
  animation: critFailureGlow 0.5s ease-in-out infinite alternate;
}

@keyframes critFailureGlow {
  from {
    box-shadow:
      inset 0 0 30px rgba(255, 255, 255, 0.2),
      0 0 30px rgba(239, 68, 68, 0.8),
      0 0 60px rgba(239, 68, 68, 0.6);
  }
  to {
    box-shadow:
      inset 0 0 30px rgba(255, 255, 255, 0.3),
      0 0 50px rgba(239, 68, 68, 1),
      0 0 100px rgba(239, 68, 68, 0.8);
  }
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .animated-die {
    width: 70px;
    height: 70px;
  }

  .cube-face,
  .polyhedron {
    width: 70px;
    height: 70px;
  }

  .die-result {
    font-size: 32px;
  }
}
