/*
 howler.js v2.2.4 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function (O) {
  var v = 0;
  return function () {
    return v < O.length ? { done: !1, value: O[v++] } : { done: !0 };
  };
};
$jscomp.arrayIterator = function (O) {
  return { next: $jscomp.arrayIteratorImpl(O) };
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || 'function' == typeof Object.defineProperties
    ? Object.defineProperty
    : function (O, v, D) {
        O != Array.prototype && O != Object.prototype && (O[v] = D.value);
      };
$jscomp.getGlobal = function (O) {
  O = [
    'object' == typeof window && window,
    'object' == typeof self && self,
    'object' == typeof global && global,
    O,
  ];
  for (var v = 0; v < O.length; ++v) {
    var D = O[v];
    if (D && D.Math == Math) return D;
  }
  throw Error('Cannot find global object');
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.SymbolClass = function (O, v) {
  this.$jscomp$symbol$id_ = O;
  $jscomp.defineProperty(this, 'description', {
    configurable: !0,
    writable: !0,
    value: v,
  });
};
$jscomp.SymbolClass.prototype.toString = function () {
  return this.$jscomp$symbol$id_;
};
$jscomp.Symbol = (function () {
  function O(D) {
    if (this instanceof O) throw new TypeError('Symbol is not a constructor');
    return new $jscomp.SymbolClass(
      $jscomp.SYMBOL_PREFIX + (D || '') + '_' + v++,
      D,
    );
  }
  var v = 0;
  return O;
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var O = $jscomp.global.Symbol.iterator;
  O ||
    (O = $jscomp.global.Symbol.iterator =
      $jscomp.global.Symbol('Symbol.iterator'));
  'function' != typeof Array.prototype[O] &&
    $jscomp.defineProperty(Array.prototype, O, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.initSymbolAsyncIterator = function () {
  $jscomp.initSymbol();
  var O = $jscomp.global.Symbol.asyncIterator;
  O ||
    (O = $jscomp.global.Symbol.asyncIterator =
      $jscomp.global.Symbol('Symbol.asyncIterator'));
  $jscomp.initSymbolAsyncIterator = function () {};
};
$jscomp.iteratorPrototype = function (O) {
  $jscomp.initSymbolIterator();
  O = { next: O };
  O[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return O;
};
$jscomp.iteratorFromArray = function (O, v) {
  $jscomp.initSymbolIterator();
  O instanceof String && (O += '');
  var D = 0,
    H = {
      next: function () {
        if (D < O.length) {
          var A = D++;
          return { value: v(A, O[A]), done: !1 };
        }
        H.next = function () {
          return { done: !0, value: void 0 };
        };
        return H.next();
      },
    };
  H[Symbol.iterator] = function () {
    return H;
  };
  return H;
};
$jscomp.polyfill = function (O, v, D, H) {
  if (v) {
    D = $jscomp.global;
    O = O.split('.');
    for (H = 0; H < O.length - 1; H++) {
      var A = O[H];
      A in D || (D[A] = {});
      D = D[A];
    }
    O = O[O.length - 1];
    H = D[O];
    v = v(H);
    v != H &&
      null != v &&
      $jscomp.defineProperty(D, O, {
        configurable: !0,
        writable: !0,
        value: v,
      });
  }
};
$jscomp.polyfill(
  'Array.prototype.keys',
  function (O) {
    return O
      ? O
      : function () {
          return $jscomp.iteratorFromArray(this, function (v) {
            return v;
          });
        };
  },
  'es6',
  'es3',
);
$jscomp.checkStringArgs = function (O, v, D) {
  if (null == O)
    throw new TypeError(
      "The 'this' value for String.prototype." +
        D +
        ' must not be null or undefined',
    );
  if (v instanceof RegExp)
    throw new TypeError(
      'First argument to String.prototype.' +
        D +
        ' must not be a regular expression',
    );
  return O + '';
};
$jscomp.polyfill(
  'String.prototype.endsWith',
  function (O) {
    return O
      ? O
      : function (v, D) {
          var H = $jscomp.checkStringArgs(this, v, 'endsWith');
          v += '';
          void 0 === D && (D = H.length);
          D = Math.max(0, Math.min(D | 0, H.length));
          for (var A = v.length; 0 < A && 0 < D; )
            if (H[--D] != v[--A]) return !1;
          return 0 >= A;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.fromCodePoint',
  function (O) {
    return O
      ? O
      : function (v) {
          for (var D = '', H = 0; H < arguments.length; H++) {
            var A = Number(arguments[H]);
            if (0 > A || 1114111 < A || A !== Math.floor(A))
              throw new RangeError('invalid_code_point ' + A);
            65535 >= A
              ? (D += String.fromCharCode(A))
              : ((A -= 65536),
                (D += String.fromCharCode(((A >>> 10) & 1023) | 55296)),
                (D += String.fromCharCode((A & 1023) | 56320)));
          }
          return D;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.values',
  function (O) {
    return O
      ? O
      : function () {
          return $jscomp.iteratorFromArray(this, function (v, D) {
            return D;
          });
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.fill',
  function (O) {
    return O
      ? O
      : function (v, D, H) {
          var A = this.length || 0;
          0 > D && (D = Math.max(0, A + D));
          if (null == H || H > A) H = A;
          H = Number(H);
          0 > H && (H = Math.max(0, A + H));
          for (D = Number(D || 0); D < H; D++) this[D] = v;
          return this;
        };
  },
  'es6',
  'es3',
);
$jscomp.findInternal = function (O, v, D) {
  O instanceof String && (O = String(O));
  for (var H = O.length, A = 0; A < H; A++) {
    var T = O[A];
    if (v.call(D, T, A, O)) return { i: A, v: T };
  }
  return { i: -1, v: void 0 };
};
$jscomp.polyfill(
  'Array.prototype.find',
  function (O) {
    return O
      ? O
      : function (v, D) {
          return $jscomp.findInternal(this, v, D).v;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.startsWith',
  function (O) {
    return O
      ? O
      : function (v, D) {
          var H = $jscomp.checkStringArgs(this, v, 'startsWith');
          v += '';
          var A = H.length,
            O = v.length;
          D = Math.max(0, Math.min(D | 0, H.length));
          for (var ha = 0; ha < O && D < A; ) if (H[D++] != v[ha++]) return !1;
          return ha >= O;
        };
  },
  'es6',
  'es3',
);
$jscomp.underscoreProtoCanBeSet = function () {
  var O = { a: !0 },
    v = {};
  try {
    return ((v.__proto__ = O), v.a);
  } catch (D) {}
  return !1;
};
$jscomp.setPrototypeOf =
  'function' == typeof Object.setPrototypeOf
    ? Object.setPrototypeOf
    : $jscomp.underscoreProtoCanBeSet()
      ? function (O, v) {
          O.__proto__ = v;
          if (O.__proto__ !== v) throw new TypeError(O + ' is not extensible');
          return O;
        }
      : null;
$jscomp.polyfill(
  'Object.setPrototypeOf',
  function (O) {
    return O || $jscomp.setPrototypeOf;
  },
  'es6',
  'es5',
);
$jscomp.owns = function (O, v) {
  return Object.prototype.hasOwnProperty.call(O, v);
};
$jscomp.polyfill(
  'Object.values',
  function (O) {
    return O
      ? O
      : function (v) {
          var D = [],
            H;
          for (H in v) $jscomp.owns(v, H) && D.push(v[H]);
          return D;
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.repeat',
  function (O) {
    return O
      ? O
      : function (v) {
          var D = $jscomp.checkStringArgs(this, null, 'repeat');
          if (0 > v || 1342177279 < v)
            throw new RangeError('Invalid count value');
          v |= 0;
          for (var H = ''; v; ) if ((v & 1 && (H += D), (v >>>= 1))) D += D;
          return H;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Object.is',
  function (O) {
    return O
      ? O
      : function (v, D) {
          return v === D ? 0 !== v || 1 / v === 1 / D : v !== v && D !== D;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.includes',
  function (O) {
    return O
      ? O
      : function (v, D) {
          var H = this;
          H instanceof String && (H = String(H));
          var A = H.length;
          D = D || 0;
          for (0 > D && (D = Math.max(D + A, 0)); D < A; D++) {
            var O = H[D];
            if (O === v || Object.is(O, v)) return !0;
          }
          return !1;
        };
  },
  'es7',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.includes',
  function (O) {
    return O
      ? O
      : function (v, D) {
          return (
            -1 !==
            $jscomp.checkStringArgs(this, v, 'includes').indexOf(v, D || 0)
          );
        };
  },
  'es6',
  'es3',
);
var $lime_init = function (O, v) {
  var D = function (v, D) {
    (function (v, D) {
      function w(a, b) {
        a = Object.create(a);
        for (var d in b) a[d] = b[d];
        b.toString !== Object.prototype.toString && (a.toString = b.toString);
        return a;
      }
      function H(a) {
        return a instanceof Array ? new cf(a) : a.iterator();
      }
      function m(a, b) {
        if (null == b) return null;
        null == b.__id__ && (b.__id__ = D.$haxeUID++);
        var d;
        null == a.hx__closures__
          ? (a.hx__closures__ = {})
          : (d = a.hx__closures__[b.__id__]);
        null == d && ((d = b.bind(a)), (a.hx__closures__[b.__id__] = d));
        return d;
      }
      v.lime = v.lime || {};
      var h = {},
        q = function () {
          return Fa.__string_rec(this, '');
        },
        K = K || {},
        J,
        Ga = function () {};
      h['lime.app.IModule'] = Ga;
      Ga.__name__ = 'lime.app.IModule';
      Ga.__isInterface__ = !0;
      Ga.prototype = { __class__: Ga };
      var pa = function () {
        this.onExit = new df();
      };
      h['lime.app.Module'] = pa;
      pa.__name__ = 'lime.app.Module';
      pa.__interfaces__ = [Ga];
      pa.prototype = {
        __registerLimeModule: function (a) {},
        __unregisterLimeModule: function (a) {},
        __class__: pa,
      };
      var O = function (a) {
        this.gameDeviceCache = new ic();
        this.parent = a;
        this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
        this.framePeriod = -1;
        he.init();
        this.accelerometer = pe.registerSensor(Ml.ACCELEROMETER, 0);
      };
      h['lime._internal.backend.html5.HTML5Application'] = O;
      O.__name__ = 'lime._internal.backend.html5.HTML5Application';
      O.prototype = {
        convertKeyCode: function (a) {
          if (65 <= a && 90 >= a) return a + 32;
          switch (a) {
            case 12:
              return 1073741980;
            case 16:
              return 1073742049;
            case 17:
              return 1073742048;
            case 18:
              return 1073742050;
            case 19:
              return 1073741896;
            case 20:
              return 1073741881;
            case 33:
              return 1073741899;
            case 34:
              return 1073741902;
            case 35:
              return 1073741901;
            case 36:
              return 1073741898;
            case 37:
              return 1073741904;
            case 38:
              return 1073741906;
            case 39:
              return 1073741903;
            case 40:
              return 1073741905;
            case 41:
              return 1073741943;
            case 43:
              return 1073741940;
            case 44:
              return 1073741894;
            case 45:
              return 1073741897;
            case 46:
              return 127;
            case 91:
              return 1073742051;
            case 92:
              return 1073742055;
            case 93:
              return 1073742055;
            case 95:
              return 1073742106;
            case 96:
              return 1073741922;
            case 97:
              return 1073741913;
            case 98:
              return 1073741914;
            case 99:
              return 1073741915;
            case 100:
              return 1073741916;
            case 101:
              return 1073741917;
            case 102:
              return 1073741918;
            case 103:
              return 1073741919;
            case 104:
              return 1073741920;
            case 105:
              return 1073741921;
            case 106:
              return 1073741909;
            case 107:
              return 1073741911;
            case 108:
              return 1073741923;
            case 109:
              return 1073741910;
            case 110:
              return 1073741923;
            case 111:
              return 1073741908;
            case 112:
              return 1073741882;
            case 113:
              return 1073741883;
            case 114:
              return 1073741884;
            case 115:
              return 1073741885;
            case 116:
              return 1073741886;
            case 117:
              return 1073741887;
            case 118:
              return 1073741888;
            case 119:
              return 1073741889;
            case 120:
              return 1073741890;
            case 121:
              return 1073741891;
            case 122:
              return 1073741892;
            case 123:
              return 1073741893;
            case 124:
              return 1073741928;
            case 125:
              return 1073741929;
            case 126:
              return 1073741930;
            case 127:
              return 1073741931;
            case 128:
              return 1073741932;
            case 129:
              return 1073741933;
            case 130:
              return 1073741934;
            case 131:
              return 1073741935;
            case 132:
              return 1073741936;
            case 133:
              return 1073741937;
            case 134:
              return 1073741938;
            case 135:
              return 1073741939;
            case 144:
              return 1073741907;
            case 145:
              return 1073741895;
            case 160:
              return 94;
            case 161:
              return 33;
            case 163:
              return 35;
            case 164:
              return 36;
            case 166:
              return 1073742094;
            case 167:
              return 1073742095;
            case 168:
              return 1073742097;
            case 169:
              return 41;
            case 170:
              return 42;
            case 171:
              return 96;
            case 172:
              return 1073741898;
            case 173:
              return 45;
            case 174:
              return 1073741953;
            case 175:
              return 1073741952;
            case 176:
              return 1073742082;
            case 177:
              return 1073742083;
            case 178:
              return 1073742084;
            case 179:
              return 1073742085;
            case 180:
              return 1073742089;
            case 181:
              return 1073742086;
            case 182:
              return 1073741953;
            case 183:
              return 1073741952;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 193:
              return 63;
            case 194:
              return 1073741923;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
            case 223:
              return 96;
            case 224:
              return 1073742051;
            case 226:
              return 92;
          }
          return a;
        },
        exec: function () {
          window.addEventListener('keydown', m(this, this.handleKeyEvent), !1);
          window.addEventListener('keyup', m(this, this.handleKeyEvent), !1);
          window.addEventListener('focus', m(this, this.handleWindowEvent), !1);
          window.addEventListener('blur', m(this, this.handleWindowEvent), !1);
          window.addEventListener(
            'resize',
            m(this, this.handleWindowEvent),
            !1,
          );
          window.addEventListener(
            'beforeunload',
            m(this, this.handleWindowEvent),
            !1,
          );
          Object.prototype.hasOwnProperty.call(window, 'Accelerometer') &&
            window.addEventListener(
              'devicemotion',
              m(this, this.handleSensorEvent),
              !1,
            );
          CanvasRenderingContext2D.prototype.isPointInStroke ||
            (CanvasRenderingContext2D.prototype.isPointInStroke = function (
              a,
              b,
              d,
            ) {
              return !1;
            });
          CanvasRenderingContext2D.prototype.isPointInPath ||
            (CanvasRenderingContext2D.prototype.isPointInPath = function (
              a,
              b,
              d,
            ) {
              return !1;
            });
          0 == 'performance' in window && (window.performance = {});
          if (0 == 'now' in window.performance) {
            var a = Date.now();
            performance.timing &&
              performance.timing.navigationStart &&
              (a = performance.timing.navigationStart);
            window.performance.now = function () {
              return Date.now() - a;
            };
          }
          for (
            var b = 0, d = ['ms', 'moz', 'webkit', 'o'], f = 0;
            f < d.length && !window.requestAnimationFrame;
            ++f
          )
            ((window.requestAnimationFrame =
              window[d[f] + 'RequestAnimationFrame']),
              (window.cancelAnimationFrame =
                window[d[f] + 'CancelAnimationFrame'] ||
                window[d[f] + 'CancelRequestAnimationFrame']));
          window.requestAnimationFrame ||
            (window.requestAnimationFrame = function (a, d) {
              var f = window.performance.now(),
                g = Math.max(0, 16 - (f - b));
              d = window.setTimeout(function () {
                a(f + g);
              }, g);
              b = f + g;
              return d;
            });
          window.cancelAnimationFrame ||
            (window.cancelAnimationFrame = function (a) {
              clearTimeout(a);
            });
          window.requestAnimFrame = window.requestAnimationFrame;
          this.lastUpdate = window.performance.now();
          this.handleApplicationEvent();
          return 0;
        },
        exit: function () {},
        handleApplicationEvent: function (a) {
          a = 0;
          for (var b = this.parent.__windows; a < b.length; ) {
            var d = b[a];
            ++a;
            d.__backend.updateSize();
          }
          this.updateGameDevices();
          this.currentUpdate = window.performance.now();
          if (this.currentUpdate >= this.nextUpdate) {
            this.deltaTime = this.currentUpdate - this.lastUpdate;
            a = 0;
            for (b = this.parent.__windows; a < b.length; )
              ((d = b[a]),
                ++a,
                this.parent.onUpdate.dispatch(this.deltaTime | 0),
                null != d.context && d.onRender.dispatch(d.context));
            this.nextUpdate =
              0 > this.framePeriod
                ? this.currentUpdate
                : this.currentUpdate -
                  (this.currentUpdate % this.framePeriod) +
                  this.framePeriod;
            this.lastUpdate = this.currentUpdate;
          }
          window.requestAnimationFrame(m(this, this.handleApplicationEvent));
        },
        handleKeyEvent: function (a) {
          if (null != this.parent.__window) {
            var b = this.convertKeyCode(
                null != a.keyCode ? a.keyCode : a.which,
              ),
              d =
                (a.shiftKey ? 3 : 0) |
                (a.ctrlKey ? 192 : 0) |
                (a.altKey ? 768 : 0) |
                (a.metaKey ? 3072 : 0);
            'keydown' == a.type
              ? (this.parent.__window.onKeyDown.dispatch(b, d),
                this.parent.__window.onKeyDown.canceled &&
                  a.cancelable &&
                  a.preventDefault())
              : (this.parent.__window.onKeyUp.dispatch(b, d),
                this.parent.__window.onKeyUp.canceled &&
                  a.cancelable &&
                  a.preventDefault());
          }
        },
        handleSensorEvent: function (a) {
          this.accelerometer.onUpdate.dispatch(
            a.accelerationIncludingGravity.x,
            a.accelerationIncludingGravity.y,
            a.accelerationIncludingGravity.z,
          );
        },
        handleWindowEvent: function (a) {
          if (null != this.parent.__window)
            switch (a.type) {
              case 'blur':
                this.hidden ||
                  (this.parent.__window.onFocusOut.dispatch(),
                  this.parent.__window.onDeactivate.dispatch(),
                  (this.hidden = !0));
                break;
              case 'focus':
                this.hidden &&
                  (this.parent.__window.onFocusIn.dispatch(),
                  this.parent.__window.onActivate.dispatch(),
                  (this.hidden = !1));
                break;
              case 'resize':
                this.parent.__window.__backend.handleResizeEvent(a);
                break;
              case 'visibilitychange':
                window.document.hidden
                  ? this.hidden ||
                    (this.parent.__window.onFocusOut.dispatch(),
                    this.parent.__window.onDeactivate.dispatch(),
                    (this.hidden = !0))
                  : this.hidden &&
                    (this.parent.__window.onFocusIn.dispatch(),
                    this.parent.__window.onActivate.dispatch(),
                    (this.hidden = !1));
            }
        },
        updateGameDevices: function () {
          var a = jc.__getDeviceData();
          if (null != a)
            for (var b, d, f, g, k, l = 0, u = a.length; l < u; )
              if (((b = l++), (g = a[b]), null != g)) {
                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                  k = new Oj();
                  k.id = b;
                  k.connected = g.connected;
                  d = 0;
                  for (f = g.buttons.length; d < f; ) {
                    var p = d++;
                    k.buttons.push(g.buttons[p].value);
                  }
                  d = 0;
                  for (f = g.axes.length; d < f; )
                    ((p = d++), k.axes.push(g.axes[p]));
                  'standard' == g.mapping && (k.isGamepad = !0);
                  this.gameDeviceCache.h[b] = k;
                  g.connected &&
                    (jc.__connect(b), k.isGamepad && oc.__connect(b));
                }
                k = this.gameDeviceCache.h[b];
                f = jc.devices.h[b];
                d = oc.devices.h[b];
                if (g.connected) {
                  for (var h = 0, r = g.buttons.length; h < r; ) {
                    var n = h++;
                    p = g.buttons[n].value;
                    if (p != k.buttons[n]) {
                      if (6 == n)
                        (f.onAxisMove.dispatch(g.axes.length, p),
                          null != d && d.onAxisMove.dispatch(4, p));
                      else if (7 == n)
                        (f.onAxisMove.dispatch(g.axes.length + 1, p),
                          null != d && d.onAxisMove.dispatch(5, p));
                      else if (
                        (0 < p
                          ? f.onButtonDown.dispatch(n)
                          : f.onButtonUp.dispatch(n),
                        null != d)
                      ) {
                        switch (n) {
                          case 0:
                            b = 0;
                            break;
                          case 1:
                            b = 1;
                            break;
                          case 2:
                            b = 2;
                            break;
                          case 3:
                            b = 3;
                            break;
                          case 4:
                            b = 9;
                            break;
                          case 5:
                            b = 10;
                            break;
                          case 8:
                            b = 4;
                            break;
                          case 9:
                            b = 6;
                            break;
                          case 10:
                            b = 7;
                            break;
                          case 11:
                            b = 8;
                            break;
                          case 12:
                            b = 11;
                            break;
                          case 13:
                            b = 12;
                            break;
                          case 14:
                            b = 13;
                            break;
                          case 15:
                            b = 14;
                            break;
                          case 16:
                            b = 5;
                            break;
                          default:
                            continue;
                        }
                        0 < p
                          ? d.onButtonDown.dispatch(b)
                          : d.onButtonUp.dispatch(b);
                      }
                      k.buttons[n] = p;
                    }
                  }
                  b = 0;
                  for (p = g.axes.length; b < p; )
                    ((h = b++),
                      g.axes[h] != k.axes[h] &&
                        (f.onAxisMove.dispatch(h, g.axes[h]),
                        null != d && d.onAxisMove.dispatch(h, g.axes[h]),
                        (k.axes[h] = g.axes[h])));
                } else
                  k.connected &&
                    ((k.connected = !1),
                    jc.__disconnect(b),
                    oc.__disconnect(b));
              }
        },
        __class__: O,
      };
      var A = function () {
        this.onCreateWindow = new Pj();
        this.onUpdate = new df();
        this.onExit = new df();
        null == A.current && (A.current = this);
        this.meta = new Sa();
        this.modules = [];
        this.__windowByID = new ic();
        this.__windows = [];
        this.__backend = new O(this);
        this.__registerLimeModule(this);
        this.__preloader = new Qj();
        this.__preloader.onProgress.add(m(this, this.onPreloadProgress));
        this.__preloader.onComplete.add(m(this, this.onPreloadComplete));
      };
      h['lime.app.Application'] = A;
      A.__name__ = 'lime.app.Application';
      A.current = null;
      A.__super__ = pa;
      A.prototype = w(pa.prototype, {
        addModule: function (a) {
          a.__registerLimeModule(this);
          this.modules.push(a);
        },
        exec: function () {
          A.current = this;
          return this.__backend.exec();
        },
        onGamepadAxisMove: function (a, b, d) {},
        onGamepadButtonDown: function (a, b) {},
        onGamepadButtonUp: function (a, b) {},
        onGamepadConnect: function (a) {},
        onGamepadDisconnect: function (a) {},
        onJoystickAxisMove: function (a, b, d) {},
        onJoystickButtonDown: function (a, b) {},
        onJoystickButtonUp: function (a, b) {},
        onJoystickConnect: function (a) {},
        onJoystickDisconnect: function (a) {},
        onJoystickHatMove: function (a, b, d) {},
        onKeyDown: function (a, b) {},
        onKeyUp: function (a, b) {},
        onModuleExit: function (a) {},
        onMouseDown: function (a, b, d) {},
        onMouseMove: function (a, b) {},
        onMouseMoveRelative: function (a, b) {},
        onMouseUp: function (a, b, d) {},
        onMouseWheel: function (a, b, d) {},
        onPreloadComplete: function () {},
        onPreloadProgress: function (a, b) {},
        onRenderContextLost: function () {},
        onRenderContextRestored: function (a) {},
        onTextEdit: function (a, b, d) {},
        onTextInput: function (a) {},
        onTouchCancel: function (a) {},
        onTouchEnd: function (a) {},
        onTouchMove: function (a) {},
        onTouchStart: function (a) {},
        onWindowActivate: function () {},
        onWindowClose: function () {},
        onWindowCreate: function () {},
        onWindowDeactivate: function () {},
        onWindowDropFile: function (a) {},
        onWindowEnter: function () {},
        onWindowExpose: function () {},
        onWindowFocusIn: function () {},
        onWindowFocusOut: function () {},
        onWindowFullscreen: function () {},
        onWindowLeave: function () {},
        onWindowMove: function (a, b) {},
        onWindowMinimize: function () {},
        onWindowResize: function (a, b) {},
        onWindowRestore: function () {},
        removeModule: function (a) {
          null != a &&
            (a.__unregisterLimeModule(this), M.remove(this.modules, a));
        },
        render: function (a) {},
        update: function (a) {},
        __registerLimeModule: function (a) {
          a.onUpdate.add(m(this, this.update));
          a.onExit.add(m(this, this.onModuleExit), !1, 0);
          a.onExit.add(m(this, this.__onModuleExit), !1, -1e3);
          for (a = oc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onGamepadConnect(b);
          }
          oc.onConnect.add(m(this, this.__onGamepadConnect));
          for (a = jc.devices.iterator(); a.hasNext(); )
            ((b = a.next()), this.__onJoystickConnect(b));
          jc.onConnect.add(m(this, this.__onJoystickConnect));
          Yb.onCancel.add(m(this, this.onTouchCancel));
          Yb.onStart.add(m(this, this.onTouchStart));
          Yb.onMove.add(m(this, this.onTouchMove));
          Yb.onEnd.add(m(this, this.onTouchEnd));
        },
        __removeWindow: function (a) {
          null != a &&
            this.__windowByID.h.hasOwnProperty(a.id) &&
            (this.__window == a && (this.__window = null),
            M.remove(this.__windows, a),
            this.__windowByID.remove(a.id),
            a.close(),
            this.__checkForAllWindowsClosed());
        },
        __checkForAllWindowsClosed: function () {
          0 == this.__windows.length && pc.exit(0);
        },
        __onGamepadConnect: function (a) {
          this.onGamepadConnect(a);
          var b = this,
            d = function (d, f) {
              b.onGamepadAxisMove(a, d, f);
            };
          a.onAxisMove.add(d);
          var f = this;
          d = function (b) {
            f.onGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(d);
          var g = this;
          d = function (b) {
            g.onGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(d);
          var k = this;
          a.onDisconnect.add(function () {
            k.onGamepadDisconnect(a);
          });
        },
        __onJoystickConnect: function (a) {
          this.onJoystickConnect(a);
          var b = this,
            d = function (d, f) {
              b.onJoystickAxisMove(a, d, f);
            };
          a.onAxisMove.add(d);
          var f = this;
          d = function (b) {
            f.onJoystickButtonDown(a, b);
          };
          a.onButtonDown.add(d);
          var g = this;
          d = function (b) {
            g.onJoystickButtonUp(a, b);
          };
          a.onButtonUp.add(d);
          var k = this;
          a.onDisconnect.add(function () {
            k.onJoystickDisconnect(a);
          });
          var l = this;
          d = function (b, d) {
            l.onJoystickHatMove(a, b, d);
          };
          a.onHatMove.add(d);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (this.__unregisterLimeModule(this),
            this.__backend.exit(),
            A.current == this && (A.current = null));
        },
        __onWindowClose: function (a) {
          if (this.__window == a) this.onWindowClose();
          this.__removeWindow(a);
        },
        __unregisterLimeModule: function (a) {
          a.onUpdate.remove(m(this, this.update));
          a.onExit.remove(m(this, this.__onModuleExit));
          a.onExit.remove(m(this, this.onModuleExit));
          oc.onConnect.remove(m(this, this.__onGamepadConnect));
          jc.onConnect.remove(m(this, this.__onJoystickConnect));
          Yb.onCancel.remove(m(this, this.onTouchCancel));
          Yb.onStart.remove(m(this, this.onTouchStart));
          Yb.onMove.remove(m(this, this.onTouchMove));
          Yb.onEnd.remove(m(this, this.onTouchEnd));
        },
        __class__: A,
      });
      var ha = function () {};
      h.ApplicationMain = ha;
      ha.__name__ = 'ApplicationMain';
      ha.main = function () {
        pc.__registerEntryPoint('Dwellings', ha.create);
      };
      ha.create = function (a) {
        var b = new Cg();
        bb.init(a);
        b.meta.h.build = '2650';
        b.meta.h.company = 'Retronic Games';
        b.meta.h.file = 'Dwellings';
        b.meta.h.name = 'Dwellings';
        b.meta.h.packageName = 'com.watabou.house';
        b.meta.h.version = '1.3.7';
        var d = {
          allowHighDPI: !0,
          alwaysOnTop: !1,
          borderless: !1,
          element: null,
          frameRate: 60,
          height: 0,
          hidden: !1,
          maximized: !1,
          minimized: !1,
          parameters: {},
          resizable: !0,
          title: 'Dwellings',
          width: 0,
          x: null,
          y: null,
          context: {
            antialiasing: 0,
            background: 16777215,
            colorDepth: 32,
            depth: !0,
            hardware: !0,
            stencil: !0,
            type: null,
            vsync: !0,
          },
        };
        if (null == b.__window && null != a)
          for (var f = 0, g = N.fields(a); f < g.length; ) {
            var k = g[f];
            ++f;
            Object.prototype.hasOwnProperty.call(d, k)
              ? (d[k] = N.field(a, k))
              : Object.prototype.hasOwnProperty.call(d.context, k) &&
                (d.context[k] = N.field(a, k));
          }
        b.createWindow(d);
        var l = new ih(new Dg());
        b.__preloader.onProgress.add(function (a, b) {
          l.update(a, b);
        });
        b.__preloader.onComplete.add(function () {
          l.start();
        });
        var u = b.__window.stage;
        l.onComplete.add(function () {
          ha.start(u);
        });
        f = 0;
        for (g = bb.preloadLibraries; f < g.length; )
          ((a = g[f]), ++f, b.__preloader.addLibrary(a));
        f = 0;
        for (g = bb.preloadLibraryNames; f < g.length; )
          ((a = g[f]), ++f, b.__preloader.addLibraryName(a));
        b.__preloader.load();
        b.exec();
      };
      ha.start = function (a) {
        if (a.__uncaughtErrorEvents.__enabled)
          try {
            var b = a.getChildAt(0);
            (null != b && b instanceof hb) || ((b = new ef()), a.addChild(b));
            new qc(b);
            a.dispatchEvent(new sa('resize', !1, !1));
            a.window.__fullscreen &&
              a.dispatchEvent(new Le('fullScreen', !1, !1, !0, !0));
          } catch (d) {
            ((Na.lastError = d),
              (b = Z.caught(d).unwrap()),
              a.__handleError(b));
          }
        else
          ((b = a.getChildAt(0)),
            (null != b && b instanceof hb) || ((b = new ef()), a.addChild(b)),
            new qc(b),
            a.dispatchEvent(new sa('resize', !1, !1)),
            a.window.__fullscreen &&
              a.dispatchEvent(new Le('fullScreen', !1, !1, !0, !0)));
      };
      var T = function () {};
      h['openfl.events.IEventDispatcher'] = T;
      T.__name__ = 'openfl.events.IEventDispatcher';
      T.__isInterface__ = !0;
      var ka = function (a) {
        null != a && (this.__targetDispatcher = a);
      };
      h['openfl.events.EventDispatcher'] = ka;
      ka.__name__ = 'openfl.events.EventDispatcher';
      ka.__interfaces__ = [T];
      ka.prototype = {
        addEventListener: function (a, b, d, f, g) {
          null == g && (g = !1);
          null == f && (f = 0);
          null == d && (d = !1);
          if (null != b)
            if (
              (null == this.__eventMap &&
                ((this.__eventMap = new Sa()), (this.__iterators = new Sa())),
              Object.prototype.hasOwnProperty.call(this.__eventMap.h, a))
            ) {
              p = this.__eventMap.h[a];
              for (var k = 0, l = p.length; k < l; ) {
                var u = k++;
                if (p[u].match(b, d)) return;
              }
              a = this.__iterators.h[a];
              for (k = 0; k < a.length; )
                ((l = a[k]), ++k, l.active && l.copy());
              this.__addListenerByPriority(p, new ff(b, d, f, g));
            } else {
              var p = [];
              p.push(new ff(b, d, f, g));
              l = new Eg(p);
              this.__eventMap.h[a] = p;
              this.__iterators.h[a] = [l];
            }
        },
        dispatchEvent: function (a) {
          a.target =
            null != this.__targetDispatcher ? this.__targetDispatcher : this;
          return this.__dispatchEvent(a);
        },
        hasEventListener: function (a) {
          return null == this.__eventMap
            ? !1
            : Object.prototype.hasOwnProperty.call(this.__eventMap.h, a);
        },
        removeEventListener: function (a, b, d) {
          null == d && (d = !1);
          if (null != this.__eventMap && null != b) {
            var f = this.__eventMap.h[a];
            if (null != f) {
              for (
                var g = this.__iterators.h[a], k = 0, l = f.length;
                k < l;

              ) {
                var u = k++;
                if (f[u].match(b, d)) {
                  for (b = 0; b < g.length; )
                    ((d = g[b]), ++b, d.remove(f[u], u));
                  f.splice(u, 1);
                  break;
                }
              }
              0 == f.length &&
                ((f = this.__eventMap),
                (g = a),
                Object.prototype.hasOwnProperty.call(f.h, g) && delete f.h[g],
                (f = this.__iterators),
                (g = a),
                Object.prototype.hasOwnProperty.call(f.h, g) && delete f.h[g]);
              0 >= Object.keys(this.__eventMap.h).length &&
                (this.__iterators = this.__eventMap = null);
            }
          }
        },
        __dispatchEvent: function (a) {
          if (null == this.__eventMap || null == a) return !0;
          var b = a.type,
            d = this.__eventMap.h[b];
          if (null == d) return !0;
          null == a.target &&
            (a.target =
              null != this.__targetDispatcher ? this.__targetDispatcher : this);
          a.currentTarget = this;
          var f = 1 == a.eventPhase;
          b = this.__iterators.h[b];
          var g = b[0];
          g.active && ((g = new Eg(d)), b.push(g));
          g.start();
          for (var k = g; k.hasNext(); ) {
            var l = k.next();
            if (null != l && l.useCapture == f) {
              if (l.useWeakReference && null != l.weakRefCallback) {
                var u = l.weakRefCallback.deref();
                if (null == u)
                  ((u = g.index - 1), d.splice(u, 1), g.remove(l, u));
                else if (
                  null != Ka.get_current() &&
                  null != Ka.get_current().stage &&
                  Ka.get_current().stage.__uncaughtErrorEvents.__enabled
                )
                  try {
                    u(a);
                  } catch (p) {
                    ((Na.lastError = p),
                      (l = Z.caught(p).unwrap()),
                      a instanceof Mf ||
                        Ka.get_current().stage.__handleError(l));
                  }
                else u(a);
              } else if (
                null != Ka.get_current() &&
                null != Ka.get_current().stage &&
                Ka.get_current().stage.__uncaughtErrorEvents.__enabled
              )
                try {
                  l.callback(a);
                } catch (p) {
                  ((Na.lastError = p),
                    (l = Z.caught(p).unwrap()),
                    a instanceof Mf || Ka.get_current().stage.__handleError(l));
                }
              else l.callback(a);
              if (a.__isCanceledNow) break;
            }
          }
          g.stop();
          g != b[0] ? M.remove(b, g) : g.reset(d);
          return !a.isDefaultPrevented();
        },
        __addListenerByPriority: function (a, b) {
          for (var d = a.length, f = d, g = 0; g < d; ) {
            var k = g++;
            if (a[k].priority < b.priority) {
              f = k;
              break;
            }
          }
          a.splice(f, 0, b);
        },
        __class__: ka,
      };
      var va = function () {};
      h['openfl.display.IBitmapDrawable'] = va;
      va.__name__ = 'openfl.display.IBitmapDrawable';
      va.__isInterface__ = !0;
      va.prototype = { __class__: va };
      var ra = {
          toIntVector: function (a, b, d, f) {
            return new Fg(b, d, f);
          },
          toFloatVector: function (a, b, d, f) {
            return new qe(b, d, f, !0);
          },
          toObjectVector: function (a, b, d, f) {
            return new Nf(b, d, f, !0);
          },
        },
        Ob = function (a, b, d) {
          this.__pool = new za();
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList = new Ba();
          null != a && (this.create = a);
          null != b && (this.clean = b);
          null != d && this.set_size(d);
        };
      h['lime.utils.ObjectPool'] = Ob;
      Ob.__name__ = 'lime.utils.ObjectPool';
      Ob.prototype = {
        clean: function (a) {},
        create: function () {
          return null;
        },
        get: function () {
          var a = null;
          if (0 < this.inactiveObjects)
            (null != this.__inactiveObject0
              ? ((a = this.__inactiveObject0), (this.__inactiveObject0 = null))
              : null != this.__inactiveObject1
                ? ((a = this.__inactiveObject1),
                  (this.__inactiveObject1 = null))
                : ((a = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject1 = this.__inactiveObjectList.pop())),
              this.inactiveObjects--,
              this.activeObjects++);
          else if (null == this.__size || this.activeObjects < this.__size)
            ((a = this.create()),
              null != a && (this.__pool.set(a, !0), this.activeObjects++));
          return a;
        },
        release: function (a) {
          this.activeObjects--;
          null == this.__size ||
          this.activeObjects + this.inactiveObjects < this.__size
            ? (this.clean(a),
              null == this.__inactiveObject0
                ? (this.__inactiveObject0 = a)
                : null == this.__inactiveObject1
                  ? (this.__inactiveObject1 = a)
                  : this.__inactiveObjectList.add(a),
              this.inactiveObjects++)
            : this.__pool.remove(a);
        },
        __removeInactive: function (a) {
          if (
            !(0 >= a || 0 == this.inactiveObjects) &&
            (null != this.__inactiveObject0 &&
              (this.__pool.remove(this.__inactiveObject0),
              (this.__inactiveObject0 = null),
              this.inactiveObjects--,
              --a),
            0 != a &&
              0 != this.inactiveObjects &&
              (null != this.__inactiveObject1 &&
                (this.__pool.remove(this.__inactiveObject1),
                (this.__inactiveObject1 = null),
                this.inactiveObjects--,
                --a),
              0 != a && 0 != this.inactiveObjects))
          )
            for (var b = this.__inactiveObjectList.h; null != b; ) {
              var d = b.item;
              b = b.next;
              this.__pool.remove(d);
              this.__inactiveObjectList.remove(d);
              this.inactiveObjects--;
              --a;
              if (0 == a || 0 == this.inactiveObjects) break;
            }
        },
        set_size: function (a) {
          if (null == a) this.__size = null;
          else {
            var b = this.inactiveObjects + this.activeObjects;
            this.__size = a;
            if (b > a) this.__removeInactive(b - a);
            else if (a > b)
              for (var d = 0, f = a - b; d < f; )
                if ((d++, (b = this.create()), null != b))
                  (this.__pool.set(b, !1),
                    this.__inactiveObjectList.add(b),
                    this.inactiveObjects++);
                else break;
          }
          return a;
        },
        __class__: Ob,
        __properties__: { set_size: 'set_size' },
      };
      var ca = function () {};
      h['haxe.IMap'] = ca;
      ca.__name__ = 'haxe.IMap';
      ca.__isInterface__ = !0;
      ca.prototype = { __class__: ca };
      var za = function () {
        this.h = { __keys__: {} };
      };
      h['haxe.ds.ObjectMap'] = za;
      za.__name__ = 'haxe.ds.ObjectMap';
      za.__interfaces__ = [ca];
      za.prototype = {
        set: function (a, b) {
          var d = a.__id__;
          null == d && (d = a.__id__ = D.$haxeUID++);
          this.h[d] = b;
          this.h.__keys__[d] = a;
        },
        get: function (a) {
          return this.h[a.__id__];
        },
        remove: function (a) {
          a = a.__id__;
          if (null == this.h.__keys__[a]) return !1;
          delete this.h[a];
          delete this.h.__keys__[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h.__keys__)
            this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
          return new cf(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a.__id__];
            },
          };
        },
        __class__: za,
      };
      var Ba = function () {
        this.length = 0;
      };
      h['haxe.ds.List'] = Ba;
      Ba.__name__ = 'haxe.ds.List';
      Ba.prototype = {
        add: function (a) {
          a = new jh(a, null);
          null == this.h ? (this.h = a) : (this.q.next = a);
          this.q = a;
          this.length++;
        },
        push: function (a) {
          this.h = a = new jh(a, this.h);
          null == this.q && (this.q = a);
          this.length++;
        },
        pop: function () {
          if (null == this.h) return null;
          var a = this.h.item;
          this.h = this.h.next;
          null == this.h && (this.q = null);
          this.length--;
          return a;
        },
        isEmpty: function () {
          return null == this.h;
        },
        clear: function () {
          this.q = this.h = null;
          this.length = 0;
        },
        remove: function (a) {
          for (var b = null, d = this.h; null != d; ) {
            if (d.item == a)
              return (
                null == b ? (this.h = d.next) : (b.next = d.next),
                this.q == d && (this.q = b),
                this.length--,
                !0
              );
            b = d;
            d = d.next;
          }
          return !1;
        },
        iterator: function () {
          return new Rj(this.h);
        },
        __class__: Ba,
      };
      var da = function () {
        ka.call(this);
        this.__alpha = this.__drawableType = 1;
        this.__blendMode = 10;
        this.__cacheAsBitmap = !1;
        this.__transform = new qa();
        this.__visible = !0;
        this.__rotationSine = this.__rotation = 0;
        this.__worldAlpha =
          this.__scaleY =
          this.__scaleX =
          this.__rotationCosine =
            1;
        this.__worldBlendMode = 10;
        this.__worldTransform = new qa();
        this.__worldColorTransform = new Ib();
        this.__renderTransform = new qa();
        this.__worldVisible = !0;
        this.set_name('instance' + ++da.__instanceCount);
        null != da.__initStage &&
          ((this.stage = da.__initStage),
          (da.__initStage = null),
          this.stage.addChild(this));
      };
      h['openfl.display.DisplayObject'] = da;
      da.__name__ = 'openfl.display.DisplayObject';
      da.__interfaces__ = [va];
      da.__initStage = null;
      da.__supportDOM = null;
      da.__super__ = ka;
      da.prototype = w(ka.prototype, {
        addEventListener: function (a, b, d, f, g) {
          null == g && (g = !1);
          null == f && (f = 0);
          null == d && (d = !1);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              Object.prototype.hasOwnProperty.call(da.__broadcastEvents.h, a) ||
                (da.__broadcastEvents.h[a] = []);
              var k = da.__broadcastEvents.h[a];
              -1 == k.indexOf(this) && k.push(this);
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              null == this.__customRenderEvent &&
                ((this.__customRenderEvent = new kh(null)),
                (this.__customRenderEvent.objectColorTransform = new Ib()),
                (this.__customRenderEvent.objectMatrix = new qa()),
                (this.__customRenderClear = !0));
          }
          ka.prototype.addEventListener.call(this, a, b, d, f, g);
        },
        dispatchEvent: function (a) {
          if (a instanceof zb) {
            var b = this.__getRenderTransform();
            a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
            b = this.__getRenderTransform();
            a.stageY = a.localX * b.b + a.localY * b.d + b.ty;
          } else
            a instanceof Jd &&
              ((b = this.__getRenderTransform()),
              (a.stageX = a.localX * b.a + a.localY * b.c + b.tx),
              (b = this.__getRenderTransform()),
              (a.stageY = a.localX * b.b + a.localY * b.d + b.ty));
          a.target = this;
          return this.__dispatchWithCapture(a);
        },
        getBounds: function (a) {
          var b = qa.__pool.get();
          if (null != a && a != this) {
            b.copyFrom(this.__getWorldTransform());
            var d = qa.__pool.get();
            d.copyFrom(a.__getWorldTransform());
            d.invert();
            b.concat(d);
            qa.__pool.release(d);
          } else b.identity();
          a = new ja();
          this.__getBounds(a, b);
          qa.__pool.release(b);
          return a;
        },
        globalToLocal: function (a) {
          return this.__globalToLocal(a, new I());
        },
        hitTestPoint: function (a, b, d) {
          null == d && (d = !1);
          return null != this.stage
            ? this.__hitTest(a, b, d, null, !1, this)
            : !1;
        },
        localToGlobal: function (a) {
          return this.__getRenderTransform().transformPoint(a);
        },
        removeEventListener: function (a, b, d) {
          null == d && (d = !1);
          ka.prototype.removeEventListener.call(this, a, b, d);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              this.hasEventListener(a) ||
                (Object.prototype.hasOwnProperty.call(
                  da.__broadcastEvents.h,
                  a,
                ) &&
                  M.remove(da.__broadcastEvents.h[a], this));
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              this.hasEventListener('clearDOM') ||
                this.hasEventListener('renderCairo') ||
                this.hasEventListener('renderCanvas') ||
                this.hasEventListener('renderDOM') ||
                this.hasEventListener('renderOpenGL') ||
                (this.__customRenderEvent = null);
          }
        },
        __cleanup: function () {
          this.__context = this.__canvas = this.__cairo = null;
          null != this.__graphics && this.__graphics.__cleanup();
          null != this.__cacheBitmap &&
            (this.__cacheBitmap.__cleanup(), (this.__cacheBitmap = null));
          null != this.__cacheBitmapData &&
            (this.__cacheBitmapData.dispose(), (this.__cacheBitmapData = null));
        },
        __dispatch: function (a) {
          if (null != this.__eventMap && this.hasEventListener(a.type)) {
            var b = ka.prototype.__dispatchEvent.call(this, a);
            return a.__isCanceled ? !0 : b;
          }
          return !0;
        },
        __dispatchChildren: function (a) {},
        __dispatchEvent: function (a) {
          var b = a.bubbles ? this.parent : null,
            d = ka.prototype.__dispatchEvent.call(this, a);
          if (a.__isCanceled) return !0;
          null != b &&
            b != this &&
            ((a.eventPhase = 3),
            null == a.target && (a.target = this),
            b.__dispatchEvent(a));
          return d;
        },
        __dispatchWithCapture: function (a) {
          null == a.target && (a.target = this);
          if (null != this.parent)
            if (((a.eventPhase = 1), this.parent == this.stage))
              this.parent.__dispatch(a);
            else {
              for (
                var b = da.__tempStack.get(), d = this.parent, f = 0;
                null != d;

              )
                (b.set(f, d), (d = d.parent), ++f);
              d = 0;
              for (var g = f; d < g; ) {
                var k = d++;
                b.get(f - k - 1).__dispatch(a);
              }
              da.__tempStack.release(b);
            }
          a.eventPhase = 2;
          return this.__dispatchEvent(a);
        },
        __enterFrame: function (a) {},
        __getBounds: function (a, b) {
          null != this.__graphics && this.__graphics.__getBounds(a, b);
        },
        __getCursor: function () {
          return null;
        },
        __getFilterBounds: function (a, b) {
          this.__getRenderBounds(a, b);
          if (null != this.__filters) {
            b = ja.__pool.get();
            for (var d = 0, f = this.__filters; d < f.length; ) {
              var g = f[d];
              ++d;
              b.__expand(
                -g.__leftExtension,
                -g.__topExtension,
                g.__leftExtension + g.__rightExtension,
                g.__topExtension + g.__bottomExtension,
              );
            }
            a.width += b.width;
            a.height += b.height;
            a.x += b.x;
            a.y += b.y;
            ja.__pool.release(b);
          }
        },
        __getInteractive: function (a) {
          return !1;
        },
        __getLocalBounds: function (a) {
          this.__getBounds(a, this.__transform);
          a.x -= this.__transform.tx;
          a.y -= this.__transform.ty;
        },
        __getRenderBounds: function (a, b) {
          if (null == this.__scrollRect) this.__getBounds(a, b);
          else {
            var d = ja.__pool.get();
            d.copyFrom(this.__scrollRect);
            d.__transform(d, b);
            a.__expand(d.x, d.y, d.width, d.height);
            ja.__pool.release(d);
          }
        },
        __getRenderTransform: function () {
          this.__getWorldTransform();
          return this.__renderTransform;
        },
        __getWorldTransform: function () {
          if (this.__transformDirty || this.__worldTransformInvalid) {
            var a = [],
              b = this;
            if (null == this.parent) this.__update(!0, !1);
            else
              for (
                ;
                b != this.stage && (a.push(b), (b = b.parent), null != b);

              );
            for (var d = a.length; 0 <= --d; ) ((b = a[d]), b.__update(!0, !1));
          }
          return this.__worldTransform;
        },
        __globalToLocal: function (a, b) {
          this.__getRenderTransform();
          if (a == b) {
            var d = this.__renderTransform,
              f = d.a * d.d - d.b * d.c;
            if (0 == f) ((a.x = -d.tx), (a.y = -d.ty));
            else {
              var g = (1 / f) * (d.c * (d.ty - a.y) + d.d * (a.x - d.tx));
              a.y = (1 / f) * (d.a * (a.y - d.ty) + d.b * (d.tx - a.x));
              a.x = g;
            }
          } else
            ((d = this.__renderTransform),
              (f = d.a * d.d - d.b * d.c),
              (b.x =
                0 == f
                  ? -d.tx
                  : (1 / f) * (d.c * (d.ty - a.y) + d.d * (a.x - d.tx))),
              (d = this.__renderTransform),
              (f = d.a * d.d - d.b * d.c),
              (b.y =
                0 == f
                  ? -d.ty
                  : (1 / f) * (d.a * (a.y - d.ty) + d.b * (d.tx - a.x))));
          return b;
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (null != this.__graphics) {
            if (
              !k.__visible ||
              this.__isMask ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
            )
              return !1;
            if (this.__graphics.__hitTest(a, b, d, this.__getRenderTransform()))
              return (null == f || g || f.push(k), !0);
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          return null != this.__graphics &&
            this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform())
            ? !0
            : !1;
        },
        __readGraphicsData: function (a, b) {
          null != this.__graphics && this.__graphics.__readGraphicsData(a);
        },
        __setParentRenderDirty: function () {
          var a =
            null != this.__renderParent ? this.__renderParent : this.parent;
          null == a ||
            a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty());
        },
        __setStageReference: function (a) {
          this.stage = a;
        },
        __setTransformDirty: function () {
          this.__transformDirty ||
            ((this.__transformDirty = !0),
            this.__setWorldTransformInvalid(),
            this.__setParentRenderDirty());
        },
        __setWorldTransformInvalid: function () {
          this.__worldTransformInvalid = !0;
        },
        __update: function (a, b) {
          var d =
            null != this.__renderParent ? this.__renderParent : this.parent;
          this.__isMask && null == d && (d = this.__maskTarget);
          this.__renderable =
            this.__visible &&
            0 != this.__scaleX &&
            0 != this.__scaleY &&
            !this.__isMask &&
            (null == d || !d.__isMask);
          this.__updateTransforms();
          this.__worldTransformInvalid = this.__transformDirty = !1;
          if (!a)
            if (
              (da.__supportDOM &&
                ((this.__renderTransformChanged =
                  !this.__renderTransform.equals(this.__renderTransformCache)),
                null == this.__renderTransformCache
                  ? (this.__renderTransformCache =
                      this.__renderTransform.clone())
                  : this.__renderTransformCache.copyFrom(
                      this.__renderTransform,
                    )),
              null != d)
            ) {
              if (da.__supportDOM) {
                var f = d.__worldVisible && this.__visible;
                this.__worldVisibleChanged = this.__worldVisible != f;
                this.__worldVisible = f;
              }
              f = this.get_alpha() * d.__worldAlpha;
              this.__worldAlphaChanged = this.__worldAlpha != f;
              this.__worldAlpha = f;
              null != this.__objectTransform
                ? (this.__worldColorTransform.__copyFrom(
                    this.__objectTransform.__colorTransform,
                  ),
                  this.__worldColorTransform.__combine(d.__worldColorTransform))
                : this.__worldColorTransform.__copyFrom(
                    d.__worldColorTransform,
                  );
              this.__worldBlendMode =
                null == this.__blendMode || 10 == this.__blendMode
                  ? d.__worldBlendMode
                  : this.__blendMode;
              this.__worldShader =
                null == this.__shader ? d.__shader : this.__shader;
              this.__worldScale9Grid =
                null == this.__scale9Grid ? d.__scale9Grid : this.__scale9Grid;
            } else
              ((this.__worldAlpha = this.get_alpha()),
                da.__supportDOM &&
                  ((this.__worldVisibleChanged =
                    this.__worldVisible != this.__visible),
                  (this.__worldVisible = this.__visible)),
                (this.__worldAlphaChanged =
                  this.__worldAlpha != this.get_alpha()),
                null != this.__objectTransform
                  ? this.__worldColorTransform.__copyFrom(
                      this.__objectTransform.__colorTransform,
                    )
                  : this.__worldColorTransform.__identity(),
                (this.__worldBlendMode = this.__blendMode),
                (this.__worldShader = this.__shader),
                (this.__worldScale9Grid = this.__scale9Grid));
          b && null != this.get_mask() && this.get_mask().__update(a, !0);
        },
        __updateTransforms: function (a) {
          var b = null != a;
          a = b ? a : this.__transform;
          null == this.__worldTransform && (this.__worldTransform = new qa());
          null == this.__renderTransform && (this.__renderTransform = new qa());
          var d =
            null != this.__renderParent ? this.__renderParent : this.parent;
          if (b || null == this.parent) this.__worldTransform.copyFrom(a);
          else {
            var f = this.parent.__worldTransform,
              g = this.__worldTransform;
            g.a = a.a * f.a + a.b * f.c;
            g.b = a.a * f.b + a.b * f.d;
            g.c = a.c * f.a + a.d * f.c;
            g.d = a.c * f.b + a.d * f.d;
            g.tx = a.tx * f.a + a.ty * f.c + f.tx;
            g.ty = a.tx * f.b + a.ty * f.d + f.ty;
          }
          b || null == d
            ? this.__renderTransform.copyFrom(a)
            : ((f = d.__renderTransform),
              (g = this.__renderTransform),
              (g.a = a.a * f.a + a.b * f.c),
              (g.b = a.a * f.b + a.b * f.d),
              (g.c = a.c * f.a + a.d * f.c),
              (g.d = a.c * f.b + a.d * f.d),
              (g.tx = a.tx * f.a + a.ty * f.c + f.tx),
              (g.ty = a.tx * f.b + a.ty * f.d + f.ty));
          null != this.__scrollRect &&
            ((b = this.__renderTransform),
            (a = -this.__scrollRect.x),
            (d = -this.__scrollRect.y),
            (b.tx = a * b.a + d * b.c + b.tx),
            (b.ty = a * b.b + d * b.d + b.ty));
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          1 < a && (a = 1);
          0 > a && (a = 0);
          a == this.__alpha ||
            this.get_cacheAsBitmap() ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__alpha = a);
        },
        get_blendMode: function () {
          return this.__blendMode;
        },
        set_blendMode: function (a) {
          null == a && (a = 10);
          a == this.__blendMode ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__blendMode = a);
        },
        get_cacheAsBitmap: function () {
          return null == this.__filters ? this.__cacheAsBitmap : !0;
        },
        get_filters: function () {
          return null == this.__filters ? [] : this.__filters.slice();
        },
        set_filters: function (a) {
          if (null != a && 0 < a.length) {
            for (var b = [], d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              f = f.clone();
              f.__renderDirty = !0;
              b.push(f);
            }
            this.__filters = b;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          } else
            null != this.__filters &&
              ((this.__filters = null),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return a;
        },
        get_height: function () {
          var a = ja.__pool.get();
          this.__getLocalBounds(a);
          var b = a.height;
          ja.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = ja.__pool.get(),
            d = qa.__pool.get();
          d.identity();
          this.__getBounds(b, d);
          a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
          ja.__pool.release(b);
          qa.__pool.release(d);
          return a;
        },
        get_loaderInfo: function () {
          return null != this.stage ? yc.current.__loaderInfo : null;
        },
        get_mask: function () {
          return this.__mask;
        },
        set_mask: function (a) {
          if (a == this.__mask) return a;
          a != this.__mask &&
            (this.__setTransformDirty(),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          if (null != this.__mask) {
            this.__mask.__isMask = !1;
            this.__mask.__maskTarget = null;
            this.__mask.__setTransformDirty();
            var b = this.__mask;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          null != a &&
            ((a.__isMask = !0),
            (a.__maskTarget = this),
            a.__setWorldTransformInvalid());
          null != this.__cacheBitmap &&
            this.__cacheBitmap.get_mask() != a &&
            this.__cacheBitmap.set_mask(a);
          return (this.__mask = a);
        },
        get_mouseX: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : yc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : yc.current.stage.__mouseY,
            d = this.__getRenderTransform(),
            f = d.a * d.d - d.b * d.c;
          return 0 == f
            ? -d.tx
            : (1 / f) * (d.c * (d.ty - b) + d.d * (a - d.tx));
        },
        get_mouseY: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : yc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : yc.current.stage.__mouseY,
            d = this.__getRenderTransform(),
            f = d.a * d.d - d.b * d.c;
          return 0 == f
            ? -d.ty
            : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a));
        },
        get_name: function () {
          return this.__name;
        },
        set_name: function (a) {
          return (this.__name = a);
        },
        get_root: function () {
          return null != this.stage ? yc.current : null;
        },
        get_rotation: function () {
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            a %= 360;
            180 < a ? (a -= 360) : -180 > a && (a += 360);
            this.__rotation = a;
            var b = (Math.PI / 180) * this.__rotation;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            this.__transform.a = this.__rotationCosine * this.__scaleX;
            this.__transform.b = this.__rotationSine * this.__scaleX;
            this.__transform.c = -this.__rotationSine * this.__scaleY;
            this.__transform.d = this.__rotationCosine * this.__scaleY;
            this.__setTransformDirty();
          }
          return a;
        },
        get_scaleX: function () {
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX)
            if (((this.__scaleX = a), 0 == this.__transform.b))
              (a != this.__transform.a && this.__setTransformDirty(),
                (this.__transform.a = a));
            else {
              var b = this.__rotationCosine * a,
                d = this.__rotationSine * a;
              (this.__transform.a == b && this.__transform.b == d) ||
                this.__setTransformDirty();
              this.__transform.a = b;
              this.__transform.b = d;
            }
          return a;
        },
        get_scaleY: function () {
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY)
            if (((this.__scaleY = a), 0 == this.__transform.c))
              (a != this.__transform.d && this.__setTransformDirty(),
                (this.__transform.d = a));
            else {
              var b = -this.__rotationSine * a,
                d = this.__rotationCosine * a;
              (this.__transform.d == d && this.__transform.c == b) ||
                this.__setTransformDirty();
              this.__transform.c = b;
              this.__transform.d = d;
            }
          return a;
        },
        get_scrollRect: function () {
          return null == this.__scrollRect ? null : this.__scrollRect.clone();
        },
        get_transform: function () {
          null == this.__objectTransform &&
            (this.__objectTransform = new lh(this));
          return this.__objectTransform;
        },
        set_transform: function (a) {
          if (null == a) throw new gf('Parameter transform must be non-null.');
          null == this.__objectTransform &&
            (this.__objectTransform = new lh(this));
          this.__setTransformDirty();
          this.__objectTransform.set_matrix(a.get_matrix());
          if (
            !this.__objectTransform.__colorTransform.__equals(
              a.__colorTransform,
              !0,
            ) ||
            (!this.get_cacheAsBitmap() &&
              this.__objectTransform.__colorTransform.alphaMultiplier !=
                a.__colorTransform.alphaMultiplier)
          )
            (this.__objectTransform.__colorTransform.__copyFrom(
              a.get_colorTransform(),
            ),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__objectTransform;
        },
        get_visible: function () {
          return this.__visible;
        },
        set_visible: function (a) {
          a == this.__visible ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__visible = a);
        },
        get_width: function () {
          var a = ja.__pool.get();
          this.__getLocalBounds(a);
          var b = a.width;
          ja.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = ja.__pool.get(),
            d = qa.__pool.get();
          d.identity();
          this.__getBounds(b, d);
          a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
          ja.__pool.release(b);
          qa.__pool.release(d);
          return a;
        },
        get_x: function () {
          return this.__transform.tx;
        },
        set_x: function (a) {
          a != this.__transform.tx && this.__setTransformDirty();
          return (this.__transform.tx = a);
        },
        get_y: function () {
          return this.__transform.ty;
        },
        set_y: function (a) {
          a != this.__transform.ty && this.__setTransformDirty();
          return (this.__transform.ty = a);
        },
        __class__: da,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          set_visible: 'set_visible',
          get_visible: 'get_visible',
          set_transform: 'set_transform',
          get_transform: 'get_transform',
          get_scrollRect: 'get_scrollRect',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          get_root: 'get_root',
          set_name: 'set_name',
          get_name: 'get_name',
          get_mouseY: 'get_mouseY',
          get_mouseX: 'get_mouseX',
          set_mask: 'set_mask',
          get_mask: 'get_mask',
          get_loaderInfo: 'get_loaderInfo',
          set_height: 'set_height',
          get_height: 'get_height',
          set_filters: 'set_filters',
          get_filters: 'get_filters',
          get_cacheAsBitmap: 'get_cacheAsBitmap',
          set_blendMode: 'set_blendMode',
          get_blendMode: 'get_blendMode',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      });
      var wa = function () {
        da.call(this);
        this.doubleClickEnabled = !1;
        this.mouseEnabled = !0;
        this.needsSoftKeyboard = !1;
        this.__tabEnabled = null;
        this.__tabIndex = -1;
      };
      h['openfl.display.InteractiveObject'] = wa;
      wa.__name__ = 'openfl.display.InteractiveObject';
      wa.__super__ = da;
      wa.prototype = w(da.prototype, {
        __allowMouseFocus: function () {
          return this.mouseEnabled ? this.get_tabEnabled() : !1;
        },
        __getInteractive: function (a) {
          null != a &&
            (a.push(this),
            null != this.parent && this.parent.__getInteractive(a));
          return !0;
        },
        __hitTest: function (a, b, d, f, g, k) {
          return !k.get_visible() || this.__isMask || (g && !this.mouseEnabled)
            ? !1
            : da.prototype.__hitTest.call(this, a, b, d, f, g, k);
        },
        __tabTest: function (a) {
          this.get_tabEnabled() && a.push(this);
        },
        get_tabEnabled: function () {
          return 1 == this.__tabEnabled ? !0 : !1;
        },
        get_tabIndex: function () {
          return this.__tabIndex;
        },
        __class__: wa,
        __properties__: w(da.prototype.__properties__, {
          get_tabIndex: 'get_tabIndex',
          get_tabEnabled: 'get_tabEnabled',
        }),
      });
      var hb = function () {
        wa.call(this);
        this.__tabChildren = this.mouseChildren = !0;
        this.__children = [];
        this.__removedChildren = ra.toObjectVector(null);
      };
      h['openfl.display.DisplayObjectContainer'] = hb;
      hb.__name__ = 'openfl.display.DisplayObjectContainer';
      hb.__super__ = wa;
      hb.prototype = w(wa.prototype, {
        addChild: function (a) {
          return this.addChildAt(a, this.get_numChildren());
        },
        addChildAt: function (a, b) {
          if (null == a)
            throw (
              (a = new gf('Error #2007: Parameter child must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (a == this)
            throw (
              (a = new hf(
                'Error #2024: An object cannot be added as a child of itself.',
              )),
              (a.errorID = 2024),
              a
            );
          if (a.stage == a)
            throw (
              (a = new hf(
                'Error #3783: A Stage object cannot be added as the child of another object.',
              )),
              (a.errorID = 3783),
              a
            );
          if (b > this.__children.length || 0 > b)
            throw Z.thrown('Invalid index position ' + b);
          if (a.parent == this)
            this.__children[b] != a &&
              (M.remove(this.__children, a),
              this.__children.splice(b, 0, a),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else {
            null != a.parent && a.parent.removeChild(a);
            this.__children.splice(b, 0, a);
            a.parent = this;
            (b = null != this.stage && null == a.stage) &&
              a.__setStageReference(this.stage);
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var d = new sa('added');
            d.bubbles = !0;
            d.target = a;
            a.__dispatchWithCapture(d);
            b &&
              ((d = new sa('addedToStage', !1, !1)),
              a.__dispatchWithCapture(d),
              a.__dispatchChildren(d));
          }
          return a;
        },
        getChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.__children[a]
            : null;
        },
        getChildByName: function (a) {
          for (var b = 0, d = this.__children; b < d.length; ) {
            var f = d[b];
            ++b;
            if (f.get_name() == a) return f;
          }
          return null;
        },
        getChildIndex: function (a) {
          for (var b = 0, d = this.__children.length; b < d; ) {
            var f = b++;
            if (this.__children[f] == a) return f;
          }
          return -1;
        },
        removeChild: function (a) {
          if (null != a && a.parent == this) {
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var b = new sa('removed', !0);
            a.__dispatchWithCapture(b);
            null != this.stage &&
              (null != a.stage &&
                this.stage.get_focus() == a &&
                this.stage.set_focus(null),
              (b = new sa('removedFromStage', !1, !1)),
              a.__dispatchWithCapture(b),
              a.__dispatchChildren(b),
              a.__setStageReference(null));
            a.parent = null;
            M.remove(this.__children, a);
            this.__removedChildren.push(a);
            a.__setTransformDirty();
          }
          return a;
        },
        removeChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.removeChild(this.__children[a])
            : null;
        },
        removeChildren: function (a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (2147483647 == b && ((b = this.__children.length - 1), 0 > b))
            return;
          if (!(a > this.__children.length - 1)) {
            if (b < a || 0 > a || b > this.__children.length)
              throw new Gg('The supplied index is out of bounds.');
            for (b -= a; 0 <= b; ) (this.removeChildAt(a), --b);
          }
        },
        __cleanup: function () {
          wa.prototype.__cleanup.call(this);
          for (var a = 0, b = this.__children; a < b.length; ) {
            var d = b[a];
            ++a;
            d.__cleanup();
          }
          for (a = this.__removedChildren.iterator(); a.hasNext(); )
            ((b = a.next()), null == b.stage && b.__cleanup());
          this.__removedChildren.set_length(0);
        },
        __dispatchChildren: function (a) {
          if (null != this.__children)
            for (var b = 0, d = this.__children; b < d.length; ) {
              var f = d[b];
              ++b;
              a.target = f;
              if (!f.__dispatchWithCapture(a)) break;
              f.__dispatchChildren(a);
            }
        },
        __enterFrame: function (a) {
          for (var b = 0, d = this.__children; b < d.length; ) {
            var f = d[b];
            ++b;
            f.__enterFrame(a);
          }
        },
        __getBounds: function (a, b) {
          wa.prototype.__getBounds.call(this, a, b);
          if (0 != this.__children.length) {
            for (
              var d = qa.__pool.get(), f = 0, g = this.__children;
              f < g.length;

            ) {
              var k = g[f];
              ++f;
              if (0 != k.__scaleX && 0 != k.__scaleY) {
                var l = k.__transform;
                d.a = l.a * b.a + l.b * b.c;
                d.b = l.a * b.b + l.b * b.d;
                d.c = l.c * b.a + l.d * b.c;
                d.d = l.c * b.b + l.d * b.d;
                d.tx = l.tx * b.a + l.ty * b.c + b.tx;
                d.ty = l.tx * b.b + l.ty * b.d + b.ty;
                k.__getBounds(a, d);
              }
            }
            qa.__pool.release(d);
          }
        },
        __getFilterBounds: function (a, b) {
          wa.prototype.__getFilterBounds.call(this, a, b);
          if (null == this.__scrollRect && 0 != this.__children.length) {
            for (
              var d = qa.__pool.get(), f = 0, g = this.__children;
              f < g.length;

            ) {
              var k = g[f];
              ++f;
              if (0 != k.__scaleX && 0 != k.__scaleY && !k.__isMask) {
                var l = k.__transform;
                d.a = l.a * b.a + l.b * b.c;
                d.b = l.a * b.b + l.b * b.d;
                d.c = l.c * b.a + l.d * b.c;
                d.d = l.c * b.b + l.d * b.d;
                d.tx = l.tx * b.a + l.ty * b.c + b.tx;
                d.ty = l.tx * b.b + l.ty * b.d + b.ty;
                l = ja.__pool.get();
                k.__getFilterBounds(l, d);
                a.__expand(l.x, l.y, l.width, l.height);
                ja.__pool.release(l);
              }
            }
            qa.__pool.release(d);
          }
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            wa.prototype.__getRenderBounds.call(this, a, b);
          else if (
            (wa.prototype.__getBounds.call(this, a, b),
            0 != this.__children.length)
          ) {
            for (
              var d = qa.__pool.get(), f = 0, g = this.__children;
              f < g.length;

            ) {
              var k = g[f];
              ++f;
              if (0 != k.__scaleX && 0 != k.__scaleY && !k.__isMask) {
                var l = k.__transform;
                d.a = l.a * b.a + l.b * b.c;
                d.b = l.a * b.b + l.b * b.d;
                d.c = l.c * b.a + l.d * b.c;
                d.d = l.c * b.b + l.d * b.d;
                d.tx = l.tx * b.a + l.ty * b.c + b.tx;
                d.ty = l.tx * b.b + l.ty * b.d + b.ty;
                k.__getRenderBounds(a, d);
              }
            }
            qa.__pool.release(d);
          }
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (
            !k.get_visible() ||
            this.__isMask ||
            (g && !this.mouseEnabled && !this.mouseChildren) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          if (null != this.__scrollRect) {
            var l = I.__pool.get();
            l.setTo(a, b);
            var u = this.__getRenderTransform(),
              p = u.a * u.d - u.b * u.c;
            if (0 == p) ((l.x = -u.tx), (l.y = -u.ty));
            else {
              var h = (1 / p) * (u.c * (u.ty - l.y) + u.d * (l.x - u.tx));
              l.y = (1 / p) * (u.a * (l.y - u.ty) + u.b * (u.tx - l.x));
              l.x = h;
            }
            if (!this.__scrollRect.containsPoint(l))
              return (I.__pool.release(l), !1);
            I.__pool.release(l);
          }
          l = this.__children.length;
          if (g)
            if (null == f || !this.mouseChildren)
              for (; 0 <= --l; ) {
                if (
                  this.__children[l].__hitTest(
                    a,
                    b,
                    d,
                    null,
                    !0,
                    this.__children[l],
                  )
                )
                  return (null != f && f.push(k), !0);
              }
            else {
              if (null != f) {
                g = f.length;
                for (
                  p = !1;
                  0 <= --l &&
                  !(
                    ((u = this.__children[l].__getInteractive(null)) ||
                      (this.mouseEnabled && !p)) &&
                    this.__children[l].__hitTest(
                      a,
                      b,
                      d,
                      f,
                      !0,
                      this.__children[l],
                    ) &&
                    ((p = !0), u && f.length > g)
                  );

                );
                if (p) return (f.splice(g, 0, k), !0);
              }
            }
          else {
            for (
              p = !1;
              0 <= --l &&
              (!this.__children[l].__hitTest(
                a,
                b,
                d,
                f,
                !1,
                this.__children[l],
              ) ||
                ((p = !0), null != f));

            );
            return p;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          for (var d = this.__children.length; 0 <= --d; )
            if (this.__children[d].__hitTestMask(a, b)) return !0;
          return !1;
        },
        __readGraphicsData: function (a, b) {
          wa.prototype.__readGraphicsData.call(this, a, b);
          if (b)
            for (var d = 0, f = this.__children; d < f.length; ) {
              var g = f[d];
              ++d;
              g.__readGraphicsData(a, b);
            }
        },
        __setStageReference: function (a) {
          wa.prototype.__setStageReference.call(this, a);
          if (null != this.__children)
            for (var b = 0, d = this.__children; b < d.length; ) {
              var f = d[b];
              ++b;
              f.__setStageReference(a);
            }
        },
        __setWorldTransformInvalid: function () {
          if (
            !this.__worldTransformInvalid &&
            ((this.__worldTransformInvalid = !0), null != this.__children)
          )
            for (var a = 0, b = this.__children; a < b.length; ) {
              var d = b[a];
              ++a;
              d.__setWorldTransformInvalid();
            }
        },
        __tabTest: function (a) {
          wa.prototype.__tabTest.call(this, a);
          if (this.get_tabChildren())
            for (var b, d = 0, f = this.__children; d < f.length; ) {
              var g = f[d];
              ++d;
              if ((b = g.__getInteractive(null))) ((b = g), b.__tabTest(a));
            }
        },
        __update: function (a, b) {
          wa.prototype.__update.call(this, a, b);
          if (b) {
            b = 0;
            for (var d = this.__children; b < d.length; ) {
              var f = d[b];
              ++b;
              f.__update(a, !0);
            }
          }
        },
        get_numChildren: function () {
          return this.__children.length;
        },
        get_tabChildren: function () {
          return this.__tabChildren;
        },
        __class__: hb,
        __properties__: w(wa.prototype.__properties__, {
          get_tabChildren: 'get_tabChildren',
          get_numChildren: 'get_numChildren',
        }),
      });
      var ba = function () {
        hb.call(this);
        this.__drawableType = 4;
        this.__buttonMode = !1;
        this.useHandCursor = !0;
        if (null != this.__pendingBindLibrary) {
          var a = this.__pendingBindLibrary,
            b = this.__pendingBindClassName;
          this.__pendingBindClassName = this.__pendingBindLibrary = null;
          a.bind(b, this);
        } else
          null != ba.__constructor &&
            ((a = ba.__constructor), (ba.__constructor = null), a(this));
      };
      h['openfl.display.Sprite'] = ba;
      ba.__name__ = 'openfl.display.Sprite';
      ba.__constructor = null;
      ba.__super__ = hb;
      ba.prototype = w(hb.prototype, {
        stopDrag: function () {
          null != this.stage && this.stage.__stopDrag(this);
        },
        __setStageReference: function (a) {
          this.stage != a &&
            null != this.stage &&
            this.stage.__dragObject == this &&
            this.stopDrag();
          hb.prototype.__setStageReference.call(this, a);
        },
        __getCursor: function () {
          return this.__buttonMode && this.useHandCursor ? 'button' : null;
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (g && !this.mouseEnabled && !this.mouseChildren) return !1;
          if (
            !k.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return this.__hitTestHitArea(a, b, d, f, g, k);
          if (null != this.__scrollRect) {
            var l = I.__pool.get();
            l.setTo(a, b);
            var u = this.__getRenderTransform(),
              p = u.a * u.d - u.b * u.c;
            if (0 == p) ((l.x = -u.tx), (l.y = -u.ty));
            else {
              var h = (1 / p) * (u.c * (u.ty - l.y) + u.d * (l.x - u.tx));
              l.y = (1 / p) * (u.a * (l.y - u.ty) + u.b * (u.tx - l.x));
              l.x = h;
            }
            if (!this.__scrollRect.containsPoint(l))
              return (
                I.__pool.release(l),
                this.__hitTestHitArea(a, b, d, f, !0, k)
              );
            I.__pool.release(l);
          }
          return hb.prototype.__hitTest.call(this, a, b, d, f, g, k)
            ? null != f
              ? g
              : !0
            : null == this.hitArea &&
                null != this.__graphics &&
                this.__graphics.__hitTest(a, b, d, this.__getRenderTransform())
              ? (null == f || (g && !this.mouseEnabled) || f.push(k), !0)
              : this.__hitTestHitArea(a, b, d, f, g, k);
        },
        __hitTestHitArea: function (a, b, d, f, g, k) {
          return null == this.hitArea || this.hitArea.mouseEnabled
            ? !1
            : ((this.hitArea.mouseEnabled = !0),
              (a = this.hitArea.__hitTest(a, b, d, null, !0, k)),
              (this.hitArea.mouseEnabled = !1),
              null != f && a && (f[f.length] = k),
              a);
        },
        __hitTestMask: function (a, b) {
          return hb.prototype.__hitTestMask.call(this, a, b) ||
            (null != this.__graphics &&
              this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()))
            ? !0
            : !1;
        },
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new cd(this));
          return this.__graphics;
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? this.__buttonMode
            : this.__tabEnabled;
        },
        get_buttonMode: function () {
          return this.__buttonMode;
        },
        set_buttonMode: function (a) {
          return (this.__buttonMode = a);
        },
        __class__: ba,
        __properties__: w(hb.prototype.__properties__, {
          get_graphics: 'get_graphics',
          set_buttonMode: 'set_buttonMode',
          get_buttonMode: 'get_buttonMode',
        }),
      });
      var db = function (a) {
        db.instance = this;
        ba.call(this);
        this.prepareStage();
        Cb.useEnterFrame(this);
        db.switchScene(a);
      };
      h['com.watabou.coogee.Game'] = db;
      db.__name__ = 'com.watabou.coogee.Game';
      db.instance = null;
      db.scene = null;
      db.switchScene = function (a) {
        db.instance.switchSceneImp(a);
      };
      db.quit = function () {};
      db.__super__ = ba;
      db.prototype = w(ba.prototype, {
        prepareStage: function () {
          var a = this;
          this.stage.align = 6;
          this.stage.set_scaleMode(2);
          this.stage.addEventListener('resize', function (b) {
            a.layout();
          });
          this.stage.application.onExit.add(m(this, this.onExit));
          this.stage.application.__window.onActivate.add(
            m(this, this.onResume),
          );
          this.stage.application.__window.onDeactivate.add(
            m(this, this.onPause),
          );
        },
        onExit: function (a) {
          Cb.stop();
        },
        onResume: function () {},
        onPause: function () {},
        layout: function () {
          if (null != db.scene) {
            var a = this.stage.stageWidth,
              b = this.stage.stageHeight,
              d = this.getScale(a, b);
            db.scene.set_scaleX(db.scene.set_scaleY(d));
            db.scene.setSize(a / d, b / d);
          }
        },
        getScale: function (a, b) {
          return 1;
        },
        switchSceneImp: function (a) {
          null != db.scene &&
            (db.scene.deactivate(),
            this.removeChild(db.scene),
            (db.scene = null));
          null != a &&
            ((db.scene = ib.createInstance(a, [])),
            this.addChild(db.scene),
            this.layout(),
            db.scene.activate());
          this.stage.set_focus(this.stage);
        },
        __class__: db,
      });
      var cc = function () {
        t.reset();
        this.stage.showDefaultContextMenu = !1;
        r.useDefault();
        fb.baseURL = 'https://watabou.github.io/dwellings/';
        Q.restorePalette();
        pb.restoreStyle();
        var a = Rd.fromURL();
        Sc.reset(null != a ? a : Rd.random());
        db.call(this, ub.getScene());
      };
      h['com.watabou.dwellings.Main'] = cc;
      cc.__name__ = 'com.watabou.dwellings.Main';
      cc.setUIColors = function (a, b) {
        if (Ya.brightness(a) < Ya.brightness(b)) {
          var d = a;
          a = b;
          b = d;
        }
        r.black = b;
        r.dark = Ya.lerpHSV(b, a, 0.3);
        r.medium = Ya.lerpHSV(b, a, 0.6);
        r.light = Ya.lerpHSV(b, a, 0.8);
        r.white = a;
      };
      cc.__super__ = db;
      cc.prototype = w(db.prototype, {
        switchSceneImp: function (a) {
          null == ta.layer && (ta.layer = new W());
          db.prototype.switchSceneImp.call(this, a);
          this.addChild(ta.layer);
          ta.wipe();
        },
        layout: function () {
          db.prototype.layout.call(this);
          ta.layer.setSize(this.stage.stageWidth, this.stage.stageHeight);
        },
        __class__: cc,
      });
      var qc = function (a) {
        a.addChild(this);
        cc.call(this);
        this.dispatchEvent(new sa('addedToStage', !1, !1));
      };
      h.DocumentClass = qc;
      qc.__name__ = 'DocumentClass';
      qc.__super__ = cc;
      qc.prototype = w(cc.prototype, { __class__: qc });
      var xa = function (a, b) {
        this.r = new RegExp(a, b.split('u').join(''));
      };
      h.EReg = xa;
      xa.__name__ = 'EReg';
      xa.prototype = {
        match: function (a) {
          this.r.global && (this.r.lastIndex = 0);
          this.r.m = this.r.exec(a);
          this.r.s = a;
          return null != this.r.m;
        },
        matched: function (a) {
          if (null != this.r.m && 0 <= a && a < this.r.m.length)
            return this.r.m[a];
          throw Z.thrown('EReg::matched');
        },
        matchedPos: function () {
          if (null == this.r.m) throw Z.thrown('No string matched');
          return { pos: this.r.m.index, len: this.r.m[0].length };
        },
        matchSub: function (a, b, d) {
          null == d && (d = -1);
          if (this.r.global) {
            if (
              ((this.r.lastIndex = b),
              (this.r.m = this.r.exec(0 > d ? a : M.substr(a, 0, b + d))),
              (d = null != this.r.m))
            )
              this.r.s = a;
          } else if (
            (d = this.match(0 > d ? M.substr(a, b, null) : M.substr(a, b, d)))
          )
            ((this.r.s = a), (this.r.m.index += b));
          return d;
        },
        split: function (a) {
          return a.replace(this.r, '#__delim__#').split('#__delim__#');
        },
        map: function (a, b) {
          var d = 0,
            f = '';
          do {
            if (d >= a.length) break;
            else if (!this.matchSub(a, d)) {
              f += G.string(M.substr(a, d, null));
              break;
            }
            var g = this.matchedPos();
            f += G.string(M.substr(a, d, g.pos - d));
            f += G.string(b(this));
            0 == g.len
              ? ((f += G.string(M.substr(a, g.pos, 1))), (d = g.pos + 1))
              : (d = g.pos + g.len);
          } while (this.r.global);
          !this.r.global &&
            0 < d &&
            d < a.length &&
            (f += G.string(M.substr(a, d, null)));
          return f;
        },
        __class__: xa,
      };
      var M = function () {};
      h.HxOverrides = M;
      M.__name__ = 'HxOverrides';
      M.strDate = function (a) {
        switch (a.length) {
          case 8:
            a = a.split(':');
            var b = new Date();
            b.setTime(0);
            b.setUTCHours(a[0]);
            b.setUTCMinutes(a[1]);
            b.setUTCSeconds(a[2]);
            return b;
          case 10:
            return (
              (a = a.split('-')),
              new Date(a[0], a[1] - 1, a[2], 0, 0, 0)
            );
          case 19:
            return (
              (a = a.split(' ')),
              (b = a[0].split('-')),
              (a = a[1].split(':')),
              new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2])
            );
          default:
            throw Z.thrown('Invalid date format : ' + a);
        }
      };
      M.cca = function (a, b) {
        a = a.charCodeAt(b);
        if (a == a) return a;
      };
      M.substr = function (a, b, d) {
        if (null == d) d = a.length;
        else if (0 > d)
          if (0 == b) d = a.length + d;
          else return '';
        return a.substr(b, d);
      };
      M.remove = function (a, b) {
        b = a.indexOf(b);
        if (-1 == b) return !1;
        a.splice(b, 1);
        return !0;
      };
      M.now = function () {
        return Date.now();
      };
      var F = function () {};
      h.Lambda = F;
      F.__name__ = 'Lambda';
      F.array = function (a) {
        var b = [];
        for (a = H(a); a.hasNext(); ) {
          var d = a.next();
          b.push(d);
        }
        return b;
      };
      var bb = function () {};
      h.ManifestResources = bb;
      bb.__name__ = 'ManifestResources';
      bb.preloadLibraries = null;
      bb.preloadLibraryNames = null;
      bb.rootPath = null;
      bb.init = function (a) {
        bb.preloadLibraries = [];
        bb.preloadLibraryNames = [];
        bb.rootPath = null;
        null != a &&
          Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          ((bb.rootPath = N.field(a, 'rootPath')),
          R.endsWith(bb.rootPath, '/') || (bb.rootPath += '/'));
        null == bb.rootPath && (bb.rootPath = './');
        ua.registerFont(na);
        ua.registerFont(Y);
        a = ld.parse(
          '{"name":null,"assets":"aoy4:sizei46596y4:typey4:FONTy9:classNamey37:__ASSET__assets_sharetech_regular_ttfy2:idy7:ui_fonty7:preloadtgoR0i42756R1R2R3y41:__ASSET__assets_sharetechmono_regular_ttfR5y12:ui_font_monoR7tgoy4:pathy21:Assets%2Fgothic.json5R0i3221R1y4:TEXTR5y6:gothicR7tgoR10y21:Assets%2Fgrammar.jsonR0i899R1R12R5y7:grammarR7tgoR10y21:Assets%2Fnatural.jsonR0i476R1R12R5y7:naturalR7tgoR10y20:Assets%2Fwooden.jsonR0i476R1R12R5y6:woodenR7tgoR10y19:Assets%2Fplain.jsonR0i478R1R12R5y5:plainR7tgoR10y23:Assets%2Fblueprint.jsonR0i476R1R12R5y9:blueprintR7tgoR10y16:Assets%2Fbw.jsonR0i475R1R12R5y2:bwR7tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
          bb.rootPath,
        );
        a = Mb.fromManifest(a);
        Aa.registerLibrary('default', a);
        a = Aa.getLibrary('default');
        null != a
          ? bb.preloadLibraries.push(a)
          : bb.preloadLibraryNames.push('default');
      };
      var Bb = function (a) {
        null != a && (this.name = a);
        this.__init ||
          (void 0 == this.ascender && (this.ascender = 0),
          void 0 == this.descender && (this.descender = 0),
          void 0 == this.height && (this.height = 0),
          void 0 == this.numGlyphs && (this.numGlyphs = 0),
          void 0 == this.underlinePosition && (this.underlinePosition = 0),
          void 0 == this.underlineThickness && (this.underlineThickness = 0),
          void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
          null != this.__fontID
            ? Aa.isLocal(this.__fontID) &&
              this.__fromBytes(Aa.getBytes(this.__fontID))
            : null != this.__fontPath && this.__fromFile(this.__fontPath));
      };
      h['lime.text.Font'] = Bb;
      Bb.__name__ = 'lime.text.Font';
      Bb.fromFile = function (a) {
        if (null == a) return null;
        var b = new Bb();
        b.__fromFile(a);
        return b;
      };
      Bb.loadFromName = function (a) {
        return new Bb().__loadFromName(a);
      };
      Bb.__measureFontNode = function (a) {
        var b = window.document.createElement('span');
        b.setAttribute('aria-hidden', 'true');
        var d = window.document.createTextNode('BESbswy');
        b.appendChild(d);
        d = b.style;
        d.display = 'block';
        d.position = 'absolute';
        d.top = '-9999px';
        d.left = '-9999px';
        d.fontSize = '300px';
        d.width = 'auto';
        d.height = 'auto';
        d.lineHeight = 'normal';
        d.margin = '0';
        d.padding = '0';
        d.fontVariant = 'normal';
        d.whiteSpace = 'nowrap';
        d.fontFamily = a;
        window.document.body.appendChild(b);
        return b;
      };
      Bb.prototype = {
        __copyFrom: function (a) {
          null != a &&
            ((this.ascender = a.ascender),
            (this.descender = a.descender),
            (this.height = a.height),
            (this.name = a.name),
            (this.numGlyphs = a.numGlyphs),
            (this.src = a.src),
            (this.underlinePosition = a.underlinePosition),
            (this.underlineThickness = a.underlineThickness),
            (this.unitsPerEM = a.unitsPerEM),
            (this.__fontID = a.__fontID),
            (this.__fontPath = a.__fontPath),
            (this.__init = !0));
        },
        __fromBytes: function (a) {
          this.__fontPath = null;
        },
        __fromFile: function (a) {
          this.__fontPath = a;
        },
        __loadFromName: function (a) {
          var b = this,
            d = new sd();
          this.name = a;
          var f = D.navigator.userAgent.toLowerCase(),
            g = 0 <= f.indexOf(' safari/') && 0 > f.indexOf(' chrome/');
          f = new xa('(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)', 'i').match(
            f,
          );
          if (
            !g &&
            !f &&
            window.document.fonts &&
            ((J = window.document.fonts), m(J, J.load))
          )
            window.document.fonts.load("1em '" + a + "'").then(
              function (a) {
                d.complete(b);
              },
              function (f) {
                Pa.warn('Could not load web font "' + a + '"', {
                  fileName: 'lime/text/Font.hx',
                  lineNumber: 640,
                  className: 'lime.text.Font',
                  methodName: '__loadFromName',
                });
                d.complete(b);
              },
            );
          else {
            var k = Bb.__measureFontNode("'" + a + "', sans-serif"),
              l = Bb.__measureFontNode("'" + a + "', serif"),
              u = k.offsetWidth,
              p = l.offsetWidth,
              h = -1,
              r = 0,
              n,
              wb;
            h = window.setInterval(function () {
              r += 1;
              n = k.offsetWidth != u || l.offsetWidth != p;
              wb = 3e3 <= 50 * r;
              if (n || wb)
                (window.clearInterval(h),
                  k.parentNode.removeChild(k),
                  l.parentNode.removeChild(l),
                  (l = k = null),
                  wb &&
                    Pa.warn('Could not load web font "' + a + '"', {
                      fileName: 'lime/text/Font.hx',
                      lineNumber: 675,
                      className: 'lime.text.Font',
                      methodName: '__loadFromName',
                    }),
                  d.complete(b));
            }, 50);
          }
          return d.future;
        },
        __class__: Bb,
      };
      var Da = (v.__ASSET__assets_sharetech_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 256;
        this.underlinePosition = -100;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Regular';
        Bb.call(this);
      });
      h.__ASSET__assets_sharetech_regular_ttf = Da;
      Da.__name__ = '__ASSET__assets_sharetech_regular_ttf';
      Da.__super__ = Bb;
      Da.prototype = w(Bb.prototype, { __class__: Da });
      var La = (v.__ASSET__assets_sharetechmono_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 268;
        this.underlinePosition = -135;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Mono';
        Bb.call(this);
      });
      h.__ASSET__assets_sharetechmono_regular_ttf = La;
      La.__name__ = '__ASSET__assets_sharetechmono_regular_ttf';
      La.__super__ = Bb;
      La.prototype = w(Bb.prototype, { __class__: La });
      var ua = function (a) {
        Bb.call(this, a);
      };
      h['openfl.text.Font'] = ua;
      ua.__name__ = 'openfl.text.Font';
      ua.fromFile = function (a) {
        if (null == a) return null;
        var b = new ua();
        b.__fromFile(a);
        return b;
      };
      ua.loadFromName = function (a) {
        return Bb.loadFromName(a).then(function (a) {
          var b = new ua();
          b.__fromLimeFont(a);
          return kc.withValue(b);
        });
      };
      ua.registerFont = function (a) {
        a =
          null == Fa.getClass(a)
            ? Fa.__cast(ib.createInstance(a, []), ua)
            : Fa.__cast(a, ua);
        null != a &&
          (ua.__registeredFonts.push(a), (ua.__fontByName.h[a.name] = a));
      };
      ua.__super__ = Bb;
      ua.prototype = w(Bb.prototype, {
        __fromLimeFont: function (a) {
          this.__copyFrom(a);
        },
        __class__: ua,
      });
      var na = (v.__ASSET__OPENFL__assets_sharetech_regular_ttf = function () {
        this.__fromLimeFont(new Da());
        Bb.call(this, void 0);
      });
      h.__ASSET__OPENFL__assets_sharetech_regular_ttf = na;
      na.__name__ = '__ASSET__OPENFL__assets_sharetech_regular_ttf';
      na.__super__ = ua;
      na.prototype = w(ua.prototype, { __class__: na });
      var Y = (v.__ASSET__OPENFL__assets_sharetechmono_regular_ttf =
        function () {
          this.__fromLimeFont(new La());
          Bb.call(this, void 0);
        });
      h.__ASSET__OPENFL__assets_sharetechmono_regular_ttf = Y;
      Y.__name__ = '__ASSET__OPENFL__assets_sharetechmono_regular_ttf';
      Y.__super__ = ua;
      Y.prototype = w(ua.prototype, { __class__: Y });
      Math.__name__ = 'Math';
      var N = function () {};
      h.Reflect = N;
      N.__name__ = 'Reflect';
      N.field = function (a, b) {
        try {
          return a[b];
        } catch (d) {
          return ((Na.lastError = d), null);
        }
      };
      N.getProperty = function (a, b) {
        var d;
        if (null == a) return null;
        var f = a.__properties__ ? (d = a.__properties__['get_' + b]) : !1;
        return f ? a[d]() : a[b];
      };
      N.fields = function (a) {
        var b = [];
        if (null != a) {
          var d = Object.prototype.hasOwnProperty,
            f;
          for (f in a)
            '__id__' != f && 'hx__closures__' != f && d.call(a, f) && b.push(f);
        }
        return b;
      };
      N.isFunction = function (a) {
        return 'function' == typeof a ? !(a.__name__ || a.__ename__) : !1;
      };
      N.compare = function (a, b) {
        return a == b ? 0 : a > b ? 1 : -1;
      };
      N.deleteField = function (a, b) {
        if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
        delete a[b];
        return !0;
      };
      var G = function () {};
      h.Std = G;
      G.__name__ = 'Std';
      G.string = function (a) {
        return Fa.__string_rec(a, '');
      };
      G.parseInt = function (a) {
        a = parseInt(a);
        return isNaN(a) ? null : a;
      };
      var Jc = function () {};
      h['_String.String_Impl_'] = Jc;
      Jc.__name__ = '_String.String_Impl_';
      Jc.fromCharCode = function (a) {
        return String.fromCodePoint(a);
      };
      var qb = function () {
        this.b = '';
      };
      h.StringBuf = qb;
      qb.__name__ = 'StringBuf';
      qb.prototype = { __class__: qb };
      var R = function () {};
      h.StringTools = R;
      R.__name__ = 'StringTools';
      R.htmlEscape = function (a, b) {
        for (var d = '', f = 0, g = a; f < g.length; ) {
          a = g;
          var k = f++,
            l = a.charCodeAt(k);
          55296 <= l &&
            56319 >= l &&
            (l = ((l - 55232) << 10) | (a.charCodeAt(k + 1) & 1023));
          a = l;
          65536 <= a && ++f;
          switch (a) {
            case 34:
              d = b ? d + '&quot;' : d + String.fromCodePoint(a);
              break;
            case 38:
              d += '&amp;';
              break;
            case 39:
              d = b ? d + '&#039;' : d + String.fromCodePoint(a);
              break;
            case 60:
              d += '&lt;';
              break;
            case 62:
              d += '&gt;';
              break;
            default:
              d += String.fromCodePoint(a);
          }
        }
        return d;
      };
      R.htmlUnescape = function (a) {
        return a
          .split('&gt;')
          .join('>')
          .split('&lt;')
          .join('<')
          .split('&quot;')
          .join('"')
          .split('&#039;')
          .join("'")
          .split('&amp;')
          .join('&');
      };
      R.startsWith = function (a, b) {
        return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1;
      };
      R.endsWith = function (a, b) {
        var d = b.length,
          f = a.length;
        return f >= d ? a.indexOf(b, f - d) == f - d : !1;
      };
      R.isSpace = function (a, b) {
        a = M.cca(a, b);
        return 8 < a && 14 > a ? !0 : 32 == a;
      };
      R.ltrim = function (a) {
        for (var b = a.length, d = 0; d < b && R.isSpace(a, d); ) ++d;
        return 0 < d ? M.substr(a, d, b - d) : a;
      };
      R.rtrim = function (a) {
        for (var b = a.length, d = 0; d < b && R.isSpace(a, b - d - 1); ) ++d;
        return 0 < d ? M.substr(a, 0, b - d) : a;
      };
      R.trim = function (a) {
        return R.ltrim(R.rtrim(a));
      };
      R.replace = function (a, b, d) {
        return a.split(b).join(d);
      };
      R.hex = function (a, b) {
        var d = '';
        do ((d = '0123456789ABCDEF'.charAt(a & 15) + d), (a >>>= 4));
        while (0 < a);
        if (null != b) for (; d.length < b; ) d = '0' + d;
        return d;
      };
      var C = (K.ValueType = {
        __ename__: 'ValueType',
        __constructs__: null,
        TNull: {
          _hx_name: 'TNull',
          _hx_index: 0,
          __enum__: 'ValueType',
          toString: q,
        },
        TInt: {
          _hx_name: 'TInt',
          _hx_index: 1,
          __enum__: 'ValueType',
          toString: q,
        },
        TFloat: {
          _hx_name: 'TFloat',
          _hx_index: 2,
          __enum__: 'ValueType',
          toString: q,
        },
        TBool: {
          _hx_name: 'TBool',
          _hx_index: 3,
          __enum__: 'ValueType',
          toString: q,
        },
        TObject: {
          _hx_name: 'TObject',
          _hx_index: 4,
          __enum__: 'ValueType',
          toString: q,
        },
        TFunction: {
          _hx_name: 'TFunction',
          _hx_index: 5,
          __enum__: 'ValueType',
          toString: q,
        },
        TClass:
          ((J = function (a) {
            return { _hx_index: 6, c: a, __enum__: 'ValueType', toString: q };
          }),
          (J._hx_name = 'TClass'),
          (J.__params__ = ['c']),
          J),
        TEnum:
          ((J = function (a) {
            return { _hx_index: 7, e: a, __enum__: 'ValueType', toString: q };
          }),
          (J._hx_name = 'TEnum'),
          (J.__params__ = ['e']),
          J),
        TUnknown: {
          _hx_name: 'TUnknown',
          _hx_index: 8,
          __enum__: 'ValueType',
          toString: q,
        },
      });
      C.__constructs__ = [
        C.TNull,
        C.TInt,
        C.TFloat,
        C.TBool,
        C.TObject,
        C.TFunction,
        C.TClass,
        C.TEnum,
        C.TUnknown,
      ];
      var ib = function () {};
      h.Type = ib;
      ib.__name__ = 'Type';
      ib.resolveEnum = function (a) {
        return K[a];
      };
      ib.createInstance = function (a, b) {
        return new (Function.prototype.bind.apply(a, [null].concat(b)))();
      };
      ib.createEnum = function (a, b, d) {
        var f = N.field(a, b);
        if (null == f) throw Z.thrown('No such constructor ' + b);
        if (N.isFunction(f)) {
          if (null == d)
            throw Z.thrown('Constructor ' + b + ' need parameters');
          return f.apply(a, d);
        }
        if (null != d && 0 != d.length)
          throw Z.thrown('Constructor ' + b + ' does not need parameters');
        return f;
      };
      ib.getClassFields = function (a) {
        a = N.fields(a);
        M.remove(a, '__name__');
        M.remove(a, '__interfaces__');
        M.remove(a, '__properties__');
        M.remove(a, '__super__');
        M.remove(a, '__meta__');
        M.remove(a, 'prototype');
        return a;
      };
      ib.typeof = function (a) {
        switch (typeof a) {
          case 'boolean':
            return C.TBool;
          case 'function':
            return a.__name__ || a.__ename__ ? C.TObject : C.TFunction;
          case 'number':
            return Math.ceil(a) == a % 2147483648 ? C.TInt : C.TFloat;
          case 'object':
            if (null == a) return C.TNull;
            var b = a.__enum__;
            if (null != b) return C.TEnum(K[b]);
            a = Fa.getClass(a);
            return null != a ? C.TClass(a) : C.TObject;
          case 'string':
            return C.TClass(String);
          case 'undefined':
            return C.TNull;
          default:
            return C.TUnknown;
        }
      };
      ib.enumParameters = function (a) {
        var b = K[a.__enum__].__constructs__[a._hx_index].__params__;
        if (null != b) {
          for (var d = [], f = 0; f < b.length; ) {
            var g = b[f];
            ++f;
            d.push(a[g]);
          }
          return d;
        }
        return [];
      };
      var z = {
          gt: function (a, b) {
            var d = 0 > a;
            return d != 0 > b ? d : a > b;
          },
          toFloat: function (a) {
            return 0 > a ? 4294967296 + a : a + 0;
          },
        },
        y = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'Element';
              case 1:
                return 'PCData';
              case 2:
                return 'CData';
              case 3:
                return 'Comment';
              case 4:
                return 'DocType';
              case 5:
                return 'ProcessingInstruction';
              case 6:
                return 'Document';
            }
          },
        },
        S = function (a) {
          this.nodeType = a;
          this.children = [];
          this.attributeMap = new Sa();
        };
      h.Xml = S;
      S.__name__ = 'Xml';
      S.parse = function (a) {
        return Me.parse(a);
      };
      S.createElement = function (a) {
        var b = new S(S.Element);
        if (b.nodeType != S.Element)
          throw Z.thrown(
            'Bad node type, expected Element but found ' +
              (null == b.nodeType ? 'null' : y.toString(b.nodeType)),
          );
        b.nodeName = a;
        return b;
      };
      S.createPCData = function (a) {
        var b = new S(S.PCData);
        if (b.nodeType == S.Document || b.nodeType == S.Element)
          throw Z.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : y.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      S.createCData = function (a) {
        var b = new S(S.CData);
        if (b.nodeType == S.Document || b.nodeType == S.Element)
          throw Z.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : y.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      S.createComment = function (a) {
        var b = new S(S.Comment);
        if (b.nodeType == S.Document || b.nodeType == S.Element)
          throw Z.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : y.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      S.createDocType = function (a) {
        var b = new S(S.DocType);
        if (b.nodeType == S.Document || b.nodeType == S.Element)
          throw Z.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : y.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      S.createProcessingInstruction = function (a) {
        var b = new S(S.ProcessingInstruction);
        if (b.nodeType == S.Document || b.nodeType == S.Element)
          throw Z.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : y.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      S.createDocument = function () {
        return new S(S.Document);
      };
      S.prototype = {
        get: function (a) {
          if (this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          return this.attributeMap.h[a];
        },
        set: function (a, b) {
          if (this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          this.attributeMap.h[a] = b;
        },
        remove: function (a) {
          if (this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          var b = this.attributeMap;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
        },
        exists: function (a) {
          if (this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a);
        },
        attributes: function () {
          if (this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          return new mh(this.attributeMap.h);
        },
        firstElement: function () {
          if (this.nodeType != S.Document && this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          for (var a = 0, b = this.children; a < b.length; ) {
            var d = b[a];
            ++a;
            if (d.nodeType == S.Element) return d;
          }
          return null;
        },
        addChild: function (a) {
          if (this.nodeType != S.Document && this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          null != a.parent && a.parent.removeChild(a);
          this.children.push(a);
          a.parent = this;
        },
        removeChild: function (a) {
          if (this.nodeType != S.Document && this.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : y.toString(this.nodeType)),
            );
          return M.remove(this.children, a) ? ((a.parent = null), !0) : !1;
        },
        toString: function () {
          return re.print(this);
        },
        __class__: S,
      };
      var Jb = function () {
        this.keyShift = this.keyCtrl = this.isSolid = !1;
        this.rWidth = this.rHeight = 0;
        this.update = new gc();
        this.keyEvent = new Of();
        ba.call(this);
      };
      h['com.watabou.coogee.Scene'] = Jb;
      Jb.__name__ = 'com.watabou.coogee.Scene';
      Jb.__super__ = ba;
      Jb.prototype = w(ba.prototype, {
        activate: function () {
          Cb.get_tick().add(m(this, this.onUpdate));
          this.stage.addEventListener('keyDown', m(this, this.onKeyDown));
          this.stage.addEventListener('keyUp', m(this, this.onKeyUp));
        },
        deactivate: function () {
          Cb.get_tick().remove(m(this, this.onUpdate));
          this.stage.removeEventListener('keyDown', m(this, this.onKeyDown));
          this.stage.removeEventListener('keyUp', m(this, this.onKeyUp));
        },
        onEsc: function () {
          db.quit();
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !0;
              break;
            case 16:
              this.keyShift = !0;
              break;
            case 27:
              this.onEsc();
          }
          this.keyEvent.dispatch(a.keyCode, !0);
          null == this.stage ||
            this.stage.get_focus() instanceof Kc ||
            a.preventDefault();
        },
        onKeyUp: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !1;
              break;
            case 16:
              this.keyShift = !1;
          }
          this.keyEvent.dispatch(a.keyCode, !1);
          this.stage.get_focus() instanceof Kc || a.preventDefault();
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        get_width: function () {
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        layout: function () {},
        onUpdate: function (a) {
          this.update.dispatch(a);
        },
        __hitTest: function (a, b, d, f, g, k) {
          a = ba.prototype.__hitTest.call(this, a, b, d, f, g, k);
          return this.isSolid ? (a || f.push(k), !0) : a;
        },
        __class__: Jb,
      });
      var W = function () {
        this.valign = 'top';
        this.halign = 'left';
        this.rWidth = this.rHeight = 0;
        ba.call(this);
      };
      h['com.watabou.coogee.ui.View'] = W;
      W.__name__ = 'com.watabou.coogee.ui.View';
      W.__super__ = ba;
      W.prototype = w(ba.prototype, {
        get_width: function () {
          return this.rWidth;
        },
        set_width: function (a) {
          this.setSize(a, this.rHeight);
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        set_height: function (a) {
          this.setSize(this.rWidth, a);
          return this.rHeight;
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        layout: function () {},
        add: function (a) {
          this.addChild(a);
        },
        remove: function (a) {
          this.removeChild(a);
        },
        set_enabled: function (a) {
          return (this.mouseEnabled = this.mouseChildren = a);
        },
        __class__: W,
        __properties__: w(ba.prototype.__properties__, {
          set_enabled: 'set_enabled',
        }),
      });
      var Tc = function () {
        this.click = new Kd();
        W.call(this);
        this.label = this.createLabel();
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.setSize(this.label.get_width() + 10, this.label.get_height() + 10);
      };
      h['com.watabou.coogee.ui.ButtonBase'] = Tc;
      Tc.__name__ = 'com.watabou.coogee.ui.ButtonBase';
      Tc.__super__ = W;
      Tc.prototype = w(W.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(r.black);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            10,
          );
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        createLabel: function () {
          return null;
        },
        onClick: function (a) {
          this.click.dispatch();
        },
        __class__: Tc,
      });
      var Uc = function (a, b) {
        this.txtLabel = a;
        Tc.call(this);
        null != b && this.click.add(b);
      };
      h['com.watabou.coogee.ui.Button'] = Uc;
      Uc.__name__ = 'com.watabou.coogee.ui.Button';
      Uc.__super__ = Tc;
      Uc.prototype = w(Tc.prototype, {
        createLabel: function () {
          return tc.get(
            this.txtLabel,
            r.format(r.uiFont, r.smallSize, r.white),
          );
        },
        __class__: Uc,
      });
      var Ab = function () {
        this.snap = !0;
        this.margin = this.gap = 10;
        W.call(this);
      };
      h['com.watabou.coogee.ui.layouts.VBox'] = Ab;
      Ab.__name__ = 'com.watabou.coogee.ui.layouts.VBox';
      Ab.__super__ = W;
      Ab.prototype = w(W.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              d = !1,
              f = 0,
              g = this.get_numChildren();
            f < g;

          ) {
            var k = f++;
            k = this.getChildAt(k);
            'left' != k.halign && (d = !0);
            b < k.get_width() && (b = k.get_width());
            k.set_x(this.margin);
            k.set_y(a);
            a += k.get_height() + this.gap;
            this.snap && (a |= 0);
          }
          if (d)
            for (f = 0, g = this.get_numChildren(); f < g; )
              switch (((k = f++), (k = this.getChildAt(k)), k.halign)) {
                case 'center':
                  k.set_x(this.margin + (b - k.get_width()) / 2);
                  break;
                case 'fill':
                  k.set_width(b);
                  break;
                case 'right':
                  k.set_x(this.margin + (b - k.get_width()));
              }
          this.rHeight =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rWidth = b + 2 * this.margin;
        },
        add: function (a) {
          W.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: Ab,
      });
      var jb = function () {
        Ab.call(this);
        this.setMargins(0, 0);
        this.addEventListener('keyDown', m(this, this.onKeyDown));
        this.addEventListener('focusOut', m(this, this.onFocusOut));
      };
      h['com.watabou.coogee.ui.Form'] = jb;
      jb.__name__ = 'com.watabou.coogee.ui.Form';
      jb.__super__ = Ab;
      jb.prototype = w(Ab.prototype, {
        getTitle: function () {
          return null;
        },
        onShow: function () {},
        onHide: function () {},
        onKeyDown: function (a) {
          this.onKey(a.keyCode) && (a.stopPropagation(), a.preventDefault());
        },
        onKey: function (a) {
          switch (a) {
            case 13:
              this.onEnter();
              break;
            case 27:
              this.onEsc();
              break;
            default:
              return !1;
          }
          return !0;
        },
        onEsc: function () {
          this.dialog.hide();
        },
        onEnter: function () {},
        onFocusOut: function (a) {
          null == a.relatedObject && this.stage.set_focus(this);
        },
        hr: function (a) {
          var b = new gb(r.medium);
          b.setSize(2, 2);
          b.halign = 'fill';
          b.valign = 'fill';
          (null != a ? a : this).add(b);
        },
        __class__: jb,
      });
      var $a = function (a) {
        jb.call(this);
        this.buttons = new kb(a);
        this.buttons.click.add(m(this, this.onButton));
        this.addChild(this.buttons);
      };
      h['com.watabou.coogee.ui.ButtonsForm'] = $a;
      $a.__name__ = 'com.watabou.coogee.ui.ButtonsForm';
      $a.__super__ = jb;
      $a.prototype = w(jb.prototype, {
        add: function (a) {
          this.addChild(a);
          this.addChild(this.buttons);
          this.layout();
        },
        layout: function () {
          jb.prototype.layout.call(this);
          this.buttons.set_width(this.rWidth);
          jb.prototype.layout.call(this);
        },
        onButton: function (a) {
          this.dialog.hide();
        },
        onEnter: function () {
          this.onButton('OK');
        },
        onEsc: function () {
          this.onButton('Cancel');
        },
        __class__: $a,
      });
      var Ld = function (a) {
        this.changed = new gc();
        W.call(this);
        this.border = gb.black();
        this.add(this.border);
        this.empty = gb.white();
        this.add(this.empty);
        this.filled = gb.black();
        this.add(this.filled);
        null != a
          ? ((this.label = new Zb(a)),
            (this.label.mouseEnabled = !0),
            (this.label.mouseChildren = !0),
            this.add(this.label),
            this.setSize(
              24 + this.label.get_width(),
              Math.max(20, this.label.get_height()),
            ))
          : this.setSize(20, 20);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
      };
      h['com.watabou.coogee.ui.CheckBox'] = Ld;
      Ld.__name__ = 'com.watabou.coogee.ui.CheckBox';
      Ld.__super__ = W;
      Ld.prototype = w(W.prototype, {
        layout: function () {
          this.border.setSize(20, 20);
          this.border.set_x(
            null != this.label
              ? 0
              : ((this.rWidth - this.border.get_width()) / 2) | 0,
          );
          this.border.set_y(
            ((this.rHeight - this.border.get_height()) / 2) | 0,
          );
          this.empty.setSize(
            this.border.get_width() - 4,
            this.border.get_height() - 4,
          );
          this.empty.set_x(this.border.get_x() + 2);
          this.empty.set_y(this.border.get_y() + 2);
          this.filled.setSize(
            this.empty.get_width() - 4,
            this.empty.get_height() - 4,
          );
          this.filled.set_x(this.empty.get_x() + 2);
          this.filled.set_y(this.empty.get_y() + 2);
          null != this.label && this.label.set_x(this.border.get_width() + 4);
        },
        get_value: function () {
          return this.filled.get_visible();
        },
        set_value: function (a) {
          this.filled.set_visible(a);
          return a;
        },
        onClick: function (a) {
          this.set_value(!this.get_value());
          this.changed.dispatch(this.get_value());
        },
        set_enabled: function (a) {
          W.prototype.set_enabled.call(this, a);
          var b = a ? r.black : r.light;
          this.border.bmp.get_bitmapData().setPixel(0, 0, b);
          this.filled.bmp.get_bitmapData().setPixel(0, 0, b);
          null != this.label && this.label.set_color(b);
          return a;
        },
        __class__: Ld,
        __properties__: w(W.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Zc = function (a, b) {
        this.onMinimize = new gc();
        this.onMove = new gc();
        this.onHide = new gc();
        this.minimized = this.minimizable = !1;
        W.call(this);
        this.bg1 = gb.black();
        this.addChild(this.bg1);
        this.bg2 = gb.white();
        this.addChild(this.bg2);
        this.addEventListener('mouseDown', m(this, this.onBringUp));
        this.header = new jf(b);
        this.header.addEventListener('mouseDown', m(this, this.onStartDrag));
        this.header.addEventListener('click', m(this, this.onClick));
        this.addChild(this.header);
        this.content = a;
        this.addChild(a);
        this.resize();
      };
      h['com.watabou.coogee.ui.Window'] = Zc;
      Zc.__name__ = 'com.watabou.coogee.ui.Window';
      Zc.show = function (a, b, d, f) {
        d = null == f ? new Zc(b, d) : ib.createInstance(f, [b, d]);
        d.set_x(((a.get_width() - d.get_width()) / 2) | 0);
        d.set_y(((a.get_height() - d.get_height()) / 2) | 0);
        a.addChild(d);
        null != b.stage && b.stage.set_focus(b);
        return d;
      };
      Zc.__super__ = W;
      Zc.prototype = w(W.prototype, {
        resize: function (a) {
          null == a && (a = !1);
          var b = this.content.get_width() + 4,
            d = this.header.get_height() + this.content.get_height() + 2,
            f = a ? ((this.rWidth - b) / 2) | 0 : 0;
          a = a ? ((this.rHeight - d) / 2) | 0 : 0;
          this.setSize(b, d);
          this.set_x(this.get_x() + f);
          this.set_y(this.get_y() + a);
        },
        layout: function () {
          this.header.set_width(this.rWidth);
          this.minimized
            ? (this.bg1.setSize(this.rWidth, this.header.get_height()),
              this.content.set_visible(!1),
              this.bg2.set_visible(!1))
            : (this.bg1.setSize(this.rWidth, this.rHeight),
              this.content.set_visible(!0),
              this.bg2.set_visible(!0),
              this.bg2.setSize(
                this.rWidth - 4,
                this.rHeight - this.header.get_height() - 2,
              ),
              this.content.set_x(this.bg2.set_x(2)),
              this.content.set_y(this.bg2.set_y(this.header.get_height())));
        },
        hide: function () {
          null != this.parent &&
            (this.stage.set_focus(this.stage),
            this.parent.removeChild(this),
            this.onHide.dispatch(this));
        },
        onBringUp: function (a) {
          this.parent.addChild(this);
        },
        onStartDrag: function (a) {
          this.clicked = !0;
          this.stage.addEventListener('mouseMove', m(this, this.onDrag));
          this.stage.addEventListener('mouseUp', m(this, this.onEndDrag));
          this.grabX = this.get_mouseX();
          this.grabY = this.get_mouseY();
        },
        onDrag: function (a) {
          this.clicked = !1;
          this.set_x(this.parent.get_mouseX() - this.grabX);
          this.set_y(this.parent.get_mouseY() - this.grabY);
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', m(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', m(this, this.onEndDrag));
          this.clicked || this.onMove.dispatch(this);
        },
        onClick: function (a) {
          this.clicked &&
            this.minimizable &&
            ((this.minimized = !this.minimized),
            this.layout(),
            this.onMinimize.dispatch(this));
        },
        setTitle: function (a) {
          this.header.setText(a);
        },
        __class__: Zc,
      });
      var Md = function (a, b) {
        a.dialog = this;
        Zc.call(this, a, b);
        this.header.close.add(function () {
          a.onEsc();
        });
      };
      h['com.watabou.coogee.ui.Dialog'] = Md;
      Md.__name__ = 'com.watabou.coogee.ui.Dialog';
      Md.show = function (a, b, d) {
        null == d && (d = b.getTitle());
        a = Zc.show(a, b, d, Md);
        b.onShow();
        return a;
      };
      Md.__super__ = Zc;
      Md.prototype = w(Zc.prototype, {
        hide: function () {
          if (null != this.parent) Fa.__cast(this.content, jb).onHide();
          Zc.prototype.hide.call(this);
        },
        __class__: Md,
      });
      var td = function (a, b) {
        this.update = new gc();
        var d = this;
        this.values = b;
        this.labels = a;
        W.call(this);
        this.border = gb.black();
        this.add(this.border);
        this.bg = gb.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = tc.get('', r.format(r.uiFont, r.normalSize, r.black));
        this.addChild(this.tf);
        this.btn = new P();
        this.btn.set_width(r.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        for (var f = 0, g = 0, k = 0; k < a.length; ) {
          var l = a[k];
          ++k;
          this.tf.set_text(l);
          f = Math.max(f, this.tf.get_width());
          g = Math.max(g, this.tf.get_height());
        }
        this.tf.set_autoSize(2);
        this.menu = new hc();
        k = [];
        l = 0;
        for (var u = a.length; l < u; ) {
          var p = [l++];
          k.push(
            this.menu.addItem(
              a[p[0]],
              (function (f) {
                return function () {
                  d.onSelect(a[f[0]], b[f[0]]);
                };
              })(p),
            ),
          );
        }
        this.items = k;
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.addEventListener('mouseWheel', m(this, this.onWheel));
        0 < a.length && this.set_text(a[0]);
        this.setSize(Math.ceil(f + this.btn.get_width()), Math.ceil(g));
      };
      h['com.watabou.coogee.ui.DropDown'] = td;
      td.__name__ = 'com.watabou.coogee.ui.DropDown';
      td.ofInts = function (a) {
        for (var b = [], d = 0, f = a.length; d < f; ) {
          var g = d++;
          b.push(g);
        }
        return new td(a, b);
      };
      td.__super__ = W;
      td.prototype = w(W.prototype, {
        load: function (a, b) {
          var d = this;
          this.labels = a;
          this.values = b;
          this.menu = new hc();
          for (var f = [], g = 0, k = a.length; g < k; ) {
            var l = [g++];
            f.push(
              this.menu.addItem(
                a[l[0]],
                (function (f) {
                  return function () {
                    d.onSelect(a[f[0]], b[f[0]]);
                  };
                })(l),
              ),
            );
          }
          this.items = f;
          this.set_text(a[0]);
        },
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        set_text: function (a) {
          this.tf.set_text(a);
          return a;
        },
        get_value: function () {
          var a = this.labels.indexOf(this.tf.get_text());
          return -1 == a ? null : this.values[a];
        },
        set_value: function (a) {
          for (var b = 0, d = this.values.length; b < d; ) {
            var f = b++;
            if (this.values[f] == a)
              return (this.tf.set_text(this.labels[f]), a);
          }
          return this.get_value();
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        onClick: function (a) {
          a = this.labels.indexOf(this.tf.get_text());
          for (var b = 0, d = this.items.length; b < d; ) {
            var f = b++;
            this.items[f].setCheck(f == a);
          }
          a = ta.getRect(this);
          ta.showMenuAt(this.menu, Math.ceil(a.get_left()), a.get_bottom() - 2);
        },
        onWheel: function (a) {
          ta.hideMenu();
          var b = this.values.indexOf(this.get_value());
          if (
            -1 != b &&
            ((a = a.delta),
            (b += 0 == a ? 0 : 0 > a ? -1 : 1),
            0 <= b && b < this.values.length - 1)
          )
            this.onSelect(this.labels[b], this.values[b]);
        },
        onSelect: function (a, b) {
          this.stage.set_focus(this);
          this.tf.set_text(a);
          this.update.dispatch(b);
        },
        __class__: td,
        __properties__: w(W.prototype.__properties__, {
          set_centered: 'set_centered',
          set_value: 'set_value',
          get_value: 'get_value',
          set_text: 'set_text',
        }),
      });
      var kf = function (a) {
        W.call(this);
        this.tf = tc.get(a, r.format(r.uiFont, r.smallSize, r.black));
        this.tf.set_wordWrap(!0);
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      h['com.watabou.coogee.ui.InfoLabel'] = kf;
      kf.__name__ = 'com.watabou.coogee.ui.InfoLabel';
      kf.__super__ = W;
      kf.prototype = w(W.prototype, {
        set_width: function (a) {
          this.tf.set_autoSize(1);
          this.tf.set_width(a + 4);
          var b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(a + 4);
          this.tf.set_height(Math.ceil(b));
          this.rWidth = a;
          this.rHeight = this.tf.get_height() - 4;
          return a;
        },
        set_color: function (a) {
          return this.tf.set_textColor(a);
        },
        __class__: kf,
        __properties__: w(W.prototype.__properties__, {
          set_color: 'set_color',
        }),
      });
      var Zb = function (a, b) {
        null == b && (b = !1);
        W.call(this);
        this.tf = tc.get(
          a,
          r.format(r.uiFont, b ? r.smallSize : r.normalSize, r.black),
        );
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      h['com.watabou.coogee.ui.Label'] = Zb;
      Zb.__name__ = 'com.watabou.coogee.ui.Label';
      Zb.__super__ = W;
      Zb.prototype = w(W.prototype, {
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(this.tf.get_width(), this.tf.get_height());
          return a;
        },
        set_color: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.color = a;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        __class__: Zb,
        __properties__: w(W.prototype.__properties__, {
          set_color: 'set_color',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var hc = function () {
        W.call(this);
        this.bg = gb.black();
        this.addChild(this.bg);
        this.items = [];
        this.addEventListener('addedToStage', m(this, this.onAdded));
        this.addEventListener('removedFromStage', m(this, this.onRemoved));
      };
      h['com.watabou.coogee.ui.Menu'] = hc;
      hc.__name__ = 'com.watabou.coogee.ui.Menu';
      hc.__super__ = W;
      hc.prototype = w(W.prototype, {
        layout: function () {
          for (
            var a = (this.rHeight = this.rWidth = 0), b = this.items;
            a < b.length;

          ) {
            var d = b[a];
            ++a;
            this.rWidth = Math.max(this.rWidth, d.get_width());
            this.rHeight += d.get_height();
          }
          var f = 2;
          a = 0;
          for (b = this.items; a < b.length; )
            ((d = b[a]),
              ++a,
              d.set_width(this.rWidth),
              d.set_x(2),
              d.set_y(f),
              (f += d.get_height()));
          this.rWidth += 4;
          this.rHeight += 4;
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        add: function (a) {
          this.items.push(a);
          this.addChild(a);
          this.layout();
        },
        remove: function (a) {
          M.remove(this.items, a);
          this.removeChild(a);
          this.layout();
        },
        addItem: function (a, b, d) {
          null == d && (d = !1);
          a = new uc(a, null, b);
          a.setCheck(d);
          this.add(a);
          return a;
        },
        addSubmenu: function (a, b) {
          a = new uc(a, b);
          this.add(a);
          return a;
        },
        addSeparator: function () {
          0 < this.items.length &&
            !(this.items[this.items.length - 1] instanceof se) &&
            this.add(new se());
        },
        hide: function () {
          null != this.submenu && (this.submenu.hide(), (this.submenu = null));
          null != this.parent &&
            (null != this.stage && this.stage.set_focus(this.stage),
            this.parent.removeChild(this));
        },
        getRoot: function () {
          return null != this.parentMenu ? this.parentMenu.getRoot() : this;
        },
        onMouseDown: function (a) {
          this.hitTestPoint(this.stage.get_mouseX(), this.stage.get_mouseY()) ||
            this.hide();
        },
        onAdded: function (a) {
          this.stage.addEventListener('mouseDown', m(this, this.onMouseDown));
          this.stage.addEventListener(
            'rightMouseDown',
            m(this, this.onMouseDown),
          );
        },
        onRemoved: function (a) {
          this.stage.removeEventListener(
            'mouseDown',
            m(this, this.onMouseDown),
          );
          this.stage.removeEventListener(
            'rightMouseDown',
            m(this, this.onMouseDown),
          );
        },
        cancel: function () {
          null != this.submenu &&
            (this.submenu.cancel(),
            this.parent.removeChild(this.submenu),
            (this.submenu = null));
        },
        hover: function (a, b) {
          this.cancel();
          if (null != b) {
            b.parentMenu = this;
            this.submenu = b;
            var d = a.get_x() + a.rWidth,
              f = a.get_y() - 2,
              g = new I(d, f);
            g = this.parent.globalToLocal(this.localToGlobal(g));
            if (this.parent == ta.layer) {
              var k = !1;
              g.x + b.get_width() > this.parent.get_width() &&
                ((d = a.get_x() - b.get_width()), (k = !0));
              g.y + b.get_height() > this.parent.get_height() &&
                ((f = a.get_y() + a.rHeight - b.get_height() + 2), (k = !0));
              k &&
                ((g.x = d),
                (g.y = f),
                (g = this.parent.globalToLocal(this.localToGlobal(g))));
            }
            b.set_x(g.x);
            b.set_y(g.y);
            this.parent.addChild(b);
          }
        },
        __class__: hc,
      });
      var uc = function (a, b, d) {
        var f = this;
        W.call(this);
        this.submenu = b;
        this.callback = d;
        this.bg = gb.white();
        this.addChild(this.bg);
        this.bullet = gb.black();
        this.bullet.set_visible(!1);
        this.bullet.setSize(8, 8);
        this.addChild(this.bullet);
        d = null == d && null == b;
        this.formatNormal = r.format(
          r.uiFont,
          r.smallSize,
          d ? r.medium : r.black,
        );
        this.formatHover = r.format(r.uiFont, r.smallSize, r.white);
        this.tf = tc.get(a, this.formatNormal);
        this.addChild(this.tf);
        null != b &&
          ((this.sub = tc.get(' >', this.formatNormal)),
          this.addChild(this.sub));
        this.addEventListener('mouseDown', function (a) {
          a.stopPropagation();
        });
        d ||
          (this.set_buttonMode(!0),
          this.addEventListener('rollOver', function (a) {
            f.hover(!0);
          }),
          this.addEventListener('rollOut', function (a) {
            f.hover(!1);
          }),
          this.addEventListener('click', m(this, this.onClick)));
        a = Math.round(r.normalSize / 4);
        this.bullet.set_x(a);
        this.tf.set_x(a + this.bullet.get_width() + a - 2);
        null != b
          ? (this.sub.set_x(this.tf.get_x() + this.tf.get_width() - 4),
            (this.rWidth = this.sub.get_x() + (this.sub.get_width() - 4) + a))
          : (this.rWidth =
              a + this.bullet.get_width() + a + (this.tf.get_width() - 4) + a);
        this.rHeight = 1.5 * r.normalSize;
        this.rWidth = Math.ceil(this.rWidth);
        this.rHeight = Math.ceil(this.rHeight);
        this.layout();
      };
      h['com.watabou.coogee.ui.MenuItem'] = uc;
      uc.__name__ = 'com.watabou.coogee.ui.MenuItem';
      uc.__super__ = W;
      uc.prototype = w(W.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.bullet.set_y((this.rHeight - this.bullet.get_height()) / 2);
          this.tf.set_y((this.rHeight - this.tf.get_height()) / 2);
          null != this.sub &&
            (this.sub.set_y(this.tf.get_y()),
            this.sub.set_x(
              this.rWidth - this.bullet.get_x() - this.sub.get_width() + 2,
            ));
        },
        hover: function (a) {
          null != this.get_root() &&
            (this.highlight(a),
            Fa.__cast(this.parent, hc).hover(this, this.submenu));
        },
        highlight: function (a) {
          var b = a ? this.formatHover : this.formatNormal;
          this.tf.set_defaultTextFormat(b);
          var d = a ? r.black : r.white;
          this.bg.bmp.get_bitmapData().setPixel(0, 0, d);
          d = a ? r.white : r.black;
          this.bullet.bmp.get_bitmapData().setPixel(0, 0, d);
          null != this.submenu && this.sub.set_defaultTextFormat(b);
        },
        onClick: function (a) {
          null == this.submenu
            ? (a.stopPropagation(),
              this.highlight(!1),
              Fa.__cast(this.parent, hc).getRoot().hide(),
              null != this.callback && this.callback())
            : Fa.__cast(this.parent, hc).hover(
                this,
                null == this.submenu.parent ? this.submenu : null,
              );
        },
        setCheck: function (a) {
          this.bullet.set_visible(a);
          return this;
        },
        __class__: uc,
      });
      var gb = function (a, b) {
        null == b && (b = 1);
        W.call(this);
        this.set_alpha(b);
        this.bmp = new Hg(new Tb(1, 1, !1, a));
        this.addChild(this.bmp);
      };
      h['com.watabou.coogee.ui.SolidRect'] = gb;
      gb.__name__ = 'com.watabou.coogee.ui.SolidRect';
      gb.black = function () {
        return new gb(r.black);
      };
      gb.light = function () {
        return new gb(r.light);
      };
      gb.white = function () {
        return new gb(r.white);
      };
      gb.__super__ = W;
      gb.prototype = w(W.prototype, {
        layout: function () {
          this.bmp.set_width(this.rWidth);
          this.bmp.set_height(this.rHeight);
        },
        __class__: gb,
      });
      var se = function () {
        gb.call(this, r.black);
        this.setSize(2, 2);
      };
      h['com.watabou.coogee.ui.MenuSeparator'] = se;
      se.__name__ = 'com.watabou.coogee.ui.MenuSeparator';
      se.__super__ = gb;
      se.prototype = w(gb.prototype, { __class__: se });
      var Vc = function (a, b, d) {
        this.action = new gc();
        var f = this;
        this.txtLabel = a;
        Tc.call(this);
        this.menu = new hc();
        a = 0;
        for (var g = b.length; a < g; ) {
          var k = a++,
            l = b[k];
          this.menu.addItem(
            l,
            (function (a) {
              return function () {
                f.action.dispatch(a[0]);
              };
            })([null != d ? d[k] : l]),
          );
        }
      };
      h['com.watabou.coogee.ui.MultiAction'] = Vc;
      Vc.__name__ = 'com.watabou.coogee.ui.MultiAction';
      Vc.__super__ = Tc;
      Vc.prototype = w(Tc.prototype, {
        createLabel: function () {
          var a = this,
            b = new dc();
          b.setMargins(2, 4);
          var d = new Zb(this.txtLabel, !0);
          d.set_color(r.white);
          b.add(d);
          d = new P(r.white);
          d.click.add(function () {
            a.onClick(null);
          });
          d.valign = 'fill';
          b.add(d);
          return b;
        },
        onClick: function (a) {
          Tc.prototype.onClick.call(this, a);
          a = ta.getRect(this);
          ta.showMenuAt(this.menu, a.get_left(), a.get_bottom());
        },
        __class__: Vc,
      });
      var Ne = function (a, b, d) {
        null == d && (d = 0);
        null == b && (b = 100);
        null == a && (a = 0);
        this.submit = new gc();
        this.change = new gc();
        this.cycled = !1;
        W.call(this);
        this.min = a;
        this.max = b;
        this.rounding = Math.pow(10, d);
        this.bg = new ba();
        this.bg.addEventListener('mouseDown', m(this, this.onPage));
        this.addChild(this.bg);
        this.scale = gb.black();
        this.scale.mouseEnabled = !1;
        this.add(this.scale);
        this.thumb = gb.black();
        this.thumb.set_buttonMode(!0);
        this.thumb.addEventListener('mouseDown', m(this, this.onStartDrag));
        this.add(this.thumb);
        this.addEventListener('mouseWheel', m(this, this.onWheel));
        this._value = a;
        this._prev = NaN;
        this.setSize(200, 20);
      };
      h['com.watabou.coogee.ui.Slider'] = Ne;
      Ne.__name__ = 'com.watabou.coogee.ui.Slider';
      Ne.__super__ = W;
      Ne.prototype = w(W.prototype, {
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = this.cycled
            ? Lc.cycle(a, this.min, this.max)
            : Lc.gate(a, this.min, this.max);
          this._value = Math.round(this._value * this.rounding) / this.rounding;
          this._prev != this._value &&
            ((this._prev = this._value),
            this.placeThumb(),
            this.change.dispatch(this._value));
          return a;
        },
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(16711680, 0);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.scale.setSize(this.rWidth, 2);
          this.scale.set_y(((this.rHeight - this.scale.get_height()) / 2) | 0);
          this.thumb.setSize(10, this.rHeight);
          this.thumb.set_y(((this.rHeight - this.thumb.get_height()) / 2) | 0);
          this.placeThumb();
        },
        placeThumb: function () {
          this.thumb.set_x(
            ((this.rWidth - this.thumb.get_width()) *
              (this.get_value() - this.min)) /
              (this.max - this.min),
          );
        },
        onStartDrag: function (a) {
          this.stage.addEventListener('mouseMove', m(this, this.onDrag));
          this.stage.addEventListener('mouseUp', m(this, this.onEndDrag));
          this.grabX = this.thumb.get_mouseX();
        },
        onDrag: function (a) {
          this.set_value(
            ((this.get_mouseX() - this.grabX) /
              (this.rWidth - this.thumb.get_width())) *
              (this.max - this.min) +
              this.min,
          );
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', m(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', m(this, this.onEndDrag));
          this.submit.dispatch(this.get_value());
        },
        onPage: function (a) {
          a = this.get_value();
          this.get_mouseX() < this.thumb.get_x()
            ? this.set_value(this.get_value() - 0.1 * (this.max - this.min))
            : this.get_mouseX() > this.thumb.get_x() + this.thumb.get_width() &&
              this.set_value(this.get_value() + 0.1 * (this.max - this.min));
          a != this.get_value() && this.submit.dispatch(this.get_value());
        },
        onWheel: function (a) {
          var b = this.get_value(),
            d = this.get_value();
          a = a.delta;
          this.set_value(d + (0 == a ? 0 : 0 > a ? -1 : 1) * this.rounding);
          b != this.get_value() && this.submit.dispatch(this.get_value());
        },
        __class__: Ne,
        __properties__: w(W.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var te = function (a) {
        this.enter = new gc();
        this.update = new gc();
        W.call(this);
        this.tf = tc.get(
          a,
          r.format(r.uiFont, r.normalSize, r.black),
          m(this, this.onUpdate),
        );
        this.tf.set_border(!0);
        this.tf.set_borderColor(r.black);
        this.tf.set_autoSize(2);
        this.tf.set_wordWrap(!0);
        this.addChild(this.tf);
        this.addEventListener('focusIn', m(this, this.onFocusIn));
        this.tf.addEventListener('keyDown', m(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      h['com.watabou.coogee.ui.TextArea'] = te;
      te.__name__ = 'com.watabou.coogee.ui.TextArea';
      te.__super__ = W;
      te.prototype = w(W.prototype, {
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
          this.tf.setSelection(
            this.tf.get_text().length,
            this.tf.get_text().length,
          );
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onUpdate: function () {
          this.update.dispatch(this.tf.get_text());
        },
        __class__: te,
      });
      var lc = function (a, b) {
        null == b && (b = !1);
        null == a && (a = '');
        this.leave = new Kd();
        this.enter = new gc();
        this.update = new gc();
        W.call(this);
        this.tf = tc.input(
          a,
          r.format(b ? r.uiFontMono : r.uiFont, r.normalSize, r.black),
          m(this, this.onUpdate),
        );
        this.tf.set_backgroundColor(r.white);
        this.tf.set_borderColor(r.black);
        this.addChild(this.tf);
        this.addEventListener('focusIn', m(this, this.onFocusIn));
        this.addEventListener('focusOut', m(this, this.onFocusOut));
        this.addEventListener('keyDown', m(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      h['com.watabou.coogee.ui.TextInput'] = lc;
      lc.__name__ = 'com.watabou.coogee.ui.TextInput';
      lc.__super__ = W;
      lc.prototype = w(W.prototype, {
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
        },
        onFocusOut: function (a) {
          this.leave.dispatch();
        },
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
          this.layoutPrompt();
        },
        layoutPrompt: function () {
          if (null != this.label) {
            var a = this.get_centered();
            this.label.set_x(
              a ? (this.rWidth - this.label.get_width()) / 2 : 2,
            );
            this.label.set_y(
              a ? (this.rHeight - this.label.get_height()) / 2 : 2,
            );
          }
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.updatePrompt();
          return a;
        },
        get_centered: function () {
          return 0 == this.tf.get_defaultTextFormat().align;
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          this.layoutPrompt();
          return a;
        },
        set_readOnly: function (a) {
          this.tf.set_type(a ? 0 : 1);
          return a;
        },
        set_restrict: function (a) {
          return this.tf.set_restrict(a);
        },
        onUpdate: function () {
          this.updatePrompt();
          this.update.dispatch(this.tf.get_text());
        },
        updatePrompt: function () {
          null != this.label &&
            (this.layoutPrompt(),
            this.label.set_visible('' == this.tf.get_text()));
        },
        set_prompt: function (a) {
          null == this.label &&
            ((this.label = new Zb(a)),
            this.label.set_enabled(!1),
            this.label.set_color(r.medium),
            this.add(this.label),
            this.updatePrompt());
          this.label.set_text(a);
          return a;
        },
        selecteAll: function () {
          this.tf.setSelection(0, this.tf.get_length());
        },
        set_enabled: function (a) {
          W.prototype.set_enabled.call(this, a);
          this.tf.set_alpha(a ? 1 : 0.6);
          return (this.tf.mouseEnabled = a);
        },
        __class__: lc,
        __properties__: w(W.prototype.__properties__, {
          set_prompt: 'set_prompt',
          set_restrict: 'set_restrict',
          set_readOnly: 'set_readOnly',
          set_centered: 'set_centered',
          get_centered: 'get_centered',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var Za = function (a) {
        var b = this;
        W.call(this);
        a = tc.get(a, r.format(r.uiFont, r.normalSize, r.white));
        a.set_x(10);
        a.set_y(10);
        this.addChild(a);
        this.rWidth = 10 + a.get_width() + 10;
        this.rHeight = 10 + a.get_height() + 10;
        this.get_graphics().beginFill(r.black);
        this.get_graphics().drawRoundRect(0, 0, this.rWidth, this.rHeight, 10);
        Oe.run(Za.delay, function (a) {
          b.set_alpha(Za.delay * (1 - a));
        }).onComplete(function () {
          null != b.parent && b.parent.removeChild(b);
        });
      };
      h['com.watabou.coogee.ui.Toast'] = Za;
      Za.__name__ = 'com.watabou.coogee.ui.Toast';
      Za.show = function (a) {
        Za.hide();
        var b = ta.layer;
        a = Za.instance = new Za(a);
        a.set_x(((b.get_width() - a.get_width()) / 2) | 0);
        a.set_y((b.get_height() - a.get_height() - Za.offset) | 0);
        b.addChild(a);
        return a;
      };
      Za.hide = function () {
        null != Za.instance &&
          null != Za.instance.parent &&
          Za.instance.parent.removeChild(Za.instance);
      };
      Za.__super__ = W;
      Za.prototype = w(W.prototype, { __class__: Za });
      var ta = function () {};
      h['com.watabou.coogee.ui.UI'] = ta;
      ta.__name__ = 'com.watabou.coogee.ui.UI';
      ta.layer = null;
      ta.menu = null;
      ta.showMenu = function (a) {
        ta.showMenuAt(a, ta.layer.get_mouseX(), ta.layer.get_mouseY());
      };
      ta.showMenuAt = function (a, b, d) {
        var f = a.items;
        0 < f.length &&
          f[f.length - 1] instanceof se &&
          a.remove(f[f.length - 1]);
        ta.menu = a;
        a.set_x(
          (b + a.get_width() <= ta.layer.get_width() ? b : b - a.get_width()) |
            0,
        );
        a.set_y(
          (d + a.get_height() <= ta.layer.get_height()
            ? d
            : d - a.get_height()) | 0,
        );
        0 > a.get_x() && a.set_x(0);
        0 > a.get_y() && a.set_y(0);
        ta.layer.addChild(a);
      };
      ta.hideMenu = function () {
        return null != ta.menu && null != ta.menu.stage
          ? (ta.menu.hide(), (ta.menu = null), !0)
          : !1;
      };
      ta.showDialog = function (a, b) {
        a = Md.show(ta.layer, a, b);
        a.onHide.add(function (a) {
          M.remove(ta.windows, a);
        });
        ta.windows.push(a);
        return a;
      };
      ta.wipe = function () {
        ta.hideMenu();
        for (var a = 0, b = ta.windows.slice(); a < b.length; ) {
          var d = b[a];
          ++a;
          d.hide();
        }
        ta.windows = [];
      };
      ta.findForm = function (a) {
        for (var b = 0, d = ta.windows; b < d.length; ) {
          var f = d[b];
          ++b;
          if (Fa.__instanceof(f.content, a)) return f.content;
        }
        return null;
      };
      ta.getRect = function (a) {
        var b = new I(a.get_x(), a.get_y()),
          d = new I(a.get_x() + a.rWidth, a.get_y() + a.rHeight);
        b = ta.layer.globalToLocal(a.parent.localToGlobal(b));
        d = ta.layer.globalToLocal(a.parent.localToGlobal(d));
        return new ja(b.x, b.y, d.x - b.x, d.y - b.y);
      };
      ta.showToast = function (a) {
        Za.show(a);
      };
      ta.checkTarget = function (a) {
        for (; null != a; ) {
          if (a == ta.layer) return !0;
          a = a.parent;
        }
        return !1;
      };
      var r = function () {};
      h['com.watabou.coogee.ui.UIStyle'] = r;
      r.__name__ = 'com.watabou.coogee.ui.UIStyle';
      r.format = function (a, b, d) {
        null == d && (d = 0);
        return new ue('_' == a.charAt(0) ? a : $b.getFont(a).name, b, d);
      };
      r.useDefault = function () {
        r.black = 4012352;
        r.dark = 5725031;
        r.medium = 7569526;
        r.light = 10064002;
        r.white = 14276035;
        r.smallSize = 18;
        r.normalSize = 20;
        r.uiFont = 'ui_font';
        r.uiFontMono = 'ui_font_mono';
      };
      var E = function () {
        this.click = new Kd();
        W.call(this);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.setSize(12, 12);
      };
      h['com.watabou.coogee.ui.elements.CloseButton'] = E;
      E.__name__ = 'com.watabou.coogee.ui.elements.CloseButton';
      E.__super__ = W;
      E.prototype = w(W.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(r.white);
          this.get_graphics().drawCircle(this.rWidth / 2, this.rHeight / 2, 6);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: E,
      });
      var P = function (a) {
        null == a && (a = 0);
        this.click = new Kd();
        W.call(this);
        this.bg = new gb(0, 0);
        this.addChild(this.bg);
        0 == a && (a = r.black);
        var b = r.smallSize / 4;
        this.image = new ba();
        var d = this.image.get_graphics();
        d.beginFill(a);
        d.moveTo(-b, -b);
        d.lineTo(b, -b);
        d.lineTo(0, b);
        this.addChild(this.image);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.setSize(2 * b, 2 * b);
      };
      h['com.watabou.coogee.ui.elements.DropDownButton'] = P;
      P.__name__ = 'com.watabou.coogee.ui.elements.DropDownButton';
      P.__super__ = W;
      P.prototype = w(W.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.image.set_x(this.rWidth / 2);
          this.image.set_y(this.rHeight / 2);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: P,
      });
      var rb = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = 1e3);
        null == b && (b = 0);
        var g = this;
        if (0 == f) lc.call(this, null == d ? 'null' : '' + d, !0);
        else {
          for (var k = '0.', l = 0, u = f; l < u; ) (l++, (k += '0'));
          lc.call(this, k, !0);
        }
        this.min = b;
        this.max = d;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('-0-9.');
        var p = Math.pow(10, Math.floor(Math.log(d - b) / Math.log(10)) - 1),
          h = 0 < f ? Math.pow(10, f) : 0;
        this.addEventListener('mouseWheel', function (a) {
          var f = parseFloat(g.get_text());
          f = Lc.gate(f + (0 < a.delta ? 1 : -1) * p, b, d);
          0 < h && (f = Math.round(f * h) / h);
          g.set_text(null == f ? 'null' : '' + f);
        });
      };
      h['com.watabou.coogee.ui.elements.FloatInput'] = rb;
      rb.__name__ = 'com.watabou.coogee.ui.elements.FloatInput';
      rb.__super__ = lc;
      rb.prototype = w(lc.prototype, { __class__: rb });
      var kb = function (a) {
        this.click = new gc();
        var b = this;
        W.call(this);
        this.bg = gb.light();
        this.add(this.bg);
        this.hbox = new dc();
        this.add(this.hbox);
        for (var d = 0; d < a.length; ) {
          var f = [a[d]];
          ++d;
          var g = new Uc(f[0]);
          g.click.add(
            (function (a) {
              return function () {
                b.click.dispatch(a[0]);
              };
            })(f),
          );
          g.set_width(100);
          this.hbox.add(g);
        }
        this.setSize(this.hbox.get_width(), this.hbox.get_height());
      };
      h['com.watabou.coogee.ui.elements.FormButtons'] = kb;
      kb.__name__ = 'com.watabou.coogee.ui.elements.FormButtons';
      kb.__super__ = W;
      kb.prototype = w(W.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.hbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.hbox.set_x(this.rWidth - this.hbox.get_width());
          this.hbox.set_y(((this.rHeight - this.hbox.get_height()) / 2) | 0);
        },
        __class__: kb,
      });
      var Oa = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = 1e3);
        null == b && (b = 0);
        var g = this,
          k = '0';
        if (0 == f) for (var l = d; 10 <= l; ) ((k += '0'), (l = (l / 10) | 0));
        else for (l = 1; l < f; ) (l++, (k += '0'));
        lc.call(this, k, !0);
        this.min = b;
        this.max = d;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('0-9');
        this.addEventListener('mouseWheel', function (a) {
          a = 0 < a.delta ? 1 : -1;
          g.update.dispatch(G.string(g.set_value(g.get_value() + a)));
        });
      };
      h['com.watabou.coogee.ui.elements.IntInput'] = Oa;
      Oa.__name__ = 'com.watabou.coogee.ui.elements.IntInput';
      Oa.__super__ = lc;
      Oa.prototype = w(lc.prototype, {
        get_value: function () {
          return Lc.gatei(G.parseInt(this.get_text()), this.min, this.max);
        },
        set_value: function (a) {
          a = Lc.gatei(a, this.min, this.max);
          this.tf.set_text(null == a ? 'null' : '' + a);
          return a;
        },
        setRange: function (a, b) {
          var d = G.parseInt(this.get_text());
          this.min = a;
          this.max = b;
          (d < a || d > b) && this.set_value(d);
        },
        __class__: Oa,
        __properties__: w(lc.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var ve = function (a, b) {
        W.call(this);
        this.border2 = gb.black();
        this.add(this.border2);
        this.paint2 = gb.white();
        this.add(this.paint2);
        this.border = gb.black();
        this.add(this.border);
        this.paint = gb.white();
        this.add(this.paint);
        this.colors = a;
        a = this.colors[0];
        this.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        a = 1 < this.colors.length ? this.colors[1] : r.white;
        this.paint2.bmp.get_bitmapData().setPixel(0, 0, a);
        this.setSize(b, b);
        this.addEventListener('click', m(this, this.onClickEvent));
      };
      h['com.watabou.coogee.ui.elements.MultiSwatch'] = ve;
      ve.__name__ = 'com.watabou.coogee.ui.elements.MultiSwatch';
      ve.__super__ = W;
      ve.prototype = w(W.prototype, {
        layout: function () {
          var a = this.rWidth - 4 - 1,
            b = this.rHeight - 4 - 1;
          this.border.setSize(a, b);
          this.paint.setSize(a - 2, b - 2);
          this.paint.set_x(this.paint.set_y(1));
          this.border2.setSize(a, b);
          this.border2.set_x(this.border2.set_y(5));
          this.paint2.setSize(a - 2, b - 2);
          this.paint2.set_x(this.border2.get_x() + 1);
          this.paint2.set_y(this.border2.get_y() + 1);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: ve,
      });
      var lb = function (a, b) {
        W.call(this);
        this.border = gb.black();
        this.add(this.border);
        this.paint = new gb(a);
        this.add(this.paint);
        this.setSize(b, b);
        this.addEventListener('click', m(this, this.onClickEvent));
      };
      h['com.watabou.coogee.ui.elements.Swatch'] = lb;
      lb.__name__ = 'com.watabou.coogee.ui.elements.Swatch';
      lb.__super__ = W;
      lb.prototype = w(W.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.paint.setSize(this.rWidth - 2, this.rHeight - 2);
          this.paint.set_x(this.paint.set_y(1));
        },
        onClick: function (a) {
          this.callback = a;
          this.set_buttonMode(null != a);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: lb,
      });
      var Mc = function () {
        this.update = new Of();
        W.call(this);
        this.selected = Wa.get('tags', []);
        this.active = [];
        this.tagViews = new Sa();
        for (var a = 0, b = Mc.getTags(); a < b.length; ) {
          var d = b[a];
          ++a;
          var f = new Nc(d, Mc.getInfo(d), m(this, this.onClick));
          this.tagViews.h[d] = f;
          this.add(f);
          -1 != this.selected.indexOf(d) && f.setColor(r.black);
        }
      };
      h['com.watabou.coogee.ui.elements.TagsView'] = Mc;
      Mc.__name__ = 'com.watabou.coogee.ui.elements.TagsView';
      Mc.getTags = null;
      Mc.getInfo = null;
      Mc.resTags = null;
      Mc.__super__ = W;
      Mc.prototype = w(W.prototype, {
        set: function (a) {
          this.active = a.slice();
          this.layout();
        },
        select: function (a, b) {
          null == b && (b = !0);
          if ((-1 != this.selected.indexOf(a)) != b) {
            b
              ? Mc.resTags(this.selected, a)
              : (M.remove(this.selected, a), Mc.resTags(this.selected, null));
            for (
              var d = this.tagViews.h, f = Object.keys(d), g = f.length, k = 0;
              k < g;

            ) {
              var l = f[k++];
              d[l].setColor(-1 != this.selected.indexOf(l) ? r.black : r.dark);
            }
            this.update.dispatch(a, b);
          }
        },
        layout: function () {
          for (
            var a = [],
              b = [],
              d = this.tagViews.h,
              f = Object.keys(d),
              g = f.length,
              k = 0;
            k < g;

          ) {
            var l = f[k++],
              u = l;
            l = d[l];
            -1 != this.active.indexOf(u) ? a.push(l) : b.push(l);
          }
          u = function (a, b) {
            return a.tag < b.tag ? -1 : a.tag > b.tag ? 1 : 0;
          };
          a.sort(u);
          b.sort(u);
          f = d = 8;
          for (k = g = 0; k < a.length; )
            ((u = a[k]),
              ++k,
              d + u.get_width() > this.rWidth - 8 &&
                ((d = 8), (f += g + 4), (g = 0)),
              u.set_x(d),
              u.set_y(f),
              g < u.get_height() && (g = u.get_height()),
              (d += u.get_width() + 4));
          f += g;
          8 == f && (f = 24);
          this.get_graphics().clear();
          this.get_graphics().beginFill(r.light);
          this.get_graphics().drawRoundRect(0, 0, this.rWidth, f + 8, 32);
          d = 0;
          f += 16;
          for (k = g = 0; k < b.length; )
            ((u = b[k]),
              ++k,
              d + u.get_width() > this.rWidth &&
                ((d = 0), (f += g + 4), (g = 0)),
              u.set_x(d),
              u.set_y(f),
              g < u.get_height() && (g = u.get_height()),
              (d += u.get_width() + 4));
          this.rHeight = f + g;
        },
        onClick: function (a) {
          this.select(a, -1 == this.selected.indexOf(a));
        },
        __class__: Mc,
      });
      var Nc = function (a, b, d) {
        this.color = r.dark;
        W.call(this);
        this.tag = a;
        this.label = tc.get(a, r.format(r.uiFont, r.smallSize, r.white));
        this.label.mouseEnabled = !1;
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', function (f) {
          f.stopPropagation();
          f.shiftKey ? null != b && ta.showToast(b) : d(a);
        });
        this.setSize(this.label.get_width() + 8, this.label.get_height() + 8);
      };
      h['com.watabou.coogee.ui.elements.TagView'] = Nc;
      Nc.__name__ = 'com.watabou.coogee.ui.elements.TagView';
      Nc.__super__ = W;
      Nc.prototype = w(W.prototype, {
        layout: function () {
          this.updateBg();
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        updateBg: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(this.color);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            16,
          );
        },
        setColor: function (a) {
          this.color = a;
          this.updateBg();
        },
        __class__: Nc,
      });
      var $c = function (a, b, d, f) {
        null == d && (d = !1);
        this.update = new gc();
        this.edit = function (a) {
          Nb.trace(a.get_value(), {
            fileName: '../classes/com/watabou/coogee/ui/elements/TextView.hx',
            lineNumber: 22,
            className: 'com.watabou.coogee.ui.elements.TextView',
            methodName: 'edit',
          });
        };
        this.data2text = function (a) {
          return G.string(a);
        };
        this._value = null;
        var g = this;
        null != b && (this.data2text = b);
        null != f && (this.edit = f);
        this._value = a;
        W.call(this);
        this.border = gb.black();
        this.add(this.border);
        this.bg = gb.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = tc.get(
          this.data2text(a),
          r.format(r.uiFont, d ? r.smallSize : r.normalSize, r.black),
        );
        this.addChild(this.tf);
        this.btn = new P();
        this.btn.set_width(r.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        this.tf.mouseEnabled = !1;
        this.set_buttonMode(!0);
        this.addEventListener('click', function (a) {
          g.edit(g);
        });
        this.setSize(
          Math.ceil(this.tf.get_width() + this.btn.get_width()),
          Math.ceil(this.tf.get_height()),
        );
      };
      h['com.watabou.coogee.ui.elements.TextView'] = $c;
      $c.__name__ = 'com.watabou.coogee.ui.elements.TextView';
      $c.editInForm = function (a, b, d) {
        return function (f) {
          var g = ta.findForm(a);
          null == g && ((g = ib.createInstance(a, [])), ta.showDialog(g));
          g.link(
            b,
            f.get_value(),
            function (a) {
              f.set_value(a);
              f.update.dispatch(a);
            },
            d,
          );
        };
      };
      $c.__super__ = W;
      $c.prototype = w(W.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_autoSize(2);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.tf.set_scrollH(0);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = a;
          this.tf.set_text(this.data2text(a));
          return a;
        },
        __class__: $c,
        __properties__: w(W.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var vc = function (a) {
        $a.call(this, null != a ? a.concat(vc.okCancel) : vc.okCancel);
      };
      h['com.watabou.coogee.ui.elements.EditForm'] = vc;
      vc.__name__ = 'com.watabou.coogee.ui.elements.EditForm';
      vc.__super__ = $a;
      vc.prototype = w($a.prototype, {
        getTitle: function () {
          return 'Edit';
        },
        onButton: function (a) {
          if ('OK' == a) {
            if (null != this.onOK) this.onOK(this.get());
            this.dialog.hide();
          } else $a.prototype.onButton.call(this, a);
        },
        set: function (a) {},
        get: function () {
          return null;
        },
        link: function (a, b, d, f) {
          null != a && this.dialog.setTitle(a);
          this.set(b);
          this.onOK = d;
          null != this.host &&
            this.host.dialog.onHide.remove(m(this, this.onHostHidden));
          this.host = f;
          null != f && f.dialog.onHide.add(m(this, this.onHostHidden));
        },
        onHostHidden: function (a) {
          this.dialog.hide();
        },
        __class__: vc,
      });
      var jf = function (a) {
        this.close = new Kd();
        var b = this;
        W.call(this);
        this.bg = gb.black();
        this.add(this.bg);
        this.btn = new E();
        this.btn.click.add(function () {
          b.close.dispatch();
        });
        this.add(this.btn);
        this.tf = tc.get(a, r.format(r.uiFont, r.smallSize, r.white));
        this.tf.mouseEnabled = !1;
        this.addChild(this.tf);
        this.setSize(this.tf.get_width(), 36);
      };
      h['com.watabou.coogee.ui.elements.WindowHeader'] = jf;
      jf.__name__ = 'com.watabou.coogee.ui.elements.WindowHeader';
      jf.__super__ = W;
      jf.prototype = w(W.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.btn.setSize(this.rHeight, this.rHeight);
          this.btn.set_x(this.rWidth - this.rHeight);
          this.tf.set_x(
            this.tf.set_y(((this.rHeight - this.tf.get_height()) / 2) | 0),
          );
        },
        setText: function (a) {
          this.tf.set_text(a);
        },
        __class__: jf,
      });
      var xb = function () {
        var a = this;
        vc.call(this);
        var b = new dc();
        this.swatch = new lb(0, 60);
        this.swatch.valign = 'fill';
        b.add(this.swatch);
        var d = new lf(3);
        d.setMargins(0, 10);
        var f = function (b, f) {
          b = new Zb(b);
          b.valign = 'center';
          d.add(b);
          var g = new Ne(0, f);
          g.valign = 'center';
          d.add(g);
          var k = new Oa(0, 0, f, 3);
          d.add(k);
          k.update.add(function (a) {
            g.set_value(k.get_value());
          });
          g.change.add(function (b) {
            k.set_value(Math.round(b));
            a.updateSwatch();
          });
          return g;
        };
        this.hue = f('Hue', 359);
        this.hue.cycled = !0;
        this.sat = f('Sat', 100);
        this.val = f('Val', 100);
        b.add(d);
        this.add(b);
      };
      h['com.watabou.coogee.ui.forms.ColorForm'] = xb;
      xb.__name__ = 'com.watabou.coogee.ui.forms.ColorForm';
      xb.__super__ = vc;
      xb.prototype = w(vc.prototype, {
        set: function (a) {
          this.setColor(a);
        },
        get: function () {
          return this.color;
        },
        setColor: function (a) {
          a = Ya.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
        },
        updateSwatch: function () {
          var a = (this.color = Ya.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        },
        __class__: xb,
      });
      var dd = function () {
        var a = this;
        vc.call(this);
        var b = new Ab(),
          d = new dc();
        d.setMargins(0, 10);
        this.face = new lc('');
        this.face.set_width(300);
        this.face.set_prompt('Font name');
        this.face.update.add(function (b) {
          a.updatePreview();
        });
        d.add(this.face);
        this.size = new Oa(18, 8, 96);
        this.size.set_restrict('0-9');
        this.size.update.add(function (b) {
          a.updatePreview();
        });
        d.add(this.size);
        var f = new dc();
        f.setMargins(0, 10);
        this.bold = new Ld('Bold');
        this.bold.changed.add(function (b) {
          a.updatePreview();
        });
        f.add(this.bold);
        this.italic = new Ld('Italic');
        this.italic.changed.add(function (b) {
          a.updatePreview();
        });
        f.add(this.italic);
        this.preview = new nh();
        this.preview.halign = 'fill';
        this.preview.set_height(100);
        b.add(d);
        b.add(f);
        b.add(this.preview);
        this.add(b);
      };
      h['com.watabou.coogee.ui.forms.FontForm'] = dd;
      dd.__name__ = 'com.watabou.coogee.ui.forms.FontForm';
      dd.font2text = function (a) {
        if (null == a) return 'Default';
        if (null != a.face) {
          var b = a.face;
          b =
            b.length <= dd.maxFaceLength
              ? b
              : M.substr(b, 0, dd.maxFaceLength - 1) + '...';
        } else
          null != a.embedded && $b.exists(a.embedded)
            ? ((b = $b.getFont(a.embedded).name),
              (b =
                '[' +
                (b.length <= dd.maxFaceLength
                  ? b
                  : M.substr(b, 0, dd.maxFaceLength - 1) + '...') +
                ']'))
            : (b = '[default]');
        b += ' ' + a.size;
        a.bold && (b += ', bold');
        a.italic && (b += ', italic');
        return b;
      };
      dd.fontFace2text = function (a) {
        if (null == a) return 'Default';
        var b =
          null != a.face
            ? a.face
            : null != a.embedded && $b.exists(a.embedded)
              ? $b.getFont(a.embedded).name
              : '[default]';
        a.bold && (b += ', bold');
        a.italic && (b += ', italic');
        return b;
      };
      dd.__super__ = vc;
      dd.prototype = w(vc.prototype, {
        set: function (a) {
          this.face.set_text(null != a.face ? a.face : '');
          this.size.set_value(a.size);
          this.bold.set_value(a.bold);
          this.italic.set_value(a.italic);
          this.embedded = a.embedded;
          this.face.set_prompt(
            null != this.embedded && $b.exists(this.embedded)
              ? $b.getFont(this.embedded).name
              : 'Font name',
          );
          this.preview.setFont(a);
          this.face.selecteAll();
          null != this.stage && this.stage.set_focus(this.face);
        },
        get: function () {
          return {
            face: '' == this.face.get_text() ? null : this.face.get_text(),
            embedded: this.embedded,
            size: this.size.get_value(),
            bold: this.bold.get_value(),
            italic: this.italic.get_value(),
          };
        },
        updatePreview: function () {
          this.preview.setFont(this.get());
        },
        __class__: dd,
      });
      var nh = function (a) {
        null == a && (a = 'Sample Text');
        W.call(this);
        this.border = gb.black();
        this.addChild(this.border);
        this.bg = gb.white();
        this.bg.set_x(this.bg.set_y(1));
        this.addChild(this.bg);
        this.tf = new Kc();
        this.tf.set_text(a);
        this.fixText();
        this.addChild(this.tf);
        this.maskRect = new Pe();
        this.addChild(this.maskRect);
        this.tf.set_mask(this.maskRect);
      };
      h['com.watabou.coogee.ui.forms._FontForm.FontPreview'] = nh;
      nh.__name__ = 'com.watabou.coogee.ui.forms._FontForm.FontPreview';
      nh.__super__ = W;
      nh.prototype = w(W.prototype, {
        layout: function () {
          var a = this.maskRect.get_graphics();
          a.clear();
          a.beginFill(16711680);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.border.set_width(this.rWidth);
          this.border.set_height(this.rHeight);
          this.bg.set_width(this.rWidth - 2);
          this.bg.set_height(this.rHeight - 2);
          this.tf.set_x(Math.max((this.rWidth - this.tf.get_width()) / 2, 0));
          this.tf.set_y(Math.max((this.rHeight - this.tf.get_height()) / 2, 0));
        },
        setFont: function (a) {
          a = Oc.font2format(a);
          null == a && (a = new ue());
          a.color = r.black;
          this.tf.setTextFormat(a);
          this.fixText();
          this.layout();
        },
        fixText: function () {
          this.tf.set_autoSize(1);
          var a = this.tf.get_width(),
            b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(Math.ceil(a));
          this.tf.set_height(Math.ceil(b));
        },
        __class__: nh,
      });
      var Sj = function (a) {
        $a.call(this, ['OK']);
        var b = new mf();
        a = new te(a);
        a.mouseEnabled = !1;
        a.mouseChildren = !1;
        a.set_width(360);
        b.add(a);
        this.add(b);
      };
      h['com.watabou.coogee.ui.forms.Message'] = Sj;
      Sj.__name__ = 'com.watabou.coogee.ui.forms.Message';
      Sj.__super__ = $a;
      Sj.prototype = w($a.prototype, {
        getTitle: function () {
          return 'Message';
        },
        __class__: Sj,
      });
      var Tj = function () {
        vc.call(this);
        this.content = new Ab();
        this.content.setMargins(12, 12);
        this.add(this.content);
      };
      h['com.watabou.coogee.ui.forms.MultiColorForm'] = Tj;
      Tj.__name__ = 'com.watabou.coogee.ui.forms.MultiColorForm';
      Tj.__super__ = vc;
      Tj.prototype = w(vc.prototype, {
        onButton: function (a) {
          'Add' == a
            ? ((a = this.get()), a.push(a[a.length - 1]), this.set(a))
            : vc.prototype.onButton.call(this, a);
        },
        set: function (a) {
          this.content.removeChildren();
          for (var b = [], d = 0, f = a.length; d < f; ) {
            var g = d++,
              k = a[g];
            if (0 < g) {
              var l = new gb(r.black);
              l.halign = 'fill';
              l.setSize(2, 2);
              this.content.add(l);
            }
            g = new Uj(this.content, k, 0 == g, g == a.length - 1);
            g.action.add(m(this, this.onItemAction));
            b.push(g);
          }
          this.items = b;
          this.add(this.content);
          Fa.__cast(this.parent, Zc).resize(!0);
        },
        get: function () {
          for (var a = [], b = 0, d = this.items; b < d.length; ) {
            var f = d[b];
            ++b;
            a.push(f.color);
          }
          return a;
        },
        onItemAction: function (a, b) {
          var d = this.items.indexOf(a),
            f = this.get();
          f.splice(d, 1);
          switch (b) {
            case 'Duplicate':
              f.splice(d, 0, a.color);
              f.splice(d, 0, a.color);
              break;
            case 'Move down':
              f.splice(d + 1, 0, a.color);
              break;
            case 'Move up':
              f.splice(d - 1, 0, a.color);
          }
          this.set(f);
        },
        __class__: Tj,
      });
      var Uj = function (a, b, d, f) {
        this.action = new Of();
        var g = this;
        this.color = b;
        var k = new dc();
        k.setMargins(0, 10);
        var l = new Ab();
        l.setMargins(0, 10);
        this.hex = new lc('#000000', !0);
        this.hex.set_text(R.hex(b, 6));
        this.hex.set_restrict('#0-9a-fA-F');
        this.hex.update.add(m(this, this.onHex));
        l.add(this.hex);
        this.swatch = new lb(b, 10 + 2 * this.hex.get_height());
        this.swatch.halign = 'fill';
        l.add(this.swatch);
        k.add(l);
        l = new lf(4);
        l.setMargins(0, 10);
        var u = ['Duplicate'];
        d || u.push('Move up');
        f || u.push('Move down');
        (d && f) || u.push('Delete');
        d = new Vc('...', u);
        d.action.add(function (a) {
          g.action.dispatch(g, a);
        });
        d.valign = 'fill';
        b = Ya.rgb2hsv(b);
        this.hue = this.addRow(l, 'Hue', 359, b.x, d);
        this.sat = this.addRow(l, 'Sat', 100, 100 * b.y);
        this.val = this.addRow(l, 'Val', 100, 100 * b.z);
        k.add(l);
        a.add(k);
      };
      h['com.watabou.coogee.ui.forms.ColorItem'] = Uj;
      Uj.__name__ = 'com.watabou.coogee.ui.forms.ColorItem';
      Uj.prototype = {
        addRow: function (a, b, d, f, g) {
          var k = this;
          d |= 0;
          f |= 0;
          b = new Zb(b);
          b.valign = 'center';
          a.add(b);
          var l = new Ne(0, d);
          l.set_value(f);
          l.valign = 'center';
          a.add(l);
          var u = new Oa(f, 0, d, 3);
          a.add(u);
          u.update.add(function (a) {
            l.set_value(u.get_value());
          });
          l.change.add(function (a) {
            u.set_value(Math.round(a));
            k.updateSwatch();
          });
          null != g ? a.add(g) : a.addEmpty();
          return l;
        },
        onHex: function (a) {
          '#' == a.charAt(0) && (a = M.substr(a, 1, null));
          if (3 == a.length) {
            var b = [];
            b.push(a.charAt(0) + a.charAt(0));
            b.push(a.charAt(1) + a.charAt(1));
            b.push(a.charAt(2) + a.charAt(2));
            a = b.join('');
          }
          6 < a.length && (a = M.substr(a, 0, 6));
          a = G.parseInt('0x' + a);
          a = Ya.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
          this.updateSwatch();
        },
        updateSwatch: function () {
          var a = (this.color = Ya.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          this.hex.set_text(R.hex(this.color, 6));
        },
        __class__: Uj,
      };
      var zc = function (a, b) {
        this.onNullAsset = function (a, b) {
          Nb.trace('No ' + a + ' palette!', {
            fileName: '../classes/com/watabou/coogee/ui/forms/PaletteForm.hx',
            lineNumber: 38,
            className: 'com.watabou.coogee.ui.forms.PaletteForm',
            methodName: 'onNullAsset',
          });
        };
        this.getName = function (a) {
          return 'palette';
        };
        var d = this;
        jb.call(this);
        this.form = new dc();
        this.form.setMargins(0, 0);
        this.add(this.form);
        this.tabs = new oh();
        this.form.add(this.tabs);
        var f = [
          new Uc('Load', m(this, this.onLoad)),
          new Uc('Apply', function () {
            a(d.getPalette());
          }),
          new Uc('Save', function () {
            d.onSave(d.getPalette());
          }),
        ];
        if (null != b) {
          for (var g = [], k = []; 0 < b.length; )
            (g.push(b.shift()), k.push(b.shift()));
          b = new Vc('Preset', g, k);
          b.action.add(function (a) {
            d.loadPreset(a);
          });
          f.unshift(b);
        }
        this.buttons = new ph(f);
        this.form.add(this.buttons);
        this.onApply = a;
        this.values = [];
      };
      h['com.watabou.coogee.ui.forms.PaletteForm'] = zc;
      zc.__name__ = 'com.watabou.coogee.ui.forms.PaletteForm';
      zc.txt2color = function (a) {
        '#' == a.charAt(0) && (a = M.substr(a, 1, null));
        if (3 == a.length) {
          var b = [];
          b.push(a.charAt(0) + a.charAt(0));
          b.push(a.charAt(1) + a.charAt(1));
          b.push(a.charAt(2) + a.charAt(2));
          a = b.join('');
        }
        6 < a.length && (a = M.substr(a, 0, 6));
        return G.parseInt('0x' + a);
      };
      zc.txt2float = function (a, b, d) {
        return Lc.gate(parseFloat(a), b, d);
      };
      zc.txt2int = function (a, b, d) {
        return Lc.gatei(G.parseInt(a), b | 0, d | 0);
      };
      zc.swatches = function (a, b) {
        return function (d) {
          for (
            var f = null != a ? a + '_' : '', g = [], k = 0;
            k < b.length;

          ) {
            var l = b[k];
            ++k;
            g.push(qh.get(d.getColor(l)));
          }
          return f + g.join('_');
        };
      };
      zc.__super__ = jb;
      zc.prototype = w(jb.prototype, {
        onShow: function () {
          jb.prototype.onShow.call(this);
          this.tabs.onTab(zc.lastTab);
          this.tabs.change.add(function (a) {
            zc.lastTab = a;
          });
        },
        onEnter: function () {
          this.onApply(this.getPalette());
        },
        layout: function () {
          null != this.tabs && this.tabs.layout();
          this.form.layout();
          jb.prototype.layout.call(this);
        },
        onKey: function (a) {
          var b = this.tabs.getTab();
          switch (a) {
            case 33:
              if (b < this.tabs.getTabCount() - 1) this.tabs.onTab(b + 1);
              break;
            case 34:
              if (0 < b) this.tabs.onTab(this.tabs.getTab() - 1);
              break;
            default:
              return jb.prototype.onKey.call(this, a);
          }
          return !0;
        },
        addTab: function (a) {
          this.grid = new lf(2);
          this.tabs.addTab(a, this.grid);
        },
        addColor: function (a, b, d) {
          var f = this;
          null == this.grid && this.addTab(null);
          var g = new Zb(b);
          this.grid.add(g);
          b = new dc();
          b.setMargins(0, 10);
          var k = new lc('#000000', !0);
          k.set_text(R.hex(d, 6));
          k.set_restrict('#0-9a-fA-F');
          b.add(k);
          var l = new lb(d, k.get_height());
          b.add(l);
          k.update.add(function (a) {
            a = zc.txt2color(a);
            l.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          });
          l.onClick(function () {
            f.onColor(g.get_text(), l, function (a) {
              k.set_text(R.hex(a, 6));
              l.paint.bmp.get_bitmapData().setPixel(0, 0, a);
            });
          });
          this.grid.add(b);
          this.values.push({ id: a, type: ec.COLOR, view: k, swatch: l });
          this.layout();
        },
        addFont: function (a, b, d, f, g) {
          null == f && (f = !1);
          null == this.grid && this.addTab(null);
          b = new Zb(b);
          this.grid.add(b);
          null != g && (d.embedded = g);
          d = new $c(
            d,
            f ? dd.fontFace2text : dd.font2text,
            null,
            $c.editInForm(dd, b.get_text(), this),
          );
          d.set_width(f ? 80 : 220);
          d.halign = 'fill';
          this.grid.add(d);
          this.values.push({ id: a, type: ec.FONT, view: d });
          this.layout();
        },
        addFloat: function (a, b, d, f, g) {
          null == this.grid && this.addTab(null);
          b = new Zb(b);
          this.grid.add(b);
          d = new rb(d, f, g, 5);
          this.grid.add(d);
          this.values.push({ id: a, type: ec.FLOAT, view: d, min: f, max: g });
          this.layout();
        },
        addCheck: function (a, b, d) {
          null == this.grid && this.addTab(null);
          b = new Zb(b);
          this.grid.add(b);
          b = new Ld();
          b.set_value(d);
          b.valign = 'fill';
          this.grid.add(b);
          this.values.push({ id: a, type: ec.BOOL, view: b });
          this.layout();
        },
        onColor: function (a, b, d) {
          var f = ta.findForm(xb);
          null == f && ((f = new xb()), ta.showDialog(f));
          f.link(a, b.paint.bmp.get_bitmapData().getPixel(0, 0), d, this);
        },
        onLoad: function () {
          var a = this,
            b = new Ig();
          b.addEventListener('select', function (d) {
            b.addEventListener('complete', m(a, a.onPaletteLoaded));
            b.load();
          });
          var d = [new Vj('Palette', '*.json')];
          b.browse(d);
        },
        loadPreset: function (a) {
          if ($b.exists(a)) this.loadPalette(Oc.fromJSON($b.getText(a)));
          else this.onNullAsset(a, this);
        },
        onPaletteLoaded: function (a) {
          try {
            this.loadPalette(
              Oc.fromJSON(Fa.__cast(a.target, Ig).data.toString()),
            );
          } catch (b) {
            Za.show('Invalid palette file');
          }
        },
        loadPalette: function (a) {
          for (var b = 0, d = this.values; b < d.length; ) {
            var f = d[b];
            ++b;
            switch (f.type._hx_index) {
              case 0:
                var g = f.view,
                  k = a.getColor(f.id, zc.txt2color(g.get_text()));
                f.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, k);
                g.set_text(R.hex(k, 6));
                break;
              case 1:
                g = f.view;
                k = a.getMulti(f.id, zc.txt2color(g.get_text()));
                f = f.multi;
                f.colors = k;
                var l = f.colors[0];
                f.paint.bmp.get_bitmapData().setPixel(0, 0, l);
                l = 1 < f.colors.length ? f.colors[1] : r.white;
                f.paint2.bmp.get_bitmapData().setPixel(0, 0, l);
                g.set_text(R.hex(k[0], 6));
                break;
              case 2:
                g = f.view;
                f = a.getFont(f.id, g.get_value());
                g.set_value(f);
                break;
              case 3:
                g = f.view;
                f = a.getFloat(f.id, zc.txt2float(g.get_text(), f.min, f.max));
                g.set_text(null == f ? 'null' : '' + f);
                break;
              case 4:
                g = f.view;
                f = a.getInt(f.id, zc.txt2int(g.get_text(), f.min, f.max));
                g.set_text(null == f ? 'null' : '' + f);
                break;
              case 5:
                f.view instanceof td
                  ? ((g = f.view),
                    (f = a.getString(f.id, g.get_value())),
                    g.set_value(f))
                  : ((g = f.view),
                    (f = a.getString(f.id, g.get_text())),
                    g.set_text(f));
                break;
              case 6:
                ((g = f.view), g.set_value(a.getBool(f.id, g.get_value())));
            }
          }
        },
        getPalette: function () {
          for (var a = new Oc(), b = 0, d = this.values; b < d.length; ) {
            var f = d[b];
            ++b;
            switch (f.type._hx_index) {
              case 0:
                var g = f.view,
                  k = zc.txt2color(g.get_text());
                a.setColor(f.id, k);
                g.set_text(R.hex(k, 6));
                break;
              case 1:
                g = f.view;
                k = f.multi.colors;
                a.setMulti(f.id, k);
                g.set_text(R.hex(k[0], 6));
                break;
              case 2:
                g = f.view.get_value();
                a.setFont(f.id, g);
                break;
              case 3:
                g = f.view;
                k = zc.txt2float(g.get_text(), f.min, f.max);
                a.setFloat(f.id, k);
                g.set_text(null == k ? 'null' : '' + k);
                break;
              case 4:
                g = f.view;
                k = zc.txt2int(g.get_text(), f.min, f.max);
                a.setInt(f.id, k);
                g.set_text(null == k ? 'null' : '' + k);
                break;
              case 5:
                f.view instanceof td
                  ? a.setString(f.id, f.view.get_value())
                  : a.setString(f.id, f.view.get_text());
                break;
              case 6:
                a.setBool(f.id, f.view.get_value());
            }
          }
          return a;
        },
        onSave: function (a) {
          ud.saveText(a.json(), this.getName(a) + '.json', 'application/json');
        },
        __class__: zc,
      });
      var ph = function (a) {
        W.call(this);
        this.bg = gb.light();
        this.add(this.bg);
        this.vbox = new Ab();
        this.add(this.vbox);
        for (var b = 0; b < a.length; ) {
          var d = a[b];
          ++b;
          d.set_width(100);
          this.vbox.add(d);
        }
        this.setSize(this.vbox.get_width(), this.vbox.get_height());
        this.valign = 'fill';
      };
      h['com.watabou.coogee.ui.forms.ButtonColumn'] = ph;
      ph.__name__ = 'com.watabou.coogee.ui.forms.ButtonColumn';
      ph.__super__ = W;
      ph.prototype = w(W.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.vbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.vbox.set_x(((this.rWidth - this.vbox.get_width()) / 2) | 0);
          this.vbox.set_y(0);
        },
        __class__: ph,
      });
      var we = function (a, b) {
        $a.call(this, ['Generate', 'Random']);
        this.generate = b;
        this.content = new Ab();
        this.addAbove();
        this.tags = new Mc();
        this.tags.setSize(300, 0);
        this.tags.set(a);
        this.content.add(this.tags);
        null != we.hintText &&
          ((a = new kf(we.hintText)),
          a.set_color(r.dark),
          a.set_width(300),
          this.content.add(a));
        this.add(this.content);
      };
      h['com.watabou.coogee.ui.forms.TagsForm'] = we;
      we.__name__ = 'com.watabou.coogee.ui.forms.TagsForm';
      we.__super__ = $a;
      we.prototype = w($a.prototype, {
        onButton: function (a) {
          switch (a) {
            case 'Generate':
              Wa.set('tags', this.tags.selected);
              this.tags.set(this.generate(this.tags.selected));
              this.relayout();
              break;
            case 'Random':
              this.tags.set(this.generate(null));
              this.relayout();
              break;
            default:
              $a.prototype.onButton.call(this, a);
          }
        },
        relayout: function () {
          this.content.layout();
          var a = this.buttons.get_y();
          this.layout();
          a > this.buttons.get_y() &&
            (this.buttons.set_y(a),
            (a = this.buttons),
            (this.rHeight = a.get_y() + a.rHeight + this.margin));
          Fa.__cast(this.parent, Zc).resize();
        },
        onEnter: function () {
          this.onButton('Generate');
        },
        onKey: function (a) {
          return 9 == a ? (this.onEsc(), !0) : $a.prototype.onKey.call(this, a);
        },
        addAbove: function () {},
        __class__: we,
      });
      var lf = function (a) {
        null == a && (a = 2);
        this.margin = this.gap = 10;
        W.call(this);
        this.cols = a;
      };
      h['com.watabou.coogee.ui.layouts.Grid'] = lf;
      lf.__name__ = 'com.watabou.coogee.ui.layouts.Grid';
      lf.__super__ = W;
      lf.prototype = w(W.prototype, {
        layout: function () {
          for (var a = [], b = 0, d = this.cols; b < d; ) (b++, a.push(0));
          d = a;
          var f = [];
          a = 0;
          for (b = this.get_numChildren(); a < b; ) {
            var g = a++;
            var k = g % this.cols,
              l = (g / this.cols) | 0;
            f.length <= l && f.push(0);
            g = this.getChildAt(g);
            var u = g.get_width();
            d[k] < u && (d[k] = u);
            k = g.get_height();
            f[l] < k && (f[l] = k);
          }
          var p = (u = this.margin);
          a = l = k = 0;
          for (b = this.get_numChildren(); a < b; ) {
            g = a++;
            g = this.getChildAt(g);
            var h = u,
              r = p;
            if (g instanceof W) {
              var n = Fa.__cast(g, W);
              switch (n.halign) {
                case 'center':
                  h += (d[k] - n.get_width()) / 2;
                  break;
                case 'fill':
                  n.set_width(d[k]);
                  break;
                case 'right':
                  h += d[k] - n.get_width();
              }
              switch (n.valign) {
                case 'bottom':
                  r += f[l] - n.get_height();
                  break;
                case 'center':
                  r += (f[l] - n.get_height()) / 2;
                  break;
                case 'fill':
                  n.set_height(f[l]);
              }
            }
            g.set_x(h);
            g.set_y(r);
            u += d[k] + this.gap;
            ++k;
            k == this.cols &&
              ((u = this.margin), (p += f[l] + this.gap), ++l, (k = 0));
          }
          this.rHeight = 2 * this.margin + (f.length - 1) * this.gap;
          for (a = 0; a < f.length; ) ((k = f[a]), ++a, (this.rHeight += k));
          this.rWidth = 2 * this.margin + (d.length - 1) * this.gap;
          for (a = 0; a < d.length; ) ((u = d[a]), ++a, (this.rWidth += u));
        },
        add: function (a) {
          W.prototype.add.call(this, a);
          this.layout();
        },
        addEmpty: function () {
          this.add(new gb(0, 0));
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: lf,
      });
      var dc = function () {
        this.margin = this.gap = 10;
        W.call(this);
      };
      h['com.watabou.coogee.ui.layouts.HBox'] = dc;
      dc.__name__ = 'com.watabou.coogee.ui.layouts.HBox';
      dc.__super__ = W;
      dc.prototype = w(W.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              d = !1,
              f = 0,
              g = this.get_numChildren();
            f < g;

          ) {
            var k = f++;
            k = this.getChildAt(k);
            'top' != k.valign && (d = !0);
            'fill' != k.valign && b < k.get_height() && (b = k.get_height());
            k.set_x(a);
            k.set_y(this.margin);
            a += k.get_width() + this.gap;
          }
          if (d)
            for (f = 0, g = this.get_numChildren(); f < g; )
              switch (((k = f++), (k = this.getChildAt(k)), k.valign)) {
                case 'bottom':
                  k.set_y(this.margin + (b - k.get_height()));
                  break;
                case 'center':
                  k.set_y(this.margin + (b - k.get_height()) / 2);
                  break;
                case 'fill':
                  k.set_height(b);
              }
          this.rWidth =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          W.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: dc,
      });
      var mf = function () {
        this.margin = 10;
        W.call(this);
      };
      h['com.watabou.coogee.ui.layouts.SimpleBox'] = mf;
      mf.__name__ = 'com.watabou.coogee.ui.layouts.SimpleBox';
      mf.__super__ = W;
      mf.prototype = w(W.prototype, {
        layout: function () {
          for (var a = 0, b = 0, d = 0, f = this.get_numChildren(); d < f; ) {
            var g = d++;
            g = this.getChildAt(g);
            a < g.get_width() && (a = g.get_width());
            b < g.get_height() && (b = g.get_height());
            g.set_x(this.margin);
            g.set_y(this.margin);
          }
          this.rWidth = a + 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          W.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a) {
          this.margin = a;
        },
        __class__: mf,
      });
      var oh = function () {
        this.change = new gc();
        Ab.call(this);
        this.setMargins(0, 0);
        this.tabRow = new rh();
        this.tabRow.click.add(m(this, this.onTab));
        this.tabRow.halign = 'fill';
        this.add(this.tabRow);
        this.stack = new mf();
        this.stack.setMargins(0);
        this.add(this.stack);
      };
      h['com.watabou.coogee.ui.layouts.Tabs'] = oh;
      oh.__name__ = 'com.watabou.coogee.ui.layouts.Tabs';
      oh.__super__ = Ab;
      oh.prototype = w(Ab.prototype, {
        layout: function () {
          null != this.stack && this.stack.layout();
          Ab.prototype.layout.call(this);
        },
        addTab: function (a, b) {
          null != a && this.tabRow.addTab(a);
          this.stack.add(b);
          this.tabRow.get_selected() != this.stack.get_numChildren() - 1 &&
            null != a &&
            b.set_visible(!1);
          this.layout();
        },
        onTab: function (a) {
          var b = this.tabRow.get_selected();
          -1 != b && this.stack.getChildAt(b).set_visible(!1);
          this.stack.getChildAt(a).set_visible(!0);
          this.tabRow.set_selected(a);
          this.change.dispatch(a);
        },
        getTab: function () {
          return this.tabRow.get_selected();
        },
        getTabCount: function () {
          return this.tabRow.get_size();
        },
        __class__: oh,
      });
      var Nd = function () {
        this._selected = -1;
        this.tabs = [];
        this.rowSize = 256;
        this.click = new gc();
        W.call(this);
        this.bg = gb.light();
        this.add(this.bg);
      };
      h['com.watabou.coogee.ui.layouts._Tabs.TabButtons'] = Nd;
      Nd.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabButtons';
      Nd.__super__ = W;
      Nd.prototype = w(W.prototype, {
        get_selected: function () {
          return this._selected;
        },
        set_selected: function (a) {
          return (this._selected = a);
        },
        get_size: function () {
          return this.tabs.length;
        },
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        addTab: function (a) {
          a = new sh(a);
          a.click.add(m(this, this.onTab));
          this.tabs.push(a);
          return a;
        },
        onTab: function (a) {
          this.click.dispatch(this.tabs.indexOf(a));
        },
        __class__: Nd,
        __properties__: w(W.prototype.__properties__, {
          get_size: 'get_size',
          set_selected: 'set_selected',
          get_selected: 'get_selected',
        }),
      });
      var Wj = function () {
        this.first = 0;
        Nd.call(this);
        this.stripe = new dc();
        this.stripe.setMargins(0, 0);
        this.add(this.stripe);
        this.more = new Uc('...');
        this.more.click.add(m(this, this.showList));
        this.more.set_visible(!1);
        this.add(this.more);
      };
      h['com.watabou.coogee.ui.layouts._Tabs.TabRow'] = Wj;
      Wj.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabRow';
      Wj.__super__ = Nd;
      Wj.prototype = w(Nd.prototype, {
        layout: function () {
          Nd.prototype.layout.call(this);
          this.more.set_height(this.rHeight - 8);
          this.more.set_x(this.rWidth - this.more.get_width());
          this.more.set_y(4);
        },
        addTab: function (a) {
          a = Nd.prototype.addTab.call(this, a);
          this.stripe.add(a);
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (this.tabs.length > this.rowSize) {
            this.first > a
              ? (this.first = a)
              : a >= this.first + this.rowSize &&
                (this.first = a - this.rowSize + 1);
            for (var b = 0, d = this.tabs.length; b < d; )
              ((a = b++),
                this.tabs[a].set_visible(
                  a >= this.first && a < this.first + this.rowSize,
                ));
            this.stripe.set_x(-this.tabs[this.first].get_x());
          }
          -1 != this._selected && this.tabs[this._selected].set_selected(!0);
          return this.get_selected();
        },
        updateSize: function () {
          if (this.tabs.length <= this.rowSize)
            (this.more.set_visible(!1),
              (this.rWidth = this.stripe.get_width()));
          else {
            this.more.set_visible(!0);
            for (
              var a = (this.rWidth = 0),
                b = this.tabs.length - this.rowSize + 1;
              a < b;

            ) {
              for (var d = a++, f = 0, g = 0, k = this.rowSize; g < k; ) {
                var l = g++;
                f += this.tabs[d + l].get_width();
              }
              this.rWidth < f && (this.rWidth = f);
            }
            this.rWidth += 4 + this.more.get_width();
          }
          this.rHeight = this.stripe.get_height();
        },
        showList: function () {
          for (
            var a = this, b = new hc(), d = 0, f = this.tabs.length;
            d < f;

          ) {
            var g = [d++];
            b.addItem(
              this.tabs[g[0]].get_text(),
              (function (b) {
                return function () {
                  a.click.dispatch(b[0]);
                };
              })(g),
              this.get_selected() == g[0],
            );
          }
          d = ta.getRect(this.more);
          ta.showMenuAt(b, Math.ceil(d.x), d.get_bottom());
        },
        __class__: Wj,
      });
      var rh = function () {
        Nd.call(this);
        this.stripes = new Ab();
        this.stripes.setMargins(0, 0);
        this.add(this.stripes);
      };
      h['com.watabou.coogee.ui.layouts._Tabs.TabMultiRow'] = rh;
      rh.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabMultiRow';
      rh.__super__ = Nd;
      rh.prototype = w(Nd.prototype, {
        addTab: function (a) {
          a = Nd.prototype.addTab.call(this, a);
          null == this.lastRow &&
            ((this.lastRow = new dc()),
            this.lastRow.setMargins(0, 0),
            this.stripes.add(this.lastRow));
          this.lastRow.add(a);
          this.lastRow.get_numChildren() >= this.rowSize &&
            (this.lastRow = null);
          this.stripes.layout();
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (-1 != this._selected) {
            a = this.tabs[this._selected];
            a.set_selected(!0);
            for (
              var b = this.stripes.getChildAt(
                this.stripes.get_numChildren() - 1,
              );
              -1 == b.getChildIndex(a);

            )
              ((b = this.stripes.removeChildAt(0)), this.stripes.add(b));
          }
          return this.get_selected();
        },
        updateSize: function () {
          this.rWidth = this.stripes.get_width();
          this.rHeight = this.stripes.get_height();
        },
        __class__: rh,
      });
      var sh = function (a) {
        this.click = new gc();
        W.call(this);
        this.bg = new ba();
        this.addChild(this.bg);
        this.tf = tc.get('', r.format(r.uiFont, r.smallSize, r.black));
        this.tf.set_x(4);
        this.tf.set_y(8);
        this.addChild(this.tf);
        this.set_text(a);
        this.set_selected(!1);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
      };
      h['com.watabou.coogee.ui.layouts.Tab'] = sh;
      sh.__name__ = 'com.watabou.coogee.ui.layouts.Tab';
      sh.__super__ = W;
      sh.prototype = w(W.prototype, {
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(r.white);
          a.drawRoundRectComplex(
            0,
            4,
            this.rWidth,
            this.rHeight - 4,
            4,
            4,
            0,
            0,
          );
        },
        onClick: function (a) {
          this.click.dispatch(this);
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(
            this.tf.get_width() + 8,
            Math.ceil(this.tf.get_height() + 8),
          );
          return a;
        },
        set_selected: function (a) {
          this.mouseEnabled = !a;
          this.bg.set_alpha(a ? 1 : 0);
          return a;
        },
        __class__: sh,
        __properties__: w(W.prototype.__properties__, {
          set_selected: 'set_selected',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var tc = function () {};
      h['com.watabou.coogee.ui.utils.Text'] = tc;
      tc.__name__ = 'com.watabou.coogee.ui.utils.Text';
      tc.get = function (a, b, d, f) {
        null == a && (a = '');
        var g = new Kc();
        null != d || null != f ? tc.activate(g, d, f) : g.set_selectable(!1);
        g.set_autoSize(1);
        null != b && g.set_defaultTextFormat(b);
        g.set_htmlText(a);
        return g;
      };
      tc.input = function (a, b, d) {
        null == a && (a = '');
        var f = new Kc();
        f.set_type(1);
        f.set_borderColor(f.get_defaultTextFormat().color);
        f.set_background(!0);
        f.set_border(!0);
        f.addEventListener('change', function (a) {
          null != d && d();
        });
        f.set_defaultTextFormat(b);
        f.set_text('' != a ? a : ' ');
        f.set_autoSize(1);
        f.set_height(f.get_height());
        f.set_autoSize(2);
        f.set_text(a);
        return f;
      };
      tc.format = function (a, b, d) {
        null == d && (d = 0);
        return new ue($b.exists(a) ? $b.getFont(a).name : a, b, d);
      };
      tc.activate = function (a, b, d) {
        a.set_type(1);
        a.addEventListener('focusIn', function (b) {
          a.set_borderColor(a.get_defaultTextFormat().color);
          a.set_border(!0);
        });
        a.addEventListener('focusOut', function (b) {
          a.set_border(!1);
          null != d && d();
        });
        a.addEventListener('keyDown', function (b) {
          if (13 == b.keyCode || 27 == b.keyCode)
            (a.stage.set_focus(a.stage), b.stopPropagation());
        });
        a.addEventListener('change', function (a) {
          null != b && b();
        });
      };
      var Eb = function () {};
      h['com.watabou.dwellings.Export'] = Eb;
      Eb.__name__ = 'com.watabou.dwellings.Export';
      Eb.planAsPNG = function (a, b) {
        var d = md.getRect(a.floors[0].area),
          f = (200 * (d.width + 6)) | 0,
          g = (200 * (d.height + 6)) | 0,
          k = new Tb(f, g, !1, Q.colorPaper);
        b.labels.outlines(!1);
        var l = new qa();
        l.scale(200, 200);
        l.translate(
          f / 2 - 200 * (d.left + d.width / 2),
          g / 2 - 200 * (d.top + d.height / 2),
        );
        k.draw(b, l, null, null, null, !0);
        b.labels.outlines(!0);
        ud.savePNG(k, a.name);
      };
      Eb.facadeAsPNG = function (a, b, d) {
        b = b.width * x.columnWidth;
        var f =
            a.floors.length * x.floorHeight +
            x.baseHeight +
            x.roofSlope * x.columnWidth,
          g = (5 * b + 1e3) | 0,
          k = (5 * f + 1e3) | 0,
          l = new Tb(g, k, !1, L.colorBg),
          u = new qa();
        u.scale(5, 5);
        u.translate(g / 2 - (b / 2) * 5, k / 2 + (f / 2) * 5);
        l.draw(d, u, null, null, null, !0);
        ud.savePNG(l, a.name);
      };
      Eb.planAsSVG = function (a, b) {
        var d = md.getRect(a.floors[0].area),
          f = d.width + 6,
          g = d.height + 6,
          k = Ja.create(100 * f, 100 * g, Q.colorPaper);
        Ja.substituteFont = Eb.fixFontNames;
        b = Ja.drawSprite(b);
        Ca.clearTransform(b);
        Ca.translate(
          b,
          f / 2 - (d.left + d.width / 2),
          g / 2 - (d.top + d.height / 2),
        );
        Ca.scale(b, 100, 100);
        k.root.addChild(b);
        d = Ja.getImports();
        k.root.addChild(d);
        d = Ja.getGradients();
        k.root.addChild(d);
        ud.saveText(
          '<?xml version="1.0" encoding="UTF-8" standalone="no"?>' +
            re.print(k.root),
          a.name + '.svg',
          'image/svg+xml',
        );
      };
      Eb.facadeAsSVG = function (a, b, d) {
        var f = b.width * x.columnWidth,
          g =
            a.floors.length * x.floorHeight +
            x.baseHeight +
            x.roofSlope * x.columnWidth,
          k = f + 200,
          l = g + 200;
        b = Ja.create(k, l, L.colorBg);
        Ja.substituteFont = Eb.fixFontNames;
        d = Ja.drawSprite(d);
        Ca.clearTransform(d);
        Ca.translate(d, k / 2 - f / 2, l / 2 + g / 2);
        b.root.addChild(d);
        d = Ja.getImports();
        b.root.addChild(d);
        d = Ja.getGradients();
        b.root.addChild(d);
        ud.saveText(
          '<?xml version="1.0" encoding="UTF-8" standalone="no"?>' +
            re.print(b.root),
          a.name + '.svg',
          'image/svg+xml',
        );
      };
      Eb.multiFloor = function (a, b, d, f, g, k) {
        var l = Math.ceil((d - b + 1) / f),
          u = md.getRect(a.floors[0].area),
          p = g * (u.width + Eb.MARGINS) * f;
        l *= g * (u.height + Eb.MARGINS);
        b = Eb.buildSheet(a, b, d, f, u, !k);
        k
          ? (b.set_scaleX(b.set_scaleY(20)),
            (k = new qa()),
            k.scale(g, g),
            (g = new Tb(p, l, !1, Q.colorPaper)),
            g.draw(b, k, null, null, null, !0),
            ud.savePNG(g, a.name))
          : ((p = Ja.create(p, l, Q.colorPaper)),
            (Ja.substituteFont = Eb.fixFontNames),
            (k = Ja.drawSprite(b)),
            Ca.scale(k, g, g),
            p.root.addChild(k),
            (g = Ja.getImports()),
            p.root.addChild(g),
            (g = Ja.getGradients()),
            p.root.addChild(g),
            ud.saveText(
              '<?xml version="1.0" encoding="UTF-8" standalone="no"?>' +
                re.print(p.root),
              a.name + '.svg',
              'image/svg+xml',
            ));
      };
      Eb.buildSheet = function (a, b, d, f, g, k) {
        var l = g.centerX(),
          u = g.centerY(),
          p = g.width + Eb.MARGINS;
        g = g.height + Eb.MARGINS;
        var h = Q.formatRoom,
          r = new ba(),
          n = b;
        for (d += 1; n < d; ) {
          var wb = n++,
            t = ((wb - b) / f) | 0,
            E = (wb - b) % f,
            q = tc.get(Eb.getFloorLabel(wb), h);
          q.set_scaleX(q.set_scaleY(2 / q.get_textHeight()));
          q.set_x(E * p);
          q.set_y(t * g);
          r.addChild(q);
          q = 0 <= wb ? a.floors[wb] : a.basement;
          wb = 0 <= wb ? a.floors.slice(0, wb) : null;
          wb = new eb(q, wb);
          wb.set_x((E + 0.5) * p - l);
          wb.set_y((t + 0.5) * g - u);
          r.addChild(wb);
          eb.exportAnnote &&
            ((t = new Ac()),
            t.update(a, q),
            t.outlines(k),
            t.set_x(wb.get_x()),
            t.set_y(wb.get_y()),
            r.addChild(t));
        }
        return r;
      };
      Eb.getFloorLabel = function (a) {
        switch (a) {
          case -1:
            return 'B';
          case 0:
            return 'GF';
          default:
            return a + 'F';
        }
      };
      Eb.fixFontNames = function (a) {
        if (!Eb.embeddedScanned) {
          Eb.embeddedScanned = !0;
          for (
            var b = new Sa(),
              d = Eb.embedded.h,
              f = Object.keys(d),
              g = f.length,
              k = 0;
            k < g;

          ) {
            var l = f[k++],
              u = d[l];
            l = $b.getFont(l).name;
            b.h[l] = { name: u.name, url: u.url };
          }
          Eb.embedded = b;
        }
        u = Eb.embedded.h[a];
        return null != u
          ? (Ja.addImport(u.url), u.name)
          : Ja.substituteGenerics(a);
      };
      var Rd = function (a, b, d) {
        null == d && (d = 0);
        null == a && (a = 0);
        this.seed = 0 != a ? a : (t.seed = (48271 * t.seed) % 2147483647 | 0);
        this.tags = null != b ? b : Ma.randomTags();
        this.nFloors = d;
        Nb.trace(this.tags, {
          fileName: 'Source/com/watabou/dwellings/model/Blueprint.hx',
          lineNumber: 24,
          className: 'com.watabou.dwellings.model.Blueprint',
          methodName: 'new',
        });
        Ma.resolve(this.tags);
        this.plan = null;
        this.height = this.width = 0;
        this.name = null;
      };
      h['com.watabou.dwellings.model.Blueprint'] = Rd;
      Rd.__name__ = 'com.watabou.dwellings.model.Blueprint';
      Rd.random = function (a) {
        null == a && (a = 0);
        return new Rd(0, null, a);
      };
      Rd.fromURL = function () {
        var a = fb.getInt('seed', 0),
          b = fb.get('tags');
        b = null != b ? b.split(',') : null;
        var d = fb.getInt('floors');
        if (0 == a && null == b && 0 == d) return null;
        a = new Rd(a, b, d);
        b = fb.get('plan', null);
        null != b &&
          ((a.plan = b),
          (a.width = fb.getInt('w')),
          (a.height = fb.getInt('h')));
        a.name = fb.get('name');
        b = fb.get('view');
        null != b &&
          ('plan' == b.toLowerCase()
            ? (ub.planView = !0)
            : 'elevation' == b.toLowerCase() && (ub.planView = !1));
        return a;
      };
      Rd.prototype = {
        updateURL: function () {
          fb.reset();
          fb.set('seed', this.seed);
          fb.set('tags', this.tags.join(','));
          0 < this.nFloors && fb.set('floors', this.nFloors);
          null != this.plan &&
            (fb.set('plan', this.plan),
            fb.set('w', this.width),
            fb.set('h', this.height));
          null != this.name && fb.set('name', this.name);
        },
        __class__: Rd,
      };
      var vd = function (a) {
        this.room = a;
        for (var b = [], d = 0, f = a.getDoors(); d < f.length; ) {
          var g = f[d];
          ++d;
          b.push(a == g.room1 ? g.edge1 : a == g.room2 ? g.edge2 : null);
        }
        f = b;
        this.abris = [];
        b = 0;
        for (d = a.contour; b < d.length; ) {
          var k = d[b];
          ++b;
          if (
            k != a.plan.spiral &&
            (this.abris.push(new I(k.a.j, k.a.i)),
            k == a.plan.exit || -1 != f.indexOf(k))
          ) {
            g = this.abris;
            var l = k.point();
            k = k.dir.cw;
            k = new I(k.dj, k.di);
            g.push(new I(l.x + 0.5 * k.x, l.y + 0.5 * k.y));
          }
        }
        this.shapes = [];
        this.group();
      };
      h['com.watabou.dwellings.model.Clutter'] = vd;
      vd.__name__ = 'com.watabou.dwellings.model.Clutter';
      vd.prototype = {
        fill: function (a, b, d, f, g, k, l) {
          null == l && (l = 0.4);
          null == k && (k = 0.8);
          null == g && (g = 0.7);
          null == f && (f = 0.8);
          null == d && (d = 3);
          null == b && (b = 0.6);
          null == a && (a = 0);
          0 == a &&
            (a =
              0.05 +
              0.4 *
                (1 -
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )));
          var u = Math.round(0.5 * l * this.room.area.length);
          l = Math.round(2 + l * this.room.area.length);
          l = Math.floor(
            u +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (l - u),
          );
          u = 0;
          for (l = la.subset(this.getSpawnCells(), l); u < l.length; ) {
            var p = l[u];
            ++u;
            var h =
              0 == b
                ? 0
                : Math.min(
                    (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647 /
                      (1 - b),
                    1,
                  );
            if (1 != h) {
              var r = g;
              null == r && (r = 0.5);
              r = (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < r;
            } else r = !0;
            r = r
              ? 0
              : (((1 - g) * Math.PI) / 4) *
                ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1);
            this.spawn(
              p,
              a,
              h,
              1 +
                Math.floor(
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                    d,
                ),
              f,
              r,
              k,
            );
          }
          this.group();
        },
        spawn: function (a, b, d, f, g, k, l) {
          null == l && (l = 0.8);
          null == k && (k = 0);
          null == g && (g = 0.8);
          null == f && (f = 3);
          null == d && (d = 1);
          null == b && (b = 1);
          this.group(d);
          d = 0;
          for (var u = f; d < u; ) {
            var p = d++;
            p = Math.pow(g, f - p);
            var h =
              b *
              (1 -
                p +
                p *
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647));
            p = this.inCell(a, h);
            var r = Math.sqrt(l);
            null == r && (r = 0.5);
            h =
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < r
                ? this.rect(
                    p,
                    2 * h,
                    h *
                      (1 +
                        Math.abs(
                          ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                            (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                              2147483647 +
                            (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                              2147483647 +
                            (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                              2147483647) /
                            2 -
                            1,
                        )),
                  )
                : this.circ(p, 0.8 * h);
            0 != k && Sd.asRotateYX(h, Math.sin(k), Math.cos(k));
            Sd.asTranslate(h, p.x, p.y);
            this.curGroup.push(h);
          }
          this.group();
        },
        inCell: function (a, b) {
          null == b && (b = 0.5);
          var d =
            a.j +
            b +
            (1 - 2 * b) *
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647);
          a =
            a.i +
            b +
            (1 - 2 * b) *
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647);
          return new I(d, a);
        },
        getSpawnCells: function () {
          for (
            var a = this.room.area.slice(), b = 0, d = this.room.getDoors();
            b < d.length;

          ) {
            var f = d[b];
            ++b;
            var g = this.room;
            M.remove(
              a,
              f.plan.grid.edge2cell(
                g == f.room1 ? f.edge1 : g == f.room2 ? f.edge2 : null,
              ),
            );
          }
          b = 0;
          for (d = this.room.getStairs(); b < d.length; )
            ((f = d[b]), ++b, M.remove(a, f.cell));
          -1 != this.room.contour.indexOf(this.room.plan.exit) &&
            M.remove(a, this.room.plan.grid.edge2cell(this.room.plan.exit));
          -1 != this.room.contour.indexOf(this.room.plan.spiral) &&
            M.remove(a, this.room.plan.grid.edge2cell(this.room.plan.spiral));
          return a;
        },
        group: function (a) {
          null == a && (a = 1);
          if (null != this.curGroup && 0 < this.curGroup.length) {
            this.shapes.push(this.curGroup);
            var b = nf.center(this.curGroup[0]);
            b = this.getForce(b);
            for (var d = Infinity, f = 0, g = this.curGroup; f < g.length; ) {
              var k = g[f];
              ++f;
              k = this.push(this.abris, k, b);
              d > k && (d = k);
            }
            if (Infinity > d)
              for (
                d *= this.force, b.x *= d, b.y *= d, f = 0, g = this.curGroup;
                f < g.length;

              )
                ((k = g[f]), ++f, Sd.asTranslate(k, b.x, b.y));
          }
          this.curGroup = [];
          this.force = a;
        },
        getForce: function (a) {
          for (
            var b = new I(),
              d = function (d) {
                d = a.subtract(d);
                var f = Math.pow(d.get_length(), 2);
                b.x += d.x * f;
                b.y += d.y * f;
              },
              f = this.room.doors.iterator();
            f.hasNext();

          ) {
            var g = f.next();
            d(g.edge1.point());
          }
          f = 0;
          for (g = this.room.getStairs(); f < g.length; ) {
            var k = g[f];
            ++f;
            k = k.cell;
            d(new I(k.j + 0.5, k.i + 0.5));
          }
          -1 != this.room.contour.indexOf(this.room.plan.exit) &&
            d(this.room.plan.exit.point());
          -1 != this.room.contour.indexOf(this.room.plan.spiral) &&
            ((k = this.room.plan.spiral.a), d(new I(k.j, k.i)));
          0 == b.get_length()
            ? (b = I.polar(
                1,
                2 *
                  Math.PI *
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              ))
            : b.normalize(1);
          return b;
        },
        rect: function (a, b, d) {
          return 0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647
            ? nd.rect(b, d)
            : nd.rect(d, b);
        },
        circ: function (a, b) {
          return nd.regular(16, b);
        },
        push: function (a, b, d) {
          var f = Infinity,
            g = function (a, b) {
              for (var g = b.length, k = 0; k < g; ) {
                var l = k++,
                  h = b[l];
                l = b[(l + 1) % g].subtract(h);
                for (var n = 0; n < a.length; ) {
                  var r = a[n];
                  ++n;
                  r = Ub.intersectLines(r.x, r.y, d.x, d.y, h.x, h.y, l.x, l.y);
                  null != r &&
                    0 < r.x &&
                    0 <= r.y &&
                    1 >= r.y &&
                    f > r.x &&
                    (f = r.x);
                }
              }
            };
          g(b, a);
          d = new I(-1 * d.x, -1 * d.y);
          g(a, b);
          return f;
        },
        __class__: vd,
      };
      var od = (K['com.watabou.dwellings.model.DoorType'] = {
        __ename__: 'com.watabou.dwellings.model.DoorType',
        __constructs__: null,
        NULL: {
          _hx_name: 'NULL',
          _hx_index: 0,
          __enum__: 'com.watabou.dwellings.model.DoorType',
          toString: q,
        },
        DOORWAY: {
          _hx_name: 'DOORWAY',
          _hx_index: 1,
          __enum__: 'com.watabou.dwellings.model.DoorType',
          toString: q,
        },
        REGULAR: {
          _hx_name: 'REGULAR',
          _hx_index: 2,
          __enum__: 'com.watabou.dwellings.model.DoorType',
          toString: q,
        },
      });
      od.__constructs__ = [od.NULL, od.DOORWAY, od.REGULAR];
      var Xj = function (a, b, d) {
        this.plan = a.plan;
        this.room1 = a;
        this.edge1 = d;
        this.room2 = b;
        this.edge2 = this.plan.grid.edges.h[d.b.__id__].h[d.a.__id__];
      };
      h['com.watabou.dwellings.model.Door'] = Xj;
      Xj.__name__ = 'com.watabou.dwellings.model.Door';
      Xj.prototype = {
        getPrice: function () {
          var a = function (a) {
            return 1 == a.area.length ? 10 : a.area.length - a.narrow.length;
          };
          return a(this.room1) + a(this.room2);
        },
        __class__: Xj,
      };
      var Ea = function () {};
      h['com.watabou.dwellings.model.Drafter'] = Ea;
      Ea.__name__ = 'com.watabou.dwellings.model.Drafter';
      Ea.getShape = function (a, b) {
        var d = 0,
          f = 0;
        switch (a) {
          case 'large':
            d = 24;
            f = 34;
            break;
          case 'medium':
            d = 16;
            f = 24;
            break;
          case 'small':
            ((d = 10), (f = 16));
        }
        a = b ? Ea.getBox(d, f) : Ea.getPolyomino(d, f);
        return of.cloud2gridNArea(a);
      };
      Ea.getPolyomino = function (a, b) {
        for (var d = Math.round(a / 10), f = Math.round(b / 10); ; ) {
          var g = Ta.create(d, f);
          if (g.length >= a && g.length <= b) return g;
        }
      };
      Ea.getBox = function (a, b) {
        for (;;) {
          var d = Math.round(
              2 +
                6 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            ),
            f = Math.round(
              2 +
                6 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            );
          if (d * f >= a && d * f <= b) {
            a = [];
            for (b = 0; b < f; )
              for (var g = b++, k = 0, l = d; k < l; ) {
                var u = k++;
                a.push(new pf(u, g));
              }
            return a;
          }
        }
      };
      Ea.fromCode = function (a, b, d) {
        if (null == a || 0 >= b || b > Ma.MAX_SIZE || 0 >= d || d > Ma.MAX_SIZE)
          return null;
        for (var f = [], g = 0; g < d; )
          for (var k = g++, l = 0, u = b; l < u; ) {
            var p = l++,
              h = k * b + p,
              r = a.charAt(h >> 2);
            0 != ((G.parseInt('0x' + r) >> (h & 3)) & 1) &&
              f.push(new pf(p, k));
          }
        return of.cloud2gridNArea(f);
      };
      Ea.encodeBitmap = function (a) {
        for (
          var b = a[0].length, d = a.length, f = '', g = 0, k = 0, l = 0;
          l < d;

        )
          for (var u = l++, p = 0, h = b; p < h; ) {
            var r = p++;
            a[u][r] && (g |= 1 << (k & 3));
            if (3 == (k & 3) || (r == b - 1 && u == d - 1))
              ((f += R.hex(g)), (g = 0));
            ++k;
          }
        return f;
      };
      var Zj = function (a, b) {
        var d = a.floors[0],
          f = d.grid,
          g = d.exit;
        this.width = 0 != b.dj ? f.w : f.h;
        this.depth = 0 != b.dj ? f.h : f.w;
        this.height = a.floors.length;
        var k = (this.height - 1) / Math.sqrt(this.width);
        null == k && (k = 0.5);
        var l = (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < k,
          u = [],
          p = [];
        k = 0;
        for (var h = a.floors; k < h.length; ) {
          var r = h[k];
          ++k;
          for (var n = 0, wb = r.contour; n < wb.length; ) {
            var E = wb[n];
            ++n;
            E.dir == b && la.add(p, 0 != b.dj ? E.a.i : E.a.j);
          }
        }
        for (k = 0; k < p.length; ) {
          var q = p[k];
          ++k;
          u.push(q);
        }
        q = -1;
        var x = !1,
          C = d.spiral;
        null != C &&
          ((x = C.dir == b || C.dir.ccw == b),
          (q = 0 != b.dj ? C.a.i : C.a.j),
          la.add(u, q));
        var m = -1,
          y = d.exit.dir;
        0 == y.di * b.di + y.dj * b.dj &&
          ((m = 0 != b.dj ? d.exit.a.i : d.exit.a.j), la.add(u, m));
        var B = 0 != b.dj ? b.ccw.di : b.ccw.dj;
        u.sort(function (a, b) {
          a -= b;
          return B * (0 == a ? 0 : 0 > a ? -1 : 1);
        });
        this.layers = [];
        k = 0;
        for (h = u.length; k < h; ) {
          var z = k++;
          y = u[z];
          z = 0 > B ? y : this.depth - y;
          var P =
            b == oa.WEST
              ? f.node(y, 0)
              : b == oa.EAST
                ? f.node(y, this.width)
                : b == oa.NORTH
                  ? f.node(0, y)
                  : b == oa.SOUTH
                    ? f.node(this.width, y)
                    : null;
          if (-1 != p.indexOf(y)) {
            var v = -1,
              K = [];
            n = [];
            wb = 0;
            for (var w = a.floors.length; wb < w; ) {
              var F = wb++;
              r = a.floors[F];
              for (var I = [], J = 0, G = this.width; J < G; ) {
                var Oa = J++;
                E = f.nodeOffset(P, b.op, Oa + 1);
                E = f.nodeNdir2edge(E, b);
                var S = f.edge2cell(E);
                E == g && (v = Oa);
                -1 != r.windows.indexOf(E) && K.push(new pf(Oa, F));
                I.push(-1 != r.area.indexOf(S));
              }
              n.push(I);
            }
            for (wb = 0; wb < this.width; ) {
              for (; wb < this.width && !n[0][wb]; ) ++wb;
              I = wb;
              if (I < this.width) {
                w = [];
                do {
                  for (r = 0; r < this.height && n[r][I]; ) ++r;
                  w.push(r);
                } while (++I < this.width && n[0][I]);
                r = v;
                r = r >= wb && r < wb + w.length ? r - wb : -1;
                F = [];
                for (J = 0; J < K.length; )
                  ((G = K[J]), ++J, F.push(new pf(G.x - wb, G.y)));
                w = new Yj(w, r, F);
                w.separator = l;
                this.layers.push(new Qe(z, wb, w));
              }
              wb = I;
            }
          }
          y == q &&
            ((v = Pf.distance(P, C.a)),
            this.layers.push(new Qf(z, v, x ? (C.dir == b ? 1 : -1) : 0)));
          y == m &&
            ((P = Pf.distance(P, d.exit.a)),
            (y = d.exit.dir.cw),
            this.layers.push(new Rf(z, P, 0 < y.di * b.di + y.dj * b.dj)));
        }
        a = [];
        k = 0;
        for (h = this.layers; k < h.length; )
          if (((b = h[k]), ++k, b instanceof Qe)) {
            w = Fa.__cast(b, Qe).facade;
            n = [];
            wb = 0;
            for (w = w.sections; wb < w.length; )
              ((b = w[wb]), ++wb, b.height == this.height && n.push(b));
            b = n;
            for (I = 0; I < b.length; ) ((q = b[I]), ++I, a.push(q));
          }
        k = la.max(a, function (a) {
          return a.width;
        });
        2 < k.width && k.addChimney();
      };
      h['com.watabou.dwellings.model.Elevation'] = Zj;
      Zj.__name__ = 'com.watabou.dwellings.model.Elevation';
      Zj.prototype = { __class__: Zj };
      var Td = function (a, b) {
        this.dist = a;
        this.offset = b;
      };
      h['com.watabou.dwellings.model.Layer'] = Td;
      Td.__name__ = 'com.watabou.dwellings.model.Layer';
      Td.prototype = { __class__: Td };
      var Qe = function (a, b, d) {
        Td.call(this, a, b);
        this.facade = d;
      };
      h['com.watabou.dwellings.model.FacadeLayer'] = Qe;
      Qe.__name__ = 'com.watabou.dwellings.model.FacadeLayer';
      Qe.__super__ = Td;
      Qe.prototype = w(Td.prototype, { __class__: Qe });
      var Qf = function (a, b, d) {
        Td.call(this, a, b);
        this.dir = d;
      };
      h['com.watabou.dwellings.model.TowerLayer'] = Qf;
      Qf.__name__ = 'com.watabou.dwellings.model.TowerLayer';
      Qf.__super__ = Td;
      Qf.prototype = w(Td.prototype, { __class__: Qf });
      var Rf = function (a, b, d) {
        Td.call(this, a, b);
        this.right = d;
      };
      h['com.watabou.dwellings.model.PorchLayer'] = Rf;
      Rf.__name__ = 'com.watabou.dwellings.model.PorchLayer';
      Rf.__super__ = Td;
      Rf.prototype = w(Td.prototype, { __class__: Rf });
      var Sc = function (a) {
        this.stairCells = new za();
        var b = this;
        Sc.inst = this;
        this.bp = a;
        Nb.trace(a.seed, {
          fileName: 'Source/com/watabou/dwellings/model/House.hx',
          lineNumber: 36,
          className: 'com.watabou.dwellings.model.House',
          methodName: 'new',
        });
        Nb.trace(a.tags, {
          fileName: 'Source/com/watabou/dwellings/model/House.hx',
          lineNumber: 37,
          className: 'com.watabou.dwellings.model.House',
          methodName: 'new',
        });
        x.random();
        t.reset(a.seed);
        Ma.process(a);
        var d = Ma.shape;
        Hb.avgRoomSize = 6;
        Hb.regularRooms = -1 != a.tags.indexOf('regular');
        Hb.preferCorners = -1 != a.tags.indexOf('mechanical');
        Hb.preferWalls = -1 != a.tags.indexOf('organic');
        var f = Sc.build(function () {
          return new Hb(null, d.grid, d.area);
        });
        f.spawnExit();
        f.house = this;
        this.floors = [f];
        var g = Ma.spiral ? this.placeSpiral(f.contour) : null;
        if (1 < Ma.nFloors) {
          null != g && f.addSpiral(g);
          for (var k = f, l = 1, u = Ma.nFloors; l < u; ) {
            var p = l++;
            p = [k.area];
            if (-1 == a.tags.indexOf('slab')) {
              var h = 0,
                r = null;
              if (1 < k.rooms.length)
                for (var n = 0, wb = k.rooms; n < wb.length; ) {
                  var E = wb[n];
                  ++n;
                  if (!E.hasSpiral() && la.intersects(E.contour, k.contour)) {
                    var q = la.difference(p[0], E.area);
                    k.grid.isConnected(q) &&
                      ((q = md.compactness(q)), h <= q && ((h = q), (r = E)));
                  }
                }
              null != r &&
                ((n = md.compactness(p[0])),
                Nb.trace((h * h) / n, {
                  fileName: 'Source/com/watabou/dwellings/model/House.hx',
                  lineNumber: 82,
                  className: 'com.watabou.dwellings.model.House',
                  methodName: 'new',
                }),
                (h = (h * h) / n),
                null == h && (h = 0.5),
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < h &&
                  (p[0] = la.difference(p[0], r.area)));
            }
            Hb.avgRoomSize = 6;
            p = Sc.build(
              (function (a) {
                return function () {
                  return new Hb(b, k.grid, a[0]);
                };
              })(p),
            );
            this.floors.push(p);
            null != g && p.addSpiral(g);
            k = p;
          }
        }
        if (null == g)
          for (l = 1, u = this.floors.length; l < u; )
            ((p = l++), this.connectFloors(this.floors[p - 1], this.floors[p]));
        Ma.basement &&
          ((Hb.avgRoomSize = 12),
          (g = Sc.build(function () {
            return new Hb(null, f.grid, f.area);
          })),
          (E = la.max(g.rooms, function (a) {
            return a.get_size();
          })),
          (Hb.avgRoomSize = 6),
          (this.basement = Sc.build(function () {
            return new Hb(b, f.grid, E.area);
          })),
          this.connectFloors(f, this.basement) || (this.basement = null));
        this.assignRooms();
        this.assignDoors();
        this.spawnWindows();
        g = a.name;
        this.name = null != g ? g : zd.get(this.getTags());
        a.updateURL();
      };
      h['com.watabou.dwellings.model.House'] = Sc;
      Sc.__name__ = 'com.watabou.dwellings.model.House';
      Sc.inst = null;
      Sc.build = function (a, b) {
        null == b && (b = 0.5);
        for (var d = null, f = 0; 100 > f; ) {
          f++;
          d = a();
          for (
            var g = d.area.length, k = 0, l = 0, u = d.rooms;
            l < u.length;

          ) {
            var p = u[l];
            ++l;
            k += p.narrow.length;
          }
          if (k / g < b) return d;
        }
        Nb.trace('Failed to create a spacious enough plan', {
          fileName: 'Source/com/watabou/dwellings/model/House.hx',
          lineNumber: 183,
          className: 'com.watabou.dwellings.model.House',
          methodName: 'build',
        });
        return d;
      };
      Sc.reset = function (a) {
        a = new Sc(a);
        ed.curFloor = 0;
        Bc.curDir = a.floors[0].exit.dir;
        return a;
      };
      Sc.prototype = {
        reroll: function () {
          for (
            var a = this,
              b = this.floors[0].spiral,
              d = [],
              f = 0,
              g = this.floors.length;
            f < g;

          ) {
            var k = f++,
              l = Sc.build(
                (function (b) {
                  return function () {
                    return new Hb(a, b[0].grid, b[0].area);
                  };
                })([this.floors[k]]),
              );
            0 == k && l.spawnExit();
            null != b && l.addSpiral(b);
            d.push(l);
          }
          this.floors = d;
          if (null == b)
            for (d = 1, f = this.floors.length; d < f; )
              ((k = d++),
                this.connectFloors(this.floors[k - 1], this.floors[k]));
          null != this.basement &&
            ((this.basement = Sc.build(function () {
              return new Hb(a, a.basement.grid, a.basement.area);
            })),
            this.connectFloors(this.floors[0], this.basement));
          this.assignRooms();
          this.assignDoors();
          this.spawnWindows();
        },
        getTags: function () {
          var a = this.bp.tags.slice();
          la.removeAll(a, Ma.HEIGHT);
          la.removeAll(a, Ma.SIZE);
          var b = this.floors[0].area.length;
          16 > b ? a.push('small') : 24 < b && a.push('large');
          var d = this.floors.length;
          b = Math.sqrt(b);
          (1 == d || d < b / 2) && a.push('low');
          d >= b && a.push('tall');
          return a;
        },
        placeSpiral: function (a) {
          for (
            var b = this.floors[0].exit, d = [], f = a.length, g = 0;
            g < f;

          ) {
            var k = g++,
              l = a[k],
              u = a[(k + f - 1) % f],
              p = a[(k + f - 2) % f];
            k = a[(k + 1) % f];
            l.dir == u.dir.cw &&
              l.dir == p.dir.cw &&
              l.dir == k.dir &&
              l != b &&
              u != b &&
              d.push(l);
          }
          return la.random(d);
        },
        reassignRooms: function () {
          for (var a = 0, b = this.rooms; a < b.length; ) {
            var d = b[a];
            ++a;
            d.type = null;
          }
          this.assignRooms();
          this.assignDoors();
          a = 0;
          for (b = this.floors; a < b.length; )
            ((d = b[a]), ++a, (d.windows = []));
          this.spawnWindows();
        },
        assignRooms: function () {
          this.rooms = [];
          for (var a = 0, b = this.floors; a < b.length; ) {
            var d = b[a];
            ++a;
            var f = this.rooms;
            d = d.sortRooms();
            for (var g = 0; g < d.length; ) {
              var k = d[g];
              ++g;
              f.push(k);
            }
          }
          if (null != this.basement)
            for (
              f = this.rooms, d = this.basement.sortRooms(), a = 0;
              a < d.length;

            )
              ((k = d[a]), ++a, f.push(k));
          aa.assign(this);
        },
        assignDoors: function () {
          for (var a = 0, b = this.rooms; a < b.length; ) {
            var d = b[a];
            ++a;
            for (d = d.doors.iterator(); d.hasNext(); ) {
              var f = d.next();
              f.type = null;
            }
          }
          a = 0;
          for (b = this.rooms; a < b.length; )
            if (((d = b[a]), ++a, null != d.type && null != d.type.doors))
              d.type.doors(d);
            else if (
              -1 < d.plan.getFloor() &&
              1 == d.countDoors() &&
              !(d.narrow.length == d.area.length && 1 < d.countDoors())
            )
              for (d = d.doors.iterator(); d.hasNext(); )
                ((f = d.next()), (f.type = od.REGULAR));
        },
        spawnWindows: function () {
          for (var a = [], b = 0, d = this.rooms; b < d.length; ) {
            var f = d[b];
            ++b;
            null != f.type &&
              null != f.type.windows &&
              (f.type.windows(f), a.push(f));
          }
          if (null != this.basement)
            for (
              this.basement.windows = [], b = 0, d = this.basement.rooms;
              b < d.length;

            )
              ((f = d[b]), ++b, (f.lights = [Sf.onTheWall(f)]));
          b = 0;
          for (d = this.floors.length; b < d; ) {
            f = b++;
            Hb.windowDensity = 0.9 - 0.1 * (Ma.nFloors - f);
            this.floors[f].spawnWindowsExcluding(a);
            for (var g = 0, k = this.floors[f].rooms; g < k.length; )
              ((f = k[g]), ++g, (f.lights = [Sf.onTheWall(f)]));
          }
        },
        getStairCells: function (a) {
          var b = [],
            d = a.grid,
            f = [];
          null != a.exit && f.push(d.edge2cell(a.exit));
          null != a.spiral && f.push(d.edge2cell(a.spiral));
          var g = 0;
          for (a = a.rooms; g < a.length; ) {
            var k = a[g];
            ++g;
            for (
              var l = la.difference(k.area, f), u = k.doors.iterator();
              u.hasNext();

            ) {
              var p = u.next();
              M.remove(
                l,
                d.edge2cell(
                  k == p.room1 ? p.edge1 : k == p.room2 ? p.edge2 : null,
                ),
              );
            }
            for (u = 0; u < l.length; ) {
              p = l[u];
              ++u;
              var h = this.empty(k, p, oa.NORTH),
                r = this.empty(k, p, oa.SOUTH),
                n = this.empty(k, p, oa.EAST),
                t = this.empty(k, p, oa.WEST);
              if (h || r || !n || !t)
                if (n || t || !h || !r)
                  (h && n && !this.empty(k, p, oa.NE)) ||
                    (h && t && !this.empty(k, p, oa.NW)) ||
                    (r && n && !this.empty(k, p, oa.SE)) ||
                    (r && t && !this.empty(k, p, oa.SW)) ||
                    b.push(p);
            }
          }
          return b;
        },
        connectFloors: function (a, b) {
          var d = this.stairCells.h[a.__id__];
          if (null == d) {
            var f = this.stairCells,
              g = this.getStairCells(a);
            f.set(a, g);
            d = g;
          }
          f = this.stairCells.h[b.__id__];
          null == f &&
            ((f = this.stairCells),
            (g = this.getStairCells(b)),
            f.set(b, g),
            (f = g));
          g = la.intersect(d, f);
          if (0 == g.length) {
            Nb.trace(
              'No available cells for a staircase, spawning a trapdorr instead...',
              {
                fileName: 'Source/com/watabou/dwellings/model/House.hx',
                lineNumber: 325,
                className: 'com.watabou.dwellings.model.House',
                methodName: 'connectFloors',
              },
            );
            var k = la.intersect(a.area, b.area);
            g = 0;
            for (var l = a.stairs; g < l.length; ) {
              var u = l[g];
              ++g;
              M.remove(k, u.cell);
            }
            g = 0;
            for (l = b.stairs; g < l.length; )
              ((u = l[g]), ++g, M.remove(k, u.cell));
            if (0 < k.length)
              return (
                (k = la.random(k)),
                M.remove(d, k),
                M.remove(f, k),
                (a = new Tf(a, k, null)),
                (b = new Tf(b, k, null)),
                a.link(b),
                !0
              );
            Nb.trace('No available cells for a trapdoor!', {
              fileName: 'Source/com/watabou/dwellings/model/House.hx',
              lineNumber: 344,
              className: 'com.watabou.dwellings.model.House',
              methodName: 'connectFloors',
            });
            return !1;
          }
          k = la.random(g);
          M.remove(d, k);
          M.remove(f, k);
          g = 0;
          for (l = oa.ROSE; g < l.length; )
            ((u = l[g]),
              ++g,
              (u = a.grid.cell(k.i + u.di, k.j + u.dj)),
              M.remove(d, u),
              M.remove(f, u));
          a = new Tf(a, k, this.getStairDir(a, k));
          b = new Tf(b, k, this.getStairDir(b, k));
          a.link(b);
          return !0;
        },
        empty: function (a, b, d) {
          b = a.plan.grid.cell(b.i + d.di, b.j + d.dj);
          return -1 != a.area.indexOf(b);
        },
        getStairDir: function (a, b) {
          for (var d = [], f = [], g = 0, k = oa.CARDINAL; g < k.length; ) {
            var l = k[g];
            ++g;
            this.empty(a.getRoom(b), b, l) &&
              (f.push(l.op), this.empty(a.getRoom(b), b, l.op) || d.push(l.op));
          }
          return la.random(0 < d.length ? d : f);
        },
        updateProps: function () {
          for (var a = 0, b = this.floors; a < b.length; ) {
            var d = b[a];
            ++a;
            var f = 0;
            for (d = d.rooms; f < d.length; ) {
              var g = d[f];
              ++f;
              g.props.update();
            }
          }
        },
        getElevations: function () {
          if (null == this.elevations) {
            for (var a = new za(), b = 0, d = oa.CARDINAL; b < d.length; ) {
              var f = d[b];
              ++b;
              a.set(f, new Zj(this, f));
            }
            this.elevations = a;
          }
          return this.elevations;
        },
        __class__: Sc,
      };
      var zd = function () {};
      h['com.watabou.dwellings.model.Namer'] = zd;
      zd.__name__ = 'com.watabou.dwellings.model.Namer';
      zd.grammar = null;
      zd.init = function () {
        if (null == zd.grammar)
          ((xe.rng = t.float),
            (zd.grammar = new ak(JSON.parse($b.getText('grammar')))),
            zd.grammar.addModifiers(cb.get()),
            (zd.grammar.defaultSelector = th));
        else {
          var a = 0.3;
          null == a && (a = 0.5);
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
            ? zd.grammar.clearState()
            : (zd.grammar.flags = []);
        }
      };
      zd.get = function (a) {
        zd.init();
        for (var b = 0; b < a.length; ) {
          var d = a[b];
          ++b;
          var f = zd.grammar;
          d = d.toUpperCase();
          la.addAll(f.flags, new xa(', +', '').split(d));
        }
        return zd.grammar.flatten('#title.capitalizeAll#');
      };
      var Hb = function (a, b, d) {
        this.house = a;
        this.grid = b;
        this.area = d;
        this.contour = b.outline(d);
        this.rooms = [];
        this.stairs = [];
        this.innerWalls = [];
        this.divideArea(this.contour);
        this.mergeCorridors();
        this.connectRooms();
        this.windows = [];
      };
      h['com.watabou.dwellings.model.Plan'] = Hb;
      Hb.__name__ = 'com.watabou.dwellings.model.Plan';
      Hb.prototype = {
        isNarrow: function (a, b) {
          var d = oa.NORTH,
            f = -1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj));
          d = oa.SOUTH;
          var g = -1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj));
          if (!f && !g) return !0;
          d = oa.EAST;
          var k = -1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj));
          d = oa.WEST;
          var l = -1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj));
          if (!k && !l) return !0;
          d = oa.NE;
          if (-1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj)) && f && k)
            return !1;
          d = oa.NW;
          if (-1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj)) && f && l)
            return !1;
          d = oa.SE;
          if (-1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj)) && g && k)
            return !1;
          d = oa.SW;
          return -1 != a.indexOf(this.grid.cell(b.i + d.di, b.j + d.dj)) &&
            g &&
            l
            ? !1
            : !0;
        },
        divideArea: function (a) {
          var b = this.grid.contour2area(a),
            d = Math.pow(2, Hb.roomSizeChaos);
          if (
            Hb.regularRooms
              ? Sb.isRect(a) && b.length < Hb.avgRoomSize * d
              : b.length <=
                Hb.avgRoomSize *
                  Math.pow(
                    d,
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      3,
                  )
          )
            this.addRoom(a);
          else if (((d = this.getNotch(a)), null == d)) this.addRoom(a);
          else {
            b = d.dir;
            for (d = [d]; null == Sb.findEdge(a, d[d.length - 1].b); )
              d.push(this.grid.nodeNdir2edge(d[d.length - 1].b, b));
            if (1 < d.length) {
              var f = d.length / Hb.avgRoomSize;
              null == f && (f = 0.5);
              f = (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < f;
            } else f = !1;
            if (f) {
              b = la.random([b.cw, b.ccw]);
              var g = d.length / 2;
              f = g - (g | 0);
              null == f && (f = 0.5);
              for (
                d = d.slice(
                  0,
                  (g | 0) +
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 <
                    f
                      ? 1
                      : 0),
                );
                null == Sb.findEdge(a, d[d.length - 1].b);

              )
                d.push(this.grid.nodeNdir2edge(d[d.length - 1].b, b));
            }
            this.innerWalls.push(d);
            b = Sb.slice(a, d[d.length - 1].b, d[0].a).concat(d);
            a = Sb.slice(a, d[0].a, d[d.length - 1].b).concat(
              this.grid.revertChain(d),
            );
            this.divideArea(b);
            this.divideArea(a);
          }
        },
        getNotch: function (a) {
          for (
            var b = this.grid.contour2area(a),
              d = [],
              f = [],
              g = a.length,
              k = 0;
            k < g;

          ) {
            var l = k++,
              u = a[l];
            l = a[(l + g - 1) % g];
            if (u.dir == l.dir)
              (this.isNarrow(b, this.grid.edge2cell(l)) &&
                this.isNarrow(b, this.grid.edge2cell(u))) ||
                d.push(u);
            else if (u.dir == l.dir.ccw) {
              var p = this.grid.edge2cell(u),
                h = this.grid.edge2cell(this.grid.nodeNdir2edge(u.a, u.dir.cw));
              (this.isNarrow(b, p) && this.isNarrow(b, h)) || f.push(u);
              p = this.grid.edge2cell(l);
              (this.isNarrow(b, h) && this.isNarrow(b, p)) ||
                f.push(this.grid.nodeNdir2edge(u.a, l.dir));
            }
          }
          a = Hb.preferCorners
            ? 0 < f.length
              ? f
              : f.concat(d)
            : Hb.preferWalls
              ? 0 < d.length
                ? d
                : d.concat(f)
              : d.concat(f);
          if (0 == a.length) return null;
          u = la.random(a);
          return this.grid.nodeNdir2edge(u.a, u.dir.cw);
        },
        addRoom: function (a) {
          a = new bk(this, a);
          this.rooms.push(a);
          return a;
        },
        getRoom: function (a) {
          for (var b = 0, d = this.rooms; b < d.length; ) {
            var f = d[b];
            ++b;
            if (-1 != f.area.indexOf(a)) return f;
          }
          return null;
        },
        edge2room: function (a) {
          return this.getRoom(this.grid.edge2cell(a));
        },
        mergeCorridors: function () {
          for (var a = [], b = 0, d = this.rooms; b < d.length; ) {
            var f = d[b];
            ++b;
            var g = [f];
            la.every(
              g[0].area,
              (function (a) {
                return function (b) {
                  return -1 != a[0].narrow.indexOf(b);
                };
              })(g),
            ) && a.push(f);
          }
          f = a;
          do {
            var k = !1;
            a = 0;
            for (b = f.length - 1; a < b; ) {
              d = a++;
              g = f[d];
              d += 1;
              for (var l = f.length; d < l; ) {
                var u = d++;
                u = f[u];
                for (var p = 0, h = 0, r = g.contour; h < r.length; ) {
                  var n = r[h];
                  ++h;
                  if (
                    -1 !=
                      u.contour.indexOf(
                        this.grid.edges.h[n.b.__id__].h[n.a.__id__],
                      ) &&
                    (++p, 1 < p)
                  )
                    break;
                }
                if (1 == p) {
                  d = this.addRoom(this.grid.outline(g.area.concat(u.area)));
                  f.push(d);
                  M.remove(f, g);
                  M.remove(f, u);
                  M.remove(this.rooms, g);
                  M.remove(this.rooms, u);
                  k = !0;
                  break;
                }
              }
              if (k) break;
            }
          } while (k);
        },
        connectRooms: function () {
          for (
            var a = this, b = new za(), d = 0, f = this.rooms;
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            for (var k = new za(), l = 0, u = this.rooms; l < u.length; ) {
              var p = u[l];
              ++l;
              k.set(p, []);
            }
            b.set(g, k);
          }
          var h = b;
          u = function (b, d, f) {
            la.add(h.h[b.__id__].h[d.__id__], f);
            la.add(
              h.h[d.__id__].h[b.__id__],
              a.grid.edges.h[f.b.__id__].h[f.a.__id__],
            );
          };
          b = 0;
          for (d = this.rooms; b < d.length; )
            for (g = d[b], ++b, f = 0, k = g.contour; f < k.length; ) {
              var r = k[f];
              ++f;
              var n = this.grid.edges.h[r.b.__id__].h[r.a.__id__];
              if (null != n) {
                var t = this.grid.edge2cell(n);
                p = this.getRoom(t);
                null != p && u(g, p, r);
              }
            }
          var E = [];
          u = function (b, d) {
            for (var f = 1, g = 0, k = oa.CARDINAL; g < k.length; ) {
              var l = k[g];
              ++g;
              l = a.grid.cell(b.i + l.di, b.j + l.dj);
              -1 != d.area.indexOf(l) && ++f;
            }
            -1 != E.indexOf(b) && (f *= 2);
            return f;
          };
          t = [];
          b = 0;
          for (d = this.rooms; b < d.length; ) {
            g = d[b];
            ++b;
            t.push(g);
            f = [];
            k = r = h.h[g.__id__];
            for (r = r.keys(); r.hasNext(); )
              ((p = r.next()),
                (l = k.get(p)),
                0 < l.length &&
                  -1 == t.indexOf(p) &&
                  f.push({ another: p, edges: l }));
            f.sort(function (a, b) {
              a = a.edges.length - b.edges.length;
              return 0 == a ? 0 : 0 > a ? -1 : 1;
            });
            for (k = 0; k < f.length; ) {
              r = f[k];
              ++k;
              p = r.another;
              var q = r.edges,
                x = [],
                C = Infinity;
              for (l = 0; l < q.length; ) {
                r = q[l];
                ++l;
                n = this.grid.edges.h[r.b.__id__].h[r.a.__id__];
                var m = u(this.grid.edge2cell(r), g);
                n = u(this.grid.edge2cell(n), p);
                n = m + n;
                n == C ? x.push(r) : n < C && ((C = n), (x = [r]));
              }
              0 < x.length &&
                ((r = la.random(x)),
                g.link(p, r),
                la.add(E, this.grid.edge2cell(r)),
                la.add(
                  E,
                  this.grid.edge2cell(
                    this.grid.edges.h[r.b.__id__].h[r.a.__id__],
                  ),
                ));
            }
          }
          d = this.wallDoors();
          for (b = 0; b < d.length; )
            ((t = d[b]), ++b, t.room1.unlink(t.room2));
          this.graph = new ck();
          b = 0;
          for (d = this.rooms; b < d.length; )
            ((g = d[b]), ++b, this.graph.add(new dk(g)));
          b = 0;
          for (d = this.rooms; b < d.length; )
            for (
              g = d[b],
                ++b,
                u = this.graph.findNode(g),
                f = 0,
                k = g.getDoors();
              f < k.length;

            )
              ((t = k[f]),
                ++f,
                (p = g == t.room1 ? t.room2 : g == t.room2 ? t.room1 : null),
                (t = this.graph.findNode(p)),
                u.link(t));
        },
        wallDoors: function () {
          var a = [];
          if (0 > Hb.connectivity) return a;
          for (var b = 0, d = this.rooms; b < d.length; ) {
            var f = d[b];
            ++b;
            for (var g = f.doors, k = g, l = g.keys(); l.hasNext(); ) {
              var u = l.next();
              g = k.get(u);
              var p = u,
                h = g.getPrice(),
                r = !0;
              u = 0;
              for (var n = this.rooms; u < n.length; ) {
                var t = n[u];
                ++u;
                if (
                  null != f.doors.h.__keys__[t.__id__] &&
                  null != t.doors.h.__keys__[p.__id__]
                ) {
                  var E = f.doors.h[t.__id__].getPrice();
                  t = t.doors.h[p.__id__].getPrice();
                  if (E < h && t < h) {
                    r = !1;
                    break;
                  }
                }
              }
              r || a.push(g);
            }
          }
          f = [];
          b = 0;
          for (d = this.rooms; b < d.length; )
            for (g = d[b], ++b, u = 0, n = this.rooms; u < n.length; )
              ((k = n[u]),
                ++u,
                (k = g.doors.h[k.__id__]),
                null != k && la.add(f, k));
          la.removeAll(f, a);
          u = this.rooms.slice();
          for (n = [la.pick(u)]; 0 < u.length; ) {
            l = [];
            for (b = 0; b < n.length; )
              for (g = n[b], ++b, d = 0; d < u.length; )
                ((k = u[d]),
                  ++d,
                  null != g.doors.h.__keys__[k.__id__] &&
                    la.add(l, g.doors.h[k.__id__]));
            la.removeAll(l, a);
            g = la.min(l, function (a) {
              return a.getPrice();
            });
            b = -1 != u.indexOf(g.room1) ? g.room1 : g.room2;
            M.remove(f, g);
            M.remove(u, b);
            la.add(n, b);
          }
          la.addAll(
            a,
            la.subset(f, Math.round(f.length * (1 - Hb.connectivity))),
          );
          return a;
        },
        spawnExit: function () {
          for (var a = [], b = 0, d = this.contour; b < d.length; ) {
            var f = d[b];
            ++b;
            var g = Sb.prev(this.contour, f).dir,
              k = f.dir;
            f = Sb.next(this.contour, f).dir;
            g == k && k == f
              ? a.push(5)
              : g.cw == k && k.cw == f
                ? a.push(3)
                : g.ccw != k && k.ccw != f
                  ? a.push(1)
                  : a.push(0);
          }
          this.exit = la.weighted(this.contour, a);
        },
        spawnWindowsExcluding: function (a) {
          if (-1 == this.house.bp.tags.indexOf('blank')) {
            for (var b = this.contour.slice(), d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              -1 != this.rooms.indexOf(f) && la.removeAll(b, f.contour);
            }
            d =
              -1 != this.house.bp.tags.indexOf('transparent')
                ? 1
                : Hb.windowDensity;
            b = b.length * d;
            var g = this.contour.length,
              k = Sb.findCorner(this.contour),
              l = [],
              u = null,
              p = null,
              h = null;
            d = 0;
            for (var r = g; d < r; ) {
              var n = d++;
              n = this.contour[(k + n) % g];
              this.exit != n &&
                this.spiral != n &&
                this.preSpiral != n &&
                ((f = this.getRoom(this.grid.edge2cell(n))),
                -1 != a.indexOf(f)
                  ? (u = null)
                  : null == u || f != h || n.dir != p
                    ? ((u = [n]), l.push(u), (h = f), (p = n.dir))
                    : u.push(n));
            }
            for (a = []; 0 < l.length && a.length < b; ) {
              d = [];
              for (r = 0; r < l.length; )
                ((u = l[r]), ++r, d.push(Math.pow(u.length, 2)));
              u = la.weighted(l, d);
              M.remove(l, u);
              for (d = 0; d < u.length; ) ((n = u[d]), ++d, a.push(n));
            }
            b = this.windows;
            for (d = 0; d < a.length; ) ((n = a[d]), ++d, b.push(n));
          }
        },
        addSpiral: function (a) {
          var b = this.grid.node(a.a.i, a.a.j);
          a = this.grid.node(a.b.i, a.b.j);
          this.spiral = this.grid.edges.h[b.__id__].h[a.__id__];
          this.preSpiral = Sb.prev(this.contour, this.spiral);
        },
        findSpiral: function () {
          return this.getRoom(this.grid.edge2cell(this.spiral));
        },
        findStairs: function (a) {
          for (var b = 0, d = this.stairs; b < d.length; ) {
            var f = d[b];
            ++b;
            if (f.isGoingUp() == a) return this.getRoom(f.cell);
          }
          return null;
        },
        getFloor: function () {
          return null == this.house ? 0 : this.house.floors.indexOf(this);
        },
        isGroundFloor: function () {
          return 0 == this.getFloor();
        },
        isTopFloor: function () {
          return this.getFloor() == this.house.floors.length - 1;
        },
        getDoors: function () {
          for (var a = [], b = 0, d = this.rooms; b < d.length; ) {
            var f = d[b];
            ++b;
            for (f = f.doors.iterator(); f.hasNext(); ) {
              var g = f.next();
              la.add(a, g);
            }
          }
          return a;
        },
        findStart: function () {
          var a = this.getFloor();
          return 0 == a
            ? this.getRoom(this.grid.edge2cell(this.exit))
            : null != this.spiral
              ? this.findSpiral()
              : -1 == a
                ? this.findStairs(!0)
                : this.findStairs(!1);
        },
        sortRooms: function () {
          var a = this.findStart();
          a = [null != a ? a : this.rooms[0]];
          for (var b = la.difference(this.rooms, a), d = 0; 0 <= d; ) {
            var f = !1,
              g = a[d].doors,
              k = g;
            for (g = g.keys(); g.hasNext(); ) {
              var l = g.next();
              k.get(l);
              if (-1 != b.indexOf(l)) {
                M.remove(b, l);
                a.push(l);
                f = !0;
                break;
              }
            }
            f ? (d = a.length - 1) : --d;
          }
          return a;
        },
        __class__: Hb,
      };
      var bk = function (a, b, d) {
        null == d && (d = !1);
        this.plan = a;
        this.contour = b;
        this.area = a.grid.contour2area(b);
        this.doors = new za();
        if (d) a = this.area;
        else {
          b = [];
          d = 0;
          for (var f = this.area; d < f.length; ) {
            var g = f[d];
            ++d;
            a.isNarrow(this.area, g) && b.push(g);
          }
          a = b;
        }
        this.narrow = a;
        this.props = new ek(this);
      };
      h['com.watabou.dwellings.model.Room'] = bk;
      bk.__name__ = 'com.watabou.dwellings.model.Room';
      bk.prototype = {
        link: function (a, b) {
          b = new Xj(this, a, b);
          this.doors.set(a, b);
          a.doors.set(this, b);
        },
        unlink: function (a) {
          this.doors.remove(a);
          a.doors.remove(this);
        },
        getDoor: function (a) {
          for (var b = this.doors.iterator(); b.hasNext(); ) {
            var d = b.next();
            if (
              (this == d.room1 ? d.edge1 : this == d.room2 ? d.edge2 : null) ==
              a
            )
              return d;
          }
          return null;
        },
        getDoors: function () {
          for (var a = [], b = this.doors.iterator(); b.hasNext(); ) {
            var d = b.next();
            a.push(d);
          }
          return a;
        },
        countDoors: function (a) {
          null == a && (a = !0);
          for (var b = 0, d = this.doors.iterator(); d.hasNext(); ) {
            var f = d.next();
            (a ||
              (this == f.room1 ? f.room2 : this == f.room2 ? f.room1 : null)
                .type != aa.bathroom) &&
              ++b;
          }
          -1 != this.contour.indexOf(this.plan.exit) && ++b;
          b += this.getStairs().length;
          -1 != this.contour.indexOf(this.plan.spiral) && ++b;
          return b;
        },
        getStairs: function () {
          for (var a = [], b = 0, d = this.plan.stairs; b < d.length; ) {
            var f = d[b];
            ++b;
            -1 != this.area.indexOf(f.cell) && a.push(f);
          }
          return a;
        },
        hasExit: function () {
          return -1 != this.contour.indexOf(this.plan.exit);
        },
        hasSpiral: function () {
          return -1 != this.contour.indexOf(this.plan.spiral);
        },
        get_size: function () {
          return this.area.length - this.getStairs().length;
        },
        spawnWindows: function (a) {
          for (
            var b = this.contour.length,
              d = Sb.findCorner(this.contour),
              f = [],
              g = null,
              k = null,
              l = 0;
            l < b;

          ) {
            var u = l++;
            u = this.contour[(d + u) % b];
            u != this.plan.exit &&
              u != this.plan.spiral &&
              u != this.plan.preSpiral &&
              (-1 == this.plan.contour.indexOf(u)
                ? (g = null)
                : null == g || u.dir != k
                  ? ((g = [u]), f.push(g), (k = u.dir))
                  : g.push(u));
          }
          for (b = []; 0 < f.length && b.length < a; )
            for (d = la.pick(f), l = 0; l < d.length; )
              ((u = d[l]), ++l, b.push(u));
          a = this.plan.windows;
          for (l = 0; l < b.length; ) ((u = b[l]), ++l, a.push(u));
        },
        reset: function () {
          this.type = null;
          this.props.clear();
        },
        fill: function () {
          null != this.type && null != this.type.fill
            ? (this.type.fill(this), this.props.update())
            : ((this.clutter = new vd(this)), this.clutter.fill());
        },
        __class__: bk,
        __properties__: { get_size: 'get_size' },
      };
      var ml = function () {};
      h['com.watabou.dwellings.model.rooms.Armoury'] = ml;
      ml.__name__ = 'com.watabou.dwellings.model.rooms.Armoury';
      ml.proto = function () {
        var a = new aa('armoury', aa.checkBasic(4, 9, 0.5, 1));
        a.windows = aa.winFixed(0);
        return a;
      };
      var uh = function () {};
      h['com.watabou.dwellings.model.rooms.Attic'] = uh;
      uh.__name__ = 'com.watabou.dwellings.model.rooms.Attic';
      uh.proto = function () {
        return new aa('attic', uh.validate);
      };
      uh.validate = function (a) {
        return aa.topFloor(a) && aa.singular(a) ? !0 : !1;
      };
      var vh = function () {};
      h['com.watabou.dwellings.model.rooms.Bathroom'] = vh;
      vh.__name__ = 'com.watabou.dwellings.model.rooms.Bathroom';
      vh.proto = function () {
        var a = new aa('bathroom', vh.validate);
        a.short = 'BTH';
        a.windows = aa.winFixed(1);
        a.doors = aa.doorsFixed(od.REGULAR);
        a.fill = function (a) {
          a.clutter = new vd(a);
          var b = a.getDoors()[0];
          b = b.plan.grid.edge2cell(
            a == b.room1 ? b.edge1 : a == b.room2 ? b.edge2 : null,
          );
          var f = new I(b.j + 0.5, b.i + 0.5);
          b = la.max(a.area, function (a) {
            return I.distance(new I(a.j + 0.5, a.i + 0.5), f);
          });
          a.clutter.spawn(b, 0.3, 1, 2, 0.5, 0, 0.6);
        };
        return a;
      };
      vh.validate = function (a) {
        return 4 < a.get_size() ||
          1 < a.countDoors() ||
          a.hasExit() ||
          aa.underground(a) ||
          1 == a.plan.rooms.length
          ? !1
          : !0;
      };
      var I = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      h['openfl.geom.Point'] = I;
      I.__name__ = 'openfl.geom.Point';
      I.__limeVector2 = null;
      I.distance = function (a, b) {
        var d = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(d * d + a * a);
      };
      I.polar = function (a, b) {
        return new I(a * Math.cos(b), a * Math.sin(b));
      };
      I.prototype = {
        add: function (a) {
          return new I(a.x + this.x, a.y + this.y);
        },
        clone: function () {
          return new I(this.x, this.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
        },
        normalize: function (a) {
          if (0 != this.x || 0 != this.y)
            ((a /= Math.sqrt(this.x * this.x + this.y * this.y)),
              (this.x *= a),
              (this.y *= a));
        },
        setTo: function (a, b) {
          this.x = a;
          this.y = b;
        },
        subtract: function (a) {
          return new I(this.x - a.x, this.y - a.y);
        },
        __toLimeVector2: function () {
          null == I.__limeVector2 && (I.__limeVector2 = new Uf());
          var a = I.__limeVector2;
          a.x = this.x;
          a.y = this.y;
          return I.__limeVector2;
        },
        get_length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        __class__: I,
        __properties__: { get_length: 'get_length' },
      };
      var la = function () {};
      h['com.watabou.utils.ArrayExtender'] = la;
      la.__name__ = 'com.watabou.utils.ArrayExtender';
      la.revert = function (a) {
        a = a.slice();
        a.reverse();
        return a;
      };
      la.shuffle = function (a) {
        for (var b = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          b.splice(
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
              (b.length + 1)) |
              0,
            0,
            f,
          );
        }
        return b;
      };
      la.random = function (a) {
        return a[
          (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
            a.length) |
            0
        ];
      };
      la.pick = function (a) {
        var b =
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
              a.length) |
            0,
          d = a[b];
        a.splice(b, 1);
        return d;
      };
      la.subset = function (a, b) {
        return la.shuffle(a).slice(0, b);
      };
      la.weighted = function (a, b) {
        for (
          var d =
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
              la.sum(b),
            f = 0,
            g = 0,
            k = a.length;
          g < k;

        ) {
          var l = g++;
          if (d <= (f += b[l])) return a[l];
        }
        return a[0];
      };
      la.isEmpty = function (a) {
        return 0 == a.length;
      };
      la.min = function (a, b) {
        for (var d = a[0], f = b(d), g = 1, k = a.length; g < k; ) {
          var l = g++;
          l = a[l];
          var u = b(l);
          u < f && ((d = l), (f = u));
        }
        return d;
      };
      la.max = function (a, b) {
        for (var d = a[0], f = b(d), g = 1, k = a.length; g < k; ) {
          var l = g++;
          l = a[l];
          var u = b(l);
          u > f && ((d = l), (f = u));
        }
        return d;
      };
      la.every = function (a, b) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          if (!b(f)) return !1;
        }
        return !0;
      };
      la.sum = function (a) {
        for (var b = 0, d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          b += f;
        }
        return b;
      };
      la.add = function (a, b) {
        return -1 == a.indexOf(b) ? (a.push(b), !0) : !1;
      };
      la.intersect = function (a, b) {
        for (var d = [], f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          -1 != b.indexOf(g) && d.push(g);
        }
        return d;
      };
      la.addAll = function (a, b) {
        for (var d = 0; d < b.length; ) {
          var f = b[d];
          ++d;
          -1 == a.indexOf(f) && a.push(f);
        }
      };
      la.removeAll = function (a, b) {
        for (var d = 0; d < b.length; ) {
          var f = b[d];
          ++d;
          M.remove(a, f);
        }
      };
      la.difference = function (a, b) {
        for (var d = [], f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          -1 == b.indexOf(g) && d.push(g);
        }
        return d;
      };
      la.intersects = function (a, b) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          if (-1 != b.indexOf(f)) return !0;
        }
        return !1;
      };
      var wh = function () {};
      h['com.watabou.dwellings.model.rooms.Bedroom'] = wh;
      wh.__name__ = 'com.watabou.dwellings.model.rooms.Bedroom';
      wh.proto = function () {
        var a = new aa('bedroom', wh.validate);
        a.windows = aa.winRatio(0.25);
        a.doors = aa.doorsFixed(od.REGULAR);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.5, 1, 1, 0.8, 1, 0.9, 0.3);
        };
        return a;
      };
      wh.validate = function (a) {
        return !aa.aboveGround(a) ||
          4 > a.get_size() ||
          8 < a.get_size() ||
          0.5 < a.narrow.length / a.get_size() ||
          1 < a.countDoors(!1)
          ? !1
          : !0;
      };
      var xh = function () {};
      h['com.watabou.dwellings.model.rooms.Cellar'] = xh;
      xh.__name__ = 'com.watabou.dwellings.model.rooms.Cellar';
      xh.proto = function () {
        var a = new aa('cellar', xh.validate);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(
            0.2 +
              0.1 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            0.5,
            1,
            0.2,
            0,
            0.1,
            10,
          );
        };
        return a;
      };
      xh.validate = function (a) {
        return 5 > a.get_size() ||
          a.narrow.length == a.get_size() ||
          -1 < a.plan.getFloor()
          ? !1
          : !0;
      };
      var t = function () {};
      h['com.watabou.utils.Random'] = t;
      t.__name__ = 'com.watabou.utils.Random';
      t.reset = function (a) {
        null == a && (a = -1);
        t.seed = -1 != a ? a : new Date().getTime() % 2147483647 | 0;
      };
      t.float = function () {
        return (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647;
      };
      var yh = function () {};
      h['com.watabou.dwellings.model.rooms.Chapel'] = yh;
      yh.__name__ = 'com.watabou.dwellings.model.rooms.Chapel';
      yh.proto = function () {
        var a = new aa('chapel', aa.checkBasic(4, 6, 0.2, 1));
        a.doors = aa.doorsFixed(od.REGULAR);
        a.fill = yh.populate;
        return a;
      };
      yh.populate = function (a) {
        for (var b = [], d = a.doors.iterator(); d.hasNext(); ) {
          var f = d.next();
          b.push(
            (a == f.room1 ? f.edge1 : a == f.room2 ? f.edge2 : null).point(),
          );
        }
        f = b;
        var g = Sb.longEdges(a.contour),
          k = null,
          l = 0;
        for (b = 0; b < g.length; ) {
          var u = g[b];
          ++b;
          for (var p = u.point(), h = 0, r = 0; r < f.length; )
            ((d = f[r]), ++r, (h += I.distance(d, p)));
          l < h && ((l = h), (k = u));
        }
        null != k
          ? ((b = new zh(k)), a.props.add(b))
          : Nb.trace('No place for an altar?', {
              fileName: 'Source/com/watabou/dwellings/model/rooms/Chapel.hx',
              lineNumber: 41,
              className: 'com.watabou.dwellings.model.rooms.Chapel',
              methodName: 'populate',
            });
      };
      var Sb = function () {};
      h['com.watabou.dwellings.utils.ChainUtils'] = Sb;
      Sb.__name__ = 'com.watabou.dwellings.utils.ChainUtils';
      Sb.findEdge = function (a, b) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          if (f.a == b) return f;
        }
        return null;
      };
      Sb.toPoly = function (a, b) {
        null == b && (b = !0);
        for (var d = [], f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          g = g.a;
          d.push(new I(g.j, g.i));
        }
        b || ((g = a[a.length - 1].b), d.push(new I(g.j, g.i)));
        return d;
      };
      Sb.slice = function (a, b, d) {
        b = a.indexOf(Sb.findEdge(a, b));
        d = a.indexOf(Sb.findEdge(a, d));
        return b < d ? a.slice(b, d) : a.slice(b).concat(a.slice(0, d));
      };
      Sb.next = function (a, b) {
        return a[(a.indexOf(b) + 1) % a.length];
      };
      Sb.prev = function (a, b) {
        return a[(a.indexOf(b) + a.length - 1) % a.length];
      };
      Sb.findCorner = function (a, b) {
        null == b && (b = 0);
        for (var d = a.length; a[b].dir == a[(b + d - 1) % d].dir; ) ++b;
        return b;
      };
      Sb.longEdges = function (a) {
        for (
          var b = a.length, d = [], f = 0;
          a[f].dir == a[(f + b - 1) % b].dir;

        )
          ++f;
        do {
          for (var g = 1; a[f].dir == a[(f + g) % b].dir; ) ++g;
          d.push(new qf(a[f].a, a[(f + g) % b].a, a[f].dir));
          f = (f + g) % b;
        } while (d[d.length - 1].b != d[0].a);
        return d;
      };
      Sb.isRect = function (a) {
        return 4 == Sb.longEdges(a).length;
      };
      Sb.fill = function (a, b) {
        for (var d = [], f = 0; f < b.length; ) {
          var g = b[f];
          ++f;
          la.add(d, a.edge2cell(g));
        }
        for (var k = d.slice(); 0 < d.length; ) {
          var l = [];
          for (f = 0; f < d.length; ) {
            var u = d[f];
            ++f;
            for (var p = 0, h = oa.CARDINAL; p < h.length; )
              ((g = h[p]),
                ++p,
                (g = a.cellNdir2edge(u, g)),
                -1 == b.indexOf(g) &&
                  ((g = a.edge2cell(a.edges.h[g.b.__id__].h[g.a.__id__])),
                  -1 == k.indexOf(g) && la.add(l, g)));
          }
          d = l;
          for (f = 0; f < d.length; ) ((l = d[f]), ++f, k.push(l));
        }
        return k;
      };
      var qf = function (a, b, d) {
        this.a = a;
        this.b = b;
        this.dir = d;
      };
      h['com.watabou.dwellings.utils.Edge'] = qf;
      qf.__name__ = 'com.watabou.dwellings.utils.Edge';
      qf.prototype = {
        point: function (a) {
          null == a && (a = 0.5);
          return new I(
            this.a.j + (this.b.j - this.a.j) * a,
            this.a.i + (this.b.i - this.a.i) * a,
          );
        },
        __class__: qf,
      };
      var Ud = function () {
        ba.call(this);
      };
      h['com.watabou.dwellings.model.props.Prop'] = Ud;
      Ud.__name__ = 'com.watabou.dwellings.model.props.Prop';
      Ud.__super__ = ba;
      Ud.prototype = w(ba.prototype, { update: function () {}, __class__: Ud });
      var zh = function (a) {
        ba.call(this);
        this.wall = a;
      };
      h['com.watabou.dwellings.model.props.Altar'] = zh;
      zh.__name__ = 'com.watabou.dwellings.model.props.Altar';
      zh.__super__ = Ud;
      zh.prototype = w(Ud.prototype, {
        update: function () {
          var a = this.get_graphics();
          a.clear();
          a.lineStyle(Q.strokeNormal, Q.colorInk);
          a.beginFill(Q.colorProps);
          a.drawRect(0, -0.2, 0.2, 0.4);
          a.endFill();
          a.beginFill(Q.colorInk);
          a.drawCircle(0.1, -0.1, Q.strokeNormal);
          a.drawCircle(0.1, 0.1, Q.strokeNormal);
          a = this.wall.dir.cw;
          a = new I(a.dj, a.di);
          var b = this.wall.point(),
            d = pb.proto.innerTh / 2;
          b = new I(b.x + a.x * d, b.y + a.y * d);
          this.set_x(b.x);
          this.set_y(b.y);
          this.set_rotation((Math.atan2(a.y, a.x) / Math.PI) * 180);
        },
        __class__: zh,
      });
      var qa = function (a, b, d, f, g, k) {
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = 1);
        null == d && (d = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = d;
        this.d = f;
        this.tx = g;
        this.ty = k;
      };
      h['openfl.geom.Matrix'] = qa;
      qa.__name__ = 'openfl.geom.Matrix';
      qa.prototype = {
        clone: function () {
          return new qa(this.a, this.b, this.c, this.d, this.tx, this.ty);
        },
        concat: function (a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty * a.d + a.ty;
          this.tx = b;
        },
        copyFrom: function (a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty;
        },
        createGradientBox: function (a, b, d, f, g) {
          null == g && (g = 0);
          null == f && (f = 0);
          null == d && (d = 0);
          this.a = a / 1638.4;
          this.d = b / 1638.4;
          if (0 != d) {
            var k = Math.cos(d);
            d = Math.sin(d);
            this.b = d * this.d;
            this.c = -d * this.a;
            this.a *= k;
            this.d *= k;
          } else this.c = this.b = 0;
          this.tx = f + a / 2;
          this.ty = g + b / 2;
        },
        equals: function (a) {
          return null != a &&
            this.tx == a.tx &&
            this.ty == a.ty &&
            this.a == a.a &&
            this.b == a.b &&
            this.c == a.c
            ? this.d == a.d
            : !1;
        },
        identity: function () {
          this.a = 1;
          this.c = this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0;
        },
        invert: function () {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a)
            ((this.a = this.b = this.c = this.d = 0),
              (this.tx = -this.tx),
              (this.ty = -this.ty));
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a;
          }
          return this;
        },
        scale: function (a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b;
        },
        setTo: function (a, b, d, f, g, k) {
          this.a = a;
          this.b = b;
          this.c = d;
          this.d = f;
          this.tx = g;
          this.ty = k;
        },
        transformPoint: function (a) {
          return new I(
            a.x * this.a + a.y * this.c + this.tx,
            a.x * this.b + a.y * this.d + this.ty,
          );
        },
        translate: function (a, b) {
          this.tx += a;
          this.ty += b;
        },
        __class__: qa,
      };
      var Ib = function (a, b, d, f, g, k, l, u) {
        null == u && (u = 0);
        null == l && (l = 0);
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = 1);
        null == d && (d = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.redMultiplier = a;
        this.greenMultiplier = b;
        this.blueMultiplier = d;
        this.alphaMultiplier = f;
        this.redOffset = g;
        this.greenOffset = k;
        this.blueOffset = l;
        this.alphaOffset = u;
      };
      h['openfl.geom.ColorTransform'] = Ib;
      Ib.__name__ = 'openfl.geom.ColorTransform';
      Ib.__limeColorMatrix = null;
      Ib.prototype = {
        __clone: function () {
          return new Ib(
            this.redMultiplier,
            this.greenMultiplier,
            this.blueMultiplier,
            this.alphaMultiplier,
            this.redOffset,
            this.greenOffset,
            this.blueOffset,
            this.alphaOffset,
          );
        },
        __copyFrom: function (a) {
          this.redMultiplier = a.redMultiplier;
          this.greenMultiplier = a.greenMultiplier;
          this.blueMultiplier = a.blueMultiplier;
          this.alphaMultiplier = a.alphaMultiplier;
          this.redOffset = a.redOffset;
          this.greenOffset = a.greenOffset;
          this.blueOffset = a.blueOffset;
          this.alphaOffset = a.alphaOffset;
        },
        __combine: function (a) {
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *= a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier;
          this.redOffset += a.redOffset;
          this.greenOffset += a.greenOffset;
          this.blueOffset += a.blueOffset;
          this.alphaOffset += a.alphaOffset;
        },
        __identity: function () {
          this.alphaMultiplier =
            this.blueMultiplier =
            this.greenMultiplier =
            this.redMultiplier =
              1;
          this.alphaOffset =
            this.blueOffset =
            this.greenOffset =
            this.redOffset =
              0;
        },
        __invert: function () {
          this.redMultiplier =
            0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
          this.greenMultiplier =
            0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
          this.blueMultiplier =
            0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
          this.alphaMultiplier =
            0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
          this.redOffset = -this.redOffset;
          this.greenOffset = -this.greenOffset;
          this.blueOffset = -this.blueOffset;
          this.alphaOffset = -this.alphaOffset;
        },
        __equals: function (a, b) {
          return null == a ||
            this.redMultiplier != a.redMultiplier ||
            this.greenMultiplier != a.greenMultiplier ||
            this.blueMultiplier != a.blueMultiplier ||
            (!b && this.alphaMultiplier != a.alphaMultiplier) ||
            this.redOffset != a.redOffset ||
            this.greenOffset != a.greenOffset ||
            this.blueOffset != a.blueOffset
            ? !1
            : this.alphaOffset == a.alphaOffset;
        },
        __isDefault: function (a) {
          return a
            ? 1 == this.redMultiplier &&
              1 == this.greenMultiplier &&
              1 == this.blueMultiplier &&
              0 == this.redOffset &&
              0 == this.greenOffset &&
              0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1
            : 1 == this.redMultiplier &&
                1 == this.greenMultiplier &&
                1 == this.blueMultiplier &&
                1 == this.alphaMultiplier &&
                0 == this.redOffset &&
                0 == this.greenOffset &&
                0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1;
        },
        __setArrays: function (a, b) {
          a[0] = this.redMultiplier;
          a[1] = this.greenMultiplier;
          a[2] = this.blueMultiplier;
          a[3] = this.alphaMultiplier;
          b[0] = this.redOffset;
          b[1] = this.greenOffset;
          b[2] = this.blueOffset;
          b[3] = this.alphaOffset;
        },
        __toLimeColorMatrix: function () {
          null == Ib.__limeColorMatrix &&
            (Ib.__limeColorMatrix = new Float32Array(20));
          Ib.__limeColorMatrix[0] = this.redMultiplier;
          Ib.__limeColorMatrix[4] = this.redOffset / 255;
          Ib.__limeColorMatrix[6] = this.greenMultiplier;
          Ib.__limeColorMatrix[9] = this.greenOffset / 255;
          Ib.__limeColorMatrix[12] = this.blueMultiplier;
          Ib.__limeColorMatrix[14] = this.blueOffset / 255;
          Ib.__limeColorMatrix[18] = this.alphaMultiplier;
          Ib.__limeColorMatrix[19] = this.alphaOffset / 255;
          return Ib.__limeColorMatrix;
        },
        __class__: Ib,
      };
      var Vf = function () {};
      h['com.watabou.dwellings.model.rooms.Generic'] = Vf;
      Vf.__name__ = 'com.watabou.dwellings.model.rooms.Generic';
      Vf.chamber = function () {
        return new aa('room', null);
      };
      Vf.corridor = function () {
        var a = new aa('corridor', null);
        a.fill = function (a) {};
        return a;
      };
      Vf.stairhall = function () {
        var a = new aa('stairhall', null);
        a.short = 'SH';
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.3, 1, 3, 0.8, 1, 0.8, 0.1);
        };
        return a;
      };
      var Wf = function () {};
      h['com.watabou.dwellings.model.rooms.Gallery'] = Wf;
      Wf.__name__ = 'com.watabou.dwellings.model.rooms.Gallery';
      Wf.proto = function () {
        var a = new aa('gallery', Wf.validate);
        a.fill = Wf.populate;
        return a;
      };
      Wf.validate = function (a) {
        return 6 > a.get_size() || 1 > a.narrow.length / a.get_size() ? !1 : !0;
      };
      Wf.populate = function (a) {
        var b = a.props.available();
        null != b &&
          ((b = new Xf(new I(b.j + 0.5, b.i + 0.5))), a.props.add(b));
      };
      var Xf = function (a) {
        ba.call(this);
        this.pos = a;
      };
      h['com.watabou.dwellings.model.props.Statue'] = Xf;
      Xf.__name__ = 'com.watabou.dwellings.model.props.Statue';
      Xf.__super__ = Ud;
      Xf.prototype = w(Ud.prototype, {
        update: function () {
          var a = this.get_graphics();
          a.clear();
          a.lineStyle(Q.strokeNormal, Q.colorInk);
          a.beginFill(Q.colorProps);
          a.drawCircle(0, 0, 0.2);
          a.endFill();
          for (var b = 0.2 - Q.strokeNormal / 2, d = [], f = 0; 10 > f; ) {
            var g = f++;
            d.push(
              I.polar(
                b * (0 == (g & 1) ? 1 : 0.4),
                -Math.PI / 2 + (2 * Math.PI * g) / 10,
              ),
            );
          }
          a.beginFill(Q.colorInk);
          Ra.drawPolygon(a, d);
          this.set_x(this.pos.x);
          this.set_y(this.pos.y);
        },
        __class__: Xf,
      });
      var Ah = function () {};
      h['com.watabou.dwellings.model.rooms.Greenhouse'] = Ah;
      Ah.__name__ = 'com.watabou.dwellings.model.rooms.Greenhouse';
      Ah.proto = function () {
        var a = new aa('greenhouse', Ah.validate);
        a.windows = aa.winRatio(1);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.25, 0.2, 10, 1, 0, 0, 10);
        };
        return a;
      };
      Ah.validate = function (a) {
        return !aa.topFloor(a) ||
          5 > a.get_size() ||
          9 < a.get_size() ||
          0.5 < a.narrow.length / a.get_size() ||
          2 < a.countDoors()
          ? !1
          : !0;
      };
      var Bh = function () {};
      h['com.watabou.dwellings.model.rooms.Hall'] = Bh;
      Bh.__name__ = 'com.watabou.dwellings.model.rooms.Hall';
      Bh.proto = function () {
        return new aa('hall', Bh.validate);
      };
      Bh.validate = function (a) {
        return 2 > a.get_size() ||
          8 < a.get_size() ||
          2 > a.countDoors() ||
          !a.hasExit()
          ? !1
          : !0;
      };
      var Ch = function () {};
      h['com.watabou.dwellings.model.rooms.Kitchen'] = Ch;
      Ch.__name__ = 'com.watabou.dwellings.model.rooms.Kitchen';
      Ch.proto = function () {
        var a = new aa('kitchen', Ch.validate);
        a.doors = aa.doorsFixed(od.REGULAR);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.4, 0.5, 3, 0.8, 1, 0.8, 1);
        };
        return a;
      };
      Ch.validate = function (a) {
        return 0 != a.plan.getFloor() ||
          4 > a.get_size() ||
          6 < a.get_size() ||
          0.5 < a.narrow.length / a.get_size() ||
          2 < a.countDoors()
          ? !1
          : !0;
      };
      var nl = function () {};
      h['com.watabou.dwellings.model.rooms.Laboratory'] = nl;
      nl.__name__ = 'com.watabou.dwellings.model.rooms.Laboratory';
      nl.proto = function () {
        var a = new aa('laboratory', aa.checkBasic(4, 6, 0.3, 2));
        a.doors = aa.doorsFixed(od.REGULAR);
        return a;
      };
      var Dh = function () {};
      h['com.watabou.dwellings.model.rooms.Library'] = Dh;
      Dh.__name__ = 'com.watabou.dwellings.model.rooms.Library';
      Dh.proto = function () {
        var a = new aa('library', Dh.validate);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.35, 1, 1, 0.5, 1, 1, 1);
        };
        return a;
      };
      Dh.validate = function (a) {
        return 4 > a.get_size() ||
          9 < a.get_size() ||
          0.8 < a.narrow.length / a.get_size() ||
          3 < a.countDoors() ||
          a.hasExit() ||
          aa.underground(a)
          ? !1
          : !0;
      };
      var Eh = function () {};
      h['com.watabou.dwellings.model.rooms.Lookout'] = Eh;
      Eh.__name__ = 'com.watabou.dwellings.model.rooms.Lookout';
      Eh.proto = function () {
        var a = new aa('lookout', Eh.validate);
        a.windows = aa.winRatio(1);
        return a;
      };
      Eh.validate = function (a) {
        if (
          2 > a.plan.house.floors.length ||
          !aa.topFloor(a) ||
          9 < a.get_size()
        )
          return !1;
        var b = a.contour.length;
        return 0.5 > la.intersect(a.contour, a.plan.contour).length / b
          ? !1
          : !0;
      };
      var Fh = function () {};
      h['com.watabou.dwellings.model.rooms.Observatory'] = Fh;
      Fh.__name__ = 'com.watabou.dwellings.model.rooms.Observatory';
      Fh.proto = function () {
        var a = new aa('observatory', Fh.validate);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.5, 0, 10, 0.9, 1, 0.4, 0.2);
        };
        return a;
      };
      Fh.validate = function (a) {
        return !aa.topFloor(a) ||
          4 > a.get_size() ||
          9 < a.get_size() ||
          0.2 < a.narrow.length / a.get_size() ||
          2 < a.countDoors()
          ? !1
          : !0;
      };
      var Yf = function () {};
      h['com.watabou.dwellings.model.rooms.Passage'] = Yf;
      Yf.__name__ = 'com.watabou.dwellings.model.rooms.Passage';
      Yf.proto = function () {
        var a = new aa('secret passage', Yf.validate);
        a.windows = aa.winFixed(0);
        a.fill = Yf.populate;
        return a;
      };
      Yf.validate = function (a) {
        return 3 > a.get_size() ||
          1 > a.narrow.length / a.get_size() ||
          2 > a.countDoors() ||
          a.hasExit() ||
          (0 != a.plan.getFloor() && a.hasSpiral())
          ? !1
          : !0;
      };
      Yf.populate = function (a) {
        for (
          var b = a.plan, d = b.grid, f = [], g = 0, k = b.stairs;
          g < k.length;

        ) {
          var l = k[g];
          ++g;
          f.push(l.cell);
        }
        g = f;
        k = b.graph;
        var u = b.findStart();
        l = 65535;
        f = null;
        b = k.findNode(null != u ? u : b.rooms[0]);
        u = a.doors;
        for (var p = u.keys(); p.hasNext(); ) {
          var h = p.next();
          u.get(h);
          var r = k.findNode(h);
          r = k.aStar(b, r);
          if (null == r) {
            Nb.trace('One of the room is not connected?!!!', {
              fileName: 'Source/com/watabou/dwellings/model/rooms/Passage.hx',
              lineNumber: 47,
              className: 'com.watabou.dwellings.model.rooms.Passage',
              methodName: 'populate',
            });
            return;
          }
          r = r.length;
          l > r && ((l = r), (f = h));
        }
        k = f.contour;
        l = k.length;
        b = f.doors.h[a.__id__];
        u = f == b.room1 ? b.edge1 : f == b.room2 ? b.edge2 : null;
        h = p = k.indexOf(u);
        for (f = []; ; )
          if (
            ((h = (h + l - 1) % l),
            (r = k[h]),
            r.dir == u.dir && -1 == g.indexOf(d.edge2cell(r)))
          )
            f.push(r);
          else break;
        b = f;
        h = p;
        for (f = []; ; )
          if (
            ((h = (h + 1) % l),
            (r = k[h]),
            r.dir == u.dir && -1 == g.indexOf(d.edge2cell(r)))
          )
            f.push(r);
          else break;
        d = f;
        for (g = [u]; 3 > g.length && 0 < b.length + d.length; )
          (0 < b.length && g.unshift(b.shift()),
            0 < d.length && g.push(d.shift()));
        d = new Gh(g[0].a, g[g.length - 1].b);
        a.props.add(d);
      };
      var Gh = function (a, b) {
        ba.call(this);
        this.a = a;
        this.b = b;
      };
      h['com.watabou.dwellings.model.props.Curtain'] = Gh;
      Gh.__name__ = 'com.watabou.dwellings.model.props.Curtain';
      Gh.__super__ = Ud;
      Gh.prototype = w(Ud.prototype, {
        update: function () {
          var a = this.a,
            b = new I(a.j, a.i);
          a = this.b;
          a = new I(a.j, a.i);
          var d = pb.proto.innerTh / 2 + 0.1,
            f = a.subtract(b);
          f.normalize(d);
          b.x += f.x;
          b.y += f.y;
          a.x -= f.x;
          a.y -= f.y;
          var g = new I(b.y - a.y, a.x - b.x);
          g.normalize(d);
          b.x += g.x;
          b.y += g.y;
          a.x += g.x;
          a.y += g.y;
          var k = I.distance(b, a);
          d = this.get_graphics();
          d.clear();
          var l = Math.round(k / 0.1);
          k /= l;
          g.normalize(k / 4);
          f.normalize(k / 8);
          k = [];
          for (var u = 0, p = l + 1; u < p; ) {
            var h = u++,
              r = Ub.lerp(b, a, h / l);
            h = 0 == (h & 1) ? 1 : -1;
            var n = new I(r.x + g.x * h, r.y + g.y * h);
            k.push(new I(n.x + -1 * f.x, n.y + -1 * f.y));
            h = -h;
            r = new I(r.x + g.x * h, r.y + g.y * h);
            k.push(new I(r.x + f.x, r.y + f.y));
          }
          d.lineStyle(Q.strokeNormal, Q.colorInk);
          Ra.drawPolyline(d, Hh.render(k, !1, 2));
        },
        __class__: Gh,
      });
      var Ih = function () {};
      h['com.watabou.dwellings.model.rooms.LivingRoom'] = Ih;
      Ih.__name__ = 'com.watabou.dwellings.model.rooms.LivingRoom';
      Ih.proto = function () {
        var a = new aa('living room', Ih.validate);
        a.windows = aa.winRatio(0.4);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.5, 0.4, 2, 0.9, 0.2, 0.7, 0.3);
        };
        return a;
      };
      Ih.validate = function (a) {
        return 5 > a.get_size() ||
          0.5 < a.narrow.length / a.get_size() ||
          aa.underground(a)
          ? !1
          : !0;
      };
      var Jh = function () {};
      h['com.watabou.dwellings.model.rooms.Study'] = Jh;
      Jh.__name__ = 'com.watabou.dwellings.model.rooms.Study';
      Jh.proto = function () {
        var a = new aa('study', Jh.validate);
        a.doors = aa.doorsFixed(od.REGULAR);
        return a;
      };
      Jh.validate = function (a) {
        return !aa.aboveGround(a) ||
          4 > a.get_size() ||
          6 < a.get_size() ||
          0.5 < a.narrow.length / a.get_size() ||
          1 < a.countDoors()
          ? !1
          : !0;
      };
      var ol = function () {};
      h['com.watabou.dwellings.model.rooms.Workshop'] = ol;
      ol.__name__ = 'com.watabou.dwellings.model.rooms.Workshop';
      ol.proto = function () {
        var a = new aa('workshop', aa.checkBasic(4, 6, 0.3, 2));
        a.doors = aa.doorsFixed(od.REGULAR);
        a.fill = function (a) {
          a.clutter = new vd(a);
          a.clutter.fill(0.35, 1, 3, 0.8, 1, 0.8, 1);
        };
        return a;
      };
      var Zf = function () {};
      h['com.watabou.dwellings.model.rooms.Studio'] = Zf;
      Zf.__name__ = 'com.watabou.dwellings.model.rooms.Studio';
      Zf.proto = function () {
        var a = new aa('studio', Zf.validate);
        a.fill = Zf.populate;
        return a;
      };
      Zf.validate = function (a) {
        return 6 > a.get_size() ||
          9 < a.get_size() ||
          0.4 < a.narrow.length / a.get_size() ||
          2 < a.countDoors() ||
          a.hasExit() ||
          aa.underground(a)
          ? !1
          : !0;
      };
      Zf.populate = function (a) {
        var b = a.props.available();
        null != b &&
          ((b = new Xf(new I(b.j + 0.5, b.i + 0.5))), a.props.add(b));
      };
      var Kh = function () {};
      h['com.watabou.dwellings.model.rooms.Trophy'] = Kh;
      Kh.__name__ = 'com.watabou.dwellings.model.rooms.Trophy';
      Kh.proto = function () {
        var a = new aa('trophy room', aa.checkBasic(4, 9, 0.5, 2));
        a.fill = Kh.populate;
        return a;
      };
      Kh.populate = function (a) {
        var b = a.props.available();
        null != b &&
          ((b = new Xf(new I(b.j + 0.5, b.i + 0.5))), a.props.add(b));
      };
      var Lh = function () {};
      h['com.watabou.dwellings.model.rooms.Vault'] = Lh;
      Lh.__name__ = 'com.watabou.dwellings.model.rooms.Vault';
      Lh.proto = function () {
        var a = new aa('vault', Lh.validate);
        a.windows = aa.winFixed(0);
        a.doors = aa.doorsFixed(od.REGULAR);
        return a;
      };
      Lh.validate = function (a) {
        return 4 > a.get_size() ||
          0.3 < a.narrow.length / a.get_size() ||
          1 < a.countDoors() ||
          a.plan.getFloor() != (null == a.plan.house.basement ? 0 : -1)
          ? !1
          : !0;
      };
      var Mh = function () {};
      h['com.watabou.dwellings.model.rooms.Storage'] = Mh;
      Mh.__name__ = 'com.watabou.dwellings.model.rooms.Storage';
      Mh.proto = function () {
        var a = new aa('storage', Mh.validate);
        a.windows = aa.winFixed(0);
        a.doors = aa.doorsFixed(od.REGULAR);
        return a;
      };
      Mh.validate = function (a) {
        return 2 > a.get_size() ||
          5 < a.get_size() ||
          1 < a.countDoors() ||
          a.hasExit()
          ? !1
          : !0;
      };
      var aa = function (a, b) {
        this.name = a;
        this.validate = b;
      };
      h['com.watabou.dwellings.model.RoomType'] = aa;
      aa.__name__ = 'com.watabou.dwellings.model.RoomType';
      aa.aboveGround = function (a) {
        var b = a.plan.getFloor();
        return 0 >= b ? (0 == b ? 1 == a.plan.house.floors.length : !1) : !0;
      };
      aa.topFloor = function (a) {
        return a.plan.getFloor() == a.plan.house.floors.length - 1;
      };
      aa.underground = function (a) {
        return 0 > a.plan.getFloor();
      };
      aa.singular = function (a) {
        return 1 == a.plan.rooms.length;
      };
      aa.checkBasic = function (a, b, d, f, g) {
        null == g && (g = !1);
        null == f && (f = 1);
        return function (g) {
          return g.get_size() < a ||
            g.get_size() > b ||
            g.narrow.length / g.get_size() > d ||
            g.countDoors() > f
            ? !1
            : !0;
        };
      };
      aa.doorsFixed = function (a) {
        return function (b) {
          for (b = b.doors.iterator(); b.hasNext(); ) b.next().type = a;
        };
      };
      aa.winFixed = function (a) {
        return function (b) {
          b.spawnWindows(a);
        };
      };
      aa.winRatio = function (a) {
        return function (b) {
          b.spawnWindows(Math.round(b.contour.length * a));
        };
      };
      aa.assign = function (a) {
        for (
          var b = aa.gothicSet ? aa.gothic(a) : aa.pickRoomTypes(a),
            d = b[0],
            f = b[1],
            g = 0;
          g < b.length;

        ) {
          var k = b[g];
          ++g;
          for (var l = [], u = 0; u < k.length; ) {
            var p = k[u];
            ++u;
            l.push(p.name);
          }
          Nb.trace(l, {
            fileName: 'Source/com/watabou/dwellings/model/RoomType.hx',
            lineNumber: 118,
            className: 'com.watabou.dwellings.model.RoomType',
            methodName: 'assign',
          });
        }
        var h = function (a, b) {
          for (var d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            f.reset();
          }
          for (; 0 < b.length && 0 < a.length; ) {
            var g = la.pick(b);
            for (d = 0; d < a.length; )
              if (((f = a[d]), ++d, null == f.type && g.validate(f))) {
                f.type = g;
                M.remove(a, f);
                break;
              }
          }
        };
        b = function (a, b) {
          for (
            var d = a.length + 1, f = -1, g = 0, k = a.length * b.length;
            g < k;

          ) {
            g++;
            var l = t.seed,
              n = la.shuffle(a);
            h(n, b.slice());
            if (d > n.length && ((d = n.length), (f = l), 0 == d)) break;
          }
          t.reset(f);
          h(la.shuffle(a), b);
        };
        b(a.rooms, d);
        g = [];
        l = 0;
        for (u = a.rooms; l < u.length; )
          ((d = u[l]), ++l, null == d.type && g.push(d));
        b(g, f);
        g = 0;
        for (l = a.rooms; g < l.length; )
          ((f = l[g]), ++g, null == f.type && aa.assignGeneric(f));
        g = 0;
        for (l = a.rooms; g < l.length; ) ((f = l[g]), ++g, f.fill());
      };
      aa.assignGeneric = function (a) {
        for (
          var b = a.area.length, d = 0, f = 0, g = a.getStairs();
          f < g.length;

        ) {
          var k = g[f];
          ++f;
          null != k.dir && ++d;
        }
        (0 < d && 6 >= b) || 1 < d
          ? (a.type = aa.stairhall)
          : 2 < b &&
            (a.narrow.length == a.area.length && 1 < a.countDoors()
              ? (a.type = aa.corridor)
              : (a.type = aa.generic));
      };
      aa.pickRoomTypes = function (a) {
        var b =
            -1 != a.bp.tags.indexOf('generic')
              ? []
              : la.subset(
                  aa.special,
                  Math.floor(
                    1 +
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) *
                        2,
                  ),
                ),
          d = [aa.salon, aa.bathroom, aa.bedroom];
        0 < b.length && d.push(b[0]);
        for (
          var f = [aa.kitchen, aa.storage, aa.hall, aa.gallery],
            g = 1,
            k = b.length;
          g < k;

        ) {
          var l = g++;
          f.push(b[l]);
        }
        g = la.random([aa.study, aa.library, aa.workshop]);
        -1 == b.indexOf(g) && f.push(g);
        g = 1;
        for (k = a.floors.length; g < k; ) (g++, f.push(aa.bedroom));
        1 < a.floors.length && f.push(aa.bathroom);
        1 < a.floors.length && f.push(aa.attic);
        null != a.basement && f.push(aa.cellar);
        return [d, f];
      };
      aa.gothic = function (a) {
        a = $b.getText('gothic');
        var b = new fk().parse(a, null),
          d = b.rooms;
        a = Object.create(null);
        for (var f = N.fields(d), g = 0; g < f.length; ) {
          var k = f[g++],
            l = k;
          a[l] = Nh.from(l, d[k]);
        }
        d = b.primary;
        b = [];
        for (f = 0; f < d.length; ) ((g = d[f]), ++f, b.push(a[g]));
        d = b;
        b = [];
        f = Object.keys(a);
        g = f.length;
        for (k = 0; k < g; ) ((l = a[f[k++]]), b.push(l));
        a = la.difference(b, d);
        return [d, a];
      };
      aa.prototype = { __class__: aa };
      var Ma = function () {};
      h['com.watabou.dwellings.model.Settings'] = Ma;
      Ma.__name__ = 'com.watabou.dwellings.model.Settings';
      Ma.shape = null;
      Ma.nFloors = null;
      Ma.spiral = null;
      Ma.basement = null;
      Ma.process = function (a) {
        t.seed = (48271 * t.seed) % 2147483647 | 0;
        var b = Ea.fromCode(a.plan, a.width, a.height);
        null == b &&
          ((a.plan = null),
          (b = Ma.pick(a, Ma.SIZE)),
          (b = null != b ? b : Ma.randomSize()),
          (b = Ea.getShape(b, -1 != a.tags.indexOf('square'))));
        Ma.shape = b;
        Ma.nFloors =
          0 < a.nFloors ? a.nFloors : Ma.randNFloors(a, Ma.shape.area.length);
        switch (Ma.nFloors) {
          case 1:
            b = 0;
            break;
          case 2:
            b = 0.1;
            break;
          default:
            b = 0.3;
        }
        -1 == a.tags.indexOf('spiral')
          ? (null == b && (b = 0.5),
            (b = (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b))
          : (b = !0);
        Ma.spiral = b;
        -1 == a.tags.indexOf('basement')
          ? ((b = Ma.nFloors / (Ma.nFloors + 1)),
            null == b && (b = 0.5),
            (b = (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b))
          : (b = !0);
        Ma.basement = b;
      };
      Ma.resolve = function (a, b) {
        for (
          var d = [
              Ma.SIZE,
              Ma.HEIGHT,
              ['blank', 'transparent'],
              ['mechanical', 'organic'],
            ],
            f = 0;
          f < d.length;

        ) {
          var g = d[f];
          ++f;
          -1 != g.indexOf(b) && la.removeAll(a, la.difference(g, [b]));
        }
        null != b && a.push(b);
      };
      Ma.randomTags = function () {
        var a = [Ma.randomSize()],
          b = 0.1;
        null == b && (b = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push('square');
        b = 0.2;
        null == b && (b = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b &&
          (a.push(la.random(Ma.HEIGHT)),
          -1 != a.indexOf('tall')
            ? ((b = 0.5),
              null == b && (b = 0.5),
              (b =
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b))
            : (b = !1),
          b && a.push('slab'));
        0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 &&
          ((b = 0.6666666666666666),
          null == b && (b = 0.5),
          a.push(
            (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b
              ? 'organic'
              : 'mechanical',
          ));
        return a;
      };
      Ma.randomSize = function () {
        return la.random(['small', 'medium', 'medium', 'large']);
      };
      Ma.randNFloors = function (a, b) {
        b = Math.sqrt(b) - 1;
        a = Ma.pick(a, Ma.HEIGHT);
        a =
          'low' == a
            ? Math.round(
                b *
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
              )
            : 'tall' == a
              ? Math.round(
                  b *
                    (1 +
                      0.5 *
                        Math.abs(
                          ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                            (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                              2147483647 +
                            (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                              2147483647 +
                            (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                              2147483647) /
                            2 -
                            1,
                        )),
                )
              : Math.round(
                  b *
                    (((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      3),
                );
        return Lc.gatei(a, 1, 8);
      };
      Ma.getInfo = function (a) {
        switch (a) {
          case 'basement':
            return 'Basement.';
          case 'blank':
            return 'As few windows as possible.';
          case 'generic':
            return 'No special rooms.';
          case 'large':
            return 'Large ground floor.';
          case 'low':
            return 'Low number of floors.';
          case 'mechanical':
            return 'Inner walls bisect the outer shape.';
          case 'medium':
            return 'Medium-sized ground floor.';
          case 'organic':
            return 'Inner walls follow the outer shape.';
          case 'regular':
            return 'Strictly rectangular rooms.';
          case 'slab':
            return 'All floors have the same shape.';
          case 'small':
            return 'Small ground floor.';
          case 'spiral':
            return 'Spiral staircase instead of regular ones.';
          case 'square':
            return 'Rectangular ground plan.';
          case 'tall':
            return 'High number of floors.';
          case 'transparent':
            return 'As many windows as possible.';
          default:
            return 'No info.';
        }
      };
      Ma.pick = function (a, b) {
        return la.intersect(a.tags, b)[0];
      };
      var Tf = function (a, b, d) {
        this.plan = a;
        this.cell = b;
        this.dir = d;
        a.stairs.push(this);
      };
      h['com.watabou.dwellings.model.Staircase'] = Tf;
      Tf.__name__ = 'com.watabou.dwellings.model.Staircase';
      Tf.prototype = {
        link: function (a) {
          this.to = a;
          a.to = this;
        },
        isGoingUp: function () {
          return this.to.plan.getFloor() > this.plan.getFloor();
        },
        __class__: Tf,
      };
      var gk = function () {
        ba.call(this);
      };
      h['com.watabou.dwellings.model.props.Bed'] = gk;
      gk.__name__ = 'com.watabou.dwellings.model.props.Bed';
      gk.__super__ = Ud;
      gk.prototype = w(Ud.prototype, {
        update: function () {
          var a = this.get_graphics();
          a.clear();
          a.lineStyle(Q.strokeNormal, Q.colorInk);
          a.beginFill(Q.colorProps);
          a.drawRect(-0.4, -0.2, 0.8, 0.4);
          a.endFill();
          a.lineStyle(Q.strokeNormal, Q.colorInk);
          a.moveTo(0.2, -0.2);
          a.lineTo(0.2, 0.2);
          a.moveTo(0.15, -0.2);
          a.lineTo(0.2, 0.1);
          a.drawRect(0.2, -0.1, 0.15, 0.2);
        },
        __class__: gk,
      });
      var Sf = function (a, b, d) {
        null == d && (d = 1);
        this.pos = a;
        this.radius = b;
        this.power = d;
      };
      h['com.watabou.dwellings.model.props.Light'] = Sf;
      Sf.__name__ = 'com.watabou.dwellings.model.props.Light';
      Sf.onTheWall = function (a) {
        for (var b = a.plan, d = [], f = 0, g = a.contour; f < g.length; ) {
          var k = g[f];
          ++f;
          d.push(k.point(0));
        }
        k = d;
        d = [];
        for (f = 0; f < k.length; ) {
          var l = k[f];
          ++f;
          var u = 0;
          g = 0;
          for (var p = b.windows; g < p.length; ) {
            var h = p[g];
            ++g;
            if (-1 != a.contour.indexOf(h)) {
              var r = h.point();
              h = l.x - r.x;
              r = l.y - r.y;
              u += 1 / (h * h + r * r);
            }
          }
          for (g = a.doors.iterator(); g.hasNext(); )
            ((h = g.next().edge1.point()),
              (p = l.x - h.x),
              (h = l.y - h.y),
              (u += 1 / (p * p + h * h)));
          a.hasExit() && (u += 1 / I.distance(l, b.exit.point()));
          d.push(u);
        }
        b = d;
        l = la.min(b, function (a) {
          return a;
        });
        u = [];
        d = 0;
        for (f = k.length; d < f; ) ((g = d++), b[g] == l && u.push(k[g]));
        d = la.random(u);
        a = a.contour.length / 4;
        return new Sf(d, a, a / (1 + a));
      };
      Sf.prototype = { __class__: Sf };
      var ek = function (a) {
        this.set = [];
        this.room = a;
      };
      h['com.watabou.dwellings.model.props.PropSet'] = ek;
      ek.__name__ = 'com.watabou.dwellings.model.props.PropSet';
      ek.prototype = {
        clear: function () {
          this.set = [];
        },
        add: function (a) {
          this.set.push(a);
        },
        update: function () {
          for (var a = 0, b = this.set; a < b.length; ) {
            var d = b[a];
            ++a;
            d.update();
          }
        },
        available: function (a) {
          null == a && (a = !1);
          a = a ? this.wallCells() : this.room.area;
          var b = la.difference(
            la.difference(la.difference(a, this.doors()), this.stairs()),
            this.landings(),
          );
          a = [];
          for (var d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            a: {
              var g = f;
              if (-1 != this.room.narrow.indexOf(g))
                for (
                  var k = 0, l = this.room.plan.grid, u = 0, p = oa.CARDINAL;
                  u < p.length;

                ) {
                  var h = p[u];
                  ++u;
                  if (
                    -1 !=
                      this.room.area.indexOf(l.cell(g.i + h.di, g.j + h.dj)) &&
                    (++k, 2 <= k)
                  ) {
                    g = !1;
                    break a;
                  }
                }
              g = !0;
            }
            g && a.push(f);
          }
          b = a;
          return 0 < b.length ? la.random(b) : null;
        },
        wallCells: function () {
          for (
            var a = [], b = this.room.plan.grid, d = 0, f = this.room.contour;
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            la.add(a, b.edge2cell(g));
          }
          return a;
        },
        doors: function () {
          for (
            var a = this.room.plan.grid, b = [], d = this.room.doors.iterator();
            d.hasNext();

          ) {
            var f = d.next(),
              g = this.room;
            la.add(
              b,
              f.plan.grid.edge2cell(
                g == f.room1 ? f.edge1 : g == f.room2 ? f.edge2 : null,
              ),
            );
          }
          null != this.room.plan.exit &&
            la.add(b, a.edge2cell(this.room.plan.exit));
          -1 != this.room.contour.indexOf(this.room.plan.spiral) &&
            la.add(b, a.edge2cell(this.room.plan.spiral));
          return b;
        },
        stairs: function () {
          for (var a = [], b = 0, d = this.room.plan.stairs; b < d.length; ) {
            var f = d[b];
            ++b;
            a.push(f.cell);
          }
          return a;
        },
        landings: function () {
          for (
            var a = this.room.plan.grid,
              b = [],
              d = 0,
              f = this.room.plan.stairs;
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            if (null != g.dir) {
              var k = g.cell;
              g = g.dir.op;
              la.add(b, a.cell(k.i + g.di, k.j + g.dj));
            }
          }
          -1 != this.room.contour.indexOf(this.room.plan.spiral) &&
            la.add(b, a.edge2cell(this.room.plan.spiral));
          return b;
        },
        __class__: ek,
      };
      var Nh = function () {};
      h['com.watabou.dwellings.model.rooms.Loadable'] = Nh;
      Nh.__name__ = 'com.watabou.dwellings.model.rooms.Loadable';
      Nh.from = function (a, b) {
        var d = b.name;
        a = new aa(null != d ? d : a, Nh.getValidate(b));
        a.short = b['short'];
        d = b.windows;
        null != d && (a.windows = aa.winRatio(d));
        'regular' == b.doors && (a.doors = aa.doorsFixed(od.REGULAR));
        var f = b.fill;
        null != f &&
          (a.fill =
            '' == f
              ? function (a) {}
              : function (a) {
                  for (var b = [], d = 0, g = f.split(', '); d < g.length; ) {
                    var p = g[d];
                    ++d;
                    b.push(parseFloat(p));
                  }
                  p = b;
                  a.clutter = new vd(a);
                  a.clutter.fill(p[0], p[1], p[2] | 0, p[3], p[4], p[5], p[6]);
                });
        return a;
      };
      Nh.getValidate = function (a) {
        var b = a.minSize,
          d = a.maxSize,
          f = a.minNarr,
          g = a.maxNarr,
          k = a.floor,
          l = a.maxDoors,
          u = a.entrance,
          p = a.topFloor,
          h = a.groundFloor,
          r = a.basement,
          n = a.aboveGround,
          t = a.singular;
        return function (a) {
          if (
            (null != b && a.get_size() < b) ||
            (null != d && a.get_size() > d)
          )
            return !1;
          var Ql = a.narrow.length / a.get_size();
          return (null != f && Ql < f) ||
            (null != g && Ql > g) ||
            (null != k && a.plan.getFloor() != k) ||
            (null != l && a.countDoors() > l) ||
            (null != u && u != a.hasExit()) ||
            (null != p && p != aa.topFloor(a)) ||
            (null != h && h != a.plan.isGroundFloor()) ||
            (null != r && r != aa.underground(a)) ||
            (null != n && n != aa.aboveGround(a)) ||
            (null != t && t != aa.singular(a))
            ? !1
            : !0;
        };
      };
      var ub = function () {
        var a = this;
        Jb.call(this);
        this.house = Sc.inst;
        this.modeSelector = new Oh();
        this.modeSelector.update(ub.planView);
        this.modeSelector.mode.add(function (b) {
          a.switchView();
        });
        this.modeSelector.menu.add(m(this, this.onMenuButton));
        ta.layer.add(this.modeSelector);
        this.keyEvent.add(m(this, this.onKey));
      };
      h['com.watabou.dwellings.scenes.DwellingScene'] = ub;
      ub.__name__ = 'com.watabou.dwellings.scenes.DwellingScene';
      ub.getScene = function () {
        return ub.planView ? ed : Bc;
      };
      ub.__super__ = Jb;
      ub.prototype = w(Jb.prototype, {
        activate: function () {
          Jb.prototype.activate.call(this);
          this.stage.addEventListener('touchTap', m(this, this.onTap));
          this.stage.addEventListener('click', m(this, this.onClick));
          this.stage.addEventListener('rightClick', m(this, this.onRightClick));
        },
        deactivate: function () {
          Jb.prototype.deactivate.call(this);
          ta.layer.removeChild(this.modeSelector);
          this.stage.removeEventListener('touchTap', m(this, this.onTap));
          this.stage.removeEventListener('click', m(this, this.onClick));
          this.stage.removeEventListener(
            'rightClick',
            m(this, this.onRightClick),
          );
        },
        onTap: function (a) {
          ta.checkTarget(a.target) || this.reset();
        },
        onClick: function (a) {},
        onRightClick: function (a) {
          ta.checkTarget(a.target) || this.showContextMenu();
        },
        onMenuButton: function (a) {
          a = a.getBounds(ta.layer);
          this.showContextMenu(a.get_left(), a.get_bottom());
        },
        showContextMenu: function (a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          var d = this,
            f = new hc();
          f.addItem('Procgen Arcana', m(this, this.arcana));
          f.addSeparator();
          f.addItem('New house', function () {
            d.reset(Rd.random());
          });
          f.addItem('Parameters...', m(this, this.showParams));
          f.addSeparator();
          this.fillViewMenu(f);
          f.addSeparator();
          var g = new hc();
          this.fillExportMenu(g);
          0 < g.items.length && f.addSubmenu('Export', g);
          0 == a && 0 == b ? ta.showMenu(f) : ta.showMenuAt(f, a, b);
        },
        fillViewMenu: function (a) {
          a.addItem(
            'Fullscreen',
            m(this, this.toggleFullscreen),
            2 != this.stage.get_displayState(),
          );
        },
        fillExportMenu: function (a) {
          a.addItem('as PNG', m(this, this.exportAsPNG));
          a.addItem('as SVG', m(this, this.exportAsSVG));
        },
        onEsc: function () {
          ta.hideMenu() || Jb.prototype.onEsc.call(this);
        },
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 13:
                this.reset();
                break;
              case 32:
                ta.showToast(this.house.name);
                break;
              case 49:
                this.applyColorsPreset('natural');
                break;
              case 50:
                this.applyColorsPreset('wooden');
                break;
              case 51:
                this.applyColorsPreset('plain');
                break;
              case 52:
                this.applyColorsPreset('blueprint');
                break;
              case 53:
                this.applyColorsPreset('bw');
                break;
              case 9:
              case 84:
                this.showParams();
            }
        },
        reset: function (a) {
          this.house = Sc.reset(null != a ? a : Rd.random());
          ta.showToast(this.house.name);
        },
        switchView: function () {
          ub.planView = !ub.planView;
          this.switchBack();
        },
        switchToBlueprint: function () {
          db.switchScene(Ph);
        },
        switchBack: function () {
          db.switchScene(ub.getScene());
        },
        showParams: function () {
          var a = this;
          if (null == ta.findForm(ye)) {
            var b = new ye(this.house.bp, function (b, f) {
              b = new Rd(null, b, f);
              a.reset(b);
              return b.tags;
            });
            ta.showDialog(b).minimizable = !0;
          }
        },
        toggleFullscreen: function () {
          this.stage.set_displayState(
            2 == this.stage.get_displayState() ? 1 : 2,
          );
        },
        applyColors: function (a) {
          Q.setPalette(a, !0);
          cc.setUIColors(Q.colorPaper, Q.colorInk);
          this.modeSelector.update(ub.planView);
        },
        applyColorsPreset: function (a) {
          this.applyColors(Oc.fromAsset(a));
        },
        exportAsPNG: function () {},
        exportAsSVG: function () {},
        arcana: function () {
          var a = new Qh('https://watabou.github.io/');
          Ka.navigateToURL(a, 'arcana');
        },
        __class__: ub,
      });
      var Ph = function () {
        ub.call(this);
        for (var a = [], b = 0, d = Ma.MAX_SIZE; b < d; ) {
          b++;
          for (var f = [], g = 0, k = Ma.MAX_SIZE; g < k; ) (g++, f.push(!1));
          a.push(f);
        }
        this.map = a;
        b = Sc.inst.floors[0];
        d = (Ma.MAX_SIZE - b.grid.w) >> 1;
        f = (Ma.MAX_SIZE - b.grid.h) >> 1;
        a = 0;
        for (b = b.area; a < b.length; )
          ((g = b[a]), ++a, (this.map[g.i + f][g.j + d] = !0));
        this.view = new Rh(Ma.MAX_SIZE, Ma.MAX_SIZE);
        this.view.update(this.map);
        this.addChild(this.view);
      };
      h['com.watabou.dwellings.scenes.BlueprintScene'] = Ph;
      Ph.__name__ = 'com.watabou.dwellings.scenes.BlueprintScene';
      Ph.__super__ = ub;
      Ph.prototype = w(ub.prototype, {
        activate: function () {
          ub.prototype.activate.call(this);
          this.stage.addEventListener('mouseDown', m(this, this.onMouseDown));
        },
        deactivate: function () {
          ub.prototype.deactivate.call(this);
          this.stage.removeEventListener(
            'mouseDown',
            m(this, this.onMouseDown),
          );
        },
        layout: function () {
          var a = 0.09 * Math.min(this.rWidth, this.rHeight);
          this.view.set_scaleX(this.view.set_scaleY(a));
          this.view.set_x((this.rWidth - a * Ma.MAX_SIZE) / 2);
          this.view.set_y((this.rHeight - a * Ma.MAX_SIZE) / 2);
        },
        onEsc: function () {
          this.discard();
        },
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 8:
                this.clear();
                break;
              case 13:
                this.submit();
                break;
              case 66:
                this.discard();
                break;
              case 82:
                this.random();
                break;
              case 88:
                this.box();
                break;
              default:
                ub.prototype.onKey.call(this, a, b);
            }
        },
        fillViewMenu: function (a) {
          a.addItem('Random', m(this, this.random));
          a.addItem('Box', m(this, this.box));
          a.addItem('Clear', m(this, this.clear));
          a.addSeparator();
          a.addItem('Submit', m(this, this.submit));
          a.addItem('Discard', m(this, this.discard));
          a.addSeparator();
          ub.prototype.fillViewMenu.call(this, a);
        },
        submit: function () {
          this.reset(Sc.inst.bp);
        },
        discard: function () {
          this.switchBack();
        },
        onMouseDown: function (a) {
          if (!ta.checkTarget(a.target)) {
            a = Math.floor(this.view.get_mouseY());
            var b = Math.floor(this.view.get_mouseX());
            0 <= a &&
              0 <= b &&
              a < Ma.MAX_SIZE &&
              b < Ma.MAX_SIZE &&
              ((this.paint = !this.map[a][b]),
              (this.map[a][b] = this.paint),
              this.view.update(this.map),
              this.stage.addEventListener(
                'mouseMove',
                m(this, this.onMouseMove),
              ),
              this.stage.addEventListener('mouseUp', m(this, this.onMouseUp)));
          }
        },
        onMouseUp: function (a) {
          this.stage.removeEventListener(
            'mouseMove',
            m(this, this.onMouseMove),
          );
          this.stage.removeEventListener('mouseUp', m(this, this.onMouseUp));
        },
        onMouseMove: function (a) {
          a = Math.floor(this.view.get_mouseY());
          var b = Math.floor(this.view.get_mouseX());
          0 <= a &&
            0 <= b &&
            a < Ma.MAX_SIZE &&
            b < Ma.MAX_SIZE &&
            this.map[a][b] != this.paint &&
            ((this.map[a][b] = this.paint), this.view.update(this.map));
        },
        applyColors: function (a) {
          ub.prototype.applyColors.call(this, a);
          this.stage.set_color(Q.colorPaper);
          this.view.update(this.map);
          this.view.drawGrid();
        },
        clear: function () {
          this.erase();
          this.view.update(this.map);
        },
        random: function () {
          this.erase();
          var a = Ta.create(
              Math.round(
                2 -
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
              ),
              Math.round(
                2 +
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
              ),
            ),
            b = a[0],
            d = b.x,
            f = b.x,
            g = b.y;
          b = b.y;
          for (var k = 0; k < a.length; ) {
            var l = a[k];
            ++k;
            l.x < d ? (d = l.x) : l.x > f && (f = l.x);
            l.y < g ? (g = l.y) : l.y > b && (b = l.y);
          }
          k = (Ma.MAX_SIZE - f - d - 1) / 2;
          l = k - (k | 0);
          null == l && (l = 0.5);
          d =
            (k | 0) +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < l
              ? 1
              : 0);
          k = (Ma.MAX_SIZE - b - g - 1) / 2;
          l = k - (k | 0);
          null == l && (l = 0.5);
          g =
            (k | 0) +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < l
              ? 1
              : 0);
          for (k = 0; k < a.length; )
            ((l = a[k]), ++k, (this.map[g + l.y][d + l.x] = !0));
          this.view.update(this.map);
        },
        box: function () {
          this.erase();
          var a =
              10 +
              25 *
                Math.pow(
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647,
                  2,
                ),
            b = Math.pow(
              2,
              2 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) -
                1,
            ),
            d = Math.sqrt(a * b),
            f = d - (d | 0);
          null == f && (f = 0.5);
          b =
            (d | 0) +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < f
              ? 1
              : 0);
          d = a / b;
          f = d - (d | 0);
          null == f && (f = 0.5);
          a =
            (d | 0) +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < f
              ? 1
              : 0);
          d = (Ma.MAX_SIZE - b) / 2;
          f = d - (d | 0);
          null == f && (f = 0.5);
          var g =
            (d | 0) +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < f
              ? 1
              : 0);
          d = (Ma.MAX_SIZE - a) / 2;
          f = d - (d | 0);
          null == f && (f = 0.5);
          d =
            (d | 0) +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < f
              ? 1
              : 0);
          for (f = 0; f < a; )
            for (var k = f++, l = 0, u = b; l < u; ) {
              var p = l++;
              this.map[k + d][p + g] = !0;
            }
          this.view.update(this.map);
        },
        reset: function (a) {
          a.width = a.height = Ma.MAX_SIZE;
          a.plan = Ea.encodeBitmap(this.view.getShape());
          ub.prototype.reset.call(this, a);
          this.switchBack();
        },
        erase: function () {
          for (var a = 0, b = Ma.MAX_SIZE; a < b; )
            for (var d = a++, f = 0, g = Ma.MAX_SIZE; f < g; ) {
              var k = f++;
              this.map[d][k] = !1;
            }
        },
        fillExportMenu: function (a) {},
        __class__: Ph,
      });
      var Bc = function () {
        var a = this;
        Bc.dark = Wa.get('colorize', !1);
        Bc.dark ? L.setDark() : L.setInherited();
        cc.setUIColors(L.colorBg, L.colorInk);
        ub.call(this);
        this.sideSelector = new Sh();
        this.sideSelector.click.add(function (b) {
          a.setDir(b);
        });
        ta.layer.addChildAt(this.sideSelector, 0);
        this.sideSelector.update(this.house);
        this.view = new ie();
        this.addChild(this.view);
        this.updateView();
        this.setDir(Bc.curDir);
      };
      h['com.watabou.dwellings.scenes.ElevationScene'] = Bc;
      Bc.__name__ = 'com.watabou.dwellings.scenes.ElevationScene';
      Bc.curDir = null;
      Bc.__super__ = ub;
      Bc.prototype = w(ub.prototype, {
        activate: function () {
          ub.prototype.activate.call(this);
          this.stage.set_color(L.colorBg);
        },
        deactivate: function () {
          ub.prototype.deactivate.call(this);
          ta.layer.removeChild(this.sideSelector);
        },
        layout: function () {
          var a = Math.min(this.rWidth, this.rHeight) / 640;
          this.view.set_scaleX(this.view.set_scaleY(a));
          var b =
            this.house.floors.length * x.floorHeight +
            x.baseHeight +
            x.roofSlope * x.columnWidth;
          this.view.set_x(
            (this.rWidth - this.elevation.width * x.columnWidth * a) / 2,
          );
          this.view.set_y((this.rHeight + b * a) / 2);
          this.sideSelector.set_x(this.rWidth - this.sideSelector.get_width());
          this.sideSelector.set_y(
            this.rHeight - this.sideSelector.get_height(),
          );
        },
        onEsc: function () {
          this.switchView();
        },
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 37:
                this.setDir(Bc.curDir.cw);
                break;
              case 39:
                this.setDir(Bc.curDir.ccw);
                break;
              case 66:
                this.switchToBlueprint();
                break;
              case 68:
                this.toggleColors();
                break;
              case 69:
                this.switchView();
                break;
              case 70:
                this.toggleFading();
                break;
              case 82:
                this.rerollDimensions();
                break;
              default:
                ub.prototype.onKey.call(this, a, b);
            }
        },
        fillViewMenu: function (a) {
          a.addItem('Floor plans', m(this, this.switchView));
          a.addItem('Blueprint', m(this, this.switchToBlueprint));
          a.addSeparator();
          a.addItem('Reroll', m(this, this.rerollDimensions));
          a.addItem('Fortified', m(this, this.toggleFortified)).setCheck(
            x.fortified,
          );
          a.addItem('Dark', m(this, this.toggleColors)).setCheck(
            L.mode == ze.DARK,
          );
          a.addItem('Fade', m(this, this.toggleFading)).setCheck(ie.useFading);
          ub.prototype.fillViewMenu.call(this, a);
        },
        setDir: function (a) {
          this.sideSelector.select((Bc.curDir = a));
          this.updateView();
        },
        updateView: function () {
          this.elevation = this.house.getElevations().h[Bc.curDir.__id__];
          this.view.update(this.elevation);
          this.layout();
        },
        rerollDimensions: function () {
          x.random();
          this.updateView();
        },
        toggleFortified: function () {
          x.fortified = !x.fortified;
          x.random();
          this.updateView();
        },
        toggleColors: function () {
          Wa.set('colorize', (Bc.dark = !Bc.dark));
          Bc.dark ? L.setDark() : L.setInherited();
          cc.setUIColors(L.colorBg, L.colorInk);
          this.modeSelector.update(ub.planView);
          this.sideSelector.select(Bc.curDir);
          this.stage.set_color(L.colorBg);
          this.updateView();
        },
        toggleFading: function () {
          Wa.set('fading', (ie.useFading = !ie.useFading));
          this.updateView();
        },
        reset: function (a) {
          ub.prototype.reset.call(this, a);
          this.sideSelector.update(this.house);
          this.sideSelector.select(Bc.curDir);
          this.updateView();
        },
        exportAsPNG: function () {
          Eb.facadeAsPNG(this.house, this.elevation, this.view);
        },
        exportAsSVG: function () {
          Eb.facadeAsSVG(this.house, this.elevation, this.view);
        },
        applyColors: function (a) {
          ub.prototype.applyColors.call(this, a);
          L.setInherited();
          Wa.set('colorize', (Bc.dark = !1));
          this.sideSelector.select(Bc.curDir);
          this.stage.set_color(L.colorBg);
          this.house.updateProps();
          this.updateView();
        },
        __class__: Bc,
      });
      var ed = function () {
        var a = this;
        cc.setUIColors(Q.colorPaper, Q.colorInk);
        ub.call(this);
        ad.mode = Wa.get('doors', 'hidden');
        mb.mode = Wa.get('grid', 'dots');
        mb.double = Wa.get('doubleGrid', !1);
        eb.showArrows = Wa.get('arrows', !0);
        eb.showProps = Wa.get('props', !0);
        eb.showAO = Wa.get('ao', !0);
        eb.showLights = Wa.get('lights', !0);
        Ac.isVisible = Wa.get('labels', !0);
        ie.useFading = Wa.get('fading', !0);
        this.map = new Th();
        this.addChild(this.map);
        this.floor = new Uh();
        this.floor.click.add(function (b) {
          a.setFloor(b);
        });
        ta.layer.addChildAt(this.floor, 0);
        this.floor.update(this.house);
        this.setFloor(ed.curFloor);
      };
      h['com.watabou.dwellings.scenes.PlanScene'] = ed;
      ed.__name__ = 'com.watabou.dwellings.scenes.PlanScene';
      ed.__super__ = ub;
      ed.prototype = w(ub.prototype, {
        activate: function () {
          ub.prototype.activate.call(this);
          this.stage.set_color(Q.colorPaper);
        },
        deactivate: function () {
          ub.prototype.deactivate.call(this);
          ta.layer.removeChild(this.floor);
        },
        layout: function () {
          var a = md.getRect(this.house.floors[0].area),
            b = 0.09 * Math.min(this.rWidth, this.rHeight);
          this.map.set_scaleX(this.map.set_scaleY(b));
          this.map.set_x(this.rWidth / 2 - b * (a.left + a.width / 2));
          this.map.set_y(this.rHeight / 2 - b * (a.top + a.height / 2));
          this.floor.set_x(this.rWidth - this.floor.get_width());
          this.floor.set_y(this.rHeight - this.floor.get_height());
        },
        onClick: function (a) {
          Ad.__eq(a.target, this.map) &&
            ((a = this.map.getRoom(
              this.map.get_mouseX(),
              this.map.get_mouseY(),
            )),
            null != a && this.editName(a));
        },
        fillViewMenu: function (a) {
          var b = this,
            d = new hc();
          d.addItem('Regular', m(this, this.toggleRoomSet), !aa.gothicSet);
          d.addItem('Gothic', m(this, this.toggleRoomSet), aa.gothicSet);
          var f = new hc(),
            g = function (a, d) {
              f.addItem(a, function () {
                Wa.set('grid', (mb.mode = d));
                b.updateView();
              }).setCheck(mb.mode == d);
            };
          g('Hidden', 'hidden');
          g('Solid', 'solid');
          g('Dashes', 'dashes');
          g('Dots', 'dots');
          g('Planks', 'planks');
          g('Tiles', 'tiles');
          f.addSeparator();
          f.addItem('Double', m(this, this.toggleDoubleGrid)).setCheck(
            mb.double,
          );
          var k = new hc();
          g = function (a, d) {
            k.addItem(a, function () {
              ad.mode = d;
              b.updateView();
            }).setCheck(ad.mode == d);
          };
          g('Hidden', 'hidden');
          g('Simple', 'simple');
          g('Open', 'open');
          var l = new hc();
          l.addItem(
            'Names',
            m(this, this.labelsShown),
            Ac.isVisible && !Ac.showNumbers,
          );
          l.addItem(
            'Numbers',
            m(this, this.labelsNumbers),
            Ac.isVisible && Ac.showNumbers,
          );
          l.addItem('Hidden', m(this, this.labelsHidden), !Ac.isVisible);
          g = new hc();
          g.addSubmenu('Labels', l);
          g.addItem('Arrows', m(this, this.toggleArrows), eb.showArrows);
          g.addItem('Props', m(this, this.toggleProps), eb.showProps);
          g.addItem('AO', m(this, this.toggleAO), eb.showAO);
          g.addItem('Lights', m(this, this.toggleLights), eb.showLights);
          var u = new hc();
          l = function (a, d) {
            u.addItem(a, function () {
              b.applyArchiPreset(d);
            });
          };
          l('Simple', 'simple');
          l('Castle', 'castle');
          l('Log house', 'logs');
          l('Modern', 'modern');
          l('Sci-fi', 'scifi');
          a.addItem('Elevation', m(this, this.switchView));
          a.addItem('Blueprint', m(this, this.switchToBlueprint));
          a.addSeparator();
          a.addSubmenu('Rooms', d);
          a.addSubmenu('Grid', f);
          a.addSubmenu('Doors', k);
          a.addSubmenu('Layers', g);
          a.addSubmenu('Walls', u);
          a.addItem('Style...', m(this, this.showColors));
          ub.prototype.fillViewMenu.call(this, a);
        },
        fillExportMenu: function (a) {
          ub.prototype.fillExportMenu.call(this, a);
          a.addItem('Advanced...', m(this, this.multiExport));
        },
        reset: function (a) {
          ub.prototype.reset.call(this, a);
          this.floor.update(this.house);
          this.floor.select(ed.curFloor);
          this.updateView();
        },
        reroll: function () {
          this.house.reroll();
          this.updateView();
        },
        rerollRooms: function () {
          this.house.reassignRooms();
          this.updateView();
        },
        updateView: function () {
          this.map.updatePlan(this.house, ed.curFloor);
          this.map.updateLabels(this.house);
          this.layout();
        },
        toggleRoomSet: function () {
          aa.gothicSet = !aa.gothicSet;
          this.rerollRooms();
        },
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 13:
                this.keyShift
                  ? this.reroll()
                  : this.keyCtrl
                    ? this.rerollRooms()
                    : this.reset();
                break;
              case 37:
              case 40:
                (0 < ed.curFloor ||
                  (0 == ed.curFloor && null != this.house.basement)) &&
                  this.setFloor(ed.curFloor - 1);
                break;
              case 38:
              case 39:
                ed.curFloor < this.house.floors.length - 1 &&
                  this.setFloor(ed.curFloor + 1);
                break;
              case 48:
                this.applyArchiPreset('scifi');
                break;
              case 54:
                this.applyArchiPreset('simple');
                break;
              case 55:
                this.applyArchiPreset('castle');
                break;
              case 56:
                this.applyArchiPreset('logs');
                break;
              case 57:
                this.applyArchiPreset('modern');
                break;
              case 65:
                this.toggleArrows();
                break;
              case 66:
                this.switchToBlueprint();
                break;
              case 68:
                this.toggleDoors();
                break;
              case 69:
                this.switchView();
                break;
              case 71:
                this.keyCtrl
                  ? this.toggleDoubleGrid()
                  : this.keyShift
                    ? this.toggleGridVisible()
                    : this.toggleGridMode();
                break;
              case 76:
                this.toggleLights();
                break;
              case 79:
                this.toggleAO();
                break;
              case 80:
                this.toggleProps();
                break;
              case 82:
                this.toggleLabels();
                break;
              case 83:
                this.showColors();
                break;
              case 88:
                this.multiExport();
                break;
              default:
                ub.prototype.onKey.call(this, a, b);
            }
        },
        setFloor: function (a) {
          this.floor.select((ed.curFloor = a));
          this.updateView();
        },
        toggleGridMode: function () {
          mb.togggleMode();
          Wa.set('grid', mb.mode);
          this.updateView();
        },
        toggleGridVisible: function () {
          mb.togggleVisibility();
          Wa.set('grid', mb.mode);
          this.updateView();
        },
        toggleDoubleGrid: function () {
          Wa.set('doubleGrid', (mb.double = !mb.double));
          'hidden' == mb.mode ? this.toggleGridVisible() : this.updateView();
        },
        toggleDoors: function () {
          ad.toggleMode();
          Wa.set('doors', ad.mode);
          this.updateView();
        },
        toggleLabels: function () {
          this.map.labels.set(!Ac.isVisible, Ac.showNumbers);
          this.map.updateLabels(this.house);
        },
        labelsShown: function () {
          this.map.labels.set(!0, !1);
          this.map.updateLabels(this.house);
        },
        labelsNumbers: function () {
          this.map.labels.set(!0, !0);
          this.map.updateLabels(this.house);
        },
        labelsHidden: function () {
          this.map.labels.set(!1, Ac.showNumbers);
          this.map.updateLabels(this.house);
        },
        toggleArrows: function () {
          Wa.set('arrows', (eb.showArrows = !eb.showArrows));
          this.updateView();
        },
        toggleProps: function () {
          Wa.set('props', (eb.showProps = !eb.showProps));
          this.updateView();
        },
        toggleAO: function () {
          Wa.set('ao', (eb.showAO = !eb.showAO));
          this.updateView();
        },
        toggleLights: function () {
          Wa.set('lights', (eb.showLights = !eb.showLights));
          this.updateView();
        },
        applyColors: function (a) {
          ub.prototype.applyColors.call(this, a);
          this.floor.select(ed.curFloor);
          this.stage.set_color(Q.colorPaper);
          this.house.updateProps();
          this.updateView();
        },
        applyArchitecture: function (a) {
          pb.setStyle(a);
          this.house.updateProps();
          this.updateView();
        },
        applyArchiPreset: function (a) {
          this.applyArchitecture(a);
        },
        showColors: function () {
          if (null == ta.findForm(zc)) {
            var a = new zc(
              m(this, this.applyColors),
              'Natural;natural;Wooden;wooden;Plain;plain;Blueprint;blueprint;Black & white;bw'.split(
                ';',
              ),
            );
            a.getName = zc.swatches(null, ['colorWalls', 'colorFloor']);
            Q.fillForm(a);
            ta.showDialog(a, 'Style');
          }
        },
        editName: function (a) {
          var b = this;
          if (null == ta.findForm(Jg)) {
            var d = new Jg(a, function (d) {
              a.name = '' != d ? d : null;
              b.map.updateLabels(b.house);
            });
            ta.showDialog(d);
          }
        },
        exportAsPNG: function () {
          Eb.planAsPNG(this.house, this.map);
          this.map.updateLabels(this.house);
        },
        exportAsSVG: function () {
          Eb.planAsSVG(this.house, this.map);
        },
        multiExport: function () {
          null == ta.findForm(fc) &&
            ta.showDialog(new fc(this.house, m(this, this.updateView)));
        },
        __class__: ed,
      });
      var Bd = function () {
        this.buttons = [];
        this.click = new gc();
        W.call(this);
      };
      h['com.watabou.dwellings.ui.ButtonStripe'] = Bd;
      Bd.__name__ = 'com.watabou.dwellings.ui.ButtonStripe';
      Bd.__super__ = W;
      Bd.prototype = w(W.prototype, {
        addButton: function (a, b) {
          var d = this;
          a = new rf(a, b);
          a.click.add(function () {
            d.click.dispatch(b);
          });
          a.select(!1);
          this.addChild(a);
          var f = this.buttons.length;
          0 == f
            ? (f = 0)
            : ((f = this.buttons[f - 1]), (f = f.get_x() + f.rWidth));
          a.set_x(f);
          this.buttons.push(a);
          this.rWidth = a.get_x() + a.rWidth;
          this.rHeight = a.get_y() + a.rHeight;
          return a;
        },
        clear: function () {
          this.removeChildren();
          this.buttons = [];
        },
        select: function (a) {
          for (var b = 0, d = this.buttons; b < d.length; ) {
            var f = d[b];
            ++b;
            f.select(f.value == a);
          }
        },
        __class__: Bd,
      });
      var rf = function (a, b) {
        this.click = new Kd();
        W.call(this);
        this.value = b;
        this.tf = tc.get(a, tc.format('ui_font_mono', 32));
        this.tf.mouseEnabled = !1;
        this.addChild(this.tf);
        a = this.tf.getCharBoundaries(0);
        this.setSize(2 * a.width + 2 * rf.MARGIN, a.height + 2 * rf.MARGIN);
        this.addEventListener('click', m(this, this.onClick));
      };
      h['com.watabou.dwellings.ui.Button'] = rf;
      rf.__name__ = 'com.watabou.dwellings.ui.Button';
      rf.__super__ = W;
      rf.prototype = w(W.prototype, {
        select: function (a) {
          this.get_graphics().clear();
          this.get_graphics().beginFill(r.dark, a ? 1 : 0);
          this.get_graphics().drawRect(0, 0, this.rWidth, this.rHeight);
          this.tf.set_textColor(a ? r.white : r.dark);
          this.tf.set_x((this.rWidth - this.tf.get_width()) / 2);
          this.tf.set_y((this.rHeight - this.tf.get_height()) / 2);
          this.set_buttonMode(!a);
        },
        onClick: function (a) {
          this.get_buttonMode() && this.click.dispatch();
        },
        __class__: rf,
      });
      var fc = function (a, b) {
        $a.call(this, ['PNG', 'SVG']);
        this.house = a;
        this.onExport = b;
        this.createRangeSection();
        this.hr();
        this.createTableSection();
        this.hr();
        this.createLayersSection();
        this.onRange();
      };
      h['com.watabou.dwellings.ui.ExportForm'] = fc;
      fc.__name__ = 'com.watabou.dwellings.ui.ExportForm';
      fc.__super__ = $a;
      fc.prototype = w($a.prototype, {
        getTitle: function () {
          return 'Export';
        },
        onButton: function (a) {
          if ('PNG' == a || 'SVG' == a) {
            fc.lastDPC = this.inpDPC.get_value();
            fc.lastCols = this.cmbCols.get_value();
            var b = this.cmbFrom.get_value(),
              d = this.cmbTo.get_value();
            null != this.house.basement && (--b, --d);
            this.btnLayers.expanded &&
              ((eb.exportFloor = fc.lastFloor = this.chkFloor.get_value()),
              (eb.exportProps = fc.lastProps = this.chkProps.get_value()),
              (eb.exportAnnote = fc.lastAnnote = this.chkAnnote.get_value()));
            Eb.multiFloor(
              this.house,
              b,
              d,
              fc.lastCols,
              fc.lastDPC,
              'PNG' == a,
            );
            eb.exportFloor = !0;
            eb.exportProps = !0;
            eb.exportAnnote = !0;
            this.dialog.hide();
            if (null != this.onExport) this.onExport();
          } else $a.prototype.onButton.call(this, a);
        },
        createRangeSection: function () {
          for (
            var a = this,
              b = new dc(),
              d = null != this.house.basement ? ['B', 'GF'] : ['GF'],
              f = 1,
              g = this.house.floors.length;
            f < g;

          ) {
            var k = f++;
            d.push(k + 'F');
          }
          b.add(new Zb('Floors'));
          this.cmbFrom = td.ofInts(d);
          this.cmbFrom.setSize(60, this.cmbFrom.get_height());
          this.cmbFrom.set_centered(!0);
          this.cmbFrom.set_value(0);
          b.add(this.cmbFrom);
          b.add(new Zb('-'));
          this.cmbTo = td.ofInts(d);
          this.cmbTo.setSize(60, this.cmbFrom.get_height());
          this.cmbTo.set_centered(!0);
          this.cmbTo.set_value(d.length - 1);
          b.add(this.cmbTo);
          this.cmbFrom.update.add(function (b) {
            a.cmbTo.get_value() < b && a.cmbTo.set_value(b);
            a.onRange();
          });
          this.cmbTo.update.add(function (b) {
            a.cmbFrom.get_value() > b && a.cmbFrom.set_value(b);
            a.onRange();
          });
          this.add(b);
        },
        createTableSection: function () {
          var a = new lf(2),
            b = new Zb('As table');
          b.valign = 'center';
          a.add(b);
          b = new dc();
          b.setMargins(0, 4);
          this.cmbCols = td.ofInts(['0']);
          this.cmbCols.update.add(m(this, this.onCols));
          this.cmbCols.set_centered(!0);
          this.cmbCols.set_width(60);
          b.add(this.cmbCols);
          var d = new Zb('x');
          b.add(d);
          this.inpRows = new lc(null, !0);
          this.inpRows.set_readOnly(!0);
          this.inpRows.set_centered(!0);
          this.inpRows.set_width(60);
          b.add(this.inpRows);
          a.add(b);
          b = new Zb('Dots per cell');
          b.valign = 'center';
          a.add(b);
          b = new dc();
          b.setMargins(0, 10);
          this.inpDPC = new Oa(fc.lastDPC, 20, 500, 3);
          this.inpDPC.set_centered(!0);
          this.inpDPC.set_width(60);
          b.add(this.inpDPC);
          this.lblDPC = new Zb('max', !0);
          this.lblDPC.set_color(r.medium);
          this.lblDPC.valign = 'center';
          b.add(this.lblDPC);
          a.add(b);
          this.add(a);
        },
        createLayersSection: function () {
          var a = this,
            b = new Ab(),
            d = new Ab();
          d.setMargins(0, 10);
          this.chkFloor = new Ld('Floor');
          this.chkFloor.set_value(fc.lastFloor);
          d.add(this.chkFloor);
          this.chkProps = new Ld('Props');
          this.chkProps.set_value(fc.lastProps);
          d.add(this.chkProps);
          this.chkAnnote = new Ld('Annotations');
          this.chkAnnote.set_value(fc.lastAnnote);
          d.add(this.chkAnnote);
          this.btnLayers = new Ae();
          this.btnLayers.set(!(fc.lastFloor && fc.lastProps && fc.lastAnnote));
          this.btnLayers.click.add(function () {
            a.btnLayers.expanded ? b.add(d) : b.remove(d);
            b.layout();
            a.layout();
            Fa.__cast(a.parent, Zc).resize();
          });
          b.add(this.btnLayers);
          this.btnLayers.expanded && b.add(d);
          this.add(b);
        },
        onRange: function () {
          this.nFloors = this.cmbTo.get_value() - this.cmbFrom.get_value() + 1;
          for (var a = [], b = 0, d = this.nFloors; b < d; ) {
            var f = b++;
            a.push(f + 1);
          }
          d = a;
          a = [];
          for (b = 0; b < d.length; )
            ((f = d[b]), ++b, a.push(null == f ? 'null' : '' + f));
          this.cmbCols.load(a, d);
          this.cmbCols.set_value(
            fc.lastCols <= this.nFloors ? fc.lastCols : this.nFloors,
          );
          this.onCols(this.cmbCols.get_value());
        },
        onCols: function (a) {
          var b = Math.ceil(this.nFloors / a);
          this.inpRows.set_text(null == b ? 'null' : '' + b);
          var d = this.house.floors[0].grid;
          a = Math.floor(
            Math.sqrt(
              Eb.MAX_SIZE / (a * (d.w + Eb.MARGINS) * b * (d.h + Eb.MARGINS)),
            ),
          );
          this.inpDPC.setRange(20, a);
          this.lblDPC.set_text('max ' + a);
        },
        __class__: fc,
      });
      var Ae = function () {
        this.click = new Kd();
        this.expanded = !1;
        Zb.call(this, Ae.COLLAPSED, !0);
        this.addEventListener('click', m(this, this.onClick));
        this.set_buttonMode(!0);
        this.set(!1);
      };
      h['com.watabou.dwellings.ui.LayersButton'] = Ae;
      Ae.__name__ = 'com.watabou.dwellings.ui.LayersButton';
      Ae.__super__ = Zb;
      Ae.prototype = w(Zb.prototype, {
        set: function (a) {
          this.expanded = a;
          this.set_text(a ? Ae.EXPANDED : Ae.COLLAPSED);
        },
        onClick: function (a) {
          this.set(!this.expanded);
          this.click.dispatch();
        },
        __class__: Ae,
      });
      var Uh = function () {
        Bd.call(this);
      };
      h['com.watabou.dwellings.ui.FloorSelector'] = Uh;
      Uh.__name__ = 'com.watabou.dwellings.ui.FloorSelector';
      Uh.__super__ = Bd;
      Uh.prototype = w(Bd.prototype, {
        update: function (a) {
          this.clear();
          null != a.basement && this.addButton('B', -1);
          var b = 0;
          for (a = a.floors.length; b < a; ) {
            var d = b++;
            this.addButton(0 == d ? 'GF' : d + 'F', d);
          }
        },
        __class__: Uh,
      });
      var Oh = function () {
        this.menu = new gc();
        this.mode = new gc();
        Bd.call(this);
        this.btnMenu = this.addButton('=', 'menu');
        this.addButton('P', 'plan');
        this.addButton('E', 'elevation');
        this.click.add(m(this, this.onButton));
      };
      h['com.watabou.dwellings.ui.ModeSelector'] = Oh;
      Oh.__name__ = 'com.watabou.dwellings.ui.ModeSelector';
      Oh.__super__ = Bd;
      Oh.prototype = w(Bd.prototype, {
        select: function (a) {
          Bd.prototype.select.call(this, a);
          this.btnMenu.select(!0);
          this.btnMenu.set_buttonMode(!0);
        },
        update: function (a) {
          this.select(a ? 'plan' : 'elevation');
        },
        onButton: function (a) {
          switch (a) {
            case 'elevation':
              this.mode.dispatch(!1);
              break;
            case 'plan':
              this.mode.dispatch(!0);
              break;
            default:
              this.menu.dispatch(this.buttons[0]);
          }
        },
        __class__: Oh,
      });
      var ye = function (a, b) {
        var d = this;
        Mc.getTags = function () {
          return Ma.ALL;
        };
        Mc.getInfo = Ma.getInfo;
        Mc.resTags = Ma.resolve;
        we.call(this, a.tags, function (a) {
          return b(a, d.cmbNFloors.get_value());
        });
        this.tags.update.add(m(this, this.onTag));
      };
      h['com.watabou.dwellings.ui.ParamsForm'] = ye;
      ye.__name__ = 'com.watabou.dwellings.ui.ParamsForm';
      ye.__super__ = we;
      ye.prototype = w(we.prototype, {
        getTitle: function () {
          return 'Parameters';
        },
        addAbove: function () {
          var a = new dc();
          a.setMargins(0, 10);
          var b = new Zb('Number of floors');
          b.valign = 'center';
          a.add(b);
          this.cmbNFloors = td.ofInts('random 1 2 3 4 5 6 7 8'.split(' '));
          this.cmbNFloors.update.add(m(this, this.onNFloors));
          this.cmbNFloors.set_centered(!0);
          this.cmbNFloors.set_value(ye.nFloors);
          a.add(this.cmbNFloors);
          this.content.add(a);
        },
        onNFloors: function (a) {
          ye.nFloors = a;
          0 < a && (this.tags.select('low', !1), this.tags.select('tall', !1));
        },
        onTag: function (a, b) {
          b &&
            -1 != Ma.HEIGHT.indexOf(a) &&
            (ye.nFloors = this.cmbNFloors.set_value(0));
        },
        __class__: ye,
      });
      var Jg = function (a, b) {
        var d = this;
        $a.call(this, ['OK', 'Cancel']);
        this.onOK = b;
        b = new mf();
        var f = a.name;
        this.txtName = new lc(null != f ? f : '');
        this.txtName.set_width(240);
        this.txtName.set_prompt(
          null != a.type ? hk.capitalize(a.type.name) : '',
        );
        this.txtName.enter.add(function (a) {
          d.onEnter();
        });
        b.add(this.txtName);
        this.add(b);
      };
      h['com.watabou.dwellings.ui.RoomForm'] = Jg;
      Jg.__name__ = 'com.watabou.dwellings.ui.RoomForm';
      Jg.__super__ = $a;
      Jg.prototype = w($a.prototype, {
        getTitle: function () {
          return 'Room name';
        },
        onShow: function () {
          $a.prototype.onShow.call(this);
          this.txtName.selecteAll();
          this.stage.set_focus(this.txtName);
        },
        onButton: function (a) {
          if ('OK' == a) {
            if (null != this.onOK) this.onOK(this.txtName.get_text());
            this.dialog.hide();
          } else $a.prototype.onButton.call(this, a);
        },
        __class__: Jg,
      });
      var Sh = function () {
        Bd.call(this);
      };
      h['com.watabou.dwellings.ui.SideSelector'] = Sh;
      Sh.__name__ = 'com.watabou.dwellings.ui.SideSelector';
      Sh.__super__ = Bd;
      Sh.prototype = w(Bd.prototype, {
        update: function (a) {
          this.clear();
          a = a.floors[0].exit.dir;
          this.addButton('L', a.cw);
          this.addButton('F', a);
          this.addButton('R', a.ccw);
          this.addButton('B', a.op);
        },
        __class__: Sh,
      });
      var ik = function (a) {
        var b = this;
        $a.call(this, ['Copy', 'Generate']);
        this.onGenerate = a;
        a = new mf();
        this.input = new lc(fb.getURL());
        this.input.enter.add(function (a) {
          b.onEnter();
        });
        this.input.set_prompt('URL');
        this.input.set_width(400);
        a.add(this.input);
        this.add(a);
      };
      h['com.watabou.dwellings.ui.URLForm'] = ik;
      ik.__name__ = 'com.watabou.dwellings.ui.URLForm';
      ik.__super__ = $a;
      ik.prototype = w($a.prototype, {
        onShow: function () {
          this.highlight();
        },
        getTitle: function () {
          return 'Permalink';
        },
        onEnter: function () {
          this.onButton('Generate');
        },
        onButton: function (a) {
          switch (a) {
            case 'Copy':
              Vd.get_generalClipboard().setData(2, this.input.get_text());
              this.highlight();
              break;
            case 'Generate':
              this.onGenerate(this.input.get_text());
              this.highlight();
              break;
            default:
              $a.prototype.onButton.call(this, a);
          }
        },
        highlight: function () {
          this.stage.set_focus(this.input);
          this.input.selecteAll();
        },
        __class__: ik,
      });
      var md = function () {};
      h['com.watabou.dwellings.utils.AreaUtils'] = md;
      md.__name__ = 'com.watabou.dwellings.utils.AreaUtils';
      md.getRect = function (a) {
        var b = a[0],
          d = b.j,
          f = b.j,
          g = b.i;
        b = b.i;
        for (var k = 1, l = a.length; k < l; ) {
          var u = k++;
          u = a[u];
          f < u.j && (f = u.j);
          d > u.j && (d = u.j);
          b < u.i && (b = u.i);
          g > u.i && (g = u.i);
        }
        return new Vh(d, g, f - d + 1, b - g + 1);
      };
      md.compactness = function (a) {
        var b = md.getRect(a);
        return a.length / (b.width * b.height);
      };
      md.findLargestRect = function (a, b) {
        var d = md.getRect(b),
          f = d.top + d.height;
        d = d.left + d.width;
        for (var g = null, k = 0, l = 0, u = 0; u < b.length; ) {
          var p = b[u];
          ++u;
          for (var h = 0, r = f - p.i; h < r; )
            for (var n = h++, t = 0, E = d - p.j; t < E; ) {
              var q = t++ + 1,
                x = n + 1,
                C = q * x;
              if (!(C < k * l || (C == k * l && (q < k || q + x > k + l)))) {
                C = !0;
                for (var m = 0, y = x; m < y; )
                  for (var B = m++, z = 0, P = q; z < P; ) {
                    var v = z++;
                    v = a.cell(p.i + B, p.j + v);
                    if (-1 == b.indexOf(v)) {
                      C = !1;
                      break;
                    }
                  }
                C && ((g = new Vh(p.j, p.i, q, x)), (k = q), (l = x));
              }
            }
        }
        return g;
      };
      md.toBitmap = function (a, b) {
        for (var d = [], f = 0, g = a.h; f < g; ) {
          f++;
          for (var k = [], l = 0, u = a.w; l < u; ) (l++, k.push(!1));
          d.push(k);
        }
        a = d;
        for (d = 0; d < b.length; ) ((f = b[d]), ++d, (a[f.i][f.j] = !0));
        return a;
      };
      var of = function (a, b) {
        oa.init();
        this.w = a;
        this.h = b;
        for (var d = [], f = 0, g = b + 1; f < g; ) {
          for (var k = f++, l = [], u = 0, p = a + 1; u < p; ) {
            var h = u++;
            l.push(new Pf(k, h));
          }
          d.push(l);
        }
        this.nodes = d;
        d = [];
        f = 0;
        for (g = b; f < g; ) {
          k = f++;
          l = [];
          u = 0;
          for (p = a; u < p; ) ((h = u++), l.push(new jk(k, h)));
          d.push(l);
        }
        this.cells = d;
        this.edges = new za();
        d = 0;
        for (f = b + 1; d < f; )
          for (k = d++, g = 0, l = a + 1; g < l; ) {
            h = g++;
            u = this.nodes[k][h];
            p = this.edges;
            var r = new za();
            p.set(u, r);
            p = r;
            if (0 < k) {
              r = this.nodes[k - 1][h];
              var n = new qf(u, this.nodes[k - 1][h], oa.NORTH);
              p.set(r, n);
            }
            k < b &&
              ((r = this.nodes[k + 1][h]),
              (n = new qf(u, this.nodes[k + 1][h], oa.SOUTH)),
              p.set(r, n));
            0 < h &&
              ((r = this.nodes[k][h - 1]),
              (n = new qf(u, this.nodes[k][h - 1], oa.WEST)),
              p.set(r, n));
            h < a &&
              ((r = this.nodes[k][h + 1]),
              (h = new qf(u, this.nodes[k][h + 1], oa.EAST)),
              p.set(r, h));
          }
      };
      h['com.watabou.dwellings.utils.Grid'] = of;
      of.__name__ = 'com.watabou.dwellings.utils.Grid';
      of.cloud2gridNArea = function (a) {
        var b = a.length;
        if (0 == b) return null;
        for (var d = a[0], f = d.x, g = d.x, k = d.y, l = d.y, u = 1; u < b; )
          ((d = u++),
            (d = a[d]),
            f > d.x ? (f = d.x) : g < d.x && (g = d.x),
            k > d.y ? (k = d.y) : l < d.y && (l = d.y));
        g = new of(g - f + 1, l - k + 1);
        u = [];
        for (b = 0; b < a.length; )
          ((d = a[b]), ++b, u.push(g.cell(d.y - k, d.x - f)));
        return { grid: g, area: u };
      };
      of.prototype = {
        node: function (a, b) {
          return 0 <= a && a <= this.h && 0 <= b && b <= this.w
            ? this.nodes[a][b]
            : null;
        },
        cell: function (a, b) {
          return 0 <= a && a < this.h && 0 <= b && b < this.w
            ? this.cells[a][b]
            : null;
        },
        nodeNdir2edge: function (a, b) {
          b = this.node(a.i + b.di, a.j + b.dj);
          return null != b ? this.edges.h[a.__id__].h[b.__id__] : null;
        },
        cellNdir2edge: function (a, b) {
          var d = a.i;
          a = a.j;
          return b == oa.NORTH
            ? this.edges.h[this.nodes[d][a].__id__].h[
                this.nodes[d][a + 1].__id__
              ]
            : b == oa.EAST
              ? this.edges.h[this.nodes[d][a + 1].__id__].h[
                  this.nodes[d + 1][a + 1].__id__
                ]
              : b == oa.SOUTH
                ? this.edges.h[this.nodes[d + 1][a + 1].__id__].h[
                    this.nodes[d + 1][a].__id__
                  ]
                : b == oa.WEST
                  ? this.edges.h[this.nodes[d + 1][a].__id__].h[
                      this.nodes[d][a].__id__
                    ]
                  : null;
        },
        nodeOffset: function (a, b, d) {
          null == d && (d = 1);
          return this.node(a.i + b.di * d, a.j + b.dj * d);
        },
        edge2cell: function (a) {
          var b = a.a;
          return a.dir == oa.EAST
            ? this.cell(b.i, b.j)
            : a.dir == oa.SOUTH
              ? this.cell(b.i, b.j - 1)
              : a.dir == oa.WEST
                ? this.cell(b.i - 1, b.j - 1)
                : a.dir == oa.NORTH
                  ? this.cell(b.i - 1, b.j)
                  : null;
        },
        outline: function (a) {
          a = this.outlineEx(a);
          return 0 < a.length ? a[0] : [];
        },
        outlineEx: function (a) {
          for (var b = [], d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            var g = this.nodes[f.i][f.j],
              k = this.nodes[f.i][f.j + 1],
              l = this.nodes[f.i + 1][f.j + 1],
              u = this.nodes[f.i + 1][f.j];
            -1 == a.indexOf(this.cell(f.i - 1, f.j)) &&
              b.push(this.edges.h[g.__id__].h[k.__id__]);
            -1 == a.indexOf(this.cell(f.i, f.j + 1)) &&
              b.push(this.edges.h[k.__id__].h[l.__id__]);
            -1 == a.indexOf(this.cell(f.i + 1, f.j)) &&
              b.push(this.edges.h[l.__id__].h[u.__id__]);
            -1 == a.indexOf(this.cell(f.i, f.j - 1)) &&
              b.push(this.edges.h[u.__id__].h[g.__id__]);
          }
          for (a = []; !la.isEmpty(b); ) {
            f = b.pop();
            g = [f];
            a.push(g);
            do {
              l = null;
              d = 0;
              for (
                k = [f.dir.cw, f.dir, f.dir.ccw];
                d < k.length &&
                ((l = k[d]),
                ++d,
                (l = this.nodeNdir2edge(f.b, l)),
                null == l || -1 == b.indexOf(l));

              );
              M.remove(b, l);
              g.push(l);
              f = l;
            } while (f.b != g[0].a);
          }
          return a;
        },
        isConnected: function (a) {
          a = a.slice();
          for (var b = [a.pop()]; 0 < a.length; ) {
            for (var d = !1, f = 0; f < a.length; ) {
              var g = a[f];
              ++f;
              for (var k = 0, l = oa.CARDINAL; k < l.length; ) {
                var u = l[k];
                ++k;
                u = this.cell(g.i + u.di, g.j + u.dj);
                if (-1 != b.indexOf(u)) {
                  d = !0;
                  break;
                }
              }
              if (d) {
                b.push(g);
                M.remove(a, g);
                break;
              }
            }
            if (!d) return !1;
          }
          return !0;
        },
        contour2area: function (a) {
          var b = this.edge2cell(a[0]),
            d = [b];
          for (b = [b]; 0 < b.length; )
            for (var f = b.pop(), g = 0, k = oa.CARDINAL; g < k.length; ) {
              var l = k[g];
              ++g;
              var u = this.cell(f.i + l.di, f.j + l.dj);
              null != u &&
                -1 == d.indexOf(u) &&
                ((l = this.cellNdir2edge(f, l)),
                -1 == a.indexOf(l) && (d.push(u), b.push(u)));
            }
          return d;
        },
        revertChain: function (a) {
          for (var b = [], d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            b.unshift(this.edges.h[f.b.__id__].h[f.a.__id__]);
          }
          return b;
        },
        __class__: of,
      };
      var Pf = function (a, b) {
        this.i = a;
        this.j = b;
      };
      h['com.watabou.dwellings.utils.Node'] = Pf;
      Pf.__name__ = 'com.watabou.dwellings.utils.Node';
      Pf.distance = function (a, b) {
        var d = a.i - b.i;
        a = a.j - b.j;
        return (0 <= d ? d : -d) + (0 <= a ? a : -a);
      };
      Pf.prototype = { __class__: Pf };
      var jk = function (a, b) {
        this.i = a;
        this.j = b;
      };
      h['com.watabou.dwellings.utils.Cell'] = jk;
      jk.__name__ = 'com.watabou.dwellings.utils.Cell';
      jk.prototype = { __class__: jk };
      var oa = function (a, b) {
        this.di = a;
        this.dj = b;
      };
      h['com.watabou.dwellings.utils.Dir'] = oa;
      oa.__name__ = 'com.watabou.dwellings.utils.Dir';
      oa.init = function () {
        oa.NORTH.cw = oa.EAST;
        oa.NORTH.ccw = oa.WEST;
        oa.NORTH.op = oa.SOUTH;
        oa.EAST.cw = oa.SOUTH;
        oa.EAST.ccw = oa.NORTH;
        oa.EAST.op = oa.WEST;
        oa.SOUTH.cw = oa.WEST;
        oa.SOUTH.ccw = oa.EAST;
        oa.SOUTH.op = oa.NORTH;
        oa.WEST.cw = oa.NORTH;
        oa.WEST.ccw = oa.SOUTH;
        oa.WEST.op = oa.EAST;
      };
      oa.prototype = { __class__: oa };
      var pl = function () {};
      h['com.watabou.dwellings.utils.PolyUtils'] = pl;
      pl.__name__ = 'com.watabou.dwellings.utils.PolyUtils';
      pl.outset = function (a, b) {
        for (var d = [], f = a.length, g = 0; g < f; ) {
          var k = g++,
            l = a[(k + 1) % f],
            u = a[(k + 2) % f];
          k = l.subtract(a[k]);
          k = k.clone();
          k.normalize(1);
          u = u.subtract(l);
          u = u.clone();
          u.normalize(1);
          var p = u;
          u = b / Math.sqrt((1 + (k.x * p.x + k.y * p.y)) / 2);
          k.setTo(k.y, -k.x);
          p.setTo(p.y, -p.x);
          k = k.add(p);
          null == u && (u = 1);
          k = k.clone();
          k.normalize(u);
          l = l.add(k);
          d.push(l);
        }
        return d;
      };
      var Ta = function () {};
      h['com.watabou.dwellings.utils.Polyomino'] = Ta;
      Ta.__name__ = 'com.watabou.dwellings.utils.Polyomino';
      Ta.mirrorx = null;
      Ta.mirrory = null;
      Ta.rotate = null;
      Ta.cols = null;
      Ta.rows = null;
      Ta.create = function (a, b) {
        for (var d = 3 * b + 2, f = [], g = 0, k = d; g < k; ) {
          g++;
          for (var l = [], u = 0, p = d; u < p; ) (u++, l.push(!1));
          f.push(l);
        }
        p = f;
        Ta.mirrorx =
          0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647;
        Ta.mirrory =
          0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647;
        Ta.rotate =
          0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647;
        f = [];
        f.push(
          Math.floor(
            a +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (b + 1 - a),
          ),
        );
        f.push(
          Math.floor(
            a +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (b + 1 - a),
          ),
        );
        f.push(
          Math.floor(
            a +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (b + 1 - a),
          ),
        );
        Ta.cols = f;
        f = [];
        f.push(
          Math.floor(
            a +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (b + 1 - a),
          ),
        );
        f.push(
          Math.floor(
            a +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (b + 1 - a),
          ),
        );
        f.push(
          Math.floor(
            a +
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                (b + 1 - a),
          ),
        );
        Ta.rows = f;
        Ta.draw(p, la.random(Ta.tetro.concat(Ta.pento)));
        f = [];
        g = 0;
        for (k = d; g < k; )
          for (a = g++, l = 0, u = d; l < u; )
            ((b = l++), p[a][b] && f.push(new pf(b, a)));
        return f;
      };
      Ta.draw = function (a, b) {
        for (var d = 0, f = b.length; d < f; ) {
          var g = d++;
          ' ' != b.charAt(g) && Ta.set(a, g % 3, (g / 3) | 0);
        }
      };
      Ta.set = function (a, b, d) {
        Ta.mirrorx && (b = 2 - b);
        Ta.mirrory && (d = 2 - d);
        if (Ta.rotate) {
          var f = b;
          b = d;
          d = f;
        }
        for (var g = 1, k = 0, l = b; k < l; ) {
          var u = k++;
          g += Ta.cols[u];
        }
        f = 1;
        k = 0;
        for (l = d; k < l; ) ((u = k++), (f += Ta.rows[u]));
        l = function () {
          return la.random([0, 0, 1]);
        };
        k = g - l();
        b = g + l() + Ta.cols[b];
        g = f - l();
        d = f + l() + Ta.rows[d];
        Ta.rect(a, k, g, b - k, d - g);
      };
      Ta.rect = function (a, b, d, f, g) {
        var k = d;
        for (d += g; k < d; ) {
          g = k++;
          for (var l = b, u = b + f; l < u; ) {
            var p = l++;
            a[g][p] = !0;
          }
        }
      };
      var Od = function () {};
      h['com.watabou.dwellings.view.ArrowView'] = Od;
      Od.__name__ = 'com.watabou.dwellings.view.ArrowView';
      Od.draw = function (a, b, d, f) {
        null == f && (f = !1);
        if (eb.showArrows && eb.exportAnnote) {
          f && b.reverse();
          a.lineStyle(Q.strokeNormal, Q.colorInk);
          Ra.drawPolyline(a, Hh.render(b, !1, 3));
          f = b[b.length - 1];
          var g = b[b.length - 2].subtract(f),
            k = Od.HEAD_SIZE;
          null == k && (k = 1);
          g = g.clone();
          g.normalize(k);
          k = g;
          var l = Od.HEAD_ANGLE / 2;
          g = Math.sin(l);
          l = Math.cos(l);
          g = f.add(new I(k.x * l - k.y * g, k.y * l + k.x * g));
          a.moveTo(f.x, f.y);
          a.lineTo(g.x, g.y);
          l = -Od.HEAD_ANGLE / 2;
          g = Math.sin(l);
          l = Math.cos(l);
          g = f.add(new I(k.x * l - k.y * g, k.y * l + k.x * g));
          a.moveTo(f.x, f.y);
          a.lineTo(g.x, g.y);
          d && a.drawCircle(b[0].x, b[0].y, Q.strokeNormal);
          a.endFill();
        }
      };
      Od.arc = function (a, b, d, f, g, k) {
        for (
          var l = d.subtract(b), u = 1 / Math.cos((g - f) / 4), p = [], h = 1;
          4 > h;

        ) {
          d = h++ / 4;
          null == d && (d = 0.5);
          var r = f + (g - f) * d;
          d = Math.sin(r);
          r = Math.cos(r);
          d = new I(l.x * r - l.y * d, l.y * r + l.x * d);
          p.push(b.add(new I(d.x * u, d.y * u)));
        }
        d = Math.sin(f);
        r = Math.cos(f);
        p.unshift(b.add(new I(l.x * r - l.y * d, l.y * r + l.x * d)));
        d = Math.sin(g);
        r = Math.cos(g);
        p.push(b.add(new I(l.x * r - l.y * d, l.y * r + l.x * d)));
        Od.draw(a, p, k, !1);
      };
      var Rh = function (a, b) {
        ba.call(this);
        this.grid = new of(a, b);
        this.plan = new ba();
        this.addChild(this.plan);
        this.drawGrid();
      };
      h['com.watabou.dwellings.view.BlueprintView'] = Rh;
      Rh.__name__ = 'com.watabou.dwellings.view.BlueprintView';
      Rh.__super__ = ba;
      Rh.prototype = w(ba.prototype, {
        drawGrid: function () {
          var a = this.get_graphics();
          a.clear();
          a.lineStyle(Q.strokeGrid, Q.colorInk, Q.alphaGrid);
          for (var b = 1, d = this.grid.h; b < d; )
            for (var f = b++, g = 1, k = this.grid.w; g < k; ) {
              var l = g++;
              this.line(a, l - 0.1, f, l + 0.1, f);
              this.line(a, l, f - 0.1, l, f + 0.1);
            }
        },
        update: function (a) {
          var b = this.grid.w,
            d = this.grid.h,
            f = this.plan.get_graphics();
          f.clear();
          f.lineStyle(Q.strokeGrid, Q.colorInk);
          for (var g = 0, k = d; g < k; )
            for (var l = g++, u = 0, p = b; u < p; ) {
              var h = u++;
              if (a[l][h]) {
                this.line(f, h, l, h + 1, l + 1);
                for (var r = 1; 4 > r; ) {
                  var n = r++;
                  this.line(f, h, l + n / 4, h + 1 - n / 4, l + 1);
                  this.line(f, h + n / 4, l, h + 1, l + 1 - n / 4);
                }
              }
            }
          g = [];
          k = 0;
          for (u = d; k < u; )
            for (l = k++, p = 0, r = b; p < r; )
              ((h = p++), a[l][h] && g.push(this.grid.cell(l, h)));
          g = this.grid.outlineEx(g);
          if (0 < g.length)
            for (
              this.shape = la.max(g, function (a) {
                return nf.area(Sb.toPoly(a));
              }),
                f.lineStyle(Q.strokeNormal, Q.colorInk),
                g = 0,
                k = this.shape;
              g < k.length;

            )
              ((a = k[g]), ++g, this.line(f, a.a.j, a.a.i, a.b.j, a.b.i));
          else this.shape = null;
        },
        getShape: function () {
          var a = Sb.fill(this.grid, this.shape);
          return md.toBitmap(this.grid, a);
        },
        line: function (a, b, d, f, g) {
          a.moveTo(b, d);
          a.lineTo(f, g);
        },
        __class__: Rh,
      });
      var ql = function () {};
      h['com.watabou.dwellings.view.ClutterView'] = ql;
      ql.__name__ = 'com.watabou.dwellings.view.ClutterView';
      ql.draw = function (a, b) {
        if (null != (null != a ? a.shapes : null) && 0 != a.shapes.length) {
          b = b.get_graphics();
          var d = 0;
          for (a = a.shapes; d < a.length; ) {
            var f = a[d];
            ++d;
            if (Q.colorProps != Q.colorInk) {
              b.lineStyle(2 * Q.strokeNormal, Q.colorInk, Q.alphaGrid);
              for (var g = 0; g < f.length; ) {
                var k = f[g];
                ++g;
                Ra.drawPolygon(b, k);
              }
              b.endFill();
            }
            for (g = 0; g < f.length; )
              ((k = f[g]),
                ++g,
                b.beginFill(Q.colorProps),
                Ra.drawPolygon(b, k));
            b.endFill();
            Q.colorProps != Q.colorInk &&
              (b.lineStyle(Q.strokeNormal, Q.colorInk, Q.alphaGrid),
              (f = f[0]),
              (g = nf.area(f)),
              (f = $f.insetEq(f, Math.sqrt(g) / 8)),
              Ra.drawPolygon(b, f),
              b.endFill());
          }
        }
      };
      var ad = function () {};
      h['com.watabou.dwellings.view.DoorView'] = ad;
      ad.__name__ = 'com.watabou.dwellings.view.DoorView';
      ad.draw = function (a, b) {
        if ('hidden' != ad.mode) {
          var d = pb.proto,
            f = b.type == od.NULL ? 1 - d.innerTh : d.doorWidth,
            g = b.edge1.point(),
            k = b.edge1.dir,
            l = new I(k.dj, k.di),
            u = -f / 2;
          k = g.add(new I(l.x * u, l.y * u));
          u = f / 2;
          f = g.add(new I(l.x * u, l.y * u));
          b.type == od.REGULAR &&
            ('simple' == ad.mode
              ? (a.lineStyle(
                  d.innerTh + 2 * Q.strokeNormal,
                  Q.colorInk,
                  null,
                  null,
                  null,
                  0,
                ),
                (u = -Q.strokeNormal),
                (b = k.add(new I(l.x * u, l.y * u))),
                (u = Q.strokeNormal),
                (u = f.add(new I(l.x * u, l.y * u))),
                a.moveTo(b.x, b.y),
                a.lineTo(u.x, u.y),
                a.lineStyle(d.innerTh, Q.colorStairs, null, null, null, 0),
                a.moveTo(k.x, k.y),
                a.lineTo(f.x, f.y))
              : ((u = f.subtract(k)),
                (l = ad.OPEN_ANGLE),
                (b = Math.sin(l)),
                (l = Math.cos(l)),
                (d = new I(u.x * l - u.y * b, u.y * l + u.x * b)),
                (l = ad.OPEN_ANGLE / 2),
                (b = Math.sin(l)),
                (l = Math.cos(l)),
                (b = new I(u.x * l - u.y * b, u.y * l + u.x * b)),
                (u = 1 / Math.cos(ad.OPEN_ANGLE / 2)),
                (b.x *= u),
                (b.y *= u),
                (d = k.add(d)),
                (u = k.add(b)),
                a.lineStyle(Q.strokeGrid, Q.colorInk),
                a.moveTo(f.x, f.y),
                a.curveTo(u.x, u.y, d.x, d.y),
                a.lineStyle(Q.strokeNormal, Q.colorInk, null, null, null, 2),
                a.moveTo(k.x, k.y),
                a.lineTo(d.x, d.y)),
            a.endFill());
        }
      };
      ad.toggleMode = function () {
        switch (ad.mode) {
          case 'hidden':
            var a = 'simple';
            break;
          case 'simple':
            a = 'open';
            break;
          default:
            a = 'hidden';
        }
        ad.mode = a;
      };
      var Wd = function () {};
      h['com.watabou.dwellings.view.EarthView'] = Wd;
      Wd.__name__ = 'com.watabou.dwellings.view.EarthView';
      Wd.draw = function (a, b) {
        var d = pb.proto;
        Wd.hatch(a, pl.outset(b, 2 * d.outerTh - d.innerTh / 2));
      };
      Wd.hatch = function (a, b) {
        a.lineStyle(Q.strokeGrid, Q.colorInk);
        var d = 8 * Q.strokeGrid;
        b = Sd.rotateYX(b, Wd.angle.y, Wd.angle.x);
        var f = Wh.rect(b),
          g = f.get_bottom(),
          k = f.get_topLeft();
        f = new I(k.x, k.y + d);
        for (var l = new I(f.x + 1, f.y); f.y < g; ) {
          for (var u = $f.pierce(b, f, l); 2 <= u.length; ) {
            k = u.shift();
            var p = -Wd.angle.y,
              h = Wd.angle.x;
            k = new I(k.x * h - k.y * p, k.y * h + k.x * p);
            p = u.shift();
            h = -Wd.angle.y;
            var r = Wd.angle.x;
            p = new I(p.x * r - p.y * h, p.y * r + p.x * h);
            a.moveTo(p.x, p.y);
            a.lineTo(k.x, k.y);
          }
          u = d;
          f.y += u;
          l.y += u;
        }
        a.endFill();
      };
      var ie = function (a) {
        ba.call(this);
        null != a && this.update(a);
      };
      h['com.watabou.dwellings.view.ElevationView'] = ie;
      ie.__name__ = 'com.watabou.dwellings.view.ElevationView';
      ie.__super__ = ba;
      ie.prototype = w(ba.prototype, {
        update: function (a) {
          this.removeChildren();
          for (
            var b = Object.create(null), d = 0, f = ib.getClassFields(L);
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            if ('color' == M.substr(g, 0, 5)) {
              var k = N.field(L, g);
              b[g] = k;
            }
          }
          d = 0;
          for (f = a.layers; d < f.length; ) {
            g = f[d];
            ++d;
            if (ie.useFading) {
              k = Math.pow(0.8, g.dist);
              var l = b,
                u = l;
              l = Object.keys(l);
              for (var p = l.length, h = 0; h < p; ) {
                var r = l[h++];
                L[r] = Ya.lerp(L.colorBg, u[r], k);
              }
            }
            g instanceof Qe &&
              ((k = Fa.__cast(g, Qe)),
              (u = new Xh()),
              u.set_x(k.offset * x.columnWidth),
              u.draw(k.facade),
              this.addChild(u),
              (l = new Yh()),
              l.update(k.facade),
              l.set_x(u.get_x()),
              this.addChild(l));
            g instanceof Qf &&
              ((k = Fa.__cast(g, Qf)),
              (u = new sf(a.height, k.dir)),
              u.set_x(k.offset * x.columnWidth),
              this.addChild(u));
            g instanceof Rf &&
              ((g = Fa.__cast(g, Rf)),
              (k = new Zh(g.right)),
              k.set_x(g.offset * x.columnWidth),
              k.set_y(-x.baseHeight),
              this.addChild(k));
          }
        },
        __class__: ie,
      });
      var Be = function () {};
      h['com.watabou.dwellings.view.EntranceView'] = Be;
      Be.__name__ = 'com.watabou.dwellings.view.EntranceView';
      Be.draw = function (a, b) {
        var d = b.point(),
          f = b.dir,
          g = new I(f.dj, f.di);
        f = b.dir.ccw;
        b = new I(f.dj, f.di);
        f = pb.proto;
        var k = f.outerTh - f.innerTh / 2,
          l = (1 + f.exitWidth) / 4;
        g = new I(g.x * l, g.y * l);
        l = Be.stepSize * f.nSteps + k;
        l = new I(b.x * l, b.y * l);
        l = [d.add(g), d.add(g).add(l), d.subtract(g).add(l), d.subtract(g)];
        a.beginFill(Q.colorFloor);
        Ra.drawPolygon(a, l);
        a.endFill();
        a.lineStyle(Q.strokeNormal, Q.colorInk);
        l = Be.stepSize;
        l = new I(b.x * l, b.y * l);
        k = new I(b.x * k, b.y * k);
        d.x += k.x;
        d.y += k.y;
        k = 0;
        for (f = f.nSteps; k < f; ) {
          k++;
          var u = [
            d.add(g),
            d.add(g).add(l),
            d.subtract(g).add(l),
            d.subtract(g),
          ];
          Ra.drawPolyline(a, u);
          d.x += l.x;
          d.y += l.y;
        }
        a.endFill();
        Od.draw(
          a,
          [
            new I(d.x + 0.7 * b.x, d.y + 0.7 * b.y),
            new I(d.x + 0.2 * b.x, d.y + 0.2 * b.y),
          ],
          !1,
        );
      };
      Be.drawBelow = function (a, b) {
        var d = b.point(),
          f = b.dir,
          g = new I(f.dj, f.di);
        f = b.dir.ccw;
        b = new I(f.dj, f.di);
        f = pb.proto;
        var k = f.outerTh - f.innerTh / 2,
          l = (1 + f.exitWidth) / 4;
        g = new I(g.x * l, g.y * l);
        l = Be.stepSize * f.nSteps + k;
        l = new I(b.x * l, b.y * l);
        l = [d.add(g), d.add(g).add(l), d.subtract(g).add(l), d.subtract(g)];
        a.lineStyle(Q.strokeNormal, Q.colorInk);
        a.beginFill(Q.colorPaper);
        Ra.drawPolygon(a, l);
        a.endFill();
        a.lineStyle(Q.strokeGrid, Q.colorInk);
        d.x += b.x * k;
        d.y += b.y * k;
        k = 0;
        for (f = f.nSteps; k < f; ) {
          k++;
          l = d.add(g);
          var u = d.subtract(g);
          a.moveTo(l.x, l.y);
          a.lineTo(u.x, u.y);
          l = Be.stepSize;
          d.x += b.x * l;
          d.y += b.y * l;
        }
        a.endFill();
      };
      var Th = function () {
        ba.call(this);
        this.labels = new Ac();
        this.addChild(this.labels);
        this.mouseChildren = !1;
      };
      h['com.watabou.dwellings.view.FloorMap'] = Th;
      Th.__name__ = 'com.watabou.dwellings.view.FloorMap';
      Th.__super__ = ba;
      Th.prototype = w(ba.prototype, {
        updatePlan: function (a, b) {
          null != this.view && this.removeChild(this.view);
          var d = 0 <= b ? a.floors[b] : a.basement;
          a = 0 <= b ? a.floors.slice(0, b) : null;
          this.view = new eb(d, a);
          this.addChildAt(this.view, 0);
        },
        updateLabels: function (a) {
          this.labels.update(a, this.view.plan);
        },
        getRoom: function (a, b) {
          var d = this.view.plan;
          a = d.grid.cell(Math.floor(b), Math.floor(a));
          return null != a ? d.getRoom(a) : null;
        },
        __class__: Th,
      });
      var mb = function () {};
      h['com.watabou.dwellings.view.GridView'] = mb;
      mb.__name__ = 'com.watabou.dwellings.view.GridView';
      mb.draw = function (a, b, d, f) {
        if ('hidden' != mb.mode) {
          var g = mb.double ? 2 : 1,
            k = [oa.NORTH, oa.EAST];
          if ('planks' == mb.mode) {
            var l = d[0];
            k = [k[(l.i & 1) == (l.j & 1) ? 0 : 1]];
            g *= 4;
          }
          a.lineStyle(
            Q.strokeGrid,
            Q.colorInk,
            Q.alphaGrid * ('planks' == mb.mode && mb.double ? 0.5 : 1),
          );
          for (var u = 0; u < d.length; ) {
            l = d[u];
            ++u;
            for (var p = 0; p < k.length; ) {
              var h = k[p];
              ++p;
              var r = b.cellNdir2edge(l, h);
              if (-1 == f.indexOf(r)) {
                var n = r.a;
                n = new I(n.j, n.i);
                r = r.b;
                mb.line(a, n, new I(r.j, r.i));
              }
              r = 1;
              for (n = g; r < n; ) {
                var E = r++,
                  q = E / g,
                  x = b.cellNdir2edge(l, h.cw).point(q);
                q = b.cellNdir2edge(l, h.ccw).point(1 - q);
                mb.line(a, x, q);
                'planks' == mb.mode &&
                  ((E =
                    (((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      3 +
                      (0 == (E & 1) ? 0.25 : 0.75)) %
                    1),
                  (x = Ub.lerp(x, q, E)),
                  (E = new I(h.dj, h.di)),
                  (q = 1 / g),
                  (E = new I(x.x + E.x * q, x.y + E.y * q)),
                  mb.line(a, x, E));
              }
            }
          }
        }
      };
      mb.line = function (a, b, d) {
        var f = mb.getPattern();
        f == mb.solid
          ? (a.moveTo(b.x, b.y), a.lineTo(d.x, d.y))
          : Ra.dashedLine(a, b, d, f);
      };
      mb.getPattern = function () {
        switch (mb.mode) {
          case 'dashes':
            return mb.dashes;
          case 'dots':
            return mb.dots;
          case 'tiles':
            return 0.5 >
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647
              ? mb.solid
              : [
                  1 -
                    Math.abs(
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
                ];
          default:
            return mb.solid;
        }
      };
      mb.togggleMode = function () {
        switch (mb.mode) {
          case 'dashes':
            var a = 'dots';
            break;
          case 'dots':
            a = 'planks';
            break;
          case 'planks':
            a = 'tiles';
            break;
          case 'solid':
            a = 'dashes';
            break;
          case 'tiles':
            a = 'hidden';
            break;
          default:
            a = 'solid';
        }
        mb.mode = a;
      };
      mb.togggleVisibility = function () {
        mb.mode = 'hidden' == mb.mode ? 'dots' : 'hidden';
      };
      var wd = function () {
        ba.call(this);
      };
      h['com.watabou.dwellings.view.Hatching'] = wd;
      wd.__name__ = 'com.watabou.dwellings.view.Hatching';
      wd.getPoisson = function (a) {
        a = new $h(a);
        for (a = new kk(wd.clusterSize / wd.z, a); a.step(); );
        return a;
      };
      wd.__super__ = ba;
      wd.prototype = w(ba.prototype, {
        draw: function (a, b) {
          this.get_graphics().clear();
          for (var d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            f.inflate(b);
          }
          this.doHatching(a);
        },
        doHatching: function (a) {
          Ce.start();
          a = wd.getPoisson(a);
          var b = a.points;
          Nb.trace(Ce.next(), {
            fileName: 'Source/com/watabou/dwellings/view/Hatching.hx',
            lineNumber: 42,
            className: 'com.watabou.dwellings.view.Hatching',
            methodName: 'doHatching',
            customParams: [b.length],
          });
          var d = wd.nStrokes,
            f = (d - 1) / 2,
            g = new za();
          this.get_graphics().lineStyle(Q.strokeGrid, Q.colorInk, Q.alphaGrid);
          for (var k = 0; k < b.length; ) {
            var l = [b[k]];
            ++k;
            var u = [];
            g.set(l[0], u);
            var p = a.getNeighbours(l[0]),
              h = la.min(
                p,
                (function (a) {
                  return function (b) {
                    return b != a[0] ? I.distance(a[0], b) : Infinity;
                  };
                })(l),
              );
            h = Math.atan2(l[0].y - h.y, l[0].x - h.x);
            0 < h &&
              (h +=
                (Math.PI / 6) *
                (1 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647));
            var r = I.polar(0.5 * wd.clusterSize * wd.z, h);
            h = r.x;
            r = r.y;
            for (
              var n =
                  Math.pow(
                    2,
                    Math.abs(
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
                  ) /
                  (Math.sqrt(3) / 2),
                E = 0,
                q = d;
              E < q;

            ) {
              var x = E++,
                C = (x - f) / f,
                m = ((x + 1) / d) * n;
              C = new I(l[0].x + -r * C, l[0].y + h * C);
              x = C.x;
              for (
                var y = C.y,
                  B = [],
                  z = -1 * h * m,
                  P = -1 * r * m,
                  v = 1,
                  w = 0;
                w < p.length;

              ) {
                var K = p[w];
                ++w;
                K = g.h[K.__id__];
                if (null != K)
                  for (var F = 0; F < K.length; ) {
                    var J = K[F];
                    ++F;
                    var G = J[0];
                    J = Ub.intersectLines(
                      x,
                      y,
                      z,
                      P,
                      G.x,
                      G.y,
                      J[1].x - G.x,
                      J[1].y - G.y,
                    );
                    null != J &&
                      0 < J.x &&
                      J.x < v &&
                      0 <= J.y &&
                      1 >= J.y &&
                      (v = J.x);
                  }
              }
              B.push(new I(C.x + z * v, C.y + P * v));
              z = 1 * h * m;
              m *= 1 * r;
              P = 1;
              for (v = 0; v < p.length; )
                if (((w = p[v]), ++v, (w = g.h[w.__id__]), null != w))
                  for (K = 0; K < w.length; )
                    ((F = w[K]),
                      ++K,
                      (J = F[0]),
                      (F = Ub.intersectLines(
                        x,
                        y,
                        z,
                        m,
                        J.x,
                        J.y,
                        F[1].x - J.x,
                        F[1].y - J.y,
                      )),
                      null != F &&
                        0 < F.x &&
                        F.x < P &&
                        0 <= F.y &&
                        1 >= F.y &&
                        (P = F.x));
              B.push(new I(C.x + z * P, C.y + m * P));
              C = B;
              u.push(C);
              x = this.get_graphics();
              y = C[0];
              x.moveTo(y.x, y.y);
              x = this.get_graphics();
              C = C[1];
              x.lineTo(C.x, C.y);
            }
          }
          Nb.trace(Ce.next(), {
            fileName: 'Source/com/watabou/dwellings/view/Hatching.hx',
            lineNumber: 105,
            className: 'com.watabou.dwellings.view.Hatching',
            methodName: 'doHatching',
          });
        },
        __class__: wd,
      });
      var Ac = function () {
        ba.call(this);
        this.set_visible(Ac.isVisible);
      };
      h['com.watabou.dwellings.view.LabelsLayer'] = Ac;
      Ac.__name__ = 'com.watabou.dwellings.view.LabelsLayer';
      Ac.__super__ = ba;
      Ac.prototype = w(ba.prototype, {
        update: function (a, b) {
          this.removeChildren();
          if (this.get_visible()) {
            for (var d = [], f = 0, g = b.stairs; f < g.length; ) {
              var k = g[f];
              ++f;
              d.push(k.cell);
            }
            g = d;
            k = pb.proto.innerTh;
            d = 0;
            for (f = b.rooms; d < f.length; ) {
              var l = f[d];
              ++d;
              if (Ac.showNumbers) var u = G.string(a.rooms.indexOf(l) + 1);
              else
                ((u = l.name),
                  null == u && ((u = l.type), (u = null != u ? u.name : null)));
              if (null != u && '' != u) {
                var p = la.difference(l.area, g);
                0 == p.length && (p = l.area);
                p = md.findLargestRect(b.grid, p);
                p = new ja(p.left, p.top, p.width, p.height);
                p.inflate(-k, -k);
                var h = u.split(' ');
                if (1 == h.length) var r = this.createLabel(u, p);
                else
                  ((r = this.createLabel(u, p)),
                    (h = this.createLabel(h.join('\n'), p)),
                    (r = r.get_scaleX() > h.get_scaleX() ? r : h));
                0.01 > r.get_scaleX() &&
                  u != l.name &&
                  null != l.type.short &&
                  (r = this.createLabel(l.type.short, p));
                r.set_x(p.x + p.width / 2);
                r.set_y(p.y + p.height / 2);
                this.addChild(r);
              }
            }
            a = Q.strokeNormal / 0.02;
            if (
              null == this.glow ||
              this.glow.get_color() != Q.colorFloor ||
              this.glow.get_blurX() != a
            )
              this.glow = new Wc(Q.colorFloor, 1, a, a, 255);
            this.outlines(!0);
          }
        },
        createLabel: function (a, b) {
          a = new ai(a);
          var d = Math.min(b.width / a.get_width(), b.height / a.get_height());
          0.02 < d && (d = 0.02 * Math.sqrt(d / 0.02));
          b = Math.min(b.width / a.get_height(), b.height / a.get_width());
          0.02 < b && (b = 0.02 * Math.sqrt(b / 0.02));
          !Ac.showNumbers && b > 1.2 * d
            ? (a.set_scaleX(a.set_scaleY(b)), a.set_rotation(-90))
            : a.set_scaleX(a.set_scaleY(d));
          return a;
        },
        set: function (a, b) {
          Ac.isVisible = a;
          Ac.showNumbers = b;
          Wa.set('labels', this.set_visible(a));
        },
        outlines: function (a) {
          null == a && (a = !0);
          this.set_filters(a && eb.exportFloor ? [this.glow] : null);
        },
        __class__: Ac,
      });
      var ai = function (a) {
        ba.call(this);
        var b = Q.formatRoom;
        b.align = 0;
        b.leading = -14;
        a = tc.get(hk.capitalize(a), b);
        a.set_x(-a.get_width() / 2);
        a.set_y(-a.get_height() / 2);
        this.addChild(a);
      };
      h['com.watabou.dwellings.view._LabelsLayer.Label'] = ai;
      ai.__name__ = 'com.watabou.dwellings.view._LabelsLayer.Label';
      ai.__super__ = ba;
      ai.prototype = w(ba.prototype, { __class__: ai });
      var eb = function (a, b) {
        ba.call(this);
        this.plan = a;
        eb.exportFloor && (null != b && this.drawBelow(b), this.drawOuter());
        if (eb.exportFloor) {
          b = this.addLayer('floor');
          for (var d = 0, f = a.rooms; d < f.length; ) {
            var g = f[d];
            ++d;
            this.drawRoom(b, g);
          }
          null != a.spiral && this.drawSpiral(b, a.spiral);
          this.drawExit(b);
          this.drawGrid();
        }
        eb.exportProps && this.drawProps();
        this.drawStairs();
        this.shading = new je();
        this.shading.shadePlan(a);
        eb.exportFloor &&
          (this.addChild(this.shading.shadow),
          this.shading.shadow.set_visible(eb.showAO));
        eb.exportFloor &&
          (this.addChild(this.shading.light),
          this.shading.light.set_visible(eb.showLights));
        this.addChild(pb.proto.create(a));
        this.drawWindows();
        this.drawDoors();
      };
      h['com.watabou.dwellings.view.PlanView'] = eb;
      eb.__name__ = 'com.watabou.dwellings.view.PlanView';
      eb.outerEdge2point = function (a) {
        var b = a.point();
        a = a.dir.ccw;
        var d = pb.proto;
        b.x += (a.dj * (d.outerTh - d.innerTh)) / 2;
        b.y += (a.di * (d.outerTh - d.innerTh)) / 2;
        return b;
      };
      eb.__super__ = ba;
      eb.prototype = w(ba.prototype, {
        drawBelow: function (a) {
          for (var b = this.addLayer('below'), d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            var g = f.contour;
            b.beginFill(Q.colorPaper);
            b.lineStyle(Q.strokeNormal, Q.colorInk);
            var k = Sb.toPoly(g);
            Ra.drawPolygon(b, k);
            b.endFill();
            b.lineStyle(Q.strokeGrid, Q.colorInk);
            k = g.length;
            for (var l = 0, u = k; l < u; ) {
              var p = l++,
                h = g[p],
                r = g[(p + 1) % k];
              h.dir != r.dir &&
                ((p = r.a),
                (p = new I(p.j, p.i)),
                (r = r.b),
                (r = new I(r.j, r.i)),
                (h = h.a),
                (h = r.subtract(new I(h.j, h.i))),
                h.normalize(1 / Math.sqrt(2)),
                h.setTo(-h.y, h.x),
                (h = p.add(h)),
                b.moveTo(p.x, p.y),
                b.lineTo(h.x, h.y));
            }
            null != f.exit && Be.drawBelow(b, f.exit);
          }
        },
        drawOuter: function () {
          if (-1 == this.plan.getFloor()) {
            var a = Sb.toPoly(this.plan.contour);
            Wd.draw(this.addLayer('outer'), a);
          }
        },
        drawRoom: function (a, b) {
          b = Sb.toPoly(b.contour);
          a.beginFill(Q.colorFloor);
          a.lineStyle(Q.strokeGrid, Q.colorFloor);
          Ra.drawPolygon(a, b);
          a.endFill();
        },
        drawGrid: function () {
          var a = this.addLayer('grid');
          if ('planks' == mb.mode)
            for (var b = 0, d = this.plan.rooms; b < d.length; ) {
              var f = d[b];
              ++b;
              mb.draw(a, this.plan.grid, f.area, this.plan.contour);
            }
          else mb.draw(a, this.plan.grid, this.plan.area, this.plan.contour);
        },
        drawProps: function () {
          if (eb.showProps) {
            var a = new ba();
            a.set_name('props');
            this.addChild(a);
            for (var b = 0, d = this.plan.rooms; b < d.length; ) {
              var f = d[b];
              ++b;
              var g = 0;
              for (f = f.props.set; g < f.length; ) {
                var k = f[g];
                ++g;
                a.addChild(k);
              }
            }
            b = 0;
            for (d = this.plan.rooms; b < d.length; )
              ((f = d[b]), ++b, ql.draw(f.clutter, a));
          }
        },
        drawStairs: function () {
          for (
            var a = this.addLayer('stairs'), b = 0, d = this.plan.stairs;
            b < d.length;

          ) {
            var f = d[b];
            ++b;
            mc.draw(a, f);
          }
        },
        drawDoors: function () {
          for (
            var a = this.addLayer('doors'), b = 0, d = this.plan.getDoors();
            b < d.length;

          ) {
            var f = d[b];
            ++b;
            ad.draw(a, f);
          }
        },
        drawWindows: function () {
          for (
            var a = this.addLayer('windows'), b = 0, d = this.plan.windows;
            b < d.length;

          ) {
            var f = d[b];
            ++b;
            var g = eb.outerEdge2point(f);
            tf.draw(a, g, f.dir);
          }
          null != this.plan.spiral &&
            ((f = this.plan.spiral.a),
            (g = new I(f.j, f.i)),
            (b = pb.proto),
            (d = b.spiralRad + b.outerTh / 2),
            (f = this.plan.spiral.dir),
            (f = new I(f.dj, f.di)),
            (f = Math.atan2(f.y, f.x) - 0.75 * Math.PI),
            tf.arc(a, g, d, f - b.winWidth / d / 2, f + b.winWidth / d / 2));
        },
        drawExit: function (a) {
          null != this.plan.exit && Be.draw(a, this.plan.exit);
        },
        drawSpiral: function (a, b) {
          var d = b.dir,
            f = new I(d.dj, d.di),
            g = Math.atan2(f.y, f.x),
            k = pb.proto.spiralRad;
          d = b.a;
          f = new I(d.j, d.i);
          a.beginFill(Q.colorStairs);
          Ra.drawArc(a, f.x, f.y, k, g - 1.5 * Math.PI, g);
          a.lineTo(f.x, f.y);
          a.endFill();
          a.lineStyle(Q.strokeNormal, Q.colorInk);
          d = Math.round((k * Math.PI * 0.75) / 0.1);
          for (var l = 0, u = d + 1; l < u; ) {
            var p = l++;
            p = I.polar(k, g - (1.5 * Math.PI * p) / d);
            p = f.add(p);
            a.moveTo(f.x, f.y);
            a.lineTo(p.x, p.y);
          }
          g = k + pb.proto.outerTh + 0.2;
          d = b.dir;
          p = new I(d.dj, d.di);
          b = g;
          null == b && (b = 1);
          p = p.clone();
          p.normalize(b);
          b = p;
          this.plan.getFloor() < this.plan.house.floors.length - 1 &&
            Od.arc(a, f, f.add(b), -Math.PI / 6, -Math.PI / 2, !0);
          0 < this.plan.getFloor() &&
            Od.arc(a, f, f.add(b), -Math.PI, (4 * -Math.PI) / 3, !1);
        },
        addLayer: function (a, b) {
          var d = new ba();
          d.set_name(a);
          null != b && d.set_blendMode(b);
          this.addChild(d);
          return d.get_graphics();
        },
        __class__: eb,
      });
      var je = function () {
        this.shadow = new ba();
        this.shadow.set_blendMode(9);
        this.light = new ba();
        this.light.set_blendMode(0);
        var a = Ya.rgb2hsv(Q.colorWall);
        this.shadowColor = Ya.hsv(a.x, a.y, 0.2);
        a = Ya.lerp(Q.colorFloor, 16763904);
        a = Ya.rgb2hsv(a);
        this.lightColors = [
          Ya.hsl(a.x, a.y, 1),
          Ya.hsl(a.x - 15, (a.y + 1) / 2, 1),
          Ya.hsl(a.x - 30, (a.y + 2) / 3, 1),
        ];
      };
      h['com.watabou.dwellings.view.Shading'] = je;
      je.__name__ = 'com.watabou.dwellings.view.Shading';
      je.getMatrix = function (a, b, d) {
        null == d && (d = 0.5);
        var f = new qa();
        f.createGradientBox(
          2 * d,
          2 * d,
          null != b ? Math.atan2(b.y, b.x) : 0,
          a.x - d,
          a.y - d,
        );
        return f;
      };
      je.prototype = {
        shadePlan: function (a) {
          for (var b = this, d = 0, f = a.rooms; d < f.length; ) {
            var g = f[d];
            ++d;
            this.shadeContour(g.contour);
          }
          var k = new za(),
            l = function (a) {
              var b = k.h[a.__id__];
              null == b && ((b = Sb.toPoly(a.contour)), k.set(a, b));
              return b;
            },
            u = function (a, d, f, g, k) {
              null == k && (k = 0.5);
              b.spotLight(a.point(k + d * (0.5 - k)), f, d / 2, 1, l(g), !1);
            };
          null != a.exit &&
            ((g = a.edge2room(a.exit)), u(a.exit, pb.proto.exitWidth, 1.5, g));
          null != a.spiral &&
            ((g = a.edge2room(a.spiral)),
            (d = pb.proto.spiralRad),
            a.isTopFloor() || u(a.spiral, d, 1, g, 0),
            a.isGroundFloor() || u(a.preSpiral, d, 1, g, 1));
          d = 0;
          for (f = a.windows; d < f.length; )
            ((g = f[d]), ++d, u(g, pb.proto.winWidth, 1, a.edge2room(g)));
          if (0 < Q.alphaLight)
            for (d = 0, f = a.rooms; d < f.length; )
              for (g = f[d], ++d, a = 0, u = g.lights; a < u.length; ) {
                var p = u[a];
                ++a;
                this.spotLight(
                  p.pos,
                  p.radius,
                  0,
                  Q.alphaLight * p.power,
                  l(g),
                );
              }
        },
        shadeContour: function (a) {
          var b = this.shadowColor;
          if (!(0 >= Q.alphaAO)) {
            var d = this.shadow.get_graphics(),
              f = [b, b, b, b, b, b, b],
              g = [
                0,
                0.25 * Q.alphaAO,
                75 * Q.alphaAO,
                Q.alphaAO,
                0.75 * Q.alphaAO,
                0.25 * Q.alphaAO,
                0,
              ],
              k = [0, 43, 85, 128, 171, 212, 255];
            b = [b, b, b, b];
            for (
              var l = [0, 0.25 * Q.alphaAO, 0.75 * Q.alphaAO, Q.alphaAO],
                u = [Q.alphaAO, 0.75 * Q.alphaAO, 0.25 * Q.alphaAO, 0],
                p = [0, 85, 170, 255],
                h = a.length,
                r = 0;
              r < h;

            ) {
              var n = r++,
                t = a[n],
                E = a[(n + 1) % h];
              n = E.a;
              n = new I(n.j, n.i);
              if (t.dir == E.dir) {
                var q = t.dir.cw;
                q = new I(q.dj, q.di);
                t = t.point();
                E = E.point();
                E = [
                  t,
                  E,
                  new I(E.x + 0.5 * q.x, E.y + 0.5 * q.y),
                  new I(t.x + 0.5 * q.x, t.y + 0.5 * q.y),
                ];
                n = je.getMatrix(n, q);
                d.beginGradientFill(0, f, g, k, n);
                Ra.drawPolygon(d, E);
              } else if (t.dir.cw == E.dir)
                ((q = E.dir.cw),
                  (q = new I(q.dj, q.di)),
                  (t = t.point()),
                  (E = E.point()),
                  (q = new I(E.x + 0.5 * q.x, E.y + 0.5 * q.y)),
                  (n = [n, E, q, t]),
                  (E = je.getMatrix(q)),
                  d.beginGradientFill(1, b, l, p, E),
                  Ra.drawPolygon(d, n));
              else if (t.dir.ccw == E.dir) {
                q = t.dir.cw;
                var x = new I(q.dj, q.di);
                q = E.dir.cw;
                q = new I(q.dj, q.di);
                var C = new I(0.5 * x.x, 0.5 * x.y),
                  m = new I(0.5 * q.x, 0.5 * q.y);
                t = t.point();
                E = E.point();
                var y = [n, n.add(m), n.add(m).add(C), n.add(C)],
                  B = je.getMatrix(n);
                d.beginGradientFill(1, b, u, p, B);
                Ra.drawPolygon(d, y);
                t = [t, n, n.add(C), t.add(C)];
                x = je.getMatrix(n, x);
                d.beginGradientFill(0, f, g, k, x);
                Ra.drawPolygon(d, t);
                E = [E, E.add(m), n.add(m), n];
                n = je.getMatrix(n, q);
                d.beginGradientFill(0, f, g, k, n);
                Ra.drawPolygon(d, E);
              }
            }
          }
        },
        spotLight: function (a, b, d, f, g, k) {
          null == k && (k = !0);
          a = je.getMatrix(a, null, b);
          f = [f, f / 2, 0];
          b = [((255 * d) / b) | 0, ((255 * (1 + (d / b) * 2)) / 3) | 0, 255];
          k &&
            0 < Q.alphaLight &&
            ((k = this.light.get_graphics()),
            k.beginGradientFill(1, this.lightColors, f, b, a),
            Ra.drawPolygon(k, g));
          0 < Q.alphaAO &&
            ((k = this.shadow.get_graphics()),
            k.beginGradientFill(1, [16777215, 16777215, 16777215], f, b, a),
            Ra.drawPolygon(k, g));
        },
        __class__: je,
      };
      var mc = function () {};
      h['com.watabou.dwellings.view.StaircaseView'] = mc;
      mc.__name__ = 'com.watabou.dwellings.view.StaircaseView';
      mc.draw = function (a, b) {
        var d = b.cell,
          f = new I(d.j + 0.5, d.i + 0.5),
          g = b.dir;
        if (null == g) mc.drawTrapdoor(a, f);
        else {
          var k = new I(g.dj, g.di),
            l = new I(0.25 * k.x, 0.25 * k.y);
          d = g.cw;
          var u = new I(d.dj, d.di);
          d = g.ccw;
          d = new I(d.dj, d.di);
          u = new I(0.25 * u.x, 0.25 * u.y);
          d = new I(0.25 * d.x, 0.25 * d.y);
          var p = pb.proto.landings,
            h = null;
          g == b.to.dir.op
            ? (mc.drawStair(a, f, g, 0.5, 1),
              (h = [f.subtract(new I(3 * l.x, 3 * l.y)), f]))
            : g == b.to.dir
              ? (b.isGoingUp() || ((h = u), (u = d), (d = h)),
                mc.drawStair(a, f.add(u).subtract(l), g, 0.5, 0.5),
                mc.drawStair(a, f.add(d).subtract(l), g.op, 0.5, 0.5),
                (g = mc.getRectSize(g, 1, 0.5)),
                mc.drawRect(a, f.add(l), g.x, g.y),
                p || mc.drawTurning(a, f, Math.atan2(k.y, k.x), -0.5, 0.5),
                (k = f.add(u)),
                (h = [
                  new I(k.x + -3 * l.x, k.y + -3 * l.y),
                  f.add(u).subtract(l),
                  f.add(u).add(l),
                  f.add(d).add(l),
                  f.add(d).subtract(l),
                ]))
              : g == b.to.dir.cw
                ? (mc.drawStair(a, f.add(d).subtract(l), g, 0.5, 0.5),
                  mc.drawStair(a, f.add(u).add(l), g.cw, 0.5, 0.5),
                  mc.drawRect(a, f.add(d).add(l), 0.5, 0.5),
                  p || mc.drawTurning(a, f, Math.atan2(k.y, k.x), -0.5, 0),
                  (k = f.add(d)),
                  (h = [
                    new I(k.x + -3 * l.x, k.y + -3 * l.y),
                    f.add(d).subtract(l),
                    f.add(d).add(l),
                    f.add(u).add(l),
                  ]))
                : g == b.to.dir.ccw &&
                  (mc.drawStair(a, f.add(u).subtract(l), g, 0.5, 0.5),
                  mc.drawStair(a, f.add(d).add(l), g.ccw, 0.5, 0.5),
                  mc.drawRect(a, f.add(u).add(l), 0.5, 0.5),
                  p || mc.drawTurning(a, f, Math.atan2(k.y, k.x), 0, 0.5),
                  (k = f.add(u)),
                  (h = [
                    new I(k.x + -3 * l.x, k.y + -3 * l.y),
                    f.add(u).subtract(l),
                    f.add(u).add(l),
                    f.add(d).add(l),
                  ]));
          b = b.isGoingUp();
          Od.draw(a, h, b, !b);
        }
      };
      mc.drawStair = function (a, b, d, f, g) {
        var k = Math.round(g / 0.1),
          l = g / k,
          u = new I(d.dj, d.di),
          p = -(g - l) / 2,
          h = new I(b.x + u.x * p, b.y + u.y * p);
        p = (g - l) / 2;
        b = new I(b.x + u.x * p, b.y + u.y * p);
        d = mc.getRectSize(d, f, l);
        for (f = 0; f < k; )
          ((l = f++),
            (l = Ub.lerp(h, b, l / (k - 1))),
            mc.drawRect(a, l, d.x, d.y));
      };
      mc.drawTurning = function (a, b, d, f, g) {
        var k = Math.round((Math.sqrt(2) * Math.PI * 0.25 * (g - f)) / 0.1);
        a.lineStyle(Q.strokeNormal, Q.colorInk);
        for (var l = 1; l < k; ) {
          var u = l++ / k;
          null == u && (u = 0.5);
          u = I.polar(1, d + (f + (g - f) * u) * Math.PI);
          var p = 0.5 / Math.max(Math.abs(u.x), Math.abs(u.y));
          u.x *= p;
          u.y *= p;
          u = b.add(u);
          a.moveTo(b.x, b.y);
          a.lineTo(u.x, u.y);
        }
      };
      mc.getRectSize = function (a, b, d) {
        return new I(
          a == oa.NORTH || a == oa.SOUTH ? b : d,
          a == oa.EAST || a == oa.WEST ? b : d,
        );
      };
      mc.drawRect = function (a, b, d, f) {
        a.lineStyle(Q.strokeNormal, Q.colorInk);
        a.beginFill(Q.colorStairs);
        a.drawRect(b.x - d / 2, b.y - f / 2, d, f);
        a.endFill();
      };
      mc.drawTrapdoor = function (a, b) {
        a.lineStyle(Q.strokeNormal, Q.colorInk);
        a.beginFill(Q.colorFloor);
        a.drawRect(b.x - 0.15, b.y - 0.15, 0.3, 0.3);
        a.endFill();
        a.lineStyle(Q.strokeNormal, Q.colorInk);
        var d = new I(b.x + -0.15, b.y + -0.15),
          f = new I(b.x + 0.15, b.y + 0.15);
        a.moveTo(d.x, d.y);
        a.lineTo(f.x, f.y);
        d = new I(b.x + -0.15, b.y + 0.15);
        f = new I(b.x + 0.15, b.y + -0.15);
        a.moveTo(d.x, d.y);
        a.lineTo(f.x, f.y);
        a.endFill();
      };
      var Q = function () {};
      h['com.watabou.dwellings.view.Style'] = Q;
      Q.__name__ = 'com.watabou.dwellings.view.Style';
      Q.formatRoom = null;
      Q.setPalette = function (a, b) {
        null == b && (b = !1);
        Q.colorInk = a.getColor('colorInk', 3158840);
        Q.colorPaper = a.getColor('colorPaper', 14869216);
        Q.colorFloor = a.getColor('colorFloor', 15790320);
        Q.colorWall = a.getColor('colorWalls', 3158840);
        Q.colorProps = a.getColor('colorProps', 15790320);
        Q.colorWindow = a.getColor('colorWindows', 15790320);
        Q.colorStairs = a.getColor('colorStairs', 15790320);
        Q.colorLabels = a.getColor('colorLabels', 3357542);
        Q.strNormal10 = a.getFloat('strNormal10', 0.3);
        Q.strGrid10 = a.getFloat('strGrid10', 0.2);
        Q.alphaGrid = a.getFloat('alphaGrid', 0.5);
        Q.alphaAO = a.getFloat('alphaAO', 0.3);
        Q.alphaLight = a.getFloat('alphaLights', 0);
        Q.fontRoom = a.getFont('fontRoom', Q.fontRoom);
        Q.hatching = a.getBool('hatching', Q.hatching);
        Q.strokeNormal = Q.strNormal10 / 10;
        Q.strokeGrid = Q.strGrid10 / 10;
        Q.formatRoom = Oc.font2format(Q.fontRoom);
        Q.formatRoom.color = Q.colorLabels;
        b && Wa.set('style', a.data());
      };
      Q.restorePalette = function () {
        var a = Wa.get('style');
        null != a
          ? Q.setPalette(Oc.fromData(a))
          : Q.setPalette(Oc.fromAsset('natural'));
      };
      Q.fillForm = function (a) {
        a.addTab('Colors');
        a.addColor('colorInk', 'Ink', Q.colorInk);
        a.addColor('colorPaper', 'Paper', Q.colorPaper);
        a.addColor('colorFloor', 'Floor', Q.colorFloor);
        a.addColor('colorWalls', 'Walls', Q.colorWall);
        a.addColor('colorProps', 'Props', Q.colorProps);
        a.addColor('colorWindows', 'Windows', Q.colorWindow);
        a.addColor('colorStairs', 'Stairs', Q.colorStairs);
        a.addColor('colorLabels', 'Labels', Q.colorLabels);
        a.addTab('Misc.');
        a.addFloat('strNormal10', 'Normal stroke', Q.strNormal10, 0.01, 0.5);
        a.addFloat('strGrid10', 'Thin stroke', Q.strGrid10, 0.01, 0.5);
        a.addFloat('alphaGrid', 'Grid opacity', Q.alphaGrid, 0, 1);
        a.addFloat('alphaAO', 'Shading', Q.alphaAO, 0, 1);
        a.addFloat('alphaLights', 'Lighting', Q.alphaLight, 0, 1);
        a.addFont('fontRoom', 'Room labels', Q.fontRoom, !0, 'ui_font');
        a.addCheck('hatching', 'Hatching', Q.hatching);
      };
      var pb = function () {
        this.landings = !0;
        this.insulated = this.rounded = !1;
        ba.call(this);
      };
      h['com.watabou.dwellings.view.WallsView'] = pb;
      pb.__name__ = 'com.watabou.dwellings.view.WallsView';
      pb.proto = null;
      pb.setStyle = function (a, b) {
        null == b && (b = !0);
        switch (a) {
          case 'castle':
            var d = new bi();
            break;
          case 'logs':
            d = new ci();
            break;
          case 'modern':
            d = new di();
            break;
          case 'scifi':
            d = new ei();
            break;
          default:
            d = new fi();
        }
        pb.proto = d;
        b && Wa.set('architecture', a);
      };
      pb.restoreStyle = function () {
        var a = Wa.get('architecture');
        pb.setStyle(null != a ? a : 'simple', !1);
      };
      pb.__super__ = ba;
      pb.prototype = w(ba.prototype, {
        create: function (a) {
          return ib.createInstance(Fa.getClass(this), []).draw(a);
        },
        draw: function (a) {
          this.plan = a;
          this.set_name('walls');
          this.get_graphics().clear();
          this.color = Q.colorInk;
          this.outline = !0;
          this.drawAll();
          Q.colorWall != Q.colorInk &&
            (this.get_graphics().endFill(),
            (this.color = Q.colorWall),
            (this.outline = !1),
            this.drawAll(),
            Q.hatching && this.drawHatching(this.get_graphics()));
          return this;
        },
        paint: function () {
          this.get_graphics().beginFill(this.color);
          this.outline &&
            this.get_graphics().lineStyle(
              2 * Q.strokeNormal,
              this.color,
              null,
              null,
              null,
              2,
              1,
            );
        },
        drawAll: function () {
          for (
            var a = this.get_graphics(),
              b = this.plan.grid,
              d = [],
              f = this.outerTh - 2 * Q.strokeNormal,
              g = 0,
              k = this.plan.contour;
            g < k.length;

          ) {
            var l = k[g];
            ++g;
            d.push(l);
            var u = l.dir.ccw,
              p = new I(u.dj, u.di),
              h = (this.outerTh - this.innerTh) / 2;
            p.x *= h;
            p.y *= h;
            u = l.a;
            var r = new I(u.j, u.i);
            u = l.b;
            h = new I(u.j, u.i);
            this.paint();
            if (l == this.plan.exit) {
              h = this.exitWidth / 2;
              u = 0;
              var n = 0.5 - h;
              u = [l.point(u), l.point(n)];
              Sd.asTranslate(u, p.x, p.y);
              u = nd.stripe(u, f, 0);
              Ra.drawPolygon(a, u);
              u = 0.5 + h;
              n = 1;
              u = [l.point(u), l.point(n)];
              Sd.asTranslate(u, p.x, p.y);
              u = nd.stripe(u, f, 0);
              Ra.drawPolygon(a, u);
            } else
              ((l =
                l == this.plan.spiral
                  ? [l.point(this.spiralRad), h]
                  : l == this.plan.preSpiral
                    ? [r, l.point(1 - this.spiralRad)]
                    : [r, h]),
                (l = Sd.translate(l, p.x, p.y)),
                (u = nd.stripe(l, f, 0.1)),
                Ra.drawPolygon(a, u));
            this.onVertex(r);
          }
          this.drawCorners();
          null != this.plan.spiral && this.drawShaft();
          f = this.innerTh - 2 * Q.strokeNormal;
          h = this.doorWidth / 2 + Q.strokeNormal;
          g = 0;
          for (k = this.plan.rooms; g < k.length; ) {
            p = k[g];
            ++g;
            r = 0;
            for (var t = p.contour; r < t.length; )
              ((l = t[r]),
                ++r,
                -1 == d.indexOf(l) &&
                  (d.push(b.edges.h[l.b.__id__].h[l.a.__id__]),
                  this.paint(),
                  null == p.getDoor(l)
                    ? ((u = l.a),
                      (n = new I(u.j, u.i)),
                      (u = l.b),
                      (u = [n, new I(u.j, u.i)]),
                      (u = nd.stripe(u, f)),
                      Ra.drawPolygon(a, u))
                    : ((u = 0),
                      (n = 0.5 - h),
                      (u = [l.point(u), l.point(n)]),
                      (u = nd.stripe(u, f, 0)),
                      Ra.drawPolygon(a, u),
                      (u = 0.5 + h),
                      (n = 1),
                      (u = [l.point(u), l.point(n)]),
                      (u = nd.stripe(u, f, 0)),
                      Ra.drawPolygon(a, u)),
                  (u = l.a),
                  this.onVertex(new I(u.j, u.i)),
                  a.endFill()));
          }
        },
        onVertex: function (a) {},
        drawCorners: function () {
          this.paint();
          for (var a = this.plan.contour.length, b = 0; b < a; ) {
            var d = b++,
              f = this.plan.contour[d];
            d = this.plan.contour[(d + 1) % a];
            if (d != this.plan.spiral) {
              var g = f.b;
              g = new I(g.j, g.i);
              if (f.dir == d.dir.ccw) this.onOuterCorner(g, f.dir, d.dir);
              else if (f.dir == d.dir.cw) this.onInnerCorner(g, f.dir, d.dir);
            }
          }
        },
        onOuterCorner: function (a, b, d) {
          b = new I(b.dj, b.di).subtract(new I(d.dj, d.di));
          d = (this.outerTh - this.innerTh) / 2;
          a = a.add(new I(b.x * d, b.y * d));
          this.drawSquare(a, this.outerTh / 2 - Q.strokeNormal);
        },
        onInnerCorner: function (a, b, d) {
          b = new I(b.dj, b.di).subtract(new I(d.dj, d.di));
          d = -((this.outerTh - this.innerTh) / 2);
          a = a.add(new I(b.x * d, b.y * d));
          this.drawSquare(a, this.outerTh / 2 - Q.strokeNormal);
        },
        drawShaft: function () {
          var a = this.plan.spiral.a,
            b = new I(a.j, a.i);
          a = this.plan.spiral.dir;
          a = Math.atan2(a.di, a.dj);
          var d = a - 1.5 * Math.PI,
            f = this.get_graphics();
          this.paint();
          Ra.drawArc(
            f,
            b.x,
            b.y,
            this.spiralRad + this.outerTh - Q.strokeNormal,
            d,
            a,
          );
          var g = b.add(I.polar(this.spiralRad, a));
          f.lineTo(g.x, g.y);
          Ra.drawArc(f, b.x, b.y, this.spiralRad + Q.strokeNormal, a, d, !1);
          a = null;
          this.plan.isTopFloor() &&
            ((a = this.plan.spiral.b), (a = [b, new I(a.j, a.i)]));
          this.plan.isGroundFloor() &&
            ((a = this.plan.preSpiral.a), (a = [new I(a.j, a.i), b]));
          null != a &&
            (this.paint(),
            (b = nd.stripe(a, this.innerTh - 2 * Q.strokeNormal)),
            Ra.drawPolygon(f, b));
        },
        drawSquare: function (a, b) {
          this.get_graphics().drawRect(a.x - b, a.y - b, 2 * b, 2 * b);
        },
        drawHatching: function (a) {
          var b = md.getRect(this.plan.area);
          b = [new gi(b.left, b.top, b.width, b.height)];
          if (null != this.plan.spiral) {
            var d = this.plan.spiral.a;
            d = new I(d.j, d.i);
            b.push(new hi(d.x, d.y, this.spiralRad));
          }
          d = new wd();
          d.draw(b, this.outerTh);
          this.addChild(d);
          b = new ba();
          d.addChild(b);
          d.set_mask(b);
          b.get_graphics().drawGraphicsData(a.readGraphicsData(!1));
        },
        __class__: pb,
      });
      var tf = function () {};
      h['com.watabou.dwellings.view.WindowView'] = tf;
      tf.__name__ = 'com.watabou.dwellings.view.WindowView';
      tf.curve = function (a, b) {
        var d = pb.proto,
          f = d.rounded;
        if (Q.colorWall != Q.colorInk) {
          var g = b.length - 1,
            k = b[0],
            l = b[g];
          if (!f) {
            var u = k.subtract(b[1]),
              p = Q.strokeNormal / u.get_length();
            b[0] = new I(k.x + u.x * p, k.y + u.y * p);
            u = l.subtract(b[g - 1]);
            p = Q.strokeNormal / u.get_length();
            b[g] = new I(l.x + u.x * p, l.y + u.y * p);
          }
          a.lineStyle(d.outerTh, Q.colorInk, null, null, null, f ? 1 : 0);
          Ra.drawPolyline(a, b);
          b[0] = k;
          b[g] = l;
        }
        a.lineStyle(
          d.outerTh - 2 * Q.strokeNormal,
          Q.colorWindow,
          null,
          null,
          null,
          f ? 1 : 0,
        );
        Ra.drawPolyline(a, b);
        d.insulated &&
          (a.lineStyle(Q.strokeNormal, Q.colorInk), Ra.drawPolyline(a, b));
        a.endFill();
      };
      tf.draw = function (a, b, d) {
        d = new I(d.dj, d.di);
        var f = pb.proto.winWidth / 2,
          g = -f;
        g = new I(b.x + d.x * g, b.y + d.y * g);
        b = new I(b.x + d.x * f, b.y + d.y * f);
        tf.curve(a, [g, b]);
      };
      tf.arc = function (a, b, d, f, g) {
        var k = 2 + Math.floor(6 * (g - f));
        d = I.polar(d, 0);
        for (var l = [], u = 0; u < k; ) {
          var p = u++ / (k - 1);
          null == p && (p = 0.5);
          var h = f + (g - f) * p;
          p = Math.sin(h);
          h = Math.cos(h);
          l.push(b.add(new I(d.x * h - d.y * p, d.y * h + d.x * p)));
        }
        tf.curve(a, l);
      };
      var bi = function () {
        pb.call(this);
        this.innerTh = 0.15;
        this.doorWidth = this.outerTh = 0.3;
        this.exitWidth = 0.4;
        this.winWidth = 0.16;
        this.spiralRad = 0.6;
        this.nSteps = 4;
        this.landings = !1;
      };
      h['com.watabou.dwellings.view.architecture.Castle'] = bi;
      bi.__name__ = 'com.watabou.dwellings.view.architecture.Castle';
      bi.__super__ = pb;
      bi.prototype = w(pb.prototype, {
        onVertex: function (a) {
          this.paint();
          this.drawSquare(a, 0.75 * this.innerTh - Q.strokeNormal);
        },
        onOuterCorner: function (a, b, d) {
          var f = this.get_graphics(),
            g = this.outerTh;
          b = new I(b.dj, b.di);
          d = new I(d.dj, d.di);
          f.moveTo(a.x, a.y);
          var k = -g;
          k = new I(a.x + b.x * k, a.y + b.y * k);
          f.lineTo(k.x, k.y);
          k = -g;
          var l = new I(a.x + b.x * k, a.y + b.y * k);
          k = -g;
          k = new I(l.x + d.x * k, l.y + d.y * k);
          f.lineTo(k.x, k.y);
          l = new I(a.x + b.x * g, a.y + b.y * g);
          k = -g;
          k = new I(l.x + d.x * k, l.y + d.y * k);
          f.lineTo(k.x, k.y);
          l = new I(a.x + b.x * g, a.y + b.y * g);
          k = new I(l.x + d.x * g, l.y + d.y * g);
          f.lineTo(k.x, k.y);
          k = new I(a.x + d.x * g, a.y + d.y * g);
          f.lineTo(k.x, k.y);
        },
        __class__: bi,
      });
      var ci = function () {
        pb.call(this);
        this.outerTh = this.innerTh = 0.26;
        this.exitWidth = this.doorWidth = 0.35;
        this.winWidth = 0.2;
        this.spiralRad = 0.6;
        this.nSteps = 5;
      };
      h['com.watabou.dwellings.view.architecture.LogHouse'] = ci;
      ci.__name__ = 'com.watabou.dwellings.view.architecture.LogHouse';
      ci.__super__ = pb;
      ci.prototype = w(pb.prototype, {
        onOuterCorner: function (a, b, d) {
          this.drawCorner(a, b, d, 0.666);
        },
        onInnerCorner: function (a, b, d) {
          this.drawCorner(a, b, d, 0.333);
        },
        drawCorner: function (a, b, d, f) {
          var g = this.outerTh - 2 * Q.strokeNormal;
          f *= g;
          var k = new I(b.dj, b.di),
            l = d.op;
          k = k.add(new I(l.dj, l.di));
          l = (this.outerTh - this.innerTh) / 2;
          k.x *= l;
          k.y *= l;
          a = a.add(k);
          k = this.get_graphics();
          this.paint();
          b = new I(b.dj, b.di);
          b = nd.stripe([a, new I(a.x + b.x * f, a.y + b.y * f)], g);
          Ra.drawPolygon(k, b);
          this.paint();
          b = new I(d.dj, d.di);
          d = -f;
          a = nd.stripe([a, new I(a.x + b.x * d, a.y + b.y * d)], g);
          Ra.drawPolygon(k, a);
        },
        __class__: ci,
      });
      var di = function () {
        pb.call(this);
        this.innerTh = 0.08;
        this.outerTh = 0.16;
        this.winWidth = this.exitWidth = this.doorWidth = 0.4;
        this.spiralRad = 0.8;
        this.nSteps = 2;
        this.insulated = !0;
      };
      h['com.watabou.dwellings.view.architecture.Modern'] = di;
      di.__name__ = 'com.watabou.dwellings.view.architecture.Modern';
      di.__super__ = pb;
      di.prototype = w(pb.prototype, { __class__: di });
      var ei = function () {
        pb.call(this);
        this.innerTh = 0.1;
        this.outerTh = 0.22;
        this.doorWidth = 0.5;
        this.exitWidth = 0.6;
        this.winWidth = 0.2;
        this.spiralRad = 0.65;
        this.nSteps = 1;
        this.rounded = !0;
        this.landings = !1;
      };
      h['com.watabou.dwellings.view.architecture.SciFi'] = ei;
      ei.__name__ = 'com.watabou.dwellings.view.architecture.SciFi';
      ei.__super__ = pb;
      ei.prototype = w(pb.prototype, {
        onOuterCorner: function (a, b, d) {
          var f = this.get_graphics(),
            g = this.outerTh - this.innerTh / 2 - Q.strokeNormal;
          b = Math.atan2(b.di, b.dj) - Math.PI / 2;
          var k = b + Math.PI / 2;
          f.moveTo(a.x, a.y);
          d = new I(d.dj, d.di);
          d = new I(a.x + d.x * g, a.y + d.y * g);
          f.lineTo(d.x, d.y);
          Ra.drawArc(f, a.x, a.y, g, b, k);
          f.lineTo(a.x, a.y);
        },
        __class__: ei,
      });
      var fi = function () {
        this.innerTh = 0.1;
        this.outerTh = 0.2;
        this.doorWidth = 0.32;
        this.exitWidth = 0.5;
        this.winWidth = 0.28;
        this.spiralRad = 0.7;
        this.nSteps = 3;
        pb.call(this);
      };
      h['com.watabou.dwellings.view.architecture.Simple'] = fi;
      fi.__name__ = 'com.watabou.dwellings.view.architecture.Simple';
      fi.__super__ = pb;
      fi.prototype = w(pb.prototype, {
        onVertex: function (a) {
          this.paint();
          this.drawSquare(a, 0.75 * this.innerTh - Q.strokeNormal);
        },
        __class__: fi,
      });
      var Ca = function (a, b) {
        this.width = a;
        this.height = b;
        this.root = S.createElement('svg');
        this.root.set('width', G.string(Math.round(1e3 * a) / 1e3));
        this.root.set('height', G.string(Math.round(1e3 * b) / 1e3));
        this.root.set('xmlns', 'http://www.w3.org/2000/svg');
      };
      h['com.watabou.formats.SVG'] = Ca;
      Ca.__name__ = 'com.watabou.formats.SVG';
      Ca.setOpacity = function (a, b) {
        a.set('opacity', null == b ? 'null' : '' + b);
        return a;
      };
      Ca.setFill = function (a, b, d) {
        null == d && (d = 1);
        a.set('fill', '#' + R.hex(b, 6));
        1 > d && a.set('fill-opacity', null == d ? 'null' : '' + d);
        return a;
      };
      Ca.noFill = function (a) {
        a.set('fill', 'none');
        return a;
      };
      Ca.fillRule = function (a, b) {
        a.set('fill-rule', b);
        return a;
      };
      Ca.setStroke = function (a, b, d, f, g) {
        null == d && (d = 0);
        a.set('stroke', '#' + R.hex(b, 6));
        0 != d && a.set('stroke-width', G.string(Math.round(1e3 * d) / 1e3));
        Ca.joinNcap(a, f, g);
        return a;
      };
      Ca.strokeOpacity = function (a, b) {
        a.set('stroke-opacity', null == b ? 'null' : '' + b);
        return a;
      };
      Ca.joinNcap = function (a, b, d) {
        null != b && a.set('stroke-linejoin', b);
        null != d && a.set('stroke-linecap', d);
        return a;
      };
      Ca.style = function (a, b) {
        a.set('style', b);
        return a;
      };
      Ca.clearTransform = function (a) {
        a.remove('transform');
        return a;
      };
      Ca.addTransform = function (a, b) {
        var d = a.get('transform');
        a.set('transform', null == d ? b : '' + b + ' ' + d);
        return a;
      };
      Ca.translate = function (a, b, d) {
        return Ca.addTransform(
          a,
          'translate(' +
            G.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            G.string(Math.round(1e3 * d) / 1e3) +
            ')',
        );
      };
      Ca.scale = function (a, b, d) {
        return Ca.addTransform(
          a,
          'scale(' +
            G.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            G.string(Math.round(1e3 * d) / 1e3) +
            ')',
        );
      };
      Ca.rotate = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        return Ca.addTransform(
          a,
          'rotate(' +
            G.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            G.string(Math.round(1e3 * d) / 1e3) +
            ' ' +
            G.string(Math.round(1e3 * f) / 1e3) +
            ')',
        );
      };
      Ca.x = function (a, b) {
        a.set('x', G.string(Math.round(1e3 * b) / 1e3));
      };
      Ca.y = function (a, b) {
        a.set('y', G.string(Math.round(1e3 * b) / 1e3));
      };
      Ca.linearGradient = function (a, b, d) {
        null == b && (b = 'userSpaceOnUse');
        var f = S.createElement('linearGradient');
        f.set('id', a);
        f.set('gradientUnits', b);
        null != d &&
          ((a = d.transformPoint(Ca._p0)),
          (d = d.transformPoint(Ca._p1)),
          f.set('x1', G.string(Math.round(1e3 * a.x) / 1e3)),
          f.set('y1', G.string(Math.round(1e3 * a.y) / 1e3)),
          f.set('x2', G.string(Math.round(1e3 * d.x) / 1e3)),
          f.set('y2', G.string(Math.round(1e3 * d.y) / 1e3)));
        return f;
      };
      Ca.radialGradient = function (a, b, d) {
        null == b && (b = 'userSpaceOnUse');
        var f = S.createElement('radialGradient');
        f.set('id', a);
        f.set('gradientUnits', b);
        null != d &&
          (f.set('cx', G.string(Math.round(1e3 * d.tx) / 1e3)),
          f.set('cy', G.string(Math.round(1e3 * d.ty) / 1e3)),
          f.set('r', G.string(Math.round(819200 * d.a) / 1e3)));
        return f;
      };
      Ca.stop = function (a, b, d) {
        null == d && (d = 1);
        var f = S.createElement('stop');
        f.set('offset', Math.round(100 * a) + '%');
        f.set('stop-color', '#' + R.hex(b, 6));
        1 > d && f.set('stop-opacity', null == d ? 'null' : '' + d);
        return f;
      };
      Ca.group = function (a) {
        var b = S.createElement('g');
        null != a && b.set('id', a);
        return b;
      };
      Ca.clipPath = function (a) {
        var b = S.createElement('clipPath');
        b.set('id', a);
        Ca.setFill(b, 16777215);
        return b;
      };
      Ca.text = function (a, b, d) {
        var f = S.createElement('text');
        a = S.createPCData(a);
        f.addChild(a);
        null != b && f.set('text-anchor', b);
        null != d && f.set('dominant-baseline', d);
        return f;
      };
      Ca.tspan = function (a) {
        var b = S.createElement('tspan');
        a = S.createPCData(a);
        b.addChild(a);
        return b;
      };
      Ca.rect = function (a, b, d, f) {
        var g = S.createElement('rect');
        g.set('x', G.string(Math.round(1e3 * a) / 1e3));
        g.set('y', G.string(Math.round(1e3 * b) / 1e3));
        g.set('width', G.string(Math.round(1e3 * d) / 1e3));
        g.set('height', G.string(Math.round(1e3 * f) / 1e3));
        return g;
      };
      Ca.prototype = { __class__: Ca };
      var ac = function () {
        this.buff = new qb();
      };
      h['com.watabou.formats.SVGPath'] = ac;
      ac.__name__ = 'com.watabou.formats.SVGPath';
      ac.prototype = {
        xml: function () {
          var a = S.createElement('path');
          a.set('d', this.buff.b);
          return a;
        },
        __class__: ac,
      };
      var Ja = function () {};
      h['com.watabou.formats.Sprite2SVG'] = Ja;
      Ja.__name__ = 'com.watabou.formats.Sprite2SVG';
      Ja.create = function (a, b, d, f) {
        null == f && (f = !0);
        null == d && (d = -1);
        f && (Ja.resetGradients(), Ja.resetImports());
        f = new Ca(a, b);
        Ja.defaultAttributes(f.root);
        -1 != d &&
          ((a = Ca.rect(0, 0, a, b)), Ca.setFill(a, d), f.root.addChild(a));
        return f;
      };
      Ja.defaultAttributes = function (a) {
        Ca.joinNcap(a, 'round', 'round');
        Ca.fillRule(a, 'evenodd');
        Ca.noFill(a);
      };
      Ja.drawSprite = function (a) {
        var b = a.__isMask ? Ca.clipPath(a.get_name()) : Ca.group();
        Ja.copyAttributes(a, b);
        Ja.drawGraphics(a.get_graphics(), b);
        Ja.drawChildren(a, b);
        return b;
      };
      Ja.drawShape = function (a) {
        var b = a.__isMask ? Ca.clipPath(a.get_name()) : Ca.group();
        Ja.copyAttributes(a, b);
        Ja.drawGraphics(a.get_graphics(), b);
        return b;
      };
      Ja.copyAttributes = function (a, b) {
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          Ca.scale(b, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && Ca.rotate(b, a.get_rotation());
        (0 == a.get_x() && 0 == a.get_y()) ||
          Ca.translate(b, a.get_x(), a.get_y());
        1 > a.get_alpha() && Ca.setOpacity(b, a.get_alpha());
        if (10 != a.get_blendMode()) {
          var d = Ja.BLEND_MODES,
            f = a.get_blendMode();
          Ca.style(b, 'mix-blend-mode: ' + d.h[f]);
        }
        null != a.get_mask() &&
          b.set('clip-path', 'url(#' + a.get_mask().get_name() + ')');
      };
      Ja.drawGraphics = function (a, b) {
        var d = !1,
          f = 0,
          g = 1,
          k = 1,
          l = 2,
          u = 1,
          p = !1,
          h = 0,
          r = 1,
          n = null;
        for (a = a.readGraphicsData(!1).iterator(); a.hasNext(); ) {
          var t = a.next();
          switch (t.__graphicsDataType) {
            case 0:
              d = t;
              g = d.thickness;
              k = d.fill;
              f = k.color;
              k = k.alpha;
              l = d.joints;
              u = d.caps;
              d = !0;
              break;
            case 1:
              n = null;
              p = t;
              h = p.color;
              r = p.alpha;
              p = !0;
              break;
            case 2:
              n = t;
              Ja.gradients.push(n);
              p = !0;
              break;
            case 3:
              t = Ja.drawPath(t.commands, t.data, t.winding);
              p &&
                (null == n
                  ? Ca.setFill(t, h, r)
                  : t.set('fill', 'url(#grad' + Ja.gradients.length + ')'));
              d &&
                (Ca.setStroke(t, f, g),
                (2 == l && 1 == u) ||
                  Ca.joinNcap(t, Ja.JOINTS.h[l], Ja.CAPS.h[u]),
                1 > k && Ca.strokeOpacity(t, k));
              b.addChild(t);
              break;
            case 5:
              ((p = d = !1), (n = null));
          }
        }
      };
      Ja.drawPath = function (a, b, d) {
        d = new ac();
        var f = 0;
        a = a.iterator();
        a: for (; a.hasNext(); )
          switch (a.next()) {
            case 1:
              var g = b.get(f),
                k = (ac.ly = b.get(f + 1));
              d.buff.b += G.string(
                ' M ' +
                  (G.string(Math.round(1e3 * (ac.lx = g)) / 1e3) +
                    ',' +
                    G.string(Math.round(1e3 * k) / 1e3)),
              );
              f += 2;
              break;
            case 2:
              g = b.get(f);
              k = b.get(f + 1);
              if (0 == d.buff.b.length) {
                var l = (ac.ly = ac.ly);
                d.buff.b += G.string(
                  ' M ' +
                    (G.string(Math.round(1e3 * (ac.lx = ac.lx)) / 1e3) +
                      ',' +
                      G.string(Math.round(1e3 * l) / 1e3)),
                );
              }
              k = ac.ly = k;
              d.buff.b += G.string(
                ' L ' +
                  (G.string(Math.round(1e3 * (ac.lx = g)) / 1e3) +
                    ',' +
                    G.string(Math.round(1e3 * k) / 1e3)),
              );
              f += 2;
              break;
            case 3:
              l = b.get(f);
              var u = b.get(f + 1);
              g = b.get(f + 2);
              k = b.get(f + 3);
              if (0 == d.buff.b.length) {
                var p = (ac.ly = ac.ly);
                d.buff.b += G.string(
                  ' M ' +
                    (G.string(Math.round(1e3 * (ac.lx = ac.lx)) / 1e3) +
                      ',' +
                      G.string(Math.round(1e3 * p) / 1e3)),
                );
              }
              l =
                'Q ' +
                (G.string(Math.round(1e3 * l) / 1e3) +
                  ',' +
                  G.string(Math.round(1e3 * u) / 1e3)) +
                ' ';
              k = ac.ly = k;
              d.buff.b += G.string(
                ' ' +
                  (l +
                    (G.string(Math.round(1e3 * (ac.lx = g)) / 1e3) +
                      ',' +
                      G.string(Math.round(1e3 * k) / 1e3))),
              );
              f += 4;
              break;
            case 4:
              a = b.get(f + 2);
              b = ac.ly = b.get(f + 3);
              d.buff.b += G.string(
                ' M ' +
                  (G.string(Math.round(1e3 * (ac.lx = a)) / 1e3) +
                    ',' +
                    G.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 5:
              a = b.get(f + 2);
              b = b.get(f + 3);
              0 == d.buff.b.length &&
                ((f = ac.ly = ac.ly),
                (d.buff.b += G.string(
                  ' M ' +
                    (G.string(Math.round(1e3 * (ac.lx = ac.lx)) / 1e3) +
                      ',' +
                      G.string(Math.round(1e3 * f) / 1e3)),
                )));
              b = ac.ly = b;
              d.buff.b += G.string(
                ' L ' +
                  (G.string(Math.round(1e3 * (ac.lx = a)) / 1e3) +
                    ',' +
                    G.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 6:
              g = b.get(f);
              k = b.get(f + 1);
              l = b.get(f + 2);
              u = b.get(f + 3);
              p = b.get(f + 4);
              var h = b.get(f + 5);
              d.buff.b += G.string(
                ' C ' + (g + ',' + k + ' ' + l + ',' + u + ' ' + p + ',' + h),
              );
              f += 6;
          }
        return d.xml();
      };
      Ja.drawChildren = function (a, b) {
        for (var d = 0, f = a.get_numChildren(); d < f; ) {
          var g = d++;
          g = a.getChildAt(g);
          if (g.get_visible()) {
            var k = null;
            null != Ja.handleObject && (k = Ja.handleObject(g));
            null == k &&
              (g instanceof ba
                ? (k = Ja.drawSprite(g))
                : g instanceof Pe
                  ? (k = Ja.drawShape(g))
                  : g instanceof Kc && (k = Ja.drawText(g)));
            if (null != k) {
              for (var l = 0, u = g.get_filters(); l < u.length; ) {
                var p = u[l];
                ++l;
                Ja.handleFilter(g, p, k, b);
              }
              b.addChild(k);
            }
          }
        }
      };
      Ja.drawText = function (a) {
        var b = a.get_defaultTextFormat(),
          d = 1 < a.get_numLines(),
          f = Ca.text(d ? '' : a.get_text(), null, 'text-before-edge');
        Ca.style(f, Ja.svgFont(b));
        Ca.setFill(f, b.color);
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          Ca.scale(f, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && Ca.rotate(f, a.get_rotation());
        1 > a.get_alpha() && Ca.setOpacity(f, a.get_alpha());
        if (d)
          for (
            Ca.translate(f, a.get_x(), a.get_y()), b = 0, d = a.get_numLines();
            b < d;

          ) {
            var g = b++,
              k = Ca.tspan(a.getLineText(g));
            g = a.getCharBoundaries(a.getLineOffset(g));
            Ca.x(k, g.x * a.get_scaleX());
            Ca.y(k, g.y * a.get_scaleY());
            f.addChild(k);
          }
        else
          ((g = a.getCharBoundaries(a.getLineOffset(0))),
            Ca.translate(
              f,
              a.get_x() + g.x * a.get_scaleX(),
              a.get_y() + g.y * a.get_scaleY(),
            ));
        return f;
      };
      Ja.substituteGenerics = function (a) {
        switch (a) {
          case '_sans':
            return 'sans-serif';
          case '_serif':
            return 'serif';
          case '_typewriter':
            return 'monospace';
          default:
            return a;
        }
      };
      Ja.svgFont = function (a) {
        var b = Ja.substituteFont(a.font),
          d = 'font: ';
        a.bold && (d += 'bold ');
        a.italic && (d += 'italic ');
        d += '' + a.size + 'px ' + b;
        0 != a.letterSpacing &&
          (d += '; letter-spacing: ' + a.letterSpacing + 'px');
        return d;
      };
      Ja.resetGradients = function () {
        Ja.gradients = [];
      };
      Ja.getGradients = function () {
        for (
          var a = S.createElement('defs'), b = 0, d = Ja.gradients.length;
          b < d;

        ) {
          var f = b++,
            g = 'grad' + (f + 1);
          f = Ja.gradients[f];
          if (0 == f.type) {
            g = Ca.linearGradient(g, null, f.matrix);
            for (var k = 0, l = f.colors.length; k < l; ) {
              var u = k++;
              g.addChild(Ca.stop(f.ratios[u] / 255, f.colors[u], f.alphas[u]));
            }
            a.addChild(g);
          } else {
            g = Ca.radialGradient(g, null, f.matrix);
            k = 0;
            for (l = f.colors.length; k < l; )
              ((u = k++),
                g.addChild(
                  Ca.stop(f.ratios[u] / 255, f.colors[u], f.alphas[u]),
                ));
            a.addChild(g);
          }
        }
        return a;
      };
      Ja.resetImports = function () {
        Ja.imports = [];
      };
      Ja.addImport = function (a) {
        -1 == Ja.imports.indexOf(a) && Ja.imports.push(a);
      };
      Ja.getImports = function () {
        for (
          var a = S.createElement('style'), b = '', d = 0, f = Ja.imports;
          d < f.length;

        ) {
          var g = f[d];
          ++d;
          b += G.string('@import url("' + g + '");');
        }
        a.addChild(S.createCData(b));
        return a;
      };
      Ja.handleFilter = function (a, b, d, f) {
        if (b instanceof Wc) {
          for (var g = 1; null != a.parent; )
            ((g *= a.get_scaleX()), (a = a.parent));
          g = a.get_scaleX();
          a = S.parse(re.print(d)).firstElement();
          Ca.setStroke(a, b.get_color(), (2 * b.get_blurX()) / g);
          1 > b.get_alpha() && Ca.strokeOpacity(a, b.get_alpha());
          f.addChild(a);
        }
      };
      var Hh = function () {};
      h['com.watabou.geom.Chaikin'] = Hh;
      Hh.__name__ = 'com.watabou.geom.Chaikin';
      Hh.render = function (a, b, d, f) {
        null == d && (d = 1);
        for (var g = 0; g < d; ) {
          g++;
          for (var k = [], l = a.length, u = 1, p = l - 1; u < p; ) {
            var h = u++,
              r = a[h];
            null == f || -1 == f.indexOf(r)
              ? (k.push(Ub.lerp(r, a[h - 1], 0.25)),
                k.push(Ub.lerp(r, a[h + 1], 0.25)))
              : k.push(r);
          }
          b
            ? ((u = a[l - 1]),
              null == f || -1 == f.indexOf(u)
                ? (k.push(Ub.lerp(u, a[l - 2], 0.25)),
                  k.push(Ub.lerp(u, a[0], 0.25)))
                : k.push(u),
              (u = a[0]),
              null == f || -1 == f.indexOf(u)
                ? (k.push(Ub.lerp(u, a[l - 1], 0.25)),
                  k.push(Ub.lerp(u, a[1], 0.25)))
                : k.push(u))
            : (k.unshift(a[0]), k.push(a[l - 1]));
          a = k;
        }
        return a;
      };
      var Ya = function () {};
      h['com.watabou.geom.Color'] = Ya;
      Ya.__name__ = 'com.watabou.geom.Color';
      Ya.rgbfSafe = function (a, b, d) {
        return (
          ((Lc.gate(255 * a, 0, 255) | 0) << 16) |
          ((Lc.gate(255 * b, 0, 255) | 0) << 8) |
          Lc.gate(255 * d, 0, 255) |
          0
        );
      };
      Ya.lerp = function (a, b, d) {
        null == d && (d = 0.5);
        var f = (a >>> 8) & 255,
          g = a & 255,
          k = b >>> 16,
          l = (b >>> 8) & 255;
        b &= 255;
        var u = 1 - d;
        return (
          (((z.toFloat(a >>> 16) * u + z.toFloat(k) * d) | 0) << 16) |
          (((z.toFloat(f) * u + z.toFloat(l) * d) | 0) << 8) |
          (z.toFloat(g) * u + z.toFloat(b) * d) |
          0
        );
      };
      Ya.lerpHSV = function (a, b, d) {
        null == d && (d = 0.5);
        a = Ya.rgb2hsv(a);
        b = Ya.rgb2hsv(b);
        var f = 0 == a.y ? b.x : 0 == b.y ? a.x : Ya.lerpHue(a.x, b.x, d),
          g = 1 - d;
        return Ya.hsv(f, a.y * g + b.y * d, a.z * g + b.z * d);
      };
      Ya.lerpHue = function (a, b, d) {
        null == d && (d = 0.5);
        a -= 360 * Math.floor(a / 360);
        b -= 360 * Math.floor(a / 360);
        if (a > b) {
          var f = a;
          a = b;
          b = f;
          d = 1 - d;
        }
        180 < b - a && (b -= 360);
        return a * (1 - d) + b * d;
      };
      Ya.scale = function (a, b) {
        return Ya.rgbfSafe(
          (z.toFloat(a >>> 16) / z.toFloat(255)) * b,
          (z.toFloat((a >>> 8) & 255) / z.toFloat(255)) * b,
          (z.toFloat(a & 255) / z.toFloat(255)) * b,
        );
      };
      Ya.hsv = function (a, b, d) {
        var f = function (a) {
            a -= 360 * Math.floor(a / 360);
            return Lc.gate(Math.abs(a / 60 - 3) - 1, 0, 1);
          },
          g = f(a),
          k = f(a - 120);
        a = f(a + 120);
        return Ya.rgbfSafe(
          (g * b + 1 - b) * d,
          (k * b + 1 - b) * d,
          (a * b + 1 - b) * d,
        );
      };
      Ya.hsl = function (a, b, d) {
        a *= Math.PI / 180;
        return Ya.rgbfSafe(
          ((Math.cos(a) / 2 + 0.5) * b + 1 - b) * d,
          ((Math.cos(a - (2 * Math.PI) / 3) / 2 + 0.5) * b + 1 - b) * d,
          ((Math.cos(a + (2 * Math.PI) / 3) / 2 + 0.5) * b + 1 - b) * d,
        );
      };
      Ya.rgb2hsv = function (a) {
        var b = z.toFloat(a >>> 16) / z.toFloat(255),
          d = z.toFloat((a >>> 8) & 255) / z.toFloat(255);
        a = z.toFloat(a & 255) / z.toFloat(255);
        var f = Math.min(b, Math.min(d, a)),
          g = Math.max(b, Math.max(d, a));
        return f == g
          ? new ii(0, 0, f)
          : new ii(
              60 *
                ((b == f ? 3 : a == f ? 1 : 5) -
                  (b == f ? d - a : a == f ? b - d : a - b) / (g - f)),
              (g - f) / g,
              g,
            );
      };
      Ya.brightness = function (a) {
        var b = z.toFloat(a >>> 16) / z.toFloat(255),
          d = z.toFloat((a >>> 8) & 255) / z.toFloat(255);
        a = z.toFloat(a & 255) / z.toFloat(255);
        return Math.sqrt(0.299 * b * b + 0.587 * d * d + 0.114 * a * a);
      };
      Ya.grey = function (a) {
        a = Math.round(255 * a);
        return (a << 16) | (a << 8) | a;
      };
      var pf = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      h['com.watabou.geom.Dot'] = pf;
      pf.__name__ = 'com.watabou.geom.Dot';
      pf.prototype = { __class__: pf };
      var Ub = function () {};
      h['com.watabou.geom.GeomUtils'] = Ub;
      Ub.__name__ = 'com.watabou.geom.GeomUtils';
      Ub.intersectLines = function (a, b, d, f, g, k, l, u) {
        var p = d * u - f * l;
        if (0 == p) return null;
        p = (f * (g - a) - d * (k - b)) / p;
        return new I(
          Math.abs(d) > Math.abs(f) ? (g - a + l * p) / d : (k - b + u * p) / f,
          p,
        );
      };
      Ub.lerp = function (a, b, d) {
        null == d && (d = 0.5);
        var f = a.x,
          g = d;
        null == g && (g = 0.5);
        var k = a.y;
        a = d;
        null == a && (a = 0.5);
        return new I(f + (b.x - f) * g, k + (b.y - k) * a);
      };
      var ck = function () {
        this.nodes = [];
      };
      h['com.watabou.geom.Graph'] = ck;
      ck.__name__ = 'com.watabou.geom.Graph';
      ck.prototype = {
        add: function (a) {
          this.nodes.push(a);
          return a;
        },
        findNode: function (a) {
          for (var b = 0, d = this.nodes; b < d.length; ) {
            var f = d[b];
            ++b;
            if (f.data == a) return f;
          }
          return null;
        },
        aStar: function (a, b, d) {
          d = null != d ? d.slice() : [];
          var f = [a],
            g = new za(),
            k = new za();
          for (k.set(a, 0); 0 < f.length; ) {
            a = f.shift();
            if (a == b) return this.buildPath(g, a);
            M.remove(f, a);
            d.push(a);
            var l = k.h[a.__id__],
              u = a.links,
              p = u;
            for (u = u.keys(); u.hasNext(); ) {
              var h = u.next(),
                r = p.get(h);
              if (-1 == d.indexOf(h)) {
                r = l + r;
                if (-1 == f.indexOf(h)) f.push(h);
                else if (r >= k.h[h.__id__]) continue;
                g.set(h, a);
                k.set(h, r);
              }
            }
          }
          return null;
        },
        buildPath: function (a, b) {
          for (var d = [b]; null != a.h.__keys__[b.__id__]; )
            ((b = a.h[b.__id__]), d.push(b));
          return d;
        },
        __class__: ck,
      };
      var dk = function (a) {
        this.links = new za();
        this.data = a;
      };
      h['com.watabou.geom.Node'] = dk;
      dk.__name__ = 'com.watabou.geom.Node';
      dk.prototype = {
        link: function (a, b, d) {
          null == d && (d = !0);
          null == b && (b = 1);
          this.links.set(a, b);
          d && a.links.set(this, b);
        },
        __class__: dk,
      };
      var kk = function (a, b) {
        this.r = a;
        this.shape = b;
        this.points = [];
        this.cellSize = a / Math.sqrt(2);
        this.setBounds(b.getBounds(this));
        this.queue = [];
        this.emit(b.getFirst());
      };
      h['com.watabou.geom.PoissonDisk'] = kk;
      kk.__name__ = 'com.watabou.geom.PoissonDisk';
      kk.prototype = {
        setBounds: function (a) {
          this.xmin = a.get_left();
          this.ymin = a.get_top();
          this.xmax = a.get_right();
          this.ymax = a.get_bottom();
          this.gridWidth = Math.ceil((this.xmax - this.xmin) / this.cellSize);
          this.gridHeight = Math.ceil((this.ymax - this.ymin) / this.cellSize);
          a = [];
          for (var b = 0, d = this.gridWidth * this.gridHeight; b < d; )
            (b++, a.push(null));
          this.grid = a;
        },
        step: function () {
          if (0 == this.queue.length) return !1;
          for (var a = la.random(this.queue), b = !1, d = 0; 30 > d; ) {
            d++;
            var f = I.polar(
              this.r +
                this.r *
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              2 *
                Math.PI *
                ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            );
            f.x += a.x;
            f.y += a.y;
            this.shape.validate(f) &&
              this.validate(f) &&
              ((b = !0), this.emit(f));
          }
          b || M.remove(this.queue, a);
          return 0 < this.queue.length;
        },
        validate: function (a) {
          var b = Math.floor((a.x - this.xmin) / this.cellSize),
            d = Math.floor((a.y - this.ymin) / this.cellSize);
          if (0 > b || 0 > d || b >= this.gridWidth || d >= this.gridHeight)
            return !1;
          for (
            var f = 0 < b - 2 ? b - 2 : 0,
              g = b + 2 + 1 < this.gridWidth ? b + 2 + 1 : this.gridWidth,
              k = 0 < d - 2 ? d - 2 : 0,
              l = d + 2 + 1 < this.gridHeight ? d + 2 + 1 : this.gridHeight;
            k < l;

          ) {
            d = k++;
            d *= this.gridWidth;
            for (var u = f, p = g; u < p; )
              if (
                ((b = u++),
                (b = this.grid[d + b]),
                null != b && I.distance(a, b) < this.r)
              )
                return !1;
          }
          return !0;
        },
        emit: function (a) {
          this.points.push(a);
          this.queue.push(a);
          this.grid[
            Math.floor((a.y - this.ymin) / this.cellSize) * this.gridWidth +
              Math.floor((a.x - this.xmin) / this.cellSize)
          ] = a;
        },
        getNeighbours: function (a) {
          var b = [],
            d = Math.floor((a.x - this.xmin) / this.cellSize),
            f = Math.floor((a.y - this.ymin) / this.cellSize);
          a = 0 < d - 2 ? d - 2 : 0;
          for (
            var g = d + 2 + 1 < this.gridWidth ? d + 2 + 1 : this.gridWidth,
              k = 0 < f - 2 ? f - 2 : 0,
              l = f + 2 + 1 < this.gridHeight ? f + 2 + 1 : this.gridHeight;
            k < l;

          ) {
            f = k++;
            f *= this.gridWidth;
            for (var u = a, p = g; u < p; )
              ((d = u++), (d = this.grid[f + d]), null != d && b.push(d));
          }
          return b;
        },
        __class__: kk,
      };
      var ag = function () {};
      h['com.watabou.geom.IPoissonDiskShape'] = ag;
      ag.__name__ = 'com.watabou.geom.IPoissonDiskShape';
      ag.__isInterface__ = !0;
      ag.prototype = { __class__: ag };
      var gi = function (a, b, d, f) {
        this.x = a;
        this.y = b;
        this.w = d;
        this.h = f;
      };
      h['com.watabou.geom.PoissonDiskRect'] = gi;
      gi.__name__ = 'com.watabou.geom.PoissonDiskRect';
      gi.__interfaces__ = [ag];
      gi.prototype = {
        getBounds: function (a) {
          return new ja(this.x, this.y, this.w, this.h);
        },
        getFirst: function () {
          return new I(
            this.x +
              this.w *
                ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            this.y +
              this.h *
                ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
          );
        },
        validate: function (a) {
          return a.x >= this.x && a.y >= this.y && a.x < this.x + this.w
            ? a.y < this.y + this.h
            : !1;
        },
        inflate: function (a) {
          this.x -= a;
          this.y -= a;
          this.w += 2 * a;
          this.h += 2 * a;
        },
        __class__: gi,
      };
      var hi = function (a, b, d) {
        this.x = a;
        this.y = b;
        this.r = d;
        this.r2 = d * d;
      };
      h['com.watabou.geom.PoissonDiskCircle'] = hi;
      hi.__name__ = 'com.watabou.geom.PoissonDiskCircle';
      hi.__interfaces__ = [ag];
      hi.prototype = {
        getBounds: function (a) {
          return new ja(
            this.x - this.r,
            this.y - this.r,
            2 * this.r,
            2 * this.r,
          );
        },
        getFirst: function () {
          var a = I.polar(
            this.r *
              Math.sqrt(
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647,
              ),
            2 *
              Math.PI *
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
          );
          a.x += this.x;
          a.y += this.y;
          return a;
        },
        validate: function (a) {
          var b = this.x - a.x;
          a = this.y - a.y;
          return b * b + a * a <= this.r2;
        },
        inflate: function (a) {
          this.r += a;
          this.r2 = this.r * this.r;
        },
        __class__: hi,
      };
      var $h = function (a) {
        this.shapes = a;
      };
      h['com.watabou.geom.PoissonDiskShapeCollection'] = $h;
      $h.__name__ = 'com.watabou.geom.PoissonDiskShapeCollection';
      $h.__interfaces__ = [ag];
      $h.prototype = {
        getBounds: function (a) {
          for (
            var b = this.shapes[0].getBounds(a), d = 1, f = this.shapes.length;
            d < f;

          ) {
            var g = d++;
            b = b.union(this.shapes[g].getBounds(a));
          }
          return b;
        },
        getFirst: function () {
          return la.random(this.shapes).getFirst();
        },
        validate: function (a) {
          for (var b = 0, d = this.shapes; b < d.length; ) {
            var f = d[b];
            ++b;
            if (f.validate(a)) return !0;
          }
          return !1;
        },
        inflate: function (a) {
          for (var b = 0, d = this.shapes; b < d.length; ) {
            var f = d[b];
            ++b;
            f.inflate(a);
          }
        },
        __class__: $h,
      };
      var lk = function (a, b, d, f) {
        null == f && (f = 0);
        this.width = a;
        this.height = b;
        this.dist = d;
        this.dist2 = d * d;
        this.cellSize = d / Math.sqrt(2);
        this.gridWidth = Math.ceil(this.width / this.cellSize);
        this.gridHeight = Math.ceil(this.height / this.cellSize);
        d = [];
        for (var g = 0, k = this.gridWidth * this.gridHeight; g < k; )
          (g++, d.push(null));
        this.grid = d;
        this.points = [];
        this.queue = [];
        for (
          this.emit(
            new I(
              a * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              b * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            ),
          );
          this.step();

        );
        0 < f && this.uneven(f);
      };
      h['com.watabou.geom.PoissonPattern'] = lk;
      lk.__name__ = 'com.watabou.geom.PoissonPattern';
      lk.prototype = {
        emit: function (a) {
          this.points.push(a);
          this.queue.push(a);
          this.grid[
            Math.floor(a.y / this.cellSize) * this.gridWidth +
              Math.floor(a.x / this.cellSize)
          ] = a;
        },
        step: function () {
          if (0 == this.queue.length) return !1;
          for (var a = la.random(this.queue), b = !1, d = 0; 50 > d; ) {
            d++;
            var f = I.polar(
              this.dist *
                (1 +
                  0.1 *
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647)),
              6.28318530718 *
                ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            );
            f.x += a.x;
            f.y += a.y;
            this.warp(f);
            this.validate(f) && ((b = !0), this.emit(f));
          }
          b || M.remove(this.queue, a);
          return 0 < this.queue.length;
        },
        warp: function (a) {
          0 > a.x
            ? (a.x += this.width)
            : a.x >= this.width && (a.x -= this.width);
          0 > a.y
            ? (a.y += this.height)
            : a.y >= this.height && (a.y -= this.height);
        },
        validate: function (a) {
          var b = a.x;
          a = a.y;
          for (
            var d = Math.floor(b / this.cellSize),
              f = Math.floor(a / this.cellSize),
              g = d - 2,
              k = d + 2 + 1,
              l = f - 2,
              u = f + 2 + 1;
            l < u;

          ) {
            f = l++;
            f = ((f + this.gridHeight) % this.gridHeight) * this.gridWidth;
            for (var p = g, h = k; p < h; ) {
              d = p++;
              var r = this.grid[f + ((d + this.gridWidth) % this.gridWidth)];
              if (
                null != r &&
                ((d = Math.abs(r.x - b)),
                (r = Math.abs(r.y - a)),
                d > this.width - d && (d = this.width - d),
                r > this.height - r && (r = this.height - r),
                d * d + r * r < this.dist2)
              )
                return !1;
            }
          }
          return !0;
        },
        uneven: function (a) {
          if (0 != a)
            for (var b = 0, d = this.points; b < d.length; ) {
              var f = d[b];
              ++b;
              var g = I.polar(
                this.dist *
                  a *
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
                6.28318530718 *
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              );
              f.x += g.x;
              f.y += g.y;
              this.warp(f);
            }
        },
        scale: function (a, b) {
          for (var d = 0, f = this.points; d < f.length; ) {
            var g = f[d];
            ++d;
            g.x *= a;
            g.y *= b;
          }
          this.width *= a;
          this.height *= b;
        },
        fill: function (a) {
          var b = a.getBounds(),
            d = Math.floor(b.get_left() / this.width),
            f = Math.floor(b.get_top() / this.height),
            g = Math.ceil(b.get_right() / this.width);
          b = Math.ceil(b.get_bottom() / this.height);
          for (var k = []; f < b; )
            for (var l = f++, u = d, p = g; u < p; )
              for (
                var h = u++,
                  r = a.validateRect(
                    h * this.width,
                    l * this.height,
                    this.width,
                    this.height,
                  ),
                  n = 0,
                  t = this.points;
                n < t.length;

              ) {
                var E = t[n];
                ++n;
                if (0 != l || 0 != h)
                  E = new I(E.x + h * this.width, E.y + l * this.height);
                (r || a.validate(E)) && k.push(E);
              }
          return k;
        },
        __class__: lk,
      };
      var ji = function () {};
      h['com.watabou.geom.IFillableShape'] = ji;
      ji.__name__ = 'com.watabou.geom.IFillableShape';
      ji.__isInterface__ = !0;
      ji.prototype = { __class__: ji };
      var ki = function (a, b, d, f) {
        this.x = a;
        this.y = b;
        this.w = d;
        this.h = f;
      };
      h['com.watabou.geom.FillableRect'] = ki;
      ki.__name__ = 'com.watabou.geom.FillableRect';
      ki.__interfaces__ = [ji];
      ki.prototype = {
        getBounds: function () {
          return new ja(this.x, this.y, this.w, this.h);
        },
        validate: function (a) {
          return a.x >= this.x && a.y >= this.y && a.x < this.x + this.w
            ? a.y < this.y + this.h
            : !1;
        },
        validateRect: function (a, b, d, f) {
          return !1;
        },
        __class__: ki,
      };
      var Vh = function (a, b, d, f) {
        null == f && (f = 1);
        null == d && (d = 1);
        this.left = a;
        this.top = b;
        this.width = d;
        this.height = f;
      };
      h['com.watabou.geom.Rect'] = Vh;
      Vh.__name__ = 'com.watabou.geom.Rect';
      Vh.prototype = {
        centerX: function () {
          return this.left + (this.width >> 1);
        },
        centerY: function () {
          return this.top + (this.height >> 1);
        },
        __class__: Vh,
      };
      var Wh = function () {};
      h['com.watabou.geom.polygons.PolyBounds'] = Wh;
      Wh.__name__ = 'com.watabou.geom.polygons.PolyBounds';
      Wh.rect = function (a) {
        for (
          var b = Infinity, d = Infinity, f = -Infinity, g = -Infinity, k = 0;
          k < a.length;

        ) {
          var l = a[k];
          ++k;
          var u = l.x;
          l = l.y;
          u < b && (b = u);
          l < d && (d = l);
          u > f && (f = u);
          l > g && (g = l);
        }
        return new ja(b, d, f - b, g - d);
      };
      var nf = function () {};
      h['com.watabou.geom.polygons.PolyCore'] = nf;
      nf.__name__ = 'com.watabou.geom.polygons.PolyCore';
      nf.area = function (a) {
        for (
          var b = a.length,
            d = a[b - 1],
            f = a[0],
            g = d.x * f.y - f.x * d.y,
            k = 1;
          k < b;

        ) {
          var l = k++;
          d = f;
          f = a[l];
          g += d.x * f.y - f.x * d.y;
        }
        return 0.5 * g;
      };
      nf.$length = function (a) {
        for (var b = 0, d = 1, f = a.length; d < f; ) {
          var g = d++;
          b += I.distance(a[g - 1], a[g]);
        }
        return b;
      };
      nf.center = function (a) {
        for (var b = a.length, d = a[0].clone(), f = 1; f < b; ) {
          var g = f++;
          g = a[g];
          d.x += g.x;
          d.y += g.y;
        }
        a = 1 / b;
        d.x *= a;
        d.y *= a;
        return d;
      };
      var nd = function () {};
      h['com.watabou.geom.polygons.PolyCreate'] = nd;
      nd.__name__ = 'com.watabou.geom.polygons.PolyCreate';
      nd.rect = function (a, b) {
        a /= 2;
        b /= 2;
        return [new I(-a, -b), new I(a, -b), new I(a, b), new I(-a, b)];
      };
      nd.regular = function (a, b, d) {
        null == d && (d = 0);
        for (var f = [], g = 0; g < a; ) {
          var k = g++;
          f.push(I.polar(b, d + (2 * Math.PI * k) / a));
        }
        return f;
      };
      nd.stripe = function (a, b, d) {
        null == d && (d = 1);
        var f = b / 2,
          g = a.length;
        b = [];
        var k = [],
          l = a[0],
          u = a[1],
          p = u.subtract(l);
        p.normalize(1);
        if (0 < d) {
          var h = new I(p.x * f, p.y * f),
            r = new I(-h.y, h.x);
          l = l.subtract(new I(h.x * d, h.y * d));
          b.unshift(l.subtract(r));
          k.unshift(l.add(r));
        } else {
          var n = new I(p.x * f, p.y * f);
          r = new I(-n.y, n.x);
          b.unshift(l.subtract(r));
          k.unshift(l.add(r));
        }
        r = 1;
        for (--g; r < g; )
          ((h = r++),
            (l = u),
            (u = a[h + 1]),
            (n = p),
            (p = u.subtract(l)),
            p.normalize(1),
            (h = n.x * p.x + n.y * p.y),
            (n = n.add(p)),
            (n = new I(-n.y, n.x)),
            n.normalize(f * Math.sqrt(2 / (1 + h))),
            b.push(l.subtract(n)),
            k.push(l.add(n)));
        0 < d
          ? ((h = new I(p.x * f, p.y * f)),
            (r = new I(-h.y, h.x)),
            (a = u.add(new I(h.x * d, h.y * d))),
            b.push(a.subtract(r)),
            k.push(a.add(r)))
          : ((n = new I(p.x * f, p.y * f)),
            (r = new I(-n.y, n.x)),
            b.push(u.subtract(r)),
            k.push(u.add(r)));
        return b.concat(la.revert(k));
      };
      var $f = function () {};
      h['com.watabou.geom.polygons.PolyCut'] = $f;
      $f.__name__ = 'com.watabou.geom.polygons.PolyCut';
      $f.pierce = function (a, b, d) {
        for (
          var f = b.x,
            g = b.y,
            k = d.x - f,
            l = d.y - g,
            u = a.length,
            p = [],
            h = 0,
            r = u;
          h < r;

        ) {
          var n = h++,
            t = a[n];
          n = a[(n + 1) % u];
          var E = t.x;
          t = t.y;
          t = Ub.intersectLines(f, g, k, l, E, t, n.x - E, n.y - t);
          null != t && 0 <= t.y && 1 >= t.y && p.push(t.x);
        }
        p.sort(function (a, b) {
          a -= b;
          return 0 == a ? 0 : 0 > a ? -1 : 1;
        });
        h = [];
        for (r = 0; r < p.length; ) ((t = p[r]), ++r, h.push(Ub.lerp(b, d, t)));
        return h;
      };
      $f.insetEq = function (a, b) {
        var d = a.length,
          f = a[d - 2],
          g = a[d - 1],
          k = g.subtract(f);
        k.normalize(1);
        for (var l = [], u = 0; u < d; ) {
          var p = u++;
          f = g;
          g = a[p];
          p = k;
          k = g.subtract(f);
          k.normalize(1);
          var h = p.add(k);
          h = new I(-h.y, h.x);
          p = p.x * k.x + p.y * k.y;
          -0.999 < p
            ? (h.normalize(b / Math.sqrt((1 + p) / 2)), l.push(f.add(h)))
            : l.push(f);
        }
        return l;
      };
      var Sd = function () {};
      h['com.watabou.geom.polygons.PolyTransform'] = Sd;
      Sd.__name__ = 'com.watabou.geom.polygons.PolyTransform';
      Sd.translate = function (a, b, d) {
        for (var f = [], g = 0; g < a.length; ) {
          var k = a[g];
          ++g;
          f.push(new I(k.x + b, k.y + d));
        }
        return f;
      };
      Sd.asTranslate = function (a, b, d) {
        for (var f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          g.x += b;
          g.y += d;
        }
      };
      Sd.rotateYX = function (a, b, d) {
        for (var f = [], g = 0; g < a.length; ) {
          var k = a[g];
          ++g;
          f.push(new I(k.x * d - k.y * b, k.y * d + k.x * b));
        }
        return f;
      };
      Sd.asRotateYX = function (a, b, d) {
        for (var f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          g.setTo(g.x * d - g.y * b, g.y * d + g.x * b);
        }
      };
      var li = function () {
        this.complete = new Kd();
      };
      h['com.watabou.processes.Process'] = li;
      li.__name__ = 'com.watabou.processes.Process';
      li.prototype = {
        onComplete: function (a) {
          null != a && this.complete.add(a);
          return this;
        },
        __class__: li,
      };
      var Oe = function () {
        this.complete = new Kd();
      };
      h['com.watabou.processes.Tweener'] = Oe;
      Oe.__name__ = 'com.watabou.processes.Tweener';
      Oe.create = function (a, b) {
        var d = new Oe();
        d.time = a;
        d.updateCallback = b;
        return d;
      };
      Oe.run = function (a, b) {
        a = Oe.create(a, b);
        a.start();
        return a;
      };
      Oe.__super__ = li;
      Oe.prototype = w(li.prototype, {
        start: function () {
          this.passed = 0;
          this.paused = !1;
          this.updateCallback(0);
          return this.resume();
        },
        stop: function () {
          return this.pause();
        },
        resume: function () {
          Cb.get_tick().add(m(this, this.update));
          this.paused = !1;
          return this;
        },
        pause: function () {
          Cb.get_tick().remove(m(this, this.update));
          this.paused = !0;
          return this;
        },
        update: function (a) {
          this.paused ||
            ((this.passed += a) < this.time
              ? this.updateCallback(this.passed / this.time)
              : (this.updateCallback(1),
                this.stop(),
                this.complete.dispatch()));
        },
        __class__: Oe,
      });
      var ud = function () {};
      h['com.watabou.system.Exporter'] = ud;
      ud.__name__ = 'com.watabou.system.Exporter';
      ud.saveBinary = function (a, b, d) {
        b = ud.fixName(b);
        a = Cd.toArrayBuffer(a);
        window.saveAs(new Blob([a], { type: d }), b, !0);
      };
      ud.saveText = function (a, b, d) {
        b = ud.fixName(b);
        window.saveAs(new Blob([a], { type: d }), b, !0);
      };
      ud.savePNG = function (a, b) {
        a = a.encode(a.rect, new mi());
        ud.saveBinary(a, b + '.png', 'image/png');
      };
      ud.fixName = function (a) {
        return new xa("[ ']", 'g').split(a.toLowerCase()).join('_');
      };
      var Wa = function () {};
      h['com.watabou.system.State'] = Wa;
      Wa.__name__ = 'com.watabou.system.State';
      Wa.so = null;
      Wa.data = null;
      Wa.init = function (a, b) {
        null == Wa.so &&
          (null == a && (a = A.current.meta.h.packageName),
          (Wa.so = Pc.getLocal(a)),
          (Wa.data = Wa.so.data),
          null != b && 0 == N.fields(Wa.data).length && b(Wa.data));
      };
      Wa.get = function (a, b) {
        Wa.init();
        return Object.prototype.hasOwnProperty.call(Wa.data, a)
          ? Wa.data[a]
          : b;
      };
      Wa.set = function (a, b) {
        Wa.init();
        Wa.data[a] = b;
        Wa.so.flush();
      };
      var fb = function () {};
      h['com.watabou.system.URLState'] = fb;
      fb.__name__ = 'com.watabou.system.URLState';
      fb.data = null;
      fb.init = function () {
        if (null == fb.data) {
          fb.data = {};
          var a = new URLSearchParams(D.location.search);
          null != a &&
            a.forEach(function (a, d) {
              return (fb.data[d] = a);
            });
        }
      };
      fb.reset = function () {
        fb.data = {};
        fb.update();
      };
      fb.get = function (a, b) {
        fb.init();
        return Object.prototype.hasOwnProperty.call(fb.data, a)
          ? fb.data[a]
          : b;
      };
      fb.getInt = function (a, b) {
        null == b && (b = 0);
        fb.init();
        return Object.prototype.hasOwnProperty.call(fb.data, a)
          ? G.parseInt(fb.data[a])
          : b;
      };
      fb.set = function (a, b) {
        fb.init();
        fb.data[a] = b;
        fb.update();
      };
      fb.getParams = function () {
        for (var a = '', b = fb.data, d = N.fields(b), f = 0; f < d.length; ) {
          var g = d[f++];
          a += ('' == a ? '?' : '&') + ('' + g + '=' + G.string(b[g]));
        }
        return a;
      };
      fb.getURL = function () {
        return fb.baseURL + fb.getParams();
      };
      fb.update = function () {
        window.history.replaceState(fb.data, '', fb.getParams());
      };
      var Yj = function (a, b, d) {
        null == b && (b = -1);
        var f = a.length;
        this.columns = a;
        this.door = b;
        this.windows = d;
        d = b / (f - 1);
        null == d && (d = 0.5);
        this.signLeft = !(
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 <
          d
        );
        this.sections = [];
        var g = 0;
        do {
          var k = a[g];
          d = g;
          for (var l = f + 1; d < l; ) {
            var u = d++;
            if (u == f || a[u] != k) {
              d = new Re(this, u - g, k);
              this.sections.push(d);
              g = u;
              break;
            }
          }
        } while (g < f);
        d = 1;
        for (l = this.sections.length; d < l; )
          ((u = d++),
            (this.sections[u].prev = this.sections[u - 1]),
            (this.sections[u - 1].next = this.sections[u]));
        d = 0;
        for (l = this.sections; d < l.length; ) ((u = l[d]), ++d, u.init());
        d = 0.3333333333333333;
        null == d && (d = 0.5);
        if ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < d) {
          d = [];
          l = 0;
          for (g = this.sections; l < g.length; )
            ((k = g[l]), ++l, 1 == k.gableSize && d.push(k));
          g = d;
          if (0 < g.length) {
            u = la.max(g, function (a) {
              return a.height;
            }).height;
            d = [];
            for (l = 0; l < g.length; )
              ((k = g[l]), ++l, k.height == u && d.push(k));
            la.random(d).spire = !0;
          }
        }
        d = 1;
        null == d && (d = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < d &&
          ((a = 1 < a[b]),
          (d = 0 != b && b != this.get_width() - 1),
          (this.lamps = a && d ? 1 : a ? 1 : d ? 2 : 0),
          -1 != b && (x.lamps = this.lamps));
        d = 0.2;
        a = this.getSection(b);
        null == a && (d = 0);
        (0 != b && b != f - 1) || 1 != a.height || (d *= 0.5);
        null == d && (d = 0.5);
        (this.porch =
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < d) &&
          1 == a.height &&
          (a.dormers = !1);
        null != a && (x.porch = this.porch);
      };
      h['com.watabou.tinypubs.model.Facade'] = Yj;
      Yj.__name__ = 'com.watabou.tinypubs.model.Facade';
      Yj.prototype = {
        get_width: function () {
          return this.columns.length;
        },
        getSection: function (a) {
          for (var b = 0, d = 0, f = this.sections; d < f.length; ) {
            var g = f[d];
            ++d;
            if (a >= b && a < b + g.width) return g;
            b += g.width;
          }
          return null;
        },
        hasWindow: function (a, b) {
          if (null == this.windows) return 0 >= b ? a != this.door : !0;
          for (var d = 0, f = this.windows; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.x == a && g.y == b) return !0;
          }
          return !1;
        },
        __class__: Yj,
        __properties__: { get_width: 'get_width' },
      };
      var Re = function (a, b, d) {
        this.chimney = -1;
        this.facade = a;
        this.width = b;
        this.height = d;
        this.next = this.prev = null;
      };
      h['com.watabou.tinypubs.model.Section'] = Re;
      Re.__name__ = 'com.watabou.tinypubs.model.Section';
      Re.prototype = {
        getPos: function () {
          return null == this.prev ? 0 : this.prev.getPos() + this.prev.width;
        },
        init: function () {
          this.gableSize = this.gablePos = 0;
          this.leftLower = null == this.prev || this.prev.height < this.height;
          this.rightLower = null == this.next || this.next.height < this.height;
          this.leftLower && this.rightLower
            ? 2 >= this.width
              ? ((this.gableSize = this.width), (this.gablePos = 0))
              : ((this.gableSize = 2),
                (this.gablePos = Math.floor(
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                    (this.width - this.gableSize + 1),
                )))
            : this.leftLower
              ? 2 < this.width &&
                ((this.gableSize = 2),
                (this.gablePos = Math.floor(
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                    (this.width - this.gableSize),
                )))
              : this.rightLower
                ? 2 < this.width &&
                  ((this.gableSize = 2),
                  (this.gablePos = Math.floor(
                    1 +
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) *
                        (this.width - this.gableSize + 1 - 1),
                  )))
                : 4 <= this.width &&
                  ((this.gableSize = 2),
                  (this.gablePos = Math.floor(
                    1 +
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) *
                        (this.width - this.gableSize - 1),
                  )));
          if (0 < this.gableSize) {
            var a = (this.width - 2) / this.facade.get_width();
            null == a && (a = 0.5);
            a = (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a;
          } else a = !1;
          a && (this.gableSize = this.gablePos = 0);
          this.gableWallLeft = this.leftLower;
          this.gableWallRight = this.rightLower;
          0 < this.gableSize &&
            ((this.gableWallLeft = this.gableWallLeft && 0 < this.gablePos),
            (this.gableWallRight =
              this.gableWallRight &&
              this.gablePos + this.gableSize < this.width));
          a = 2 / (this.height + 2);
          null == a && (a = 0.5);
          this.dormers =
            (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a;
        },
        addChimney: function () {
          var a = la.random([
            Re.gold,
            Re.gold,
            Re.gold,
            0.3333333333333333,
            0.3333333333333333,
            0.5,
          ]);
          this.dormers && (a = Re.gold);
          if (0 == this.gableSize)
            a =
              this.width *
              (this.leftLower && this.rightLower
                ? (this.chimney = la.random([a, 1 - a]))
                : this.leftLower
                  ? (this.chimney = a)
                  : this.rightLower
                    ? (this.chimney = 1 - a)
                    : this.prev.height < this.next.height
                      ? a
                      : 1 - a);
          else if (0 == this.gablePos)
            a =
              this.gableSize / 2 + (this.width - this.gableSize / 2) * (1 - a);
          else if (this.gablePos + this.gableSize == this.width)
            a *= this.width - this.gableSize / 2;
          else {
            var b = this.gablePos + this.gableSize / 2,
              d = this.width - this.gablePos - this.gableSize / 2;
            a =
              this.leftLower && !this.rightLower
                ? b * a
                : this.rightLower && !this.leftLower
                  ? this.width - d * a
                  : b > d ||
                      (b == d &&
                        0.5 >
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647)
                    ? b * a
                    : this.width - d * a;
          }
          this.chimney = a;
        },
        getPinnacle: function () {
          var a = x.baseHeight + this.height * x.floorHeight;
          a += (this.gableSize / 2) * x.columnWidth * x.roofSlope;
          if (null != x.gableEnds) {
            var b = x.gableEnds;
            a += b.height;
            1 < this.gableSize && (a += b.capHeight);
            if (0 < b.step) {
              var d = this.gableSize * x.columnWidth;
              a += ((d / (Math.floor(d / b.step) | 1)) * x.roofSlope) / 2;
            }
          }
          null != x.gableRoof &&
            (a += x.gableRoof.thickness / Math.cos(Math.atan(x.roofSlope)));
          null != x.hipRoof && (a += x.hipRoof.eave * x.roofSlope);
          return a;
        },
        __class__: Re,
      };
      var mk = function () {
        this.merlon = x.nml(12, 20);
        this.crenel = this.merlon * x.nml(0.6, 1);
        this.height = this.merlon * x.nml(0.6, 1.2);
        var a = x.nml(-0.7, 0.7);
        this.point = this.height * (0 < a ? a : -a * a);
        2 > Math.abs(this.point) && (this.point = 0);
      };
      h['com.watabou.tinypubs.params.CastellatedRoofData'] = mk;
      mk.__name__ = 'com.watabou.tinypubs.params.CastellatedRoofData';
      mk.prototype = { __class__: mk };
      var nk = function () {
        this.w0 = 8 + 8 * x.nml2();
        this.w1 = this.w0 * (1 + x.nml(0, 0.4));
        this.h0 =
          Math.min(x.floorHeight, x.columnWidth * x.roofSlope) *
          (0.2 + 0.6 * x.nml2());
        this.h1 = this.w1 * (0.2 + x.nml2());
      };
      h['com.watabou.tinypubs.params.ChimneyData'] = nk;
      nk.__name__ = 'com.watabou.tinypubs.params.ChimneyData';
      nk.prototype = { __class__: nk };
      var x = function () {};
      h['com.watabou.tinypubs.params.Dimensions'] = x;
      x.__name__ = 'com.watabou.tinypubs.params.Dimensions';
      x.gableEnds = null;
      x.gableRoof = null;
      x.hipRoof = null;
      x.castel = null;
      x.window = null;
      x.gableWin = null;
      x.dormer = null;
      x.door = null;
      x.porch = null;
      x.lamps = null;
      x.chimney = null;
      x.sign = null;
      x.lamp = null;
      x.spire = null;
      x.roof = null;
      x.stonework = null;
      x.fachwerk1 = null;
      x.fachwerk2 = null;
      x.random = function () {
        x.columnWidth = x.nml(35, 45);
        x.floorHeight = x.nml(50, 70);
        x.roofSlope = Math.sin(
          (Math.PI / 2) * x.nml(0.3333333333333333, 0.6666666666666666),
        );
        x.window = [new Xd()];
        var a = 0.6666666666666666;
        null == a && (a = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a &&
          (x.window.push(new Xd()),
          (a = 0.25),
          null == a && (a = 0.5),
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a &&
            x.window.push(new Xd()));
        if (null != x.castel) {
          a = 0;
          for (var b = x.window; a < b.length; ) {
            var d = b[a];
            ++a;
            d.width *= 0.7;
            d.height *= 0.9;
          }
        }
        x.baseThickness = x.nml(0, 4);
        1 > x.baseThickness && (x.baseThickness = 0);
        x.baseHeight =
          0.5 *
          x.floorHeight *
          Math.abs(
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              2 -
              1,
          );
        5 > x.baseHeight && ((x.baseHeight = 0), (x.baseThickness = 0));
        a = x.floorHeight - (x.window[0].height + 2 * x.window[0].frame);
        x.apronHeight =
          (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) * a) / 2;
        x.apronHeight > 0.5 * x.floorHeight - x.baseHeight &&
          (x.apronHeight = 0.5 * x.floorHeight - x.baseHeight);
        5 > x.apronHeight && (x.apronHeight = 0);
        x.gableEnds = null;
        x.gableRoof = null;
        x.hipRoof = null;
        x.castel = null;
        x.fortified
          ? ((x.castel = new mk()),
            (x.roofSlope = Math.tan((Math.PI / 2) * x.rnd(0, 0.7))),
            x.roofSlope * x.columnWidth < x.castel.height && (x.roofSlope = 0))
          : ((x.hipRoof = new ok()),
            (x.roofSlope = Math.tan((Math.PI / 2) * x.rnd(0.25, 0.75))));
        x.door = new pk();
        x.gableWin = new qk();
        x.dormer = new rk();
        x.chimney = new nk();
        x.sign = new sk();
        x.lamp = new tk();
        x.spire = new uk();
        a = 0.75;
        null == a && (a = 0.5);
        x.roof =
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
            ? new ni()
            : new oi();
        a = x.baseHeight / 20;
        null == a && (a = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
          ? (x.stonework = new pi())
          : (x.stonework = null);
        x.fortified
          ? (a = !1)
          : ((a = 0.1),
            null == a && (a = 0.5),
            (a =
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a));
        a
          ? ((x.fachwerk1 = new qi()),
            (x.fachwerk2 =
              0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647
                ? new qi()
                : null))
          : ((x.fachwerk1 = null), (x.fachwerk2 = null));
        x.porch = !1;
      };
      x.rnd = function (a, b) {
        return (
          a +
          (b - a) * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647)
        );
      };
      x.nml = function (a, b) {
        return (
          a +
          (b - a) *
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3)
        );
      };
      x.nml2 = function () {
        return Math.pow(
          ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
            (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
            (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
            3,
          2,
        );
      };
      var pk = function () {
        this.cap = 0;
        this.height = 35;
        this.width = 16;
        this.width = x.nml(12, 20);
        this.height = this.width * x.nml(2, 2.5);
        var a = (x.floorHeight + x.window[0].height) / 2;
        this.height < a && (this.height = a);
        a = this.width / this.height;
        null == a && (a = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
          ? ((this.cap =
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            0.2 > this.cap ? (this.cap = 0) : 0.9 < this.cap && (this.cap = 1),
            (this.cap *= this.width / 2))
          : (this.cap = 0);
      };
      h['com.watabou.tinypubs.params.DoorData'] = pk;
      pk.__name__ = 'com.watabou.tinypubs.params.DoorData';
      pk.prototype = {
        getPorchWidth: function () {
          return (this.getWidth() + x.columnWidth) / 2;
        },
        getFrame: function () {
          if (0 == x.apronHeight) return x.window[0].frame;
          for (var a = 0, b = x.window; a < b.length; ) {
            var d = b[a];
            ++a;
            if (0 < d.frame) return d.frame;
          }
          return null != x.stonework ? 3 : 0;
        },
        getHeight: function () {
          return this.height + this.getFrame();
        },
        getWidth: function () {
          return this.width + 2 * this.getFrame();
        },
        __class__: pk,
      };
      var rk = function () {
        this.window = new Xd();
        this.window.frame = 0;
        this.window.scale(1, 0.8333333333333334);
        this.border = x.nml(3, 6);
        this.slope =
          x.roofSlope *
          (1 -
            Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ));
        this.gable = this.slope * (this.window.width / 2 + this.border);
        this.borderT = this.border * Math.sin(Math.atan(1 / this.slope));
        this.top = this.window.height / 2 + this.borderT + this.gable;
        this.bottom = this.window.height / 2 + this.border;
        var a = this.bottom / (x.floorHeight / 2);
        null == a && (a = 0.5);
        this.wall =
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a;
      };
      h['com.watabou.tinypubs.params.DormerData'] = rk;
      rk.__name__ = 'com.watabou.tinypubs.params.DormerData';
      rk.prototype = { __class__: rk };
      var qi = function () {
        switch (
          Math.floor(
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) * 10,
          )
        ) {
          case 0:
            var a = [
              [0, 0, 1, 3],
              [1, 0, 2, 1],
              [1, 2, 2, 3],
            ];
            break;
          case 1:
            a = [
              [0, 0, 3, 1],
              [0, 1, 1, 2],
              [0, 2, 3, 3],
            ];
            break;
          case 2:
            a = [
              [0, 0, 3, 1],
              [0, 1, 1, 3],
              [1, 2, 2, 3],
            ];
            break;
          case 3:
            a = [
              [0, 0, 1, 2],
              [1, 0, 2, 1],
              [0, 2, 3, 3],
            ];
            break;
          case 4:
            a = [
              [0, 0, 3, 1],
              [0, 1, 1, 2],
              [0, 2, 1, 3],
              [1, 2, 2, 3],
            ];
            break;
          case 5:
            a = [
              [0, 0, 1, 1],
              [1, 0, 2, 1],
              [0, 1, 1, 2],
              [0, 2, 3, 3],
            ];
            break;
          case 6:
            a = [
              [0, 0, 1, 1],
              [1, 0, 2, 1],
              [0, 1, 1, 3],
              [1, 2, 2, 3],
            ];
            break;
          case 7:
            a = [
              [0, 0, 1, 2],
              [1, 0, 2, 1],
              [0, 2, 1, 3],
              [1, 2, 2, 3],
            ];
            break;
          default:
            a = [
              [0, 0, 1, 1],
              [1, 0, 2, 1],
              [0, 1, 1, 2],
              [0, 2, 1, 3],
              [1, 2, 2, 3],
            ];
        }
        do {
          this.pieces = [];
          for (var b = 0; b < a.length; ) {
            var d = a[b];
            ++b;
            var f = 3 == d[0] + d[2];
            0 < d[0] && this.pieces.push([d[0], d[1], d[0], d[3]]);
            0 < d[1] && this.pieces.push([d[0], d[1], d[2], d[1]]);
            f ||
              (this.pieces.push([d[0] + 2, d[1], d[0] + 2, d[3]]),
              0 < d[1] && this.pieces.push([d[0] + 2, d[1], d[2] + 2, d[1]]));
            if (f)
              1 ==
                Math.floor(
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                    2,
                ) &&
                (this.pieces.push([d[0], d[1], d[2], d[3]]),
                this.pieces.push([d[0], d[3], d[2], d[1]]));
            else
              switch (
                Math.floor(
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) *
                    4,
                )
              ) {
                case 1:
                  this.pieces.push([d[0], d[1], d[2], d[3]]);
                  this.pieces.push([d[0], d[3], d[2], d[1]]);
                  this.pieces.push([d[0] + 2, d[1], d[2] + 2, d[3]]);
                  this.pieces.push([d[0] + 2, d[3], d[2] + 2, d[1]]);
                  break;
                case 2:
                  this.pieces.push([d[0], d[1], d[2], d[3]]);
                  this.pieces.push([d[0] + 2, d[3], d[2] + 2, d[1]]);
                  break;
                case 3:
                  (this.pieces.push([d[0], d[3], d[2], d[1]]),
                    this.pieces.push([d[0] + 2, d[1], d[2] + 2, d[3]]));
              }
          }
        } while (6 > this.pieces.length || 16 < this.pieces.length);
      };
      h['com.watabou.tinypubs.params.FachwerkData'] = qi;
      qi.__name__ = 'com.watabou.tinypubs.params.FachwerkData';
      qi.prototype = {
        getSegments: function (a, b, d, f, g) {
          a = [-a, -d, d, a];
          b = [-b, -f, f, b];
          f = [];
          d = 0;
          for (var k = this.pieces; d < k.length; ) {
            var l = k[d];
            ++d;
            (!g || (3 > l[1] && 3 > l[3])) &&
              f.push([a[l[0]], b[l[1]], a[l[2]], b[l[3]]]);
          }
          return f;
        },
        __class__: qi,
      };
      var rl = function () {
        this.capHeight = 8;
        this.capWidth = 6;
        this.step = 0;
        this.height = 4;
        this.thickness = 6;
        this.thickness = x.nml(5, 8);
        this.height = x.nml(2, 6);
        this.capWidth = this.thickness * Math.max(1, x.nml(0.5, 1.5));
        this.capHeight = this.height * Math.pow(2, x.nml(0, 2));
        var a = this.capHeight / this.thickness;
        null == a && (a = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a ||
          (this.capHeight = 0);
        a = (x.roofSlope * x.roofSlope) / 5;
        null == a && (a = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
          ? ((this.step = 4 + 4 * Math.pow(x.nml(0, 1), 2)), (this.height = 0))
          : (this.step = 0);
      };
      h['com.watabou.tinypubs.params.GableEndsData'] = rl;
      rl.__name__ = 'com.watabou.tinypubs.params.GableEndsData';
      rl.prototype = { __class__: rl };
      var sl = function () {
        this.thickness =
          2 +
          4 *
            Math.pow(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3,
              2,
            );
        this.rake =
          x.baseThickness +
          8 *
            (this.thickness - x.baseThickness) *
            Math.pow(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3,
              2,
            );
      };
      h['com.watabou.tinypubs.params.GableRoofData'] = sl;
      sl.__name__ = 'com.watabou.tinypubs.params.GableRoofData';
      sl.prototype = { __class__: sl };
      var qk = function () {
        if (0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) {
          this.window = new Xd();
          this.window.frame = 0;
          var a = 0.6666666666666666;
          null == a && (a = 0.5);
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
            ? (this.window.scale(1, 0.5), (this.distance = 0))
            : (this.window.scale(0.5, 0.6666666666666666),
              (this.distance =
                this.window.width *
                (1 +
                  2 *
                    (((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      3))),
              2 * this.window.frame > this.distance - this.window.width &&
                (this.window.frame = 0));
          this.window.cap = Math.min(2 * this.window.cap, this.window.height);
        } else
          ((a = x.window),
            (this.distance = Math.max(a[a.length - 1].width / 3, 5)));
      };
      h['com.watabou.tinypubs.params.GableWindow'] = qk;
      qk.__name__ = 'com.watabou.tinypubs.params.GableWindow';
      qk.prototype = { __class__: qk };
      var ok = function () {
        this.eave =
          8 *
          x.baseThickness *
          Math.pow(
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3,
            2,
          );
        3 > this.eave && (this.eave = 3);
      };
      h['com.watabou.tinypubs.params.HipRoofData'] = ok;
      ok.__name__ = 'com.watabou.tinypubs.params.HipRoofData';
      ok.prototype = { __class__: ok };
      var tk = function () {
        this.h1 = 2.5;
        this.h0 = 10;
        this.w1 = 5;
        this.w0 = 2.5;
        this.w0 =
          2 +
          Math.pow(
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3,
            2,
          );
        this.w1 =
          this.w0 *
          (1 +
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3);
        this.h1 =
          2 +
          Math.pow(
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3,
            2,
          );
        this.h0 = Math.min(
          this.h1 *
            (3 +
              2 *
                (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                  3)),
          5 * this.w0,
        );
      };
      h['com.watabou.tinypubs.params.LampData'] = tk;
      tk.__name__ = 'com.watabou.tinypubs.params.LampData';
      tk.prototype = { __class__: tk };
      var sk = function () {
        this.hanging = !0;
        this.round = !1;
        this.e = this.f = 0;
        this.d = 5;
        this.c = 20;
        this.b = 15;
        this.a = 25;
        this.a =
          24 +
          5 *
            Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            );
        this.b =
          15 +
          5 *
            Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            );
        this.c =
          this.b *
          (1 +
            Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ));
        this.d =
          4 +
          5 *
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3);
        var a = (this.c - this.b) / this.b,
          b = Math.sqrt(a);
        null == b && (b = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b &&
          ((a = Math.min(
            Math.pow(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3,
              2,
            ),
            2 * a,
          )),
          0.1 <= a &&
            ((this.round =
              0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
            (this.e = 0.5 * this.b * a)));
        b = 0.8;
        null == b && (b = 0.5);
        (this.hanging =
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b)
          ? ((this.f =
              6 *
              Math.sqrt(
                ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                  3,
              )),
            4 > this.f && (this.f = 0))
          : (this.f = 0);
        this.sl = this.f + (this.a - this.b) / 2;
        this.sr = this.sl + this.b;
        this.sc = this.sl + this.b / 2;
        this.st = this.d;
        this.sb = this.d + this.c - this.e;
      };
      h['com.watabou.tinypubs.params.SignData'] = sk;
      sk.__name__ = 'com.watabou.tinypubs.params.SignData';
      sk.prototype = { __class__: sk };
      var uk = function () {
        this.length =
          (x.floorHeight + x.columnWidth * x.roofSlope) /
          (2 +
            2 *
              (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3));
        var a = 0.6666666666666666;
        null == a && (a = 0.5);
        this.ball =
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a;
        this.cross =
          0.5 > (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647;
        a = 0.3333333333333333;
        null == a && (a = 0.5);
        this.pike =
          (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a;
        a = 0.8;
        null == a && (a = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
          ? ((this.nsew = x.nml(6, 10)), (this.arrow = x.nml(6, 12)))
          : (this.arrow = this.nsew = 0);
      };
      h['com.watabou.tinypubs.params.SpireData'] = uk;
      uk.__name__ = 'com.watabou.tinypubs.params.SpireData';
      uk.prototype = { __class__: uk };
      var ze = (K['com.watabou.tinypubs.params.ColorMode'] = {
        __ename__: 'com.watabou.tinypubs.params.ColorMode',
        __constructs__: null,
        LINEWORK: {
          _hx_name: 'LINEWORK',
          _hx_index: 0,
          __enum__: 'com.watabou.tinypubs.params.ColorMode',
          toString: q,
        },
        COLORIZED: {
          _hx_name: 'COLORIZED',
          _hx_index: 1,
          __enum__: 'com.watabou.tinypubs.params.ColorMode',
          toString: q,
        },
        DARK: {
          _hx_name: 'DARK',
          _hx_index: 2,
          __enum__: 'com.watabou.tinypubs.params.ColorMode',
          toString: q,
        },
        VIVID: {
          _hx_name: 'VIVID',
          _hx_index: 3,
          __enum__: 'com.watabou.tinypubs.params.ColorMode',
          toString: q,
        },
        NIGHT: {
          _hx_name: 'NIGHT',
          _hx_index: 4,
          __enum__: 'com.watabou.tinypubs.params.ColorMode',
          toString: q,
        },
        INHERITED: {
          _hx_name: 'INHERITED',
          _hx_index: 5,
          __enum__: 'com.watabou.tinypubs.params.ColorMode',
          toString: q,
        },
      });
      ze.__constructs__ = [
        ze.LINEWORK,
        ze.COLORIZED,
        ze.DARK,
        ze.VIVID,
        ze.NIGHT,
        ze.INHERITED,
      ];
      var L = function () {};
      h['com.watabou.tinypubs.params.Style'] = L;
      L.__name__ = 'com.watabou.tinypubs.params.Style';
      L.setDark = function () {
        L.mode = ze.DARK;
        L.colorInk = 2236962;
        L.colorBg = 13685460;
        L.colorWall = Ya.hsl(
          60 +
            20 *
              ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1),
          0.1 *
            Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
          0.6 +
            0.1 *
              (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3),
        );
        L.colorRoof = Ya.hsl(
          220 +
            30 *
              ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1),
          0.3 *
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3),
          0.35 +
            0.15 *
              (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3),
        );
        L.colorBase = Ya.lerp(
          L.colorWall,
          Ya.grey(
            0.5 +
              0.1 *
                (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                  (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                  3),
          ),
        );
        L.colorStairs = Ya.scale(L.colorBase, 0.95);
        L.colorDoor = Ya.hsl(
          35 +
            20 *
              ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1),
          0.2 *
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3),
          0.4 +
            0.1 *
              ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1),
        );
        L.colorWindow = 3290166;
        L.colorFrame = Ya.scale(
          L.colorWall,
          1 +
            0.3 *
              ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1),
        );
        L.colorGrass = 4478242;
        L.colorLamp = Ya.lerp(L.colorWall, 16772778);
        L.colorSign1 = Ya.hsl(
          360 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
          0.3,
          0.3,
        );
        L.colorSign2 = 16777215;
        L.strokeNormal = 1.6;
        L.strokeFine = 1;
      };
      L.setInherited = function () {
        L.mode = ze.INHERITED;
        for (
          var a = Q.colorPaper,
            b = Ya.brightness(a),
            d = [],
            f = 0,
            g = ib.getClassFields(Q);
          f < g.length;

        ) {
          var k = g[f];
          ++f;
          'color' == M.substr(k, 0, 5) &&
            ((k = N.field(Q, k)), k != a && d.push(k));
        }
        var l = d,
          u = [];
        g = [];
        f = a;
        for (d = 0; d < l.length; ) {
          k = l[d];
          ++d;
          var p = Ya.brightness(k);
          p > b && u.push(k);
          p < b && k != Q.colorInk && g.push(k);
          p < Ya.brightness(f) && (f = k);
        }
        b =
          0 < u.length
            ? la.min(u, function (a) {
                return Ya.brightness(a);
              })
            : a;
        a =
          0 < g.length
            ? la.max(g, function (a) {
                return Ya.brightness(a);
              })
            : a;
        L.colorInk = Q.colorInk;
        L.colorBg = Q.colorPaper;
        L.colorWall = b;
        L.colorRoof = a;
        L.colorBase = a;
        L.colorStairs = b;
        L.colorDoor = a;
        L.colorWindow = f;
        L.colorFrame = L.colorBg;
        L.colorGrass = L.colorInk;
        L.colorLamp = b;
        L.colorSign1 = b;
        L.colorSign2 = L.colorInk;
        L.strokeNormal = 57.599999999999994 * Q.strokeNormal;
        L.strokeFine = 57.599999999999994 * Q.strokeGrid;
      };
      L.pickContrast = function (a, b, d) {
        d = Ya.brightness(d);
        var f = Ya.brightness(a),
          g = Ya.brightness(b);
        return Math.abs(d - f) > Math.abs(d - g) ? a : b;
      };
      var Xd = function () {
        this.frame = 3;
        this.cap = 0;
        this.height = 18;
        this.width = 10;
        this.width = x.nml(9, 12);
        this.height = this.width * x.nml(1, Xd.maxRatio);
        this.frame = x.nml(0, 5);
        1.5 > this.frame && (this.frame = 0);
        var a = (this.height / this.width - 1) / (Xd.maxRatio - 1),
          b = a * a;
        null == b && (b = 0.5);
        (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < b
          ? ((this.cap =
              a * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647)),
            0.2 > this.cap ? (this.cap = 0) : 0.9 < this.cap && (this.cap = 1),
            (this.cap *= this.width / 2))
          : (this.cap = 0);
        this.scale(1, 1);
      };
      h['com.watabou.tinypubs.params.WindowData'] = Xd;
      Xd.__name__ = 'com.watabou.tinypubs.params.WindowData';
      Xd.prototype = {
        scale: function (a, b) {
          this.width *= a;
          this.height *= b;
          this.cols = Math.round(this.width / 6);
          this.rows = Math.round(this.height / 6);
        },
        clone: function () {
          var a = new Xd();
          a.width = this.width;
          a.height = this.height;
          a.cap = this.cap;
          a.frame = this.frame;
          a.cols = this.cols;
          a.rows = this.rows;
          return a;
        },
        __class__: Xd,
      };
      var rc = function () {};
      h['com.watabou.tinypubs.utils.Brush'] = rc;
      rc.__name__ = 'com.watabou.tinypubs.utils.Brush';
      rc.use = function (a, b, d, f) {
        null == f && (f = 0);
        rc.f = null != a ? a : rc.decay;
        rc.color = b;
        rc.th0 = d;
        rc.th1 = f;
      };
      rc.decay = function (a, b) {
        return rc.th0 * (1 - a / b) + (a / b) * rc.th1;
      };
      rc.stroke = function (a, b) {
        var d = nf.$length(b),
          f = 0,
          g = b[0],
          k = b[1],
          l = k.subtract(g),
          u = l.get_length();
        l.normalize(1);
        var p = rc.f(0, d),
          h = new I(-l.y, l.x),
          r = p / 2;
        h.x *= r;
        h.y *= r;
        var n = [g.add(h)],
          t = [g.subtract(h)];
        r = 2;
        for (var E = b.length; r < E; ) {
          p = r++;
          f += u;
          g = k;
          k = b[p];
          var q = l;
          l = k.subtract(g);
          u = l.get_length();
          l.normalize(1);
          p = rc.f(f, d);
          h = q.add(l);
          h = new I(-h.y, h.x);
          q = Math.sqrt((1 + (q.x * l.x + q.y * l.y)) / 2);
          0.1 > q && (q = 0.1);
          h.normalize(p / 2 / q);
          n.push(g.add(h));
          t.unshift(g.subtract(h));
        }
        p = rc.f(d, d);
        h = new I(-l.y, l.x);
        r = p / 2;
        h.x *= r;
        h.y *= r;
        n.push(k.add(h));
        t.unshift(k.subtract(h));
        a.beginFill(rc.color);
        Ra.drawPolygon(a, n.concat(t));
        a.endFill();
      };
      var Gc = function () {};
      h['com.watabou.tinypubs.utils.Drawing'] = Gc;
      Gc.__name__ = 'com.watabou.tinypubs.utils.Drawing';
      Gc.horArc = function (a, b, d, f, g, k, l) {
        null == l && (l = 0);
        null == k && (k = !0);
        f *= 0.5;
        var u = (f * f + g * g) / (2 * g),
          p = Math.asin(f / u);
        isNaN(p) && (p = Math.PI / 2);
        var h = b;
        d = d - g + u;
        Ra.drawArc(a, h, d, u, (3 * Math.PI) / 2 - p, (3 * Math.PI) / 2 + p, k);
        if (0 == l) return null;
        a = [];
        k = 1;
        for (g = l + 1; k < g; )
          ((b = k++),
            (p = -f),
            (b /= l + 1),
            null == b && (b = 0.5),
            (b = p + (f - p) * b),
            (p = I.polar(u, -Math.acos(b / u))),
            a.push(new I(p.x + h, p.y + d)));
        return a;
      };
      Gc.dashedHor = function (a, b, d, f, g, k) {
        null == k && (k = 0);
        null == g && (g = 0);
        var l = Math.max(Math.abs(f), Math.abs(k)),
          u = (0 != f && 0 != k ? Math.min(Math.abs(f), Math.abs(k)) : l) / 5;
        k = b + f + g + k;
        l = Gc.dashes(u, u, 2 * Math.floor(l / u));
        Ra.dashedLine(a, new I(b, d), new I(k, d), l);
        0 != g && (a.moveTo(b + f, d), a.lineTo(b + f + g, d));
      };
      Gc.dashes = function (a, b, d) {
        null == d && (d = 10);
        for (var f = [], g = 0; g < d; ) {
          var k = g++;
          f.push(
            (0 == (k & 1) ? a : b) *
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
          );
        }
        return f;
      };
      var ri = function () {
        ba.call(this);
        var a = x.chimney.w0 / 2,
          b = x.chimney.w1 / 2,
          d = b - a,
          f = x.chimney.h0,
          g = f + x.chimney.h1,
          k = this.get_graphics(),
          l = a * x.roofSlope;
        k.lineStyle(L.strokeNormal, L.colorInk);
        k.beginFill(L.colorWall);
        k.moveTo(-a, l);
        k.lineTo(-a, -f);
        k.lineTo(-b, -f);
        k.lineTo(-b, -g);
        1.5 < d &&
          (k.lineTo(-a, -g),
          k.lineTo(-a, -g - d),
          k.lineTo(a, -g - d),
          k.lineTo(a, -g));
        k.lineTo(b, -g);
        k.lineTo(b, -f);
        k.lineTo(a, -f);
        k.lineTo(a, l);
        k.endFill();
        k.lineStyle(L.strokeFine, L.colorInk);
        k.moveTo(0.6 * -a, -f);
        k.lineTo(0.6 * a, -f);
        1.5 < d && (k.moveTo(-a, -g), k.lineTo(a, -g));
      };
      h['com.watabou.tinypubs.view.ChimneyView'] = ri;
      ri.__name__ = 'com.watabou.tinypubs.view.ChimneyView';
      ri.__super__ = ba;
      ri.prototype = w(ba.prototype, { __class__: ri });
      var si = function () {
        ba.call(this);
        var a = this.get_graphics(),
          b = x.door.width,
          d = x.door.height,
          f = x.door.cap,
          g = x.door.getFrame(),
          k =
            3 +
            2 *
              (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3),
          l = Math.round(b / k);
        k = b / l;
        if (0 < f) {
          var u = g * (1 - f / (b / 2));
          a.lineStyle(L.strokeFine, L.colorInk);
          a.beginFill(L.colorFrame);
          this.drawShape(b / 2 + g, d - f + u, f + g - u);
          a.endFill();
          a.lineStyle(L.strokeNormal, L.colorInk);
          a.beginFill(L.colorDoor);
          l = this.drawShape(b / 2, d - f, f, l - 1);
          a.endFill();
          a.lineStyle(L.strokeFine, L.colorInk);
          for (f = 0; f < l.length; )
            ((g = l[f]), ++f, a.moveTo(g.x, 0), a.lineTo(g.x, g.y));
        } else
          for (
            a.lineStyle(L.strokeFine, L.colorInk),
              a.beginFill(L.colorFrame),
              a.drawRect(-b / 2 - g, 0, b + 2 * g, -d - g),
              a.lineStyle(L.strokeNormal, L.colorInk),
              a.beginFill(L.colorDoor),
              a.drawRect(-b / 2, 0, b, -d),
              a.endFill(),
              a.lineStyle(L.strokeFine, L.colorInk),
              f = 1;
            f < l;

          )
            ((g = f++), (g = -b / 2 + g * k), a.moveTo(g, 0), a.lineTo(g, -d));
        g = -b / 2 + (4.5 > k ? k : k / 2);
        b = -d / 2;
        a.lineStyle(2, L.colorInk);
        a.moveTo(g, b - 2);
        a.lineTo(g, b + 3);
      };
      h['com.watabou.tinypubs.view.DoorView'] = si;
      si.__name__ = 'com.watabou.tinypubs.view.DoorView';
      si.__super__ = ba;
      si.prototype = w(ba.prototype, {
        drawShape: function (a, b, d, f) {
          null == f && (f = 0);
          var g = this.get_graphics();
          g.moveTo(-a, 0);
          g.lineTo(-a, -b);
          b = Gc.horArc(g, 0, -b, 2 * a, d, !1, f);
          g.lineTo(a, 0);
          return b;
        },
        __class__: si,
      });
      var ti = function () {
        ba.call(this);
        var a = x.dormer.window,
          b = new bg(a);
        this.addChild(b);
        b = this.get_graphics();
        var d = a.width / 2 + x.dormer.border;
        a = a.height / 2;
        var f = [
          new I(-d, a + x.dormer.border),
          new I(-d, -a - x.dormer.borderT),
          new I(0, -x.dormer.top),
          new I(d, -a - x.dormer.borderT),
          new I(d, a + x.dormer.border),
        ];
        b.beginFill(L.colorWall);
        x.dormer.wall
          ? ((f[0].y += L.strokeNormal),
            (f[4].y += L.strokeNormal),
            Ra.drawPolygon(b, f),
            b.endFill(),
            (f[0].y -= L.strokeNormal),
            (f[4].y -= L.strokeNormal),
            b.lineStyle(L.strokeNormal, L.colorInk),
            Ra.drawPolyline(b, f))
          : (b.lineStyle(L.strokeNormal, L.colorInk), Ra.drawPolygon(b, f));
        b.endFill();
        null != x.gableRoof &&
          uf.paintGable(
            b,
            -d,
            a + x.dormer.borderT,
            2 * d,
            x.dormer.gable,
            x.gableRoof.thickness,
          );
      };
      h['com.watabou.tinypubs.view.DormerView'] = ti;
      ti.__name__ = 'com.watabou.tinypubs.view.DormerView';
      ti.__super__ = ba;
      ti.prototype = w(ba.prototype, { __class__: ti });
      var Xh = function () {
        ba.call(this);
      };
      h['com.watabou.tinypubs.view.FacadeView'] = Xh;
      Xh.__name__ = 'com.watabou.tinypubs.view.FacadeView';
      Xh.__super__ = ba;
      Xh.prototype = w(ba.prototype, {
        draw: function (a) {
          this.removeChildren();
          this.get_graphics().clear();
          this.drawSlopes(a);
          this.drawWall(a);
          null != x.gableRoof && this.drawFrontSlopes(a);
          this.drawBase(a);
          this.drawSeparator(a);
          this.drawWindows(a);
          this.drawSpire(a);
          this.drawDoor(a);
        },
        drawBase: function (a) {
          var b = this.get_graphics();
          a = a.get_width() * x.columnWidth;
          var d = x.baseHeight + x.apronHeight;
          b.beginFill(L.colorBase);
          b.drawRect(-x.baseThickness, 0, a + 2 * x.baseThickness, -d);
          b.endFill();
          b.lineStyle(L.strokeNormal, L.colorInk, null, null, null, 2);
          b.moveTo(0, -d);
          b.lineTo(-x.baseThickness, -d);
          b.lineTo(-x.baseThickness, 0);
          b.lineTo(a + x.baseThickness, 0);
          b.lineTo(a + x.baseThickness, -d);
          b.lineTo(a, -d);
          b.endFill();
          if (null != x.stonework)
            x.stonework.rect(
              b,
              -x.baseThickness,
              -d,
              a + 2 * x.baseThickness,
              d,
            );
          else {
            var f = L.strokeNormal + L.strokeFine;
            b.lineStyle(L.strokeFine, L.colorInk);
            b.moveTo(f, -d);
            b.lineTo(a - f, -d);
          }
        },
        drawSlopes: function (a) {
          if (!(0 >= x.roofSlope)) {
            var b = this.get_graphics(),
              d = 0.95 * x.floorHeight;
            null != x.gableEnds && (d += x.gableEnds.height);
            var f = (2 * x.columnWidth * x.roofSlope) / 2;
            null != x.hipRoof && (f += x.hipRoof.eave * x.roofSlope);
            var g = 0;
            for (a = a.sections; g < a.length; ) {
              var k = a[g];
              ++g;
              var l = k.getPos() + 0,
                u = -x.baseHeight - k.height * x.floorHeight,
                p = f < d || (k.leftLower && k.rightLower) ? f : d;
              if (null != x.hipRoof) {
                var h = l * x.columnWidth,
                  r = h + k.width * x.columnWidth,
                  n = new I(h, u),
                  t = new I(r, u);
                1 == k.width && k.leftLower && k.rightLower
                  ? ((n.x -= x.hipRoof.eave),
                    (t.x += x.hipRoof.eave),
                    (h = new I(
                      (n.x + t.x) / 2,
                      u - ((t.x - n.x) / 2) * x.roofSlope,
                    )),
                    x.roof.poly(b, [n, t, h]))
                  : ((r = new I(r, u - p)),
                    (h = new I(h, u - p)),
                    k.rightLower &&
                      ((t.x += x.hipRoof.eave),
                      (r.x += x.hipRoof.eave - p / x.roofSlope)),
                    k.leftLower &&
                      ((n.x -= x.hipRoof.eave),
                      (h.x -= x.hipRoof.eave - p / x.roofSlope)),
                    x.roof.poly(b, [n, t, r, h]));
              } else if (null != x.castel)
                ((h = l * x.columnWidth),
                  (r = h + k.width * x.columnWidth),
                  (n = new I(h, u)),
                  (t = new I(r, u)),
                  (2 >= k.width && k.leftLower && k.rightLower) ||
                    ((r = new I(r, u - p)),
                    (h = new I(h, u - p)),
                    k.rightLower &&
                      ((t.x -= x.columnWidth / 2),
                      (r.x -= x.columnWidth / 2 + p / x.roofSlope)),
                    k.leftLower &&
                      ((n.x += x.columnWidth / 2),
                      (h.x += x.columnWidth / 2 + p / x.roofSlope)),
                    x.roof.poly(b, [n, t, r, h])));
              else if (0 == k.gableSize || k.gableSize < k.width)
                ((n = l),
                  (t = l + k.width),
                  null == x.gableRoof &&
                    0 < k.gableSize &&
                    ((h = l + k.gablePos + k.gableSize / 2),
                    0 == k.gablePos && (n = h),
                    k.gablePos + k.gableSize == k.width && (t = h)),
                  (h = n * x.columnWidth),
                  (r = t * x.columnWidth),
                  n == l &&
                    k.leftLower &&
                    (null != x.gableEnds && (h += x.gableEnds.thickness),
                    null != x.gableRoof && (h -= x.gableRoof.rake)),
                  t == l + k.width &&
                    k.rightLower &&
                    (null != x.gableEnds && (r -= x.gableEnds.thickness),
                    null != x.gableRoof && (r += x.gableRoof.rake)),
                  x.roof.rect(b, h, u, r - h, p));
              0 < k.chimney &&
                null == x.castel &&
                ((n = new ri()),
                n.set_x((l + k.chimney) * x.columnWidth),
                n.set_y(u - p * (null == x.hipRoof ? 1 : 0.6666666666666666)),
                this.addChild(n));
              k.dormers &&
                x.dormer.top + x.dormer.bottom < 0.9 * p &&
                this.placeDormers(k);
            }
          }
        },
        placeDormers: function (a) {
          var b = this,
            d = a.getPos(),
            f = -(x.baseHeight + a.height * x.floorHeight);
          f = x.dormer.wall
            ? f - (x.dormer.window.height / 2 + x.dormer.border)
            : f -
              ((x.columnWidth * x.roofSlope -
                (x.dormer.top + x.dormer.bottom)) /
                2 +
                x.dormer.bottom);
          var g = function (a, g, u) {
            null == u && (u = !1);
            u && --g;
            if (2 <= g - a)
              for (; a < g; ) {
                var k = a++,
                  l = new ti();
                l.set_x((d + k + (u ? 0.5 : 0) + 0.5) * x.columnWidth);
                l.set_y(f);
                b.addChild(l);
              }
          };
          null != x.hipRoof
            ? g(0, a.width, a.leftLower || a.rightLower)
            : null != x.gableRoof
              ? (g(0, a.gablePos), g(a.gablePos + a.gableSize, a.width))
              : null != x.gableEnds &&
                (0 == a.gableSize
                  ? g(0, a.width, a.leftLower || a.rightLower)
                  : (g(0, a.gablePos, a.leftLower),
                    g(a.gablePos + a.gableSize, a.width, a.rightLower)));
        },
        drawWall: function (a) {
          null != x.hipRoof
            ? tl.paint(this.get_graphics(), a)
            : null != x.gableEnds
              ? cg.paint(this.get_graphics(), a)
              : null != x.castel
                ? ul.paint(this.get_graphics(), a)
                : uf.paint(this.get_graphics(), a);
        },
        drawFrontSlopes: function (a) {
          var b = 0;
          for (a = a.sections; b < a.length; ) {
            var d = a[b];
            ++b;
            0 < d.gableSize && uf.paintFront(this.get_graphics(), d);
          }
        },
        drawSeparator: function (a) {
          if (a.separator && null == x.fachwerk1) {
            var b = this.get_graphics();
            b.lineStyle(L.strokeFine, L.colorInk);
            var d = -x.baseHeight - x.floorHeight + 4,
              f = x.columnWidth * Math.sqrt(a.get_width() / 2);
            Gc.dashedHor(b, 0, d, 0, f / 2, f / 2);
            Gc.dashedHor(
              b,
              a.get_width() * x.columnWidth,
              d,
              0,
              -f / 2,
              -f / 2,
            );
            b.endFill();
          }
        },
        drawDoor: function (a) {
          if (!(0 > a.door)) {
            var b = new ui(a);
            b.set_x((a.door + 0.5) * x.columnWidth);
            b.set_y(-x.baseHeight);
            this.addChild(b);
          }
        },
        drawWindows: function (a) {
          for (var b = 0, d = a.get_width(); b < d; )
            for (var f = b++, g = 0, k = a.columns[f]; g < k; ) {
              var l = g++;
              if (a.hasWindow(f, l)) {
                var u = (f + 0.5) * x.columnWidth,
                  p = -x.baseHeight - (l + 0.5) * x.floorHeight,
                  h = l;
                h >= x.window.length && (h = x.window.length - 1);
                1 < h && 1 == a.getSection(f).width && (h = 1);
                h = x.window[h];
                var r = new bg(h);
                r.set_x(u);
                r.set_y(p);
                this.addChild(r);
                if (null != x.fachwerk1) {
                  r = 0 < f && a.columns[f - 1] > l;
                  var n =
                    1 < l && null != x.fachwerk2 ? x.fachwerk2 : x.fachwerk1;
                  bc.paint(
                    this.get_graphics(),
                    u,
                    p,
                    h,
                    n,
                    r,
                    0 == l && 0 < x.apronHeight,
                  );
                }
              } else
                null != x.fachwerk1 && bc.emptyPanel(this.get_graphics(), f, l);
            }
        },
        drawSpire: function (a) {
          if (null == x.castel) {
            var b = 0;
            for (a = a.sections; b < a.length; ) {
              var d = a[b];
              ++b;
              if (d.spire) {
                var f = new Kg();
                f.set_y(-d.getPinnacle());
                f.set_x(
                  (d.getPos() + d.gablePos + d.gableSize / 2) * x.columnWidth,
                );
                this.addChild(f);
              }
            }
          }
        },
        __class__: Xh,
      });
      var ul = function () {};
      h['com.watabou.tinypubs.view.FrontWallCastellatedPainter'] = ul;
      ul.__name__ = 'com.watabou.tinypubs.view.FrontWallCastellatedPainter';
      ul.paint = function (a, b) {
        a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(L.colorWall);
        a.moveTo(0, 0);
        for (var d = 0, f = b.sections; d < f.length; ) {
          var g = f[d];
          ++d;
          var k = x.baseHeight + g.height * x.floorHeight,
            l = g.getPos(),
            u = x.castel.merlon,
            p = x.castel.crenel,
            h = u + p,
            r = g.width * x.columnWidth;
          g = Math.round((r + p) / h);
          p = r / (g * u + p * (g - 1));
          u *= p;
          h *= p;
          p = 0;
          for (r = g; p < r; ) {
            var n = p++;
            a.lineTo(l * x.columnWidth + n * h, -k - x.castel.height);
            a.lineTo(
              l * x.columnWidth + n * h + u / 2,
              -k - x.castel.height - x.castel.point,
            );
            a.lineTo(l * x.columnWidth + n * h + u, -k - x.castel.height);
            n < g - 1 &&
              (a.lineTo(l * x.columnWidth + n * h + u, -k),
              a.lineTo(l * x.columnWidth + n * h + h, -k));
          }
        }
        a.lineTo(b.get_width() * x.columnWidth, 0);
        a.endFill();
      };
      var cg = function () {};
      h['com.watabou.tinypubs.view.FrontWallEndsPainter'] = cg;
      cg.__name__ = 'com.watabou.tinypubs.view.FrontWallEndsPainter';
      cg.paint = function (a, b) {
        var d = [];
        a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(L.colorWall);
        a.moveTo(0, -x.baseHeight);
        for (
          var f = (2 * x.columnWidth * x.roofSlope) / 2, g = 0, k = b.sections;
          g < k.length;

        ) {
          var l = k[g];
          ++g;
          var u = x.baseHeight + l.height * x.floorHeight,
            p = l.getPos(),
            h = p * x.columnWidth;
          p = (p + l.width) * x.columnWidth;
          var r = -u - f - x.gableEnds.height,
            n = r + (x.gableEnds.capWidth / 2) * x.roofSlope,
            t = r - x.gableEnds.capHeight,
            E = (r = 0);
          0 < x.gableEnds.step &&
            ((r = 2 * x.columnWidth),
            (E = Math.floor(r / x.gableEnds.step) | 1),
            (r = (r / E) * x.roofSlope),
            (t = -u - (E / 2 + 0.5) * r - x.gableEnds.capHeight));
          a.lineTo(h, -u);
          if (l.gableWallLeft)
            if (
              (a.lineTo(h, t),
              a.lineTo(h + x.gableEnds.thickness, t),
              a.lineTo(h + x.gableEnds.thickness, -u),
              0 < r)
            )
              for (var q = 1, C = (E >> 1) + 1; q < C; ) {
                var m = q++;
                d.push(new I(h, -u - r * m));
              }
            else
              (d.push(new I(h, -u - x.gableEnds.height)),
                0 < x.gableEnds.height && d.push(new I(h, n)));
          0 < l.gableSize &&
            (0 < x.gableEnds.step
              ? cg.drawSteppedGable(a, l)
              : cg.drawRegularGable(a, l));
          if (l.gableWallRight)
            if (
              (a.lineTo(p - x.gableEnds.thickness, -u),
              a.lineTo(p - x.gableEnds.thickness, t),
              a.lineTo(p, t),
              (l = p - x.gableEnds.thickness),
              0 < r)
            )
              for (h = 1, n = (E >> 1) + 1; h < n; )
                ((E = h++), d.push(new I(l, -u - r * E)));
            else
              (d.push(new I(l, -u - x.gableEnds.height)),
                0 < x.gableEnds.capHeight && d.push(new I(l, n)));
          a.lineTo(p, -u);
        }
        a.lineTo(b.get_width() * x.columnWidth, -x.baseHeight);
        a.endFill();
        a.lineStyle(L.strokeFine, L.colorInk);
        for (g = 0; g < d.length; )
          ((b = d[g]),
            ++g,
            a.moveTo(b.x + 0.25 * x.gableEnds.thickness, b.y),
            a.lineTo(b.x + 0.75 * x.gableEnds.thickness, b.y));
        a.endFill();
      };
      cg.drawRegularGable = function (a, b) {
        var d = x.baseHeight + b.height * x.floorHeight,
          f = (b.getPos() + b.gablePos) * x.columnWidth,
          g = b.gableSize * x.columnWidth,
          k = f + g / 2,
          l = (g * x.roofSlope) / 2;
        a.lineTo(f, -d);
        a.lineTo(f, -d - x.gableEnds.height);
        l = -d - x.gableEnds.height - l;
        1 < b.gableSize && 0 < x.gableEnds.capHeight
          ? ((b = x.gableEnds.capWidth / 2),
            a.lineTo(k - b, l + b * x.roofSlope),
            a.lineTo(k - b, l - x.gableEnds.capHeight),
            a.lineTo(k + b, l - x.gableEnds.capHeight),
            a.lineTo(k + b, l + b * x.roofSlope))
          : a.lineTo(k, l);
        a.lineTo(f + g, -d - x.gableEnds.height);
        a.lineTo(f + g, -d);
      };
      cg.drawSteppedGable = function (a, b) {
        var d = x.baseHeight + b.height * x.floorHeight,
          f = (b.getPos() + b.gablePos) * x.columnWidth,
          g = b.gableSize * x.columnWidth,
          k = f + g / 2,
          l = Math.floor(g / x.gableEnds.step) | 1;
        g /= l;
        var u = g * x.roofSlope;
        d = -d;
        b = 1 < b.gableSize ? l >> 1 : -100;
        var p = 0;
        for (l += 1; p < l; ) {
          var h = p++;
          a.lineTo(f, d);
          var r = f - k;
          d += u * (0 == r ? 0 : 0 > r ? -1 : 1);
          h == b && (d -= x.gableEnds.capHeight);
          h == b + 1 && (d += x.gableEnds.capHeight);
          a.lineTo(f, d);
          f += g;
        }
      };
      var uf = function () {};
      h['com.watabou.tinypubs.view.FrontWallGablePainter'] = uf;
      uf.__name__ = 'com.watabou.tinypubs.view.FrontWallGablePainter';
      uf.paint = function (a, b) {
        a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(L.colorWall);
        a.moveTo(0, -x.baseHeight);
        for (var d = 0, f = b.sections; d < f.length; ) {
          var g = f[d];
          ++d;
          var k = x.baseHeight + g.height * x.floorHeight,
            l = g.getPos();
          a.lineTo(l * x.columnWidth, -k);
          if (0 < g.gableSize) {
            var u = (l + g.gablePos) * x.columnWidth,
              p = g.gableSize * x.columnWidth;
            a.lineTo(u, -k);
            a.lineTo(u + p / 2, -k - (p * x.roofSlope) / 2);
            a.lineTo(u + p, -k);
          }
          a.lineTo((l + g.width) * x.columnWidth, -k);
        }
        a.lineTo(b.get_width() * x.columnWidth, -x.baseHeight);
        a.endFill();
      };
      uf.paintGable = function (a, b, d, f, g, k) {
        a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(L.colorRoof);
        var l = b + f / 2,
          u = new I(b, -d);
        g = new I(l, -d - g);
        b = new I(b + f, -d);
        f = new I(g.y - u.y, u.x - g.x);
        l = k;
        null == l && (l = 1);
        f = f.clone();
        f.normalize(l);
        d = f;
        f = new I(b.y - g.y, g.x - b.x);
        l = k;
        null == l && (l = 1);
        f = f.clone();
        f.normalize(l);
        l = f;
        var p = g.subtract(u);
        p.normalize(1);
        var h = b.subtract(g);
        h.normalize(1);
        f = p.add(h);
        f = new I(-f.y, f.x);
        f.normalize(-k / Math.sqrt((1 + (h.x * p.x + h.y * p.y)) / 2));
        k = [u, g, b, b.add(l), g.add(f), u.add(d)];
        Ra.drawPolygon(a, k);
        a.endFill();
      };
      uf.paintFront = function (a, b) {
        var d = (b.getPos() + b.gablePos) * x.columnWidth,
          f = b.gableSize * x.columnWidth;
        uf.paintGable(
          a,
          d,
          x.baseHeight + b.height * x.floorHeight,
          f,
          (f * x.roofSlope) / 2,
          x.gableRoof.thickness,
        );
      };
      var tl = function () {};
      h['com.watabou.tinypubs.view.FrontWallHipPainter'] = tl;
      tl.__name__ = 'com.watabou.tinypubs.view.FrontWallHipPainter';
      tl.paint = function (a, b) {
        var d = x.hipRoof.eave;
        a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(L.colorWall);
        a.moveTo(0, 0);
        for (var f = 0, g = b.sections; f < g.length; ) {
          var k = g[f];
          ++f;
          var l = x.baseHeight + k.height * x.floorHeight,
            u = k.getPos();
          k.leftLower
            ? (a.lineTo(u * x.columnWidth, -l + d),
              a.lineTo(u * x.columnWidth - d / 2, -l))
            : a.lineTo(u * x.columnWidth, -l);
          k.rightLower
            ? (a.lineTo((u + k.width) * x.columnWidth + d / 2, -l),
              a.lineTo((u + k.width) * x.columnWidth, -l + d))
            : a.lineTo((u + k.width) * x.columnWidth, -l);
        }
        a.lineTo(b.get_width() * x.columnWidth, 0);
        a.endFill();
      };
      var Yh = function () {
        ba.call(this);
      };
      h['com.watabou.tinypubs.view.GroundView'] = Yh;
      Yh.__name__ = 'com.watabou.tinypubs.view.GroundView';
      Yh.__super__ = ba;
      Yh.prototype = w(ba.prototype, {
        update: function (a, b) {
          null == b && (b = 0);
          var d = this.get_graphics();
          d.clear();
          a = a.get_width() * x.columnWidth;
          rc.use(null, L.colorGrass, L.strokeFine, L.strokeFine / 3);
          for (
            var f = -x.baseThickness, g = 0, k = [f, a + x.baseThickness];
            g < k.length;

          ) {
            var l = k[g];
            ++g;
            for (
              var u = Math.floor(
                  3 +
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647) *
                      5,
                ),
                p = (x.columnWidth * u) / 7,
                h = 0,
                r = u;
              h < r;

            ) {
              var n = h++,
                E =
                  5 +
                  10 *
                    Math.abs(
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    );
              n =
                (n +
                  1 +
                  ((((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                    (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                    (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                    3) *
                    2 -
                    1)) /
                u;
              n *= n;
              var q = p * n;
              n =
                ((n +
                  0.5 *
                    ((((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                      2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1)) *
                  Math.PI) /
                4;
              l <= f && ((q = -q), (n = -n));
              q = new I(l + q, 0);
              var C = q.add(I.polar(0.5 * E, -Math.PI / 2 + (2 * n) / 3));
              E = q.add(I.polar(E, -Math.PI / 2 + n));
              rc.stroke(d, Hh.render([q, C, E], !1, 2));
            }
          }
          b < a + x.columnWidth && (b = a + x.columnWidth);
          f = (L.strokeNormal - L.strokeFine) / 2;
          d.lineStyle(L.strokeFine, L.colorGrass);
          Gc.dashedHor(
            d,
            -(b - a) / 2 - x.columnWidth,
            f,
            x.columnWidth,
            b,
            x.columnWidth,
          );
        },
        __class__: Yh,
      });
      var Dd = function () {
        ba.call(this);
        var a = x.lamp.w0,
          b = x.lamp.w1,
          d = x.lamp.h0,
          f = x.lamp.h1,
          g = this.get_graphics();
        g.beginFill(L.colorLamp);
        g.moveTo(-a, 0);
        g.lineTo(a, 0);
        g.lineTo(b, -d);
        g.lineTo(-b, -d);
        g.endFill();
        g.lineStyle(L.strokeNormal, L.colorInk);
        g.moveTo(-a, 0);
        g.lineTo(a, 0);
        g.beginFill(L.colorInk);
        g.moveTo(0, -d - f);
        g.lineTo(b, -d);
        g.lineTo(-b, -d);
        g.endFill();
        g.lineStyle(L.strokeFine, L.colorInk);
        g.moveTo(-a, 0);
        g.lineTo(-b, -d);
        g.moveTo(a, 0);
        g.lineTo(b, -d);
        g.moveTo(0, 0);
        g.lineTo(0, -d);
        g.moveTo(0, -d - f);
        g.lineTo(0, -d - f - f);
      };
      h['com.watabou.tinypubs.view.LampView'] = Dd;
      Dd.__name__ = 'com.watabou.tinypubs.view.LampView';
      Dd.side = function (a) {
        null == a && (a = !0);
        var b = new ba(),
          d = x.columnWidth / 3,
          f = d / 2,
          g = x.lamp.h0 + x.lamp.h1 + x.lamp.h1 + L.strokeNormal / 2,
          k = b.get_graphics();
        k.lineStyle(L.strokeNormal, L.colorInk);
        k.moveTo(0, -g);
        k.lineTo(d, -g);
        k.lineStyle(L.strokeFine, L.colorInk);
        Ra.drawArc(k, f, f - g, f, -Math.PI / 2, -Math.PI);
        f = new Dd();
        f.set_x(d);
        f.set_y(0);
        b.addChild(f);
        b.set_scaleX(a ? 1 : -1);
        return b;
      };
      Dd.__super__ = ba;
      Dd.prototype = w(ba.prototype, { __class__: Dd });
      var vk = function () {
        ba.call(this);
        var a = x.sign,
          b = this.get_graphics();
        b.lineStyle(L.strokeNormal, L.colorInk);
        b.beginFill(L.colorSign1);
        0 == a.e
          ? b.drawRect(a.sl, a.st, a.b, a.c)
          : (b.moveTo(a.sr, a.sb),
            b.lineTo(a.sr, a.d),
            b.lineTo(a.sl, a.d),
            b.lineTo(a.sl, a.sb),
            a.round
              ? Gc.horArc(b, a.sc, a.sb, a.b, -a.e)
              : b.lineTo(a.sc, a.d + a.c));
        b.endFill();
        if (a.hanging)
          (b.lineStyle(L.strokeNormal, L.colorInk),
            b.moveTo(0, 0),
            b.lineTo(a.a + a.f, 0),
            b.lineStyle(L.strokeFine, L.colorInk),
            b.moveTo(a.sl, 0),
            b.lineTo(a.sl, a.d),
            b.moveTo(a.sr, 0),
            b.lineTo(a.sr, a.d),
            0 < a.f && (b.moveTo(a.f, 0), b.lineTo(0, a.f)));
        else {
          var d = a.sl;
          b.lineStyle(L.strokeFine, L.colorInk);
          b.moveTo(0, a.st + d);
          b.lineTo(a.sl, a.st + d);
          b.moveTo(0, a.sb - d);
          b.lineTo(a.sl, a.sb - d);
        }
      };
      h['com.watabou.tinypubs.view.SignView'] = vk;
      vk.__name__ = 'com.watabou.tinypubs.view.SignView';
      vk.__super__ = ba;
      vk.prototype = w(ba.prototype, { __class__: vk });
      var Kg = function () {
        ba.call(this);
        var a = x.spire,
          b = this.get_graphics(),
          d = 0;
        a.ball &&
          ((d += 3 * L.strokeNormal),
          b.lineStyle(L.strokeNormal, L.colorInk),
          b.drawCircle(this.get_x(), this.get_y() - d, L.strokeNormal),
          b.endFill());
        if (0 < a.nsew) {
          d += a.nsew;
          b.lineStyle(L.strokeFine, L.colorInk);
          var f = I.polar(a.nsew, (0.5 * Math.PI) / 2);
          f.y /= 3;
          b.moveTo(this.get_x(), this.get_y() - d);
          b.lineTo(this.get_x() + f.x, this.get_y() - d + f.y);
          b.drawCircle(
            this.get_x() + f.x,
            this.get_y() - d + f.y,
            L.strokeFine / 2,
          );
          f = I.polar(a.nsew, (1.5 * Math.PI) / 2);
          f.y /= 3;
          b.moveTo(this.get_x(), this.get_y() - d);
          b.lineTo(this.get_x() + f.x, this.get_y() - d + f.y);
          b.drawCircle(
            this.get_x() + f.x,
            this.get_y() - d + f.y,
            L.strokeFine / 2,
          );
          f = I.polar(a.nsew, (2.5 * Math.PI) / 2);
          f.y /= 3;
          b.moveTo(this.get_x(), this.get_y() - d);
          b.lineTo(this.get_x() + f.x, this.get_y() - d + f.y);
          b.drawCircle(
            this.get_x() + f.x,
            this.get_y() - d + f.y,
            L.strokeFine / 2,
          );
          f = I.polar(a.nsew, (3.5 * Math.PI) / 2);
          f.y /= 3;
          b.moveTo(this.get_x(), this.get_y() - d);
          b.lineTo(this.get_x() + f.x, this.get_y() - d + f.y);
          b.drawCircle(
            this.get_x() + f.x,
            this.get_y() - d + f.y,
            L.strokeFine / 2,
          );
          b.endFill();
        }
        0 < a.arrow &&
          ((f = a.arrow),
          (d += Math.max(f, a.nsew)),
          b.lineStyle(L.strokeFine, L.colorInk),
          b.moveTo(this.get_x() - f, this.get_y() - d),
          b.lineTo(this.get_x() + f, this.get_y() - d),
          b.lineTo(this.get_x() + f / 2, this.get_y() - d - f / 4),
          b.moveTo(this.get_x() + f, this.get_y() - d),
          b.lineTo(this.get_x() + f / 2, this.get_y() - d + f / 4),
          b.moveTo(this.get_x() - f, this.get_y() - d - f / 4),
          b.lineTo(this.get_x() - (3 * f) / 4, this.get_y() - d),
          b.lineTo(this.get_x() - f, this.get_y() - d + f / 4),
          b.moveTo(this.get_x() - (3 * f) / 4, this.get_y() - d - f / 4),
          b.lineTo(this.get_x() - f / 2, this.get_y() - d),
          b.lineTo(this.get_x() - (3 * f) / 4, this.get_y() - d + f / 4),
          b.endFill());
        if (d > a.length / 2)
          (b.lineStyle(L.strokeFine, L.colorInk),
            b.moveTo(this.get_x(), this.get_y()),
            b.lineTo(this.get_x(), this.get_y() - d));
        else {
          a.cross &&
            (b.lineStyle(L.strokeFine, L.colorInk),
            b.moveTo(
              this.get_x() - L.strokeNormal,
              this.get_y() - (d + a.length) / 2,
            ),
            b.lineTo(
              this.get_x() + L.strokeNormal,
              this.get_y() - (d + a.length) / 2,
            ),
            b.endFill());
          rc.use(null, L.colorInk, L.strokeNormal, L.strokeFine);
          d = this.get_x();
          f = this.get_y();
          var g = this.get_x(),
            k = this.get_y() - a.length;
          rc.stroke(b, [new I(d, f), new I(g, k)]);
          a.pike
            ? (b.lineStyle(L.strokeFine, L.colorInk),
              b.moveTo(
                this.get_x() - L.strokeNormal,
                this.get_y() - a.length + 3 * L.strokeNormal,
              ),
              b.lineTo(this.get_x(), this.get_y() - a.length),
              b.lineTo(
                this.get_x() + L.strokeNormal,
                this.get_y() - a.length + 3 * L.strokeNormal,
              ))
            : (b.lineStyle(L.strokeNormal, L.colorInk),
              b.drawCircle(
                this.get_x(),
                this.get_y() - a.length,
                L.strokeNormal / 2,
              ));
          b.endFill();
        }
      };
      h['com.watabou.tinypubs.view.SpireView'] = Kg;
      Kg.__name__ = 'com.watabou.tinypubs.view.SpireView';
      Kg.__super__ = ba;
      Kg.prototype = w(ba.prototype, { __class__: Kg });
      var dg = function (a) {
        null == a && (a = !0);
        ba.call(this);
        for (
          var b = Math.round(x.baseHeight / vf.STEP_HEIGHT),
            d = [
              new I(x.baseThickness, x.baseHeight),
              new I(x.baseThickness, 0),
            ],
            f = 0;
          f < b;

        ) {
          var g = f++,
            k = x.baseThickness + (g + 1) * dg.STEP_DEPTH;
          g = (x.baseHeight * g) / b;
          d.push(new I(k, g));
          d.push(new I(k, g + x.baseHeight / b));
        }
        b = this.get_graphics();
        b.lineStyle(L.strokeNormal, L.colorInk);
        b.beginFill(L.colorStairs);
        Ra.drawPolygon(b, d);
        b.endFill();
        this.set_scaleX(a ? 1 : -1);
      };
      h['com.watabou.tinypubs.view.StairsSideView'] = dg;
      dg.__name__ = 'com.watabou.tinypubs.view.StairsSideView';
      dg.__super__ = ba;
      dg.prototype = w(ba.prototype, { __class__: dg });
      var vf = function (a) {
        ba.call(this);
        a = this.get_graphics();
        var b = x.door.getPorchWidth(),
          d = Math.round(x.baseHeight / vf.STEP_HEIGHT);
        a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(L.colorStairs);
        a.drawRect(-b / 2, 0, b, -x.baseHeight);
        a.endFill();
        a.lineStyle(L.strokeFine, L.colorInk);
        for (var f = 1; f < d; ) {
          var g = f++;
          g = (-x.baseHeight * g) / d;
          a.moveTo(-b / 2, g);
          a.lineTo(b / 2, g);
        }
        a.endFill();
      };
      h['com.watabou.tinypubs.view.StairsView'] = vf;
      vf.__name__ = 'com.watabou.tinypubs.view.StairsView';
      vf.__super__ = ba;
      vf.prototype = w(ba.prototype, { __class__: vf });
      var sf = function (a, b) {
        ba.call(this);
        var d = this.get_graphics(),
          f = pb.proto.spiralRad * x.columnWidth,
          g = 1 + 2 * x.roofSlope,
          k = x.floorHeight * a,
          l = x.baseHeight + x.apronHeight;
        if (0 < l) {
          var u = f + x.baseThickness;
          d.beginFill(L.colorBase);
          d.drawRect(-u, 0, 2 * u, -l);
          d.beginFill(L.colorWall);
          d.drawRect(-f, -l, 2 * f, -(k - x.apronHeight));
          d.endFill();
          d.lineStyle(L.strokeNormal, L.colorInk);
          d.moveTo(-u, 0);
          d.lineTo(-u, -l);
          d.lineTo(-f, -l);
          d.lineTo(-f, -x.baseHeight - k);
          d.lineTo(f, -x.baseHeight - k);
          d.lineTo(f, -l);
          d.lineTo(u, -l);
          d.lineTo(u, 0);
          null != x.stonework
            ? x.stonework.rect(d, -u, -l, 2 * u, l)
            : ((u = L.strokeNormal + L.strokeFine),
              d.lineStyle(L.strokeFine, L.colorInk),
              d.moveTo(-f + u, -l),
              d.lineTo(f - u, -l));
        } else
          (d.beginFill(L.colorWall),
            d.lineStyle(L.strokeNormal, L.colorInk),
            d.drawRect(-f, 0, 2 * f, -k));
        d.endFill();
        d.lineStyle(L.strokeFine, L.colorInk);
        l = 1;
        for (u = a; l < u; ) {
          var p = l++;
          p = -x.baseHeight - p * x.floorHeight + sf.H;
          Gc.dashedHor(d, -f, p, 0, f / 5, f / 3);
          Gc.dashedHor(d, f, p, 0, -f / 5, -f / 3);
        }
        p = -x.baseHeight - a * x.floorHeight + sf.H;
        Gc.dashedHor(d, -f, p, 0, f / 2, f / 2);
        Gc.dashedHor(d, f, p, 0, -f / 2, -f / 2);
        if (0 != b) {
          var h = x.window[0].clone();
          h.width *= 1 / Math.sqrt(2);
          h.frame = 0;
          l = 1;
          for (u = a; l < u; )
            ((p = l++),
              (a = new bg(h)),
              a.set_x((b * f) / Math.sqrt(2)),
              a.set_y(-x.baseHeight - p * x.floorHeight),
              this.addChild(a));
        }
        a = f + (null != x.hipRoof ? x.hipRoof.eave : x.baseThickness);
        b = a * g;
        g = Ub.intersectLines(-a, 0, 1, x.roofSlope, -f, 0, 1, g);
        f = a - g.x;
        g = g.x * x.roofSlope;
        k += x.baseHeight;
        l = [
          new I(-a, -k),
          new I(-f, -k - g),
          new I(0, -k - b),
          new I(f, -k - g),
          new I(a, -k),
        ];
        d.lineStyle(L.strokeNormal, L.colorInk);
        d.beginFill(L.colorRoof);
        Ra.drawPolygon(d, l);
        d.endFill();
        x.roof.cylinderEx(d, 0, -k, [new I(a, 0), new I(f, g), new I(0, b)]);
        d = new Kg();
        d.set_y(-k - b);
        this.addChild(d);
      };
      h['com.watabou.tinypubs.view.TowerView'] = sf;
      sf.__name__ = 'com.watabou.tinypubs.view.TowerView';
      sf.__super__ = ba;
      sf.prototype = w(ba.prototype, { __class__: sf });
      var bg = function (a, b) {
        null == b && (b = !1);
        ba.call(this);
        var d = this.get_graphics(),
          f = a.width,
          g = a.height,
          k = a.cap,
          l = a.frame,
          u = f / 2,
          p = l * (1 - k / u),
          h = a.cols;
        a = a.rows;
        d.lineStyle(L.strokeFine, L.colorInk);
        d.beginFill(L.colorFrame);
        this.drawShape(u + l, g + 2 * l, k + l - p);
        d.endFill();
        p = b ? L.colorLamp : L.colorWindow;
        d.beginFill(p);
        b = this.drawShape(u, g, k, h - 1);
        d.endFill();
        p = L.pickContrast(0 < l ? L.colorFrame : L.colorWall, L.colorInk, p);
        d.lineStyle(L.strokeFine, p);
        l = 0;
        for (p = h - 1; l < p; ) {
          var r = l++;
          r = b[r];
          d.moveTo(r.x, r.y);
          d.lineTo(r.x, g / 2);
        }
        l = 1;
        for (p = a; l < p; )
          ((r = l++),
            (b = -g / 2 + (g * r) / a),
            d.moveTo(-f / 2, b),
            d.lineTo(f / 2, b));
        d.lineStyle(L.strokeNormal, L.colorInk);
        this.drawShape(u, g, k, h - 1);
        d.endFill();
      };
      h['com.watabou.tinypubs.view.WindowView'] = bg;
      bg.__name__ = 'com.watabou.tinypubs.view.WindowView';
      bg.__super__ = ba;
      bg.prototype = w(ba.prototype, {
        drawShape: function (a, b, d, f) {
          null == f && (f = 0);
          var g = this.get_graphics();
          if (0.1 < d)
            return (
              g.moveTo(-a, b / 2),
              g.lineTo(-a, -b / 2 + d),
              (f = Gc.horArc(g, 0, -b / 2 + d, 2 * a, d, !1, f)),
              g.lineTo(a, b / 2),
              g.lineTo(-a, b / 2),
              f
            );
          g.drawRect(-a, -b / 2, 2 * a, b);
          g = [];
          d = 0;
          for (var k = f; d < k; ) {
            var l = d++;
            g.push(new I(-a + (2 * a * (l + 1)) / (f + 1), -b / 2));
          }
          return g;
        },
        __class__: bg,
      });
      var bc = function () {};
      h['com.watabou.tinypubs.view.architecture.FachwerkPainter'] = bc;
      bc.__name__ = 'com.watabou.tinypubs.view.architecture.FachwerkPainter';
      bc.g = null;
      bc.x = null;
      bc.y = null;
      bc.paint = function (a, b, d, f, g, k, l) {
        bc.g = a;
        bc.x = b;
        bc.y = d;
        a = x.columnWidth / 2;
        b = x.floorHeight / 2;
        d = f.width / 2 + f.frame / 2;
        f = f.height / 2 + f.frame / 2;
        bc.drawPiece(-a, -b, a, -b);
        k && bc.drawPiece(-a, -b, -a, b - (l ? x.apronHeight : 0));
        k = 0;
        for (g = g.getSegments(a, b, d, f, l); k < g.length; )
          ((l = g[k]), ++k, bc.drawPiece(l[0], l[1], l[2], l[3]));
      };
      bc.emptyPanel = function (a, b, d) {
        bc.g = a;
        a = x.columnWidth / 2;
        var f = x.floorHeight / 2;
        bc.x = (b + 0.5) * x.columnWidth;
        bc.y = -x.baseHeight - (d + 0.5) * x.floorHeight;
        bc.drawPiece(-a, -f, a, -f);
        0 < b && bc.drawPiece(-a, -f, -a, f - (0 == d ? x.apronHeight : 0));
      };
      bc.drawPiece = function (a, b, d, f) {
        bc.g.lineStyle(L.strokeNormal, L.colorInk, 0.3);
        bc.g.moveTo(bc.x + a, bc.y + b);
        bc.g.lineTo(bc.x + d, bc.y + f);
        bc.g.endFill();
      };
      var Zh = function (a) {
        null == a && (a = !0);
        ba.call(this);
        x.porch && 0 != x.roofSlope
          ? this.drawShedPorch(!0)
          : this.drawNoPorch(!0);
        var b = new dg(!0);
        this.addChild(b);
        this.set_scaleX(a ? 1 : -1);
      };
      h['com.watabou.tinypubs.view.architecture.PorchSideView'] = Zh;
      Zh.__name__ = 'com.watabou.tinypubs.view.architecture.PorchSideView';
      Zh.__super__ = ba;
      Zh.prototype = w(ba.prototype, {
        drawShedPorch: function (a) {
          null == a && (a = !0);
          2 == x.lamps && this.place2lampsLow(a);
        },
        drawNoPorch: function (a) {
          null == a && (a = !0);
          switch (x.lamps) {
            case 1:
              this.place1lamp(a);
              break;
            case 2:
              this.place2lamps(a);
          }
        },
        place1lamp: function (a) {
          null == a && (a = !0);
          a = Dd.side(a);
          a.set_y(-x.door.getHeight() - 5);
          this.addChild(a);
        },
        place2lamps: function (a) {
          null == a && (a = !0);
          var b = x.lamp.h0 + 2 * x.lamp.h1;
          b =
            x.door.height + b < x.floorHeight
              ? -x.door.height
              : -x.floorHeight + 4 + b;
          a = Dd.side(a);
          a.set_y(b);
          this.addChild(a);
        },
        place2lampsLow: function (a) {
          var b = x.lamp.h0 + 2 * x.lamp.h1;
          a = Dd.side(a);
          a.set_y(-x.door.height + b);
          this.addChild(a);
        },
        __class__: Zh,
      });
      var ui = function (a) {
        ba.call(this);
        this.facade = a;
        this.w = x.door.getPorchWidth();
        this.w2 = this.w / 2;
        a.porch && 0 != x.roofSlope ? this.drawShedPorch() : this.drawNoPorch();
        var b = new si();
        b.set_x(this.get_x());
        b.set_y(0);
        this.addChild(b);
        a = new vf(a);
        a.set_x(this.get_x());
        a.set_y(x.baseHeight);
        this.addChild(a);
      };
      h['com.watabou.tinypubs.view.architecture.PorchView'] = ui;
      ui.__name__ = 'com.watabou.tinypubs.view.architecture.PorchView';
      ui.__super__ = ba;
      ui.prototype = w(ba.prototype, {
        drawShedPorch: function () {
          var a = x.door.getHeight() + (x.columnWidth - this.w) / 2,
            b = (x.columnWidth / 4) * x.roofSlope;
          if (
            1 == this.facade.getSection(this.facade.door).height &&
            ((b = Math.min(b, x.floorHeight - 4 - a)), 5 > b)
          ) {
            this.drawNoPorch();
            return;
          }
          var d = this.get_graphics();
          x.roof.rect(d, -x.columnWidth / 2, -a, x.columnWidth, b);
          b = (x.columnWidth + this.w) / 4;
          d.lineStyle(L.strokeNormal, L.colorInk);
          d.moveTo(-b, -a);
          d.lineTo(-b, -a + 4);
          d.moveTo(b, -a);
          d.lineTo(b, -a + 4);
          2 == this.facade.lamps && this.place2lampsLow();
        },
        drawNoPorch: function () {
          switch (this.facade.lamps) {
            case 1:
              this.place1lamp();
              break;
            case 2:
              this.place2lamps();
          }
        },
        place1lamp: function () {
          var a = new Dd();
          a.set_y(-x.door.getHeight() - 5);
          this.addChild(a);
        },
        place2lamps: function () {
          var a = -x.door.height,
            b = x.lamp.h0 + 2 * x.lamp.h1;
          if (x.door.height + b > x.floorHeight) {
            var d = 1 == this.facade.getSection(this.facade.door).height;
            d ||
              (d = 1 == this.facade.getSection(this.facade.door - 1).height) ||
              (d = 1 == this.facade.getSection(this.facade.door + 1).height);
            d && (a = -x.floorHeight + 4 + b);
          }
          b = new Dd();
          d = new Dd();
          b.set_x(-x.columnWidth / 2);
          d.set_x(x.columnWidth / 2);
          b.set_y(d.set_y(a));
          this.addChild(b);
          this.addChild(d);
        },
        place2lampsLow: function () {
          var a = x.lamp.h0 + 2 * x.lamp.h1,
            b = new Dd(),
            d = new Dd();
          b.set_x(-x.columnWidth / 2 + x.lamp.w1 / 2);
          d.set_x(x.columnWidth / 2 - x.lamp.w1 / 2);
          b.set_y(d.set_y(-x.door.height + a));
          this.addChild(b);
          this.addChild(d);
        },
        __class__: ui,
      });
      var Se = function () {};
      h['com.watabou.tinypubs.view.surfaces.SurfacePainter'] = Se;
      Se.__name__ = 'com.watabou.tinypubs.view.surfaces.SurfacePainter';
      Se.prototype = {
        rect: function (a, b, d, f, g) {},
        poly: function (a, b) {},
        cylinderEx: function (a, b, d, f) {
          for (var g = [], k = 0; k < f.length; ) {
            var l = f[k];
            ++k;
            g.unshift(new I(b - l.x, d - l.y));
            g.push(new I(b + l.x, d - l.y));
          }
          this.poly(a, g);
        },
        __class__: Se,
      };
      var oi = function () {
        this.light = 5;
        this.dark = 20;
        this.plank =
          3 + (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647;
        this.dark =
          10 *
          Math.pow(
            2,
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
        this.light =
          5 *
          Math.pow(
            2,
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
      };
      h['com.watabou.tinypubs.view.surfaces.HatchingPainter'] = oi;
      oi.__name__ = 'com.watabou.tinypubs.view.surfaces.HatchingPainter';
      oi.__super__ = Se;
      oi.prototype = w(Se.prototype, {
        rect: function (a, b, d, f, g) {
          a.lineStyle(L.strokeNormal, L.colorInk);
          a.beginFill(L.colorRoof);
          a.drawRect(b, d, f, -g);
          a.endFill();
          var k = Math.round(f / this.plank);
          a.lineStyle(L.strokeFine, L.colorInk);
          for (var l = 1; l < k; ) {
            var u = l++;
            u = b + (f * u) / k;
            var p =
              d -
              g *
                Math.abs(
                  ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                    (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                    (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                    (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                );
            a.moveTo(u, d);
            a.lineTo(u, p);
            Ra.dashedLine(
              a,
              new I(u, p),
              new I(u, d - g),
              Gc.dashes(this.dark, this.light),
            );
          }
        },
        poly: function (a, b) {
          a.lineStyle(L.strokeNormal, L.colorInk);
          a.beginFill(L.colorRoof);
          Ra.drawPolygon(a, b);
          a.endFill();
          var d = Wh.rect(b),
            f = Math.round(d.width / this.plank),
            g = new I(0, d.get_top()),
            k = new I(0, d.get_bottom());
          a.lineStyle(L.strokeFine, L.colorInk);
          for (var l = 1; l < f; ) {
            var u = l++;
            g.x = k.x = d.get_left() + (d.width * u) / f;
            for (u = $f.pierce(b, g, k); 2 <= u.length; ) {
              var p = u.pop(),
                h = u.pop(),
                r = Ub.lerp(
                  p,
                  h,
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
                );
              Ra.dashedLine(a, h, r, Gc.dashes(this.dark, this.light));
              a.moveTo(r.x, r.y);
              a.lineTo(p.x, p.y);
            }
          }
        },
        cylinderEx: function (a, b, d, f) {
          var g = f[0].y,
            k = f[f.length - 1].y - g,
            l = la.max(f, function (a) {
              return a.x;
            }).x;
          l = Math.ceil((0.5 * Math.PI * l) / this.plank);
          var u = g;
          k = g + k;
          for (var p = 1; p < l; ) {
            var h = (p++ / l) * Math.PI,
              r = Math.cos(h);
            a.lineStyle(L.strokeFine * Math.sin(h), L.colorInk);
            h = Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            );
            null == h && (h = 0.5);
            h = k + (u - k) * h;
            var n = Math.abs(
              ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            );
            null == n && (n = 0.5);
            n = u + (h - u) * n;
            for (var E = 1, q = f.length; E < q; ) {
              var x = E++,
                C = f[x - 1];
              x = f[x];
              g = C.y;
              var m = x.y,
                y = (u - g) / (m - g),
                B = (n - g) / (m - g);
              g = (h - g) / (m - g);
              1 > y &&
                0 < B &&
                ((m = Lc.gate(y, 0, 1)),
                (y = Lc.gate(B, 0, 1)),
                (m = Ub.lerp(C, x, m)),
                (y = Ub.lerp(C, x, y)),
                (m = new I(b - m.x * r, d - m.y)),
                (y = new I(b - y.x * r, d - y.y)),
                a.moveTo(m.x, m.y),
                a.lineTo(y.x, y.y));
              1 > B &&
                0 < g &&
                ((B = Lc.gate(B, 0, 1)),
                (g = Lc.gate(g, 0, 1)),
                (B = Ub.lerp(C, x, B)),
                (C = Ub.lerp(C, x, g)),
                Ra.dashedLine(
                  a,
                  new I(b - B.x * r, d - B.y),
                  new I(b - C.x * r, d - C.y),
                  Gc.dashes(this.dark, this.light),
                ));
            }
          }
          a.endFill();
        },
        __class__: oi,
      });
      var pi = function () {
        this.sh = 5;
        this.sw = 7.5;
        this.u = 0.2;
        this.u =
          0.5 *
          Math.abs(
            ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              2 -
              1,
          );
        this.sh =
          6 *
          Math.pow(
            1.5,
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
        this.sw =
          this.sh *
          (1 +
            1.5 *
              (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
                3));
        this.pat = new lk(5 * this.sw, 5 * this.sw, this.sw, this.u);
        this.pat.scale(1, this.sh / this.sw);
      };
      h['com.watabou.tinypubs.view.surfaces.StoneworkPainter'] = pi;
      pi.__name__ = 'com.watabou.tinypubs.view.surfaces.StoneworkPainter';
      pi.__super__ = Se;
      pi.prototype = w(Se.prototype, {
        rect: function (a, b, d, f, g) {
          var k = new ki(
              b - this.sw / 4,
              d - this.sh / 4,
              f + this.sw / 2,
              g + this.sh / 2,
            ),
            l = this.pat.fill(k);
          k = (L.strokeNormal - L.strokeFine) / 2;
          b += k;
          d += k;
          f -= 2 * k;
          g -= 2 * k;
          a.lineStyle(L.strokeFine, L.colorInk);
          k = 0;
          for (l = la.shuffle(l); k < l.length; ) {
            var u = l[k];
            ++k;
            a.beginFill(L.colorBase);
            var p =
                this.sw *
                Math.pow(
                  2,
                  this.u *
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
                ),
              h =
                this.sh *
                Math.pow(
                  2,
                  this.u *
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
                ),
              r =
                2 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              n =
                2 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              E =
                2 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              q =
                2 * ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647),
              x = u.x - p / 2;
            x < b && ((x = b), (r = E = 0));
            p = u.x + p / 2;
            p > b + f && ((p = b + f), (n = q = 0));
            var C = u.y - h / 2;
            C < d && ((C = d), (r = n = 0));
            u = u.y + h / 2;
            u > d + g && ((u = d + g), (E = q = 0));
            a.drawRoundRectComplex(x, C, p - x, u - C, r, n, E, q);
          }
        },
        __class__: pi,
      });
      var ni = function () {
        this.light = 5;
        this.dark = 20;
        this.plank = 4;
        var a = Math.sqrt(x.roofSlope);
        this.plank = 3.5 * (0 < a ? a : 1);
        this.dark =
          10 *
          Math.pow(
            2,
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
        this.light =
          5 *
          Math.pow(
            2,
            (((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
      };
      h['com.watabou.tinypubs.view.surfaces.TilingPainter'] = ni;
      ni.__name__ = 'com.watabou.tinypubs.view.surfaces.TilingPainter';
      ni.__super__ = Se;
      ni.prototype = w(Se.prototype, {
        rect: function (a, b, d, f, g) {
          a.lineStyle(L.strokeNormal, L.colorInk);
          a.beginFill(L.colorRoof);
          a.drawRect(b, d, f, -g);
          a.endFill();
          var k = Math.round(g / this.plank);
          a.lineStyle(L.strokeFine, L.colorInk);
          for (var l = 1; l < k; ) {
            var u = l++;
            u = d - (g * u) / k;
            var p =
                b +
                0.5 *
                  f *
                  Math.abs(
                    ((t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                      (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
              h =
                b +
                f *
                  (1 -
                    0.5 *
                      Math.abs(
                        ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647) /
                          2 -
                          1,
                      ));
            a.moveTo(b, u);
            a.lineTo(p, u);
            Ra.dashedLine(
              a,
              new I(p, u),
              new I(h, u),
              Gc.dashes(this.dark, this.light),
            );
            a.moveTo(h, u);
            a.lineTo(b + f, u);
          }
        },
        poly: function (a, b) {
          a.lineStyle(L.strokeNormal, L.colorInk);
          a.beginFill(L.colorRoof);
          Ra.drawPolygon(a, b);
          a.endFill();
          var d = 3.5 * (1 + 1 / x.roofSlope),
            f = Wh.rect(b),
            g = Math.round(f.height / this.plank),
            k = new I(f.get_left()),
            l = new I(f.get_right());
          a.lineStyle(L.strokeFine, L.colorInk);
          for (var u = 1; u < g; ) {
            var p = u++;
            k.y = l.y = f.get_bottom() - (f.height * p) / g;
            for (p = $f.pierce(b, k, l); 2 <= p.length; ) {
              var h = p.pop(),
                r = p.pop();
              h.x < f.get_right() && (h.x -= d);
              r.x > f.get_left() && (r.x += d);
              if (!(r.x > h.x)) {
                var n = Ub.lerp(
                    r,
                    h,
                    0.5 *
                      Math.abs(
                        ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647) /
                          2 -
                          1,
                      ),
                  ),
                  E = Ub.lerp(
                    h,
                    r,
                    0.5 *
                      Math.abs(
                        ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647 +
                          (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                            2147483647) /
                          2 -
                          1,
                      ),
                  );
                a.moveTo(r.x, r.y);
                a.lineTo(n.x, n.y);
                Ra.dashedLine(a, n, E, Gc.dashes(this.dark, this.light));
                a.moveTo(E.x, E.y);
                a.lineTo(h.x, h.y);
              }
            }
          }
          a.endFill();
        },
        cylinderEx: function (a, b, d, f) {
          a.lineStyle(L.strokeFine, L.colorInk);
          for (var g = 1, k = f.length; g < k; )
            for (
              var l = g++,
                u = Math.round((f[l].y - f[l - 1].y) / this.plank),
                p = 0 == l ? 1 : 0,
                h = u;
              p < h;

            ) {
              var r = p++ / u,
                n = Ub.lerp(f[l - 1], f[l], r);
              r = new I(b - n.x, d - n.y);
              n = new I(b + n.x, d - n.y);
              var E = Ub.lerp(
                  r,
                  n,
                  0.5 *
                    Math.abs(
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
                ),
                q = Ub.lerp(
                  n,
                  r,
                  0.5 *
                    Math.abs(
                      ((t.seed = (48271 * t.seed) % 2147483647 | 0) /
                        2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647 +
                        (t.seed = (48271 * t.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
                );
              a.moveTo(r.x, r.y);
              a.lineTo(E.x, E.y);
              Ra.dashedLine(a, E, q, Gc.dashes(this.dark / 2, this.light));
              a.moveTo(q.x, q.y);
              a.lineTo(n.x, n.y);
            }
          a.endFill();
        },
        __class__: ni,
      });
      var eg = function (a) {
        this.ruleSet = a;
        this.clearState();
      };
      h['com.watabou.tracery.RuleSelector'] = eg;
      eg.__name__ = 'com.watabou.tracery.RuleSelector';
      eg.prototype = {
        select: function () {
          var a = this.ruleSet.defaultRules,
            b = (xe.rng() * a.length) | 0;
          return a[b];
        },
        clearState: function () {},
        __class__: eg,
      };
      var th = function (a) {
        eg.call(this, a);
      };
      h['com.watabou.tracery.DeckRuleSelector'] = th;
      th.__name__ = 'com.watabou.tracery.DeckRuleSelector';
      th.__super__ = eg;
      th.prototype = w(eg.prototype, {
        select: function () {
          0 == this.deck.length && this.clearState();
          var a = (xe.rng() * this.deck.length) | 0,
            b = this.deck[a];
          this.deck.splice(a, 1);
          return b;
        },
        clearState: function () {
          this.deck = this.ruleSet.defaultRules.slice();
        },
        __class__: th,
      });
      var vi = function (a, b, d) {
        this.grammar = a;
        this.key = b;
        this.baseRules = d;
        this.clearState();
      };
      h['com.watabou.tracery.Symbol'] = vi;
      vi.__name__ = 'com.watabou.tracery.Symbol';
      vi.prototype = {
        clearState: function () {
          this.stack = [this.baseRules];
          this.baseRules.clearState();
        },
        pushRules: function (a) {
          this.pushRuleSet(new Lg(this.grammar, a));
        },
        pushRuleSet: function (a) {
          this.stack.push(a);
        },
        popRules: function () {
          this.stack.pop();
        },
        selectRule: function () {
          return 0 == this.stack.length
            ? (Nb.trace(
                'The rule stack for ' + this.key + ' is empty, too many pops?',
                {
                  fileName: '../classes/com/watabou/tracery/Symbol.hx',
                  lineNumber: 37,
                  className: 'com.watabou.tracery.Symbol',
                  methodName: 'selectRule',
                },
              ),
              '((' + this.key + '))')
            : this.top().selectRule();
        },
        top: function () {
          return this.stack[this.stack.length - 1];
        },
        __class__: vi,
      };
      var ak = function (a) {
        this.autoID = 0;
        this.defaultSelector = eg;
        this.modifiers = new Sa();
        this.flags = [];
        this.loadFromRawObj(a);
      };
      h['com.watabou.tracery.Grammar'] = ak;
      ak.__name__ = 'com.watabou.tracery.Grammar';
      ak.prototype = {
        clearState: function () {
          for (
            var a = this.symbols.h, b = Object.keys(a), d = b.length, f = 0;
            f < d;

          )
            a[b[f++]].clearState();
          this.flags = [];
        },
        addModifiers: function (a) {
          for (var b = Object.keys(a.h), d = b.length, f = 0; f < d; ) {
            var g = b[f++];
            this.modifiers.h[g] = a.h[g];
          }
        },
        loadFromRawObj: function (a) {
          this.raw = a;
          this.symbols = new Sa();
          this.subgrammars = [];
          if (null != a)
            for (var b = N.fields(a), d = 0; d < b.length; ) {
              var f = b[d++],
                g = f;
              f = a[f];
              var k = 'string' == typeof f ? [f] : f;
              null == k &&
                (Nb.trace(a, {
                  fileName: '../classes/com/watabou/tracery/Grammar.hx',
                  lineNumber: 55,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'loadFromRawObj',
                }),
                Nb.trace(g, {
                  fileName: '../classes/com/watabou/tracery/Grammar.hx',
                  lineNumber: 56,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'loadFromRawObj',
                }));
              f = this.symbols;
              k = new vi(this, g, new Lg(this, this.unwrap(a, k)));
              f.h[g] = k;
            }
        },
        unwrap: function (a, b) {
          for (var d = [], f = 0; f < b.length; ) {
            var g = b[f];
            ++f;
            if ('@' == M.substr(g, 0, 1)) {
              var k = M.substr(g, 1, null);
              g = null;
              var l = k.indexOf('?-');
              -1 != l &&
                ((g = M.substr(k, 0, l)), (k = M.substr(k, l + 2, null)));
              l = a[k];
              k = 0;
              for (
                l = this.unwrap(a, 'string' == typeof l ? [l] : l);
                k < l.length;

              ) {
                var u = l[k];
                ++k;
                d.push(null == g ? u : '' + g + '?-' + u);
              }
            } else d.push(g);
          }
          return d;
        },
        createRoot: function (a) {
          return new Mg(this, null, 0, { type: -1, raw: a });
        },
        expand: function (a, b) {
          null == b && (b = !1);
          a = this.createRoot(a);
          a.expand();
          b || a.clearEscapeChars();
          return a;
        },
        flatten: function (a, b) {
          null == b && (b = !1);
          return this.expand(a, b).finishedText;
        },
        execute: function (a) {
          'set ' == M.substr(a, 0, 4)
            ? ((a = M.substr(a, 4, null)),
              la.addAll(this.flags, new xa(', +', '').split(a)))
            : 'clear ' == M.substr(a, 0, 6)
              ? ((a = M.substr(a, 6, null)),
                la.addAll(this.flags, new xa(', +', '').split(a)))
              : Nb.trace('Unknown function "' + a + '" is called', {
                  fileName: '../classes/com/watabou/tracery/Grammar.hx',
                  lineNumber: 113,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'execute',
                });
        },
        pushRules: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.symbols.h, a))
            this.symbols.h[a].pushRules(b);
          else {
            var d = this.symbols;
            b = new vi(this, a, new Lg(this, b));
            d.h[a] = b;
          }
        },
        popRules: function (a) {
          Object.prototype.hasOwnProperty.call(this.symbols.h, a)
            ? this.symbols.h[a].popRules()
            : Nb.trace("Can't pop: no symbol for key " + a, {
                fileName: '../classes/com/watabou/tracery/Grammar.hx',
                lineNumber: 142,
                className: 'com.watabou.tracery.Grammar',
                methodName: 'popRules',
              });
        },
        addAutoRules: function (a) {
          var b = '_auto' + this.autoID++;
          this.pushRules(b, a);
          return b;
        },
        selectRule: function (a) {
          for (
            var b = this.symbols.h[a], d = 0, f = this.flags;
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            g = this.symbols.h['' + g + '?-' + a];
            if (null != g) {
              b = g;
              break;
            }
          }
          if (null != b && ((d = b.selectRule()), null != d)) return d;
          d = 0;
          for (f = this.subgrammars; d < f.length; )
            if (
              ((b = f[d]),
              ++d,
              Object.prototype.hasOwnProperty.call(b.symbols.h, a))
            )
              return b.symbols.h[a].selectRule();
          Nb.trace('No symbol for "' + a + '"', {
            fileName: '../classes/com/watabou/tracery/Grammar.hx',
            lineNumber: 177,
            className: 'com.watabou.tracery.Grammar',
            methodName: 'selectRule',
          });
          return '((' + a + '))';
        },
        validateRule: function (a) {
          var b = a.indexOf('?-');
          if (-1 == b) return a;
          var d = M.substr(a, 0, b);
          return this.eval(d) ? M.substr(a, b + 2, null) : null;
        },
        eval: function (a) {
          var b = parseFloat(a);
          if (!isNaN(b))
            return (
              (a = b),
              null == a && (a = 0.5),
              (t.seed = (48271 * t.seed) % 2147483647 | 0) / 2147483647 < a
            );
          b = a.split('&');
          if (1 < b.length) {
            for (a = 0; a < b.length; ) {
              var d = b[a];
              ++a;
              if (!this.eval(d)) return !1;
            }
            return !0;
          }
          a = (b = '!' == a.charAt(0)) ? M.substr(a, 1, null) : a;
          return (-1 != this.flags.indexOf(a)) != b;
        },
        __class__: ak,
      };
      var cb = function () {};
      h['com.watabou.tracery.ModsEngBasic'] = cb;
      cb.__name__ = 'com.watabou.tracery.ModsEngBasic';
      cb.isVowel = function (a) {
        return -1 != 'ieaou'.indexOf(a.toLowerCase());
      };
      cb.isAlphaNum = function (a) {
        return ('a' <= a && 'z' >= a) || ('A' <= a && 'Z' >= a)
          ? !0
          : '0' <= a
            ? '9' >= a
            : !1;
      };
      cb.isPlural = function (a) {
        a = a.toLowerCase();
        return 's' == M.substr(a, -1, null)
          ? 'ss' != M.substr(a, -2, null)
          : !1;
      };
      cb.escapeRegExp = function (a) {
        return a.replace(/([.*+?^=!:${}()|\[\]/\\])/g, '\\$1');
      };
      cb.replace = function (a, b) {
        var d = new RegExp(cb.escapeRegExp(b[0]), 'g');
        return a.replace(d, b[1]);
      };
      cb.capitalizeAll = function (a, b) {
        b = '';
        for (var d = !0, f = 0, g = a.length; f < g; ) {
          var k = f++;
          k = a.charAt(k);
          cb.isAlphaNum(k) || "'" == k
            ? d
              ? ((b += k.toUpperCase()), (d = !1))
              : (b += k)
            : ((d = !0), (b += k));
        }
        return b;
      };
      cb.capitalize = function (a, b) {
        return a.charAt(0).toUpperCase() + M.substr(a, 1, null);
      };
      cb.caps = function (a, b) {
        return a.toUpperCase();
      };
      cb.a = function (a, b) {
        if (0 < a.length) {
          if (
            'u' == a.charAt(0).toLowerCase() &&
            2 < a.length &&
            'i' == a.charAt(2).toLowerCase()
          )
            return 'a ' + a;
          if (cb.isVowel(a.charAt(0))) return 'an ' + a;
        }
        return 'a ' + a;
      };
      cb.firstS = function (a, b) {
        a = a.split(' ');
        return 1 == a.length
          ? cb.s(a[0], null)
          : cb.s(a[0], null) + ' ' + a.slice(1).join(' ');
      };
      cb.s = function (a, b) {
        b = cb.plurals.h;
        for (var d = Object.keys(b), f = d.length, g = 0; g < f; ) {
          var k = d[g++],
            l = k;
          k = b[k];
          if (M.substr(a, -l.length, null) == l)
            return M.substr(a, 0, a.length - l.length) + k;
        }
        b = M.substr(a, -1, null);
        if ('s' == b || 'x' == b || 'z' == b) return a + 'es';
        if ('y' == b && -1 == 'ieaou'.indexOf(M.substr(a, -2, 1)))
          return M.substr(a, 0, -1) + 'ies';
        b = M.substr(a, -2, null);
        return 'ch' == b || 'sh' == b ? a + 'es' : a + 's';
      };
      cb.possessive = function (a, b) {
        return 's' == M.substr(a, -1, null) ? a + "'" : a + "'s";
      };
      cb.ed = function (a, b) {
        switch (M.substr(a, -1, null)) {
          case 'e':
            return a + 'd';
          case 'h':
            return a + 'ed';
          case 's':
            return a + 'ed';
          case 'x':
            return a + 'ed';
          case 'y':
            return cb.isVowel(a.charAt(a.length - 2))
              ? a + 'd'
              : a.substring(0, a.length - 1) + 'ied';
          default:
            return a + 'ed';
        }
      };
      cb.ing = function (a, b) {
        return 'e' == M.substr(a, -1, null)
          ? a.substring(0, a.length - 1) + 'ing'
          : a + 'ing';
      };
      cb.thiss = function (a, b) {
        return cb.isPlural(a) ? 'these' : 'this';
      };
      cb.they = function (a, b) {
        return cb.isPlural(a) ? 'they' : 'it';
      };
      cb.them = function (a, b) {
        return cb.isPlural(a) ? 'them' : 'it';
      };
      cb.is = function (a, b) {
        return cb.isPlural(a) ? 'are' : 'is';
      };
      cb.was = function (a, b) {
        return cb.isPlural(a) ? 'were' : 'was';
      };
      cb.get = function () {
        var a = new Sa();
        a.h.replace = cb.replace;
        a.h.possessive = cb.possessive;
        a.h.capitalize = cb.capitalize;
        a.h.capitalizeAll = cb.capitalizeAll;
        a.h.caps = cb.caps;
        a.h.firstS = cb.firstS;
        a.h.s = cb.s;
        a.h.a = cb.a;
        a.h.ed = cb.ed;
        a.h.ing = cb.ing;
        a.h['this'] = cb.thiss;
        a.h.they = cb.they;
        a.h.them = cb.them;
        a.h.is = cb.is;
        a.h.was = cb.was;
        return a;
      };
      var Ng = function (a, b) {
        this.node = a;
        a = b.split(':');
        this.target = a[0];
        1 == a.length
          ? (this.type = 2)
          : ((this.rule = a[1]), (this.type = 'POP' == this.rule ? 1 : 0));
      };
      h['com.watabou.tracery.NodeAction'] = Ng;
      Ng.__name__ = 'com.watabou.tracery.NodeAction';
      Ng.prototype = {
        createUndo: function () {
          return 0 == this.type
            ? new Ng(this.node, this.target + ':POP')
            : null;
        },
        activate: function () {
          var a = this.node.grammar;
          switch (this.type) {
            case 0:
              for (
                var b = this.rule.split(','), d = [], f = 0;
                f < b.length;

              ) {
                var g = b[f];
                ++f;
                g = new Mg(a, null, 0, { type: -1, raw: g });
                g.expand();
                d.push(g.finishedText);
              }
              a.pushRules(this.target, d);
              break;
            case 1:
              a.popRules(this.target);
              break;
            case 2:
              a.execute(this.target);
          }
        },
        __class__: Ng,
      };
      var Lg = function (a, b) {
        this.grammar = a;
        a = [];
        for (var d = 0; d < b.length; ) {
          var f = b[d];
          ++d;
          a.push(this.process(f));
        }
        this.defaultRules = this.raw = a;
      };
      h['com.watabou.tracery.RuleSet'] = Lg;
      Lg.__name__ = 'com.watabou.tracery.RuleSet';
      Lg.prototype = {
        process: function (a) {
          var b = a.indexOf('{');
          if (-1 == b) return a;
          for (
            var d = -1, f = 1, g = [], k = b + 1, l = b + 1, u = a.length;
            l < u;

          ) {
            var p = l++,
              h = a.charAt(p);
            if ('|' == h && 1 == f) (g.push(a.substring(k, p)), (k = p + 1));
            else if ('{' == h) ++f;
            else if ('}' == h && 0 == --f) {
              g.push(a.substring(k, p));
              d = p;
              break;
            }
          }
          return -1 != d
            ? ((b = M.substr(a, 0, b)),
              (a = M.substr(a, d + 1, null)),
              (g = this.grammar.addAutoRules(1 == g.length ? [g[0], ''] : g)),
              '' + b + '#' + g + '#' + this.process(a))
            : a;
        },
        selectRule: function () {
          null == this.selector &&
            (this.selector = ib.createInstance(this.grammar.defaultSelector, [
              this,
            ]));
          for (;;) {
            var a = this.grammar.validateRule(this.selector.select());
            if (null != a) return a;
          }
        },
        clearState: function () {
          null != this.selector && this.selector.clearState();
        },
        __class__: Lg,
      };
      var xe = function () {};
      h['com.watabou.tracery.Tracery'] = xe;
      xe.__name__ = 'com.watabou.tracery.Tracery';
      xe.parseTag = function (a) {
        for (
          var b = {
              symbol: null,
              preactions: [],
              postactions: [],
              modifiers: [],
            },
            d = xe.parse(a),
            f = null,
            g = 0;
          g < d.length;

        ) {
          var k = d[g];
          ++g;
          if (0 == k.type)
            if (null == f) f = k.raw;
            else throw Z.thrown('multiple main sections in ' + a);
          else b.preactions.push(k.raw);
        }
        null != f &&
          ((a = f.split('.')), (b.symbol = a[0]), (b.modifiers = a.slice(1)));
        return b;
      };
      xe.parse = function (a) {
        var b = 0,
          d = !1,
          f = [],
          g = !1,
          k = 0,
          l = '',
          u = -1;
        if (null == a) return [];
        for (
          var p = function (b, d, g) {
              1 > d - b &&
                (1 == g &&
                  Nb.trace('' + b + ': empty tag', {
                    fileName: '../classes/com/watabou/tracery/Tracery.hx',
                    lineNumber: 63,
                    className: 'com.watabou.tracery.Tracery',
                    methodName: 'parse',
                  }),
                2 == g &&
                  Nb.trace('' + b + ': empty action', {
                    fileName: '../classes/com/watabou/tracery/Tracery.hx',
                    lineNumber: 65,
                    className: 'com.watabou.tracery.Tracery',
                    methodName: 'parse',
                  }));
              b =
                -1 != u ? l + '\\' + a.substring(u + 1, d) : a.substring(b, d);
              f.push({ type: g, raw: b });
              u = -1;
              l = '';
            },
            h = 0,
            r = a.length;
          h < r;

        ) {
          var n = h++;
          if (g) g = !g;
          else
            switch (a.charAt(n)) {
              case '#':
                0 == b &&
                  (d ? p(k, n, 1) : k < n && p(k, n, 0), (k = n + 1), (d = !d));
                break;
              case '[':
                0 != b || d || (k < n && p(k, n, 0), (k = n + 1));
                ++b;
                break;
              case '\\':
                g = !0;
                l += a.substring(k, n);
                k = n + 1;
                u = n;
                break;
              case ']':
                (--b, 0 != b || d || (p(k, n, 2), (k = n + 1)));
            }
        }
        k < a.length && p(k, a.length, 0);
        d &&
          Nb.trace('Unclosed tag', {
            fileName: '../classes/com/watabou/tracery/Tracery.hx',
            lineNumber: 130,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        0 < b &&
          Nb.trace('Too many [', {
            fileName: '../classes/com/watabou/tracery/Tracery.hx',
            lineNumber: 132,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        0 > b &&
          Nb.trace('Too many ]', {
            fileName: '../classes/com/watabou/tracery/Tracery.hx',
            lineNumber: 134,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        h = [];
        r = 0;
        for (b = f; r < b.length; )
          ((d = b[r]), ++r, (0 != d.type || 0 < d.raw.length) && h.push(d));
        return (f = h);
      };
      var Mg = function (a, b, d, f) {
        null == f.raw &&
          (Nb.trace('Empty input for node', {
            fileName: '../classes/com/watabou/tracery/TraceryNode.hx',
            lineNumber: 35,
            className: 'com.watabou.tracery.TraceryNode',
            methodName: 'new',
          }),
          (f.raw = ''));
        this.grammar = a;
        this.parent = b;
        this.depth = null != b ? b.depth + 1 : 0;
        this.childIndex = d;
        this.raw = f.raw;
        this.type = f.type;
        this.isExpanded = !1;
      };
      h['com.watabou.tracery.TraceryNode'] = Mg;
      Mg.__name__ = 'com.watabou.tracery.TraceryNode';
      Mg.prototype = {
        expandChildren: function (a, b) {
          this.children = [];
          this.finishedText = '';
          this.childRule = a;
          if (null != a) {
            a = xe.parse(a);
            for (var d = 0, f = a.length; d < f; ) {
              var g = d++,
                k = new Mg(this.grammar, this, g, a[g]);
              this.children[g] = k;
              b || k.expand(!1);
              this.finishedText += k.finishedText;
            }
          } else
            Nb.trace("No child rule provided, can't expand children", {
              fileName: '../classes/com/watabou/tracery/TraceryNode.hx',
              lineNumber: 72,
              className: 'com.watabou.tracery.TraceryNode',
              methodName: 'expandChildren',
            });
        },
        expand: function (a) {
          null == a && (a = !1);
          if (!this.isExpanded)
            switch (((this.isExpanded = !0), this.type)) {
              case 0:
                this.finishedText = this.raw;
                break;
              case 1:
                var b = xe.parseTag(this.raw);
                this.symbol = b.symbol;
                this.modifiers = b.modifiers;
                var d = [],
                  f = 0;
                for (b = b.preactions; f < b.length; ) {
                  var g = b[f];
                  ++f;
                  d.push(new Ng(this, g));
                }
                this.preactions = d;
                this.postaction = [];
                d = 0;
                for (f = this.preactions; d < f.length; )
                  ((g = f[d]),
                    ++d,
                    0 == g.type && this.postaction.push(g.createUndo()));
                d = 0;
                for (f = this.preactions; d < f.length; )
                  ((g = f[d]), ++d, g.activate());
                this.finishedText = this.raw;
                d = this.grammar.selectRule(this.symbol);
                this.expandChildren(d, a);
                d = 0;
                for (f = this.modifiers; d < f.length; )
                  ((a = f[d]),
                    ++d,
                    (b = []),
                    (g = a.indexOf('(')),
                    -1 != g &&
                      ((b = a.substring(g + 1, a.indexOf(')')).split(',')),
                      (a = a.substring(0, g))),
                    (g = this.grammar.modifiers.h[a]),
                    null == g
                      ? (Nb.trace('Missing modifier ' + a, {
                          fileName:
                            '../classes/com/watabou/tracery/TraceryNode.hx',
                          lineNumber: 114,
                          className: 'com.watabou.tracery.TraceryNode',
                          methodName: 'expand',
                        }),
                        (this.finishedText += '((.' + a + '))'))
                      : (this.finishedText = g(this.finishedText, b)));
                d = 0;
                for (f = this.postaction; d < f.length; )
                  ((a = f[d]), ++d, a.activate());
                break;
              case 2:
                this.action = new Ng(this, this.raw);
                this.action.activate();
                this.finishedText = '';
                break;
              default:
                this.expandChildren(this.raw, a);
            }
        },
        clearEscapeChars: function () {},
        __class__: Mg,
      };
      var qh = function () {};
      h['com.watabou.utils.ColorNames'] = qh;
      qh.__name__ = 'com.watabou.utils.ColorNames';
      qh.get = function (a) {
        for (
          var b = a >>> 16,
            d = (a >>> 8) & 255,
            f = a & 255,
            g = '',
            k = 1e10,
            l = qh.values.h,
            u = Object.keys(l),
            p = u.length,
            h = 0;
          h < p;

        ) {
          var r = u[h++],
            n = r;
          a = l[r];
          r = a >> 16;
          var t = (a >> 8) & 255;
          a &= 255;
          r = (b - r) * (b - r) + (d - t) * (d - t) + (f - a) * (f - a);
          k > z.toFloat(r) && ((k = z.toFloat(r)), (g = n));
        }
        return g;
      };
      var Ra = function () {};
      h['com.watabou.utils.GraphicsExtender'] = Ra;
      Ra.__name__ = 'com.watabou.utils.GraphicsExtender';
      Ra.drawPolygon = function (a, b) {
        var d = b[b.length - 1];
        a.moveTo(d.x, d.y);
        for (var f = 0; f < b.length; ) ((d = b[f]), ++f, a.lineTo(d.x, d.y));
      };
      Ra.drawPolyline = function (a, b) {
        var d = b[0];
        a.moveTo(d.x, d.y);
        for (var f = 1, g = b.length; f < g; )
          ((d = f++), (d = b[d]), a.lineTo(d.x, d.y));
      };
      Ra.dashedLine = function (a, b, d, f) {
        var g = !0,
          k = 0;
        for (a.moveTo(b.x, b.y); ; ) {
          var l = I.distance(b, d),
            u = f[k];
          if (0 < u) {
            if (l < u) {
              g && a.lineTo(d.x, d.y);
              break;
            }
            b = Ub.lerp(b, d, u / l);
            g ? a.lineTo(b.x, b.y) : a.moveTo(b.x, b.y);
          }
          ++k >= f.length && (k = 0);
          g = !g;
        }
      };
      Ra.drawArc = function (a, b, d, f, g, k, l) {
        null == l && (l = !0);
        var u = 3 + Math.floor(Math.abs(k - g) / (Math.PI / 4));
        k = (k - g) / u;
        l && a.moveTo(b + f * Math.cos(g), d + f * Math.sin(g));
        for (l = 0; l < u; ) {
          var p = l++,
            h = g + p * k;
          p = g + (p + 1) * k;
          var r = (p - h) / 2,
            n = f / Math.cos(r);
          a.curveTo(
            b + Math.cos(h + r) * n,
            d + Math.sin(h + r) * n,
            b + Math.cos(p) * f,
            d + Math.sin(p) * f,
          );
        }
      };
      var Lc = function () {};
      h['com.watabou.utils.MathUtils'] = Lc;
      Lc.__name__ = 'com.watabou.utils.MathUtils';
      Lc.gate = function (a, b, d) {
        return a < b ? b : a < d ? a : d;
      };
      Lc.cycle = function (a, b, d) {
        for (; a < b; ) a += d - b;
        for (; a > d; ) a -= d - b;
        return a;
      };
      Lc.gatei = function (a, b, d) {
        return a < b ? b : a < d ? a : d;
      };
      var ec = (K['com.watabou.utils.ParamType'] = {
        __ename__: 'com.watabou.utils.ParamType',
        __constructs__: null,
        COLOR: {
          _hx_name: 'COLOR',
          _hx_index: 0,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        MULTI: {
          _hx_name: 'MULTI',
          _hx_index: 1,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        FONT: {
          _hx_name: 'FONT',
          _hx_index: 2,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        FLOAT: {
          _hx_name: 'FLOAT',
          _hx_index: 3,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        INT: {
          _hx_name: 'INT',
          _hx_index: 4,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        STRING: {
          _hx_name: 'STRING',
          _hx_index: 5,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        BOOL: {
          _hx_name: 'BOOL',
          _hx_index: 6,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
      });
      ec.__constructs__ = [
        ec.COLOR,
        ec.MULTI,
        ec.FONT,
        ec.FLOAT,
        ec.INT,
        ec.STRING,
        ec.BOOL,
      ];
      var Oc = function () {
        this.params = [];
      };
      h['com.watabou.utils.Palette'] = Oc;
      Oc.__name__ = 'com.watabou.utils.Palette';
      Oc.float2str = function (a) {
        a = null == a ? 'null' : '' + a;
        -1 == a.indexOf('.') && (a += '.0');
        return a;
      };
      Oc.font2format = function (a) {
        if (null == a) return null;
        var b =
          null != a.face
            ? a.face
            : null != a.embedded && $b.exists(a.embedded)
              ? $b.getFont(a.embedded).name
              : '_serif';
        return new ue(b, a.size, 0, a.bold, a.italic);
      };
      Oc.fromData = function (a) {
        for (var b = new Oc(), d = N.fields(a), f = 0; f < d.length; ) {
          var g = d[f++],
            k = g;
          g = a[g];
          if ('number' == typeof g && (g | 0) === g) b.setInt(k, g);
          else if ('number' == typeof g) b.setFloat(k, g);
          else if ('boolean' == typeof g) b.setBool(k, g);
          else if ('string' == typeof g) {
            if (7 == g.length && '#' == g.charAt(0)) {
              var l = G.parseInt('0x' + M.substr(g, 1, null));
              if (null != l) {
                b.setColor(k, l);
                continue;
              }
            }
            l = parseFloat(g);
            if (isNaN(l))
              switch (g) {
                case 'false':
                  b.setBool(k, !1);
                  break;
                case 'true':
                  b.setBool(k, !0);
                  break;
                default:
                  b.setString(k, g);
              }
            else -1 == g.indexOf('.') ? b.setInt(k, l | 0) : b.setFloat(k, l);
          } else if (g instanceof Array) {
            l = [];
            for (var u = 0; u < g.length; ) {
              var p = g[u];
              ++u;
              p = G.parseInt('0x' + M.substr(p, 1, null));
              null != p && l.push(p);
            }
            b.setMulti(k, l);
          } else null != g && b.setFont(k, g);
        }
        return b;
      };
      Oc.fromJSON = function (a) {
        a = JSON.parse(a);
        return Oc.fromData(a);
      };
      Oc.fromAsset = function (a) {
        return $b.exists(a) ? Oc.fromJSON($b.getText(a)) : null;
      };
      Oc.prototype = {
        getColor: function (a, b) {
          null == b && (b = 0);
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a) {
              if (g.type == ec.COLOR) return g.color;
              if (g.type == ec.MULTI) return g.multi[0];
              break;
            }
          }
          return b;
        },
        getMulti: function (a, b) {
          null == b && (b = 0);
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a) {
              if (g.type == ec.MULTI) return g.multi;
              if (g.type == ec.COLOR) return [g.color];
              break;
            }
          }
          return [b];
        },
        getFont: function (a, b) {
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a && g.type == ec.FONT) return g.font;
          }
          return b;
        },
        getFloat: function (a, b) {
          null == b && (b = 0);
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a && g.type == ec.FLOAT) return g.float;
          }
          return b;
        },
        getInt: function (a, b) {
          null == b && (b = 0);
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a && g.type == ec.INT) return g.int;
          }
          return b;
        },
        getString: function (a, b) {
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a && g.type == ec.STRING) return g.string;
          }
          return b;
        },
        getBool: function (a, b) {
          null == b && (b = !1);
          for (var d = 0, f = this.params; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.id == a && g.type == ec.BOOL) return g.bool;
          }
          return b;
        },
        setColor: function (a, b) {
          this.params.push({ id: a, type: ec.COLOR, color: b });
        },
        setMulti: function (a, b) {
          this.params.push({ id: a, type: ec.MULTI, multi: b });
        },
        setFont: function (a, b) {
          this.params.push({ id: a, type: ec.FONT, font: b });
        },
        setFloat: function (a, b) {
          this.params.push({ id: a, type: ec.FLOAT, float: b });
        },
        setInt: function (a, b) {
          this.params.push({ id: a, type: ec.INT, int: b });
        },
        setString: function (a, b) {
          this.params.push({ id: a, type: ec.STRING, string: b });
        },
        setBool: function (a, b) {
          this.params.push({ id: a, type: ec.BOOL, bool: b });
        },
        data: function () {
          for (var a = {}, b = 0, d = this.params; b < d.length; ) {
            var f = d[b];
            ++b;
            switch (f.type._hx_index) {
              case 0:
                a[f.id] = '#' + R.hex(f.color, 6);
                break;
              case 1:
                var g = f.id,
                  k = [],
                  l = 0;
                for (f = f.multi; l < f.length; ) {
                  var u = f[l];
                  ++l;
                  k.push('#' + R.hex(u, 6));
                }
                a[g] = k;
                break;
              case 2:
                a[f.id] = f.font;
                break;
              case 3:
                a[f.id] = Oc.float2str(f.float);
                break;
              case 4:
                a[f.id] = null == f.int ? 'null' : '' + f.int;
                break;
              case 5:
                a[f.id] = f.string;
                break;
              case 6:
                a[f.id] = null == f.bool ? 'null' : '' + f.bool;
            }
          }
          return a;
        },
        json: function () {
          return JSON.stringify(this.data(), null, '  ');
        },
        __class__: Oc,
      };
      var Ce = function () {};
      h['com.watabou.utils.Stopwatch'] = Ce;
      Ce.__name__ = 'com.watabou.utils.Stopwatch';
      Ce.startTime = null;
      Ce.start = function () {
        Ce.startTime = Ka.getTimer();
      };
      Ce.next = function () {
        var a = Ka.getTimer(),
          b = a - Ce.startTime;
        Ce.startTime = a;
        return b;
      };
      var hk = function () {};
      h['com.watabou.utils.StringUtils'] = hk;
      hk.__name__ = 'com.watabou.utils.StringUtils';
      hk.capitalize = function (a) {
        return M.substr(a, 0, 1).toUpperCase() + M.substr(a, 1, null);
      };
      var Yd = function (a) {
        null == a && (a = []);
        this.valueClasses = a;
        this.slots = fd.NIL;
        this.priorityBased = !1;
      };
      h['msignal.Signal'] = Yd;
      Yd.__name__ = 'msignal.Signal';
      Yd.prototype = {
        add: function (a) {
          return this.registerListener(a);
        },
        addOnce: function (a) {
          return this.registerListener(a, !0);
        },
        addWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !1, b);
        },
        addOnceWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !0, b);
        },
        remove: function (a) {
          var b = this.slots.find(a);
          if (null == b) return null;
          this.slots = this.slots.filterNot(a);
          return b;
        },
        removeAll: function () {
          this.slots = fd.NIL;
        },
        registerListener: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          return this.registrationPossible(a, b)
            ? ((a = this.createSlot(a, b, d)),
              this.priorityBased || 0 == d || (this.priorityBased = !0),
              (this.slots =
                this.priorityBased || 0 != d
                  ? this.slots.insertWithPriority(a)
                  : this.slots.prepend(a)),
              a)
            : this.slots.find(a);
        },
        registrationPossible: function (a, b) {
          return this.slots.nonEmpty && null != this.slots.find(a) ? !1 : !0;
        },
        createSlot: function (a, b, d) {
          return null;
        },
        get_numListeners: function () {
          return this.slots.get_length();
        },
        __class__: Yd,
        __properties__: { get_numListeners: 'get_numListeners' },
      };
      var gc = function (a) {
        Yd.call(this, [a]);
      };
      h['msignal.Signal1'] = gc;
      gc.__name__ = 'msignal.Signal1';
      gc.__super__ = Yd;
      gc.prototype = w(Yd.prototype, {
        dispatch: function (a) {
          for (var b = this.slots; b.nonEmpty; )
            (b.head.execute(a), (b = b.tail));
        },
        createSlot: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          return new wi(this, a, b, d);
        },
        __class__: gc,
      });
      var fd = function (a, b) {
        this.nonEmpty = !1;
        null == a && null == b
          ? (this.nonEmpty = !1)
          : null != a &&
            ((this.head = a),
            (this.tail = null == b ? fd.NIL : b),
            (this.nonEmpty = !0));
      };
      h['msignal.SlotList'] = fd;
      fd.__name__ = 'msignal.SlotList';
      fd.NIL = null;
      fd.prototype = {
        get_length: function () {
          if (!this.nonEmpty) return 0;
          if (this.tail == fd.NIL) return 1;
          for (var a = 0, b = this; b.nonEmpty; ) (++a, (b = b.tail));
          return a;
        },
        prepend: function (a) {
          return new fd(a, this);
        },
        insertWithPriority: function (a) {
          if (!this.nonEmpty) return new fd(a);
          var b = a.priority;
          if (b >= this.head.priority) return this.prepend(a);
          for (var d = new fd(this.head), f = d, g = this.tail; g.nonEmpty; ) {
            if (b > g.head.priority) return ((f.tail = g.prepend(a)), d);
            f = f.tail = new fd(g.head);
            g = g.tail;
          }
          f.tail = new fd(a);
          return d;
        },
        filterNot: function (a) {
          if (!this.nonEmpty || null == a) return this;
          if (this.head.listener == a) return this.tail;
          for (var b = new fd(this.head), d = b, f = this.tail; f.nonEmpty; ) {
            if (f.head.listener == a) return ((d.tail = f.tail), b);
            d = d.tail = new fd(f.head);
            f = f.tail;
          }
          return this;
        },
        find: function (a) {
          if (!this.nonEmpty) return null;
          for (var b = this; b.nonEmpty; ) {
            if (b.head.listener == a) return b.head;
            b = b.tail;
          }
          return null;
        },
        __class__: fd,
        __properties__: { get_length: 'get_length' },
      };
      var Cb = function () {};
      h['com.watabou.utils.Updater'] = Cb;
      Cb.__name__ = 'com.watabou.utils.Updater';
      Cb.__properties__ = { get_tick: 'get_tick' };
      Cb.get_tick = function () {
        null == Cb.source && Cb.useTimer(60);
        return Cb._tick;
      };
      Cb.fire = function () {
        var a = Ka.getTimer();
        0 == Cb.lastTime
          ? Cb._tick.dispatch(0)
          : Cb._tick.dispatch(((a - Cb.lastTime) / 1e3) * Cb.timeScale);
        Cb.lastTime = a;
      };
      Cb.useTimer = function (a) {
        null != Cb.source && Cb.source.stop();
        Cb.source = new xi(a);
      };
      Cb.useEnterFrame = function (a) {
        null != Cb.source && Cb.source.stop();
        Cb.source = new yi(a);
      };
      Cb.stop = function () {
        null != Cb.source && (Cb.source.stop(), (Cb.source = null));
      };
      var fg = function () {};
      h['com.watabou.utils.RecurringEventDispatcher'] = fg;
      fg.__name__ = 'com.watabou.utils.RecurringEventDispatcher';
      fg.prototype = { stop: function () {}, __class__: fg };
      var xi = function (a) {
        this.timer = new zi(a);
        this.timer.addEventListener('timer', m(this, this.onTimer));
        this.timer.start();
      };
      h['com.watabou.utils._Updater.TimerEventDispatcher'] = xi;
      xi.__name__ = 'com.watabou.utils._Updater.TimerEventDispatcher';
      xi.__super__ = fg;
      xi.prototype = w(fg.prototype, {
        onTimer: function (a) {
          Cb.fire();
          a.updateAfterEvent();
        },
        stop: function () {
          this.timer.stop();
        },
        __class__: xi,
      });
      var yi = function (a) {
        this.dispObj = a;
        a.addEventListener('enterFrame', m(this, this.onEnterFrame));
      };
      h['com.watabou.utils._Updater.FrameEventDispatcher'] = yi;
      yi.__name__ = 'com.watabou.utils._Updater.FrameEventDispatcher';
      yi.__super__ = fg;
      yi.prototype = w(fg.prototype, {
        onEnterFrame: function (a) {
          Cb.fire();
        },
        stop: function () {
          this.dispObj.removeEventListener(
            'enterFrame',
            m(this, this.onEnterFrame),
          );
        },
        __class__: yi,
      });
      var Zd = (K['haxe.StackItem'] = {
        __ename__: 'haxe.StackItem',
        __constructs__: null,
        CFunction: {
          _hx_name: 'CFunction',
          _hx_index: 0,
          __enum__: 'haxe.StackItem',
          toString: q,
        },
        Module:
          ((J = function (a) {
            return {
              _hx_index: 1,
              m: a,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (J._hx_name = 'Module'),
          (J.__params__ = ['m']),
          J),
        FilePos:
          ((J = function (a, b, d, f) {
            return {
              _hx_index: 2,
              s: a,
              file: b,
              line: d,
              column: f,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (J._hx_name = 'FilePos'),
          (J.__params__ = ['s', 'file', 'line', 'column']),
          J),
        Method:
          ((J = function (a, b) {
            return {
              _hx_index: 3,
              classname: a,
              method: b,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (J._hx_name = 'Method'),
          (J.__params__ = ['classname', 'method']),
          J),
        LocalFunction:
          ((J = function (a) {
            return {
              _hx_index: 4,
              v: a,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (J._hx_name = 'LocalFunction'),
          (J.__params__ = ['v']),
          J),
      });
      Zd.__constructs__ = [
        Zd.CFunction,
        Zd.Module,
        Zd.FilePos,
        Zd.Method,
        Zd.LocalFunction,
      ];
      var Te = {
          callStack: function () {
            return Na.toHaxe(Na.callStack());
          },
          exceptionStack: function (a) {
            null == a && (a = !1);
            var b = Na.toHaxe(Na.exceptionStack());
            return a ? b : Te.subtract(b, Te.callStack());
          },
          toString: function (a) {
            for (var b = new qb(), d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              b.b += '\nCalled from ';
              Te.itemToString(b, f);
            }
            return b.b;
          },
          subtract: function (a, b) {
            for (var d = -1, f = -1; ++f < a.length; ) {
              for (var g = 0, k = b.length; g < k; ) {
                var l = g++;
                if (Te.equalItems(a[f], b[l])) {
                  if ((0 > d && (d = f), ++f, f >= a.length)) break;
                } else d = -1;
              }
              if (0 <= d) break;
            }
            return 0 <= d ? a.slice(0, d) : a;
          },
          equalItems: function (a, b) {
            if (null == a) return null == b ? !0 : !1;
            switch (a._hx_index) {
              case 0:
                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
              case 1:
                return null == b ? !1 : 1 == b._hx_index ? a.m == b.m : !1;
              case 2:
                if (null == b) return !1;
                if (2 == b._hx_index) {
                  var d = b.s,
                    f = b.line,
                    g = b.column,
                    k = a.column,
                    l = a.line,
                    u = a.s;
                  return a.file == b.file && l == f && k == g
                    ? Te.equalItems(u, d)
                    : !1;
                }
                return !1;
              case 3:
                return null == b
                  ? !1
                  : 3 == b._hx_index
                    ? ((d = b.method),
                      (f = a.method),
                      a.classname == b.classname ? f == d : !1)
                    : !1;
              case 4:
                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1;
            }
          },
          itemToString: function (a, b) {
            switch (b._hx_index) {
              case 0:
                a.b += 'a C function';
                break;
              case 1:
                b = b.m;
                a.b += 'module ';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 2:
                var d = b.s,
                  f = b.file,
                  g = b.line;
                b = b.column;
                null != d && (Te.itemToString(a, d), (a.b += ' ('));
                a.b += null == f ? 'null' : '' + f;
                a.b += ' line ';
                a.b += null == g ? 'null' : '' + g;
                null != b &&
                  ((a.b += ' column '), (a.b += null == b ? 'null' : '' + b));
                null != d && (a.b += ')');
                break;
              case 3:
                d = b.classname;
                b = b.method;
                a.b += G.string(null == d ? '<unknown>' : d);
                a.b += '.';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 4:
                ((b = b.v),
                  (a.b += 'local function #'),
                  (a.b += null == b ? 'null' : '' + b));
            }
          },
        },
        Z = function (a, b, d) {
          Error.call(this, a);
          this.message = a;
          this.__previousException = b;
          this.__nativeException = null != d ? d : this;
          this.__skipStack = 0;
          a = Error.prepareStackTrace;
          Error.prepareStackTrace = function (a) {
            return a.stack;
          };
          if (d instanceof Error) this.stack = d.stack;
          else {
            d = null;
            if (Error.captureStackTrace)
              (Error.captureStackTrace(this, Z), (d = this));
            else if (((d = Error()), 'undefined' == typeof d.stack)) {
              try {
                throw d;
              } catch (f) {}
              this.__skipStack++;
            }
            this.stack = d.stack;
          }
          Error.prepareStackTrace = a;
        };
      h['haxe.Exception'] = Z;
      Z.__name__ = 'haxe.Exception';
      Z.caught = function (a) {
        return a instanceof Z
          ? a
          : a instanceof Error
            ? new Z(a.message, null, a)
            : new Og(a, null, a);
      };
      Z.thrown = function (a) {
        if (a instanceof Z) return a.get_native();
        if (a instanceof Error) return a;
        a = new Og(a);
        a.__skipStack++;
        return a;
      };
      Z.__super__ = Error;
      Z.prototype = w(Error.prototype, {
        unwrap: function () {
          return this.__nativeException;
        },
        toString: function () {
          return this.get_message();
        },
        __shiftStack: function () {
          this.__skipStack++;
        },
        get_message: function () {
          return this.message;
        },
        get_native: function () {
          return this.__nativeException;
        },
        get_stack: function () {
          var a = this.__exceptionStack;
          null == a &&
            ((a = Na.toHaxe(Na.normalize(this.stack), this.__skipStack)),
            this.setProperty('__exceptionStack', a));
          return a;
        },
        setProperty: function (a, b) {
          try {
            Object.defineProperty(this, a, { value: b });
          } catch (d) {
            this[a] = b;
          }
        },
        __class__: Z,
        __properties__: {
          get_native: 'get_native',
          get_stack: 'get_stack',
          get_message: 'get_message',
        },
      });
      var nb = function (a, b) {
        this.high = a;
        this.low = b;
      };
      h['haxe._Int64.___Int64'] = nb;
      nb.__name__ = 'haxe._Int64.___Int64';
      nb.prototype = { __class__: nb };
      var Nb = function () {};
      h['haxe.Log'] = Nb;
      Nb.__name__ = 'haxe.Log';
      Nb.formatOutput = function (a, b) {
        var d = G.string(a);
        if (null == b) return d;
        var f = b.fileName + ':' + b.lineNumber;
        if (null != b.customParams) {
          var g = 0;
          for (b = b.customParams; g < b.length; )
            ((a = b[g]), ++g, (d += ', ' + G.string(a)));
        }
        return f + ': ' + d;
      };
      Nb.trace = function (a, b) {
        a = Nb.formatOutput(a, b);
        'undefined' != typeof console && null != console.log && console.log(a);
      };
      var Na = function () {};
      h['haxe.NativeStackTrace'] = Na;
      Na.__name__ = 'haxe.NativeStackTrace';
      Na.lastError = null;
      Na.wrapCallSite = null;
      Na.saveStack = function (a) {
        Na.lastError = a;
      };
      Na.callStack = function () {
        var a = Error(''),
          b = Na.tryHaxeStack(a);
        if ('undefined' == typeof b) {
          try {
            throw a;
          } catch (d) {}
          b = a.stack;
        }
        return Na.normalize(b, 2);
      };
      Na.exceptionStack = function () {
        return Na.normalize(Na.tryHaxeStack(Na.lastError));
      };
      Na.toHaxe = function (a, b) {
        null == b && (b = 0);
        if (null == a) return [];
        if ('string' == typeof a) {
          a = a.split('\n');
          'Error' == a[0] && a.shift();
          for (var d = [], f = 0, g = a.length; f < g; ) {
            var k = f++;
            if (!(b > k)) {
              var l = a[k];
              k = l.match(
                /^    at ([$A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/,
              );
              if (null != k) {
                l = k[1].split('.');
                '$hxClasses' == l[0] && l.shift();
                var u = l.pop(),
                  p = k[2],
                  h = G.parseInt(k[3]);
                k = G.parseInt(k[4]);
                d.push(
                  Zd.FilePos(
                    'Anonymous function' == u
                      ? Zd.LocalFunction()
                      : 'Global code' == u
                        ? null
                        : Zd.Method(l.join('.'), u),
                    p,
                    h,
                    k,
                  ),
                );
              } else d.push(Zd.Module(R.trim(l)));
            }
          }
          return d;
        }
        return 0 < b && Array.isArray(a) ? a.slice(b) : a;
      };
      Na.tryHaxeStack = function (a) {
        if (null == a) return [];
        var b = Error.prepareStackTrace;
        Error.prepareStackTrace = Na.prepareHxStackTrace;
        a = a.stack;
        Error.prepareStackTrace = b;
        return a;
      };
      Na.prepareHxStackTrace = function (a, b) {
        a = [];
        for (var d = 0; d < b.length; ) {
          var f = b[d];
          ++d;
          null != Na.wrapCallSite && (f = Na.wrapCallSite(f));
          var g = null,
            k = f.getFunctionName();
          if (null != k) {
            var l = k.lastIndexOf('.');
            0 <= l
              ? ((g = k.substring(0, l)),
                (k = k.substring(l + 1)),
                (g = Zd.Method(g, k)))
              : (g = Zd.Method(null, k));
          }
          k = f.getFileName();
          l = null == k ? -1 : k.indexOf('file:');
          null != Na.wrapCallSite && 0 < l && (k = k.substring(l + 6));
          a.push(Zd.FilePos(g, k, f.getLineNumber(), f.getColumnNumber()));
        }
        return a;
      };
      Na.normalize = function (a, b) {
        null == b && (b = 0);
        if (Array.isArray(a) && 0 < b) return a.slice(b);
        if ('string' == typeof a) {
          switch (a.substring(0, 6)) {
            case 'Error\n':
            case 'Error:':
              ++b;
          }
          return Na.skipLines(a, b);
        }
        return a;
      };
      Na.skipLines = function (a, b, d) {
        null == d && (d = 0);
        return 0 < b
          ? ((d = a.indexOf('\n', d)), 0 > d ? '' : Na.skipLines(a, --b, d + 1))
          : a.substring(d);
      };
      var gd = function () {
        this.buf = new qb();
        this.cache = [];
        this.useCache = gd.USE_CACHE;
        this.useEnumIndex = gd.USE_ENUM_INDEX;
        this.shash = new Sa();
        this.scount = 0;
      };
      h['haxe.Serializer'] = gd;
      gd.__name__ = 'haxe.Serializer';
      gd.run = function (a) {
        var b = new gd();
        b.serialize(a);
        return b.toString();
      };
      gd.prototype = {
        toString: function () {
          return this.buf.b;
        },
        serializeString: function (a) {
          var b = this.shash.h[a];
          null != b
            ? ((this.buf.b += 'R'), (this.buf.b += null == b ? 'null' : '' + b))
            : ((this.shash.h[a] = this.scount++),
              (this.buf.b += 'y'),
              (a = encodeURIComponent(a)),
              (this.buf.b += G.string(a.length)),
              (this.buf.b += ':'),
              (this.buf.b += null == a ? 'null' : '' + a));
        },
        serializeRef: function (a) {
          for (var b = typeof a, d = 0, f = this.cache.length; d < f; ) {
            var g = d++,
              k = this.cache[g];
            if (typeof k == b && k == a)
              return (
                (this.buf.b += 'r'),
                (this.buf.b += null == g ? 'null' : '' + g),
                !0
              );
          }
          this.cache.push(a);
          return !1;
        },
        serializeFields: function (a) {
          for (var b = 0, d = N.fields(a); b < d.length; ) {
            var f = d[b];
            ++b;
            this.serializeString(f);
            this.serialize(N.field(a, f));
          }
          this.buf.b += 'g';
        },
        serialize: function (a) {
          var b = ib.typeof(a);
          switch (b._hx_index) {
            case 0:
              this.buf.b += 'n';
              break;
            case 1:
              if (0 == a) {
                this.buf.b += 'z';
                break;
              }
              this.buf.b += 'i';
              this.buf.b += null == a ? 'null' : '' + a;
              break;
            case 2:
              isNaN(a)
                ? (this.buf.b += 'k')
                : isFinite(a)
                  ? ((this.buf.b += 'd'),
                    (this.buf.b += null == a ? 'null' : '' + a))
                  : (this.buf.b += 0 > a ? 'm' : 'p');
              break;
            case 3:
              this.buf.b += a ? 't' : 'f';
              break;
            case 4:
              Fa.__instanceof(a, Rl)
                ? ((a = a.__name__),
                  (this.buf.b += 'A'),
                  this.serializeString(a))
                : Fa.__instanceof(a, Sl)
                  ? ((this.buf.b += 'B'), this.serializeString(a.__ename__))
                  : (this.useCache && this.serializeRef(a)) ||
                    ((this.buf.b += 'o'), this.serializeFields(a));
              break;
            case 5:
              throw Z.thrown('Cannot serialize function');
            case 6:
              b = b.c;
              if (b == String) {
                this.serializeString(a);
                break;
              }
              if (this.useCache && this.serializeRef(a)) break;
              switch (b) {
                case Array:
                  var d = 0;
                  this.buf.b += 'a';
                  for (var f = 0, g = a.length; f < g; )
                    ((b = f++),
                      null == a[b]
                        ? ++d
                        : (0 < d &&
                            (1 == d
                              ? (this.buf.b += 'n')
                              : ((this.buf.b += 'u'),
                                (this.buf.b += null == d ? 'null' : '' + d)),
                            (d = 0)),
                          this.serialize(a[b])));
                  0 < d &&
                    (1 == d
                      ? (this.buf.b += 'n')
                      : ((this.buf.b += 'u'),
                        (this.buf.b += null == d ? 'null' : '' + d)));
                  this.buf.b += 'h';
                  break;
                case Date:
                  this.buf.b += 'v';
                  this.buf.b += G.string(a.getTime());
                  break;
                case ic:
                  this.buf.b += 'q';
                  for (b = a.keys(); b.hasNext(); )
                    ((d = b.next()),
                      (this.buf.b += ':'),
                      (this.buf.b += null == d ? 'null' : '' + d),
                      this.serialize(a.h[d]));
                  this.buf.b += 'h';
                  break;
                case Ba:
                  this.buf.b += 'l';
                  for (a = a.h; null != a; )
                    ((b = a.item), (a = a.next), this.serialize(b));
                  this.buf.b += 'h';
                  break;
                case za:
                  this.buf.b += 'M';
                  for (b = a.keys(); b.hasNext(); ) {
                    d = b.next();
                    var k = N.field(d, '__id__');
                    N.deleteField(d, '__id__');
                    this.serialize(d);
                    d.__id__ = k;
                    this.serialize(a.h[d.__id__]);
                  }
                  this.buf.b += 'h';
                  break;
                case Sa:
                  this.buf.b += 'b';
                  d = Object.keys(a.h);
                  k = d.length;
                  for (f = 0; f < k; )
                    ((b = d[f++]),
                      this.serializeString(b),
                      this.serialize(a.h[b]));
                  this.buf.b += 'h';
                  break;
                case yb:
                  this.buf.b += 's';
                  this.buf.b += G.string(Math.ceil((8 * a.length) / 6));
                  this.buf.b += ':';
                  b = 0;
                  d = a.length - 2;
                  k = gd.BASE64_CODES;
                  if (null == k) {
                    k = Array(gd.BASE64.length);
                    f = 0;
                    for (g = gd.BASE64.length; f < g; ) {
                      var l = f++;
                      k[l] = M.cca(gd.BASE64, l);
                    }
                    gd.BASE64_CODES = k;
                  }
                  for (; b < d; )
                    ((f = a.b[b++]),
                      (g = a.b[b++]),
                      (l = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(k[f >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        k[((f << 4) | (g >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(
                        k[((g << 2) | (l >> 6)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(k[l & 63])));
                  b == d
                    ? ((f = a.b[b++]),
                      (g = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(k[f >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        k[((f << 4) | (g >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(k[(g << 2) & 63])))
                    : b == d + 1 &&
                      ((f = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(k[f >> 2])),
                      (this.buf.b += String.fromCodePoint(k[(f << 4) & 63])));
                  break;
                default:
                  (this.useCache && this.cache.pop(),
                    null != a.hxSerialize
                      ? ((this.buf.b += 'C'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        a.hxSerialize(this),
                        (this.buf.b += 'g'))
                      : ((this.buf.b += 'c'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        this.serializeFields(a)));
              }
              break;
            case 7:
              b = b.e;
              if (this.useCache) {
                if (this.serializeRef(a)) break;
                this.cache.pop();
              }
              this.buf.b += G.string(this.useEnumIndex ? 'j' : 'w');
              this.serializeString(b.__ename__);
              this.useEnumIndex
                ? ((this.buf.b += ':'), (this.buf.b += G.string(a._hx_index)))
                : ((b = a),
                  this.serializeString(
                    K[b.__enum__].__constructs__[b._hx_index]._hx_name,
                  ));
              this.buf.b += ':';
              d = ib.enumParameters(a);
              this.buf.b += G.string(d.length);
              for (b = 0; b < d.length; ) ((k = d[b]), ++b, this.serialize(k));
              this.useCache && this.cache.push(a);
              break;
            default:
              throw Z.thrown('Cannot serialize ' + G.string(a));
          }
        },
        __class__: gd,
      };
      var wf = function (a) {
        var b = this;
        this.id = setInterval(function () {
          b.run();
        }, a);
      };
      h['haxe.Timer'] = wf;
      wf.__name__ = 'haxe.Timer';
      wf.delay = function (a, b) {
        var d = new wf(b);
        d.run = function () {
          d.stop();
          a();
        };
        return d;
      };
      wf.prototype = {
        stop: function () {
          null != this.id && (clearInterval(this.id), (this.id = null));
        },
        run: function () {},
        __class__: wf,
      };
      var Ai = function () {};
      h['haxe._Unserializer.DefaultResolver'] = Ai;
      Ai.__name__ = 'haxe._Unserializer.DefaultResolver';
      Ai.prototype = {
        resolveClass: function (a) {
          return h[a];
        },
        resolveEnum: function (a) {
          return K[a];
        },
        __class__: Ai,
      };
      var bd = function (a) {
        this.buf = a;
        this.length = this.buf.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = bd.DEFAULT_RESOLVER;
        null == a && ((a = new Ai()), (bd.DEFAULT_RESOLVER = a));
        this.resolver = a;
      };
      h['haxe.Unserializer'] = bd;
      bd.__name__ = 'haxe.Unserializer';
      bd.initCodes = function () {
        for (var a = [], b = 0, d = bd.BASE64.length; b < d; ) {
          var f = b++;
          a[bd.BASE64.charCodeAt(f)] = f;
        }
        return a;
      };
      bd.run = function (a) {
        return new bd(a).unserialize();
      };
      bd.prototype = {
        setResolver: function (a) {
          null == a
            ? (null == xf.instance && (xf.instance = new xf()),
              (this.resolver = xf.instance))
            : (this.resolver = a);
        },
        readDigits: function () {
          for (var a = 0, b = !1, d = this.pos; ; ) {
            var f = this.buf.charCodeAt(this.pos);
            if (f != f) break;
            if (45 == f) {
              if (this.pos != d) break;
              b = !0;
            } else {
              if (48 > f || 57 < f) break;
              a = 10 * a + (f - 48);
            }
            this.pos++;
          }
          b && (a *= -1);
          return a;
        },
        readFloat: function () {
          for (var a = this.pos; ; ) {
            var b = this.buf.charCodeAt(this.pos);
            if (b != b) break;
            if ((43 <= b && 58 > b) || 101 == b || 69 == b) this.pos++;
            else break;
          }
          return parseFloat(M.substr(this.buf, a, this.pos - a));
        },
        unserializeObject: function (a) {
          for (;;) {
            if (this.pos >= this.length) throw Z.thrown('Invalid object');
            if (103 == this.buf.charCodeAt(this.pos)) break;
            var b = this.unserialize();
            if ('string' != typeof b) throw Z.thrown('Invalid object key');
            var d = this.unserialize();
            a[b] = d;
          }
          this.pos++;
        },
        unserializeEnum: function (a, b) {
          if (58 != this.buf.charCodeAt(this.pos++))
            throw Z.thrown('Invalid enum format');
          var d = this.readDigits();
          if (0 == d) return ib.createEnum(a, b);
          for (var f = []; 0 < d--; ) f.push(this.unserialize());
          return ib.createEnum(a, b, f);
        },
        unserialize: function () {
          switch (this.buf.charCodeAt(this.pos++)) {
            case 65:
              var a = this.unserialize(),
                b = this.resolver.resolveClass(a);
              if (null == b) throw Z.thrown('Class not found ' + a);
              return b;
            case 66:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw Z.thrown('Enum not found ' + a);
              return b;
            case 67:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw Z.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              b.hxUnserialize(this);
              if (103 != this.buf.charCodeAt(this.pos++))
                throw Z.thrown('Invalid custom data');
              return b;
            case 77:
              a = new za();
              this.cache.push(a);
              for (var d; 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()), a.set(b, this.unserialize()));
              this.pos++;
              return a;
            case 82:
              a = this.readDigits();
              if (0 > a || a >= this.scache.length)
                throw Z.thrown('Invalid string reference');
              return this.scache[a];
            case 97:
              b = [];
              for (this.cache.push(b); ; ) {
                d = this.buf.charCodeAt(this.pos);
                if (104 == d) {
                  this.pos++;
                  break;
                }
                117 == d
                  ? (this.pos++,
                    (a = this.readDigits()),
                    (b[b.length + a - 1] = null))
                  : b.push(this.unserialize());
              }
              return b;
            case 98:
              a = new Sa();
              for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()),
                  (d = this.unserialize()),
                  (a.h[b] = d));
              this.pos++;
              return a;
            case 99:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw Z.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              this.unserializeObject(b);
              return b;
            case 100:
              return this.readFloat();
            case 102:
              return !1;
            case 105:
              return this.readDigits();
            case 106:
              a = this.unserialize();
              d = this.resolver.resolveEnum(a);
              if (null == d) throw Z.thrown('Enum not found ' + a);
              this.pos++;
              for (
                var f = this.readDigits(),
                  g = d.__constructs__,
                  k = Array(g.length),
                  l = 0,
                  u = g.length;
                l < u;

              )
                ((b = l++), (k[b] = g[b]._hx_name));
              b = k[f];
              if (null == b)
                throw Z.thrown('Unknown enum index ' + a + '@' + f);
              b = this.unserializeEnum(d, b);
              this.cache.push(b);
              return b;
            case 107:
              return NaN;
            case 108:
              b = new Ba();
              for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos); )
                b.add(this.unserialize());
              this.pos++;
              return b;
            case 109:
              return -Infinity;
            case 110:
              return null;
            case 111:
              return (
                (b = {}),
                this.cache.push(b),
                this.unserializeObject(b),
                b
              );
            case 112:
              return Infinity;
            case 113:
              a = new ic();
              this.cache.push(a);
              for (d = this.buf.charCodeAt(this.pos++); 58 == d; )
                ((b = this.readDigits()),
                  (d = this.unserialize()),
                  (a.h[b] = d),
                  (d = this.buf.charCodeAt(this.pos++)));
              if (104 != d) throw Z.thrown('Invalid IntMap format');
              return a;
            case 114:
              a = this.readDigits();
              if (0 > a || a >= this.cache.length)
                throw Z.thrown('Invalid reference');
              return this.cache[a];
            case 115:
              a = this.readDigits();
              d = this.buf;
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw Z.thrown('Invalid bytes length');
              f = bd.CODES;
              null == f && ((f = bd.initCodes()), (bd.CODES = f));
              b = this.pos;
              g = a & 3;
              k = b + (a - g);
              l = new yb(new ArrayBuffer(3 * (a >> 2) + (2 <= g ? g - 1 : 0)));
              for (u = 0; b < k; ) {
                var p = f[d.charCodeAt(b++)],
                  h = f[d.charCodeAt(b++)];
                l.b[u++] = ((p << 2) | (h >> 4)) & 255;
                p = f[d.charCodeAt(b++)];
                l.b[u++] = ((h << 4) | (p >> 2)) & 255;
                h = f[d.charCodeAt(b++)];
                l.b[u++] = ((p << 6) | h) & 255;
              }
              2 <= g &&
                ((p = f[d.charCodeAt(b++)]),
                (h = f[d.charCodeAt(b++)]),
                (l.b[u++] = ((p << 2) | (h >> 4)) & 255),
                3 == g &&
                  ((p = f[d.charCodeAt(b++)]),
                  (l.b[u++] = ((h << 4) | (p >> 2)) & 255)));
              this.pos += a;
              this.cache.push(l);
              return l;
            case 116:
              return !0;
            case 118:
              return (
                48 <= this.buf.charCodeAt(this.pos) &&
                57 >= this.buf.charCodeAt(this.pos) &&
                48 <= this.buf.charCodeAt(this.pos + 1) &&
                57 >= this.buf.charCodeAt(this.pos + 1) &&
                48 <= this.buf.charCodeAt(this.pos + 2) &&
                57 >= this.buf.charCodeAt(this.pos + 2) &&
                48 <= this.buf.charCodeAt(this.pos + 3) &&
                57 >= this.buf.charCodeAt(this.pos + 3) &&
                45 == this.buf.charCodeAt(this.pos + 4)
                  ? ((b = M.strDate(M.substr(this.buf, this.pos, 19))),
                    (this.pos += 19))
                  : (b = new Date(this.readFloat())),
                this.cache.push(b),
                b
              );
            case 119:
              a = this.unserialize();
              d = this.resolver.resolveEnum(a);
              if (null == d) throw Z.thrown('Enum not found ' + a);
              b = this.unserializeEnum(d, this.unserialize());
              this.cache.push(b);
              return b;
            case 120:
              throw Z.thrown(this.unserialize());
            case 121:
              a = this.readDigits();
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw Z.thrown('Invalid string length');
              b = M.substr(this.buf, this.pos, a);
              this.pos += a;
              b = decodeURIComponent(b.split('+').join(' '));
              this.scache.push(b);
              return b;
            case 122:
              return 0;
          }
          this.pos--;
          throw Z.thrown(
            'Invalid char ' +
              this.buf.charAt(this.pos) +
              ' at position ' +
              this.pos,
          );
        },
        __class__: bd,
      };
      var xf = function () {};
      h['haxe._Unserializer.NullResolver'] = xf;
      xf.__name__ = 'haxe._Unserializer.NullResolver';
      xf.instance = null;
      xf.prototype = {
        resolveClass: function (a) {
          return null;
        },
        resolveEnum: function (a) {
          return null;
        },
        __class__: xf,
      };
      var Og = function (a, b, d) {
        Z.call(this, String(a), b, d);
        this.value = a;
        this.__skipStack++;
      };
      h['haxe.ValueException'] = Og;
      Og.__name__ = 'haxe.ValueException';
      Og.__super__ = Z;
      Og.prototype = w(Z.prototype, {
        unwrap: function () {
          return this.value;
        },
        __class__: Og,
      });
      var gg = function () {
        this.a1 = 1;
        this.a2 = 0;
      };
      h['haxe.crypto.Adler32'] = gg;
      gg.__name__ = 'haxe.crypto.Adler32';
      gg.read = function (a) {
        var b = new gg(),
          d = a.readByte(),
          f = a.readByte(),
          g = a.readByte();
        a = a.readByte();
        b.a1 = (g << 8) | a;
        b.a2 = (d << 8) | f;
        return b;
      };
      gg.prototype = {
        update: function (a, b, d) {
          var f = this.a1,
            g = this.a2,
            k = b;
          for (b += d; k < b; )
            ((d = k++), (f = (f + a.b[d]) % 65521), (g = (g + f) % 65521));
          this.a1 = f;
          this.a2 = g;
        },
        equals: function (a) {
          return a.a1 == this.a1 ? a.a2 == this.a2 : !1;
        },
        __class__: gg,
      };
      var yb = function (a) {
        this.length = a.byteLength;
        this.b = new Uint8Array(a);
        this.b.bufferValue = a;
        a.hxBytes = this;
        a.bytes = this.b;
      };
      h['haxe.io.Bytes'] = yb;
      yb.__name__ = 'haxe.io.Bytes';
      yb.ofString = function (a, b) {
        b = [];
        for (var d = 0; d < a.length; ) {
          var f = a.charCodeAt(d++);
          55296 <= f &&
            56319 >= f &&
            (f = ((f - 55232) << 10) | (a.charCodeAt(d++) & 1023));
          127 >= f
            ? b.push(f)
            : (2047 >= f
                ? b.push(192 | (f >> 6))
                : (65535 >= f
                    ? b.push(224 | (f >> 12))
                    : (b.push(240 | (f >> 18)), b.push(128 | ((f >> 12) & 63))),
                  b.push(128 | ((f >> 6) & 63))),
              b.push(128 | (f & 63)));
        }
        return new yb(new Uint8Array(b).buffer);
      };
      yb.ofData = function (a) {
        var b = a.hxBytes;
        return null != b ? b : new yb(a);
      };
      yb.prototype = {
        blit: function (a, b, d, f) {
          if (
            0 > a ||
            0 > d ||
            0 > f ||
            a + f > this.length ||
            d + f > b.length
          )
            throw Z.thrown($d.OutsideBounds);
          0 == d && f == b.b.byteLength
            ? this.b.set(b.b, a)
            : this.b.set(b.b.subarray(d, d + f), a);
        },
        setUInt16: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setUint16(a, b, !0);
        },
        setInt32: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setInt32(a, b, !0);
        },
        getString: function (a, b, d) {
          if (0 > a || 0 > b || a + b > this.length)
            throw Z.thrown($d.OutsideBounds);
          d = '';
          var f = this.b,
            g = Jc.fromCharCode,
            k = a;
          for (a += b; k < a; )
            if (((b = f[k++]), 128 > b)) {
              if (0 == b) break;
              d += g(b);
            } else if (224 > b) d += g(((b & 63) << 6) | (f[k++] & 127));
            else if (240 > b) {
              var l = f[k++];
              d += g(((b & 31) << 12) | ((l & 127) << 6) | (f[k++] & 127));
            } else {
              l = f[k++];
              var u = f[k++];
              b =
                ((b & 15) << 18) |
                ((l & 127) << 12) |
                ((u & 127) << 6) |
                (f[k++] & 127);
              d += g((b >> 10) + 55232);
              d += g((b & 1023) | 56320);
            }
          return d;
        },
        toString: function () {
          return this.getString(0, this.length);
        },
        __class__: yb,
      };
      var Cc = function () {};
      h['haxe.ds.ArraySort'] = Cc;
      Cc.__name__ = 'haxe.ds.ArraySort';
      Cc.sort = function (a, b) {
        Cc.rec(a, b, 0, a.length);
      };
      Cc.rec = function (a, b, d, f) {
        var g = (d + f) >> 1;
        if (12 > f - d) {
          if (!(f <= d))
            for (g = d + 1; g < f; )
              for (var k = g++; k > d; ) {
                if (0 > b(a[k], a[k - 1])) Cc.swap(a, k - 1, k);
                else break;
                --k;
              }
        } else
          (Cc.rec(a, b, d, g),
            Cc.rec(a, b, g, f),
            Cc.doMerge(a, b, d, g, f, g - d, f - g));
      };
      Cc.doMerge = function (a, b, d, f, g, k, l) {
        if (0 != k && 0 != l)
          if (2 == k + l) 0 > b(a[f], a[d]) && Cc.swap(a, f, d);
          else {
            if (k > l) {
              var u = k >> 1;
              var p = d + u;
              var h = Cc.lower(a, b, f, g, p);
              var r = h - f;
            } else
              ((r = l >> 1),
                (h = f + r),
                (p = Cc.upper(a, b, d, f, h)),
                (u = p - d));
            Cc.rotate(a, b, p, f, h);
            f = p + r;
            Cc.doMerge(a, b, d, p, f, u, r);
            Cc.doMerge(a, b, f, h, g, k - u, l - r);
          }
      };
      Cc.rotate = function (a, b, d, f, g) {
        if (d != f && f != g)
          for (b = Cc.gcd(g - d, f - d); 0 != b--; ) {
            for (
              var k = a[d + b], l = f - d, u = d + b, p = d + b + l;
              p != d + b;

            )
              ((a[u] = a[p]),
                (u = p),
                (p = g - p > l ? p + l : d + (l - (g - p))));
            a[u] = k;
          }
      };
      Cc.gcd = function (a, b) {
        for (; 0 != b; ) {
          var d = a % b;
          a = b;
          b = d;
        }
        return a;
      };
      Cc.upper = function (a, b, d, f, g) {
        f -= d;
        for (var k, l; 0 < f; )
          ((k = f >> 1),
            (l = d + k),
            0 > b(a[g], a[l]) ? (f = k) : ((d = l + 1), (f = f - k - 1)));
        return d;
      };
      Cc.lower = function (a, b, d, f, g) {
        f -= d;
        for (var k, l; 0 < f; )
          ((k = f >> 1),
            (l = d + k),
            0 > b(a[l], a[g]) ? ((d = l + 1), (f = f - k - 1)) : (f = k));
        return d;
      };
      Cc.swap = function (a, b, d) {
        var f = a[b];
        a[b] = a[d];
        a[d] = f;
      };
      var ic = function () {
        this.h = {};
      };
      h['haxe.ds.IntMap'] = ic;
      ic.__name__ = 'haxe.ds.IntMap';
      ic.__interfaces__ = [ca];
      ic.prototype = {
        set: function (a, b) {
          this.h[a] = b;
        },
        get: function (a) {
          return this.h[a];
        },
        remove: function (a) {
          if (!this.h.hasOwnProperty(a)) return !1;
          delete this.h[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h) this.h.hasOwnProperty(b) && a.push(+b);
          return new cf(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a];
            },
          };
        },
        __class__: ic,
      };
      var jh = function (a, b) {
        this.item = a;
        this.next = b;
      };
      h['haxe.ds._List.ListNode'] = jh;
      jh.__name__ = 'haxe.ds._List.ListNode';
      jh.prototype = { __class__: jh };
      var Rj = function (a) {
        this.head = a;
      };
      h['haxe.ds._List.ListIterator'] = Rj;
      Rj.__name__ = 'haxe.ds._List.ListIterator';
      Rj.prototype = {
        hasNext: function () {
          return null != this.head;
        },
        next: function () {
          var a = this.head.item;
          this.head = this.head.next;
          return a;
        },
        __class__: Rj,
      };
      var Sa = function () {
        this.h = Object.create(null);
      };
      h['haxe.ds.StringMap'] = Sa;
      Sa.__name__ = 'haxe.ds.StringMap';
      Sa.__interfaces__ = [ca];
      Sa.prototype = {
        get: function (a) {
          return this.h[a];
        },
        set: function (a, b) {
          this.h[a] = b;
        },
        remove: function (a) {
          return Object.prototype.hasOwnProperty.call(this.h, a)
            ? (delete this.h[a], !0)
            : !1;
        },
        keys: function () {
          return new mh(this.h);
        },
        __class__: Sa,
      };
      var mh = function (a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0;
      };
      h['haxe.ds._StringMap.StringMapKeyIterator'] = mh;
      mh.__name__ = 'haxe.ds._StringMap.StringMapKeyIterator';
      mh.prototype = {
        hasNext: function () {
          return this.current < this.length;
        },
        next: function () {
          return this.keys[this.current++];
        },
        __class__: mh,
      };
      var hg = function (a, b, d) {
        Z.call(this, a, b);
        this.posInfos =
          null == d
            ? {
                fileName: '(unknown)',
                lineNumber: 0,
                className: '(unknown)',
                methodName: '(unknown)',
              }
            : d;
        this.__skipStack++;
      };
      h['haxe.exceptions.PosException'] = hg;
      hg.__name__ = 'haxe.exceptions.PosException';
      hg.__super__ = Z;
      hg.prototype = w(Z.prototype, {
        toString: function () {
          return (
            '' +
            Z.prototype.toString.call(this) +
            ' in ' +
            this.posInfos.className +
            '.' +
            this.posInfos.methodName +
            ' at ' +
            this.posInfos.fileName +
            ':' +
            this.posInfos.lineNumber
          );
        },
        __class__: hg,
      });
      var Bi = function (a, b, d) {
        null == a && (a = 'Not implemented');
        hg.call(this, a, b, d);
        this.__skipStack++;
      };
      h['haxe.exceptions.NotImplementedException'] = Bi;
      Bi.__name__ = 'haxe.exceptions.NotImplementedException';
      Bi.__super__ = hg;
      Bi.prototype = w(hg.prototype, { __class__: Bi });
      var Ci = function () {
        this.size = this.pos = 0;
      };
      h['haxe.io.BytesBuffer'] = Ci;
      Ci.__name__ = 'haxe.io.BytesBuffer';
      Ci.prototype = {
        addByte: function (a) {
          this.pos == this.size && this.grow(1);
          this.view.setUint8(this.pos++, a);
        },
        add: function (a) {
          this.pos + a.length > this.size && this.grow(a.length);
          if (0 != this.size) {
            var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
            this.u8.set(b, this.pos);
            this.pos += a.length;
          }
        },
        addBytes: function (a, b, d) {
          if (0 > b || 0 > d || b + d > a.length)
            throw Z.thrown($d.OutsideBounds);
          this.pos + d > this.size && this.grow(d);
          0 != this.size &&
            ((a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, d)),
            this.u8.set(a, this.pos),
            (this.pos += d));
        },
        grow: function (a) {
          var b = this.pos + a;
          for (a = 0 == this.size ? 16 : this.size; a < b; ) a = (3 * a) >> 1;
          b = new ArrayBuffer(a);
          var d = new Uint8Array(b);
          0 < this.size && d.set(this.u8);
          this.size = a;
          this.buffer = b;
          this.u8 = d;
          this.view = new DataView(this.buffer);
        },
        getBytes: function () {
          if (0 == this.size) return new yb(new ArrayBuffer(0));
          var a = new yb(this.buffer);
          a.length = this.pos;
          return a;
        },
        __class__: Ci,
      };
      var Di = function () {};
      h['haxe.io.Input'] = Di;
      Di.__name__ = 'haxe.io.Input';
      Di.prototype = {
        readByte: function () {
          throw new Bi(null, null, {
            fileName: 'haxe/io/Input.hx',
            lineNumber: 53,
            className: 'haxe.io.Input',
            methodName: 'readByte',
          });
        },
        readBytes: function (a, b, d) {
          var f = d,
            g = a.b;
          if (0 > b || 0 > d || b + d > a.length)
            throw Z.thrown($d.OutsideBounds);
          try {
            for (; 0 < f; ) ((g[b] = this.readByte()), ++b, --f);
          } catch (k) {
            if (((Na.lastError = k), !(Z.caught(k).unwrap() instanceof Pg)))
              throw k;
          }
          return d - f;
        },
        readFullBytes: function (a, b, d) {
          for (; 0 < d; ) {
            var f = this.readBytes(a, b, d);
            if (0 == f) throw Z.thrown($d.Blocked);
            b += f;
            d -= f;
          }
        },
        read: function (a) {
          for (var b = new yb(new ArrayBuffer(a)), d = 0; 0 < a; ) {
            var f = this.readBytes(b, d, a);
            if (0 == f) throw Z.thrown($d.Blocked);
            d += f;
            a -= f;
          }
          return b;
        },
        readInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          a = this.bigEndian ? b | (a << 8) : a | (b << 8);
          return 0 != (a & 32768) ? a - 65536 : a;
        },
        readUInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          return this.bigEndian ? b | (a << 8) : a | (b << 8);
        },
        readInt32: function () {
          var a = this.readByte(),
            b = this.readByte(),
            d = this.readByte(),
            f = this.readByte();
          return this.bigEndian
            ? f | (d << 8) | (b << 16) | (a << 24)
            : a | (b << 8) | (d << 16) | (f << 24);
        },
        readString: function (a, b) {
          var d = new yb(new ArrayBuffer(a));
          this.readFullBytes(d, 0, a);
          return d.getString(0, a, b);
        },
        __class__: Di,
      };
      var Ei = function (a, b, d) {
        null == b && (b = 0);
        null == d && (d = a.length - b);
        if (0 > b || 0 > d || b + d > a.length)
          throw Z.thrown($d.OutsideBounds);
        this.b = a.b;
        this.pos = b;
        this.totlen = this.len = d;
      };
      h['haxe.io.BytesInput'] = Ei;
      Ei.__name__ = 'haxe.io.BytesInput';
      Ei.__super__ = Di;
      Ei.prototype = w(Di.prototype, {
        readByte: function () {
          if (0 == this.len) throw Z.thrown(new Pg());
          this.len--;
          return this.b[this.pos++];
        },
        readBytes: function (a, b, d) {
          if (0 > b || 0 > d || b + d > a.length)
            throw Z.thrown($d.OutsideBounds);
          if (0 == this.len && 0 < d) throw Z.thrown(new Pg());
          this.len < d && (d = this.len);
          var f = this.b;
          a = a.b;
          for (var g = 0, k = d; g < k; ) {
            var l = g++;
            a[b + l] = f[this.pos + l];
          }
          this.pos += d;
          this.len -= d;
          return d;
        },
        __class__: Ei,
      });
      var Nl = (K['haxe.io.Encoding'] = {
        __ename__: 'haxe.io.Encoding',
        __constructs__: null,
        UTF8: {
          _hx_name: 'UTF8',
          _hx_index: 0,
          __enum__: 'haxe.io.Encoding',
          toString: q,
        },
        RawNative: {
          _hx_name: 'RawNative',
          _hx_index: 1,
          __enum__: 'haxe.io.Encoding',
          toString: q,
        },
      });
      Nl.__constructs__ = [Nl.UTF8, Nl.RawNative];
      var Pg = function () {};
      h['haxe.io.Eof'] = Pg;
      Pg.__name__ = 'haxe.io.Eof';
      Pg.prototype = {
        toString: function () {
          return 'Eof';
        },
        __class__: Pg,
      };
      var $d = (K['haxe.io.Error'] = {
        __ename__: 'haxe.io.Error',
        __constructs__: null,
        Blocked: {
          _hx_name: 'Blocked',
          _hx_index: 0,
          __enum__: 'haxe.io.Error',
          toString: q,
        },
        Overflow: {
          _hx_name: 'Overflow',
          _hx_index: 1,
          __enum__: 'haxe.io.Error',
          toString: q,
        },
        OutsideBounds: {
          _hx_name: 'OutsideBounds',
          _hx_index: 2,
          __enum__: 'haxe.io.Error',
          toString: q,
        },
        Custom:
          ((J = function (a) {
            return {
              _hx_index: 3,
              e: a,
              __enum__: 'haxe.io.Error',
              toString: q,
            };
          }),
          (J._hx_name = 'Custom'),
          (J.__params__ = ['e']),
          J),
      });
      $d.__constructs__ = [
        $d.Blocked,
        $d.Overflow,
        $d.OutsideBounds,
        $d.Custom,
      ];
      var Yl = {
          fromBytes: function (a, b, d) {
            null == b && (b = 0);
            null == d && (d = (a.length - b) >> 2);
            return new Float32Array(a.b.bufferValue, b, d);
          },
        },
        Ed = function (a) {
          switch (a) {
            case '.':
            case '..':
              this.dir = a;
              this.file = '';
              return;
          }
          var b = a.lastIndexOf('/'),
            d = a.lastIndexOf('\\');
          b < d
            ? ((this.dir = M.substr(a, 0, d)),
              (a = M.substr(a, d + 1, null)),
              (this.backslash = !0))
            : d < b
              ? ((this.dir = M.substr(a, 0, b)), (a = M.substr(a, b + 1, null)))
              : (this.dir = null);
          b = a.lastIndexOf('.');
          -1 != b
            ? ((this.ext = M.substr(a, b + 1, null)),
              (this.file = M.substr(a, 0, b)))
            : ((this.ext = null), (this.file = a));
        };
      h['haxe.io.Path'] = Ed;
      Ed.__name__ = 'haxe.io.Path';
      Ed.withoutDirectory = function (a) {
        a = new Ed(a);
        a.dir = null;
        return a.toString();
      };
      Ed.directory = function (a) {
        a = new Ed(a);
        return null == a.dir ? '' : a.dir;
      };
      Ed.extension = function (a) {
        a = new Ed(a);
        return null == a.ext ? '' : a.ext;
      };
      Ed.prototype = {
        toString: function () {
          return (
            (null == this.dir ? '' : this.dir + (this.backslash ? '\\' : '/')) +
            this.file +
            (null == this.ext ? '' : '.' + this.ext)
          );
        },
        __class__: Ed,
      };
      var cf = function (a) {
        this.current = 0;
        this.array = a;
      };
      h['haxe.iterators.ArrayIterator'] = cf;
      cf.__name__ = 'haxe.iterators.ArrayIterator';
      cf.prototype = {
        hasNext: function () {
          return this.current < this.array.length;
        },
        next: function () {
          return this.array[this.current++];
        },
        __class__: cf,
      };
      var Dc = function (a, b, d) {
        this.xml = b;
        this.message = a;
        this.position = d;
        this.lineNumber = 1;
        for (a = this.positionAtLine = 0; a < d; ) {
          var f = a++;
          f = b.charCodeAt(f);
          10 == f
            ? (this.lineNumber++, (this.positionAtLine = 0))
            : 13 != f && this.positionAtLine++;
        }
      };
      h['haxe.xml.XmlParserException'] = Dc;
      Dc.__name__ = 'haxe.xml.XmlParserException';
      Dc.prototype = {
        toString: function () {
          return (
            Fa.getClass(this).__name__ +
            ': ' +
            this.message +
            ' at line ' +
            this.lineNumber +
            ' char ' +
            this.positionAtLine
          );
        },
        __class__: Dc,
      };
      var Me = function () {};
      h['haxe.xml.Parser'] = Me;
      Me.__name__ = 'haxe.xml.Parser';
      Me.parse = function (a, b) {
        null == b && (b = !1);
        var d = S.createDocument();
        Me.doParse(a, b, 0, d);
        return d;
      };
      Me.doParse = function (a, b, d, f) {
        null == d && (d = 0);
        for (
          var g = null,
            k = 1,
            l = 1,
            u = null,
            p = 0,
            h = 0,
            r = 0,
            n = new qb(),
            t = 1,
            E = -1;
          d < a.length;

        ) {
          var q = a.charCodeAt(d);
          switch (k) {
            case 0:
              switch (q) {
                case 9:
                case 10:
                case 13:
                case 32:
                  break;
                default:
                  k = l;
                  continue;
              }
              break;
            case 1:
              if (60 == q) ((k = 0), (l = 2));
              else {
                p = d;
                k = 13;
                continue;
              }
              break;
            case 2:
              switch (q) {
                case 33:
                  if (91 == a.charCodeAt(d + 1)) {
                    d += 2;
                    if ('CDATA[' != M.substr(a, d, 6).toUpperCase())
                      throw Z.thrown(new Dc('Expected <![CDATA[', a, d));
                    d += 5;
                    k = 17;
                  } else if (
                    68 == a.charCodeAt(d + 1) ||
                    100 == a.charCodeAt(d + 1)
                  ) {
                    if ('OCTYPE' != M.substr(a, d + 2, 6).toUpperCase())
                      throw Z.thrown(new Dc('Expected <!DOCTYPE', a, d));
                    d += 8;
                    k = 16;
                  } else {
                    if (45 != a.charCodeAt(d + 1) || 45 != a.charCodeAt(d + 2))
                      throw Z.thrown(new Dc('Expected \x3c!--', a, d));
                    d += 2;
                    k = 15;
                  }
                  p = d + 1;
                  break;
                case 47:
                  if (null == f)
                    throw Z.thrown(new Dc('Expected node name', a, d));
                  p = d + 1;
                  k = 0;
                  l = 10;
                  break;
                case 63:
                  k = 14;
                  p = d;
                  break;
                default:
                  k = 3;
                  p = d;
                  continue;
              }
              break;
            case 3:
              if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                )
              ) {
                if (d == p) throw Z.thrown(new Dc('Expected node name', a, d));
                g = S.createElement(M.substr(a, p, d - p));
                f.addChild(g);
                ++h;
                k = 0;
                l = 4;
                continue;
              }
              break;
            case 4:
              switch (q) {
                case 47:
                  k = 11;
                  break;
                case 62:
                  k = 9;
                  break;
                default:
                  k = 5;
                  p = d;
                  continue;
              }
              break;
            case 5:
              if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                )
              ) {
                if (p == d)
                  throw Z.thrown(new Dc('Expected attribute name', a, d));
                u = M.substr(a, p, d - p);
                if (g.exists(u))
                  throw Z.thrown(
                    new Dc('Duplicate attribute [' + u + ']', a, d),
                  );
                k = 0;
                l = 6;
                continue;
              }
              break;
            case 6:
              if (61 == q) ((k = 0), (l = 7));
              else throw Z.thrown(new Dc('Expected =', a, d));
              break;
            case 7:
              switch (q) {
                case 34:
                case 39:
                  n = new qb();
                  k = 8;
                  p = d + 1;
                  E = q;
                  break;
                default:
                  throw Z.thrown(new Dc('Expected "', a, d));
              }
              break;
            case 8:
              switch (q) {
                case 38:
                  t = d - p;
                  n.b += null == t ? M.substr(a, p, null) : M.substr(a, p, t);
                  k = 18;
                  t = 8;
                  p = d + 1;
                  break;
                case 60:
                case 62:
                  if (b)
                    throw Z.thrown(
                      new Dc(
                        'Invalid unescaped ' +
                          String.fromCodePoint(q) +
                          ' in attribute value',
                        a,
                        d,
                      ),
                    );
                  q == E &&
                    ((l = d - p),
                    (n.b +=
                      null == l ? M.substr(a, p, null) : M.substr(a, p, l)),
                    (l = n.b),
                    (n = new qb()),
                    g.set(u, l),
                    (k = 0),
                    (l = 4));
                  break;
                default:
                  q == E &&
                    ((l = d - p),
                    (n.b +=
                      null == l ? M.substr(a, p, null) : M.substr(a, p, l)),
                    (l = n.b),
                    (n = new qb()),
                    g.set(u, l),
                    (k = 0),
                    (l = 4));
              }
              break;
            case 9:
              p = d = Me.doParse(a, b, d, g);
              k = 1;
              break;
            case 10:
              if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                )
              ) {
                if (p == d) throw Z.thrown(new Dc('Expected node name', a, d));
                l = M.substr(a, p, d - p);
                if (null == f || 0 != f.nodeType)
                  throw Z.thrown(
                    new Dc('Unexpected </' + l + '>, tag is not open', a, d),
                  );
                if (f.nodeType != S.Element)
                  throw Z.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == f.nodeType ? 'null' : y.toString(f.nodeType)),
                  );
                if (l != f.nodeName) {
                  if (f.nodeType != S.Element)
                    throw Z.thrown(
                      'Bad node type, expected Element but found ' +
                        (null == f.nodeType ? 'null' : y.toString(f.nodeType)),
                    );
                  throw Z.thrown(
                    new Dc('Expected </' + f.nodeName + '>', a, d),
                  );
                }
                k = 0;
                l = 12;
                continue;
              }
              break;
            case 11:
              if (62 == q) k = 1;
              else throw Z.thrown(new Dc('Expected >', a, d));
              break;
            case 12:
              if (62 == q) return (0 == h && f.addChild(S.createPCData('')), d);
              throw Z.thrown(new Dc('Expected >', a, d));
            case 13:
              60 == q
                ? ((l = d - p),
                  (n.b += null == l ? M.substr(a, p, null) : M.substr(a, p, l)),
                  (l = S.createPCData(n.b)),
                  (n = new qb()),
                  f.addChild(l),
                  ++h,
                  (k = 0),
                  (l = 2))
                : 38 == q &&
                  ((t = d - p),
                  (n.b += null == t ? M.substr(a, p, null) : M.substr(a, p, t)),
                  (k = 18),
                  (t = 13),
                  (p = d + 1));
              break;
            case 14:
              63 == q &&
                62 == a.charCodeAt(d + 1) &&
                (++d,
                (k = M.substr(a, p + 1, d - p - 2)),
                f.addChild(S.createProcessingInstruction(k)),
                ++h,
                (k = 1));
              break;
            case 15:
              45 == q &&
                45 == a.charCodeAt(d + 1) &&
                62 == a.charCodeAt(d + 2) &&
                (f.addChild(S.createComment(M.substr(a, p, d - p))),
                ++h,
                (d += 2),
                (k = 1));
              break;
            case 16:
              91 == q
                ? ++r
                : 93 == q
                  ? --r
                  : 62 == q &&
                    0 == r &&
                    (f.addChild(S.createDocType(M.substr(a, p, d - p))),
                    ++h,
                    (k = 1));
              break;
            case 17:
              93 == q &&
                93 == a.charCodeAt(d + 1) &&
                62 == a.charCodeAt(d + 2) &&
                ((k = S.createCData(M.substr(a, p, d - p))),
                f.addChild(k),
                ++h,
                (d += 2),
                (k = 1));
              break;
            case 18:
              if (59 == q) {
                p = M.substr(a, p, d - p);
                if (35 == p.charCodeAt(0))
                  ((p =
                    120 == p.charCodeAt(1)
                      ? G.parseInt('0' + M.substr(p, 1, p.length - 1))
                      : G.parseInt(M.substr(p, 1, p.length - 1))),
                    (n.b += String.fromCodePoint(p)));
                else if (Object.prototype.hasOwnProperty.call(Me.escapes.h, p))
                  n.b += G.string(Me.escapes.h[p]);
                else {
                  if (b) throw Z.thrown(new Dc('Undefined entity: ' + p, a, d));
                  n.b += G.string('&' + p + ';');
                }
                p = d + 1;
                k = t;
              } else if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                ) &&
                35 != q
              ) {
                if (b)
                  throw Z.thrown(
                    new Dc(
                      'Invalid character in entity: ' + String.fromCodePoint(q),
                      a,
                      d,
                    ),
                  );
                n.b += String.fromCodePoint(38);
                k = d - p;
                n.b += null == k ? M.substr(a, p, null) : M.substr(a, p, k);
                --d;
                p = d + 1;
                k = t;
              }
          }
          ++d;
        }
        1 == k && ((p = d), (k = 13));
        if (13 == k) {
          if (0 == f.nodeType) {
            if (f.nodeType != S.Element)
              throw Z.thrown(
                'Bad node type, expected Element but found ' +
                  (null == f.nodeType ? 'null' : y.toString(f.nodeType)),
              );
            throw Z.thrown(new Dc('Unclosed node <' + f.nodeName + '>', a, d));
          }
          if (d != p || 0 == h)
            ((t = d - p),
              (n.b += null == t ? M.substr(a, p, null) : M.substr(a, p, t)),
              f.addChild(S.createPCData(n.b)));
          return d;
        }
        if (!b && 18 == k && 13 == t)
          return (
            (n.b += String.fromCodePoint(38)),
            (t = d - p),
            (n.b += null == t ? M.substr(a, p, null) : M.substr(a, p, t)),
            f.addChild(S.createPCData(n.b)),
            d
          );
        throw Z.thrown(new Dc('Unexpected end', a, d));
      };
      var re = function (a) {
        this.output = new qb();
        this.pretty = a;
      };
      h['haxe.xml.Printer'] = re;
      re.__name__ = 'haxe.xml.Printer';
      re.print = function (a, b) {
        null == b && (b = !1);
        b = new re(b);
        b.writeNode(a, '');
        return b.output.b;
      };
      re.prototype = {
        writeNode: function (a, b) {
          switch (a.nodeType) {
            case 0:
              this.output.b += G.string(b + '<');
              if (a.nodeType != S.Element)
                throw Z.thrown(
                  'Bad node type, expected Element but found ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              this.output.b += G.string(a.nodeName);
              for (var d = a.attributes(); d.hasNext(); ) {
                var f = d.next();
                this.output.b += G.string(' ' + f + '="');
                f = R.htmlEscape(a.get(f), !0);
                this.output.b += G.string(f);
                this.output.b += '"';
              }
              if (this.hasChildren(a)) {
                this.output.b += '>';
                this.pretty && (this.output.b += '\n');
                if (a.nodeType != S.Document && a.nodeType != S.Element)
                  throw Z.thrown(
                    'Bad node type, expected Element or Document but found ' +
                      (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                  );
                d = 0;
                for (f = a.children; d < f.length; ) {
                  var g = f[d++];
                  this.writeNode(g, this.pretty ? b + '\t' : b);
                }
                this.output.b += G.string(b + '</');
                if (a.nodeType != S.Element)
                  throw Z.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                  );
                this.output.b += G.string(a.nodeName);
                this.output.b += '>';
              } else this.output.b += '/>';
              this.pretty && (this.output.b += '\n');
              break;
            case 1:
              if (a.nodeType == S.Document || a.nodeType == S.Element)
                throw Z.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              a = a.nodeValue;
              0 != a.length &&
                ((f = b + R.htmlEscape(a)),
                (this.output.b += G.string(f)),
                this.pretty && (this.output.b += '\n'));
              break;
            case 2:
              this.output.b += G.string(b + '<![CDATA[');
              if (a.nodeType == S.Document || a.nodeType == S.Element)
                throw Z.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              this.output.b += G.string(a.nodeValue);
              this.output.b += ']]\x3e';
              this.pretty && (this.output.b += '\n');
              break;
            case 3:
              if (a.nodeType == S.Document || a.nodeType == S.Element)
                throw Z.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              a = a.nodeValue;
              a = a.replace(/[\n\r\t]+/g, '');
              this.output.b += null == b ? 'null' : '' + b;
              f = R.trim('\x3c!--' + a + '--\x3e');
              this.output.b += G.string(f);
              this.pretty && (this.output.b += '\n');
              break;
            case 4:
              if (a.nodeType == S.Document || a.nodeType == S.Element)
                throw Z.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              this.output.b += G.string('<!DOCTYPE ' + a.nodeValue + '>');
              this.pretty && (this.output.b += '\n');
              break;
            case 5:
              if (a.nodeType == S.Document || a.nodeType == S.Element)
                throw Z.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              this.output.b += G.string('<?' + a.nodeValue + '?>');
              this.pretty && (this.output.b += '\n');
              break;
            case 6:
              if (a.nodeType != S.Document && a.nodeType != S.Element)
                throw Z.thrown(
                  'Bad node type, expected Element or Document but found ' +
                    (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
                );
              d = 0;
              for (f = a.children; d < f.length; )
                ((g = f[d++]), this.writeNode(g, b));
          }
        },
        hasChildren: function (a) {
          if (a.nodeType != S.Document && a.nodeType != S.Element)
            throw Z.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == a.nodeType ? 'null' : y.toString(a.nodeType)),
            );
          var b = 0;
          for (a = a.children; b < a.length; ) {
            var d = a[b++];
            switch (d.nodeType) {
              case 0:
              case 1:
                return !0;
              case 2:
              case 3:
                if (d.nodeType == S.Document || d.nodeType == S.Element)
                  throw Z.thrown(
                    'Bad node type, unexpected ' +
                      (null == d.nodeType ? 'null' : y.toString(d.nodeType)),
                  );
                if (0 != R.ltrim(d.nodeValue).length) return !0;
            }
          }
          return !1;
        },
        __class__: re,
      };
      var ig = (K['haxe.zip.ExtraField'] = {
        __ename__: 'haxe.zip.ExtraField',
        __constructs__: null,
        FUnknown:
          ((J = function (a, b) {
            return {
              _hx_index: 0,
              tag: a,
              bytes: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: q,
            };
          }),
          (J._hx_name = 'FUnknown'),
          (J.__params__ = ['tag', 'bytes']),
          J),
        FInfoZipUnicodePath:
          ((J = function (a, b) {
            return {
              _hx_index: 1,
              name: a,
              crc: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: q,
            };
          }),
          (J._hx_name = 'FInfoZipUnicodePath'),
          (J.__params__ = ['name', 'crc']),
          J),
        FUtf8: {
          _hx_name: 'FUtf8',
          _hx_index: 2,
          __enum__: 'haxe.zip.ExtraField',
          toString: q,
        },
      });
      ig.__constructs__ = [ig.FUnknown, ig.FInfoZipUnicodePath, ig.FUtf8];
      var ae = (K['haxe.zip.Huffman'] = {
        __ename__: 'haxe.zip.Huffman',
        __constructs__: null,
        Found:
          ((J = function (a) {
            return {
              _hx_index: 0,
              i: a,
              __enum__: 'haxe.zip.Huffman',
              toString: q,
            };
          }),
          (J._hx_name = 'Found'),
          (J.__params__ = ['i']),
          J),
        NeedBit:
          ((J = function (a, b) {
            return {
              _hx_index: 1,
              left: a,
              right: b,
              __enum__: 'haxe.zip.Huffman',
              toString: q,
            };
          }),
          (J._hx_name = 'NeedBit'),
          (J.__params__ = ['left', 'right']),
          J),
        NeedBits:
          ((J = function (a, b) {
            return {
              _hx_index: 2,
              n: a,
              table: b,
              __enum__: 'haxe.zip.Huffman',
              toString: q,
            };
          }),
          (J._hx_name = 'NeedBits'),
          (J.__params__ = ['n', 'table']),
          J),
      });
      ae.__constructs__ = [ae.Found, ae.NeedBit, ae.NeedBits];
      var wk = function () {};
      h['haxe.zip.HuffTools'] = wk;
      wk.__name__ = 'haxe.zip.HuffTools';
      wk.prototype = {
        treeDepth: function (a) {
          switch (a._hx_index) {
            case 0:
              return 0;
            case 1:
              var b = a.right;
              a = this.treeDepth(a.left);
              b = this.treeDepth(b);
              return 1 + (a < b ? a : b);
            case 2:
              throw Z.thrown('assert');
          }
        },
        treeCompress: function (a) {
          var b = this.treeDepth(a);
          if (0 == b) return a;
          if (1 == b) {
            if (1 == a._hx_index)
              return (
                (b = a.right),
                ae.NeedBit(this.treeCompress(a.left), this.treeCompress(b))
              );
            throw Z.thrown('assert');
          }
          for (var d = [], f = 0, g = 1 << b; f < g; )
            (f++, d.push(ae.Found(-1)));
          this.treeWalk(d, 0, 0, b, a);
          return ae.NeedBits(b, d);
        },
        treeWalk: function (a, b, d, f, g) {
          if (1 == g._hx_index) {
            var k = g.left,
              l = g.right;
            0 < f
              ? (this.treeWalk(a, b, d + 1, f - 1, k),
                this.treeWalk(a, b | (1 << d), d + 1, f - 1, l))
              : (a[b] = this.treeCompress(g));
          } else a[b] = this.treeCompress(g);
        },
        treeMake: function (a, b, d, f) {
          if (f > b) throw Z.thrown('Invalid huffman');
          var g = (d << 5) | f;
          if (a.h.hasOwnProperty(g)) return ae.Found(a.h[g]);
          d <<= 1;
          ++f;
          return ae.NeedBit(
            this.treeMake(a, b, d, f),
            this.treeMake(a, b, d | 1, f),
          );
        },
        make: function (a, b, d, f) {
          if (1 == d) return ae.NeedBit(ae.Found(0), ae.Found(0));
          var g = [],
            k = [];
          if (32 < f) throw Z.thrown('Invalid huffman');
          for (var l = 0, u = f; l < u; ) (l++, g.push(0), k.push(0));
          l = 0;
          for (u = d; l < u; ) {
            var p = l++;
            p = a[p + b];
            if (p >= f) throw Z.thrown('Invalid huffman');
            g[p]++;
          }
          var h = 0;
          l = 1;
          for (u = f - 1; l < u; )
            ((p = l++), (h = (h + g[p]) << 1), (k[p] = h));
          g = new ic();
          l = 0;
          for (u = d; l < u; )
            ((p = l++),
              (d = a[p + b]),
              0 != d &&
                ((h = k[d - 1]), (k[d - 1] = h + 1), (g.h[(h << 5) | d] = p)));
          return this.treeCompress(
            ae.NeedBit(this.treeMake(g, f, 0, 1), this.treeMake(g, f, 1, 1)),
          );
        },
        __class__: wk,
      };
      var xk = function (a) {
        this.buffer = new yb(new ArrayBuffer(65536));
        this.pos = 0;
        a && (this.crc = new gg());
      };
      h['haxe.zip._InflateImpl.Window'] = xk;
      xk.__name__ = 'haxe.zip._InflateImpl.Window';
      xk.prototype = {
        slide: function () {
          null != this.crc && this.crc.update(this.buffer, 0, 32768);
          var a = new yb(new ArrayBuffer(65536));
          this.pos -= 32768;
          a.blit(0, this.buffer, 32768, this.pos);
          this.buffer = a;
        },
        addBytes: function (a, b, d) {
          65536 < this.pos + d && this.slide();
          this.buffer.blit(this.pos, a, b, d);
          this.pos += d;
        },
        addByte: function (a) {
          65536 == this.pos && this.slide();
          this.buffer.b[this.pos] = a & 255;
          this.pos++;
        },
        getLastChar: function () {
          return this.buffer.b[this.pos - 1];
        },
        available: function () {
          return this.pos;
        },
        checksum: function () {
          null != this.crc && this.crc.update(this.buffer, 0, this.pos);
          return this.crc;
        },
        __class__: xk,
      };
      var sc = (K['haxe.zip._InflateImpl.State'] = {
        __ename__: 'haxe.zip._InflateImpl.State',
        __constructs__: null,
        Head: {
          _hx_name: 'Head',
          _hx_index: 0,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Block: {
          _hx_name: 'Block',
          _hx_index: 1,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        CData: {
          _hx_name: 'CData',
          _hx_index: 2,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Flat: {
          _hx_name: 'Flat',
          _hx_index: 3,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Crc: {
          _hx_name: 'Crc',
          _hx_index: 4,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Dist: {
          _hx_name: 'Dist',
          _hx_index: 5,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        DistOne: {
          _hx_name: 'DistOne',
          _hx_index: 6,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Done: {
          _hx_name: 'Done',
          _hx_index: 7,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
      });
      sc.__constructs__ = [
        sc.Head,
        sc.Block,
        sc.CData,
        sc.Flat,
        sc.Crc,
        sc.Dist,
        sc.DistOne,
        sc.Done,
      ];
      var Qc = function (a, b, d) {
        null == d && (d = !0);
        null == b && (b = !0);
        this.isFinal = !1;
        this.htools = new wk();
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.dist = this.len = 0;
        this.state = b ? sc.Head : sc.Block;
        this.input = a;
        this.needed = this.nbits = this.bits = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.window = new xk(d);
      };
      h['haxe.zip.InflateImpl'] = Qc;
      Qc.__name__ = 'haxe.zip.InflateImpl';
      Qc.prototype = {
        buildFixedHuffman: function () {
          if (null != Qc.FIXED_HUFFMAN) return Qc.FIXED_HUFFMAN;
          for (var a = [], b = 0; 288 > b; ) {
            var d = b++;
            a.push(143 >= d ? 8 : 255 >= d ? 9 : 279 >= d ? 7 : 8);
          }
          Qc.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
          return Qc.FIXED_HUFFMAN;
        },
        readBytes: function (a, b, d) {
          this.needed = d;
          this.outpos = b;
          this.output = a;
          if (0 < d) for (; this.inflateLoop(); );
          return d - this.needed;
        },
        getBits: function (a) {
          for (; this.nbits < a; )
            ((this.bits |= this.input.readByte() << this.nbits),
              (this.nbits += 8));
          var b = this.bits & ((1 << a) - 1);
          this.nbits -= a;
          this.bits >>= a;
          return b;
        },
        getBit: function () {
          0 == this.nbits &&
            ((this.nbits = 8), (this.bits = this.input.readByte()));
          var a = 1 == (this.bits & 1);
          this.nbits--;
          this.bits >>= 1;
          return a;
        },
        getRevBits: function (a) {
          return 0 == a
            ? 0
            : this.getBit()
              ? (1 << (a - 1)) | this.getRevBits(a - 1)
              : this.getRevBits(a - 1);
        },
        resetBits: function () {
          this.nbits = this.bits = 0;
        },
        addBytes: function (a, b, d) {
          this.window.addBytes(a, b, d);
          this.output.blit(this.outpos, a, b, d);
          this.needed -= d;
          this.outpos += d;
        },
        addByte: function (a) {
          this.window.addByte(a);
          this.output.b[this.outpos] = a & 255;
          this.needed--;
          this.outpos++;
        },
        addDistOne: function (a) {
          for (var b = this.window.getLastChar(), d = 0; d < a; )
            (d++, this.addByte(b));
        },
        addDist: function (a, b) {
          this.addBytes(this.window.buffer, this.window.pos - a, b);
        },
        applyHuffman: function (a) {
          switch (a._hx_index) {
            case 0:
              var b = a.i;
              return b;
            case 1:
              return (
                (b = a.left),
                (a = a.right),
                this.applyHuffman(this.getBit() ? a : b)
              );
            case 2:
              return ((b = a.n), this.applyHuffman(a.table[this.getBits(b)]));
          }
        },
        inflateLengths: function (a, b) {
          for (var d = 0, f = 0; d < b; ) {
            var g = this.applyHuffman(this.huffman);
            switch (g) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                f = g;
                a[d] = g;
                ++d;
                break;
              case 16:
                g = d + 3 + this.getBits(2);
                if (g > b) throw Z.thrown('Invalid data');
                for (; d < g; ) ((a[d] = f), ++d);
                break;
              case 17:
                d += 3 + this.getBits(3);
                if (d > b) throw Z.thrown('Invalid data');
                break;
              case 18:
                d += 11 + this.getBits(7);
                if (d > b) throw Z.thrown('Invalid data');
                break;
              default:
                throw Z.thrown('Invalid data');
            }
          }
        },
        inflateLoop: function () {
          switch (this.state._hx_index) {
            case 0:
              var a = this.input.readByte();
              if (8 != (a & 15)) throw Z.thrown('Invalid data');
              var b = this.input.readByte(),
                d = 0 != (b & 32);
              if (0 != ((a << 8) + b) % 31) throw Z.thrown('Invalid data');
              if (d) throw Z.thrown('Unsupported dictionary');
              this.state = sc.Block;
              return !0;
            case 1:
              switch (((this.isFinal = this.getBit()), this.getBits(2))) {
                case 0:
                  this.len = this.input.readUInt16();
                  if (this.input.readUInt16() != 65535 - this.len)
                    throw Z.thrown('Invalid data');
                  this.state = sc.Flat;
                  a = this.inflateLoop();
                  this.resetBits();
                  return a;
                case 1:
                  return (
                    (this.huffman = this.buildFixedHuffman()),
                    (this.huffdist = null),
                    (this.state = sc.CData),
                    !0
                  );
                case 2:
                  a = this.getBits(5) + 257;
                  b = this.getBits(5) + 1;
                  var f = this.getBits(4) + 4;
                  d = 0;
                  for (var g = f; d < g; ) {
                    var k = d++;
                    this.lengths[Qc.CODE_LENGTHS_POS[k]] = this.getBits(3);
                  }
                  d = f;
                  for (g = 19; d < g; )
                    ((k = d++), (this.lengths[Qc.CODE_LENGTHS_POS[k]] = 0));
                  this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                  f = [];
                  d = 0;
                  for (g = a + b; d < g; ) (d++, f.push(0));
                  this.inflateLengths(f, a + b);
                  this.huffdist = this.htools.make(f, a, b, 16);
                  this.huffman = this.htools.make(f, 0, a, 16);
                  this.state = sc.CData;
                  return !0;
                default:
                  throw Z.thrown('Invalid data');
              }
            case 2:
              b = this.applyHuffman(this.huffman);
              if (256 > b) return (this.addByte(b), 0 < this.needed);
              if (256 == b) this.state = this.isFinal ? sc.Crc : sc.Block;
              else {
                b -= 257;
                a = Qc.LEN_EXTRA_BITS_TBL[b];
                if (-1 == a) throw Z.thrown('Invalid data');
                this.len = Qc.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                b =
                  null == this.huffdist
                    ? this.getRevBits(5)
                    : this.applyHuffman(this.huffdist);
                a = Qc.DIST_EXTRA_BITS_TBL[b];
                if (-1 == a) throw Z.thrown('Invalid data');
                this.dist = Qc.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                if (this.dist > this.window.available())
                  throw Z.thrown('Invalid data');
                this.state = 1 == this.dist ? sc.DistOne : sc.Dist;
              }
              return !0;
            case 3:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                (b = this.input.read(a)),
                (this.len -= a),
                this.addBytes(b, 0, a),
                0 == this.len &&
                  (this.state = this.isFinal ? sc.Crc : sc.Block),
                0 < this.needed
              );
            case 4:
              a = this.window.checksum();
              if (null == a) return ((this.state = sc.Done), !0);
              b = gg.read(this.input);
              if (!a.equals(b)) throw Z.thrown('Invalid CRC');
              this.state = sc.Done;
              return !0;
            case 5:
              for (; 0 < this.len && 0 < this.needed; )
                ((a = this.len < this.dist ? this.len : this.dist),
                  (a = this.needed < a ? this.needed : a),
                  this.addDist(this.dist, a),
                  (this.len -= a));
              0 == this.len && (this.state = sc.CData);
              return 0 < this.needed;
            case 6:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                this.addDistOne(a),
                (this.len -= a),
                0 == this.len && (this.state = sc.CData),
                0 < this.needed
              );
            case 7:
              return !1;
          }
        },
        __class__: Qc,
      };
      var Qg = function (a) {
        this.i = a;
      };
      h['haxe.zip.Reader'] = Qg;
      Qg.__name__ = 'haxe.zip.Reader';
      Qg.readZip = function (a) {
        return new Qg(a).read();
      };
      Qg.prototype = {
        readZipDate: function () {
          var a = this.i.readUInt16(),
            b = (a >> 11) & 31,
            d = (a >> 5) & 63;
          a &= 31;
          var f = this.i.readUInt16();
          return new Date(
            (f >> 9) + 1980,
            ((f >> 5) & 15) - 1,
            f & 31,
            b,
            d,
            a << 1,
          );
        },
        readExtraFields: function (a) {
          for (var b = new Ba(); 0 < a; ) {
            if (4 > a) throw Z.thrown('Invalid extra fields data');
            var d = this.i.readUInt16(),
              f = this.i.readUInt16();
            if (a < f) throw Z.thrown('Invalid extra fields data');
            if (28789 == d) {
              var g = this.i.readByte();
              if (1 != g) {
                var k = new Ci();
                k.addByte(g);
                k.add(this.i.read(f - 1));
                b.add(ig.FUnknown(d, k.getBytes()));
              } else
                ((d = this.i.readInt32()),
                  (g = this.i.read(f - 5).toString()),
                  b.add(ig.FInfoZipUnicodePath(g, d)));
            } else b.add(ig.FUnknown(d, this.i.read(f)));
            a -= 4 + f;
          }
          return b;
        },
        readEntryHeader: function () {
          var a = this.i,
            b = a.readInt32();
          if (33639248 == b || 101010256 == b) return null;
          if (67324752 != b) throw Z.thrown('Invalid Zip Data');
          a.readUInt16();
          b = a.readUInt16();
          var d = 0 != (b & 2048);
          if (0 != (b & 63473)) throw Z.thrown('Unsupported flags ' + b);
          var f = a.readUInt16(),
            g = 0 != f;
          if (g && 8 != f) throw Z.thrown('Unsupported compression ' + f);
          f = this.readZipDate();
          var k = a.readInt32(),
            l = a.readInt32(),
            u = a.readInt32(),
            p = a.readInt16(),
            h = a.readInt16();
          a = a.readString(p);
          h = this.readExtraFields(h);
          d && h.push(ig.FUtf8);
          0 != (b & 8) && (k = null);
          return {
            fileName: a,
            fileSize: u,
            fileTime: f,
            compressed: g,
            dataSize: l,
            data: null,
            crc32: k,
            extraFields: h,
          };
        },
        read: function () {
          for (var a = new Ba(), b = null; ; ) {
            var d = this.readEntryHeader();
            if (null == d) break;
            if (null == d.crc32) {
              if (d.compressed) {
                null == b && (b = new yb(new ArrayBuffer(65536)));
                for (var f = new Ci(), g = new Qc(this.i, !1, !1); ; ) {
                  var k = g.readBytes(b, 0, 65536);
                  f.addBytes(b, 0, k);
                  if (65536 > k) break;
                }
                d.data = f.getBytes();
              } else d.data = this.i.read(d.dataSize);
              d.crc32 = this.i.readInt32();
              134695760 == d.crc32 && (d.crc32 = this.i.readInt32());
              d.dataSize = this.i.readInt32();
              d.fileSize = this.i.readInt32();
              d.dataSize = d.fileSize;
              d.compressed = !1;
            } else d.data = this.i.read(d.dataSize);
            a.add(d);
          }
          return a;
        },
        __class__: Qg,
      };
      var Rg = function () {};
      h['hxjson5.Undefined'] = Rg;
      Rg.__name__ = 'hxjson5.Undefined';
      Rg.prototype = { __class__: Rg };
      var yk = function () {};
      h['hxjson5.Json5'] = yk;
      yk.__name__ = 'hxjson5.Json5';
      var zk = function (a, b, d, f) {
        this.type = a;
        this.value = b;
        this.line = d;
        this.column = f;
      };
      h['hxjson5.Token'] = zk;
      zk.__name__ = 'hxjson5.Token';
      zk.prototype = { __class__: zk };
      var fk = function () {
        var a = new ic();
        a.h[39] = "\\'";
        a.h[34] = '\\"';
        a.h[92] = '\\\\';
        a.h[8] = '\\b';
        a.h[12] = '\\f';
        a.h[10] = '\\n';
        a.h[13] = '\\r';
        a.h[9] = '\\t';
        a.h[11] = '\\v';
        a.h[0] = '\\0';
        a.h[8232] = '\\u2028';
        a.h[8233] = '\\u2029';
        this.replacements = a;
      };
      h['hxjson5.Parser'] = fk;
      fk.__name__ = 'hxjson5.Parser';
      fk.prototype = {
        parse: function (a, b) {
          this.source = a;
          this.parseState = 0;
          this.stack = [];
          this.pos = 0;
          this.line = 1;
          this.column = 0;
          this.root = this.key = this.token = null;
          do ((this.token = this.lex()), this.callParseState(this.parseState));
          while (8 != this.token.type);
          return null != b
            ? this.internalize({ '': this.root }, '', b)
            : this.root;
        },
        internalize: function (a, b, d) {
          var f =
            null == a
              ? null
              : a instanceof Array
                ? a[G.parseInt(b)]
                : N.field(a, b);
          var g = ib.typeof(f);
          switch (g._hx_index) {
            case 4:
              var k = f;
              var l = 0;
              for (g = N.fields(k); l < g.length; ) {
                var u = g[l];
                ++l;
                var p = this.internalize(k, u, d);
                p == yk.undefined ? N.deleteField(k, u) : (k[u] = p);
              }
              break;
            case 6:
              if (g.c == Array)
                for (k = f, g = 0, l = k.length; g < l; )
                  ((u = g++),
                    (p = this.internalize(k, null == u ? 'null' : '' + u, d)),
                    (k[u] = p == yk.undefined ? null : p));
          }
          return d(b, f, a);
        },
        lex: function () {
          this.lexState = 0;
          this.buffer = new qb();
          this.doubleQuote = !1;
          for (this.sign = 1; ; ) {
            var a =
              this.pos < this.source.length ? M.cca(this.source, this.pos) : -1;
            this.c = -1 == a ? null : String.fromCodePoint(a);
            a = this.callLexState(this.lexState);
            if (null != a) return a;
          }
        },
        read: function () {
          var a =
            this.pos < this.source.length ? M.cca(this.source, this.pos) : -1;
          a = -1 == a ? null : String.fromCodePoint(a);
          '\n' == a
            ? (this.line++, (this.column = 0))
            : null != a
              ? (this.column += a.length)
              : this.column++;
          null != a && (this.pos += a.length);
          return a;
        },
        callLexState: function (a) {
          switch (a) {
            case 0:
              if (null == this.c) return (this.read(), this.newToken(8));
              switch (M.cca(this.c, 0)) {
                case 47:
                  return (this.read(), (this.lexState = 1), null);
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 32:
                case 160:
                case 8232:
                case 8233:
                case 65279:
                  return (this.read(), null);
              }
              if (Ue.isSpaceSeparator(this.c)) {
                this.read();
                break;
              }
              switch (this.parseState) {
                case 0:
                  a = 21;
                  break;
                case 1:
                  a = 22;
                  break;
                case 2:
                  a = 23;
                  break;
                case 3:
                  a = 24;
                  break;
                case 4:
                  a = 26;
                  break;
                case 5:
                  a = 25;
                  break;
                case 6:
                  a = 27;
                  break;
                case 7:
                  a = 28;
                  break;
                default:
                  a = 28;
              }
              return this.callLexState(a);
            case 1:
              switch (M.cca(this.c, 0)) {
                case 42:
                  return (this.read(), (this.lexState = 2), null);
                case 47:
                  return (this.read(), (this.lexState = 4), null);
              }
              throw this.invalidChar(this.read());
            case 2:
              if (null == this.c) throw this.invalidChar(this.read());
              if ('*' == this.c) {
                this.read();
                this.lexState = 3;
                break;
              }
              this.read();
              break;
            case 3:
              if (null == this.c) throw this.invalidChar(this.read());
              switch (M.cca(this.c, 0)) {
                case 42:
                  return (this.read(), null);
                case 47:
                  return (this.read(), (this.lexState = 0), null);
              }
              this.read();
              this.lexState = 2;
              break;
            case 4:
              if (null == this.c) return (this.read(), this.newToken(8));
              switch (M.cca(this.c, 0)) {
                case 10:
                case 13:
                case 8232:
                case 8233:
                  return (this.read(), (this.lexState = 0), null);
              }
              this.read();
              break;
            case 5:
              switch (M.cca(this.c, 0)) {
                case 34:
                case 39:
                  return (
                    (this.doubleQuote = '"' == this.read()),
                    (this.buffer = new qb()),
                    (this.lexState = 20),
                    null
                  );
                case 43:
                case 45:
                  return (
                    '-' == this.read() && (this.sign = -1),
                    (this.lexState = 9),
                    null
                  );
                case 46:
                  return (
                    (a = this.read()),
                    (this.buffer = new qb()),
                    (this.buffer.b += G.string(a)),
                    (this.lexState = 12),
                    null
                  );
                case 48:
                  return (
                    (a = this.read()),
                    (this.buffer = new qb()),
                    (this.buffer.b += G.string(a)),
                    (this.lexState = 10),
                    null
                  );
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                  return (
                    (a = this.read()),
                    (this.buffer = new qb()),
                    (this.buffer.b += G.string(a)),
                    (this.lexState = 11),
                    null
                  );
                case 73:
                  return (
                    this.read(),
                    this.literal('nfinity'),
                    this.newToken(6, Infinity)
                  );
                case 78:
                  return (
                    this.read(),
                    this.literal('aN'),
                    this.newToken(7, NaN)
                  );
                case 91:
                case 123:
                  return this.newToken(0, this.read());
                case 102:
                  return (
                    this.read(),
                    this.literal('alse'),
                    this.newToken(2, !1)
                  );
                case 110:
                  return (
                    this.read(),
                    this.literal('ull'),
                    this.newToken(1, null)
                  );
                case 116:
                  return (
                    this.read(),
                    this.literal('rue'),
                    this.newToken(2, !0)
                  );
              }
              throw this.invalidChar(this.read());
            case 6:
              if ('u' != this.c) throw this.invalidChar(this.read());
              this.read();
              a = this.unicodeEscape();
              switch (a) {
                case '$':
                case '_':
                  break;
                default:
                  if (!Ue.isIdStartChar(a)) throw this.invalidIdentifier();
              }
              this.buffer.b += null == a ? 'null' : '' + a;
              this.lexState = 7;
              break;
            case 7:
              switch (M.cca(this.c, 0)) {
                case 92:
                  return (this.read(), (this.lexState = 8), null);
                case 36:
                case 95:
                case 8204:
                case 8205:
                  a = this.buffer;
                  var b = this.read();
                  a.b += G.string(b);
                  return null;
              }
              if (Ue.isIdContinueChar(this.c)) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                break;
              }
              return this.newToken(5, this.buffer.b);
            case 8:
              if ('u' != this.c) throw this.invalidChar(this.read());
              this.read();
              a = this.unicodeEscape();
              switch (a) {
                case '$':
                case '_':
                case '\u200c':
                case '\u200d':
                  break;
                default:
                  if (!Ue.isIdContinueChar(a)) throw this.invalidIdentifier();
              }
              this.buffer.b += null == a ? 'null' : '' + a;
              this.lexState = 7;
              break;
            case 9:
              switch (M.cca(this.c, 0)) {
                case 46:
                  return (
                    (a = this.read()),
                    (this.buffer = new qb()),
                    (this.buffer.b += G.string(a)),
                    (this.lexState = 12),
                    null
                  );
                case 48:
                  return (
                    (a = this.read()),
                    (this.buffer = new qb()),
                    (this.buffer.b += G.string(a)),
                    (this.lexState = 10),
                    null
                  );
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                  return (
                    (a = this.read()),
                    (this.buffer = new qb()),
                    (this.buffer.b += G.string(a)),
                    (this.lexState = 11),
                    null
                  );
                case 73:
                  return (
                    this.read(),
                    this.literal('nfinity'),
                    this.newToken(6, Infinity * this.sign)
                  );
                case 78:
                  return (
                    this.read(),
                    this.literal('aN'),
                    this.newToken(7, NaN)
                  );
              }
              throw this.invalidChar(this.read());
            case 10:
              switch (M.cca(this.c, 0)) {
                case 46:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 13),
                    null
                  );
                case 69:
                case 101:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 15),
                    null
                  );
                case 88:
                case 120:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 18),
                    null
                  );
              }
              return this.newToken(3, 0 * this.sign);
            case 11:
              if (null != this.c) {
                switch (M.cca(this.c, 0)) {
                  case 46:
                    return (
                      (a = this.buffer),
                      (b = this.read()),
                      (a.b += G.string(b)),
                      (this.lexState = 13),
                      null
                    );
                  case 69:
                  case 101:
                    return (
                      (a = this.buffer),
                      (b = this.read()),
                      (a.b += G.string(b)),
                      (this.lexState = 15),
                      null
                    );
                }
                a = this.c;
                null == a
                  ? (a = !1)
                  : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
                if (a) {
                  a = this.buffer;
                  b = this.read();
                  a.b += G.string(b);
                  break;
                }
              }
              a = G.parseInt(this.buffer.b);
              return this.newToken(
                3,
                this.sign * (4294967295 < a ? a : a & -1),
              );
            case 12:
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                this.lexState = 14;
                break;
              }
              throw this.invalidChar(this.read());
            case 13:
              switch (M.cca(this.c, 0)) {
                case 69:
                case 101:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 15),
                    null
                  );
              }
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                this.lexState = 14;
                break;
              }
              return this.newToken(3, this.sign * parseFloat(this.buffer.b));
            case 14:
              switch (M.cca(this.c, 0)) {
                case 69:
                case 101:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 15),
                    null
                  );
              }
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                break;
              }
              return this.newToken(3, this.sign * parseFloat(this.buffer.b));
            case 15:
              switch (M.cca(this.c, 0)) {
                case 43:
                case 45:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 16),
                    null
                  );
              }
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                this.lexState = 17;
                break;
              }
              throw this.invalidChar(this.read());
            case 16:
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                this.lexState = 17;
                break;
              }
              throw this.invalidChar(this.read());
            case 17:
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)), (a = 48 <= a && 57 >= a));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                break;
              }
              return this.newToken(3, this.sign * parseFloat(this.buffer.b));
            case 18:
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)),
                  (a =
                    (48 <= a && 57 >= a) ||
                    (97 <= a && 102 >= a) ||
                    (65 <= a && 70 >= a)));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                this.lexState = 19;
                break;
              }
              a = G.parseInt(this.buffer.b);
              return this.newToken(
                3,
                this.sign * (4294967295 < a ? a : a & -1),
              );
            case 19:
              a = this.c;
              null == a
                ? (a = !1)
                : ((a = M.cca(a, 0)),
                  (a =
                    (48 <= a && 57 >= a) ||
                    (97 <= a && 102 >= a) ||
                    (65 <= a && 70 >= a)));
              if (a) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                break;
              }
              a = G.parseInt(this.buffer.b);
              return this.newToken(
                3,
                this.sign * (4294967295 < a ? a : a & -1),
              );
            case 20:
              if (null == this.c) throw this.invalidChar(this.read());
              switch (M.cca(this.c, 0)) {
                case 10:
                case 13:
                  throw this.invalidChar(this.read());
                case 34:
                  if (this.doubleQuote)
                    return (this.read(), this.newToken(4, this.buffer.b));
                  a = this.buffer;
                  b = this.read();
                  a.b += G.string(b);
                  return null;
                case 39:
                  if (!this.doubleQuote)
                    return (this.read(), this.newToken(4, this.buffer.b));
                  a = this.buffer;
                  b = this.read();
                  a.b += G.string(b);
                  return null;
                case 92:
                  return (
                    this.read(),
                    (a = this.buffer),
                    (b = this.escape()),
                    (a.b += G.string(b)),
                    null
                  );
                case 8232:
                case 8233:
                  this.separatorChar();
              }
              a = this.buffer;
              b = this.read();
              a.b += G.string(b);
              break;
            case 21:
              switch (M.cca(this.c, 0)) {
                case 91:
                case 123:
                  return this.newToken(0, this.read());
              }
              this.lexState = 5;
              break;
            case 22:
              switch (M.cca(this.c, 0)) {
                case 34:
                case 39:
                  return (
                    (this.doubleQuote = '"' == this.read()),
                    (this.lexState = 20),
                    null
                  );
                case 92:
                  return (this.read(), (this.lexState = 6), null);
                case 36:
                case 95:
                  return (
                    (a = this.buffer),
                    (b = this.read()),
                    (a.b += G.string(b)),
                    (this.lexState = 7),
                    null
                  );
                case 125:
                  return this.newToken(0, this.read());
              }
              if (Ue.isIdStartChar(this.c)) {
                a = this.buffer;
                b = this.read();
                a.b += G.string(b);
                this.lexState = 7;
                break;
              }
              throw this.invalidChar(this.read());
            case 23:
              if (':' == this.c) return this.newToken(0, this.read());
              throw this.invalidChar(this.read());
            case 24:
              this.lexState = 5;
              break;
            case 25:
              switch (M.cca(this.c, 0)) {
                case 44:
                case 125:
                  return this.newToken(0, this.read());
              }
              throw this.invalidChar(this.read());
            case 26:
              if (']' == this.c) return this.newToken(0, this.read());
              this.lexState = 5;
              break;
            case 27:
              switch (M.cca(this.c, 0)) {
                case 44:
                case 93:
                  return this.newToken(0, this.read());
              }
              throw this.invalidChar(this.read());
            case 28:
              throw this.invalidChar(this.read());
          }
          return null;
        },
        newToken: function (a, b) {
          return new zk(a, b, this.line, this.column);
        },
        literal: function (a) {
          for (var b = 0, d = a.length; b < d; ) {
            var f = b++;
            f = M.cca(a, f);
            if (
              (this.pos < this.source.length
                ? M.cca(this.source, this.pos)
                : -1) != f
            )
              throw this.invalidChar(this.read());
            this.read();
          }
        },
        escape: function () {
          var a =
            this.pos < this.source.length ? M.cca(this.source, this.pos) : -1;
          a = -1 == a ? null : String.fromCodePoint(a);
          if (null == a) throw this.invalidChar(this.read());
          switch (M.cca(a, 0)) {
            case 13:
              return (
                this.read(),
                (a =
                  this.pos < this.source.length
                    ? M.cca(this.source, this.pos)
                    : -1),
                10 == a && this.read(),
                ''
              );
            case 48:
              this.read();
              a =
                this.pos < this.source.length
                  ? M.cca(this.source, this.pos)
                  : -1;
              if (48 <= a && 57 >= a) throw this.invalidChar(this.read());
              return '\x00';
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
              throw this.invalidChar(this.read());
            case 98:
              return (this.read(), '\b');
            case 102:
              return (this.read(), '\f');
            case 110:
              return (this.read(), '\n');
            case 114:
              return (this.read(), '\r');
            case 116:
              return (this.read(), '\t');
            case 117:
              return (this.read(), this.unicodeEscape());
            case 118:
              return (this.read(), '\x0B');
            case 120:
              return (this.read(), this.hexEscape());
            case 10:
            case 8232:
            case 8233:
              return (this.read(), '');
          }
          return this.read();
        },
        hexEscape: function () {
          var a = '';
          var b =
            this.pos < this.source.length ? M.cca(this.source, this.pos) : -1;
          if (
            !(
              (48 <= b && 57 >= b) ||
              (97 <= b && 102 >= b) ||
              (65 <= b && 70 >= b)
            )
          )
            throw this.invalidChar(this.read());
          a += G.string(this.read());
          b = this.pos < this.source.length ? M.cca(this.source, this.pos) : -1;
          if (
            !(
              (48 <= b && 57 >= b) ||
              (97 <= b && 102 >= b) ||
              (65 <= b && 70 >= b)
            )
          )
            throw this.invalidChar(this.read());
          a += G.string(this.read());
          a = G.parseInt('0x' + a);
          return String.fromCodePoint(a);
        },
        unicodeEscape: function () {
          for (var a = '', b = 4; 0 < b--; ) {
            var d =
              this.pos < this.source.length ? M.cca(this.source, this.pos) : -1;
            if (
              !(
                (48 <= d && 57 >= d) ||
                (97 <= d && 102 >= d) ||
                (65 <= d && 70 >= d)
              )
            )
              throw this.invalidChar(this.read());
            a += G.string(this.read());
          }
          a = G.parseInt('0x' + a);
          return String.fromCodePoint(a);
        },
        callParseState: function (a) {
          switch (a) {
            case 0:
              if (8 == this.token.type) throw this.invalidEOF();
              this.push();
              break;
            case 1:
              switch (this.token.type) {
                case 0:
                  return (this.pop(), null);
                case 4:
                case 5:
                  return (
                    (this.key = this.token.value),
                    (this.parseState = 2),
                    null
                  );
                case 8:
                  throw this.invalidEOF();
              }
              break;
            case 2:
              if (8 == this.token.type) throw this.invalidEOF();
              this.parseState = 3;
              break;
            case 3:
              if (8 == this.token.type) throw this.invalidEOF();
              this.push();
              break;
            case 4:
              if (8 == this.token.type) throw this.invalidEOF();
              if (0 == this.token.type && ']' == this.token.value) {
                this.pop();
                break;
              }
              this.push();
              break;
            case 5:
              if (8 == this.token.type) throw this.invalidEOF();
              switch (this.token.value) {
                case ',':
                  this.parseState = 1;
                  break;
                case '}':
                  this.pop();
              }
              break;
            case 6:
              if (8 == this.token.type) throw this.invalidEOF();
              switch (this.token.value) {
                case ',':
                  this.parseState = 4;
                  break;
                case ']':
                  this.pop();
              }
          }
          return null;
        },
        push: function () {
          switch (this.token.type) {
            case 0:
              switch (this.token.value) {
                case '[':
                  var a = [];
                  break;
                case '{':
                  a = {};
                  break;
                default:
                  a = null;
              }
              break;
            case 1:
            case 2:
            case 3:
            case 4:
              a = this.token.value;
              break;
            case 5:
            case 8:
              a = null;
              break;
            case 6:
            case 7:
              a = this.token.value;
          }
          if (null == this.root) this.root = a;
          else {
            var b =
              0 == this.stack.length ? null : this.stack[this.stack.length - 1];
            b instanceof Array ? b.push(a) : (b[this.key] = a);
          }
          b = ib.typeof(a);
          switch (b._hx_index) {
            case 4:
              b = 1;
              break;
            case 6:
              b = b.c == Array ? 2 : 0;
              break;
            default:
              b = 0;
          }
          null != a && 0 != b
            ? (this.stack.push(a), (this.parseState = 2 == b ? 4 : 1))
            : ((a =
                0 == this.stack.length
                  ? null
                  : this.stack[this.stack.length - 1]),
              (this.parseState = null == a ? 7 : a instanceof Array ? 6 : 5));
        },
        pop: function () {
          this.stack.pop();
          var a =
            0 == this.stack.length ? null : this.stack[this.stack.length - 1];
          this.parseState = null == a ? 7 : a instanceof Array ? 6 : 5;
        },
        invalidChar: function (a) {
          return null == a
            ? this.syntaxError(
                'JSON5: invalid end of input at ' +
                  this.line +
                  ':' +
                  this.column,
              )
            : this.syntaxError(
                "JSON5: invalid character '" +
                  this.formatChar(a) +
                  "' at " +
                  this.line +
                  ':' +
                  this.column,
              );
        },
        invalidEOF: function () {
          return this.syntaxError(
            'JSON5: invalid end of input at ' + this.line + ':' + this.column,
          );
        },
        invalidIdentifier: function () {
          this.column -= 5;
          return this.syntaxError(
            'JSON5: invalid identifier character at ' +
              this.line +
              ':' +
              this.column,
          );
        },
        separatorChar: function () {
          console.warn(
            '[JSON5] ' +
              formatChar(c) +
              ' in strings is not valid ECMAScript; consider escaping',
          );
        },
        formatChar: function (a) {
          var b = M.cca(a, 0),
            d = this.replacements.h[b];
          return null != d ? d : 32 > b ? '\\x' + R.hex(b, 2).toLowerCase() : a;
        },
        syntaxError: function (a) {
          return new Fi(a, this.line, this.column);
        },
        __class__: fk,
      };
      var Fi = function (a, b, d) {
        Z.call(this, a);
        this.lineNumber = b;
        this.columnNumber = d;
        this.__skipStack++;
      };
      h['hxjson5.SyntaxError'] = Fi;
      Fi.__name__ = 'hxjson5.SyntaxError';
      Fi.__super__ = Z;
      Fi.prototype = w(Z.prototype, { __class__: Fi });
      var Ue = function () {};
      h['hxjson5.Util'] = Ue;
      Ue.__name__ = 'hxjson5.Util';
      Ue.isSpaceSeparator = function (a) {
        a = M.cca(a, 0);
        return 5760 == a ||
          (8192 <= a && 8202 >= a) ||
          8239 == a ||
          8287 == a ||
          12288 == a
          ? !0
          : !1;
      };
      Ue.isIdStartChar = function (a) {
        a = M.cca(a, 0);
        return (97 <= a && 122 >= a) ||
          (65 <= a && 90 >= a) ||
          95 == a ||
          36 == a ||
          170 == a ||
          181 == a ||
          186 == a ||
          (192 <= a && 214 >= a) ||
          (216 <= a && 246 >= a) ||
          (248 <= a && 255 >= a)
          ? !0
          : !1;
      };
      Ue.isIdContinueChar = function (a) {
        a = M.cca(a, 0);
        return (97 <= a && 122 >= a) ||
          (65 <= a && 90 >= a) ||
          (48 <= a && 57 >= a) ||
          95 == a ||
          36 == a ||
          8204 == a ||
          8205 == a ||
          170 == a ||
          181 == a ||
          186 == a ||
          (192 <= a && 214 >= a) ||
          (216 <= a && 246 >= a) ||
          (248 <= a && 255 >= a)
          ? !0
          : !1;
      };
      var Fa = function () {};
      h['js.Boot'] = Fa;
      Fa.__name__ = 'js.Boot';
      Fa.getClass = function (a) {
        if (null == a) return null;
        if (a instanceof Array) return Array;
        var b = a.__class__;
        if (null != b) return b;
        a = Fa.__nativeClassName(a);
        return null != a ? Fa.__resolveNativeClass(a) : null;
      };
      Fa.__string_rec = function (a, b) {
        if (null == a) return 'null';
        if (5 <= b.length) return '<...>';
        var d = typeof a;
        'function' == d && (a.__name__ || a.__ename__) && (d = 'object');
        switch (d) {
          case 'function':
            return '<function>';
          case 'object':
            if (a.__enum__) {
              var f = K[a.__enum__].__constructs__[a._hx_index];
              d = f._hx_name;
              if (f.__params__) {
                b += '\t';
                var g = [],
                  k = 0;
                for (f = f.__params__; k < f.length; ) {
                  var l = f[k];
                  k += 1;
                  g.push(Fa.__string_rec(a[l], b));
                }
                return d + '(' + g.join(',') + ')';
              }
              return d;
            }
            if (a instanceof Array) {
              d = '[';
              b += '\t';
              g = 0;
              for (k = a.length; g < k; )
                ((f = g++),
                  (d += (0 < f ? ',' : '') + Fa.__string_rec(a[f], b)));
              return d + ']';
            }
            try {
              g = a.toString;
            } catch (u) {
              return ((Na.lastError = u), '???');
            }
            if (
              null != g &&
              g != Object.toString &&
              'function' == typeof g &&
              ((d = a.toString()), '[object Object]' != d)
            )
              return d;
            d = '{\n';
            b += '\t';
            g = null != a.hasOwnProperty;
            k = null;
            for (k in a)
              (g && !a.hasOwnProperty(k)) ||
                'prototype' == k ||
                '__class__' == k ||
                '__super__' == k ||
                '__interfaces__' == k ||
                '__properties__' == k ||
                (2 != d.length && (d += ', \n'),
                (d += b + k + ' : ' + Fa.__string_rec(a[k], b)));
            b = b.substring(1);
            return d + ('\n' + b + '}');
          case 'string':
            return a;
          default:
            return String(a);
        }
      };
      Fa.__interfLoop = function (a, b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var d = a.__interfaces__;
        if (null != d)
          for (var f = 0, g = d.length; f < g; ) {
            var k = f++;
            k = d[k];
            if (k == b || Fa.__interfLoop(k, b)) return !0;
          }
        return Fa.__interfLoop(a.__super__, b);
      };
      Fa.__instanceof = function (a, b) {
        if (null == b) return !1;
        switch (b) {
          case Array:
            return a instanceof Array;
          case Zl:
            return 'boolean' == typeof a;
          case $l:
            return null != a;
          case am:
            return 'number' == typeof a;
          case Ol:
            return 'number' == typeof a ? (a | 0) === a : !1;
          case String:
            return 'string' == typeof a;
          default:
            if (null != a)
              if ('function' == typeof b) {
                if (Fa.__downcastCheck(a, b)) return !0;
              } else {
                if (
                  'object' == typeof b &&
                  Fa.__isNativeObj(b) &&
                  a instanceof b
                )
                  return !0;
              }
            else return !1;
            return (b == Rl && null != a.__name__) ||
              (b == Sl && null != a.__ename__)
              ? !0
              : null != a.__enum__
                ? K[a.__enum__] == b
                : !1;
        }
      };
      Fa.__downcastCheck = function (a, b) {
        return a instanceof b
          ? !0
          : b.__isInterface__
            ? Fa.__interfLoop(Fa.getClass(a), b)
            : !1;
      };
      Fa.__cast = function (a, b) {
        if (null == a || Fa.__instanceof(a, b)) return a;
        throw Z.thrown('Cannot cast ' + G.string(a) + ' to ' + G.string(b));
      };
      Fa.__toStr = null;
      Fa.__nativeClassName = function (a) {
        a = Fa.__toStr.call(a).slice(8, -1);
        return 'Object' == a || 'Function' == a || 'Math' == a || 'JSON' == a
          ? null
          : a;
      };
      Fa.__isNativeObj = function (a) {
        return null != Fa.__nativeClassName(a);
      };
      Fa.__resolveNativeClass = function (a) {
        return D[a];
      };
      var Ve = function () {};
      h['js.Browser'] = Ve;
      Ve.__name__ = 'js.Browser';
      Ve.__properties__ = { get_supported: 'get_supported' };
      Ve.get_supported = function () {
        return 'undefined' != typeof window &&
          'undefined' != typeof window.location
          ? 'string' == typeof window.location.protocol
          : !1;
      };
      Ve.getLocalStorage = function () {
        try {
          var a = window.localStorage;
          a.getItem('');
          if (0 == a.length) {
            var b = '_hx_' + Math.random();
            a.setItem(b, b);
            a.removeItem(b);
          }
          return a;
        } catch (d) {
          return ((Na.lastError = d), null);
        }
      };
      var vl = function () {};
      h['js.html._CanvasElement.CanvasUtil'] = vl;
      vl.__name__ = 'js.html._CanvasElement.CanvasUtil';
      vl.getContextWebGL = function (a, b) {
        var d = a.getContext('webgl', b);
        if (null != d) return d;
        d = a.getContext('experimental-webgl', b);
        return null != d ? d : null;
      };
      var Oj = function () {
        this.connected = !0;
        this.buttons = [];
        this.axes = [];
      };
      h['lime._internal.backend.html5.GameDeviceData'] = Oj;
      Oj.__name__ = 'lime._internal.backend.html5.GameDeviceData';
      Oj.prototype = { __class__: Oj };
      var Bk = function (a) {
        this.parent = a;
        this.id = -1;
        this.gain = 1;
        this.position = new Ak();
      };
      h['lime._internal.backend.html5.HTML5AudioSource'] = Bk;
      Bk.__name__ = 'lime._internal.backend.html5.HTML5AudioSource';
      Bk.prototype = {
        dispose: function () {},
        init: function () {},
        play: function () {
          if (
            !this.playing &&
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            this.playing = !0;
            var a = this.getCurrentTime();
            this.completed = !1;
            var b = this.parent.buffer.__srcHowl._volume;
            this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
            this.id = this.parent.buffer.__srcHowl.play();
            this.parent.buffer.__srcHowl._volume = b;
            this.setPosition(this.parent.get_position());
            this.parent.buffer.__srcHowl.on(
              'end',
              m(this, this.howl_onEnd),
              this.id,
            );
            this.setCurrentTime(a);
          }
        },
        stop: function () {
          this.playing = !1;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            (this.parent.buffer.__srcHowl.stop(this.id),
            this.parent.buffer.__srcHowl.off(
              'end',
              m(this, this.howl_onEnd),
              this.id,
            ));
        },
        howl_onEnd: function () {
          this.playing = !1;
          0 < this.loops
            ? (this.loops--, this.stop(), this.play())
            : (null != this.parent.buffer &&
                null != this.parent.buffer.__srcHowl &&
                (this.parent.buffer.__srcHowl.stop(this.id),
                this.parent.buffer.__srcHowl.off(
                  'end',
                  m(this, this.howl_onEnd),
                  this.id,
                )),
              (this.completed = !0),
              this.parent.onComplete.dispatch());
        },
        getCurrentTime: function () {
          if (-1 == this.id) return 0;
          if (this.completed) return this.getLength();
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var a =
              ((1e3 * this.parent.buffer.__srcHowl.seek(this.id)) | 0) -
              this.parent.offset;
            return 0 > a ? 0 : a;
          }
          return 0;
        },
        setCurrentTime: function (a) {
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var b = (a + this.parent.offset) / 1e3;
            0 > b && (b = 0);
            this.parent.buffer.__srcHowl.seek(b, this.id);
          }
          return a;
        },
        getGain: function () {
          return this.gain;
        },
        setGain: function (a) {
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            -1 != this.id &&
            this.parent.buffer.__srcHowl.volume(a, this.id);
          return (this.gain = a);
        },
        getLength: function () {
          return 0 != this.length
            ? this.length
            : null != this.parent.buffer && null != this.parent.buffer.__srcHowl
              ? (1e3 * this.parent.buffer.__srcHowl.duration()) | 0
              : 0;
        },
        setLength: function (a) {
          return (this.length = a);
        },
        setLoops: function (a) {
          return (this.loops = a);
        },
        getPosition: function () {
          return this.position;
        },
        setPosition: function (a) {
          this.position.x = a.x;
          this.position.y = a.y;
          this.position.z = a.z;
          this.position.w = a.w;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            null != this.parent.buffer.__srcHowl.pos &&
            this.parent.buffer.__srcHowl.pos(
              this.position.x,
              this.position.y,
              this.position.z,
              this.id,
            );
          return this.position;
        },
        __class__: Bk,
      };
      var ya = function () {
        this.validStatus0 = new xa('Tizen', 'gi').match(
          window.navigator.userAgent,
        );
      };
      h['lime._internal.backend.html5.HTML5HTTPRequest'] = ya;
      ya.__name__ = 'lime._internal.backend.html5.HTML5HTTPRequest';
      ya.originElement = null;
      ya.originHostname = null;
      ya.originPort = null;
      ya.originProtocol = null;
      ya.supportsImageProgress = null;
      ya.loadImage = function (a) {
        var b = new sd();
        ya.activeRequests < ya.requestLimit
          ? (ya.activeRequests++, ya.__loadImage(a, b, 0))
          : ya.requestQueue.add({
              instance: null,
              uri: a,
              promise: b,
              type: 'IMAGE',
              options: 0,
            });
        return b.future;
      };
      ya.loadImageFromBytes = function (a, b) {
        var d = URL.createObjectURL(new Blob([a.b.bufferValue], { type: b }));
        return null != d
          ? ((a = new sd()),
            ya.activeRequests < ya.requestLimit
              ? (ya.activeRequests++, ya.__loadImage(d, a, 1))
              : ya.requestQueue.add({
                  instance: null,
                  uri: d,
                  promise: a,
                  type: 'IMAGE',
                  options: 1,
                }),
            a.future)
          : ya.loadImage('data:' + b + ';base64,' + ke.encode(a));
      };
      ya.processQueue = function () {
        if (ya.activeRequests < ya.requestLimit && 0 < ya.requestQueue.length) {
          ya.activeRequests++;
          var a = ya.requestQueue.pop();
          switch (a.type) {
            case 'BINARY':
              a.instance.__loadData(a.uri, a.promise);
              break;
            case 'IMAGE':
              ya.__loadImage(a.uri, a.promise, a.options);
              break;
            case 'TEXT':
              a.instance.__loadText(a.uri, a.promise);
              break;
            default:
              ya.activeRequests--;
          }
        }
      };
      ya.__fixHostname = function (a) {
        return null == a ? '' : a;
      };
      ya.__fixPort = function (a, b) {
        if (null == a || '' == a)
          switch (b) {
            case 'ftp:':
              return '21';
            case 'gopher:':
              return '70';
            case 'http:':
              return '80';
            case 'https:':
              return '443';
            case 'ws:':
              return '80';
            case 'wss:':
              return '443';
            default:
              return '';
          }
        return a;
      };
      ya.__fixProtocol = function (a) {
        return null == a || '' == a ? 'http:' : a;
      };
      ya.__isInMemoryURI = function (a) {
        return R.startsWith(a, 'data:') ? !0 : R.startsWith(a, 'blob:');
      };
      ya.__isSameOrigin = function (a) {
        if (null == a || '' == a || ya.__isInMemoryURI(a)) return !0;
        null == ya.originElement &&
          ((ya.originElement = window.document.createElement('a')),
          (ya.originHostname = ya.__fixHostname(D.location.hostname)),
          (ya.originProtocol = ya.__fixProtocol(D.location.protocol)),
          (ya.originPort = ya.__fixPort(D.location.port, ya.originProtocol)));
        var b = ya.originElement;
        b.href = a;
        '' == b.hostname && (b.href = b.href);
        var d = ya.__fixHostname(b.hostname);
        a = ya.__fixProtocol(b.protocol);
        b = ya.__fixPort(b.port, a);
        d = '' == d || d == ya.originHostname;
        b = '' == b || b == ya.originPort;
        return 'file:' != a && d ? b : !1;
      };
      ya.__loadImage = function (a, b, d) {
        var f = new window.Image();
        ya.__isSameOrigin(a) || (f.crossOrigin = 'Anonymous');
        null == ya.supportsImageProgress &&
          (ya.supportsImageProgress = 'onprogress' in f);
        if (ya.supportsImageProgress || ya.__isInMemoryURI(a))
          (f.addEventListener(
            'load',
            function (g) {
              ya.__revokeBlobURI(a, d);
              g = new De(null, f.width, f.height);
              g.__srcImage = f;
              ya.activeRequests--;
              ya.processQueue();
              b.complete(new Pb(g));
            },
            !1,
          ),
            f.addEventListener(
              'progress',
              function (a) {
                b.progress(a.loaded, a.total);
              },
              !1,
            ),
            f.addEventListener(
              'error',
              function (f) {
                ya.__revokeBlobURI(a, d);
                ya.activeRequests--;
                ya.processQueue();
                b.error(new jg(f.detail, null));
              },
              !1,
            ),
            (f.src = a));
        else {
          var g = new XMLHttpRequest();
          g.onload = function (a) {
            ya.activeRequests--;
            ya.processQueue();
            new Pb().__fromBytes(yb.ofData(g.response), function (a) {
              b.complete(a);
            });
          };
          g.onerror = function (a) {
            b.error(new jg(a.message, null));
          };
          g.onprogress = function (a) {
            a.lengthComputable && b.progress(a.loaded, a.total);
          };
          g.open('GET', a, !0);
          g.responseType = 'arraybuffer';
          g.overrideMimeType('text/plain; charset=x-user-defined');
          g.send(null);
        }
      };
      ya.__revokeBlobURI = function (a, b) {
        0 != (b & 1) && URL.revokeObjectURL(a);
      };
      ya.prototype = {
        init: function (a) {
          this.parent = a;
        },
        load: function (a, b, d) {
          this.request = new XMLHttpRequest();
          'POST' == this.parent.method
            ? this.request.upload.addEventListener('progress', b, !1)
            : this.request.addEventListener('progress', b, !1);
          this.request.onreadystatechange = d;
          b = '';
          if (null == this.parent.data) {
            d = Object.keys(this.parent.formData.h);
            for (var f = d.length, g = 0; g < f; ) {
              var k = d[g++];
              0 < b.length && (b += '&');
              var l = this.parent.formData.h[k];
              if (-1 < k.indexOf('[]') && l instanceof Array) {
                var u = [];
                for (l = H(l); l.hasNext(); ) {
                  var p = l.next();
                  u.push(encodeURIComponent(p));
                }
                u = u.join('&amp;' + k + '=');
                b += encodeURIComponent(k) + '=' + u;
              } else
                ((u = encodeURIComponent(k) + '='),
                  (k = G.string(l)),
                  (b += u + encodeURIComponent(k)));
            }
            'GET' == this.parent.method &&
              '' != b &&
              ((a = -1 < a.indexOf('?') ? a + ('&' + b) : a + ('?' + b)),
              (b = ''));
          }
          this.request.open(G.string(this.parent.method), a, !0);
          0 < this.parent.timeout &&
            (this.request.timeout = this.parent.timeout);
          this.binary && (this.request.responseType = 'arraybuffer');
          a = null;
          u = 0;
          for (d = this.parent.headers; u < d.length; )
            ((f = d[u]),
              ++u,
              'Content-Type' == f.name
                ? (a = f.value)
                : this.request.setRequestHeader(f.name, f.value));
          null != this.parent.contentType && (a = this.parent.contentType);
          null == a &&
            (null != this.parent.data
              ? (a = 'application/octet-stream')
              : '' != b && (a = 'application/x-www-form-urlencoded'));
          null != a && this.request.setRequestHeader('Content-Type', a);
          this.parent.withCredentials && (this.request.withCredentials = !0);
          null != this.parent.data
            ? this.request.send(this.parent.data.b.bufferValue)
            : this.request.send(b);
        },
        loadData: function (a) {
          var b = new sd();
          ya.activeRequests < ya.requestLimit
            ? (ya.activeRequests++, this.__loadData(a, b))
            : ya.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'BINARY',
                options: 0,
              });
          return b.future;
        },
        loadText: function (a) {
          var b = new sd();
          ya.activeRequests < ya.requestLimit
            ? (ya.activeRequests++, this.__loadText(a, b))
            : ya.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'TEXT',
                options: 0,
              });
          return b.future;
        },
        processResponse: function () {
          if (this.parent.enableResponseHeaders) {
            this.parent.responseHeaders = [];
            for (
              var a,
                b,
                d = 0,
                f = this.request.getAllResponseHeaders().split('\n');
              d < f.length;

            )
              ((b = f[d]),
                ++d,
                (a = R.trim(M.substr(b, 0, b.indexOf(':')))),
                (b = R.trim(M.substr(b, b.indexOf(':') + 1, null))),
                '' != a && this.parent.responseHeaders.push(new Gi(a, b)));
          }
          this.parent.responseStatus = this.request.status;
        },
        __loadData: function (a, b) {
          var d = this;
          this.binary = !0;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == d.request.readyState &&
                ((a = null),
                '' == d.request.responseType
                  ? null != d.request.responseText &&
                    (a = yb.ofString(d.request.responseText))
                  : null != d.request.response &&
                    (a = yb.ofData(d.request.response)),
                null != d.request.status &&
                ((200 <= d.request.status && 400 > d.request.status) ||
                  (d.validStatus0 && 0 == d.request.status))
                  ? (d.processResponse(), b.complete(a))
                  : (d.processResponse(), b.error(new jg(d.request.status, a))),
                (d.request = null),
                ya.activeRequests--,
                ya.processQueue());
            },
          );
        },
        __loadText: function (a, b) {
          var d = this;
          this.binary = !1;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == d.request.readyState &&
                (null != d.request.status &&
                ((200 <= d.request.status && 400 > d.request.status) ||
                  (d.validStatus0 && 0 == d.request.status))
                  ? (d.processResponse(), b.complete(d.request.responseText))
                  : (d.processResponse(),
                    b.error(new jg(d.request.status, d.request.responseText))),
                (d.request = null),
                ya.activeRequests--,
                ya.processQueue());
            },
          );
        },
        __class__: ya,
      };
      var Ck = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Dynamic_Void'] = Ck;
      Ck.__name__ = 'lime.app._Event_Dynamic_Void';
      Ck.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Ck,
      };
      var Pl = {
          disablePreserveClasses: function (a) {
            null != a &&
              a instanceof Object &&
              1 != N.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              (a.__skipPrototype__ = !0);
          },
          restoreClasses: function (a, b) {
            null == b &&
              ((b = (2147483647 * Math.random()) | 0),
              N.field(a, '__restoreFlag__') == b && ++b);
            if (
              null != a &&
              a instanceof Object &&
              1 != N.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              N.field(a, '__restoreFlag__') != b
            ) {
              try {
                a.__restoreFlag__ = b;
              } catch (g) {
                Na.lastError = g;
                return;
              }
              if (null != N.field(a, '__prototype__'))
                try {
                  Object.setPrototypeOf(
                    a,
                    h[N.field(a, '__prototype__')].prototype,
                  );
                } catch (g) {
                  Na.lastError = g;
                }
              var d = 0;
              for (a = Object.values(a); d < a.length; ) {
                var f = a[d];
                ++d;
                Pl.restoreClasses(f, b);
              }
            }
          },
        },
        bm = {
          toFunction: function (a) {
            if (null != a.func) return a.func;
            if (null != a.classPath && null != a.functionName)
              return ((a.func = h[a.classPath][a.functionName]), a.func);
            if (null != a.sourceCode)
              return (
                (a.func = new Function('return ' + a.sourceCode)()),
                a.func
              );
            throw Z.thrown(
              'Object is not a valid WorkFunction: ' + G.string(a),
            );
          },
        },
        pd = function (a, b) {
          this.__href = a;
          null != b &&
            ((this.__worker = b),
            (this.__worker.onmessage = m(this, this.dispatchMessage)),
            (this.onMessage = new Ck()));
          Pl.disablePreserveClasses(this);
        };
      h['lime._internal.backend.html5.HTML5Thread'] = pd;
      pd.__name__ = 'lime._internal.backend.html5.HTML5Thread';
      pd.prototype = {
        dispatchMessage: function (a) {
          a = a.data;
          Pl.restoreClasses(a);
          null != this.onMessage && this.onMessage.dispatch(a);
          pd.__resolveMethods.isEmpty()
            ? pd.__messages.add(a)
            : pd.__resolveMethods.pop()(a);
        },
        destroy: function () {
          if (null != this.__worker) this.__worker.terminate();
          else if (pd.__isWorker)
            try {
              D.close();
            } catch (a) {
              Na.lastError = a;
            }
        },
        __class__: pd,
      };
      var Qa = function (a) {
        this.imeCompositionActive = !1;
        this.unusedTouchesPool = new Ba();
        this.scale = 1;
        this.currentTouches = new ic();
        this.parent = a;
        this.cursor = Vb.DEFAULT;
        this.cacheMouseY = this.cacheMouseX = 0;
        var b = a.__attributes;
        Object.prototype.hasOwnProperty.call(b, 'context') || (b.context = {});
        this.renderType = b.context.type;
        Object.prototype.hasOwnProperty.call(b, 'element') &&
          (a.element = b.element);
        var d = a.element;
        Object.prototype.hasOwnProperty.call(b, 'allowHighDPI') &&
          b.allowHighDPI &&
          'dom' != this.renderType &&
          (this.scale = window.devicePixelRatio);
        a.__scale = this.scale;
        this.setWidth = Object.prototype.hasOwnProperty.call(b, 'width')
          ? b.width
          : 0;
        this.setHeight = Object.prototype.hasOwnProperty.call(b, 'height')
          ? b.height
          : 0;
        a.__width = this.setWidth;
        a.__height = this.setHeight;
        a.id = Qa.windowID++;
        d instanceof HTMLCanvasElement
          ? (this.canvas = d)
          : 'dom' == this.renderType
            ? (this.div = window.document.createElement('div'))
            : (this.canvas = window.document.createElement('canvas'));
        if (null != this.canvas) {
          var f = this.canvas.style;
          f.setProperty('-webkit-transform', 'translateZ(0)', null);
          f.setProperty('transform', 'translateZ(0)', null);
        } else
          null != this.div &&
            ((f = this.div.style),
            f.setProperty('-webkit-transform', 'translate3D(0,0,0)', null),
            f.setProperty('transform', 'translate3D(0,0,0)', null),
            (f.position = 'relative'),
            (f.overflow = 'hidden'),
            f.setProperty('-webkit-user-select', 'none', null),
            f.setProperty('-moz-user-select', 'none', null),
            f.setProperty('-ms-user-select', 'none', null),
            f.setProperty('-o-user-select', 'none', null));
        0 == a.__width &&
          0 == a.__height &&
          (null != d
            ? ((a.__width = d.clientWidth), (a.__height = d.clientHeight))
            : ((a.__width = window.innerWidth),
              (a.__height = window.innerHeight)),
          (this.cacheElementWidth = a.__width),
          (this.cacheElementHeight = a.__height),
          (this.resizeElement = !0));
        null != this.canvas
          ? ((this.canvas.width = Math.round(a.__width * this.scale)),
            (this.canvas.height = Math.round(a.__height * this.scale)),
            (this.canvas.style.width = a.__width + 'px'),
            (this.canvas.style.height = a.__height + 'px'))
          : ((this.div.style.width = a.__width + 'px'),
            (this.div.style.height = a.__height + 'px'));
        if (
          (Object.prototype.hasOwnProperty.call(b, 'resizable') &&
            b.resizable) ||
          (!Object.prototype.hasOwnProperty.call(b, 'width') &&
            0 == this.setWidth &&
            0 == this.setHeight)
        )
          a.__resizable = !0;
        this.updateSize();
        if (null != d) {
          null != this.canvas
            ? d != this.canvas && d.appendChild(this.canvas)
            : d.appendChild(this.div);
          b = 'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
            ' ',
          );
          for (f = 0; f < b.length; ) {
            var g = b[f];
            ++f;
            d.addEventListener(g, m(this, this.handleMouseEvent), !0);
          }
          d.addEventListener(
            'contextmenu',
            m(this, this.handleContextMenuEvent),
            !0,
          );
          d.addEventListener('dragstart', m(this, this.handleDragEvent), !0);
          d.addEventListener('dragover', m(this, this.handleDragEvent), !0);
          d.addEventListener('drop', m(this, this.handleDragEvent), !0);
          d.addEventListener('touchstart', m(this, this.handleTouchEvent), !0);
          d.addEventListener('touchmove', m(this, this.handleTouchEvent), !0);
          d.addEventListener('touchend', m(this, this.handleTouchEvent), !0);
          d.addEventListener('touchcancel', m(this, this.handleTouchEvent), !0);
          d.addEventListener(
            'gamepadconnected',
            m(this, this.handleGamepadEvent),
            !0,
          );
          d.addEventListener(
            'gamepaddisconnected',
            m(this, this.handleGamepadEvent),
            !0,
          );
        }
        this.createContext();
        'webgl' == a.context.type &&
          (this.canvas.addEventListener(
            'webglcontextlost',
            m(this, this.handleContextEvent),
            !1,
          ),
          this.canvas.addEventListener(
            'webglcontextrestored',
            m(this, this.handleContextEvent),
            !1,
          ));
      };
      h['lime._internal.backend.html5.HTML5Window'] = Qa;
      Qa.__name__ = 'lime._internal.backend.html5.HTML5Window';
      Qa.textArea = null;
      Qa.textInput = null;
      Qa.prototype = {
        close: function () {
          var a = this.parent.element;
          if (null != a) {
            null != this.canvas
              ? (a != this.canvas && a.removeChild(this.canvas),
                (this.canvas = null))
              : null != this.div &&
                (a.removeChild(this.div), (this.div = null));
            for (
              var b =
                  'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
                    ' ',
                  ),
                d = 0;
              d < b.length;

            ) {
              var f = b[d];
              ++d;
              a.removeEventListener(f, m(this, this.handleMouseEvent), !0);
            }
            a.removeEventListener(
              'contextmenu',
              m(this, this.handleContextMenuEvent),
              !0,
            );
            a.removeEventListener(
              'dragstart',
              m(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener(
              'dragover',
              m(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener('drop', m(this, this.handleDragEvent), !0);
            a.removeEventListener(
              'touchstart',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchmove',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchend',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchcancel',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'gamepadconnected',
              m(this, this.handleGamepadEvent),
              !0,
            );
            a.removeEventListener(
              'gamepaddisconnected',
              m(this, this.handleGamepadEvent),
              !0,
            );
          }
          this.parent.application.__removeWindow(this.parent);
        },
        createContext: function () {
          var a = new Dk(),
            b = this.parent.__attributes.context;
          a.window = this.parent;
          a.attributes = b;
          if (null != this.div)
            ((a.dom = this.div), (a.type = 'dom'), (a.version = ''));
          else if (null != this.canvas) {
            var d = null,
              f = 'canvas' == this.renderType,
              g =
                'opengl' == this.renderType ||
                'opengles' == this.renderType ||
                'webgl' == this.renderType,
              k =
                !Object.prototype.hasOwnProperty.call(b, 'version') ||
                '1' != b.version,
              l = !1;
            if (
              g ||
              (!f &&
                (!Object.prototype.hasOwnProperty.call(b, 'hardware') ||
                  b.hardware))
            ) {
              f =
                Object.prototype.hasOwnProperty.call(b, 'background') &&
                null == b.background;
              g = Object.prototype.hasOwnProperty.call(b, 'colorDepth')
                ? b.colorDepth
                : 16;
              var u =
                  Object.prototype.hasOwnProperty.call(b, 'antialiasing') &&
                  0 < b.antialiasing,
                p = Object.prototype.hasOwnProperty.call(b, 'depth')
                  ? b.depth
                  : !0,
                h =
                  Object.prototype.hasOwnProperty.call(b, 'stencil') &&
                  b.stencil;
              b =
                Object.prototype.hasOwnProperty.call(
                  b,
                  'preserveDrawingBuffer',
                ) && b.preserveDrawingBuffer;
              b = {
                alpha: f || 16 < g,
                antialias: u,
                depth: p,
                premultipliedAlpha: !0,
                stencil: h,
                preserveDrawingBuffer: b,
                failIfMajorPerformanceCaveat: !1,
              };
              f = ['webgl', 'experimental-webgl'];
              k && f.unshift('webgl2');
              for (
                k = 0;
                k < f.length &&
                ((g = f[k]),
                ++k,
                (d = this.canvas.getContext(g, b)),
                null != d && 'webgl2' == g && (l = !0),
                null == d);

              );
            }
            null == d
              ? ((a.canvas2D = this.canvas.getContext('2d')),
                (a.type = 'canvas'),
                (a.version = ''))
              : ((a.webgl = Ec.fromWebGL2RenderContext(d)),
                l && (a.webgl2 = d),
                null == Pd.context &&
                  ((Pd.context = d),
                  (Pd.type = 'webgl'),
                  (Pd.version = l ? 2 : 1)),
                (a.type = 'webgl'),
                (a.version = l ? '2' : '1'));
          }
          this.parent.context = a;
        },
        focusTextInput: function () {
          var a = this;
          this.__focusPending ||
            ((this.__focusPending = !0),
            wf.delay(function () {
              a.__focusPending = !1;
              a.textInputEnabled && Qa.textInput.focus();
            }, 20));
        },
        getFrameRate: function () {
          return null == this.parent.application
            ? 0
            : 0 > this.parent.application.__backend.framePeriod
              ? 60
              : 1e3 == this.parent.application.__backend.framePeriod
                ? 0
                : 1e3 / this.parent.application.__backend.framePeriod;
        },
        handleContextEvent: function (a) {
          switch (a.type) {
            case 'webglcontextlost':
              a.cancelable && a.preventDefault();
              this.parent.context = null;
              this.parent.onRenderContextLost.dispatch();
              break;
            case 'webglcontextrestored':
              (this.createContext(),
                this.parent.onRenderContextRestored.dispatch(
                  this.parent.context,
                ));
          }
        },
        handleContextMenuEvent: function (a) {
          (this.parent.onMouseUp.canceled ||
            this.parent.onMouseDown.canceled) &&
            a.cancelable &&
            a.preventDefault();
        },
        handleCutOrCopyEvent: function (a) {
          var b = nc.get_text();
          null == b && (b = '');
          a.clipboardData.setData('text/plain', b);
          a.cancelable && a.preventDefault();
        },
        handleDragEvent: function (a) {
          switch (a.type) {
            case 'dragover':
              return (a.preventDefault(), !1);
            case 'dragstart':
              if (
                'img' ==
                  Fa.__cast(a.target, HTMLElement).nodeName.toLowerCase() &&
                a.cancelable
              )
                return (a.preventDefault(), !1);
              break;
            case 'drop':
              if (null != a.dataTransfer && 0 < a.dataTransfer.files.length)
                return (
                  this.parent.onDropFile.dispatch(a.dataTransfer.files),
                  a.preventDefault(),
                  !1
                );
          }
          return !0;
        },
        handleFocusEvent: function (a) {
          this.textInputEnabled &&
            (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) &&
            this.focusTextInput();
        },
        handleFullscreenEvent: function (a) {
          if (
            null !=
            (document.fullscreenElement ||
              document.mozFullScreenElement ||
              document.webkitFullscreenElement ||
              document.msFullscreenElement)
          )
            ((this.isFullscreen = !0),
              (this.parent.__fullscreen = !0),
              this.requestedFullscreen &&
                ((this.requestedFullscreen = !1),
                this.parent.onFullscreen.dispatch()));
          else {
            this.isFullscreen = !1;
            this.parent.__fullscreen = !1;
            this.parent.onRestore.dispatch();
            a = [
              'fullscreenchange',
              'mozfullscreenchange',
              'webkitfullscreenchange',
              'MSFullscreenChange',
            ];
            for (
              var b = [
                  'fullscreenerror',
                  'mozfullscreenerror',
                  'webkitfullscreenerror',
                  'MSFullscreenError',
                ],
                d = 0,
                f = a.length;
              d < f;

            ) {
              var g = d++;
              window.document.removeEventListener(
                a[g],
                m(this, this.handleFullscreenEvent),
                !1,
              );
              window.document.removeEventListener(
                b[g],
                m(this, this.handleFullscreenEvent),
                !1,
              );
            }
          }
        },
        handleGamepadEvent: function (a) {
          switch (a.type) {
            case 'gamepadconnected':
              jc.__connect(a.gamepad.index);
              'standard' == a.gamepad.mapping && oc.__connect(a.gamepad.index);
              break;
            case 'gamepaddisconnected':
              (jc.__disconnect(a.gamepad.index),
                oc.__disconnect(a.gamepad.index));
          }
        },
        handleInputEvent: function (a) {
          this.imeCompositionActive ||
            Qa.textInput.value == Qa.dummyCharacter ||
            ((a = R.replace(Qa.textInput.value, Qa.dummyCharacter, '')),
            0 < a.length && this.parent.onTextInput.dispatch(a),
            (Qa.textInput.value = Qa.dummyCharacter));
        },
        handleMouseEvent: function (a) {
          if ('wheel' != a.type) {
            if (null != this.parent.element)
              if (null != this.canvas) {
                var b = this.canvas.getBoundingClientRect();
                var d = (this.parent.__width / b.width) * (a.clientX - b.left);
                b = (this.parent.__height / b.height) * (a.clientY - b.top);
              } else
                null != this.div
                  ? ((b = this.div.getBoundingClientRect()),
                    (d = a.clientX - b.left),
                    (b = a.clientY - b.top))
                  : ((b = this.parent.element.getBoundingClientRect()),
                    (d =
                      (this.parent.__width / b.width) * (a.clientX - b.left)),
                    (b =
                      (this.parent.__height / b.height) * (a.clientY - b.top)));
            else ((d = a.clientX), (b = a.clientY));
            switch (a.type) {
              case 'mousedown':
                a.currentTarget == this.parent.element &&
                  window.addEventListener(
                    'mouseup',
                    m(this, this.handleMouseEvent),
                  );
                this.parent.clickCount = a.detail;
                this.parent.onMouseDown.dispatch(d, b, a.button);
                this.parent.clickCount = 0;
                this.parent.onMouseDown.canceled &&
                  a.cancelable &&
                  a.preventDefault();
                break;
              case 'mouseenter':
                a.target == this.parent.element &&
                  (this.parent.onEnter.dispatch(),
                  this.parent.onEnter.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mouseleave':
                a.target == this.parent.element &&
                  (this.parent.onLeave.dispatch(),
                  this.parent.onLeave.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mousemove':
                if (d != this.cacheMouseX || b != this.cacheMouseY)
                  (this.parent.onMouseMove.dispatch(d, b),
                    this.parent.onMouseMoveRelative.dispatch(
                      d - this.cacheMouseX,
                      b - this.cacheMouseY,
                    ),
                    (this.parent.onMouseMove.canceled ||
                      this.parent.onMouseMoveRelative.canceled) &&
                      a.cancelable &&
                      a.preventDefault());
                break;
              case 'mouseup':
                (window.removeEventListener(
                  'mouseup',
                  m(this, this.handleMouseEvent),
                ),
                  a.currentTarget == this.parent.element && a.stopPropagation(),
                  (this.parent.clickCount = a.detail),
                  this.parent.onMouseUp.dispatch(d, b, a.button),
                  (this.parent.clickCount = 0),
                  this.parent.onMouseUp.canceled &&
                    a.cancelable &&
                    a.preventDefault());
            }
            this.cacheMouseX = d;
            this.cacheMouseY = b;
          } else {
            switch (a.deltaMode) {
              case 0:
                d = We.PIXELS;
                break;
              case 1:
                d = We.LINES;
                break;
              case 2:
                d = We.PAGES;
                break;
              default:
                d = We.UNKNOWN;
            }
            this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, d);
            this.parent.onMouseWheel.canceled &&
              a.cancelable &&
              a.preventDefault();
          }
        },
        handlePasteEvent: function (a) {
          if (-1 < a.clipboardData.types.indexOf('text/plain')) {
            var b = a.clipboardData.getData('text/plain');
            nc.set_text(b);
            this.textInputEnabled && this.parent.onTextInput.dispatch(b);
            a.cancelable && a.preventDefault();
          }
        },
        handleResizeEvent: function (a) {
          this.primaryTouch = null;
          this.updateSize();
        },
        handleTouchEvent: function (a) {
          a.cancelable && a.preventDefault();
          var b = null;
          null != this.parent.element &&
            (b =
              null != this.canvas
                ? this.canvas.getBoundingClientRect()
                : null != this.div
                  ? this.div.getBoundingClientRect()
                  : this.parent.element.getBoundingClientRect());
          var d = this.setWidth,
            f = this.setHeight;
          if (0 == d || 0 == f)
            null != b ? ((d = b.width), (f = b.height)) : (f = d = 1);
          for (var g, k, l, u, p, h = 0, r = a.changedTouches; h < r.length; ) {
            var n = r[h];
            ++h;
            null != b
              ? ((k = (d / b.width) * (n.clientX - b.left)),
                (l = (f / b.height) * (n.clientY - b.top)))
              : ((k = n.clientX), (l = n.clientY));
            if ('touchstart' == a.type)
              ((g = this.unusedTouchesPool.pop()),
                null == g
                  ? (g = new Yb(
                      k / d,
                      l / f,
                      n.identifier,
                      0,
                      0,
                      n.force,
                      this.parent.id,
                    ))
                  : ((g.x = k / d),
                    (g.y = l / f),
                    (g.id = n.identifier),
                    (g.dx = 0),
                    (g.dy = 0),
                    (g.pressure = n.force),
                    (g.device = this.parent.id)),
                (this.currentTouches.h[n.identifier] = g),
                Yb.onStart.dispatch(g),
                null == this.primaryTouch && (this.primaryTouch = g),
                g == this.primaryTouch &&
                  this.parent.onMouseDown.dispatch(k, l, 0));
            else if (((g = this.currentTouches.h[n.identifier]), null != g))
              switch (
                ((u = g.x),
                (p = g.y),
                (g.x = k / d),
                (g.y = l / f),
                (g.dx = g.x - u),
                (g.dy = g.y - p),
                (g.pressure = n.force),
                a.type)
              ) {
                case 'touchcancel':
                  Yb.onCancel.dispatch(g);
                  this.currentTouches.remove(n.identifier);
                  this.unusedTouchesPool.add(g);
                  g == this.primaryTouch && (this.primaryTouch = null);
                  break;
                case 'touchend':
                  Yb.onEnd.dispatch(g);
                  this.currentTouches.remove(n.identifier);
                  this.unusedTouchesPool.add(g);
                  g == this.primaryTouch &&
                    (this.parent.onMouseUp.dispatch(k, l, 0),
                    (this.primaryTouch = null));
                  break;
                case 'touchmove':
                  (Yb.onMove.dispatch(g),
                    g == this.primaryTouch &&
                      this.parent.onMouseMove.dispatch(k, l));
              }
          }
        },
        isDescendent: function (a) {
          if (a == this.parent.element) return !0;
          for (; null != a; ) {
            if (a.parentNode == this.parent.element) return !0;
            a = a.parentNode;
          }
          return !1;
        },
        setClipboard: function (a) {
          null == Qa.textArea &&
            ((Qa.textArea = window.document.createElement('textarea')),
            (Qa.textArea.style.height = '0px'),
            (Qa.textArea.style.left = '-100px'),
            (Qa.textArea.style.opacity = '0'),
            (Qa.textArea.style.position = 'fixed'),
            (Qa.textArea.style.top = '-100px'),
            (Qa.textArea.style.width = '0px'),
            window.document.body.appendChild(Qa.textArea));
          Qa.textArea.value = a;
          Qa.textArea.focus();
          Qa.textArea.select();
          window.document.queryCommandEnabled('copy') &&
            window.document.execCommand('copy');
          this.textInputEnabled && this.focusTextInput();
        },
        setCursor: function (a) {
          if (this.cursor != a) {
            if (null == a) this.parent.element.style.cursor = 'none';
            else {
              switch (a._hx_index) {
                case 0:
                  var b = 'default';
                  break;
                case 1:
                  b = 'crosshair';
                  break;
                case 3:
                  b = 'move';
                  break;
                case 4:
                  b = 'pointer';
                  break;
                case 5:
                  b = 'nesw-resize';
                  break;
                case 6:
                  b = 'ns-resize';
                  break;
                case 7:
                  b = 'nwse-resize';
                  break;
                case 8:
                  b = 'ew-resize';
                  break;
                case 9:
                  b = 'text';
                  break;
                case 10:
                  b = 'wait';
                  break;
                case 11:
                  b = 'wait';
                  break;
                default:
                  b = 'auto';
              }
              this.parent.element.style.cursor = b;
            }
            this.cursor = a;
          }
          return this.cursor;
        },
        setFullscreen: function (a) {
          a
            ? this.requestedFullscreen ||
              this.isFullscreen ||
              ((this.requestedFullscreen = !0),
              ((J = this.parent.element), m(J, J.requestFullscreen))
                ? (document.addEventListener(
                    'fullscreenchange',
                    m(this, this.handleFullscreenEvent),
                    !1,
                  ),
                  document.addEventListener(
                    'fullscreenerror',
                    m(this, this.handleFullscreenEvent),
                    !1,
                  ),
                  this.parent.element.requestFullscreen())
                : this.parent.element.mozRequestFullScreen
                  ? (document.addEventListener(
                      'mozfullscreenchange',
                      m(this, this.handleFullscreenEvent),
                      !1,
                    ),
                    document.addEventListener(
                      'mozfullscreenerror',
                      m(this, this.handleFullscreenEvent),
                      !1,
                    ),
                    this.parent.element.mozRequestFullScreen())
                  : this.parent.element.webkitRequestFullscreen
                    ? (document.addEventListener(
                        'webkitfullscreenchange',
                        m(this, this.handleFullscreenEvent),
                        !1,
                      ),
                      document.addEventListener(
                        'webkitfullscreenerror',
                        m(this, this.handleFullscreenEvent),
                        !1,
                      ),
                      this.parent.element.webkitRequestFullscreen())
                    : this.parent.element.msRequestFullscreen &&
                      (document.addEventListener(
                        'MSFullscreenChange',
                        m(this, this.handleFullscreenEvent),
                        !1,
                      ),
                      document.addEventListener(
                        'MSFullscreenError',
                        m(this, this.handleFullscreenEvent),
                        !1,
                      ),
                      this.parent.element.msRequestFullscreen()))
            : this.isFullscreen &&
              ((this.requestedFullscreen = !1),
              document.exitFullscreen
                ? document.exitFullscreen()
                : document.mozCancelFullScreen
                  ? document.mozCancelFullScreen()
                  : document.webkitExitFullscreen
                    ? document.webkitExitFullscreen()
                    : document.msExitFullscreen && document.msExitFullscreen());
          return a;
        },
        setTextInputEnabled: function (a) {
          if (a) {
            if (null == Qa.textInput) {
              Qa.textInput = window.document.createElement('input');
              var b =
                0 <= D.navigator.userAgent.indexOf('Android')
                  ? 'password'
                  : 'text';
              Qa.textInput.type = b;
              Qa.textInput.style.position = 'absolute';
              Qa.textInput.style.opacity = '0';
              Qa.textInput.style.color = 'transparent';
              Qa.textInput.value = Qa.dummyCharacter;
              Qa.textInput.autocapitalize = 'off';
              Qa.textInput.autocorrect = 'off';
              Qa.textInput.autocomplete = 'off';
              Qa.textInput.style.left = '0px';
              Qa.textInput.style.top = '50%';
              new xa('(iPad|iPhone|iPod).*OS 8_', 'gi').match(
                window.navigator.userAgent,
              )
                ? ((Qa.textInput.style.fontSize = '0px'),
                  (Qa.textInput.style.width = '0px'),
                  (Qa.textInput.style.height = '0px'))
                : ((Qa.textInput.style.width = '1px'),
                  (Qa.textInput.style.height = '1px'));
              Qa.textInput.style.pointerEvents = 'none';
              Qa.textInput.style.zIndex = '-10000000';
            }
            null == Qa.textInput.parentNode &&
              this.parent.element.appendChild(Qa.textInput);
            this.textInputEnabled ||
              (Qa.textInput.addEventListener(
                'input',
                m(this, this.handleInputEvent),
                !0,
              ),
              Qa.textInput.addEventListener(
                'blur',
                m(this, this.handleFocusEvent),
                !0,
              ),
              Qa.textInput.addEventListener(
                'cut',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Qa.textInput.addEventListener(
                'copy',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Qa.textInput.addEventListener(
                'paste',
                m(this, this.handlePasteEvent),
                !0,
              ),
              Qa.textInput.addEventListener(
                'compositionstart',
                m(this, this.handleCompositionstartEvent),
                !0,
              ),
              Qa.textInput.addEventListener(
                'compositionend',
                m(this, this.handleCompositionendEvent),
                !0,
              ));
            Qa.textInput.focus();
            Qa.textInput.select();
          } else
            null != Qa.textInput &&
              (Qa.textInput.blur(),
              Qa.textInput.removeEventListener(
                'input',
                m(this, this.handleInputEvent),
                !0,
              ),
              Qa.textInput.removeEventListener(
                'blur',
                m(this, this.handleFocusEvent),
                !0,
              ),
              Qa.textInput.removeEventListener(
                'cut',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Qa.textInput.removeEventListener(
                'copy',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Qa.textInput.removeEventListener(
                'paste',
                m(this, this.handlePasteEvent),
                !0,
              ),
              Qa.textInput.removeEventListener(
                'compositionstart',
                m(this, this.handleCompositionstartEvent),
                !0,
              ),
              Qa.textInput.removeEventListener(
                'compositionend',
                m(this, this.handleCompositionendEvent),
                !0,
              ));
          return (this.textInputEnabled = a);
        },
        setTextInputRect: function (a) {
          return (this.textInputRect = a);
        },
        handleCompositionstartEvent: function (a) {
          this.imeCompositionActive = !0;
        },
        handleCompositionendEvent: function (a) {
          this.imeCompositionActive = !1;
          this.handleInputEvent(a);
        },
        updateSize: function () {
          if (this.parent.__resizable) {
            if (null != this.parent.element) {
              var a = this.parent.element.clientWidth;
              var b = this.parent.element.clientHeight;
            } else ((a = window.innerWidth), (b = window.innerHeight));
            if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
              this.cacheElementWidth = a;
              this.cacheElementHeight = b;
              var d =
                this.resizeElement ||
                (0 == this.setWidth && 0 == this.setHeight);
              if (
                null != this.parent.element &&
                (null == this.div || (null != this.div && d))
              )
                if (d) {
                  if (this.parent.__width != a || this.parent.__height != b)
                    ((this.parent.__width = a),
                      (this.parent.__height = b),
                      null != this.canvas
                        ? this.parent.element != this.canvas &&
                          ((this.canvas.width = Math.round(a * this.scale)),
                          (this.canvas.height = Math.round(b * this.scale)),
                          (this.canvas.style.width = a + 'px'),
                          (this.canvas.style.height = b + 'px'))
                        : ((this.div.style.width = a + 'px'),
                          (this.div.style.height = b + 'px')),
                      this.parent.onResize.dispatch(a, b));
                } else {
                  d = 0 != this.setWidth ? a / this.setWidth : 1;
                  var f = 0 != this.setHeight ? b / this.setHeight : 1,
                    g = a,
                    k = b,
                    l = 0,
                    u = 0;
                  d < f
                    ? ((k = Math.floor(this.setHeight * d)),
                      (u = Math.floor((b - k) / 2)))
                    : ((g = Math.floor(this.setWidth * f)),
                      (l = Math.floor((a - g) / 2)));
                  null != this.canvas
                    ? this.parent.element != this.canvas &&
                      ((this.canvas.style.width = g + 'px'),
                      (this.canvas.style.height = k + 'px'),
                      (this.canvas.style.marginLeft = l + 'px'),
                      (this.canvas.style.marginTop = u + 'px'))
                    : ((this.div.style.width = g + 'px'),
                      (this.div.style.height = k + 'px'),
                      (this.div.style.marginLeft = l + 'px'),
                      (this.div.style.marginTop = u + 'px'));
                }
            }
          }
        },
        __class__: Qa,
      };
      var wl = function () {};
      h['lime._internal.format.BMP'] = wl;
      wl.__name__ = 'lime._internal.format.BMP';
      wl.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        null == b && (b = yf.RGB);
        var d = 14,
          f = 40,
          g = a.width * a.height * 4;
        if (null != b)
          switch (b._hx_index) {
            case 0:
              g = (3 * a.width + ((3 * a.width) % 4)) * a.height;
              break;
            case 1:
              f = 108;
              break;
            case 2:
              ((d = 0), (g += a.width * a.height));
          }
        var k = new yb(new ArrayBuffer(d + f + g)),
          l = 0;
        0 < d &&
          ((k.b[l++] = 66),
          (k.b[l++] = 77),
          k.setInt32(l, k.length),
          (l += 4),
          k.setUInt16(l, 0),
          (l += 2),
          k.setUInt16(l, 0),
          (l += 2),
          k.setInt32(l, d + f),
          (l += 4));
        k.setInt32(l, f);
        l += 4;
        k.setInt32(l, a.width);
        l += 4;
        k.setInt32(l, b == yf.ICO ? 2 * a.height : a.height);
        l += 4;
        k.setUInt16(l, 1);
        l += 2;
        k.setUInt16(l, b == yf.RGB ? 24 : 32);
        l += 2;
        k.setInt32(l, b == yf.BITFIELD ? 3 : 0);
        l += 4;
        k.setInt32(l, g);
        l += 4;
        k.setInt32(l, 11824);
        l += 4;
        k.setInt32(l, 11824);
        l += 4;
        k.setInt32(l, 0);
        l += 4;
        k.setInt32(l, 0);
        l += 4;
        if (b == yf.BITFIELD)
          for (
            k.setInt32(l, 16711680),
              l += 4,
              k.setInt32(l, 65280),
              l += 4,
              k.setInt32(l, 255),
              l += 4,
              k.setInt32(l, -16777216),
              l += 4,
              k.b[l++] = 32,
              k.b[l++] = 110,
              k.b[l++] = 105,
              k.b[l++] = 87,
              d = 0;
            48 > d;

          )
            (d++, (k.b[l++] = 0));
        f = a.getPixels(new xd(0, 0, a.width, a.height), 1);
        if (null != b)
          switch (b._hx_index) {
            case 0:
              d = 0;
              for (b = a.height; d < b; ) {
                var u = d++;
                u = 4 * (a.height - 1 - u) * a.width;
                for (var p = 0, h = a.width; p < h; ) {
                  p++;
                  u++;
                  var r = f.b[u++];
                  var n = f.b[u++];
                  var t = f.b[u++];
                  k.b[l++] = t & 255;
                  k.b[l++] = n & 255;
                  k.b[l++] = r & 255;
                }
                g = 0;
                for (var E = (3 * a.width) % 4; g < E; ) (g++, (k.b[l++] = 0));
              }
              break;
            case 1:
              d = 0;
              for (b = a.height; d < b; )
                for (
                  u = d++,
                    u = 4 * (a.height - 1 - u) * a.width,
                    p = 0,
                    h = a.width;
                  p < h;

                ) {
                  p++;
                  var q = f.b[u++];
                  r = f.b[u++];
                  n = f.b[u++];
                  t = f.b[u++];
                  k.b[l++] = t & 255;
                  k.b[l++] = n & 255;
                  k.b[l++] = r & 255;
                  k.b[l++] = q & 255;
                }
              break;
            case 2:
              g = new yb(new ArrayBuffer(a.width * a.height));
              d = E = 0;
              for (b = a.height; d < b; )
                for (
                  u = d++,
                    u = 4 * (a.height - 1 - u) * a.width,
                    p = 0,
                    h = a.width;
                  p < h;

                )
                  (p++,
                    (q = f.b[u++]),
                    (r = f.b[u++]),
                    (n = f.b[u++]),
                    (t = f.b[u++]),
                    (k.b[l++] = t & 255),
                    (k.b[l++] = n & 255),
                    (k.b[l++] = r & 255),
                    (k.b[l++] = q & 255),
                    (g.b[E++] = 0));
              k.blit(l, g, 0, a.width * a.height);
          }
        return k;
      };
      var yf = (K['lime._internal.format.BMPType'] = {
        __ename__: 'lime._internal.format.BMPType',
        __constructs__: null,
        RGB: {
          _hx_name: 'RGB',
          _hx_index: 0,
          __enum__: 'lime._internal.format.BMPType',
          toString: q,
        },
        BITFIELD: {
          _hx_name: 'BITFIELD',
          _hx_index: 1,
          __enum__: 'lime._internal.format.BMPType',
          toString: q,
        },
        ICO: {
          _hx_name: 'ICO',
          _hx_index: 2,
          __enum__: 'lime._internal.format.BMPType',
          toString: q,
        },
      });
      yf.__constructs__ = [yf.RGB, yf.BITFIELD, yf.ICO];
      var ke = function () {};
      h['lime._internal.format.Base64'] = ke;
      ke.__name__ = 'lime._internal.format.Base64';
      ke.encode = function (a) {
        var b = [],
          d = ke.DICTIONARY,
          f = ke.EXTENDED_DICTIONARY,
          g = a.length,
          k = Math.floor(g / 3),
          l = 2 * k;
        b.length = 2 * Math.ceil(g / 3);
        for (var u = 0, p = 0, h; p < l; )
          ((h = (a.b[u] << 16) | (a.b[u + 1] << 8) | a.b[u + 2]),
            (b[p] = f[(h >> 12) & 4095]),
            (b[p + 1] = f[h & 4095]),
            (u += 3),
            (p += 2));
        switch (g - 3 * k) {
          case 1:
            h = a.b[u] << 16;
            b[p] = f[(h >> 12) & 4095];
            b[p + 1] = '==';
            break;
          case 2:
            ((h = (a.b[u] << 16) | (a.b[u + 1] << 8)),
              (b[p] = f[(h >> 12) & 4095]),
              (b[p + 1] = d[(h >> 6) & 63] + '='));
        }
        return b.join('');
      };
      var xl = function () {};
      h['lime._internal.format.Deflate'] = xl;
      xl.__name__ = 'lime._internal.format.Deflate';
      xl.decompress = function (a) {
        a = pako.inflateRaw(a.b.bufferValue);
        return yb.ofData(a);
      };
      var yl = function () {};
      h['lime._internal.format.GZip'] = yl;
      yl.__name__ = 'lime._internal.format.GZip';
      yl.decompress = function (a) {
        a = pako.ungzip(a.b.bufferValue);
        return yb.ofData(a);
      };
      var zl = function () {};
      h['lime._internal.format.JPEG'] = zl;
      zl.__name__ = 'lime._internal.format.JPEG';
      zl.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Ha.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/jpeg', b / 100);
          a = window.atob(a.split(';base64,')[1]);
          b = new yb(new ArrayBuffer(a.length));
          for (var d = 0, f = a.length; d < f; ) {
            var g = d++;
            b.b[g] = M.cca(a, g) & 255;
          }
          return b;
        }
        return null;
      };
      var Al = function () {};
      h['lime._internal.format.LZMA'] = Al;
      Al.__name__ = 'lime._internal.format.LZMA';
      Al.decompress = function (a) {
        var b = LZMA.decompress;
        a = a.b.bufferValue;
        a = null != a ? new Uint8Array(a, 0) : null;
        b = b(a);
        return 'string' == typeof b ? yb.ofString(b) : yb.ofData(b);
      };
      var Ek = function () {};
      h['lime._internal.format.PNG'] = Ek;
      Ek.__name__ = 'lime._internal.format.PNG';
      Ek.encode = function (a) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Ha.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/png');
          a = window.atob(a.split(';base64,')[1]);
          for (
            var b = new yb(new ArrayBuffer(a.length)), d = 0, f = a.length;
            d < f;

          ) {
            var g = d++;
            b.b[g] = M.cca(a, g) & 255;
          }
          return b;
        }
        return null;
      };
      var Bl = function () {};
      h['lime._internal.format.Zlib'] = Bl;
      Bl.__name__ = 'lime._internal.format.Zlib';
      Bl.decompress = function (a) {
        a = pako.inflate(a.b.bufferValue);
        return yb.ofData(a);
      };
      var Ha = function () {};
      h['lime._internal.graphics.ImageCanvasUtil'] = Ha;
      Ha.__name__ = 'lime._internal.graphics.ImageCanvasUtil';
      Ha.colorTransform = function (a, b, d) {
        Ha.convertToData(a);
        Wb.colorTransform(a, b, d);
      };
      Ha.convertToCanvas = function (a, b) {
        null == b && (b = !1);
        var d = a.buffer;
        null != d.__srcImage
          ? (null == d.__srcCanvas &&
              (Ha.createCanvas(a, d.__srcImage.width, d.__srcImage.height),
              d.__srcContext.drawImage(d.__srcImage, 0, 0)),
            (d.__srcImage = null))
          : null == d.__srcCanvas && null != d.data
            ? (a.set_transparent(!0),
              Ha.createCanvas(a, d.width, d.height),
              Ha.createImageData(a),
              d.__srcContext.putImageData(d.__srcImageData, 0, 0))
            : a.type == Xc.DATA &&
              null != d.__srcImageData &&
              a.dirty &&
              (d.__srcContext.putImageData(d.__srcImageData, 0, 0),
              (a.dirty = !1));
        b
          ? ((d.data = null), (d.__srcImageData = null))
          : null == d.data &&
            null != d.__srcImageData &&
            (d.data = d.__srcImageData.data);
        a.type = Xc.CANVAS;
      };
      Ha.convertToData = function (a, b) {
        null == b && (b = !1);
        var d = a.buffer;
        null != d.__srcImage && Ha.convertToCanvas(a);
        if (null != d.__srcCanvas && null == d.data)
          (Ha.createImageData(a), a.type == Xc.CANVAS && (a.dirty = !1));
        else if (a.type == Xc.CANVAS && null != d.__srcCanvas && a.dirty) {
          if (null == d.__srcImageData) Ha.createImageData(a);
          else {
            d.__srcImageData = d.__srcContext.getImageData(
              0,
              0,
              d.width,
              d.height,
            );
            var f = d.__srcImageData.data.buffer;
            f = null != f ? new Uint8Array(f) : null;
            d.data = f;
          }
          a.dirty = !1;
        }
        b && ((a.buffer.__srcCanvas = null), (a.buffer.__srcContext = null));
        a.type = Xc.DATA;
      };
      Ha.copyChannel = function (a, b, d, f, g, k) {
        Ha.convertToData(b);
        Ha.convertToData(a);
        Wb.copyChannel(a, b, d, f, g, k);
      };
      Ha.copyPixels = function (a, b, d, f, g, k, l) {
        null == l && (l = !1);
        null == f ||
          f.x >= a.width ||
          f.y >= a.height ||
          null == d ||
          1 > d.width ||
          1 > d.height ||
          (null != g &&
            g.get_transparent() &&
            (null == k && (k = new Uf()),
            (b = b.clone()),
            b.copyChannel(
              g,
              new xd(d.x + k.x, d.y + k.y, d.width, d.height),
              new Uf(d.x, d.y),
              kg.ALPHA,
              kg.ALPHA,
            )),
          Ha.convertToCanvas(a, !0),
          l ||
            (a.get_transparent() &&
              b.get_transparent() &&
              a.buffer.__srcContext.clearRect(
                f.x + a.offsetX,
                f.y + a.offsetY,
                d.width + a.offsetX,
                d.height + a.offsetY,
              )),
          Ha.convertToCanvas(b),
          null != b.buffer.get_src() &&
            ((a.buffer.__srcContext.globalCompositeOperation = 'source-over'),
            a.buffer.__srcContext.drawImage(
              b.buffer.get_src(),
              (d.x + b.offsetX) | 0,
              (d.y + b.offsetY) | 0,
              d.width | 0,
              d.height | 0,
              (f.x + a.offsetX) | 0,
              (f.y + a.offsetY) | 0,
              d.width | 0,
              d.height | 0,
            )),
          (a.dirty = !0),
          a.version++);
      };
      Ha.createCanvas = function (a, b, d) {
        var f = a.buffer;
        null == f.__srcCanvas &&
          ((f.__srcCanvas = window.document.createElement('canvas')),
          (f.__srcCanvas.width = b),
          (f.__srcCanvas.height = d),
          a.get_transparent()
            ? (f.__srcContext = f.__srcCanvas.getContext('2d'))
            : (a.get_transparent() ||
                f.__srcCanvas.setAttribute('moz-opaque', 'true'),
              (f.__srcContext = f.__srcCanvas.getContext('2d', {
                alpha: !1,
              }))));
      };
      Ha.createImageData = function (a) {
        a = a.buffer;
        if (null == a.__srcImageData) {
          null == a.data
            ? (a.__srcImageData = a.__srcContext.getImageData(
                0,
                0,
                a.width,
                a.height,
              ))
            : ((a.__srcImageData = a.__srcContext.createImageData(
                a.width,
                a.height,
              )),
              a.__srcImageData.data.set(a.data));
          var b = a.__srcImageData.data.buffer;
          b = null != b ? new Uint8Array(b) : null;
          a.data = b;
        }
      };
      Ha.fillRect = function (a, b, d, f) {
        Ha.convertToCanvas(a);
        if (1 == f) {
          f = (d >> 16) & 255;
          var g = (d >> 8) & 255;
          var k = d & 255;
          d = a.get_transparent() ? (d >> 24) & 255 : 255;
        } else
          ((f = (d >> 24) & 255),
            (g = (d >> 16) & 255),
            (k = (d >> 8) & 255),
            (d = a.get_transparent() ? d & 255 : 255));
        0 == b.x &&
        0 == b.y &&
        b.width == a.width &&
        b.height == a.height &&
        a.get_transparent() &&
        0 == d
          ? (a.buffer.__srcCanvas.width = a.buffer.width)
          : (255 > d &&
              a.buffer.__srcContext.clearRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              ),
            0 < d &&
              ((a.buffer.__srcContext.fillStyle =
                'rgba(' + f + ', ' + g + ', ' + k + ', ' + d / 255 + ')'),
              a.buffer.__srcContext.fillRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              )),
            (a.dirty = !0),
            a.version++);
      };
      Ha.getPixel = function (a, b, d, f) {
        Ha.convertToData(a);
        return Wb.getPixel(a, b, d, f);
      };
      Ha.getPixels = function (a, b, d) {
        Ha.convertToData(a);
        return Wb.getPixels(a, b, d);
      };
      Ha.setPixel = function (a, b, d, f, g) {
        Ha.convertToData(a);
        Wb.setPixel(a, b, d, f, g);
      };
      Ha.sync = function (a, b) {
        null != a &&
          (a.type != Xc.CANVAS ||
          (null == a.buffer.__srcCanvas && null == a.buffer.data)
            ? a.type == Xc.DATA && Ha.convertToData(a, b)
            : Ha.convertToCanvas(a, b));
      };
      var Wb = function () {};
      h['lime._internal.graphics.ImageDataUtil'] = Wb;
      Wb.__name__ = 'lime._internal.graphics.ImageDataUtil';
      Wb.colorTransform = function (a, b, d) {
        var f = a.buffer.data;
        if (null != f) {
          var g = a.buffer.format,
            k = a.buffer.premultiplied;
          b = new le(a, b);
          var l = Hc.getAlphaTable(d),
            u = Hc.getRedTable(d),
            p = Hc.getGreenTable(d);
          d = Hc.getBlueTable(d);
          for (var h, r, n = 0, t = 0, E = b.height; t < E; ) {
            h = t++;
            h = b.byteOffset + b.stride * h;
            for (var q = 0, x = b.width; q < x; ) {
              r = q++;
              r = h + 4 * r;
              var C = g,
                m = k;
              null == m && (m = !1);
              null == C && (C = 0);
              switch (C) {
                case 0:
                  n =
                    ((f[r] & 255) << 24) |
                    ((f[r + 1] & 255) << 16) |
                    ((f[r + 2] & 255) << 8) |
                    (f[r + 3] & 255);
                  break;
                case 1:
                  n =
                    ((f[r + 1] & 255) << 24) |
                    ((f[r + 2] & 255) << 16) |
                    ((f[r + 3] & 255) << 8) |
                    (f[r] & 255);
                  break;
                case 2:
                  n =
                    ((f[r + 2] & 255) << 24) |
                    ((f[r + 1] & 255) << 16) |
                    ((f[r] & 255) << 8) |
                    (f[r + 3] & 255);
              }
              m &&
                0 != (n & 255) &&
                255 != (n & 255) &&
                ((U.unmult = 255 / (n & 255)),
                (n =
                  ((U.__clamp[Math.round(((n >>> 24) & 255) * U.unmult)] &
                    255) <<
                    24) |
                  ((U.__clamp[Math.round(((n >>> 16) & 255) * U.unmult)] &
                    255) <<
                    16) |
                  ((U.__clamp[Math.round(((n >>> 8) & 255) * U.unmult)] &
                    255) <<
                    8) |
                  (n & 255)));
              n =
                ((u[(n >>> 24) & 255] & 255) << 24) |
                ((p[(n >>> 16) & 255] & 255) << 16) |
                ((d[(n >>> 8) & 255] & 255) << 8) |
                (l[n & 255] & 255);
              C = g;
              m = k;
              null == m && (m = !1);
              null == C && (C = 0);
              m &&
                (0 == (n & 255)
                  ? 0 != n && (n = 0)
                  : 255 != (n & 255) &&
                    ((U.a16 = U.__alpha16[n & 255]),
                    (n =
                      ((((((n >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                      ((((((n >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                      ((((((n >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                      (n & 255))));
              switch (C) {
                case 0:
                  f[r] = (n >>> 24) & 255;
                  f[r + 1] = (n >>> 16) & 255;
                  f[r + 2] = (n >>> 8) & 255;
                  f[r + 3] = n & 255;
                  break;
                case 1:
                  f[r] = n & 255;
                  f[r + 1] = (n >>> 24) & 255;
                  f[r + 2] = (n >>> 16) & 255;
                  f[r + 3] = (n >>> 8) & 255;
                  break;
                case 2:
                  ((f[r] = (n >>> 8) & 255),
                    (f[r + 1] = (n >>> 16) & 255),
                    (f[r + 2] = (n >>> 24) & 255),
                    (f[r + 3] = n & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Wb.copyChannel = function (a, b, d, f, g, k) {
        switch (k._hx_index) {
          case 0:
            var l = 0;
            break;
          case 1:
            l = 1;
            break;
          case 2:
            l = 2;
            break;
          case 3:
            l = 3;
        }
        switch (g._hx_index) {
          case 0:
            var u = 0;
            break;
          case 1:
            u = 1;
            break;
          case 2:
            u = 2;
            break;
          case 3:
            u = 3;
        }
        g = b.buffer.data;
        k = a.buffer.data;
        if (null != g && null != k) {
          d = new le(b, d);
          f = new le(a, new xd(f.x, f.y, d.width, d.height));
          var p = b.buffer.format,
            h = a.buffer.format;
          b = b.buffer.premultiplied;
          for (
            var r = a.buffer.premultiplied,
              n,
              t,
              E = 0,
              q = 0,
              x = 0,
              C = 0,
              m = f.height;
            C < m;

          ) {
            t = C++;
            n = d.byteOffset + d.stride * t;
            t = f.byteOffset + f.stride * t;
            for (var y = 0, B = f.width; y < B; ) {
              y++;
              var z = p,
                P = b;
              null == P && (P = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  E =
                    ((g[n] & 255) << 24) |
                    ((g[n + 1] & 255) << 16) |
                    ((g[n + 2] & 255) << 8) |
                    (g[n + 3] & 255);
                  break;
                case 1:
                  E =
                    ((g[n + 1] & 255) << 24) |
                    ((g[n + 2] & 255) << 16) |
                    ((g[n + 3] & 255) << 8) |
                    (g[n] & 255);
                  break;
                case 2:
                  E =
                    ((g[n + 2] & 255) << 24) |
                    ((g[n + 1] & 255) << 16) |
                    ((g[n] & 255) << 8) |
                    (g[n + 3] & 255);
              }
              P &&
                0 != (E & 255) &&
                255 != (E & 255) &&
                ((U.unmult = 255 / (E & 255)),
                (E =
                  ((U.__clamp[Math.round(((E >>> 24) & 255) * U.unmult)] &
                    255) <<
                    24) |
                  ((U.__clamp[Math.round(((E >>> 16) & 255) * U.unmult)] &
                    255) <<
                    16) |
                  ((U.__clamp[Math.round(((E >>> 8) & 255) * U.unmult)] &
                    255) <<
                    8) |
                  (E & 255)));
              z = h;
              P = r;
              null == P && (P = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  q =
                    ((k[t] & 255) << 24) |
                    ((k[t + 1] & 255) << 16) |
                    ((k[t + 2] & 255) << 8) |
                    (k[t + 3] & 255);
                  break;
                case 1:
                  q =
                    ((k[t + 1] & 255) << 24) |
                    ((k[t + 2] & 255) << 16) |
                    ((k[t + 3] & 255) << 8) |
                    (k[t] & 255);
                  break;
                case 2:
                  q =
                    ((k[t + 2] & 255) << 24) |
                    ((k[t + 1] & 255) << 16) |
                    ((k[t] & 255) << 8) |
                    (k[t + 3] & 255);
              }
              P &&
                0 != (q & 255) &&
                255 != (q & 255) &&
                ((U.unmult = 255 / (q & 255)),
                (q =
                  ((U.__clamp[Math.round(((q >>> 24) & 255) * U.unmult)] &
                    255) <<
                    24) |
                  ((U.__clamp[Math.round(((q >>> 16) & 255) * U.unmult)] &
                    255) <<
                    16) |
                  ((U.__clamp[Math.round(((q >>> 8) & 255) * U.unmult)] &
                    255) <<
                    8) |
                  (q & 255)));
              switch (u) {
                case 0:
                  x = (E >>> 24) & 255;
                  break;
                case 1:
                  x = (E >>> 16) & 255;
                  break;
                case 2:
                  x = (E >>> 8) & 255;
                  break;
                case 3:
                  x = E & 255;
              }
              switch (l) {
                case 0:
                  q =
                    ((x & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  break;
                case 1:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    ((x & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  break;
                case 2:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    ((x & 255) << 8) |
                    (q & 255);
                  break;
                case 3:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (x & 255);
              }
              z = h;
              P = r;
              null == P && (P = !1);
              null == z && (z = 0);
              P &&
                (0 == (q & 255)
                  ? 0 != q && (q = 0)
                  : 255 != (q & 255) &&
                    ((U.a16 = U.__alpha16[q & 255]),
                    (q =
                      ((((((q >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                      ((((((q >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                      ((((((q >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                      (q & 255))));
              switch (z) {
                case 0:
                  k[t] = (q >>> 24) & 255;
                  k[t + 1] = (q >>> 16) & 255;
                  k[t + 2] = (q >>> 8) & 255;
                  k[t + 3] = q & 255;
                  break;
                case 1:
                  k[t] = q & 255;
                  k[t + 1] = (q >>> 24) & 255;
                  k[t + 2] = (q >>> 16) & 255;
                  k[t + 3] = (q >>> 8) & 255;
                  break;
                case 2:
                  ((k[t] = (q >>> 8) & 255),
                    (k[t + 1] = (q >>> 16) & 255),
                    (k[t + 2] = (q >>> 24) & 255),
                    (k[t + 3] = q & 255));
              }
              n += 4;
              t += 4;
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Wb.copyPixels = function (a, b, d, f, g, k, l) {
        null == l && (l = !1);
        if (
          a.width == b.width &&
          a.height == b.height &&
          d.width == b.width &&
          d.height == b.height &&
          0 == d.x &&
          0 == d.y &&
          0 == f.x &&
          0 == f.y &&
          null == g &&
          null == k &&
          0 == l &&
          a.get_format() == b.get_format()
        )
          a.buffer.data.set(b.buffer.data);
        else {
          var u = b.buffer.data,
            p = a.buffer.data;
          if (null == u || null == p) return;
          d = new le(b, d);
          var h = new xd(f.x, f.y, d.width, d.height);
          h = new le(a, h);
          var r = b.buffer.format,
            n = a.buffer.format,
            t = 0,
            q = 0,
            E = b.buffer.premultiplied,
            x = a.buffer.premultiplied,
            C = (b.buffer.bitsPerPixel / 8) | 0,
            m = (a.buffer.bitsPerPixel / 8) | 0,
            y = null != g && g.get_transparent(),
            B =
              l ||
              (y && !a.get_transparent()) ||
              (!l && !a.get_transparent() && b.get_transparent());
          if (y)
            if (
              ((m = g.buffer.data),
              (b = g.buffer.format),
              (l = 0),
              (g = new le(
                g,
                new xd(
                  d.x + (null == k ? 0 : k.x),
                  d.y + (null == k ? 0 : k.y),
                  d.width,
                  d.height,
                ),
              )),
              h.clip(f.x | 0, f.y | 0, g.width, g.height),
              B)
            )
              for (B = 0, C = h.height; B < C; )
                for (
                  y = B++,
                    f = d.byteOffset + d.stride * y,
                    k = h.byteOffset + h.stride * y,
                    y = g.byteOffset + g.stride * y,
                    K = 0,
                    F = h.width;
                  K < F;

                ) {
                  K++;
                  var z = r;
                  var P = E;
                  null == P && (P = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      t =
                        ((u[f] & 255) << 24) |
                        ((u[f + 1] & 255) << 16) |
                        ((u[f + 2] & 255) << 8) |
                        (u[f + 3] & 255);
                      break;
                    case 1:
                      t =
                        ((u[f + 1] & 255) << 24) |
                        ((u[f + 2] & 255) << 16) |
                        ((u[f + 3] & 255) << 8) |
                        (u[f] & 255);
                      break;
                    case 2:
                      t =
                        ((u[f + 2] & 255) << 24) |
                        ((u[f + 1] & 255) << 16) |
                        ((u[f] & 255) << 8) |
                        (u[f + 3] & 255);
                  }
                  P &&
                    0 != (t & 255) &&
                    255 != (t & 255) &&
                    ((U.unmult = 255 / (t & 255)),
                    (t =
                      ((U.__clamp[Math.round(((t >>> 24) & 255) * U.unmult)] &
                        255) <<
                        24) |
                      ((U.__clamp[Math.round(((t >>> 16) & 255) * U.unmult)] &
                        255) <<
                        16) |
                      ((U.__clamp[Math.round(((t >>> 8) & 255) * U.unmult)] &
                        255) <<
                        8) |
                      (t & 255)));
                  z = n;
                  P = x;
                  null == P && (P = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      q =
                        ((p[k] & 255) << 24) |
                        ((p[k + 1] & 255) << 16) |
                        ((p[k + 2] & 255) << 8) |
                        (p[k + 3] & 255);
                      break;
                    case 1:
                      q =
                        ((p[k + 1] & 255) << 24) |
                        ((p[k + 2] & 255) << 16) |
                        ((p[k + 3] & 255) << 8) |
                        (p[k] & 255);
                      break;
                    case 2:
                      q =
                        ((p[k + 2] & 255) << 24) |
                        ((p[k + 1] & 255) << 16) |
                        ((p[k] & 255) << 8) |
                        (p[k + 3] & 255);
                  }
                  P &&
                    0 != (q & 255) &&
                    255 != (q & 255) &&
                    ((U.unmult = 255 / (q & 255)),
                    (q =
                      ((U.__clamp[Math.round(((q >>> 24) & 255) * U.unmult)] &
                        255) <<
                        24) |
                      ((U.__clamp[Math.round(((q >>> 16) & 255) * U.unmult)] &
                        255) <<
                        16) |
                      ((U.__clamp[Math.round(((q >>> 8) & 255) * U.unmult)] &
                        255) <<
                        8) |
                      (q & 255)));
                  z = b;
                  P = !1;
                  null == P && (P = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      l =
                        ((m[y] & 255) << 24) |
                        ((m[y + 1] & 255) << 16) |
                        ((m[y + 2] & 255) << 8) |
                        (m[y + 3] & 255);
                      break;
                    case 1:
                      l =
                        ((m[y + 1] & 255) << 24) |
                        ((m[y + 2] & 255) << 16) |
                        ((m[y + 3] & 255) << 8) |
                        (m[y] & 255);
                      break;
                    case 2:
                      l =
                        ((m[y + 2] & 255) << 24) |
                        ((m[y + 1] & 255) << 16) |
                        ((m[y] & 255) << 8) |
                        (m[y + 3] & 255);
                  }
                  P &&
                    0 != (l & 255) &&
                    255 != (l & 255) &&
                    ((U.unmult = 255 / (l & 255)),
                    (l =
                      ((U.__clamp[Math.round(((l >>> 24) & 255) * U.unmult)] &
                        255) <<
                        24) |
                      ((U.__clamp[Math.round(((l >>> 16) & 255) * U.unmult)] &
                        255) <<
                        16) |
                      ((U.__clamp[Math.round(((l >>> 8) & 255) * U.unmult)] &
                        255) <<
                        8) |
                      (l & 255)));
                  P = ((l & 255) / 255) * ((t & 255) / 255);
                  if (0 < P) {
                    var v = (q & 255) / 255;
                    var w = 1 - P;
                    z = P + v * w;
                    J =
                      U.__clamp[
                        Math.round(
                          (((t >>> 24) & 255) * P +
                            ((q >>> 24) & 255) * v * w) /
                            z,
                        )
                      ];
                    q =
                      ((J & 255) << 24) |
                      (((q >>> 16) & 255) << 16) |
                      (((q >>> 8) & 255) << 8) |
                      (q & 255);
                    J =
                      U.__clamp[
                        Math.round(
                          (((t >>> 16) & 255) * P +
                            ((q >>> 16) & 255) * v * w) /
                            z,
                        )
                      ];
                    q =
                      (((q >>> 24) & 255) << 24) |
                      ((J & 255) << 16) |
                      (((q >>> 8) & 255) << 8) |
                      (q & 255);
                    P =
                      U.__clamp[
                        Math.round(
                          (((t >>> 8) & 255) * P + ((q >>> 8) & 255) * v * w) /
                            z,
                        )
                      ];
                    q =
                      (((q >>> 24) & 255) << 24) |
                      (((q >>> 16) & 255) << 16) |
                      ((P & 255) << 8) |
                      (q & 255);
                    z = U.__clamp[Math.round(255 * z)];
                    q =
                      (((q >>> 24) & 255) << 24) |
                      (((q >>> 16) & 255) << 16) |
                      (((q >>> 8) & 255) << 8) |
                      (z & 255);
                    z = n;
                    P = x;
                    null == P && (P = !1);
                    null == z && (z = 0);
                    P &&
                      (0 == (q & 255)
                        ? 0 != q && (q = 0)
                        : 255 != (q & 255) &&
                          ((U.a16 = U.__alpha16[q & 255]),
                          (q =
                            ((((((q >>> 24) & 255) * U.a16) >> 16) & 255) <<
                              24) |
                            ((((((q >>> 16) & 255) * U.a16) >> 16) & 255) <<
                              16) |
                            ((((((q >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                            (q & 255))));
                    switch (z) {
                      case 0:
                        p[k] = (q >>> 24) & 255;
                        p[k + 1] = (q >>> 16) & 255;
                        p[k + 2] = (q >>> 8) & 255;
                        p[k + 3] = q & 255;
                        break;
                      case 1:
                        p[k] = q & 255;
                        p[k + 1] = (q >>> 24) & 255;
                        p[k + 2] = (q >>> 16) & 255;
                        p[k + 3] = (q >>> 8) & 255;
                        break;
                      case 2:
                        ((p[k] = (q >>> 8) & 255),
                          (p[k + 1] = (q >>> 16) & 255),
                          (p[k + 2] = (q >>> 24) & 255),
                          (p[k + 3] = q & 255));
                    }
                  }
                  f += 4;
                  k += 4;
                  y += 4;
                }
            else
              for (B = 0, C = h.height; B < C; )
                for (
                  y = B++,
                    f = d.byteOffset + d.stride * y,
                    k = h.byteOffset + h.stride * y,
                    y = g.byteOffset + g.stride * y,
                    K = 0,
                    F = h.width;
                  K < F;

                ) {
                  K++;
                  z = r;
                  P = E;
                  null == P && (P = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      t =
                        ((u[f] & 255) << 24) |
                        ((u[f + 1] & 255) << 16) |
                        ((u[f + 2] & 255) << 8) |
                        (u[f + 3] & 255);
                      break;
                    case 1:
                      t =
                        ((u[f + 1] & 255) << 24) |
                        ((u[f + 2] & 255) << 16) |
                        ((u[f + 3] & 255) << 8) |
                        (u[f] & 255);
                      break;
                    case 2:
                      t =
                        ((u[f + 2] & 255) << 24) |
                        ((u[f + 1] & 255) << 16) |
                        ((u[f] & 255) << 8) |
                        (u[f + 3] & 255);
                  }
                  P &&
                    0 != (t & 255) &&
                    255 != (t & 255) &&
                    ((U.unmult = 255 / (t & 255)),
                    (t =
                      ((U.__clamp[Math.round(((t >>> 24) & 255) * U.unmult)] &
                        255) <<
                        24) |
                      ((U.__clamp[Math.round(((t >>> 16) & 255) * U.unmult)] &
                        255) <<
                        16) |
                      ((U.__clamp[Math.round(((t >>> 8) & 255) * U.unmult)] &
                        255) <<
                        8) |
                      (t & 255)));
                  z = b;
                  P = !1;
                  null == P && (P = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      l =
                        ((m[y] & 255) << 24) |
                        ((m[y + 1] & 255) << 16) |
                        ((m[y + 2] & 255) << 8) |
                        (m[y + 3] & 255);
                      break;
                    case 1:
                      l =
                        ((m[y + 1] & 255) << 24) |
                        ((m[y + 2] & 255) << 16) |
                        ((m[y + 3] & 255) << 8) |
                        (m[y] & 255);
                      break;
                    case 2:
                      l =
                        ((m[y + 2] & 255) << 24) |
                        ((m[y + 1] & 255) << 16) |
                        ((m[y] & 255) << 8) |
                        (m[y + 3] & 255);
                  }
                  P &&
                    0 != (l & 255) &&
                    255 != (l & 255) &&
                    ((U.unmult = 255 / (l & 255)),
                    (l =
                      ((U.__clamp[Math.round(((l >>> 24) & 255) * U.unmult)] &
                        255) <<
                        24) |
                      ((U.__clamp[Math.round(((l >>> 16) & 255) * U.unmult)] &
                        255) <<
                        16) |
                      ((U.__clamp[Math.round(((l >>> 8) & 255) * U.unmult)] &
                        255) <<
                        8) |
                      (l & 255)));
                  J = Math.round(((l & 255) / 255) * (t & 255));
                  t =
                    (((t >>> 24) & 255) << 24) |
                    (((t >>> 16) & 255) << 16) |
                    (((t >>> 8) & 255) << 8) |
                    (J & 255);
                  z = n;
                  P = x;
                  null == P && (P = !1);
                  null == z && (z = 0);
                  P &&
                    (0 == (t & 255)
                      ? 0 != t && (t = 0)
                      : 255 != (t & 255) &&
                        ((U.a16 = U.__alpha16[t & 255]),
                        (t =
                          ((((((t >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                          ((((((t >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                          ((((((t >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                          (t & 255))));
                  switch (z) {
                    case 0:
                      p[k] = (t >>> 24) & 255;
                      p[k + 1] = (t >>> 16) & 255;
                      p[k + 2] = (t >>> 8) & 255;
                      p[k + 3] = t & 255;
                      break;
                    case 1:
                      p[k] = t & 255;
                      p[k + 1] = (t >>> 24) & 255;
                      p[k + 2] = (t >>> 16) & 255;
                      p[k + 3] = (t >>> 8) & 255;
                      break;
                    case 2:
                      ((p[k] = (t >>> 8) & 255),
                        (p[k + 1] = (t >>> 16) & 255),
                        (p[k + 2] = (t >>> 24) & 255),
                        (p[k + 3] = t & 255));
                  }
                  f += 4;
                  k += 4;
                  y += 4;
                }
          else if (B)
            for (B = 0, C = h.height; B < C; ) {
              y = B++;
              f = d.byteOffset + d.stride * y;
              k = h.byteOffset + h.stride * y;
              for (var K = 0, F = h.width; K < F; ) {
                K++;
                z = r;
                P = E;
                null == P && (P = !1);
                null == z && (z = 0);
                switch (z) {
                  case 0:
                    t =
                      ((u[f] & 255) << 24) |
                      ((u[f + 1] & 255) << 16) |
                      ((u[f + 2] & 255) << 8) |
                      (u[f + 3] & 255);
                    break;
                  case 1:
                    t =
                      ((u[f + 1] & 255) << 24) |
                      ((u[f + 2] & 255) << 16) |
                      ((u[f + 3] & 255) << 8) |
                      (u[f] & 255);
                    break;
                  case 2:
                    t =
                      ((u[f + 2] & 255) << 24) |
                      ((u[f + 1] & 255) << 16) |
                      ((u[f] & 255) << 8) |
                      (u[f + 3] & 255);
                }
                P &&
                  0 != (t & 255) &&
                  255 != (t & 255) &&
                  ((U.unmult = 255 / (t & 255)),
                  (t =
                    ((U.__clamp[Math.round(((t >>> 24) & 255) * U.unmult)] &
                      255) <<
                      24) |
                    ((U.__clamp[Math.round(((t >>> 16) & 255) * U.unmult)] &
                      255) <<
                      16) |
                    ((U.__clamp[Math.round(((t >>> 8) & 255) * U.unmult)] &
                      255) <<
                      8) |
                    (t & 255)));
                z = n;
                P = x;
                null == P && (P = !1);
                null == z && (z = 0);
                switch (z) {
                  case 0:
                    q =
                      ((p[k] & 255) << 24) |
                      ((p[k + 1] & 255) << 16) |
                      ((p[k + 2] & 255) << 8) |
                      (p[k + 3] & 255);
                    break;
                  case 1:
                    q =
                      ((p[k + 1] & 255) << 24) |
                      ((p[k + 2] & 255) << 16) |
                      ((p[k + 3] & 255) << 8) |
                      (p[k] & 255);
                    break;
                  case 2:
                    q =
                      ((p[k + 2] & 255) << 24) |
                      ((p[k + 1] & 255) << 16) |
                      ((p[k] & 255) << 8) |
                      (p[k + 3] & 255);
                }
                P &&
                  0 != (q & 255) &&
                  255 != (q & 255) &&
                  ((U.unmult = 255 / (q & 255)),
                  (q =
                    ((U.__clamp[Math.round(((q >>> 24) & 255) * U.unmult)] &
                      255) <<
                      24) |
                    ((U.__clamp[Math.round(((q >>> 16) & 255) * U.unmult)] &
                      255) <<
                      16) |
                    ((U.__clamp[Math.round(((q >>> 8) & 255) * U.unmult)] &
                      255) <<
                      8) |
                    (q & 255)));
                P = (t & 255) / 255;
                v = (q & 255) / 255;
                w = 1 - P;
                z = P + v * w;
                if (0 == z) q = 0;
                else {
                  var J =
                    U.__clamp[
                      Math.round(
                        (((t >>> 24) & 255) * P + ((q >>> 24) & 255) * v * w) /
                          z,
                      )
                    ];
                  q =
                    ((J & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  J =
                    U.__clamp[
                      Math.round(
                        (((t >>> 16) & 255) * P + ((q >>> 16) & 255) * v * w) /
                          z,
                      )
                    ];
                  q =
                    (((q >>> 24) & 255) << 24) |
                    ((J & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  P =
                    U.__clamp[
                      Math.round(
                        (((t >>> 8) & 255) * P + ((q >>> 8) & 255) * v * w) / z,
                      )
                    ];
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    ((P & 255) << 8) |
                    (q & 255);
                  z = U.__clamp[Math.round(255 * z)];
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (z & 255);
                }
                z = n;
                P = x;
                null == P && (P = !1);
                null == z && (z = 0);
                P &&
                  (0 == (q & 255)
                    ? 0 != q && (q = 0)
                    : 255 != (q & 255) &&
                      ((U.a16 = U.__alpha16[q & 255]),
                      (q =
                        ((((((q >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                        ((((((q >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                        ((((((q >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                        (q & 255))));
                switch (z) {
                  case 0:
                    p[k] = (q >>> 24) & 255;
                    p[k + 1] = (q >>> 16) & 255;
                    p[k + 2] = (q >>> 8) & 255;
                    p[k + 3] = q & 255;
                    break;
                  case 1:
                    p[k] = q & 255;
                    p[k + 1] = (q >>> 24) & 255;
                    p[k + 2] = (q >>> 16) & 255;
                    p[k + 3] = (q >>> 8) & 255;
                    break;
                  case 2:
                    ((p[k] = (q >>> 8) & 255),
                      (p[k + 1] = (q >>> 16) & 255),
                      (p[k + 2] = (q >>> 24) & 255),
                      (p[k + 3] = q & 255));
                }
                f += 4;
                k += 4;
              }
            }
          else if (r == n && E == x && C == m)
            for (B = 0, C = h.height; B < C; )
              ((y = B++),
                (f = d.byteOffset + d.stride * y),
                (k = h.byteOffset + h.stride * y),
                p.set(u.subarray(f, f + h.width * m), k));
          else
            for (B = 0, C = h.height; B < C; )
              for (
                y = B++,
                  f = d.byteOffset + d.stride * y,
                  k = h.byteOffset + h.stride * y,
                  K = 0,
                  F = h.width;
                K < F;

              ) {
                K++;
                z = r;
                P = E;
                null == P && (P = !1);
                null == z && (z = 0);
                switch (z) {
                  case 0:
                    t =
                      ((u[f] & 255) << 24) |
                      ((u[f + 1] & 255) << 16) |
                      ((u[f + 2] & 255) << 8) |
                      (u[f + 3] & 255);
                    break;
                  case 1:
                    t =
                      ((u[f + 1] & 255) << 24) |
                      ((u[f + 2] & 255) << 16) |
                      ((u[f + 3] & 255) << 8) |
                      (u[f] & 255);
                    break;
                  case 2:
                    t =
                      ((u[f + 2] & 255) << 24) |
                      ((u[f + 1] & 255) << 16) |
                      ((u[f] & 255) << 8) |
                      (u[f + 3] & 255);
                }
                P &&
                  0 != (t & 255) &&
                  255 != (t & 255) &&
                  ((U.unmult = 255 / (t & 255)),
                  (t =
                    ((U.__clamp[Math.round(((t >>> 24) & 255) * U.unmult)] &
                      255) <<
                      24) |
                    ((U.__clamp[Math.round(((t >>> 16) & 255) * U.unmult)] &
                      255) <<
                      16) |
                    ((U.__clamp[Math.round(((t >>> 8) & 255) * U.unmult)] &
                      255) <<
                      8) |
                    (t & 255)));
                z = n;
                P = x;
                null == P && (P = !1);
                null == z && (z = 0);
                P &&
                  (0 == (t & 255)
                    ? 0 != t && (t = 0)
                    : 255 != (t & 255) &&
                      ((U.a16 = U.__alpha16[t & 255]),
                      (t =
                        ((((((t >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                        ((((((t >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                        ((((((t >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                        (t & 255))));
                switch (z) {
                  case 0:
                    p[k] = (t >>> 24) & 255;
                    p[k + 1] = (t >>> 16) & 255;
                    p[k + 2] = (t >>> 8) & 255;
                    p[k + 3] = t & 255;
                    break;
                  case 1:
                    p[k] = t & 255;
                    p[k + 1] = (t >>> 24) & 255;
                    p[k + 2] = (t >>> 16) & 255;
                    p[k + 3] = (t >>> 8) & 255;
                    break;
                  case 2:
                    ((p[k] = (t >>> 8) & 255),
                      (p[k + 1] = (t >>> 16) & 255),
                      (p[k + 2] = (t >>> 24) & 255),
                      (p[k + 3] = t & 255));
                }
                f += 4;
                k += 4;
              }
        }
        a.dirty = !0;
        a.version++;
      };
      Wb.fillRect = function (a, b, d, f) {
        switch (f) {
          case 1:
            d =
              (((d >>> 16) & 255) << 24) |
              (((d >>> 8) & 255) << 16) |
              ((d & 255) << 8) |
              ((d >>> 24) & 255);
            break;
          case 2:
            d =
              (((d >>> 8) & 255) << 24) |
              (((d >>> 16) & 255) << 16) |
              (((d >>> 24) & 255) << 8) |
              (d & 255);
        }
        a.get_transparent() ||
          (d =
            (((d >>> 24) & 255) << 24) |
            (((d >>> 16) & 255) << 16) |
            (((d >>> 8) & 255) << 8) |
            255);
        var g = a.buffer.data;
        if (null != g) {
          f = a.buffer.format;
          var k = a.buffer.premultiplied;
          k &&
            (0 == (d & 255)
              ? 0 != d && (d = 0)
              : 255 != (d & 255) &&
                ((U.a16 = U.__alpha16[d & 255]),
                (d =
                  ((((((d >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                  ((((((d >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                  ((((((d >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                  (d & 255))));
          b = new le(a, b);
          for (var l, u = 0, p = b.height; u < p; ) {
            k = u++;
            l = b.byteOffset + b.stride * k;
            for (var h = 0, r = b.width; h < r; ) {
              k = h++;
              var n = l + 4 * k,
                t = f;
              k = !1;
              null == k && (k = !1);
              null == t && (t = 0);
              k &&
                (0 == (d & 255)
                  ? 0 != d && (d = 0)
                  : 255 != (d & 255) &&
                    ((U.a16 = U.__alpha16[d & 255]),
                    (d =
                      ((((((d >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                      ((((((d >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                      ((((((d >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                      (d & 255))));
              switch (t) {
                case 0:
                  g[n] = (d >>> 24) & 255;
                  g[n + 1] = (d >>> 16) & 255;
                  g[n + 2] = (d >>> 8) & 255;
                  g[n + 3] = d & 255;
                  break;
                case 1:
                  g[n] = d & 255;
                  g[n + 1] = (d >>> 24) & 255;
                  g[n + 2] = (d >>> 16) & 255;
                  g[n + 3] = (d >>> 8) & 255;
                  break;
                case 2:
                  ((g[n] = (d >>> 8) & 255),
                    (g[n + 1] = (d >>> 16) & 255),
                    (g[n + 2] = (d >>> 24) & 255),
                    (g[n + 3] = d & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Wb.gaussianBlur = function (a, b, d, f, g, k, l, u, p) {
        null == l && (l = 1);
        null == k && (k = 4);
        null == g && (g = 4);
        (u = a.get_premultiplied()) && a.set_premultiplied(!1);
        qd.blur(a, b, d, f, g, k, l);
        a.dirty = !0;
        a.version++;
        u && a.set_premultiplied(!0);
        return a;
      };
      Wb.getPixel = function (a, b, d, f) {
        var g = 0,
          k = a.buffer.data;
        b = 4 * (d + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        d = a.buffer.format;
        a = a.buffer.premultiplied;
        null == a && (a = !1);
        null == d && (d = 0);
        switch (d) {
          case 0:
            g =
              ((k[b] & 255) << 24) |
              ((k[b + 1] & 255) << 16) |
              ((k[b + 2] & 255) << 8) |
              (k[b + 3] & 255);
            break;
          case 1:
            g =
              ((k[b + 1] & 255) << 24) |
              ((k[b + 2] & 255) << 16) |
              ((k[b + 3] & 255) << 8) |
              (k[b] & 255);
            break;
          case 2:
            g =
              ((k[b + 2] & 255) << 24) |
              ((k[b + 1] & 255) << 16) |
              ((k[b] & 255) << 8) |
              (k[b + 3] & 255);
        }
        a &&
          0 != (g & 255) &&
          255 != (g & 255) &&
          ((U.unmult = 255 / (g & 255)),
          (g =
            ((U.__clamp[Math.round(((g >>> 24) & 255) * U.unmult)] & 255) <<
              24) |
            ((U.__clamp[Math.round(((g >>> 16) & 255) * U.unmult)] & 255) <<
              16) |
            ((U.__clamp[Math.round(((g >>> 8) & 255) * U.unmult)] & 255) << 8) |
            (g & 255)));
        g =
          (((g >>> 24) & 255) << 24) |
          (((g >>> 16) & 255) << 16) |
          (((g >>> 8) & 255) << 8) |
          0;
        switch (f) {
          case 1:
            return (
              ((g & 255) << 24) |
              (((g >>> 24) & 255) << 16) |
              (((g >>> 16) & 255) << 8) |
              ((g >>> 8) & 255)
            );
          case 2:
            return (
              (((g >>> 8) & 255) << 24) |
              (((g >>> 16) & 255) << 16) |
              (((g >>> 24) & 255) << 8) |
              (g & 255)
            );
          default:
            return g;
        }
      };
      Wb.getPixels = function (a, b, d) {
        if (null == a.buffer.data) return null;
        var f = new yb(new ArrayBuffer(4 * ((b.width * b.height) | 0))),
          g = a.buffer.data,
          k = a.buffer.format,
          l = a.buffer.premultiplied;
        a = new le(a, b);
        for (var u, p, h = (b = p = 0), r = a.height; h < r; ) {
          u = h++;
          u = a.byteOffset + a.stride * u;
          for (var n = 0, t = a.width; n < t; ) {
            n++;
            var q = k,
              E = l;
            null == E && (E = !1);
            null == q && (q = 0);
            switch (q) {
              case 0:
                p =
                  ((g[u] & 255) << 24) |
                  ((g[u + 1] & 255) << 16) |
                  ((g[u + 2] & 255) << 8) |
                  (g[u + 3] & 255);
                break;
              case 1:
                p =
                  ((g[u + 1] & 255) << 24) |
                  ((g[u + 2] & 255) << 16) |
                  ((g[u + 3] & 255) << 8) |
                  (g[u] & 255);
                break;
              case 2:
                p =
                  ((g[u + 2] & 255) << 24) |
                  ((g[u + 1] & 255) << 16) |
                  ((g[u] & 255) << 8) |
                  (g[u + 3] & 255);
            }
            E &&
              0 != (p & 255) &&
              255 != (p & 255) &&
              ((U.unmult = 255 / (p & 255)),
              (p =
                ((U.__clamp[Math.round(((p >>> 24) & 255) * U.unmult)] & 255) <<
                  24) |
                ((U.__clamp[Math.round(((p >>> 16) & 255) * U.unmult)] & 255) <<
                  16) |
                ((U.__clamp[Math.round(((p >>> 8) & 255) * U.unmult)] & 255) <<
                  8) |
                (p & 255)));
            switch (d) {
              case 1:
                p =
                  ((p & 255) << 24) |
                  (((p >>> 24) & 255) << 16) |
                  (((p >>> 16) & 255) << 8) |
                  ((p >>> 8) & 255);
                break;
              case 2:
                p =
                  (((p >>> 8) & 255) << 24) |
                  (((p >>> 16) & 255) << 16) |
                  (((p >>> 24) & 255) << 8) |
                  (p & 255);
            }
            f.b[b++] = (p >>> 24) & 255;
            f.b[b++] = (p >>> 16) & 255;
            f.b[b++] = (p >>> 8) & 255;
            f.b[b++] = p & 255;
            u += 4;
          }
        }
        return f;
      };
      Wb.multiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b && a.buffer.transparent) {
          for (
            var d = a.buffer.format, f = 0, g = 0, k = (b.length / 4) | 0;
            g < k;

          ) {
            var l = g++,
              u = 4 * l,
              p = d,
              h = !1;
            null == h && (h = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                f =
                  ((b[u] & 255) << 24) |
                  ((b[u + 1] & 255) << 16) |
                  ((b[u + 2] & 255) << 8) |
                  (b[u + 3] & 255);
                break;
              case 1:
                f =
                  ((b[u + 1] & 255) << 24) |
                  ((b[u + 2] & 255) << 16) |
                  ((b[u + 3] & 255) << 8) |
                  (b[u] & 255);
                break;
              case 2:
                f =
                  ((b[u + 2] & 255) << 24) |
                  ((b[u + 1] & 255) << 16) |
                  ((b[u] & 255) << 8) |
                  (b[u + 3] & 255);
            }
            h &&
              0 != (f & 255) &&
              255 != (f & 255) &&
              ((U.unmult = 255 / (f & 255)),
              (f =
                ((U.__clamp[Math.round(((f >>> 24) & 255) * U.unmult)] & 255) <<
                  24) |
                ((U.__clamp[Math.round(((f >>> 16) & 255) * U.unmult)] & 255) <<
                  16) |
                ((U.__clamp[Math.round(((f >>> 8) & 255) * U.unmult)] & 255) <<
                  8) |
                (f & 255)));
            l *= 4;
            u = d;
            p = !0;
            null == p && (p = !1);
            null == u && (u = 0);
            p &&
              (0 == (f & 255)
                ? 0 != f && (f = 0)
                : 255 != (f & 255) &&
                  ((U.a16 = U.__alpha16[f & 255]),
                  (f =
                    ((((((f >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                    ((((((f >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                    ((((((f >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                    (f & 255))));
            switch (u) {
              case 0:
                b[l] = (f >>> 24) & 255;
                b[l + 1] = (f >>> 16) & 255;
                b[l + 2] = (f >>> 8) & 255;
                b[l + 3] = f & 255;
                break;
              case 1:
                b[l] = f & 255;
                b[l + 1] = (f >>> 24) & 255;
                b[l + 2] = (f >>> 16) & 255;
                b[l + 3] = (f >>> 8) & 255;
                break;
              case 2:
                ((b[l] = (f >>> 8) & 255),
                  (b[l + 1] = (f >>> 16) & 255),
                  (b[l + 2] = (f >>> 24) & 255),
                  (b[l + 3] = f & 255));
            }
          }
          a.buffer.premultiplied = !0;
          a.dirty = !0;
          a.version++;
        }
      };
      Wb.setFormat = function (a, b) {
        var d = a.buffer.data;
        if (null != d) {
          var f = (d.length / 4) | 0;
          switch (a.get_format()) {
            case 0:
              var g = 0;
              var k = 1;
              var l = 2;
              var u = 3;
              break;
            case 1:
              g = 1;
              k = 2;
              l = 3;
              u = 0;
              break;
            case 2:
              ((g = 2), (k = 1), (l = 0), (u = 3));
          }
          switch (b) {
            case 0:
              var p = 0;
              var h = 1;
              var r = 2;
              var n = 3;
              break;
            case 1:
              p = 1;
              h = 2;
              r = 3;
              n = 0;
              break;
            case 2:
              ((p = 2), (h = 1), (r = 0), (n = 3));
          }
          for (var t = 0; t < f; ) {
            var q = 4 * t++;
            var E = d[q + g];
            var x = d[q + k];
            var C = d[q + l];
            var m = d[q + u];
            d[q + p] = E;
            d[q + h] = x;
            d[q + r] = C;
            d[q + n] = m;
          }
          a.buffer.format = b;
          a.dirty = !0;
          a.version++;
        }
      };
      Wb.setPixel = function (a, b, d, f, g) {
        switch (g) {
          case 1:
            f =
              (((f >>> 16) & 255) << 24) |
              (((f >>> 8) & 255) << 16) |
              ((f & 255) << 8) |
              ((f >>> 24) & 255);
            break;
          case 2:
            f =
              (((f >>> 8) & 255) << 24) |
              (((f >>> 16) & 255) << 16) |
              (((f >>> 24) & 255) << 8) |
              (f & 255);
        }
        var k = 0,
          l = a.buffer.data,
          u = 4 * (d + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        g = a.buffer.format;
        var p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == g && (g = 0);
        switch (g) {
          case 0:
            k =
              ((l[u] & 255) << 24) |
              ((l[u + 1] & 255) << 16) |
              ((l[u + 2] & 255) << 8) |
              (l[u + 3] & 255);
            break;
          case 1:
            k =
              ((l[u + 1] & 255) << 24) |
              ((l[u + 2] & 255) << 16) |
              ((l[u + 3] & 255) << 8) |
              (l[u] & 255);
            break;
          case 2:
            k =
              ((l[u + 2] & 255) << 24) |
              ((l[u + 1] & 255) << 16) |
              ((l[u] & 255) << 8) |
              (l[u + 3] & 255);
        }
        p &&
          0 != (k & 255) &&
          255 != (k & 255) &&
          ((U.unmult = 255 / (k & 255)),
          (k =
            ((U.__clamp[Math.round(((k >>> 24) & 255) * U.unmult)] & 255) <<
              24) |
            ((U.__clamp[Math.round(((k >>> 16) & 255) * U.unmult)] & 255) <<
              16) |
            ((U.__clamp[Math.round(((k >>> 8) & 255) * U.unmult)] & 255) << 8) |
            (k & 255)));
        f =
          (((f >>> 24) & 255) << 24) |
          (((f >>> 16) & 255) << 16) |
          (((f >>> 8) & 255) << 8) |
          (k & 255);
        l = a.buffer.data;
        u = 4 * (d + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        g = a.buffer.format;
        p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == g && (g = 0);
        p &&
          (0 == (f & 255)
            ? 0 != f && (f = 0)
            : 255 != (f & 255) &&
              ((U.a16 = U.__alpha16[f & 255]),
              (f =
                ((((((f >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                ((((((f >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                ((((((f >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                (f & 255))));
        switch (g) {
          case 0:
            l[u] = (f >>> 24) & 255;
            l[u + 1] = (f >>> 16) & 255;
            l[u + 2] = (f >>> 8) & 255;
            l[u + 3] = f & 255;
            break;
          case 1:
            l[u] = f & 255;
            l[u + 1] = (f >>> 24) & 255;
            l[u + 2] = (f >>> 16) & 255;
            l[u + 3] = (f >>> 8) & 255;
            break;
          case 2:
            ((l[u] = (f >>> 8) & 255),
              (l[u + 1] = (f >>> 16) & 255),
              (l[u + 2] = (f >>> 24) & 255),
              (l[u + 3] = f & 255));
        }
        a.dirty = !0;
        a.version++;
      };
      Wb.unmultiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b) {
          for (
            var d = a.buffer.format, f = 0, g = 0, k = (b.length / 4) | 0;
            g < k;

          ) {
            var l = g++,
              u = 4 * l,
              p = d,
              h = !0;
            null == h && (h = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                f =
                  ((b[u] & 255) << 24) |
                  ((b[u + 1] & 255) << 16) |
                  ((b[u + 2] & 255) << 8) |
                  (b[u + 3] & 255);
                break;
              case 1:
                f =
                  ((b[u + 1] & 255) << 24) |
                  ((b[u + 2] & 255) << 16) |
                  ((b[u + 3] & 255) << 8) |
                  (b[u] & 255);
                break;
              case 2:
                f =
                  ((b[u + 2] & 255) << 24) |
                  ((b[u + 1] & 255) << 16) |
                  ((b[u] & 255) << 8) |
                  (b[u + 3] & 255);
            }
            h &&
              0 != (f & 255) &&
              255 != (f & 255) &&
              ((U.unmult = 255 / (f & 255)),
              (f =
                ((U.__clamp[Math.round(((f >>> 24) & 255) * U.unmult)] & 255) <<
                  24) |
                ((U.__clamp[Math.round(((f >>> 16) & 255) * U.unmult)] & 255) <<
                  16) |
                ((U.__clamp[Math.round(((f >>> 8) & 255) * U.unmult)] & 255) <<
                  8) |
                (f & 255)));
            l *= 4;
            u = d;
            p = !1;
            null == p && (p = !1);
            null == u && (u = 0);
            p &&
              (0 == (f & 255)
                ? 0 != f && (f = 0)
                : 255 != (f & 255) &&
                  ((U.a16 = U.__alpha16[f & 255]),
                  (f =
                    ((((((f >>> 24) & 255) * U.a16) >> 16) & 255) << 24) |
                    ((((((f >>> 16) & 255) * U.a16) >> 16) & 255) << 16) |
                    ((((((f >>> 8) & 255) * U.a16) >> 16) & 255) << 8) |
                    (f & 255))));
            switch (u) {
              case 0:
                b[l] = (f >>> 24) & 255;
                b[l + 1] = (f >>> 16) & 255;
                b[l + 2] = (f >>> 8) & 255;
                b[l + 3] = f & 255;
                break;
              case 1:
                b[l] = f & 255;
                b[l + 1] = (f >>> 24) & 255;
                b[l + 2] = (f >>> 16) & 255;
                b[l + 3] = (f >>> 8) & 255;
                break;
              case 2:
                ((b[l] = (f >>> 8) & 255),
                  (b[l + 1] = (f >>> 16) & 255),
                  (b[l + 2] = (f >>> 24) & 255),
                  (b[l + 3] = f & 255));
            }
          }
          a.buffer.premultiplied = !1;
          a.dirty = !0;
          a.version++;
        }
      };
      var le = function (a, b) {
        this.image = a;
        null == b
          ? (this.rect = a.get_rect())
          : (0 > b.x && (b.x = 0),
            0 > b.y && (b.y = 0),
            b.x + b.width > a.width && (b.width = a.width - b.x),
            b.y + b.height > a.height && (b.height = a.height - b.y),
            0 > b.width && (b.width = 0),
            0 > b.height && (b.height = 0),
            (this.rect = b));
        this.stride = a.buffer.get_stride();
        this.__update();
      };
      h['lime._internal.graphics._ImageDataUtil.ImageDataView'] = le;
      le.__name__ = 'lime._internal.graphics._ImageDataUtil.ImageDataView';
      le.prototype = {
        clip: function (a, b, d, f) {
          null == this.tempRect && (this.tempRect = new xd());
          this.tempRect.setTo(a, b, d, f);
          this.rect.intersection(this.tempRect, this.rect);
          this.__update();
        },
        __update: function () {
          this.x = Math.ceil(this.rect.x);
          this.y = Math.ceil(this.rect.y);
          this.width = Math.floor(this.rect.width);
          this.height = Math.floor(this.rect.height);
          this.byteOffset =
            this.stride * (this.y + this.image.offsetY) +
            4 * (this.x + this.image.offsetX);
        },
        __class__: le,
      };
      var qd = function () {};
      h['lime._internal.graphics.StackBlur'] = qd;
      qd.__name__ = 'lime._internal.graphics.StackBlur';
      qd.blur = function (a, b, d, f, g, k, l) {
        a.copyPixels(b, d, f);
        qd.__stackBlurCanvasRGBA(a, d.width | 0, d.height | 0, g, k, l);
      };
      qd.__stackBlurCanvasRGBA = function (a, b, d, f, g, k) {
        f = Math.round(f) >> 1;
        g = Math.round(g) >> 1;
        if (
          null != qd.MUL_TABLE &&
          (f >= qd.MUL_TABLE.length && (f = qd.MUL_TABLE.length - 1),
          g >= qd.MUL_TABLE.length && (g = qd.MUL_TABLE.length - 1),
          !(0 > f || 0 > g))
        ) {
          1 > k && (k = 1);
          3 < k && (k = 3);
          a = a.get_data();
          var l,
            u = f + f + 1;
          var p = g + g + 1;
          var h = b - 1,
            r = d - 1,
            n = f + 1,
            t = g + 1,
            q = new lg(),
            E = q;
          var x = 1;
          for (var C = u; x < C; ) (x++, (E = E.n = new lg()));
          E.n = q;
          var m = (u = new lg());
          x = 1;
          for (C = p; x < C; ) (x++, (m = m.n = new lg()));
          m.n = u;
          for (
            var y = qd.MUL_TABLE[f],
              z = qd.SHG_TABLE[f],
              P = qd.MUL_TABLE[g],
              B = qd.SHG_TABLE[g];
            0 < k;

          ) {
            --k;
            var v = (l = 0);
            var K = y,
              w = z;
            var F = d;
            do {
              var J = a[l];
              p = n * J;
              var I = a[l + 1];
              var G = n * I;
              var Oa = a[l + 2];
              var S = n * Oa;
              x = a[l + 3];
              var L = n * x;
              E = q;
              m = n;
              do ((E.r = J), (E.g = I), (E.b = Oa), (E.a = x), (E = E.n));
              while (-1 < --m);
              x = 1;
              for (C = n; x < C; )
                ((m = x++),
                  (m = l + ((h < m ? h : m) << 2)),
                  (p += E.r = a[m]),
                  (G += E.g = a[m + 1]),
                  (S += E.b = a[m + 2]),
                  (L += E.a = a[m + 3]),
                  (E = E.n));
              C = q;
              E = 0;
              for (x = b; E < x; )
                ((m = E++),
                  (a[l++] = (p * K) >>> w),
                  (a[l++] = (G * K) >>> w),
                  (a[l++] = (S * K) >>> w),
                  (a[l++] = (L * K) >>> w),
                  (m = m + f + 1),
                  (m = (v + (m < h ? m : h)) << 2),
                  (p -= C.r - (C.r = a[m])),
                  (G -= C.g - (C.g = a[m + 1])),
                  (S -= C.b - (C.b = a[m + 2])),
                  (L -= C.a - (C.a = a[m + 3])),
                  (C = C.n));
              v += b;
            } while (0 < --F);
            K = P;
            w = B;
            F = 0;
            for (v = b; F < v; ) {
              E = F++;
              l = E << 2;
              J = a[l];
              p = t * J;
              I = a[l + 1];
              G = t * I;
              Oa = a[l + 2];
              S = t * Oa;
              x = a[l + 3];
              L = t * x;
              m = u;
              l = 0;
              for (C = t; l < C; )
                (l++, (m.r = J), (m.g = I), (m.b = Oa), (m.a = x), (m = m.n));
              x = b;
              C = 1;
              for (J = g + 1; C < J; )
                ((I = C++),
                  (l = (x + E) << 2),
                  (p += m.r = a[l]),
                  (G += m.g = a[l + 1]),
                  (S += m.b = a[l + 2]),
                  (L += m.a = a[l + 3]),
                  (m = m.n),
                  I < r && (x += b));
              l = E;
              C = u;
              if (0 < k)
                for (J = 0, I = d; J < I; )
                  ((Oa = J++),
                    (m = l << 2),
                    (x = (L * K) >>> w),
                    (a[m + 3] = x),
                    0 < x
                      ? ((a[m] = (p * K) >>> w),
                        (a[m + 1] = (G * K) >>> w),
                        (a[m + 2] = (S * K) >>> w))
                      : (a[m] = a[m + 1] = a[m + 2] = 0),
                    (m = Oa + t),
                    (m = (E + (m < r ? m : r) * b) << 2),
                    (p -= C.r - (C.r = a[m])),
                    (G -= C.g - (C.g = a[m + 1])),
                    (S -= C.b - (C.b = a[m + 2])),
                    (L -= C.a - (C.a = a[m + 3])),
                    (C = C.n),
                    (l += b));
              else
                for (var rb = 0, D = d; rb < D; ) {
                  var W = rb++;
                  m = l << 2;
                  x = (L * K) >>> w;
                  a[m + 3] = x;
                  0 < x
                    ? ((x = 255 / x),
                      (J = (((p * K) >>> w) * x) | 0),
                      (I = (((G * K) >>> w) * x) | 0),
                      (Oa = (((S * K) >>> w) * x) | 0),
                      (a[m] = 255 < J ? 255 : J),
                      (a[m + 1] = 255 < I ? 255 : I),
                      (a[m + 2] = 255 < Oa ? 255 : Oa))
                    : (a[m] = a[m + 1] = a[m + 2] = 0);
                  m = W + t;
                  m = (E + (m < r ? m : r) * b) << 2;
                  p -= C.r - (C.r = a[m]);
                  G -= C.g - (C.g = a[m + 1]);
                  S -= C.b - (C.b = a[m + 2]);
                  L -= C.a - (C.a = a[m + 3]);
                  C = C.n;
                  l += b;
                }
            }
          }
        }
      };
      var lg = function () {
        this.a = this.b = this.g = this.r = 0;
        this.n = null;
      };
      h['lime._internal.graphics.BlurStack'] = lg;
      lg.__name__ = 'lime._internal.graphics.BlurStack';
      lg.prototype = { __class__: lg };
      var kc = function (a, b) {
        if (null != a)
          try {
            ((this.value = a()), (this.isComplete = !0));
          } catch (d) {
            ((Na.lastError = d),
              (this.error = Z.caught(d).unwrap()),
              (this.isError = !0));
          }
      };
      h['lime.app.Future'] = kc;
      kc.__name__ = 'lime.app.Future';
      kc.withValue = function (a) {
        var b = new kc();
        b.isComplete = !0;
        b.value = a;
        return b;
      };
      kc.prototype = {
        onComplete: function (a) {
          null != a &&
            (this.isComplete
              ? a(this.value)
              : this.isError ||
                (null == this.__completeListeners &&
                  (this.__completeListeners = []),
                this.__completeListeners.push(a)));
          return this;
        },
        onError: function (a) {
          null != a &&
            (this.isError
              ? a(this.error)
              : this.isComplete ||
                (null == this.__errorListeners && (this.__errorListeners = []),
                this.__errorListeners.push(a)));
          return this;
        },
        onProgress: function (a) {
          null != a &&
            (null == this.__progressListeners &&
              (this.__progressListeners = []),
            this.__progressListeners.push(a));
          return this;
        },
        then: function (a) {
          if (this.isComplete) return a(this.value);
          if (this.isError) {
            var b = new kc();
            b.isError = !0;
            b.error = this.error;
            return b;
          }
          var d = new sd();
          this.onError(m(d, d.error));
          this.onProgress(m(d, d.progress));
          this.onComplete(function (b) {
            b = a(b);
            b.onError(m(d, d.error));
            b.onComplete(m(d, d.complete));
          });
          return d.future;
        },
        __class__: kc,
      };
      var sd = function () {
        this.future = new kc();
      };
      h['lime.app.Promise'] = sd;
      sd.__name__ = 'lime.app.Promise';
      sd.prototype = {
        complete: function (a) {
          if (
            !this.future.isError &&
            ((this.future.isComplete = !0),
            (this.future.value = a),
            null != this.future.__completeListeners)
          ) {
            for (
              var b = 0, d = this.future.__completeListeners;
              b < d.length;

            ) {
              var f = d[b];
              ++b;
              f(a);
            }
            this.future.__completeListeners = null;
          }
          return this;
        },
        completeWith: function (a) {
          a.onComplete(m(this, this.complete));
          a.onError(m(this, this.error));
          a.onProgress(m(this, this.progress));
          return this;
        },
        error: function (a) {
          if (
            !this.future.isComplete &&
            ((this.future.isError = !0),
            (this.future.error = a),
            null != this.future.__errorListeners)
          ) {
            for (var b = 0, d = this.future.__errorListeners; b < d.length; ) {
              var f = d[b];
              ++b;
              f(a);
            }
            this.future.__errorListeners = null;
          }
          return this;
        },
        progress: function (a, b) {
          if (
            !this.future.isError &&
            !this.future.isComplete &&
            null != this.future.__progressListeners
          )
            for (
              var d = 0, f = this.future.__progressListeners;
              d < f.length;

            ) {
              var g = f[d];
              ++d;
              g(a, b);
            }
          return this;
        },
        __class__: sd,
      };
      var Fk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_Float_Void'] = Fk;
      Fk.__name__ = 'lime.app._Event_Float_Float_Float_Void';
      Fk.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, d) {
          this.canceled = !1;
          for (
            var f = this.__listeners, g = this.__repeat, k = 0;
            k < f.length &&
            (f[k](a, b, d), g[k] ? ++k : this.remove(f[k]), !this.canceled);

          );
        },
        __class__: Fk,
      };
      var Gk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_Int_Void'] = Gk;
      Gk.__name__ = 'lime.app._Event_Float_Float_Int_Void';
      Gk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, d) {
          this.canceled = !1;
          for (
            var f = this.__listeners, g = this.__repeat, k = 0;
            k < f.length &&
            (f[k](a, b, d), g[k] ? ++k : this.remove(f[k]), !this.canceled);

          );
        },
        __class__: Gk,
      };
      var Sg = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_Void'] = Sg;
      Sg.__name__ = 'lime.app._Event_Float_Float_Void';
      Sg.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: Sg,
      };
      var Hk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_lime_ui_MouseButton_Void'] = Hk;
      Hk.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseButton_Void';
      Hk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, d) {
          this.canceled = !1;
          for (
            var f = this.__listeners, g = this.__repeat, k = 0;
            k < f.length &&
            (f[k](a, b, d), g[k] ? ++k : this.remove(f[k]), !this.canceled);

          );
        },
        __class__: Hk,
      };
      var Ik = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void'] = Ik;
      Ik.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void';
      Ik.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, d) {
          this.canceled = !1;
          for (
            var f = this.__listeners, g = this.__repeat, k = 0;
            k < f.length &&
            (f[k](a, b, d), g[k] ? ++k : this.remove(f[k]), !this.canceled);

          );
        },
        __class__: Ik,
      };
      var Jk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_Float_Void'] = Jk;
      Jk.__name__ = 'lime.app._Event_Int_Float_Void';
      Jk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: Jk,
      };
      var Hi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_Int_Void'] = Hi;
      Hi.__name__ = 'lime.app._Event_Int_Int_Void';
      Hi.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: Hi,
      };
      var df = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_Void'] = df;
      df.__name__ = 'lime.app._Event_Int_Void';
      df.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: df,
      };
      var Kk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_lime_ui_JoystickHatPosition_Void'] = Kk;
      Kk.__name__ = 'lime.app._Event_Int_lime_ui_JoystickHatPosition_Void';
      Kk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        __class__: Kk,
      };
      var Lk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_String_Int_Int_Void'] = Lk;
      Lk.__name__ = 'lime.app._Event_String_Int_Int_Void';
      Lk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        __class__: Lk,
      };
      var Ii = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_String_Void'] = Ii;
      Ii.__name__ = 'lime.app._Event_String_Void';
      Ii.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        has: function (a) {
          for (var b = 0, d = this.__listeners; b < d.length; ) {
            var f = d[b];
            ++b;
            if (f == a) return !0;
          }
          return !1;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Ii,
      };
      var wc = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Void_Void'] = wc;
      wc.__name__ = 'lime.app._Event_Void_Void';
      wc.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function () {
          this.canceled = !1;
          for (
            var a = this.__listeners, b = this.__repeat, d = 0;
            d < a.length &&
            (a[d](), b[d] ? ++d : this.remove(a[d]), !this.canceled);

          );
        },
        __class__: wc,
      };
      var Ji = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_graphics_RenderContext_Void'] = Ji;
      Ji.__name__ = 'lime.app._Event_lime_graphics_RenderContext_Void';
      Ji.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Ji,
      };
      var Mk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_GamepadAxis_Float_Void'] = Mk;
      Mk.__name__ = 'lime.app._Event_lime_ui_GamepadAxis_Float_Void';
      Mk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: Mk,
      };
      var Ki = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_GamepadButton_Void'] = Ki;
      Ki.__name__ = 'lime.app._Event_lime_ui_GamepadButton_Void';
      Ki.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Ki,
      };
      var Nk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Gamepad_Void'] = Nk;
      Nk.__name__ = 'lime.app._Event_lime_ui_Gamepad_Void';
      Nk.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Nk,
      };
      var Ok = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Joystick_Void'] = Ok;
      Ok.__name__ = 'lime.app._Event_lime_ui_Joystick_Void';
      Ok.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Ok,
      };
      var Li = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void'] = Li;
      Li.__name__ = 'lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void';
      Li.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: Li,
      };
      var mg = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Touch_Void'] = mg;
      mg.__name__ = 'lime.app._Event_lime_ui_Touch_Void';
      mg.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: mg,
      };
      var Pj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Window_Void'] = Pj;
      Pj.__name__ = 'lime.app._Event_lime_ui_Window_Void';
      Pj.prototype = {
        add: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          for (var f = 0, g = this.__priorities.length; f < g; ) {
            var k = f++;
            if (d > this.__priorities[k]) {
              this.__listeners.splice(k, 0, a);
              this.__priorities.splice(k, 0, d);
              this.__repeat.splice(k, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(d);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, d = this.__repeat, f = 0;
            f < b.length &&
            (b[f](a), d[f] ? ++f : this.remove(b[f]), !this.canceled);

          );
        },
        __class__: Pj,
      };
      var Pb = function (a, b, d, f, g, k, l) {
        null == g && (g = -1);
        null == f && (f = -1);
        null == d && (d = 0);
        null == b && (b = 0);
        this.offsetX = b;
        this.offsetY = d;
        this.width = f;
        this.height = g;
        this.version = 0;
        null == l &&
          ((l = Xc.CANVAS), null != pd.__current.__worker || pd.__isWorker) &&
          (l = Xc.DATA);
        this.type = l;
        if (null == a) {
          if (0 < f && 0 < g)
            switch (this.type._hx_index) {
              case 0:
                this.buffer = new De(null, f, g);
                Ha.createCanvas(this, f, g);
                null != k && 0 != k && this.fillRect(new xd(0, 0, f, g), k);
                break;
              case 1:
                ((a = f * g * 4),
                  (a = null != a ? new Uint8Array(a) : null),
                  (this.buffer = new De(a, f, g)),
                  null != k && 0 != k && this.fillRect(new xd(0, 0, f, g), k));
            }
        } else this.__fromImageBuffer(a);
      };
      h['lime.graphics.Image'] = Pb;
      Pb.__name__ = 'lime.graphics.Image';
      Pb.fromCanvas = function (a) {
        if (null == a) return null;
        var b = new De(null, a.width, a.height);
        b.set_src(a);
        a = new Pb(b);
        a.type = Xc.CANVAS;
        return a;
      };
      Pb.fromFile = function (a) {
        if (null == a) return null;
        var b = new Pb();
        return b.__fromFile(a) ? b : null;
      };
      Pb.loadFromBytes = function (a) {
        if (null == a) return kc.withValue(null);
        if (Pb.__isPNG(a)) var b = 'image/png';
        else if (Pb.__isJPG(a)) b = 'image/jpeg';
        else if (Pb.__isGIF(a)) b = 'image/gif';
        else if (Pb.__isWebP(a)) b = 'image/webp';
        else return kc.withValue(null);
        return ya.loadImageFromBytes(a, b);
      };
      Pb.loadFromFile = function (a) {
        return null == a ? kc.withValue(null) : ya.loadImage(a);
      };
      Pb.__isGIF = function (a) {
        if (null == a || 6 > a.length) return !1;
        a = a.getString(0, 6);
        return 'GIF87a' != a ? 'GIF89a' == a : !0;
      };
      Pb.__isJPG = function (a) {
        return null == a || 4 > a.length
          ? !1
          : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2]
            ? 217 == a.b[a.length - 1]
            : !1;
      };
      Pb.__isPNG = function (a) {
        return null == a || 8 > a.length
          ? !1
          : 137 == a.b[0] &&
              80 == a.b[1] &&
              78 == a.b[2] &&
              71 == a.b[3] &&
              13 == a.b[4] &&
              10 == a.b[5] &&
              26 == a.b[6]
            ? 10 == a.b[7]
            : !1;
      };
      Pb.__isWebP = function (a) {
        return null == a || 16 > a.length
          ? !1
          : 'RIFF' == a.getString(0, 4)
            ? 'WEBP' == a.getString(8, 4)
            : !1;
      };
      Pb.prototype = {
        clone: function () {
          if (null != this.buffer) {
            this.type == Xc.CANVAS
              ? Ha.convertToCanvas(this)
              : Ha.convertToData(this);
            var a = new Pb(
              this.buffer.clone(),
              this.offsetX,
              this.offsetY,
              this.width,
              this.height,
              null,
              this.type,
            );
            a.version = this.version;
            return a;
          }
          return new Pb(
            null,
            this.offsetX,
            this.offsetY,
            this.width,
            this.height,
            null,
            this.type,
          );
        },
        colorTransform: function (a, b) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Ha.colorTransform(this, a, b);
                break;
              case 1:
                Ha.convertToData(this);
                Wb.colorTransform(this, a, b);
                break;
              case 2:
                (a.offset(this.offsetX, this.offsetY),
                  this.buffer.__srcBitmapData.colorTransform(
                    a.__toFlashRectangle(),
                    Hc.__toFlashColorTransform(b),
                  ));
            }
        },
        copyChannel: function (a, b, d, f, g) {
          b = this.__clipRect(b);
          if (
            null != this.buffer &&
            null != b &&
            !(
              (g == kg.ALPHA && !this.get_transparent()) ||
              0 >= b.width ||
              0 >= b.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              this.type._hx_index)
            ) {
              case 0:
                Ha.copyChannel(this, a, b, d, f, g);
                break;
              case 1:
                Ha.convertToData(this);
                Ha.convertToData(a);
                Wb.copyChannel(this, a, b, d, f, g);
                break;
              case 2:
                switch (f._hx_index) {
                  case 0:
                    var k = 1;
                    break;
                  case 1:
                    k = 2;
                    break;
                  case 2:
                    k = 4;
                    break;
                  case 3:
                    k = 8;
                }
                switch (g._hx_index) {
                  case 0:
                    var l = 1;
                    break;
                  case 1:
                    l = 2;
                    break;
                  case 2:
                    l = 4;
                    break;
                  case 3:
                    l = 8;
                }
                b.offset(a.offsetX, a.offsetY);
                d.offset(this.offsetX, this.offsetY);
                this.buffer.__srcBitmapData.copyChannel(
                  a.buffer.get_src(),
                  b.__toFlashRectangle(),
                  d.__toFlashPoint(),
                  k,
                  l,
                );
            }
        },
        copyPixels: function (a, b, d, f, g, k) {
          null == k && (k = !1);
          if (
            null != this.buffer &&
            null != a &&
            !(
              0 >= b.width ||
              0 >= b.height ||
              0 >= this.width ||
              0 >= this.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              0 > b.x && ((b.width += b.x), (b.x = 0)),
              0 > b.y && ((b.height += b.y), (b.y = 0)),
              d.x + b.width > this.width && (b.width = this.width - d.x),
              d.y + b.height > this.height && (b.height = this.height - d.y),
              0 > d.x && ((b.width += d.x), (b.x -= d.x), (d.x = 0)),
              0 > d.y && ((b.height += d.y), (b.y -= d.y), (d.y = 0)),
              a == this &&
                d.x < b.get_right() &&
                d.y < b.get_bottom() &&
                (a = this.clone()),
              f == a && (null == g || (0 == g.x && 0 == g.y)) && (g = f = null),
              this.type._hx_index)
            ) {
              case 0:
                null != f
                  ? (Ha.convertToData(this),
                    Ha.convertToData(a),
                    null != f && Ha.convertToData(f),
                    Wb.copyPixels(this, a, b, d, f, g, k))
                  : (Ha.convertToCanvas(this),
                    Ha.convertToCanvas(a),
                    Ha.copyPixels(this, a, b, d, f, g, k));
                break;
              case 1:
                Ha.convertToData(this);
                Ha.convertToData(a);
                null != f && Ha.convertToData(f);
                Wb.copyPixels(this, a, b, d, f, g, k);
                break;
              case 2:
                (b.offset(a.offsetX, a.offsetY),
                  d.offset(this.offsetX, this.offsetY),
                  null != f && null != g && g.offset(f.offsetX, f.offsetY),
                  this.buffer.__srcBitmapData.copyPixels(
                    a.buffer.__srcBitmapData,
                    b.__toFlashRectangle(),
                    d.__toFlashPoint(),
                    null != f ? f.buffer.get_src() : null,
                    null != g ? g.__toFlashPoint() : null,
                    k,
                  ));
            }
        },
        encode: function (a, b) {
          null == b && (b = 90);
          if (null == a) return Ek.encode(this);
          switch (a._hx_index) {
            case 0:
              return wl.encode(this);
            case 1:
              return zl.encode(this, b);
            case 2:
              return Ek.encode(this);
          }
        },
        fillRect: function (a, b, d) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Ha.fillRect(this, a, b, d);
                break;
              case 1:
                Ha.convertToData(this);
                if (0 == this.buffer.data.length) break;
                Wb.fillRect(this, a, b, d);
                break;
              case 2:
                a.offset(this.offsetX, this.offsetY);
                if (null == d)
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 24) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 8) & 255);
                else
                  switch (d) {
                    case 1:
                      break;
                    case 2:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 8) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 24) & 255);
                      break;
                    default:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 24) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b);
            }
        },
        getPixel: function (a, b, d) {
          if (
            null == this.buffer ||
            0 > a ||
            0 > b ||
            a >= this.width ||
            b >= this.height
          )
            return 0;
          switch (this.type._hx_index) {
            case 0:
              return Ha.getPixel(this, a, b, d);
            case 1:
              return (Ha.convertToData(this), Wb.getPixel(this, a, b, d));
            case 2:
              a = this.buffer.__srcBitmapData.getPixel(
                a + this.offsetX,
                b + this.offsetY,
              );
              if (null == d)
                return (
                  (((a >>> 16) & 255) << 24) |
                  (((a >>> 8) & 255) << 16) |
                  ((a & 255) << 8) |
                  ((a >>> 24) & 255)
                );
              switch (d) {
                case 1:
                  return a;
                case 2:
                  return (
                    ((a & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    (((a >>> 16) & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
                default:
                  return (
                    (((a >>> 16) & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    ((a & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
              }
            default:
              return 0;
          }
        },
        getPixels: function (a, b) {
          if (null == this.buffer) return null;
          switch (this.type._hx_index) {
            case 0:
              return Ha.getPixels(this, a, b);
            case 1:
              return (Ha.convertToData(this), Wb.getPixels(this, a, b));
            case 2:
              return null;
            default:
              return null;
          }
        },
        setPixel: function (a, b, d, f) {
          if (
            !(
              null == this.buffer ||
              0 > a ||
              0 > b ||
              a >= this.width ||
              b >= this.height
            )
          )
            switch (this.type._hx_index) {
              case 0:
                Ha.setPixel(this, a, b, d, f);
                break;
              case 1:
                Ha.convertToData(this);
                Wb.setPixel(this, a, b, d, f);
                break;
              case 2:
                if (null == f)
                  d =
                    ((d & 255) << 24) |
                    (((d >>> 24) & 255) << 16) |
                    (((d >>> 16) & 255) << 8) |
                    ((d >>> 8) & 255);
                else
                  switch (f) {
                    case 1:
                      break;
                    case 2:
                      d =
                        ((d & 255) << 24) |
                        (((d >>> 8) & 255) << 16) |
                        (((d >>> 16) & 255) << 8) |
                        ((d >>> 24) & 255);
                      break;
                    default:
                      d =
                        ((d & 255) << 24) |
                        (((d >>> 24) & 255) << 16) |
                        (((d >>> 16) & 255) << 8) |
                        ((d >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.setPixel(
                  a + this.offsetX,
                  b + this.offsetX,
                  d,
                );
            }
        },
        __clipRect: function (a) {
          return null == a ||
            (0 > a.x && ((a.width -= -a.x), (a.x = 0), 0 >= a.x + a.width)) ||
            (0 > a.y && ((a.height -= -a.y), (a.y = 0), 0 >= a.y + a.height)) ||
            (a.x + a.width >= this.width &&
              ((a.width -= a.x + a.width - this.width), 0 >= a.width)) ||
            (a.y + a.height >= this.height &&
              ((a.height -= a.y + a.height - this.height), 0 >= a.height))
            ? null
            : a;
        },
        __fromBase64: function (a, b, d) {
          var f = this,
            g = new window.Image();
          g.addEventListener(
            'load',
            function (a) {
              f.buffer = new De(null, g.width, g.height);
              f.buffer.__srcImage = g;
              f.offsetX = 0;
              f.offsetY = 0;
              f.width = f.buffer.width;
              f.height = f.buffer.height;
              null != d && d(f);
            },
            !1,
          );
          g.src = 'data:' + b + ';base64,' + a;
        },
        __fromBytes: function (a, b) {
          if (Pb.__isPNG(a)) var d = 'image/png';
          else if (Pb.__isJPG(a)) d = 'image/jpeg';
          else if (Pb.__isGIF(a)) d = 'image/gif';
          else return !1;
          this.__fromBase64(ke.encode(a), d, b);
          return !0;
        },
        __fromFile: function (a, b, d) {
          var f = this,
            g = new window.Image();
          ya.__isSameOrigin(a) || (g.crossOrigin = 'Anonymous');
          g.onload = function (a) {
            f.buffer = new De(null, g.width, g.height);
            f.buffer.__srcImage = g;
            f.width = g.width;
            f.height = g.height;
            null != b && b(f);
          };
          g.onerror = function (a) {
            null != d && d();
          };
          g.src = a;
          return !0;
        },
        __fromImageBuffer: function (a) {
          this.buffer = a;
          null != a &&
            (-1 == this.width && (this.width = a.width),
            -1 == this.height && (this.height = a.height));
        },
        get_data: function () {
          null == this.buffer.data &&
            0 < this.buffer.width &&
            0 < this.buffer.height &&
            Ha.convertToData(this);
          return this.buffer.data;
        },
        get_format: function () {
          return this.buffer.format;
        },
        set_format: function (a) {
          this.buffer.format != a &&
            1 == this.type._hx_index &&
            Wb.setFormat(this, a);
          return (this.buffer.format = a);
        },
        get_premultiplied: function () {
          return this.buffer.premultiplied;
        },
        set_premultiplied: function (a) {
          if (a && !this.buffer.premultiplied)
            switch (this.type._hx_index) {
              case 0:
              case 1:
                (Ha.convertToData(this), Wb.multiplyAlpha(this));
            }
          else
            !a &&
              this.buffer.premultiplied &&
              1 == this.type._hx_index &&
              (Ha.convertToData(this), Wb.unmultiplyAlpha(this));
          return a;
        },
        get_rect: function () {
          return new xd(0, 0, this.width, this.height);
        },
        get_src: function () {
          null != this.buffer.__srcCanvas ||
            (null == this.buffer.data && this.type != Xc.DATA) ||
            Ha.convertToCanvas(this);
          return this.buffer.get_src();
        },
        get_transparent: function () {
          return null == this.buffer ? !1 : this.buffer.transparent;
        },
        set_transparent: function (a) {
          return null == this.buffer ? !1 : (this.buffer.transparent = a);
        },
        __class__: Pb,
        __properties__: {
          set_transparent: 'set_transparent',
          get_transparent: 'get_transparent',
          get_src: 'get_src',
          get_rect: 'get_rect',
          set_premultiplied: 'set_premultiplied',
          get_premultiplied: 'get_premultiplied',
          set_format: 'set_format',
          get_format: 'get_format',
          get_data: 'get_data',
        },
      };
      var De = function (a, b, d, f, g) {
        null == f && (f = 32);
        null == d && (d = 0);
        null == b && (b = 0);
        this.data = a;
        this.width = b;
        this.height = d;
        this.bitsPerPixel = f;
        this.format = null == g ? 0 : g;
        this.premultiplied = !1;
        this.transparent = !0;
      };
      h['lime.graphics.ImageBuffer'] = De;
      De.__name__ = 'lime.graphics.ImageBuffer';
      De.prototype = {
        clone: function () {
          var a = new De(this.data, this.width, this.height, this.bitsPerPixel);
          if (null != this.data) {
            var b = this.data.byteLength,
              d = null,
              f = null,
              g = null,
              k = null,
              l = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != d
                  ? new Uint8Array(d)
                  : null != f
                    ? new Uint8Array(f.__array)
                    : null != g
                      ? new Uint8Array(g)
                      : null != k
                        ? null == l
                          ? new Uint8Array(k, 0)
                          : new Uint8Array(k, 0, l)
                        : null;
            a.data = b;
            f = d = b = null;
            g = this.data;
            l = k = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != d
                  ? new Uint8Array(d)
                  : null != f
                    ? new Uint8Array(f.__array)
                    : null != g
                      ? new Uint8Array(g)
                      : null != k
                        ? null == l
                          ? new Uint8Array(k, 0)
                          : new Uint8Array(k, 0, l)
                        : null;
            a.data.set(b);
          } else
            null != this.__srcImageData
              ? ((a.__srcCanvas = window.document.createElement('canvas')),
                (a.__srcContext = a.__srcCanvas.getContext('2d')),
                (a.__srcCanvas.width = this.__srcImageData.width),
                (a.__srcCanvas.height = this.__srcImageData.height),
                (a.__srcImageData = a.__srcContext.createImageData(
                  this.__srcImageData.width,
                  this.__srcImageData.height,
                )),
                (b = new Uint8ClampedArray(this.__srcImageData.data)),
                a.__srcImageData.data.set(b))
              : null != this.__srcCanvas
                ? ((a.__srcCanvas = window.document.createElement('canvas')),
                  (a.__srcContext = a.__srcCanvas.getContext('2d')),
                  (a.__srcCanvas.width = this.__srcCanvas.width),
                  (a.__srcCanvas.height = this.__srcCanvas.height),
                  a.__srcContext.drawImage(this.__srcCanvas, 0, 0))
                : (a.__srcImage = this.__srcImage);
          a.bitsPerPixel = this.bitsPerPixel;
          a.format = this.format;
          a.premultiplied = this.premultiplied;
          a.transparent = this.transparent;
          return a;
        },
        get_src: function () {
          return null != this.__srcImage ? this.__srcImage : this.__srcCanvas;
        },
        set_src: function (a) {
          a instanceof Image
            ? (this.__srcImage = a)
            : a instanceof HTMLCanvasElement &&
              ((this.__srcCanvas = a),
              (this.__srcContext = this.__srcCanvas.getContext('2d')));
          return a;
        },
        get_stride: function () {
          return this.width * ((this.bitsPerPixel / 8) | 0);
        },
        __class__: De,
        __properties__: {
          get_stride: 'get_stride',
          set_src: 'set_src',
          get_src: 'get_src',
        },
      };
      var kg = (K['lime.graphics.ImageChannel'] = {
        __ename__: 'lime.graphics.ImageChannel',
        __constructs__: null,
        RED: {
          _hx_name: 'RED',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
        GREEN: {
          _hx_name: 'GREEN',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
        BLUE: {
          _hx_name: 'BLUE',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
        ALPHA: {
          _hx_name: 'ALPHA',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
      });
      kg.__constructs__ = [kg.RED, kg.GREEN, kg.BLUE, kg.ALPHA];
      var Mi = (K['lime.graphics.ImageFileFormat'] = {
        __ename__: 'lime.graphics.ImageFileFormat',
        __constructs__: null,
        BMP: {
          _hx_name: 'BMP',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: q,
        },
        JPEG: {
          _hx_name: 'JPEG',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: q,
        },
        PNG: {
          _hx_name: 'PNG',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: q,
        },
      });
      Mi.__constructs__ = [Mi.BMP, Mi.JPEG, Mi.PNG];
      var Xc = (K['lime.graphics.ImageType'] = {
        __ename__: 'lime.graphics.ImageType',
        __constructs__: null,
        CANVAS: {
          _hx_name: 'CANVAS',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
        DATA: {
          _hx_name: 'DATA',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
        FLASH: {
          _hx_name: 'FLASH',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
        CUSTOM: {
          _hx_name: 'CUSTOM',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
      });
      Xc.__constructs__ = [Xc.CANVAS, Xc.DATA, Xc.FLASH, Xc.CUSTOM];
      var Dk = function () {};
      h['lime.graphics.RenderContext'] = Dk;
      Dk.__name__ = 'lime.graphics.RenderContext';
      Dk.prototype = { __class__: Dk };
      var cm = {
          uniform2fv: function (a, b, d, f, g) {
            null != f ? a.uniform2fv(b, d, f, g) : a.uniform2fv(b, d);
          },
        },
        Ec = {
          bufferData: function (a, b, d, f) {
            a.bufferData(b, d, f);
          },
          texImage2D: function (a, b, d, f, g, k, l, u, p, h) {
            null != u
              ? a.texImage2D(b, d, f, g, k, l, u, p, h)
              : a.texImage2D(b, d, f, g, k, l);
          },
          uniformMatrix2fv: function (a, b, d, f) {
            a.uniformMatrix2fv(b, d, f);
          },
          uniformMatrix3fv: function (a, b, d, f) {
            a.uniformMatrix3fv(b, d, f);
          },
          uniformMatrix4fv: function (a, b, d, f) {
            a.uniformMatrix4fv(b, d, f);
          },
          fromWebGL2RenderContext: function (a) {
            return a;
          },
        },
        Cl = function (a) {};
      h['lime.graphics.cairo.Cairo'] = Cl;
      Cl.__name__ = 'lime.graphics.cairo.Cairo';
      Cl.prototype = {
        clip: function () {},
        identityMatrix: function () {},
        newPath: function () {},
        paint: function () {},
        rectangle: function (a, b, d, f) {},
        restore: function () {},
        save: function () {},
        setOperator: function (a) {
          return a;
        },
        setSourceRGB: function (a, b, d) {},
        set_matrix: function (a) {
          return a;
        },
        __class__: Cl,
        __properties__: { set_matrix: 'set_matrix' },
      };
      var dm = { flush: function (a) {} },
        Pd = function () {};
      h['lime.graphics.opengl.GL'] = Pd;
      Pd.__name__ = 'lime.graphics.opengl.GL';
      Pd.context = null;
      Pd.type = null;
      Pd.version = null;
      var Dl = function () {
        this.STACK_UNDERFLOW = 1284;
        this.STACK_OVERFLOW = 1283;
        this.CONTEXT_FLAG_DEBUG_BIT = 2;
        this.DEBUG_OUTPUT = 37600;
        this.DEBUG_SEVERITY_LOW = 37192;
        this.DEBUG_SEVERITY_MEDIUM = 37191;
        this.DEBUG_SEVERITY_HIGH = 37190;
        this.DEBUG_LOGGED_MESSAGES = 37189;
        this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
        this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
        this.MAX_LABEL_LENGTH = 33512;
        this.SAMPLER = 33510;
        this.QUERY = 33507;
        this.PROGRAM = 33506;
        this.SHADER = 33505;
        this.BUFFER = 33504;
        this.DEBUG_GROUP_STACK_DEPTH = 33389;
        this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
        this.DEBUG_SEVERITY_NOTIFICATION = 33387;
        this.DEBUG_TYPE_POP_GROUP = 33386;
        this.DEBUG_TYPE_PUSH_GROUP = 33385;
        this.DEBUG_TYPE_MARKER = 33384;
        this.DEBUG_TYPE_OTHER = 33361;
        this.DEBUG_TYPE_PERFORMANCE = 33360;
        this.DEBUG_TYPE_PORTABILITY = 33359;
        this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
        this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
        this.DEBUG_TYPE_ERROR = 33356;
        this.DEBUG_SOURCE_OTHER = 33355;
        this.DEBUG_SOURCE_APPLICATION = 33354;
        this.DEBUG_SOURCE_THIRD_PARTY = 33353;
        this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
        this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
        this.DEBUG_SOURCE_API = 33350;
        this.DEBUG_CALLBACK_USER_PARAM = 33349;
        this.DEBUG_CALLBACK_FUNCTION = 33348;
        this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
        this.DEBUG_OUTPUT_SYNCHRONOUS = 33346;
      };
      h['lime.graphics.opengl.ext.KHR_debug'] = Dl;
      Dl.__name__ = 'lime.graphics.opengl.ext.KHR_debug';
      Dl.prototype = { __class__: Dl };
      var Hc = {
          __alphaTable: null,
          __blueTable: null,
          __greenTable: null,
          __redTable: null,
          getAlphaTable: function (a) {
            null == Hc.__alphaTable && (Hc.__alphaTable = new Uint8Array(256));
            Hc.__alphaTable[0] = 0;
            for (var b = 1; 256 > b; ) {
              var d = b++;
              var f = Math.floor(d * a[18] + 255 * a[19]);
              255 < f && (f = 255);
              0 > f && (f = 0);
              Hc.__alphaTable[d] = f;
            }
            return Hc.__alphaTable;
          },
          getBlueTable: function (a) {
            null == Hc.__blueTable && (Hc.__blueTable = new Uint8Array(256));
            for (var b, d = 0; 256 > d; ) {
              var f = d++;
              b = Math.floor(f * a[12] + 255 * a[14]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Hc.__blueTable[f] = b;
            }
            return Hc.__blueTable;
          },
          getGreenTable: function (a) {
            null == Hc.__greenTable && (Hc.__greenTable = new Uint8Array(256));
            for (var b, d = 0; 256 > d; ) {
              var f = d++;
              b = Math.floor(f * a[6] + 255 * a[9]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Hc.__greenTable[f] = b;
            }
            return Hc.__greenTable;
          },
          getRedTable: function (a) {
            null == Hc.__redTable && (Hc.__redTable = new Uint8Array(256));
            for (var b, d = 0; 256 > d; ) {
              var f = d++;
              b = Math.floor(f * a[0] + 255 * a[4]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Hc.__redTable[f] = b;
            }
            return Hc.__redTable;
          },
          __toFlashColorTransform: function (a) {
            return null;
          },
        },
        ab = {
          _new: function (a) {
            if (null == a || 16 != a.length)
              ((a = ab.__identity),
                (a = null != a ? new Float32Array(a) : null));
            return a;
          },
          append: function (a, b) {
            var d = a[0],
              f = a[4],
              g = a[8],
              k = a[12],
              l = a[1],
              u = a[5],
              p = a[9],
              h = a[13],
              r = a[2],
              n = a[6],
              t = a[10],
              q = a[14],
              E = a[3],
              m = a[7],
              C = a[11],
              x = a[15],
              y = ab.get(b, 0),
              z = ab.get(b, 4),
              P = ab.get(b, 8),
              B = ab.get(b, 12),
              K = ab.get(b, 1),
              w = ab.get(b, 5),
              v = ab.get(b, 9),
              F = ab.get(b, 13),
              J = ab.get(b, 2),
              I = ab.get(b, 6),
              G = ab.get(b, 10),
              Oa = ab.get(b, 14),
              S = ab.get(b, 3),
              L = ab.get(b, 7),
              rb = ab.get(b, 11);
            b = ab.get(b, 15);
            a[0] = d * y + l * z + r * P + E * B;
            a[1] = d * K + l * w + r * v + E * F;
            a[2] = d * J + l * I + r * G + E * Oa;
            a[3] = d * S + l * L + r * rb + E * b;
            a[4] = f * y + u * z + n * P + m * B;
            a[5] = f * K + u * w + n * v + m * F;
            a[6] = f * J + u * I + n * G + m * Oa;
            a[7] = f * S + u * L + n * rb + m * b;
            a[8] = g * y + p * z + t * P + C * B;
            a[9] = g * K + p * w + t * v + C * F;
            a[10] = g * J + p * I + t * G + C * Oa;
            a[11] = g * S + p * L + t * rb + C * b;
            a[12] = k * y + h * z + q * P + x * B;
            a[13] = k * K + h * w + q * v + x * F;
            a[14] = k * J + h * I + q * G + x * Oa;
            a[15] = k * S + h * L + q * rb + x * b;
          },
          createOrtho: function (a, b, d, f, g, k, l) {
            var u = 1 / (d - b),
              p = 1 / (g - f),
              h = 1 / (l - k);
            a[0] = 2 * u;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 2 * p;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = -2 * h;
            a[11] = 0;
            a[12] = -(b + d) * u;
            a[13] = -(f + g) * p;
            a[14] = -(k + l) * h;
            a[15] = 1;
          },
          identity: function (a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 1;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = 0;
            a[13] = 0;
            a[14] = 0;
            a[15] = 1;
          },
          get: function (a, b) {
            return a[b];
          },
          set: function (a, b, d) {
            return (a[b] = d);
          },
        },
        U = { __alpha16: null, __clamp: null, a16: null, unmult: null },
        xd = function (a, b, d, f) {
          null == f && (f = 0);
          null == d && (d = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.x = a;
          this.y = b;
          this.width = d;
          this.height = f;
        };
      h['lime.math.Rectangle'] = xd;
      xd.__name__ = 'lime.math.Rectangle';
      xd.prototype = {
        intersection: function (a, b) {
          null == b && (b = new xd());
          var d = this.x < a.x ? a.x : this.x,
            f =
              this.get_right() > a.get_right()
                ? a.get_right()
                : this.get_right();
          if (f <= d) return (b.setEmpty(), b);
          var g = this.y < a.y ? a.y : this.y;
          a =
            this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          if (a <= g) return (b.setEmpty(), b);
          b.x = d;
          b.y = g;
          b.width = f - d;
          b.height = a - g;
          return b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setEmpty: function () {
          this.x = this.y = this.width = this.height = 0;
        },
        setTo: function (a, b, d, f) {
          this.x = a;
          this.y = b;
          this.width = d;
          this.height = f;
        },
        __toFlashRectangle: function () {
          return null;
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_right: function () {
          return this.x + this.width;
        },
        __class__: xd,
        __properties__: { get_right: 'get_right', get_bottom: 'get_bottom' },
      };
      var Uf = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      h['lime.math.Vector2'] = Uf;
      Uf.__name__ = 'lime.math.Vector2';
      Uf.prototype = {
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        __toFlashPoint: function () {
          return null;
        },
        __class__: Uf,
      };
      var Ak = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = f;
        this.x = a;
        this.y = b;
        this.z = d;
      };
      h['lime.math.Vector4'] = Ak;
      Ak.__name__ = 'lime.math.Vector4';
      Ak.prototype = { __class__: Ak };
      var xc = function () {};
      h['lime.media.AudioBuffer'] = xc;
      xc.__name__ = 'lime.media.AudioBuffer';
      xc.fromBytes = function (a) {
        if (null == a) return null;
        var b = new xc();
        b.set_src(
          new Howl({
            src: ['data:' + xc.__getCodec(a) + ';base64,' + ke.encode(a)],
            html5: !0,
            preload: !1,
          }),
        );
        return b;
      };
      xc.fromFile = function (a) {
        if (null == a) return null;
        var b = new xc();
        b.__srcHowl = new Howl({ src: [a], preload: !1 });
        return b;
      };
      xc.fromFiles = function (a) {
        var b = new xc();
        b.__srcHowl = new Howl({ src: a, preload: !1 });
        return b;
      };
      xc.loadFromFile = function (a) {
        var b = new sd(),
          d = xc.fromFile(a);
        null != d
          ? null != d &&
            (d.__srcHowl.on('load', function () {
              b.complete(d);
            }),
            d.__srcHowl.on('loaderror', function (a, d) {
              b.error(d);
            }),
            d.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      xc.loadFromFiles = function (a) {
        var b = new sd(),
          d = xc.fromFiles(a);
        null != d
          ? (d.__srcHowl.on('load', function () {
              b.complete(d);
            }),
            d.__srcHowl.on('loaderror', function () {
              b.error(null);
            }),
            d.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      xc.__getCodec = function (a) {
        switch (a.getString(0, 4)) {
          case 'OggS':
            return 'audio/ogg';
          case 'RIFF':
            if ('WAVE' == a.getString(8, 4)) return 'audio/wav';
            var b = a.b[1],
              d = a.b[2];
            switch (a.b[0]) {
              case 73:
                if (68 == b && 51 == d) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
            break;
          case 'fLaC':
            return 'audio/flac';
          default:
            switch (((b = a.b[1]), (d = a.b[2]), a.b[0])) {
              case 73:
                if (68 == b && 51 == d) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
        }
        Pa.error('Unsupported sound format', {
          fileName: 'lime/media/AudioBuffer.hx',
          lineNumber: 440,
          className: 'lime.media.AudioBuffer',
          methodName: '__getCodec',
        });
        return null;
      };
      xc.prototype = {
        set_src: function (a) {
          return (this.__srcHowl = a);
        },
        __class__: xc,
        __properties__: { set_src: 'set_src' },
      };
      var Qk = function (a) {
        if ('custom' != a) {
          if (null == a || 'web' == a)
            try {
              ((window.AudioContext =
                window.AudioContext || window.webkitAudioContext),
                (this.web = new window.AudioContext()),
                (this.type = 'web'));
            } catch (b) {
              Na.lastError = b;
            }
          null == this.web &&
            'web' != a &&
            ((this.html5 = new Pk()), (this.type = 'html5'));
        } else this.type = 'custom';
      };
      h['lime.media.AudioContext'] = Qk;
      Qk.__name__ = 'lime.media.AudioContext';
      Qk.prototype = { __class__: Qk };
      var he = function () {};
      h['lime.media.AudioManager'] = he;
      he.__name__ = 'lime.media.AudioManager';
      he.context = null;
      he.init = function (a) {
        if (null == he.context) {
          if (
            null == a &&
            ((he.context = new Qk()), (a = he.context), 'openal' == a.type)
          ) {
            var b = a.openal,
              d = b.openDevice();
            d = b.createContext(d);
            b.makeContextCurrent(d);
            b.processContext(d);
          }
          he.context = a;
        }
      };
      var El = function (a, b, d, f) {
        null == f && (f = 0);
        null == b && (b = 0);
        this.onComplete = new wc();
        this.buffer = a;
        this.offset = b;
        this.__backend = new Bk(this);
        null != d && 0 != d && this.set_length(d);
        this.set_loops(f);
        null != a && this.init();
      };
      h['lime.media.AudioSource'] = El;
      El.__name__ = 'lime.media.AudioSource';
      El.prototype = {
        dispose: function () {
          this.__backend.dispose();
        },
        init: function () {
          this.__backend.init();
        },
        play: function () {
          this.__backend.play();
        },
        stop: function () {
          this.__backend.stop();
        },
        get_currentTime: function () {
          return this.__backend.getCurrentTime();
        },
        set_currentTime: function (a) {
          return this.__backend.setCurrentTime(a);
        },
        get_gain: function () {
          return this.__backend.getGain();
        },
        set_gain: function (a) {
          return this.__backend.setGain(a);
        },
        set_length: function (a) {
          return this.__backend.setLength(a);
        },
        set_loops: function (a) {
          return this.__backend.setLoops(a);
        },
        get_position: function () {
          return this.__backend.getPosition();
        },
        set_position: function (a) {
          return this.__backend.setPosition(a);
        },
        __class__: El,
        __properties__: {
          set_loops: 'set_loops',
          set_length: 'set_length',
          set_position: 'set_position',
          get_position: 'get_position',
          set_gain: 'set_gain',
          get_gain: 'get_gain',
          set_currentTime: 'set_currentTime',
          get_currentTime: 'get_currentTime',
        },
      };
      var Pk = function () {};
      h['lime.media.HTML5AudioContext'] = Pk;
      Pk.__name__ = 'lime.media.HTML5AudioContext';
      Pk.prototype = { __class__: Pk };
      var Fl = function () {};
      h['lime.media.OpenALAudioContext'] = Fl;
      Fl.__name__ = 'lime.media.OpenALAudioContext';
      Fl.prototype = {
        createContext: function (a, b) {
          return Xe.createContext(a, b);
        },
        makeContextCurrent: function (a) {
          return Xe.makeContextCurrent(a);
        },
        openDevice: function (a) {
          return Xe.openDevice(a);
        },
        processContext: function (a) {
          Xe.processContext(a);
        },
        __class__: Fl,
      };
      var Xe = function () {};
      h['lime.media.openal.ALC'] = Xe;
      Xe.__name__ = 'lime.media.openal.ALC';
      Xe.createContext = function (a, b) {
        return null;
      };
      Xe.makeContextCurrent = function (a) {
        return !1;
      };
      Xe.openDevice = function (a) {
        return null;
      };
      Xe.processContext = function (a) {};
      var Ni = function () {};
      h['lime.net._IHTTPRequest'] = Ni;
      Ni.__name__ = 'lime.net._IHTTPRequest';
      Ni.__isInterface__ = !0;
      Ni.prototype = { __class__: Ni };
      var be = function (a) {
        this.uri = a;
        this.contentType = 'application/x-www-form-urlencoded';
        this.followRedirects = !0;
        this.enableResponseHeaders = !1;
        this.formData = new Sa();
        this.headers = [];
        this.method = 'GET';
        this.timeout = 3e4;
        this.withCredentials = !1;
        this.manageCookies = !0;
        this.__backend = new ya();
        this.__backend.init(this);
      };
      h['lime.net._HTTPRequest.AbstractHTTPRequest'] = be;
      be.__name__ = 'lime.net._HTTPRequest.AbstractHTTPRequest';
      be.__interfaces__ = [Ni];
      be.prototype = { __class__: be };
      var Ye = function (a) {
        be.call(this, a);
      };
      h['lime.net._HTTPRequest_Bytes'] = Ye;
      Ye.__name__ = 'lime.net._HTTPRequest_Bytes';
      Ye.__super__ = be;
      Ye.prototype = w(be.prototype, {
        fromBytes: function (a) {
          return a;
        },
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var d = new sd();
          a = this.__backend.loadData(this.uri);
          a.onProgress(m(d, d.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            d.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = b.fromBytes(a);
            d.complete(b.responseData);
          });
          return d.future;
        },
        __class__: Ye,
      });
      var ng = function (a) {
        be.call(this, a);
      };
      h['lime.net._HTTPRequest_String'] = ng;
      ng.__name__ = 'lime.net._HTTPRequest_String';
      ng.__super__ = be;
      ng.prototype = w(be.prototype, {
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var d = new sd();
          a = this.__backend.loadText(this.uri);
          a.onProgress(m(d, d.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            d.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = a;
            d.complete(b.responseData);
          });
          return d.future;
        },
        __class__: ng,
      });
      var jg = function (a, b) {
        this.error = a;
        this.responseData = b;
      };
      h['lime.net._HTTPRequestErrorResponse'] = jg;
      jg.__name__ = 'lime.net._HTTPRequestErrorResponse';
      jg.prototype = { __class__: jg };
      var Gi = function (a, b) {
        null == b && (b = '');
        this.name = a;
        this.value = b;
      };
      h['lime.net.HTTPRequestHeader'] = Gi;
      Gi.__name__ = 'lime.net.HTTPRequestHeader';
      Gi.prototype = { __class__: Gi };
      var Oi = function (a) {
        be.call(this, a);
      };
      h['lime.net._HTTPRequest_lime_utils_Bytes'] = Oi;
      Oi.__name__ = 'lime.net._HTTPRequest_lime_utils_Bytes';
      Oi.__super__ = Ye;
      Oi.prototype = w(Ye.prototype, {
        fromBytes: function (a) {
          return zf.fromBytes(a);
        },
        __class__: Oi,
      });
      var Pi = function (a) {
        be.call(this, a);
      };
      h['lime.net._HTTPRequest_openfl_utils_ByteArray'] = Pi;
      Pi.__name__ = 'lime.net._HTTPRequest_openfl_utils_ByteArray';
      Pi.__super__ = Ye;
      Pi.prototype = w(Ye.prototype, {
        fromBytes: function (a) {
          return Cd.fromBytes(a);
        },
        __class__: Pi,
      });
      var nc = function () {};
      h['lime.system.Clipboard'] = nc;
      nc.__name__ = 'lime.system.Clipboard';
      nc.__properties__ = { set_text: 'set_text', get_text: 'get_text' };
      nc._text = null;
      nc.__update = function () {
        var a = nc._text;
        nc._text = a;
        nc.__updated = !0;
        nc._text != a && nc.onUpdate.dispatch();
      };
      nc.get_text = function () {
        nc.__update();
        return nc._text;
      };
      nc.set_text = function (a) {
        var b = nc._text;
        nc._text = a;
        var d = A.current.__window;
        null != d && d.__backend.setClipboard(a);
        nc._text != b && nc.onUpdate.dispatch();
        return a;
      };
      var Qi = (K['lime.system.Endian'] = {
        __ename__: 'lime.system.Endian',
        __constructs__: null,
        LITTLE_ENDIAN: {
          _hx_name: 'LITTLE_ENDIAN',
          _hx_index: 0,
          __enum__: 'lime.system.Endian',
          toString: q,
        },
        BIG_ENDIAN: {
          _hx_name: 'BIG_ENDIAN',
          _hx_index: 1,
          __enum__: 'lime.system.Endian',
          toString: q,
        },
      });
      Qi.__constructs__ = [Qi.LITTLE_ENDIAN, Qi.BIG_ENDIAN];
      var pe = function (a, b) {
        this.onUpdate = new Fk();
        this.type = a;
        this.id = b;
      };
      h['lime.system.Sensor'] = pe;
      pe.__name__ = 'lime.system.Sensor';
      pe.registerSensor = function (a, b) {
        a = new pe(a, b);
        pe.sensors.push(a);
        return (pe.sensorByID.h[b] = a);
      };
      pe.prototype = { __class__: pe };
      var Ml = (K['lime.system.SensorType'] = {
        __ename__: 'lime.system.SensorType',
        __constructs__: null,
        ACCELEROMETER: {
          _hx_name: 'ACCELEROMETER',
          _hx_index: 0,
          __enum__: 'lime.system.SensorType',
          toString: q,
        },
      });
      Ml.__constructs__ = [Ml.ACCELEROMETER];
      var pc = function () {};
      h['lime.system.System'] = pc;
      pc.__name__ = 'lime.system.System';
      pc.__properties__ = { get_endianness: 'get_endianness' };
      pc.__applicationEntryPoint = null;
      pc.__endianness = null;
      pc.embed = v.lime.embed = function (a, b, d, f, g) {
        if (
          null != pc.__applicationEntryPoint &&
          Object.prototype.hasOwnProperty.call(pc.__applicationEntryPoint.h, a)
        ) {
          var k =
            'string' == typeof b
              ? window.document.getElementById(b)
              : null == b
                ? window.document.createElement('div')
                : b;
          null == k
            ? window.console.log(
                '[lime.embed] ERROR: Cannot find target element: ' +
                  G.string(b),
              )
            : (null == d && (d = 0),
              null == f && (f = 0),
              null == g && (g = {}),
              Object.prototype.hasOwnProperty.call(g, 'background') &&
                'string' == typeof g.background &&
                ((b = R.replace(G.string(g.background), '#', '')),
                -1 < b.indexOf('0x')
                  ? (g.background = G.parseInt(b))
                  : (g.background = G.parseInt('0x' + b))),
              (g.element = k),
              (g.width = d),
              (g.height = f),
              pc.__applicationEntryPoint.h[a](g));
        }
      };
      pc.exit = function (a) {
        var b = A.current;
        if (null != b && (b.onExit.dispatch(a), b.onExit.canceled)) return;
        null != b && null != b.__window && b.__window.close();
      };
      pc.getTimer = function () {
        return window.performance.now() | 0;
      };
      pc.openURL = function (a, b) {
        null == b && (b = '_blank');
        null != a && window.open(a, b);
      };
      pc.__registerEntryPoint = function (a, b) {
        null == pc.__applicationEntryPoint &&
          (pc.__applicationEntryPoint = new Sa());
        pc.__applicationEntryPoint.h[a] = b;
      };
      pc.get_endianness = function () {
        if (null == pc.__endianness) {
          var a = new ArrayBuffer(2),
            b = null,
            d = null,
            f = null,
            g = null,
            k = null,
            l = (b =
              null != b
                ? new Uint8Array(b)
                : null != d
                  ? new Uint8Array(d)
                  : null != f
                    ? new Uint8Array(f.__array)
                    : null != g
                      ? new Uint8Array(g)
                      : null != a
                        ? null == k
                          ? new Uint8Array(a, 0)
                          : new Uint8Array(a, 0, k)
                        : null);
          k = g = f = d = b = null;
          b =
            null != b
              ? new Uint16Array(b)
              : null != d
                ? new Uint16Array(d)
                : null != f
                  ? new Uint16Array(f.__array)
                  : null != g
                    ? new Uint16Array(g)
                    : null != a
                      ? null == k
                        ? new Uint16Array(a, 0)
                        : new Uint16Array(a, 0, k)
                      : null;
          l[0] = 170;
          l[1] = 187;
          pc.__endianness = 43707 == b[0] ? Qi.BIG_ENDIAN : Qi.LITTLE_ENDIAN;
        }
        return pc.__endianness;
      };
      var oc = function (a) {
        this.onDisconnect = new wc();
        this.onButtonUp = new Ki();
        this.onButtonDown = new Ki();
        this.onAxisMove = new Mk();
        this.id = a;
        this.connected = !0;
      };
      h['lime.ui.Gamepad'] = oc;
      oc.__name__ = 'lime.ui.Gamepad';
      oc.__connect = function (a) {
        if (!oc.devices.h.hasOwnProperty(a)) {
          var b = new oc(a);
          oc.devices.h[a] = b;
          oc.onConnect.dispatch(b);
        }
      };
      oc.__disconnect = function (a) {
        var b = oc.devices.h[a];
        null != b && (b.connected = !1);
        oc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      oc.prototype = { __class__: oc };
      var jc = function (a) {
        this.onHatMove = new Kk();
        this.onDisconnect = new wc();
        this.onButtonUp = new df();
        this.onButtonDown = new df();
        this.onAxisMove = new Jk();
        this.id = a;
        this.connected = !0;
      };
      h['lime.ui.Joystick'] = jc;
      jc.__name__ = 'lime.ui.Joystick';
      jc.__connect = function (a) {
        if (!jc.devices.h.hasOwnProperty(a)) {
          var b = new jc(a);
          jc.devices.h[a] = b;
          jc.onConnect.dispatch(b);
        }
      };
      jc.__disconnect = function (a) {
        var b = jc.devices.h[a];
        null != b && (b.connected = !1);
        jc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      jc.__getDeviceData = function () {
        var a = null;
        try {
          a = navigator.getGamepads
            ? navigator.getGamepads()
            : navigator.webkitGetGamepads
              ? navigator.webkitGetGamepads()
              : null;
        } catch (b) {
          Na.lastError = b;
        }
        return a;
      };
      jc.prototype = { __class__: jc };
      var Xa = {
          __properties__: {
            get_shiftKey: 'get_shiftKey',
            get_metaKey: 'get_metaKey',
            get_ctrlKey: 'get_ctrlKey',
            get_altKey: 'get_altKey',
          },
          get_altKey: function (a) {
            return 0 >= (a & 256) ? 0 < (a & 512) : !0;
          },
          get_ctrlKey: function (a) {
            return 0 >= (a & 64) ? 0 < (a & 128) : !0;
          },
          get_metaKey: function (a) {
            return 0 >= (a & 1024) ? 0 < (a & 2048) : !0;
          },
          get_shiftKey: function (a) {
            return 0 >= (a & 1) ? 0 < (a & 2) : !0;
          },
        },
        Vb = (K['lime.ui.MouseCursor'] = {
          __ename__: 'lime.ui.MouseCursor',
          __constructs__: null,
          ARROW: {
            _hx_name: 'ARROW',
            _hx_index: 0,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          CROSSHAIR: {
            _hx_name: 'CROSSHAIR',
            _hx_index: 1,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          DEFAULT: {
            _hx_name: 'DEFAULT',
            _hx_index: 2,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          MOVE: {
            _hx_name: 'MOVE',
            _hx_index: 3,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          POINTER: {
            _hx_name: 'POINTER',
            _hx_index: 4,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_NESW: {
            _hx_name: 'RESIZE_NESW',
            _hx_index: 5,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_NS: {
            _hx_name: 'RESIZE_NS',
            _hx_index: 6,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_NWSE: {
            _hx_name: 'RESIZE_NWSE',
            _hx_index: 7,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_WE: {
            _hx_name: 'RESIZE_WE',
            _hx_index: 8,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          TEXT: {
            _hx_name: 'TEXT',
            _hx_index: 9,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          WAIT: {
            _hx_name: 'WAIT',
            _hx_index: 10,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          WAIT_ARROW: {
            _hx_name: 'WAIT_ARROW',
            _hx_index: 11,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          CUSTOM: {
            _hx_name: 'CUSTOM',
            _hx_index: 12,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
        });
      Vb.__constructs__ = [
        Vb.ARROW,
        Vb.CROSSHAIR,
        Vb.DEFAULT,
        Vb.MOVE,
        Vb.POINTER,
        Vb.RESIZE_NESW,
        Vb.RESIZE_NS,
        Vb.RESIZE_NWSE,
        Vb.RESIZE_WE,
        Vb.TEXT,
        Vb.WAIT,
        Vb.WAIT_ARROW,
        Vb.CUSTOM,
      ];
      var We = (K['lime.ui.MouseWheelMode'] = {
        __ename__: 'lime.ui.MouseWheelMode',
        __constructs__: null,
        PIXELS: {
          _hx_name: 'PIXELS',
          _hx_index: 0,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
        LINES: {
          _hx_name: 'LINES',
          _hx_index: 1,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
        PAGES: {
          _hx_name: 'PAGES',
          _hx_index: 2,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 3,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
      });
      We.__constructs__ = [We.PIXELS, We.LINES, We.PAGES, We.UNKNOWN];
      var Yb = function (a, b, d, f, g, k, l) {
        this.x = a;
        this.y = b;
        this.id = d;
        this.dx = f;
        this.dy = g;
        this.pressure = k;
        this.device = l;
      };
      h['lime.ui.Touch'] = Yb;
      Yb.__name__ = 'lime.ui.Touch';
      Yb.prototype = { __class__: Yb };
      var og = function (a, b) {
        this.clickCount = 0;
        this.onTextInput = new Ii();
        this.onTextEdit = new Lk();
        this.onRestore = new wc();
        this.onResize = new Hi();
        this.onRenderContextRestored = new Ji();
        this.onRenderContextLost = new wc();
        this.onRender = new Ji();
        this.onMove = new Sg();
        this.onMouseWheel = new Ik();
        this.onMouseUp = new Gk();
        this.onMouseMoveRelative = new Sg();
        this.onMouseMove = new Sg();
        this.onMouseDown = new Hk();
        this.onMinimize = new wc();
        this.onLeave = new wc();
        this.onKeyUp = new Li();
        this.onKeyDown = new Li();
        this.onFullscreen = new wc();
        this.onFocusOut = new wc();
        this.onFocusIn = new wc();
        this.onExpose = new wc();
        this.onEnter = new wc();
        this.onDropFile = new Ii();
        this.onDeactivate = new wc();
        this.onClose = new wc();
        this.onActivate = new wc();
        this.application = a;
        this.__attributes = null != b ? b : {};
        Object.prototype.hasOwnProperty.call(this.__attributes, 'parameters') &&
          (this.parameters = this.__attributes.parameters);
        this.__height = this.__width = 0;
        this.__fullscreen = !1;
        this.__scale = 1;
        this.__y = this.__x = 0;
        this.__title = Object.prototype.hasOwnProperty.call(
          this.__attributes,
          'title',
        )
          ? this.__attributes.title
          : '';
        this.id = -1;
        this.__backend = new Qa(this);
      };
      h['lime.ui.Window'] = og;
      og.__name__ = 'lime.ui.Window';
      og.prototype = {
        close: function () {
          this.__backend.close();
        },
        set_cursor: function (a) {
          return this.__backend.setCursor(a);
        },
        set_fullscreen: function (a) {
          return (this.__fullscreen = this.__backend.setFullscreen(a));
        },
        setTextInputRect: function (a) {
          return this.__backend.setTextInputRect(a);
        },
        __class__: og,
        __properties__: {
          set_fullscreen: 'set_fullscreen',
          set_cursor: 'set_cursor',
        },
      };
      var ce = function () {
        this.data = new Sa();
        this.paths = [];
      };
      h['lime.utils.AssetBundle'] = ce;
      ce.__name__ = 'lime.utils.AssetBundle';
      ce.fromBytes = function (a) {
        a = new Ei(a);
        return ce.__extractBundle(a);
      };
      ce.loadFromBytes = function (a) {
        return kc.withValue(ce.fromBytes(a));
      };
      ce.loadFromFile = function (a) {
        return zf.loadFromFile(a).then(ce.loadFromBytes);
      };
      ce.__extractBundle = function (a) {
        var b = Qg.readZip(a);
        a = new ce();
        for (b = b.h; null != b; ) {
          var d = b.item;
          b = b.next;
          if (d.compressed) {
            var f = a.data,
              g = d.fileName,
              k = zf.decompress(d.data, Ri.DEFLATE);
            f.h[g] = k;
          } else a.data.h[d.fileName] = d.data;
          a.paths.push(d.fileName);
        }
        return a;
      };
      ce.prototype = { __class__: ce };
      var Rk = function () {
        this.enabled = !0;
        this.audio = new Sa();
        this.font = new Sa();
        this.image = new Sa();
        this.version = 488193;
      };
      h['lime.utils.AssetCache'] = Rk;
      Rk.__name__ = 'lime.utils.AssetCache';
      Rk.prototype = {
        exists: function (a, b) {
          return (('IMAGE' == b || null == b) &&
            Object.prototype.hasOwnProperty.call(this.image.h, a)) ||
            (('FONT' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.font.h, a)) ||
            (('SOUND' == b || 'MUSIC' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.audio.h, a))
            ? !0
            : !1;
        },
        set: function (a, b, d) {
          switch (b) {
            case 'FONT':
              this.font.h[a] = d;
              break;
            case 'IMAGE':
              if (!(d instanceof Pb))
                throw Z.thrown(
                  'Cannot cache non-Image asset: ' + G.string(d) + ' as Image',
                );
              this.image.h[a] = d;
              break;
            case 'MUSIC':
            case 'SOUND':
              if (!(d instanceof xc))
                throw Z.thrown(
                  'Cannot cache non-AudioBuffer asset: ' +
                    G.string(d) +
                    ' as AudioBuffer',
                );
              this.audio.h[a] = d;
              break;
            default:
              throw Z.thrown(b + ' assets are not cachable');
          }
        },
        clear: function (a) {
          if (null == a)
            ((this.audio = new Sa()),
              (this.font = new Sa()),
              (this.image = new Sa()));
          else {
            var b = this.audio.h;
            b = Object.keys(b);
            for (var d = b.length, f = 0; f < d; ) {
              var g = b[f++];
              if (R.startsWith(g, a)) {
                var k = this.audio;
                Object.prototype.hasOwnProperty.call(k.h, g) && delete k.h[g];
              }
            }
            b = this.font.h;
            b = Object.keys(b);
            d = b.length;
            for (f = 0; f < d; )
              ((g = b[f++]),
                R.startsWith(g, a) &&
                  ((k = this.font),
                  Object.prototype.hasOwnProperty.call(k.h, g) &&
                    delete k.h[g]));
            b = this.image.h;
            b = Object.keys(b);
            d = b.length;
            for (f = 0; f < d; )
              ((g = b[f++]),
                R.startsWith(g, a) &&
                  ((k = this.image),
                  Object.prototype.hasOwnProperty.call(k.h, g) &&
                    delete k.h[g]));
          }
        },
        __class__: Rk,
      };
      var Mb = function () {
        this.types = new Sa();
        this.sizes = new Sa();
        this.preload = new Sa();
        this.paths = new Sa();
        this.pathGroups = new Sa();
        this.classTypes = new Sa();
        this.cachedText = new Sa();
        this.cachedImages = new Sa();
        this.cachedFonts = new Sa();
        this.cachedBytes = new Sa();
        this.cachedAudioBuffers = new Sa();
        this.onChange = new wc();
        this.bytesTotal = this.bytesLoaded = 0;
      };
      h['lime.utils.AssetLibrary'] = Mb;
      Mb.__name__ = 'lime.utils.AssetLibrary';
      Mb.fromBundle = function (a) {
        if (Object.prototype.hasOwnProperty.call(a.data.h, 'library.json')) {
          var b = ld.fromBytes(a.data.h['library.json']);
          if (null != b) {
            if (null == b.libraryType) var d = new Mb();
            else if (((d = h[b.libraryType]), null != d))
              d = ib.createInstance(d, b.libraryArgs);
            else
              return (
                Pa.warn('Could not find library type: ' + b.libraryType, {
                  fileName: 'lime/utils/AssetLibrary.hx',
                  lineNumber: 122,
                  className: 'lime.utils.AssetLibrary',
                  methodName: 'fromBundle',
                }),
                null
              );
            d.__fromBundle(a, b);
            return d;
          }
        } else return ((d = new Mb()), d.__fromBundle(a), d);
        return null;
      };
      Mb.fromManifest = function (a) {
        if (null == a) return null;
        if (null == a.libraryType) var b = new Mb();
        else if (((b = h[a.libraryType]), null != b))
          b = ib.createInstance(b, a.libraryArgs);
        else
          return (
            Pa.warn('Could not find library type: ' + a.libraryType, {
              fileName: 'lime/utils/AssetLibrary.hx',
              lineNumber: 160,
              className: 'lime.utils.AssetLibrary',
              methodName: 'fromManifest',
            }),
            null
          );
        b.__fromManifest(a);
        return b;
      };
      Mb.prototype = {
        exists: function (a, b) {
          b = null != b ? Fa.__cast(b, String) : null;
          a = this.types.h[a];
          return null == a ||
            (a != b &&
              (('SOUND' != b && 'MUSIC' != b) ||
                ('MUSIC' != a && 'SOUND' != a)) &&
              'BINARY' != b &&
              null != b &&
              ('BINARY' != a || 'TEXT' != b))
            ? !1
            : !0;
        },
        getAsset: function (a, b) {
          switch (b) {
            case 'BINARY':
              return this.getBytes(a);
            case 'FONT':
              return this.getFont(a);
            case 'IMAGE':
              return this.getImage(a);
            case 'MUSIC':
            case 'SOUND':
              return this.getAudioBuffer(a);
            case 'TEMPLATE':
              throw Z.thrown('Not sure how to get template: ' + a);
            case 'TEXT':
              return this.getText(a);
            default:
              throw Z.thrown('Unknown asset type: ' + b);
          }
        },
        getAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? this.cachedAudioBuffers.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? xc.fromBytes(
                  Fa.__cast(ib.createInstance(this.classTypes.h[a], []), yb),
                )
              : xc.fromFile(this.getPath(a));
        },
        getBytes: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
            return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = zf.ofString(this.cachedText.h[a]);
            return (this.cachedBytes.h[a] = b);
          }
          return Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? Fa.__cast(ib.createInstance(this.classTypes.h[a], []), yb)
            : zf.fromFile(this.getPath(a));
        },
        getFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? this.cachedFonts.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? Fa.__cast(ib.createInstance(this.classTypes.h[a], []), Bb)
              : Bb.fromFile(this.getPath(a));
        },
        getImage: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? this.cachedImages.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? Fa.__cast(ib.createInstance(this.classTypes.h[a], []), Pb)
              : Pb.fromFile(this.getPath(a));
        },
        getPath: function (a) {
          return Object.prototype.hasOwnProperty.call(this.paths.h, a)
            ? this.paths.h[a]
            : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
              ? this.pathGroups.h[a][0]
              : null;
        },
        getText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return this.cachedText.h[a];
          a = this.getBytes(a);
          return null == a ? null : a.getString(0, a.length);
        },
        isLocal: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a))
            return !0;
          b = Fa.__cast(b, String);
          if (null == b)
            return Object.prototype.hasOwnProperty.call(
              this.cachedBytes.h,
              a,
            ) ||
              Object.prototype.hasOwnProperty.call(this.cachedText.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a)
              ? !0
              : Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
          switch (b) {
            case 'FONT':
              return Object.prototype.hasOwnProperty.call(
                this.cachedFonts.h,
                a,
              );
            case 'IMAGE':
              return Object.prototype.hasOwnProperty.call(
                this.cachedImages.h,
                a,
              );
            case 'MUSIC':
            case 'SOUND':
              return Object.prototype.hasOwnProperty.call(
                this.cachedAudioBuffers.h,
                a,
              );
            default:
              return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? !0
                : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
          }
        },
        load: function () {
          if (this.loaded) return kc.withValue(this);
          if (null == this.promise) {
            this.promise = new sd();
            this.bytesLoadedCache = new Sa();
            this.assetsLoaded = 0;
            this.assetsTotal = 1;
            for (
              var a = Object.keys(this.preload.h), b = a.length, d = 0;
              d < b;

            ) {
              var f = a[d++];
              if (this.preload.h[f]) {
                Pa.verbose(
                  'Preloading asset: ' + f + ' [' + this.types.h[f] + ']',
                  {
                    fileName: 'lime/utils/AssetLibrary.hx',
                    lineNumber: 408,
                    className: 'lime.utils.AssetLibrary',
                    methodName: 'load',
                  },
                );
                var g = this.types.h[f];
                if (null != g)
                  switch (g) {
                    case 'BINARY':
                      this.assetsTotal++;
                      g = this.loadBytes(f);
                      g.onProgress(
                        (function (a, b) {
                          return function (d, f) {
                            b[0].load_onProgress(a[0], d, f);
                          };
                        })([f], [this]),
                      );
                      g.onError(
                        (function (a, b) {
                          return function (d) {
                            b[0].load_onError(a[0], d);
                          };
                        })([f], [this]),
                      );
                      g.onComplete(
                        (function (a, b) {
                          return function (d) {
                            b[0].loadBytes_onComplete(a[0], d);
                          };
                        })([f], [this]),
                      );
                      break;
                    case 'FONT':
                      this.assetsTotal++;
                      g = this.loadFont(f);
                      g.onProgress(
                        (function (a, b) {
                          return function (d, f) {
                            b[0].load_onProgress(a[0], d, f);
                          };
                        })([f], [this]),
                      );
                      g.onError(
                        (function (a, b) {
                          return function (d) {
                            b[0].load_onError(a[0], d);
                          };
                        })([f], [this]),
                      );
                      g.onComplete(
                        (function (a, b) {
                          return function (d) {
                            b[0].loadFont_onComplete(a[0], d);
                          };
                        })([f], [this]),
                      );
                      break;
                    case 'IMAGE':
                      this.assetsTotal++;
                      g = this.loadImage(f);
                      g.onProgress(
                        (function (a, b) {
                          return function (d, f) {
                            b[0].load_onProgress(a[0], d, f);
                          };
                        })([f], [this]),
                      );
                      g.onError(
                        (function (a, b) {
                          return function (d) {
                            b[0].load_onError(a[0], d);
                          };
                        })([f], [this]),
                      );
                      g.onComplete(
                        (function (a, b) {
                          return function (d) {
                            b[0].loadImage_onComplete(a[0], d);
                          };
                        })([f], [this]),
                      );
                      break;
                    case 'MUSIC':
                    case 'SOUND':
                      this.assetsTotal++;
                      g = this.loadAudioBuffer(f);
                      g.onProgress(
                        (function (a, b) {
                          return function (d, f) {
                            b[0].load_onProgress(a[0], d, f);
                          };
                        })([f], [this]),
                      );
                      g.onError(
                        (function (a, b) {
                          return function (d) {
                            b[0].loadAudioBuffer_onError(a[0], d);
                          };
                        })([f], [this]),
                      );
                      g.onComplete(
                        (function (a, b) {
                          return function (d) {
                            b[0].loadAudioBuffer_onComplete(a[0], d);
                          };
                        })([f], [this]),
                      );
                      break;
                    case 'TEXT':
                      (this.assetsTotal++,
                        (g = this.loadText(f)),
                        g.onProgress(
                          (function (a, b) {
                            return function (d, f) {
                              b[0].load_onProgress(a[0], d, f);
                            };
                          })([f], [this]),
                        ),
                        g.onError(
                          (function (a, b) {
                            return function (d) {
                              b[0].load_onError(a[0], d);
                            };
                          })([f], [this]),
                        ),
                        g.onComplete(
                          (function (a, b) {
                            return function (d) {
                              b[0].loadText_onComplete(a[0], d);
                            };
                          })([f], [this]),
                        ));
                  }
              }
            }
            this.__assetLoaded(null);
          }
          return this.promise.future;
        },
        loadAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? kc.withValue(this.cachedAudioBuffers.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? kc.withValue(
                  xc.fromBytes(
                    Fa.__cast(ib.createInstance(this.classTypes.h[a], []), yb),
                  ),
                )
              : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
                ? xc.loadFromFiles(this.pathGroups.h[a])
                : xc.loadFromFile(this.paths.h[a]);
        },
        loadBytes: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
            ? kc.withValue(this.cachedBytes.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? kc.withValue(ib.createInstance(this.classTypes.h[a], []))
              : zf.loadFromFile(this.getPath(a));
        },
        loadFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? kc.withValue(this.cachedFonts.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? ((a = ib.createInstance(this.classTypes.h[a], [])),
                a.__loadFromName(a.name))
              : Bb.loadFromName(this.getPath(a));
        },
        loadImage: function (a) {
          var b = this;
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? kc.withValue(this.cachedImages.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? kc.withValue(ib.createInstance(this.classTypes.h[a], []))
              : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? Pb.loadFromBytes(this.cachedBytes.h[a]).then(function (d) {
                    var f = b.cachedBytes;
                    Object.prototype.hasOwnProperty.call(f.h, a) &&
                      delete f.h[a];
                    b.cachedImages.h[a] = d;
                    return kc.withValue(d);
                  })
                : Pb.loadFromFile(this.getPath(a));
        },
        loadText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return kc.withValue(this.cachedText.h[a]);
          if (
            Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ||
            Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
          ) {
            var b = this.getBytes(a);
            if (null == b) return kc.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return kc.withValue(b);
          }
          return new ng().load(this.getPath(a));
        },
        unload: function () {
          this.cachedBytes.h = Object.create(null);
          this.cachedFonts.h = Object.create(null);
          this.cachedImages.h = Object.create(null);
          this.cachedAudioBuffers.h = Object.create(null);
          this.cachedText.h = Object.create(null);
        },
        __assetLoaded: function (a) {
          this.assetsLoaded++;
          null != a &&
            Pa.verbose(
              'Loaded asset: ' +
                a +
                ' [' +
                this.types.h[a] +
                '] (' +
                (this.assetsLoaded - 1) +
                '/' +
                (this.assetsTotal - 1) +
                ')',
              {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 637,
                className: 'lime.utils.AssetLibrary',
                methodName: '__assetLoaded',
              },
            );
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a)
              ? this.sizes.h[a]
              : 0;
            if (
              Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
            ) {
              var d = this.bytesLoadedCache.h[a];
              d < b && (this.bytesLoaded += b - d);
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b;
          }
          this.assetsLoaded < this.assetsTotal
            ? this.promise.progress(this.bytesLoaded, this.bytesTotal)
            : ((this.loaded = !0),
              this.promise.progress(this.bytesTotal, this.bytesTotal),
              this.promise.complete(this));
        },
        __cacheBreak: function (a) {
          return Aa.__cacheBreak(a);
        },
        __fromBundle: function (a, b) {
          if (null != b) {
            var d = 0;
            for (b = b.assets; d < b.length; ) {
              var f = b[d];
              ++d;
              var g = Object.prototype.hasOwnProperty.call(f, 'id')
                ? f.id
                : f.path;
              var k = a.data.h[f.path];
              if (Object.prototype.hasOwnProperty.call(f, 'type')) {
                var l = f.type;
                'TEXT' == l
                  ? (this.cachedText.h[g] = null != k ? G.string(k) : null)
                  : (this.cachedBytes.h[g] = k);
                this.types.h[g] = f.type;
              } else
                ((this.cachedBytes.h[g] = k), (this.types.h[g] = 'BINARY'));
            }
          } else
            for (d = 0, b = a.paths; d < b.length; )
              ((g = b[d]),
                ++d,
                (this.cachedBytes.h[g] = a.data.h[g]),
                (this.types.h[g] = 'BINARY'));
        },
        __fromManifest: function (a) {
          var b = 2 <= a.version,
            d = a.rootPath;
          null == d && (d = '');
          '' != d && (d += '/');
          for (var f = 0, g = a.assets; f < g.length; ) {
            var k = g[f];
            ++f;
            var l =
              b && Object.prototype.hasOwnProperty.call(k, 'size')
                ? k.size
                : 100;
            var u = Object.prototype.hasOwnProperty.call(k, 'id')
              ? k.id
              : k.path;
            if (Object.prototype.hasOwnProperty.call(k, 'path')) {
              var p = this.paths;
              var r = this.__cacheBreak(
                this.__resolvePath(d + G.string(N.field(k, 'path'))),
              );
              p.h[u] = r;
            }
            if (Object.prototype.hasOwnProperty.call(k, 'pathGroup')) {
              p = N.field(k, 'pathGroup');
              r = 0;
              for (var t = p.length; r < t; ) {
                var n = r++;
                p[n] = this.__cacheBreak(this.__resolvePath(d + p[n]));
              }
              this.pathGroups.h[u] = p;
            }
            this.sizes.h[u] = l;
            this.types.h[u] = k.type;
            Object.prototype.hasOwnProperty.call(k, 'preload') &&
              (this.preload.h[u] = N.field(k, 'preload'));
            Object.prototype.hasOwnProperty.call(k, 'className') &&
              ((l = N.field(k, 'className')),
              (l = h[l]),
              (this.classTypes.h[u] = l));
          }
          f = this.bytesTotal = 0;
          for (g = a.assets; f < g.length; )
            ((k = g[f]),
              ++f,
              (u = Object.prototype.hasOwnProperty.call(k, 'id')
                ? k.id
                : k.path),
              Object.prototype.hasOwnProperty.call(this.preload.h, u) &&
                this.preload.h[u] &&
                Object.prototype.hasOwnProperty.call(this.sizes.h, u) &&
                (this.bytesTotal += this.sizes.h[u]));
        },
        __resolvePath: function (a) {
          a = R.replace(a, '\\', '/');
          var b = a.indexOf(':');
          R.startsWith(a, 'http') && 0 < b
            ? ((b += 3),
              (a =
                M.substr(a, 0, b) + R.replace(M.substr(a, b, null), '//', '/')))
            : (a = R.replace(a, '//', '/'));
          if (-1 < a.indexOf('./')) {
            a = a.split('/');
            b = [];
            for (var d = 0, f = a.length; d < f; ) {
              var g = d++;
              '..' == a[g]
                ? 0 == g || '..' == b[g - 1]
                  ? b.push('..')
                  : b.pop()
                : '.' == a[g]
                  ? 0 == g && b.push('.')
                  : b.push(a[g]);
            }
            a = b.join('/');
          }
          return a;
        },
        loadAudioBuffer_onComplete: function (a, b) {
          this.cachedAudioBuffers.h[a] = b;
          if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
            for (
              var d = this.pathGroups.h[a],
                f = Object.keys(this.pathGroups.h),
                g = f.length,
                k = 0;
              k < g;

            ) {
              var l = f[k++];
              if (l != a)
                for (var u = 0; u < d.length; ) {
                  var p = d[u];
                  ++u;
                  if (-1 < this.pathGroups.h[l].indexOf(p)) {
                    this.cachedAudioBuffers.h[l] = b;
                    break;
                  }
                }
            }
          this.__assetLoaded(a);
        },
        loadAudioBuffer_onError: function (a, b) {
          null != b && '' != b
            ? Pa.warn('Could not load "' + a + '": ' + G.string(b), {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 883,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              })
            : Pa.warn('Could not load "' + a + '"', {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 887,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              });
          this.loadAudioBuffer_onComplete(a, new xc());
        },
        loadBytes_onComplete: function (a, b) {
          this.cachedBytes.h[a] = b;
          this.__assetLoaded(a);
        },
        loadFont_onComplete: function (a, b) {
          this.cachedFonts.h[a] = b;
          this.__assetLoaded(a);
        },
        loadImage_onComplete: function (a, b) {
          this.cachedImages.h[a] = b;
          this.__assetLoaded(a);
        },
        loadText_onComplete: function (a, b) {
          this.cachedText.h[a] = b;
          this.__assetLoaded(a);
        },
        load_onError: function (a, b) {
          null != b && '' != b
            ? this.promise.error(
                'Error loading asset "' + a + '": ' + G.string(b),
              )
            : this.promise.error('Error loading asset "' + a + '"');
        },
        load_onProgress: function (a, b, d) {
          if (0 < b) {
            var f = this.sizes.h[a];
            0 < d
              ? ((b /= d), 1 < b && (b = 1), (b = Math.floor(b * f)))
              : b > f && (b = f);
            Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
              ? ((f = this.bytesLoadedCache.h[a]),
                b != f && (this.bytesLoaded += b - f))
              : (this.bytesLoaded += b);
            this.bytesLoadedCache.h[a] = b;
            this.promise.progress(this.bytesLoaded, this.bytesTotal);
          }
        },
        __class__: Mb,
      };
      var ld = function () {
        this.assets = [];
        this.libraryArgs = [];
        this.version = 2;
      };
      h['lime.utils.AssetManifest'] = ld;
      ld.__name__ = 'lime.utils.AssetManifest';
      ld.fromBytes = function (a, b) {
        return null != a ? ld.parse(a.getString(0, a.length), b) : null;
      };
      ld.loadFromFile = function (a, b) {
        a = ld.__resolvePath(a);
        b = ld.__resolveRootPath(b, a);
        return null == a
          ? null
          : zf.loadFromFile(a).then(function (a) {
              return kc.withValue(ld.fromBytes(a, b));
            });
      };
      ld.parse = function (a, b) {
        if (null == a || '' == a) return null;
        a = JSON.parse(a);
        var d = new ld();
        Object.prototype.hasOwnProperty.call(a, 'name') && (d.name = a.name);
        Object.prototype.hasOwnProperty.call(a, 'libraryType') &&
          (d.libraryType = a.libraryType);
        Object.prototype.hasOwnProperty.call(a, 'libraryArgs') &&
          (d.libraryArgs = a.libraryArgs);
        if (Object.prototype.hasOwnProperty.call(a, 'assets')) {
          var f = a.assets;
          Object.prototype.hasOwnProperty.call(a, 'version') && 2 >= a.version
            ? (d.assets = bd.run(f))
            : (d.assets = f);
        }
        Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          (d.rootPath = a.rootPath);
        null != b &&
          '' != b &&
          (d.rootPath =
            null == d.rootPath || '' == d.rootPath ? b : b + '/' + d.rootPath);
        return d;
      };
      ld.__resolvePath = function (a) {
        if (null == a) return null;
        var b = a.indexOf('?');
        var d = -1 < b ? M.substr(a, 0, b) : a;
        for (d = R.replace(d, '\\', '/'); R.endsWith(d, '/'); )
          d = M.substr(d, 0, d.length - 1);
        return R.endsWith(d, '.bundle')
          ? -1 < b
            ? d + '/library.json' + M.substr(a, b, null)
            : d + '/library.json'
          : a;
      };
      ld.__resolveRootPath = function (a, b) {
        if (null != a) return a;
        a = b.indexOf('?');
        a = -1 < a ? M.substr(b, 0, a) : b;
        for (a = R.replace(a, '\\', '/'); R.endsWith(a, '/'); ) {
          if ('/' == a) return a;
          a = M.substr(a, 0, a.length - 1);
        }
        return R.endsWith(a, '.bundle') ? a : Ed.directory(a);
      };
      ld.prototype = { __class__: ld };
      var Aa = function () {};
      h['lime.utils.Assets'] = Aa;
      Aa.__name__ = 'lime.utils.Assets';
      Aa.exists = function (a, b) {
        null == b && (b = 'BINARY');
        var d = a.indexOf(':'),
          f = a.substring(0, d);
        a = a.substring(d + 1);
        f = Aa.getLibrary(f);
        return null != f ? f.exists(a, b) : !1;
      };
      Aa.getAsset = function (a, b, d) {
        if (d && Aa.cache.enabled)
          switch (b) {
            case 'FONT':
              var f = Aa.cache.font.h[a];
              if (null != f) return f;
              break;
            case 'IMAGE':
              f = Aa.cache.image.h[a];
              if (Aa.isValidImage(f)) return f;
              break;
            case 'MUSIC':
            case 'SOUND':
              f = Aa.cache.audio.h[a];
              if (Aa.isValidAudio(f)) return f;
              break;
            case 'TEMPLATE':
              throw Z.thrown('Not sure how to get template: ' + a);
            case 'BINARY':
            case 'TEXT':
              d = !1;
              break;
            default:
              return null;
          }
        var g = a.indexOf(':');
        f = a.substring(0, g);
        g = a.substring(g + 1);
        var k = Aa.getLibrary(f);
        if (null != k)
          if (k.exists(g, b)) {
            if (k.isLocal(g, b))
              return (
                (f = k.getAsset(g, b)),
                d && Aa.cache.enabled && Aa.cache.set(a, b, f),
                f
              );
            Pa.error(b + ' asset "' + a + '" exists, but only asynchronously', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 133,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
          } else
            Pa.error('There is no ' + b + ' asset with an ID of "' + a + '"', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 138,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
        else
          Pa.error(Aa.__libraryNotFound(f), {
            fileName: 'lime/utils/Assets.hx',
            lineNumber: 143,
            className: 'lime.utils.Assets',
            methodName: 'getAsset',
          });
        return null;
      };
      Aa.getBytes = function (a) {
        return Aa.getAsset(a, 'BINARY', !1);
      };
      Aa.getFont = function (a, b) {
        null == b && (b = !0);
        return Aa.getAsset(a, 'FONT', b);
      };
      Aa.getLibrary = function (a) {
        if (null == a || '' == a) a = 'default';
        return Aa.libraries.h[a];
      };
      Aa.getText = function (a) {
        return Aa.getAsset(a, 'TEXT', !1);
      };
      Aa.isLocal = function (a, b, d) {
        null == d && (d = !0);
        if (d && Aa.cache.enabled && Aa.cache.exists(a, b)) return !0;
        var f = a.indexOf(':');
        d = a.substring(0, f);
        a = a.substring(f + 1);
        d = Aa.getLibrary(d);
        return null != d ? d.isLocal(a, b) : !1;
      };
      Aa.isValidAudio = function (a) {
        return null != a;
      };
      Aa.isValidImage = function (a) {
        return null != a ? null != a.buffer : !1;
      };
      Aa.loadLibrary = function (a) {
        var b = new sd(),
          d = Aa.getLibrary(a);
        if (null != d) return d.load();
        d = a;
        var f = null;
        if (Object.prototype.hasOwnProperty.call(Aa.bundlePaths.h, a))
          ce.loadFromFile(Aa.bundlePaths.h[a])
            .onComplete(function (d) {
              null == d
                ? b.error('Cannot load bundle for library "' + a + '"')
                : ((d = Mb.fromBundle(d)),
                  null == d
                    ? b.error('Cannot open library "' + a + '"')
                    : ((Aa.libraries.h[a] = d),
                      d.onChange.add(((J = Aa.onChange), m(J, J.dispatch))),
                      b.completeWith(d.load())));
            })
            .onError(function (d) {
              b.error('There is no asset library with an ID of "' + a + '"');
            });
        else
          (Object.prototype.hasOwnProperty.call(Aa.libraryPaths.h, a)
            ? ((d = Aa.libraryPaths.h[a]), (f = Ed.directory(d)))
            : (R.endsWith(d, '.bundle')
                ? ((f = d), (d += '/library.json'))
                : (f = Ed.directory(d)),
              (d = Aa.__cacheBreak(d))),
            ld
              .loadFromFile(d, f)
              .onComplete(function (d) {
                null == d
                  ? b.error(
                      'Cannot parse asset manifest for library "' + a + '"',
                    )
                  : ((d = Mb.fromManifest(d)),
                    null == d
                      ? b.error('Cannot open library "' + a + '"')
                      : ((Aa.libraries.h[a] = d),
                        d.onChange.add(((J = Aa.onChange), m(J, J.dispatch))),
                        b.completeWith(d.load())));
              })
              .onError(function (d) {
                b.error('There is no asset library with an ID of "' + a + '"');
              }));
        return b.future;
      };
      Aa.registerLibrary = function (a, b) {
        if (null == a || '' == a) a = 'default';
        if (Object.prototype.hasOwnProperty.call(Aa.libraries.h, a)) {
          if (Aa.libraries.h[a] == b) return;
          Aa.unloadLibrary(a);
        }
        null != b && b.onChange.add(Aa.library_onChange);
        Aa.libraries.h[a] = b;
      };
      Aa.unloadLibrary = function (a) {
        Aa.removeLibrary(a, !0);
      };
      Aa.removeLibrary = function (a, b) {
        null == b && (b = !0);
        if (null == a || '' == a) a = 'default';
        var d = Aa.libraries.h[a];
        null != d &&
          (Aa.cache.clear(a + ':'),
          d.onChange.remove(Aa.library_onChange),
          b && d.unload());
        b = Aa.libraries;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
      };
      Aa.__cacheBreak = function (a) {
        0 < Aa.cache.version &&
          (a =
            -1 < a.indexOf('?')
              ? a + ('&' + Aa.cache.version)
              : a + ('?' + Aa.cache.version));
        return a;
      };
      Aa.__libraryNotFound = function (a) {
        if (null == a || '' == a) a = 'default';
        return null == A.current ||
          null == A.current.__preloader ||
          A.current.__preloader.complete
          ? 'There is no asset library named "' + a + '"'
          : 'There is no asset library named "' +
              a +
              '", or it is not yet preloaded';
      };
      Aa.library_onChange = function () {
        Aa.cache.clear();
        Aa.onChange.dispatch();
      };
      var Sk = function (a, b) {
        this.bytes = a;
        this.offset = b;
      };
      h['lime.utils.BytePointerData'] = Sk;
      Sk.__name__ = 'lime.utils.BytePointerData';
      Sk.prototype = { __class__: Sk };
      var zf = {
          _new: function (a, b) {
            return new yb(b);
          },
          decompress: function (a, b) {
            switch (b._hx_index) {
              case 0:
                return xl.decompress(a);
              case 1:
                return yl.decompress(a);
              case 2:
                return Al.decompress(a);
              case 3:
                return Bl.decompress(a);
            }
          },
          fromBytes: function (a) {
            return null == a ? null : zf._new(a.length, a.b.bufferValue);
          },
          fromFile: function (a) {
            return null;
          },
          loadFromFile: function (a) {
            return new Oi().load(a);
          },
          ofString: function (a) {
            a = yb.ofString(a);
            return zf._new(a.length, a.b.bufferValue);
          },
        },
        Ri = (K['lime.utils.CompressionAlgorithm'] = {
          __ename__: 'lime.utils.CompressionAlgorithm',
          __constructs__: null,
          DEFLATE: {
            _hx_name: 'DEFLATE',
            _hx_index: 0,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
          GZIP: {
            _hx_name: 'GZIP',
            _hx_index: 1,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
          LZMA: {
            _hx_name: 'LZMA',
            _hx_index: 2,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
          ZLIB: {
            _hx_name: 'ZLIB',
            _hx_index: 3,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
        });
      Ri.__constructs__ = [Ri.DEFLATE, Ri.GZIP, Ri.LZMA, Ri.ZLIB];
      var Tg = {
          toArrayBufferView: function (a) {
            return a;
          },
        },
        Pa = function () {};
      h['lime.utils.Log'] = Pa;
      Pa.__name__ = 'lime.utils.Log';
      Pa.level = null;
      Pa.debug = function (a, b) {
        4 <= Pa.level && console.debug('[' + b.className + '] ' + G.string(a));
      };
      Pa.error = function (a, b) {
        if (1 <= Pa.level) {
          a = '[' + b.className + '] ERROR: ' + G.string(a);
          if (Pa.throwErrors) throw Z.thrown(a);
          console.error(a);
        }
      };
      Pa.info = function (a, b) {
        3 <= Pa.level && console.info('[' + b.className + '] ' + G.string(a));
      };
      Pa.verbose = function (a, b) {
        5 <= Pa.level &&
          ((a = '[' + b.className + '] ' + G.string(a)), console.log(a));
      };
      Pa.warn = function (a, b) {
        2 <= Pa.level &&
          console.warn('[' + b.className + '] WARNING: ' + G.string(a));
      };
      var Qj = function () {
        this.bytesTotalCache = new Sa();
        this.bytesLoadedCache2 = new Sa();
        this.bytesLoadedCache = new za();
        this.onProgress = new Hi();
        this.onComplete = new wc();
        this.bytesTotal = this.bytesLoaded = 0;
        this.libraries = [];
        this.libraryNames = [];
        this.onProgress.add(m(this, this.update));
      };
      h['lime.utils.Preloader'] = Qj;
      Qj.__name__ = 'lime.utils.Preloader';
      Qj.prototype = {
        addLibrary: function (a) {
          this.libraries.push(a);
        },
        addLibraryName: function (a) {
          -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a);
        },
        load: function () {
          for (var a = this, b = 0, d = this.libraries; b < d.length; ) {
            var f = d[b];
            ++b;
            this.bytesTotal += f.bytesTotal;
          }
          this.loadedLibraries = -1;
          this.preloadStarted = !1;
          b = 0;
          for (d = this.libraries; b < d.length; )
            ((f = [d[b]]),
              ++b,
              Pa.verbose('Preloading asset library', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 134,
                className: 'lime.utils.Preloader',
                methodName: 'load',
              }),
              f[0]
                .load()
                .onProgress(
                  (function (b) {
                    return function (d, f) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + d
                          : a.bytesLoaded +
                            (d - a.bytesLoadedCache.h[b[0].__id__]);
                      a.bytesLoadedCache.set(b[0], d);
                      a.simulateProgress ||
                        a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                    };
                  })(f),
                )
                .onComplete(
                  (function (b) {
                    return function (d) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + b[0].bytesTotal
                          : a.bytesLoaded +
                            ((b[0].bytesTotal | 0) -
                              a.bytesLoadedCache.h[b[0].__id__]);
                      a.loadedAssetLibrary();
                    };
                  })(f),
                )
                .onError(
                  (function () {
                    return function (a) {
                      Pa.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 170,
                        className: 'lime.utils.Preloader',
                        methodName: 'load',
                      });
                    };
                  })(),
                ));
          b = 0;
          for (d = this.libraryNames; b < d.length; )
            (++b, (this.bytesTotal += 200));
          this.loadedLibraries++;
          this.preloadStarted = !0;
          this.updateProgress();
        },
        loadedAssetLibrary: function (a) {
          this.loadedLibraries++;
          var b = this.loadedLibraries;
          this.preloadStarted || ++b;
          var d = this.libraries.length + this.libraryNames.length;
          null != a
            ? Pa.verbose(
                'Loaded asset library: ' + a + ' [' + b + '/' + d + ']',
                {
                  fileName: 'lime/utils/Preloader.hx',
                  lineNumber: 197,
                  className: 'lime.utils.Preloader',
                  methodName: 'loadedAssetLibrary',
                },
              )
            : Pa.verbose('Loaded asset library [' + b + '/' + d + ']', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 201,
                className: 'lime.utils.Preloader',
                methodName: 'loadedAssetLibrary',
              });
          this.updateProgress();
        },
        start: function () {
          this.complete ||
            this.simulateProgress ||
            !this.preloadComplete ||
            ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {},
        updateProgress: function () {
          var a = this;
          this.simulateProgress ||
            this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
          if (
            this.loadedLibraries == this.libraries.length &&
            !this.initLibraryNames
          ) {
            this.initLibraryNames = !0;
            for (var b = 0, d = this.libraryNames; b < d.length; ) {
              var f = [d[b]];
              ++b;
              Pa.verbose('Preloading asset library: ' + f[0], {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 239,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              });
              Aa.loadLibrary(f[0])
                .onProgress(
                  (function (b) {
                    return function (d, f) {
                      0 < f &&
                        (Object.prototype.hasOwnProperty.call(
                          a.bytesTotalCache.h,
                          b[0],
                        ) ||
                          ((a.bytesTotalCache.h[b[0]] = f),
                          (a.bytesTotal += f - 200)),
                        d > f && (d = f),
                        Object.prototype.hasOwnProperty.call(
                          a.bytesLoadedCache2.h,
                          b[0],
                        )
                          ? (a.bytesLoaded += d - a.bytesLoadedCache2.h[b[0]])
                          : (a.bytesLoaded += d),
                        (a.bytesLoadedCache2.h[b[0]] = d),
                        a.simulateProgress ||
                          a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal));
                    };
                  })(f),
                )
                .onComplete(
                  (function (b) {
                    return function (d) {
                      d = 200;
                      Object.prototype.hasOwnProperty.call(
                        a.bytesTotalCache.h,
                        b[0],
                      ) && (d = a.bytesTotalCache.h[b[0]]);
                      Object.prototype.hasOwnProperty.call(
                        a.bytesLoadedCache2.h,
                        b[0],
                      )
                        ? (a.bytesLoaded += d - a.bytesLoadedCache2.h[b[0]])
                        : (a.bytesLoaded += d);
                      a.loadedAssetLibrary(b[0]);
                    };
                  })(f),
                )
                .onError(
                  (function () {
                    return function (a) {
                      Pa.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 293,
                        className: 'lime.utils.Preloader',
                        methodName: 'updateProgress',
                      });
                    };
                  })(),
                );
            }
          }
          this.simulateProgress ||
            this.loadedLibraries !=
              this.libraries.length + this.libraryNames.length ||
            (this.preloadComplete ||
              ((this.preloadComplete = !0),
              Pa.verbose('Preload complete', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 306,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              })),
            this.start());
        },
        __class__: Qj,
      };
      var Kd = function () {
        Yd.call(this);
      };
      h['msignal.Signal0'] = Kd;
      Kd.__name__ = 'msignal.Signal0';
      Kd.__super__ = Yd;
      Kd.prototype = w(Yd.prototype, {
        dispatch: function () {
          for (var a = this.slots; a.nonEmpty; )
            (a.head.execute(), (a = a.tail));
        },
        createSlot: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          return new Si(this, a, b, d);
        },
        __class__: Kd,
      });
      var Of = function (a, b) {
        Yd.call(this, [a, b]);
      };
      h['msignal.Signal2'] = Of;
      Of.__name__ = 'msignal.Signal2';
      Of.__super__ = Yd;
      Of.prototype = w(Yd.prototype, {
        dispatch: function (a, b) {
          for (var d = this.slots; d.nonEmpty; )
            (d.head.execute(a, b), (d = d.tail));
        },
        createSlot: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = !1);
          return new Ti(this, a, b, d);
        },
        __class__: Of,
      });
      var de = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = !1);
        this.signal = a;
        this.set_listener(b);
        this.once = d;
        this.priority = f;
        this.enabled = !0;
      };
      h['msignal.Slot'] = de;
      de.__name__ = 'msignal.Slot';
      de.prototype = {
        remove: function () {
          this.signal.remove(this.listener);
        },
        set_listener: function (a) {
          return (this.listener = a);
        },
        __class__: de,
        __properties__: { set_listener: 'set_listener' },
      };
      var Si = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = !1);
        de.call(this, a, b, d, f);
      };
      h['msignal.Slot0'] = Si;
      Si.__name__ = 'msignal.Slot0';
      Si.__super__ = de;
      Si.prototype = w(de.prototype, {
        execute: function () {
          this.enabled && (this.once && this.remove(), this.listener());
        },
        __class__: Si,
      });
      var wi = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = !1);
        de.call(this, a, b, d, f);
      };
      h['msignal.Slot1'] = wi;
      wi.__name__ = 'msignal.Slot1';
      wi.__super__ = de;
      wi.prototype = w(de.prototype, {
        execute: function (a) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param && (a = this.param),
            this.listener(a));
        },
        __class__: wi,
      });
      var Ti = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = !1);
        de.call(this, a, b, d, f);
      };
      h['msignal.Slot2'] = Ti;
      Ti.__name__ = 'msignal.Slot2';
      Ti.__super__ = de;
      Ti.prototype = w(de.prototype, {
        execute: function (a, b) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param1 && (a = this.param1),
            null != this.param2 && (b = this.param2),
            this.listener(a, b));
        },
        __class__: Ti,
      });
      var Ka = function () {};
      h['openfl.Lib'] = Ka;
      Ka.__name__ = 'openfl.Lib';
      Ka.__properties__ = { get_current: 'get_current' };
      Ka.getTimer = function () {
        return pc.getTimer();
      };
      Ka.getURL = function (a, b) {
        Ka.navigateToURL(a, b);
      };
      Ka.navigateToURL = function (a, b) {
        null == b && (b = '_blank');
        var d = a.url;
        if (ib.typeof(a.data) == C.TObject) {
          for (var f = '', g = N.fields(a.data), k = 0; k < g.length; ) {
            var l = g[k];
            ++k;
            0 < f.length && (f += '&');
            var u = encodeURIComponent(l) + '=';
            l = G.string(N.field(a.data, l));
            f += u + encodeURIComponent(l);
          }
          d = -1 < d.indexOf('?') ? d + ('&' + f) : d + ('?' + f);
        }
        pc.openURL(d, b);
      };
      Ka.setTimeout = function (a, b, d) {
        var f = ++Ka.__lastTimerID,
          g = Ka.__timers;
        b = wf.delay(function () {
          Ka.__timers.remove(f);
          if (
            null != Ka.get_current() &&
            null != Ka.get_current().stage &&
            Ka.get_current().stage.__uncaughtErrorEvents.__enabled
          )
            try {
              a.apply(a, null == d ? [] : d);
            } catch (l) {
              Na.lastError = l;
              var b = Z.caught(l).unwrap();
              Ka.get_current().stage.__handleError(b);
            }
          else a.apply(a, null == d ? [] : d);
        }, b);
        g.h[f] = b;
        return f;
      };
      Ka.get_current = function () {
        null == yc.current && (yc.current = new ef());
        return yc.current;
      };
      var Ee = function () {};
      h['openfl._Vector.IVector'] = Ee;
      Ee.__name__ = 'openfl._Vector.IVector';
      Ee.__isInterface__ = !0;
      Ee.prototype = { __class__: Ee };
      var Ui = function (a, b, d) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == d && (d = []);
        this.__array = d;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.BoolVector'] = Ui;
      Ui.__name__ = 'openfl._Vector.BoolVector';
      Ui.__interfaces__ = [Ee];
      Ui.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var d = b++;
                this.__array[d] = !1;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Ui,
        __properties__: { set_length: 'set_length' },
      };
      var qe = function (a, b, d, f) {
        null == f && (f = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (f) {
          if (((this.__array = []), null != d)) {
            f = 0;
            for (var g = d.length; f < g; ) {
              var k = f++;
              this.__array[k] = d[k];
            }
          }
        } else (null == d && (d = []), (this.__array = d));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.FloatVector'] = qe;
      qe.__name__ = 'openfl._Vector.FloatVector';
      qe.__interfaces__ = [Ee];
      qe.prototype = {
        concat: function (a) {
          return null == a
            ? new qe(0, !1, this.__array.slice())
            : 0 < a.__array.length
              ? new qe(0, !1, this.__array.concat(a.__array))
              : new qe(0, !1, this.__array.slice());
        },
        copy: function () {
          return new qe(0, this.fixed, this.__array.slice());
        },
        get: function (a) {
          return this.__array[a];
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (a != this.__array.length && !this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var d = b++;
                this.__array[d] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: qe,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Vi = function (a, b, d) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == d && (d = []);
        this.__array = d;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.FunctionVector'] = Vi;
      Vi.__name__ = 'openfl._Vector.FunctionVector';
      Vi.__interfaces__ = [Ee];
      Vi.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var d = b++;
                this.__array[d] = null;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Vi,
        __properties__: { set_length: 'set_length' },
      };
      var Fg = function (a, b, d) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == d && (d = []);
        this.__array = d;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.IntVector'] = Fg;
      Fg.__name__ = 'openfl._Vector.IntVector';
      Fg.__interfaces__ = [Ee];
      Fg.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        iterator: function () {
          return new cf(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var d = b++;
                this.__array[d] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Fg,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Nf = function (a, b, d, f) {
        null == f && (f = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (f) {
          if (((this.__array = []), null != d)) {
            f = 0;
            for (var g = d.length; f < g; ) {
              var k = f++;
              this.__array[k] = d[k];
            }
          }
        } else (null == d && (d = []), (this.__array = d));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.ObjectVector'] = Nf;
      Nf.__name__ = 'openfl._Vector.ObjectVector';
      Nf.__interfaces__ = [Ee];
      Nf.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        indexOf: function (a, b) {
          null == b && (b = 0);
          for (var d = this.__array.length; b < d; ) {
            var f = b++;
            if (this.__array[f] == a) return f;
          }
          return -1;
        },
        insertAt: function (a, b) {
          (!this.fixed || a < this.__array.length) &&
            this.__array.splice(a, 0, b);
        },
        iterator: function () {
          return new cf(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        removeAt: function (a) {
          return !this.fixed || a < this.__array.length
            ? this.__array.splice(a, 1)[0]
            : null;
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new Nf(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        unshift: function (a) {
          this.fixed || this.__array.unshift(a);
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b) for (; b < a; ) (b++, this.__array.push(null));
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Nf,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Vd = function () {};
      h['openfl.desktop.Clipboard'] = Vd;
      Vd.__name__ = 'openfl.desktop.Clipboard';
      Vd.__properties__ = { get_generalClipboard: 'get_generalClipboard' };
      Vd.__generalClipboard = null;
      Vd.get_generalClipboard = function () {
        null == Vd.__generalClipboard &&
          ((Vd.__generalClipboard = new Vd()),
          (Vd.__generalClipboard.__systemClipboard = !0));
        return Vd.__generalClipboard;
      };
      Vd.prototype = {
        setData: function (a, b, d) {
          if (this.__systemClipboard)
            switch (a) {
              case 0:
              case 1:
              case 2:
                return (
                  (a = b),
                  nc.set_text(null == a ? null : G.string(a)),
                  !0
                );
              default:
                return !1;
            }
          switch (a) {
            case 0:
              return (
                (a = b),
                (this.__htmlText = null == a ? null : G.string(a)),
                !0
              );
            case 1:
              return (
                (a = b),
                (this.__richText = null == a ? null : G.string(a)),
                !0
              );
            case 2:
              return (
                (a = b),
                (this.__text = null == a ? null : G.string(a)),
                !0
              );
            default:
              return !1;
          }
        },
        __class__: Vd,
      };
      var Cg = function () {
        A.call(this);
        null == yc.application && (yc.application = this);
        null == yc.current && (yc.current = new ef());
        yc.current.__loaderInfo = ee.create(null);
        yc.current.__loaderInfo.content = yc.current;
      };
      h['openfl.display.Application'] = Cg;
      Cg.__name__ = 'openfl.display.Application';
      Cg.__super__ = A;
      Cg.prototype = w(A.prototype, {
        createWindow: function (a) {
          var b = new Ug(this, a);
          this.__windows.push(b);
          this.__windowByID.h[b.id] = b;
          var d = this;
          b.onClose.add(
            function () {
              d.__onWindowClose(b);
            },
            !1,
            -1e4,
          );
          null == this.__window &&
            ((this.__window = b),
            b.onActivate.add(m(this, this.onWindowActivate)),
            b.onRenderContextLost.add(m(this, this.onRenderContextLost)),
            b.onRenderContextRestored.add(
              m(this, this.onRenderContextRestored),
            ),
            b.onDeactivate.add(m(this, this.onWindowDeactivate)),
            b.onDropFile.add(m(this, this.onWindowDropFile)),
            b.onEnter.add(m(this, this.onWindowEnter)),
            b.onExpose.add(m(this, this.onWindowExpose)),
            b.onFocusIn.add(m(this, this.onWindowFocusIn)),
            b.onFocusOut.add(m(this, this.onWindowFocusOut)),
            b.onFullscreen.add(m(this, this.onWindowFullscreen)),
            b.onKeyDown.add(m(this, this.onKeyDown)),
            b.onKeyUp.add(m(this, this.onKeyUp)),
            b.onLeave.add(m(this, this.onWindowLeave)),
            b.onMinimize.add(m(this, this.onWindowMinimize)),
            b.onMouseDown.add(m(this, this.onMouseDown)),
            b.onMouseMove.add(m(this, this.onMouseMove)),
            b.onMouseMoveRelative.add(m(this, this.onMouseMoveRelative)),
            b.onMouseUp.add(m(this, this.onMouseUp)),
            b.onMouseWheel.add(m(this, this.onMouseWheel)),
            b.onMove.add(m(this, this.onWindowMove)),
            b.onRender.add(m(this, this.render)),
            b.onResize.add(m(this, this.onWindowResize)),
            b.onRestore.add(m(this, this.onWindowRestore)),
            b.onTextEdit.add(m(this, this.onTextEdit)),
            b.onTextInput.add(m(this, this.onTextInput)),
            this.onWindowCreate());
          this.onCreateWindow.dispatch(b);
          return b;
        },
        exec: function () {
          return A.prototype.exec.call(this);
        },
        __checkForAllWindowsClosed: function () {
          0 < this.__windows.length ||
            A.prototype.__checkForAllWindowsClosed.call(this);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (yc.application == this && (yc.application = null),
            A.prototype.__onModuleExit.call(this, a));
        },
        __class__: Cg,
      });
      var Hg = function (a, b, d) {
        null == d && (d = !1);
        da.call(this);
        this.__drawableType = 2;
        this.__bitmapData = a;
        this.pixelSnapping = b;
        this.smoothing = d;
        null == b && (this.pixelSnapping = 1);
      };
      h['openfl.display.Bitmap'] = Hg;
      Hg.__name__ = 'openfl.display.Bitmap';
      Hg.__super__ = da;
      Hg.prototype = w(da.prototype, {
        __enterFrame: function (a) {
          null == this.__bitmapData ||
            null == this.__bitmapData.image ||
            this.__bitmapData.image.version == this.__imageVersion ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var d = ja.__pool.get();
          null != this.__bitmapData
            ? d.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height)
            : d.setTo(0, 0, 0, 0);
          d.__transform(d, b);
          a.__expand(d.x, d.y, d.width, d.height);
          ja.__pool.release(d);
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (
            !k.get_visible() ||
            this.__isMask ||
            null == this.__bitmapData ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var l = this.__renderTransform,
            u = l.a * l.d - l.b * l.c;
          d = 0 == u ? -l.tx : (1 / u) * (l.c * (l.ty - b) + l.d * (a - l.tx));
          l = this.__renderTransform;
          u = l.a * l.d - l.b * l.c;
          a = 0 == u ? -l.ty : (1 / u) * (l.a * (b - l.ty) + l.b * (l.tx - a));
          if (
            0 < d &&
            0 < a &&
            d <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
          ) {
            if (null != this.__scrollRect && !this.__scrollRect.contains(d, a))
              return !1;
            null == f || g || f.push(k);
            return !0;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          if (null == this.__bitmapData) return !1;
          this.__getRenderTransform();
          var d = this.__renderTransform,
            f = d.a * d.d - d.b * d.c,
            g =
              0 == f ? -d.tx : (1 / f) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          d = this.__renderTransform;
          f = d.a * d.d - d.b * d.c;
          a = 0 == f ? -d.ty : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a));
          return 0 < g &&
            0 < a &&
            g <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
            ? !0
            : !1;
        },
        get_bitmapData: function () {
          return this.__bitmapData;
        },
        set_height: function (a) {
          null != this.__bitmapData
            ? this.set_scaleY(a / this.__bitmapData.height)
            : this.set_scaleY(0);
          return a;
        },
        set_width: function (a) {
          null != this.__bitmapData
            ? this.set_scaleX(a / this.__bitmapData.width)
            : this.set_scaleX(0);
          return a;
        },
        __class__: Hg,
        __properties__: w(da.prototype.__properties__, {
          get_bitmapData: 'get_bitmapData',
        }),
      });
      var Tb = function (a, b, d, f) {
        null == f && (f = -1);
        null == d && (d = !0);
        this.__drawableType = 0;
        this.transparent = d;
        null == a && (a = 0);
        null == b && (b = 0);
        0 > a && (a = 0);
        0 > b && (b = 0);
        this.width = a;
        this.height = b;
        this.rect = new ja(0, 0, a, b);
        this.__textureWidth = a;
        this.__textureHeight = b;
        0 < a &&
          0 < b &&
          (d
            ? 0 == (f & -16777216) && (f = 0)
            : (f = -16777216 | (f & 16777215)),
          (this.image = new Pb(
            null,
            0,
            0,
            a,
            b,
            (f << 8) | ((f >>> 24) & 255),
          )),
          this.image.set_transparent(d),
          (this.readable = this.__isValid = !0));
        this.__renderTransform = new qa();
        this.__worldAlpha = 1;
        this.__worldTransform = new qa();
        this.__worldColorTransform = new Ib();
        this.__renderable = !0;
      };
      h['openfl.display.BitmapData'] = Tb;
      Tb.__name__ = 'openfl.display.BitmapData';
      Tb.__interfaces__ = [va];
      Tb.fromCanvas = function (a, b) {
        null == b && (b = !0);
        if (null == a) return null;
        var d = new Tb(0, 0, b, 0);
        d.__fromImage(Pb.fromCanvas(a));
        d.image.set_transparent(b);
        return d;
      };
      Tb.prototype = {
        colorTransform: function (a, b) {
          this.readable &&
            this.image.colorTransform(
              a.__toLimeRectangle(),
              b.__toLimeColorMatrix(),
            );
        },
        copyPixels: function (a, b, d, f, g, k) {
          null == k && (k = !1);
          this.readable &&
            null != a &&
            (null != g &&
              ((Tb.__tempVector.x = g.x), (Tb.__tempVector.y = g.y)),
            this.image.copyPixels(
              a.image,
              b.__toLimeRectangle(),
              d.__toLimeVector2(),
              null != f ? f.image : null,
              null != g ? Tb.__tempVector : null,
              k,
            ));
        },
        dispose: function () {
          this.image = null;
          this.height = this.width = 0;
          this.rect = null;
          this.readable = this.__isValid = !1;
          this.__textureContext =
            this.__texture =
            this.__framebufferContext =
            this.__framebuffer =
            this.__vertexBuffer =
            this.__surface =
              null;
        },
        draw: function (a, b, d, f, g, k) {
          null == k && (k = !1);
          if (null != a) {
            var l = !0,
              u = null;
            a instanceof da &&
              ((u = Fa.__cast(a, da)),
              u.get_visible() || ((l = !1), u.set_visible(!0)));
            a.__update(!1, !0);
            var p = qa.__pool.get();
            p.copyFrom(a.__renderTransform);
            p.invert();
            null != b && p.concat(b);
            b = null;
            null != g && ((b = qa.__pool.get()), b.copyFrom(p), b.invert());
            var h = new Ib();
            h.__copyFrom(a.__worldColorTransform);
            h.__invert();
            if (this.readable || null == Ka.get_current().stage.context3D) {
              if (null != d) {
                var r = ja.__pool.get(),
                  n = qa.__pool.get();
                a.__getBounds(r, n);
                var t = Math.ceil(r.width),
                  q = Math.ceil(r.height);
                n.tx = -r.x;
                n.ty = -r.y;
                t = new Tb(t, q, !0, 0);
                t.draw(a, n);
                t.colorTransform(t.rect, d);
                t.__renderTransform.identity();
                t.__renderTransform.tx = r.x;
                t.__renderTransform.ty = r.y;
                t.__renderTransform.concat(a.__renderTransform);
                t.__worldAlpha = a.__worldAlpha;
                t.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                a = t;
                ja.__pool.release(r);
                qa.__pool.release(n);
              }
              Ha.convertToCanvas(this.image);
              d = new Fe(this.image.buffer.__srcContext);
              d.__allowSmoothing = k;
              d.__overrideBlendMode = f;
              d.__worldTransform = p;
              d.__worldAlpha = 1 / a.__worldAlpha;
              d.__worldColorTransform = h;
              null != g && d.__pushMaskRect(g, b);
              this.__drawCanvas(a, d);
            } else
              (null == this.__textureContext &&
                (this.__textureContext = A.current.__window.context),
                null != d && h.__combine(d),
                (d = new Ua(Ka.get_current().stage.context3D, this)),
                (d.__allowSmoothing = k),
                (d.__pixelRatio = Ka.get_current().stage.window.__scale),
                (d.__overrideBlendMode = f),
                (d.__worldTransform = p),
                (d.__worldAlpha = 1 / a.__worldAlpha),
                (d.__worldColorTransform = h),
                d.__resize(this.width, this.height),
                null != g && d.__pushMaskRect(g, b),
                this.__drawGL(a, d));
            null != g && (d.__popMaskRect(), qa.__pool.release(b));
            qa.__pool.release(p);
            null == u || l || u.set_visible(!1);
          }
        },
        encode: function (a, b, d) {
          if (!this.readable || null == a) return null;
          null == d && (d = new Ic(0));
          var f = this.image;
          if (!a.equals(this.rect)) {
            var g = qa.__pool.get();
            g.tx = Math.round(-a.x);
            g.ty = Math.round(-a.y);
            a = new Tb(Math.ceil(a.width), Math.ceil(a.height), !0, 0);
            a.draw(this, g);
            f = a.image;
            qa.__pool.release(g);
          }
          return b instanceof mi
            ? (d.writeBytes(Cd.fromBytes(f.encode(Mi.PNG)), 0, 0), d)
            : b instanceof Wi
              ? (d.writeBytes(
                  Cd.fromBytes(f.encode(Mi.JPEG, Fa.__cast(b, Wi).quality)),
                  0,
                  0,
                ),
                d)
              : null;
        },
        fillRect: function (a, b) {
          this.__fillRect(a, b, !0);
        },
        getIndexBuffer: function (a, b) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context ||
            (null != b && null == this.__indexBufferGrid) ||
            (null != this.__indexBufferGrid &&
              !this.__indexBufferGrid.equals(b))
          ) {
            this.__indexBufferContext = a.__context;
            this.__indexBuffer = null;
            if (null != b) {
              null == this.__indexBufferGrid &&
                (this.__indexBufferGrid = new ja());
              this.__indexBufferGrid.copyFrom(b);
              var d = b.width;
              b = b.height;
              0 != d && 0 != b
                ? ((this.__indexBufferData = new Uint16Array(54)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 0),
                  (this.__indexBufferData[8] = 5),
                  (this.__indexBufferData[9] = 5),
                  (this.__indexBufferData[10] = 0),
                  (this.__indexBufferData[11] = 2),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 4),
                  (this.__indexBufferData[14] = 7),
                  (this.__indexBufferData[15] = 7),
                  (this.__indexBufferData[16] = 4),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBufferData[18] = 8),
                  (this.__indexBufferData[19] = 9),
                  (this.__indexBufferData[20] = 0),
                  (this.__indexBufferData[21] = 0),
                  (this.__indexBufferData[22] = 9),
                  (this.__indexBufferData[23] = 1),
                  (this.__indexBufferData[24] = 10),
                  (this.__indexBufferData[25] = 8),
                  (this.__indexBufferData[26] = 4),
                  (this.__indexBufferData[27] = 4),
                  (this.__indexBufferData[28] = 8),
                  (this.__indexBufferData[29] = 0),
                  (this.__indexBufferData[30] = 11),
                  (this.__indexBufferData[31] = 10),
                  (this.__indexBufferData[32] = 6),
                  (this.__indexBufferData[33] = 6),
                  (this.__indexBufferData[34] = 10),
                  (this.__indexBufferData[35] = 4),
                  (this.__indexBufferData[36] = 12),
                  (this.__indexBufferData[37] = 13),
                  (this.__indexBufferData[38] = 8),
                  (this.__indexBufferData[39] = 8),
                  (this.__indexBufferData[40] = 13),
                  (this.__indexBufferData[41] = 9),
                  (this.__indexBufferData[42] = 14),
                  (this.__indexBufferData[43] = 12),
                  (this.__indexBufferData[44] = 10),
                  (this.__indexBufferData[45] = 10),
                  (this.__indexBufferData[46] = 12),
                  (this.__indexBufferData[47] = 8),
                  (this.__indexBufferData[48] = 15),
                  (this.__indexBufferData[49] = 14),
                  (this.__indexBufferData[50] = 11),
                  (this.__indexBufferData[51] = 11),
                  (this.__indexBufferData[52] = 14),
                  (this.__indexBufferData[53] = 10),
                  (this.__indexBuffer = a.createIndexBuffer(54)))
                : 0 == d && 0 != b
                  ? ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 5),
                    (this.__indexBufferData[8] = 0),
                    (this.__indexBufferData[9] = 0),
                    (this.__indexBufferData[10] = 5),
                    (this.__indexBufferData[11] = 1),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 7),
                    (this.__indexBufferData[14] = 4),
                    (this.__indexBufferData[15] = 4),
                    (this.__indexBufferData[16] = 7),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)))
                  : 0 != d &&
                    0 == b &&
                    ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 0),
                    (this.__indexBufferData[8] = 5),
                    (this.__indexBufferData[9] = 5),
                    (this.__indexBufferData[10] = 0),
                    (this.__indexBufferData[11] = 2),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 4),
                    (this.__indexBufferData[14] = 7),
                    (this.__indexBufferData[15] = 7),
                    (this.__indexBufferData[16] = 4),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)));
            } else this.__indexBufferGrid = null;
            null == this.__indexBuffer &&
              ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBuffer = a.createIndexBuffer(6)));
            this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
          }
          return this.__indexBuffer;
        },
        getVertexBuffer: function (a, b, d) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            (null != b && null == this.__vertexBufferGrid) ||
            (null != this.__vertexBufferGrid &&
              !this.__vertexBufferGrid.equals(b)) ||
            (null != d &&
              (this.__vertexBufferWidth != d.get_width() ||
                this.__vertexBufferHeight != d.get_height() ||
                this.__vertexBufferScaleX != d.get_scaleX() ||
                this.__vertexBufferScaleY != d.get_scaleY()))
          ) {
            this.__uvRect = new ja(0, 0, this.width, this.height);
            this.__vertexBufferContext = a.__context;
            this.__vertexBuffer = null;
            null != d &&
              ((this.__vertexBufferWidth = d.get_width()),
              (this.__vertexBufferHeight = d.get_height()),
              (this.__vertexBufferScaleX = d.get_scaleX()),
              (this.__vertexBufferScaleY = d.get_scaleY()));
            if (null != b && null != d) {
              null == this.__vertexBufferGrid &&
                (this.__vertexBufferGrid = new ja());
              this.__vertexBufferGrid.copyFrom(b);
              this.__vertexBufferWidth = d.get_width();
              this.__vertexBufferHeight = d.get_height();
              this.__vertexBufferScaleX = d.get_scaleX();
              this.__vertexBufferScaleY = d.get_scaleY();
              var f = b.width,
                g = b.height;
              if (0 != f && 0 != g) {
                this.__vertexBufferData = new Float32Array(224);
                var k = b.x,
                  l = b.y,
                  u = this.width - f - k,
                  p = this.height - g - l;
                b = k / this.width;
                var h = l / this.height;
                f /= this.width;
                g /= this.height;
                k /= d.get_scaleX();
                l /= d.get_scaleY();
                u /= d.get_scaleX();
                var r = p / d.get_scaleY();
                p = d.get_width() / d.get_scaleX() - k - u;
                u = d.get_height() / d.get_scaleY() - l - r;
                this.__vertexBufferData[0] = k;
                this.__vertexBufferData[1] = l;
                this.__vertexBufferData[3] = 1 * b;
                this.__vertexBufferData[4] = 1 * h;
                this.__vertexBufferData[15] = l;
                this.__vertexBufferData[18] = 1 * h;
                this.__vertexBufferData[28] = k;
                this.__vertexBufferData[31] = 1 * b;
                this.__vertexBufferData[56] = k + p;
                this.__vertexBufferData[57] = l;
                this.__vertexBufferData[59] = 1 * (b + f);
                this.__vertexBufferData[60] = 1 * h;
                this.__vertexBufferData[70] = k + p;
                this.__vertexBufferData[73] = 1 * (b + f);
                this.__vertexBufferData[84] = this.width;
                this.__vertexBufferData[85] = l;
                this.__vertexBufferData[87] = 1;
                this.__vertexBufferData[88] = 1 * h;
                this.__vertexBufferData[98] = this.width;
                this.__vertexBufferData[101] = 1;
                this.__vertexBufferData[112] = k;
                this.__vertexBufferData[113] = l + u;
                this.__vertexBufferData[115] = 1 * b;
                this.__vertexBufferData[116] = 1 * (h + g);
                this.__vertexBufferData[127] = l + u;
                this.__vertexBufferData[130] = 1 * (h + g);
                this.__vertexBufferData[140] = k + p;
                this.__vertexBufferData[141] = l + u;
                this.__vertexBufferData[143] = 1 * (b + f);
                this.__vertexBufferData[144] = 1 * (h + g);
                this.__vertexBufferData[154] = this.width;
                this.__vertexBufferData[155] = l + u;
                this.__vertexBufferData[157] = 1;
                this.__vertexBufferData[158] = 1 * (h + g);
                this.__vertexBufferData[168] = k;
                this.__vertexBufferData[169] = this.height;
                this.__vertexBufferData[171] = 1 * b;
                this.__vertexBufferData[172] = 1;
                this.__vertexBufferData[183] = this.height;
                this.__vertexBufferData[186] = 1;
                this.__vertexBufferData[196] = k + p;
                this.__vertexBufferData[197] = this.height;
                this.__vertexBufferData[199] = 1 * (b + f);
                this.__vertexBufferData[200] = 1;
                this.__vertexBufferData[210] = this.width;
                this.__vertexBufferData[211] = this.height;
                this.__vertexBufferData[213] = 1;
                this.__vertexBufferData[214] = 1;
                this.__vertexBuffer = a.createVertexBuffer(16, 14);
              } else
                0 == f && 0 != g
                  ? ((this.__vertexBufferData = new Float32Array(112)),
                    (l = b.y),
                    (p = this.height - g - l),
                    (h = l / this.height),
                    (g /= this.height),
                    (l /= d.get_scaleY()),
                    (r = p / d.get_scaleY()),
                    (u = d.get_height() / d.get_scaleY() - l - r),
                    (d = d.get_width() / d.get_scaleX()),
                    (this.__vertexBufferData[0] = d),
                    (this.__vertexBufferData[1] = l),
                    (this.__vertexBufferData[3] = 1),
                    (this.__vertexBufferData[4] = 1 * h),
                    (this.__vertexBufferData[15] = l),
                    (this.__vertexBufferData[18] = 1 * h),
                    (this.__vertexBufferData[28] = d),
                    (this.__vertexBufferData[31] = 1),
                    (this.__vertexBufferData[56] = d),
                    (this.__vertexBufferData[57] = l + u),
                    (this.__vertexBufferData[59] = 1),
                    (this.__vertexBufferData[60] = 1 * (h + g)),
                    (this.__vertexBufferData[71] = l + u),
                    (this.__vertexBufferData[74] = 1 * (h + g)),
                    (this.__vertexBufferData[84] = d),
                    (this.__vertexBufferData[85] = this.height),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[99] = this.height),
                    (this.__vertexBufferData[102] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)))
                  : 0 == g &&
                    0 != f &&
                    ((this.__vertexBufferData = new Float32Array(112)),
                    (k = b.x),
                    (u = this.width - f - k),
                    (b = k / this.width),
                    (f /= this.width),
                    (k /= d.get_scaleX()),
                    (u /= d.get_scaleX()),
                    (p = d.get_width() / d.get_scaleX() - k - u),
                    (d = d.get_height() / d.get_scaleY()),
                    (this.__vertexBufferData[0] = k),
                    (this.__vertexBufferData[1] = d),
                    (this.__vertexBufferData[3] = 1 * b),
                    (this.__vertexBufferData[4] = 1),
                    (this.__vertexBufferData[15] = d),
                    (this.__vertexBufferData[18] = 1),
                    (this.__vertexBufferData[28] = k),
                    (this.__vertexBufferData[31] = 1 * b),
                    (this.__vertexBufferData[56] = k + p),
                    (this.__vertexBufferData[57] = d),
                    (this.__vertexBufferData[59] = 1 * (b + f)),
                    (this.__vertexBufferData[60] = 1),
                    (this.__vertexBufferData[70] = k + p),
                    (this.__vertexBufferData[73] = 1 * (b + f)),
                    (this.__vertexBufferData[84] = this.width),
                    (this.__vertexBufferData[85] = d),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[98] = this.width),
                    (this.__vertexBufferData[101] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)));
            } else this.__vertexBufferGrid = null;
            null == this.__vertexBuffer &&
              ((this.__vertexBufferData = new Float32Array(56)),
              (this.__vertexBufferData[0] = this.width),
              (this.__vertexBufferData[1] = this.height),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[15] = this.height),
              (this.__vertexBufferData[18] = 1),
              (this.__vertexBufferData[28] = this.width),
              (this.__vertexBufferData[31] = 1),
              (this.__vertexBuffer = a.createVertexBuffer(3, 14)));
            this.__vertexBuffer.uploadFromTypedArray(
              Tg.toArrayBufferView(this.__vertexBufferData),
            );
          }
          return this.__vertexBuffer;
        },
        getPixel: function (a, b) {
          return this.readable ? this.image.getPixel(a, b, 1) : 0;
        },
        getTexture: function (a) {
          if (!this.__isValid) return null;
          if (null == this.__texture || this.__textureContext != a.__context)
            ((this.__textureContext = a.__context),
              (this.__texture = a.createRectangleTexture(
                this.width,
                this.height,
                1,
                !1,
              )),
              (this.__textureVersion = -1));
          Ha.sync(this.image, !1);
          null != this.image &&
            this.image.version > this.__textureVersion &&
            (null != this.__surface && dm.flush(this.__surface),
            (a = this.image),
            vb.__supportsBGRA ||
              0 == a.get_format() ||
              ((a = a.clone()), a.set_format(0)),
            this.__texture.__uploadFromImage(a),
            (this.__textureVersion = this.image.version),
            (this.__textureWidth = a.buffer.width),
            (this.__textureHeight = a.buffer.height));
          this.readable ||
            null == this.image ||
            (this.image = this.__surface = null);
          return this.__texture;
        },
        setPixel: function (a, b, d) {
          this.readable && this.image.setPixel(a, b, d, 1);
        },
        __drawCanvas: function (a, b) {
          var d = this.image.buffer;
          b.__allowSmoothing || b.applySmoothing(d.__srcContext, !1);
          b.__render(a);
          b.__allowSmoothing || b.applySmoothing(d.__srcContext, !0);
          d.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
          d.__srcImageData = null;
          d.data = null;
          this.image.dirty = !0;
          this.image.version++;
        },
        __drawGL: function (a, b) {
          var d = b.__context3D,
            f = d.__state.renderToTexture,
            g = d.__state.renderToTextureDepthStencil,
            k = d.__state.renderToTextureAntiAlias,
            l = d.__state.renderToTextureSurfaceSelector;
          d.setRenderToTexture(this.getTexture(d), !0);
          b.__render(a);
          null != f
            ? d.setRenderToTexture(f, g, k, l)
            : d.setRenderToBackBuffer();
        },
        __fillRect: function (a, b, d) {
          if (null != a)
            if (
              (this.transparent && 0 == (b & -16777216) && (b = 0),
              d &&
                null != this.__texture &&
                null != this.__texture.__glFramebuffer &&
                'opengl' == Ka.get_current().stage.__renderer.__type)
            ) {
              d = Ka.get_current().stage.__renderer.__context3D;
              var f = !this.rect.equals(a),
                g = d.__state.renderToTexture,
                k = d.__state.renderToTextureDepthStencil,
                l = d.__state.renderToTextureAntiAlias,
                u = d.__state.renderToTextureSurfaceSelector;
              d.setRenderToTexture(this.__texture);
              f && d.setScissorRectangle(a);
              d.clear(
                ((b >>> 16) & 255) / 255,
                ((b >>> 8) & 255) / 255,
                (b & 255) / 255,
                this.transparent ? ((b >>> 24) & 255) / 255 : 1,
                0,
                0,
                1,
              );
              f && d.setScissorRectangle(null);
              null != g
                ? d.setRenderToTexture(g, k, l, u)
                : d.setRenderToBackBuffer();
            } else
              this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1);
        },
        __fromImage: function (a) {
          null != a &&
            null != a.buffer &&
            ((this.image = a),
            (this.width = a.width),
            (this.height = a.height),
            (this.rect = new ja(0, 0, a.width, a.height)),
            (this.__textureWidth = this.width),
            (this.__textureHeight = this.height),
            (this.__isValid = this.readable = !0));
        },
        __getBounds: function (a, b) {
          var d = ja.__pool.get();
          this.rect.__transform(d, b);
          a.__expand(d.x, d.y, d.width, d.height);
          ja.__pool.release(d);
        },
        __setUVRect: function (a, b, d, f, g) {
          if (
            null != this.getVertexBuffer(a) &&
            (f != this.__uvRect.width ||
              g != this.__uvRect.height ||
              b != this.__uvRect.x ||
              d != this.__uvRect.y)
          ) {
            null == this.__uvRect && (this.__uvRect = new ja());
            this.__uvRect.setTo(b, d, f, g);
            a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
            d = 0 < this.__textureHeight ? d / this.__textureHeight : 0;
            b = 0 < this.__textureWidth ? f / this.__textureWidth : 0;
            var k = 0 < this.__textureHeight ? g / this.__textureHeight : 0;
            this.__vertexBufferData[0] = f;
            this.__vertexBufferData[1] = g;
            this.__vertexBufferData[3] = a + b;
            this.__vertexBufferData[4] = d + k;
            this.__vertexBufferData[15] = g;
            this.__vertexBufferData[17] = a;
            this.__vertexBufferData[18] = d + k;
            this.__vertexBufferData[28] = f;
            this.__vertexBufferData[31] = a + b;
            this.__vertexBufferData[32] = d;
            this.__vertexBufferData[45] = a;
            this.__vertexBufferData[46] = d;
            this.__vertexBuffer.uploadFromTypedArray(
              Tg.toArrayBufferView(this.__vertexBufferData),
            );
          }
        },
        __update: function (a, b) {
          this.__updateTransforms();
        },
        __updateTransforms: function (a) {
          null == a
            ? this.__worldTransform.identity()
            : this.__worldTransform.copyFrom(a);
          this.__renderTransform.copyFrom(this.__worldTransform);
        },
        __class__: Tb,
      };
      var hd = function () {
        ka.call(this);
        this.__allowSmoothing = !0;
        this.__pixelRatio = 1;
        this.__tempColorTransform = new Ib();
        this.__worldAlpha = 1;
      };
      h['openfl.display.DisplayObjectRenderer'] = hd;
      hd.__name__ = 'openfl.display.DisplayObjectRenderer';
      hd.__super__ = ka;
      hd.prototype = w(ka.prototype, {
        __clear: function () {},
        __getAlpha: function (a) {
          return a * this.__worldAlpha;
        },
        __popMaskObject: function (a, b) {},
        __pushMaskObject: function (a, b) {},
        __render: function (a) {},
        __renderEvent: function (a) {
          if (null != a.__customRenderEvent && a.__renderable) {
            a.__customRenderEvent.allowSmoothing = this.__allowSmoothing;
            a.__customRenderEvent.objectMatrix.copyFrom(a.__renderTransform);
            a.__customRenderEvent.objectColorTransform.__copyFrom(
              a.__worldColorTransform,
            );
            a.__customRenderEvent.renderer = this;
            switch (this.__type) {
              case 'cairo':
                a.__customRenderEvent.type = 'renderCairo';
                break;
              case 'canvas':
                a.__customRenderEvent.type = 'renderCanvas';
                break;
              case 'dom':
                a.__customRenderEvent.type =
                  null != a.stage && a.__worldVisible
                    ? 'renderDOM'
                    : 'clearDOM';
                break;
              case 'opengl':
                this.__cleared || this.__clear();
                this.setShader(a.__worldShader);
                this.__context3D.__flushGL();
                a.__customRenderEvent.type = 'renderOpenGL';
                break;
              default:
                return;
            }
            this.__setBlendMode(a.__worldBlendMode);
            this.__pushMaskObject(a);
            a.dispatchEvent(a.__customRenderEvent);
            this.__popMaskObject(a);
            'opengl' == this.__type && this.setViewport();
          }
        },
        __resize: function (a, b) {},
        __setBlendMode: function (a) {},
        __shouldCacheHardware: function (a, b) {
          if (null == a) return null;
          switch (a.__drawableType) {
            case 4:
            case 5:
              if (1 == b) return !0;
              b = this.__shouldCacheHardware_DisplayObject(a, b);
              if (1 == b) return !0;
              if (null != a.__children) {
                var d = 0;
                for (a = a.__children; d < a.length; ) {
                  var f = a[d];
                  ++d;
                  b = this.__shouldCacheHardware_DisplayObject(f, b);
                  if (1 == b) return !0;
                }
              }
              return b;
            case 7:
              return 1 == b ? !0 : !1;
            case 9:
              return !0;
            default:
              return this.__shouldCacheHardware_DisplayObject(a, b);
          }
        },
        __shouldCacheHardware_DisplayObject: function (a, b) {
          return 1 == b || null != a.__filters
            ? !0
            : 0 == b || (null != a.__graphics && !Kb.isCompatible(a.__graphics))
              ? !1
              : null;
        },
        __updateCacheBitmap: function (a, b) {
          if (null == a) return !1;
          switch (a.__drawableType) {
            case 2:
              var d = a;
              if (
                null == d.__bitmapData ||
                (null == d.__filters &&
                  'opengl' == this.__type &&
                  null == d.__cacheBitmap)
              )
                return !1;
              b =
                null != d.__bitmapData.image &&
                d.__bitmapData.image.version != d.__imageVersion;
              break;
            case 7:
              var f = a;
              if (
                null == f.__filters &&
                'opengl' == this.__type &&
                null == f.__cacheBitmap &&
                !f.__domRender
              )
                return !1;
              b && (f.__renderDirty = !0);
              b = b || f.__dirty;
              break;
            case 9:
              if (
                null == a.__filters &&
                'opengl' == this.__type &&
                null == a.__cacheBitmap
              )
                return !1;
          }
          if (a.__isCacheBitmapRender) return !1;
          f = Ib.__pool.get();
          f.__copyFrom(a.__worldColorTransform);
          null != this.__worldColorTransform &&
            f.__combine(this.__worldColorTransform);
          var g = !1;
          if (
            a.get_cacheAsBitmap() ||
            ('opengl' != this.__type && !f.__isDefault(!0))
          ) {
            g = null;
            var k =
                (b =
                  null == a.__cacheBitmap ||
                  (a.__renderDirty &&
                    (b || (null != a.__children && 0 < a.__children.length))) ||
                  a.opaqueBackground != a.__cacheBitmapBackground) ||
                (null != a.__graphics && a.__graphics.__softwareDirty) ||
                !a.__cacheBitmapColorTransform.__equals(f, !0),
              l = b || (null != a.__graphics && a.__graphics.__hardwareDirty),
              u = this.__type;
            if (k || l)
              ('opengl' == u &&
                0 == this.__shouldCacheHardware(a, null) &&
                (u = 'canvas'),
                !k || ('canvas' != u && 'cairo' != u) || (b = !0),
                l && 'opengl' == u && (b = !0));
            k =
              b || !a.__cacheBitmap.__worldTransform.equals(a.__worldTransform);
            d = null != a.__filters;
            if ('dom' == this.__type && !d) return !1;
            if (d && !b)
              for (var p = 0, h = a.__filters; p < h.length; ) {
                var r = h[p];
                ++p;
                if (r.__renderDirty) {
                  b = !0;
                  break;
                }
              }
            null == a.__cacheBitmapMatrix && (a.__cacheBitmapMatrix = new qa());
            p =
              null != a.__cacheAsBitmapMatrix
                ? a.__cacheAsBitmapMatrix
                : a.__renderTransform;
            b ||
              (p.a == a.__cacheBitmapMatrix.a &&
                p.b == a.__cacheBitmapMatrix.b &&
                p.c == a.__cacheBitmapMatrix.c &&
                p.d == a.__cacheBitmapMatrix.d) ||
              (b = !0);
            !b &&
              'opengl' != this.__type &&
              null != a.__cacheBitmapData &&
              null != a.__cacheBitmapData.image &&
              a.__cacheBitmapData.image.version <
                a.__cacheBitmapData.__textureVersion &&
              (b = !0);
            if (!b)
              for (l = a; null != l; ) {
                if (null != l.get_scrollRect()) {
                  k = !0;
                  break;
                }
                l = l.parent;
              }
            a.__cacheBitmapMatrix.copyFrom(p);
            a.__cacheBitmapMatrix.tx = 0;
            var n = (l = a.__cacheBitmapMatrix.ty = 0),
              t = 0,
              q = 0,
              E = (r = 0);
            h = this.__pixelRatio;
            if (k || b)
              ((g = ja.__pool.get()),
                a.__getFilterBounds(g, a.__cacheBitmapMatrix),
                (t = 0 < g.width ? Math.ceil((g.width + 1) * h) : 0),
                (q = 0 < g.height ? Math.ceil((g.height + 1) * h) : 0),
                (r = 0 < g.x ? Math.ceil(g.x) : Math.floor(g.x)),
                (E = 0 < g.y ? Math.ceil(g.y) : Math.floor(g.y)),
                null != a.__cacheBitmapData
                  ? t > a.__cacheBitmapData.width ||
                    q > a.__cacheBitmapData.height
                    ? ((l = Math.ceil(
                        Math.max(1.25 * t, a.__cacheBitmapData.width),
                      )),
                      (n = Math.ceil(
                        Math.max(1.25 * q, a.__cacheBitmapData.height),
                      )),
                      (b = !0))
                    : ((l = a.__cacheBitmapData.width),
                      (n = a.__cacheBitmapData.height))
                  : ((l = t), (n = q)));
            if (b)
              if (
                ((k = !0),
                (a.__cacheBitmapBackground = a.opaqueBackground),
                0.5 <= t && 0.5 <= q)
              ) {
                var m = null != a.opaqueBackground && (l != t || n != q),
                  C =
                    null != a.opaqueBackground
                      ? -16777216 | a.opaqueBackground
                      : 0,
                  x = m ? 0 : C,
                  y = 'opengl' == this.__type;
                null == a.__cacheBitmapData ||
                l > a.__cacheBitmapData.width ||
                n > a.__cacheBitmapData.height
                  ? ((a.__cacheBitmapData = new Tb(l, n, !0, x)),
                    null == a.__cacheBitmap && (a.__cacheBitmap = new Hg()),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null))
                  : a.__cacheBitmapData.__fillRect(
                      a.__cacheBitmapData.rect,
                      x,
                      y,
                    );
                m &&
                  (g.setTo(0, 0, t, q),
                  a.__cacheBitmapData.__fillRect(g, C, y));
              } else
                return (
                  Ib.__pool.release(f),
                  (a.__cacheBitmap = null),
                  (a.__cacheBitmapData = null),
                  (a.__cacheBitmapData2 = null),
                  (a.__cacheBitmapData3 = null),
                  (a.__cacheBitmapRenderer = null),
                  7 == a.__drawableType &&
                    ((f = a),
                    null != f.__cacheBitmap &&
                      ((f.__cacheBitmap.__renderTransform.tx -=
                        f.__offsetX * h),
                      (f.__cacheBitmap.__renderTransform.ty -=
                        f.__offsetY * h))),
                  !0
                );
            else
              ((a.__cacheBitmapData = a.__cacheBitmap.get_bitmapData()),
                (a.__cacheBitmapData2 = null),
                (a.__cacheBitmapData3 = null));
            if (k || b)
              (a.__cacheBitmap.__worldTransform.copyFrom(a.__worldTransform),
                p == a.__renderTransform
                  ? (a.__cacheBitmap.__renderTransform.identity(),
                    a.__cacheBitmap.__renderTransform.scale(1 / h, 1 / h),
                    (a.__cacheBitmap.__renderTransform.tx =
                      a.__renderTransform.tx + r),
                    (a.__cacheBitmap.__renderTransform.ty =
                      a.__renderTransform.ty + E))
                  : (a.__cacheBitmap.__renderTransform.copyFrom(
                      a.__cacheBitmapMatrix,
                    ),
                    a.__cacheBitmap.__renderTransform.invert(),
                    a.__cacheBitmap.__renderTransform.concat(
                      a.__renderTransform,
                    ),
                    (a.__cacheBitmap.__renderTransform.a *= 1 / h),
                    (a.__cacheBitmap.__renderTransform.d *= 1 / h),
                    (a.__cacheBitmap.__renderTransform.tx += r),
                    (a.__cacheBitmap.__renderTransform.ty += E)));
            a.__cacheBitmap.smoothing = this.__allowSmoothing;
            a.__cacheBitmap.__renderable = a.__renderable;
            a.__cacheBitmap.__worldAlpha = a.__worldAlpha;
            a.__cacheBitmap.__worldBlendMode = a.__worldBlendMode;
            a.__cacheBitmap.__worldShader = a.__worldShader;
            a.__cacheBitmap.set_mask(a.__mask);
            if (b) {
              if (
                null == a.__cacheBitmapRenderer ||
                u != a.__cacheBitmapRenderer.__type
              )
                ('opengl' == u
                  ? (a.__cacheBitmapRenderer = new Ua(
                      Fa.__cast(this, Ua).__context3D,
                      a.__cacheBitmapData,
                    ))
                  : (null == a.__cacheBitmapData.image &&
                      ((a.__cacheBitmapData = new Tb(
                        l,
                        n,
                        !0,
                        null != a.opaqueBackground
                          ? -16777216 | a.opaqueBackground
                          : 0,
                      )),
                      (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData)),
                    Ha.convertToCanvas(a.__cacheBitmapData.image),
                    (a.__cacheBitmapRenderer = new Fe(
                      a.__cacheBitmapData.image.buffer.__srcContext,
                    ))),
                  (a.__cacheBitmapRenderer.__worldTransform = new qa()),
                  (a.__cacheBitmapRenderer.__worldColorTransform = new Ib()));
              null == a.__cacheBitmapColorTransform &&
                (a.__cacheBitmapColorTransform = new Ib());
              a.__cacheBitmapRenderer.__stage = a.stage;
              a.__cacheBitmapRenderer.__allowSmoothing = this.__allowSmoothing;
              a.__cacheBitmapRenderer.__setBlendMode(10);
              a.__cacheBitmapRenderer.__worldAlpha = 1 / a.__worldAlpha;
              a.__cacheBitmapRenderer.__worldTransform.copyFrom(
                a.__renderTransform,
              );
              a.__cacheBitmapRenderer.__worldTransform.invert();
              a.__cacheBitmapRenderer.__worldTransform.concat(
                a.__cacheBitmapMatrix,
              );
              a.__cacheBitmapRenderer.__worldTransform.tx -= r;
              a.__cacheBitmapRenderer.__worldTransform.ty -= E;
              a.__cacheBitmapRenderer.__worldTransform.scale(h, h);
              a.__cacheBitmapRenderer.__pixelRatio = h;
              a.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(f);
              a.__cacheBitmapRenderer.__worldColorTransform.__invert();
              a.__isCacheBitmapRender = !0;
              if ('opengl' == a.__cacheBitmapRenderer.__type) {
                m = a.__cacheBitmapRenderer;
                C = m.__context3D;
                x = C.__state.renderToTexture;
                y = C.__state.renderToTextureDepthStencil;
                var z = C.__state.renderToTextureAntiAlias,
                  P = C.__state.renderToTextureSurfaceSelector,
                  B = this.__blendMode;
                this.__suspendClipAndMask();
                m.__copyShader(this);
                a.__cacheBitmapData.__setUVRect(C, 0, 0, t, q);
                m.__setRenderTarget(a.__cacheBitmapData);
                null != a.__cacheBitmapData.image &&
                  (a.__cacheBitmapData.__textureVersion =
                    a.__cacheBitmapData.image.version + 1);
                a.__cacheBitmapData.__drawGL(a, m);
                if (d) {
                  var K = !1;
                  p = 0;
                  for (h = a.__filters; p < h.length; )
                    ((r = h[p]), ++p, r.__preserveObject && (K = !0));
                  d = a.__cacheBitmapData;
                  E = null;
                  null == a.__cacheBitmapData2 ||
                  l > a.__cacheBitmapData2.width ||
                  n > a.__cacheBitmapData2.height
                    ? (a.__cacheBitmapData2 = new Tb(l, n, !0, 0))
                    : (a.__cacheBitmapData2.fillRect(
                        a.__cacheBitmapData2.rect,
                        0,
                      ),
                      null != a.__cacheBitmapData2.image &&
                        (a.__cacheBitmapData2.__textureVersion =
                          a.__cacheBitmapData2.image.version + 1));
                  a.__cacheBitmapData2.__setUVRect(C, 0, 0, t, q);
                  u = a.__cacheBitmapData2;
                  K &&
                    (null == a.__cacheBitmapData3 ||
                    l > a.__cacheBitmapData3.width ||
                    n > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new Tb(l, n, !0, 0))
                      : (a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                        null != a.__cacheBitmapData3.image &&
                          (a.__cacheBitmapData3.__textureVersion =
                            a.__cacheBitmapData3.image.version + 1)),
                    a.__cacheBitmapData3.__setUVRect(C, 0, 0, t, q),
                    (E = a.__cacheBitmapData3));
                  m.__setBlendMode(10);
                  m.__worldAlpha = 1;
                  m.__worldTransform.identity();
                  m.__worldColorTransform.__identity();
                  p = 0;
                  for (h = a.__filters; p < h.length; ) {
                    r = h[p];
                    ++p;
                    r.__preserveObject &&
                      (m.__setRenderTarget(E),
                      m.__renderFilterPass(
                        d,
                        m.__defaultDisplayShader,
                        r.__smooth,
                      ));
                    n = 0;
                    for (t = r.__numShaderPasses; n < t; )
                      ((l = n++),
                        (l = r.__initShader(
                          m,
                          l,
                          r.__preserveObject ? E : null,
                        )),
                        m.__setBlendMode(r.__shaderBlendMode),
                        m.__setRenderTarget(u),
                        m.__renderFilterPass(d, l, r.__smooth),
                        (l = d),
                        (d = u),
                        (u = l));
                    r.__renderDirty = !1;
                  }
                  a.__cacheBitmap.__bitmapData = d;
                }
                this.__blendMode = 10;
                this.__setBlendMode(B);
                this.__copyShader(m);
                null != x
                  ? C.setRenderToTexture(x, y, z, P)
                  : C.setRenderToBackBuffer();
                this.__resumeClipAndMask(m);
                this.setViewport();
                a.__cacheBitmapColorTransform.__copyFrom(f);
              } else {
                a.__cacheBitmapData.__drawCanvas(a, a.__cacheBitmapRenderer);
                if (d) {
                  K = t = !1;
                  p = 0;
                  for (h = a.__filters; p < h.length; )
                    ((r = h[p]),
                      ++p,
                      r.__needSecondBitmapData && (t = !0),
                      r.__preserveObject && (K = !0));
                  d = a.__cacheBitmapData;
                  E = null;
                  t
                    ? (null == a.__cacheBitmapData2 ||
                      null == a.__cacheBitmapData2.image ||
                      l > a.__cacheBitmapData2.width ||
                      n > a.__cacheBitmapData2.height
                        ? (a.__cacheBitmapData2 = new Tb(l, n, !0, 0))
                        : a.__cacheBitmapData2.fillRect(
                            a.__cacheBitmapData2.rect,
                            0,
                          ),
                      (u = a.__cacheBitmapData2))
                    : (u = d);
                  K &&
                    (null == a.__cacheBitmapData3 ||
                    null == a.__cacheBitmapData3.image ||
                    l > a.__cacheBitmapData3.width ||
                    n > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new Tb(l, n, !0, 0))
                      : a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                    (E = a.__cacheBitmapData3));
                  null == a.__tempPoint && (a.__tempPoint = new I());
                  n = a.__tempPoint;
                  p = 0;
                  for (h = a.__filters; p < h.length; )
                    ((r = h[p]),
                      ++p,
                      r.__preserveObject && E.copyPixels(d, d.rect, n),
                      (l = r.__applyFilter(u, d, d.rect, n)),
                      r.__preserveObject &&
                        l.draw(
                          E,
                          null,
                          null != a.__objectTransform
                            ? a.__objectTransform.__colorTransform
                            : null,
                        ),
                      (r.__renderDirty = !1),
                      t && l == u && ((l = d), (d = u), (u = l)));
                  a.__cacheBitmapData != d &&
                    ((l = a.__cacheBitmapData),
                    (a.__cacheBitmapData = d),
                    (a.__cacheBitmapData2 = l),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null));
                  a.__cacheBitmap.__imageVersion =
                    a.__cacheBitmapData.__textureVersion;
                }
                a.__cacheBitmapColorTransform.__copyFrom(f);
                a.__cacheBitmapColorTransform.__isDefault(!0) ||
                  ((a.__cacheBitmapColorTransform.alphaMultiplier = 1),
                  a.__cacheBitmapData.colorTransform(
                    a.__cacheBitmapData.rect,
                    a.__cacheBitmapColorTransform,
                  ));
              }
              a.__isCacheBitmapRender = !1;
            }
            (k || b) && ja.__pool.release(g);
            g = k;
          } else
            null != a.__cacheBitmap &&
              ('dom' == this.__type &&
                this.__renderDrawableClear(a.__cacheBitmap),
              (a.__cacheBitmap = null),
              (a.__cacheBitmapData = null),
              (a.__cacheBitmapData2 = null),
              (a.__cacheBitmapData3 = null),
              (a.__cacheBitmapColorTransform = null),
              (a.__cacheBitmapRenderer = null),
              (g = !0));
          Ib.__pool.release(f);
          g &&
            7 == a.__drawableType &&
            ((f = a),
            null != f.__cacheBitmap &&
              ((f.__cacheBitmap.__renderTransform.tx -= f.__offsetX),
              (f.__cacheBitmap.__renderTransform.ty -= f.__offsetY)));
          return g;
        },
        __class__: hd,
      });
      var Xi = function (a) {
        hd.call(this);
      };
      h['openfl.display.CairoRenderer'] = Xi;
      Xi.__name__ = 'openfl.display.CairoRenderer';
      Xi.__super__ = hd;
      Xi.prototype = w(hd.prototype, {
        applyMatrix: function (a, b) {
          null == b && (b = this.cairo);
          this.__matrix.copyFrom(a);
          this.cairo == b &&
            null != this.__worldTransform &&
            this.__matrix.concat(this.__worldTransform);
          this.__matrix3[0] = this.__matrix.a;
          this.__matrix3[1] = this.__matrix.b;
          this.__matrix3[3] = this.__matrix.c;
          this.__matrix3[4] = this.__matrix.d;
          this.__roundPixels
            ? ((this.__matrix3[6] = Math.round(this.__matrix.tx)),
              (this.__matrix3[7] = Math.round(this.__matrix.ty)))
            : ((this.__matrix3[6] = this.__matrix.tx),
              (this.__matrix3[7] = this.__matrix.ty));
          b.set_matrix(this.__matrix3);
        },
        __clear: function () {
          if (
            null != this.cairo &&
            (this.cairo.identityMatrix(),
            null != this.__stage && this.__stage.__clearBeforeRender)
          ) {
            var a = this.__blendMode;
            this.__setBlendMode(10);
            this.cairo.setSourceRGB(
              this.__stage.__colorSplit[0],
              this.__stage.__colorSplit[1],
              this.__stage.__colorSplit[2],
            );
            this.cairo.paint();
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.cairo.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.cairo.restore();
        },
        __pushMask: function (a) {
          this.cairo.save();
          this.applyMatrix(a.__renderTransform, this.cairo);
          this.cairo.newPath();
          this.__renderDrawableMask(a);
          this.cairo.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.cairo.save();
          this.applyMatrix(b, this.cairo);
          this.cairo.newPath();
          this.cairo.rectangle(a.x, a.y, a.width, a.height);
          this.cairo.clip();
        },
        __render: function (a) {
          null != this.cairo && this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 6:
                !a.__renderable ||
                  0 >= a.__worldAlpha ||
                  null == a.__currentState ||
                  (this.__pushMaskObject(a),
                  this.__renderDrawable(a.__currentState),
                  this.__popMaskObject(a),
                  this.__renderEvent(a));
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                this.cairo.rectangle(0, 0, a.get_width(), a.get_height());
                break;
              case 6:
                this.__renderDrawableMask(a.__currentState);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a), this.__setBlendModeCairo(this.cairo, a));
        },
        __setBlendModeCairo: function (a, b) {
          switch (b) {
            case 0:
              a.setOperator(12);
              break;
            case 2:
              a.setOperator(17);
              break;
            case 3:
              a.setOperator(23);
              break;
            case 5:
              a.setOperator(21);
              break;
            case 7:
              a.setOperator(2);
              break;
            case 8:
              a.setOperator(18);
              break;
            case 9:
              a.setOperator(14);
              break;
            case 11:
              a.setOperator(16);
              break;
            case 12:
              a.setOperator(15);
              break;
            default:
              a.setOperator(2);
          }
        },
        __class__: Xi,
      });
      var Fe = function (a) {
        hd.call(this);
        this.context = a;
        this.__tempMatrix = new qa();
        this.__type = 'canvas';
      };
      h['openfl.display.CanvasRenderer'] = Fe;
      Fe.__name__ = 'openfl.display.CanvasRenderer';
      Fe.__super__ = hd;
      Fe.prototype = w(hd.prototype, {
        applySmoothing: function (a, b) {
          a.imageSmoothingEnabled = b;
        },
        setTransform: function (a, b) {
          null == b
            ? (b = this.context)
            : this.context == b &&
              null != this.__worldTransform &&
              (this.__tempMatrix.copyFrom(a),
              this.__tempMatrix.concat(this.__worldTransform),
              (a = this.__tempMatrix));
          this.__roundPixels
            ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0)
            : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
        },
        __clear: function () {
          if (null != this.__stage) {
            var a = this.__blendMode;
            this.__blendMode = null;
            this.__setBlendMode(10);
            this.context.setTransform(1, 0, 0, 1, 0, 0);
            this.context.globalAlpha = 1;
            !this.__stage.__transparent && this.__stage.__clearBeforeRender
              ? ((this.context.fillStyle = this.__stage.__colorString),
                this.context.fillRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                ))
              : this.__stage.__transparent &&
                this.__stage.__clearBeforeRender &&
                this.context.clearRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                );
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.context.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.context.restore();
        },
        __pushMask: function (a) {
          this.context.save();
          this.setTransform(a.__renderTransform, this.context);
          this.context.beginPath();
          this.__renderDrawableMask(a);
          this.context.closePath();
          this.context.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.context.save();
          this.setTransform(b, this.context);
          this.context.beginPath();
          this.context.rect(a.x, a.y, a.width, a.height);
          this.context.clip();
        },
        __render: function (a) {
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                Yi.renderDrawable(a, this);
                break;
              case 2:
                Vg.renderDrawable(a, this);
                break;
              case 3:
                Af.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                Zi.renderDrawable(a, this);
                break;
              case 6:
                $i.renderDrawable(a, this);
                break;
              case 7:
                X.renderDrawable(a, this);
                break;
              case 8:
                Bf.renderDrawable(a, this);
                break;
              case 9:
                Ge.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                Yi.renderDrawableMask(a, this);
                break;
              case 2:
                Vg.renderDrawableMask(a, this);
                break;
              case 3:
                Af.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                Zi.renderDrawableMask(a, this);
                break;
              case 6:
                $i.renderDrawableMask(a, this);
                break;
              case 7:
                X.renderDrawableMask(a, this);
                break;
              case 8:
                Bf.renderDrawableMask(a, this);
                break;
              case 9:
                Ge.renderDrawableMask(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a),
            this.__setBlendModeContext(this.context, a));
        },
        __setBlendModeContext: function (a, b) {
          switch (b) {
            case 0:
              a.globalCompositeOperation = 'lighter';
              break;
            case 2:
              a.globalCompositeOperation = 'darken';
              break;
            case 3:
              a.globalCompositeOperation = 'difference';
              break;
            case 5:
              a.globalCompositeOperation = 'hard-light';
              break;
            case 8:
              a.globalCompositeOperation = 'lighten';
              break;
            case 9:
              a.globalCompositeOperation = 'multiply';
              break;
            case 11:
              a.globalCompositeOperation = 'overlay';
              break;
            case 12:
              a.globalCompositeOperation = 'screen';
              break;
            default:
              a.globalCompositeOperation = 'source-over';
          }
        },
        __class__: Fe,
      });
      var em = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'none';
              case 1:
                return 'round';
              case 2:
                return 'square';
              default:
                return null;
            }
          },
        },
        aj = function (a) {
          da.call(this);
          this.__drawableType = 10;
          this.__element = a;
        };
      h['openfl.display.DOMElement'] = aj;
      aj.__name__ = 'openfl.display.DOMElement';
      aj.__super__ = da;
      aj.prototype = w(da.prototype, { __class__: aj });
      var Wg = function (a) {
        hd.call(this);
        this.element = a;
        da.__supportDOM = !0;
        a = window.getComputedStyle(document.documentElement, '');
        a = (Array.prototype.slice
          .call(a)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === a.OLink && ['', 'o']))[1];
        'WebKit|Moz|MS|O'.match(new RegExp('(' + a + ')', 'i'));
        a[0].toUpperCase();
        a.substr(1);
        this.__vendorPrefix = a;
        this.__transformProperty =
          'webkit' == a ? '-webkit-transform' : 'transform';
        this.__transformOriginProperty =
          'webkit' == a ? '-webkit-transform-origin' : 'transform-origin';
        this.__clipRects = [];
        this.__z = this.__numClipRects = 0;
        this.__type = 'dom';
        this.__canvasRenderer = new Fe(null);
        this.__canvasRenderer.__isDOM = !0;
      };
      h['openfl.display.DOMRenderer'] = Wg;
      Wg.__name__ = 'openfl.display.DOMRenderer';
      Wg.__super__ = hd;
      Wg.prototype = w(hd.prototype, {
        __applyStyle: function (a, b, d, f) {
          var g = a.__style;
          if (b && a.__renderTransformChanged) {
            b = a.__renderTransform;
            var k = this.__roundPixels;
            null == k && (k = !1);
            g.setProperty(
              this.__transformProperty,
              k
                ? 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    (b.tx | 0) +
                    ', ' +
                    (b.ty | 0) +
                    ', 0, 1)'
                : 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    b.tx +
                    ', ' +
                    b.ty +
                    ', 0, 1)',
              null,
            );
          }
          a.__worldZ != ++this.__z &&
            ((a.__worldZ = this.__z),
            g.setProperty(
              'z-index',
              null == a.__worldZ ? 'null' : '' + a.__worldZ,
              null,
            ));
          d &&
            a.__worldAlphaChanged &&
            (1 > a.__worldAlpha
              ? g.setProperty(
                  'opacity',
                  null == a.__worldAlpha ? 'null' : '' + a.__worldAlpha,
                  null,
                )
              : g.removeProperty('opacity'));
          f &&
            a.__worldClipChanged &&
            (null == a.__worldClip
              ? g.removeProperty('clip')
              : ((a = a.__worldClip),
                g.setProperty(
                  'clip',
                  'rect(' +
                    a.y +
                    'px, ' +
                    a.get_right() +
                    'px, ' +
                    a.get_bottom() +
                    'px, ' +
                    a.x +
                    'px)',
                  null,
                )));
        },
        __initializeElement: function (a, b) {
          var d = (a.__style = b.style);
          d.setProperty('position', 'absolute', null);
          d.setProperty('top', '0', null);
          d.setProperty('left', '0', null);
          d.setProperty(this.__transformOriginProperty, '0 0 0', null);
          this.element.appendChild(b);
          a.__worldAlphaChanged = !0;
          a.__renderTransformChanged = !0;
          a.__worldVisibleChanged = !0;
          a.__worldClipChanged = !0;
          a.__worldClip = null;
          a.__worldZ = -1;
        },
        __popMask: function () {
          this.__popMaskRect();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            (this.__currentClipRect =
              0 < this.__numClipRects
                ? this.__clipRects[this.__numClipRects - 1]
                : null));
        },
        __pushMask: function (a) {
          this.__pushMaskRect(a.getBounds(a), a.__renderTransform);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new ja());
          var d = this.__clipRects[this.__numClipRects];
          a.__transform(d, b);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            d.__contract(a.x, a.y, a.width, a.height));
          0 > d.height && (d.height = 0);
          0 > d.width && (d.width = 0);
          this.__currentClipRect = d;
          this.__numClipRects++;
        },
        __render: function (a) {
          this.element.style.background = this.__stage.__transparent
            ? 'none'
            : this.__stage.__colorString;
          this.__z = 1;
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Qb.renderDrawable(a, this);
                break;
              case 3:
                id.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                bj.renderDrawable(a, this);
                break;
              case 6:
                cj.renderDrawable(a, this);
                break;
              case 7:
                Ze.renderDrawable(a, this);
                break;
              case 8:
                He.renderDrawable(a, this);
                break;
              case 9:
                $e.renderDrawable(a, this);
                break;
              case 10:
                (null != a.stage && a.__worldVisible && a.__renderable
                  ? (a.__active ||
                      (this.__initializeElement(a, a.__element),
                      (a.__active = !0)),
                    this.__updateClip(a),
                    this.__applyStyle(a, !0, !0, !0))
                  : a.__active &&
                    (this.element.removeChild(a.__element), (a.__active = !1)),
                  id.renderDrawable(a, this));
            }
        },
        __renderDrawableClear: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Qb.renderDrawableClear(a, this);
                break;
              case 3:
                id.renderDrawableClear(a, this);
                break;
              case 4:
              case 5:
                bj.renderDrawableClear(a, this);
                break;
              case 6:
                cj.renderDrawableClear(a, this);
                break;
              case 7:
                Ze.renderDrawableClear(a, this);
                break;
              case 8:
                He.renderDrawableClear(a, this);
                break;
              case 9:
                $e.renderDrawableClear(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a);
        },
        __updateClip: function (a) {
          if (null == this.__currentClipRect)
            ((a.__worldClipChanged = null != a.__worldClip),
              (a.__worldClip = null));
          else {
            null == a.__worldClip && (a.__worldClip = new ja());
            var b = ja.__pool.get(),
              d = qa.__pool.get();
            d.copyFrom(a.__renderTransform);
            d.invert();
            this.__currentClipRect.__transform(b, d);
            b.equals(a.__worldClip)
              ? (a.__worldClipChanged = !1)
              : (a.__worldClip.copyFrom(b), (a.__worldClipChanged = !0));
            ja.__pool.release(b);
            qa.__pool.release(d);
          }
        },
        __class__: Wg,
      });
      var rd = function (a) {
        this.byteCode = a;
        this.precisionHint = 1;
        this.__glSourceDirty = !0;
        this.__numPasses = 1;
        this.__data = Tl._new(a);
      };
      h['openfl.display.Shader'] = rd;
      rd.__name__ = 'openfl.display.Shader';
      rd.prototype = {
        __clearUseArray: function () {
          for (var a = 0, b = this.__paramBool; a < b.length; ) {
            var d = b[a];
            ++a;
            d.__useArray = !1;
          }
          a = 0;
          for (b = this.__paramFloat; a < b.length; )
            ((d = b[a]), ++a, (d.__useArray = !1));
          a = 0;
          for (b = this.__paramInt; a < b.length; )
            ((d = b[a]), ++a, (d.__useArray = !1));
        },
        __createGLShader: function (a, b) {
          var d = this.__context.gl,
            f = d.createShader(b);
          d.shaderSource(f, a);
          d.compileShader(f);
          var g = d.getShaderInfoLog(f),
            k = null != g && '' != R.trim(g),
            l = d.getShaderParameter(f, d.COMPILE_STATUS);
          if (k || 0 == l)
            ((b =
              (0 == l ? 'Error' : 'Info') +
              (b == d.VERTEX_SHADER
                ? ' compiling vertex shader'
                : ' compiling fragment shader')),
              (b = b + ('\n' + g) + ('\n' + a)),
              0 == l
                ? Pa.error(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 337,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  })
                : k &&
                  Pa.debug(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 338,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  }));
          return f;
        },
        __createGLProgram: function (a, b) {
          var d = this.__context.gl;
          a = this.__createGLShader(a, d.VERTEX_SHADER);
          var f = this.__createGLShader(b, d.FRAGMENT_SHADER);
          b = d.createProgram();
          for (var g = 0, k = this.__paramFloat; g < k.length; ) {
            var l = k[g];
            ++g;
            if (
              -1 < l.name.indexOf('Position') &&
              R.startsWith(l.name, 'openfl_')
            ) {
              d.bindAttribLocation(b, 0, l.name);
              break;
            }
          }
          d.attachShader(b, a);
          d.attachShader(b, f);
          d.linkProgram(b);
          0 == d.getProgramParameter(b, d.LINK_STATUS) &&
            ((d =
              'Unable to initialize the shader program\n' +
              d.getProgramInfoLog(b)),
            Pa.error(d, {
              fileName: 'openfl/display/Shader.hx',
              lineNumber: 371,
              className: 'openfl.display.Shader',
              methodName: '__createGLProgram',
            }));
          return b;
        },
        __disable: function () {
          null != this.program && this.__disableGL();
        },
        __disableGL: function () {
          for (
            var a = this.__context.gl, b = 0, d = 0, f = this.__inputBitmapData;
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            g.__disableGL(this.__context, b);
            ++b;
            if (b == a.MAX_TEXTURE_IMAGE_UNITS) break;
          }
          d = 0;
          for (f = this.__paramBool; d < f.length; )
            ((b = f[d]), ++d, b.__disableGL(this.__context));
          d = 0;
          for (f = this.__paramFloat; d < f.length; )
            ((b = f[d]), ++d, b.__disableGL(this.__context));
          d = 0;
          for (f = this.__paramInt; d < f.length; )
            ((b = f[d]), ++d, b.__disableGL(this.__context));
          this.__context.__bindGLArrayBuffer(null);
          'opengl' == this.__context.__context.type && a.disable(a.TEXTURE_2D);
        },
        __enable: function () {
          this.__init();
          null != this.program && this.__enableGL();
        },
        __enableGL: function () {
          for (
            var a = 0, b = this.__context.gl, d = 0, f = this.__inputBitmapData;
            d < f.length;

          ) {
            var g = f[d];
            ++d;
            b.uniform1i(g.index, a);
            ++a;
          }
          'opengl' == this.__context.__context.type &&
            0 < a &&
            b.enable(b.TEXTURE_2D);
        },
        __init: function () {
          null == this.__data && (this.__data = Tl._new(null));
          null == this.__glFragmentSource ||
            null == this.__glVertexSource ||
            (null != this.program && !this.__glSourceDirty) ||
            this.__initGL();
        },
        __initGL: function () {
          if (this.__glSourceDirty || null == this.__paramBool)
            ((this.__glSourceDirty = !1),
              (this.program = null),
              (this.__inputBitmapData = []),
              (this.__paramBool = []),
              (this.__paramFloat = []),
              (this.__paramInt = []),
              this.__processGLData(this.get_glVertexSource(), 'attribute'),
              this.__processGLData(this.get_glVertexSource(), 'uniform'),
              this.__processGLData(this.get_glFragmentSource(), 'uniform'));
          if (null != this.__context && null == this.program) {
            var a = this.__context.gl,
              b =
                1 == this.precisionHint
                  ? 'precision mediump float;\n'
                  : 'precision lowp float;\n',
              d = b + this.get_glVertexSource();
            b += this.get_glFragmentSource();
            var f = d + b;
            Object.prototype.hasOwnProperty.call(this.__context.__programs.h, f)
              ? (this.program = this.__context.__programs.h[f])
              : ((this.program = this.__context.createProgram(1)),
                (this.program.__glProgram = this.__createGLProgram(d, b)),
                (this.__context.__programs.h[f] = this.program));
            if (null != this.program) {
              this.glProgram = this.program.__glProgram;
              d = 0;
              for (b = this.__inputBitmapData; d < b.length; )
                ((f = b[d]),
                  ++d,
                  (f.index = f.__isUniform
                    ? a.getUniformLocation(this.glProgram, f.name)
                    : a.getAttribLocation(this.glProgram, f.name)));
              d = 0;
              for (b = this.__paramBool; d < b.length; )
                ((f = b[d]),
                  ++d,
                  (f.index = f.__isUniform
                    ? a.getUniformLocation(this.glProgram, f.name)
                    : a.getAttribLocation(this.glProgram, f.name)));
              d = 0;
              for (b = this.__paramFloat; d < b.length; )
                ((f = b[d]),
                  ++d,
                  (f.index = f.__isUniform
                    ? a.getUniformLocation(this.glProgram, f.name)
                    : a.getAttribLocation(this.glProgram, f.name)));
              d = 0;
              for (b = this.__paramInt; d < b.length; )
                ((f = b[d]),
                  ++d,
                  (f.index = f.__isUniform
                    ? a.getUniformLocation(this.glProgram, f.name)
                    : a.getAttribLocation(this.glProgram, f.name)));
            }
          }
        },
        __processGLData: function (a, b) {
          var d = 0,
            f;
          for (
            f =
              'uniform' == b
                ? new xa('uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '')
                : new xa('attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '');
            f.matchSub(a, d);

          ) {
            var g = f.matched(1);
            var k = f.matched(2);
            if (!R.startsWith(k, 'gl_')) {
              d = 'uniform' == b;
              if (R.startsWith(g, 'sampler')) {
                g = new dj();
                g.name = k;
                g.__isUniform = d;
                this.__inputBitmapData.push(g);
                switch (k) {
                  case 'bitmap':
                    this.__bitmap = g;
                    break;
                  case 'openfl_Texture':
                    this.__texture = g;
                }
                this.__data[k] = g;
                this.__isGenerated && (this[k] = g);
              } else if (
                !Object.prototype.hasOwnProperty.call(this.__data, k) ||
                null == N.field(this.__data, k)
              ) {
                switch (g) {
                  case 'bool':
                    var l = 0;
                    break;
                  case 'bvec2':
                    l = 1;
                    break;
                  case 'bvec3':
                    l = 2;
                    break;
                  case 'bvec4':
                    l = 3;
                    break;
                  case 'dvec2':
                  case 'vec2':
                    l = 5;
                    break;
                  case 'dvec3':
                  case 'vec3':
                    l = 6;
                    break;
                  case 'dvec4':
                  case 'vec4':
                    l = 7;
                    break;
                  case 'double':
                  case 'float':
                    l = 4;
                    break;
                  case 'mat2':
                  case 'mat2x2':
                    l = 12;
                    break;
                  case 'mat2x3':
                    l = 13;
                    break;
                  case 'mat2x4':
                    l = 14;
                    break;
                  case 'mat3x2':
                    l = 15;
                    break;
                  case 'mat3':
                  case 'mat3x3':
                    l = 16;
                    break;
                  case 'mat3x4':
                    l = 17;
                    break;
                  case 'mat4x2':
                    l = 18;
                    break;
                  case 'mat4x3':
                    l = 19;
                    break;
                  case 'mat4':
                  case 'mat4x4':
                    l = 20;
                    break;
                  case 'int':
                  case 'uint':
                    l = 8;
                    break;
                  case 'ivec2':
                  case 'uvec2':
                    l = 9;
                    break;
                  case 'ivec3':
                  case 'uvec3':
                    l = 10;
                    break;
                  case 'ivec4':
                  case 'uvec4':
                    l = 11;
                    break;
                  default:
                    l = null;
                }
                switch (l) {
                  case 1:
                  case 5:
                  case 9:
                    g = 2;
                    break;
                  case 2:
                  case 6:
                  case 10:
                    g = 3;
                    break;
                  case 3:
                  case 7:
                  case 11:
                  case 12:
                    g = 4;
                    break;
                  case 16:
                    g = 9;
                    break;
                  case 20:
                    g = 16;
                    break;
                  default:
                    g = 1;
                }
                switch (l) {
                  case 12:
                    var h = 2;
                    break;
                  case 16:
                    h = 3;
                    break;
                  case 20:
                    h = 4;
                    break;
                  default:
                    h = 1;
                }
                switch (l) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                    var p = new pg();
                    p.set_name(k);
                    p.type = l;
                    p.__arrayLength = h;
                    p.__isBool = !0;
                    p.__isUniform = d;
                    p.__length = g;
                    this.__paramBool.push(p);
                    'openfl_HasColorTransform' == k &&
                      (this.__hasColorTransform = p);
                    this.__data[k] = p;
                    this.__isGenerated && (this[k] = p);
                    break;
                  case 8:
                  case 9:
                  case 10:
                  case 11:
                    p = new pg();
                    p.set_name(k);
                    p.type = l;
                    p.__arrayLength = h;
                    p.__isInt = !0;
                    p.__isUniform = d;
                    p.__length = g;
                    this.__paramInt.push(p);
                    this.__data[k] = p;
                    this.__isGenerated && (this[k] = p);
                    break;
                  default:
                    p = new pg();
                    p.set_name(k);
                    p.type = l;
                    p.__arrayLength = h;
                    0 < h &&
                      ((l = h * h),
                      (l = null != l ? new Float32Array(l) : null),
                      (p.__uniformMatrix = l));
                    p.__isFloat = !0;
                    p.__isUniform = d;
                    p.__length = g;
                    this.__paramFloat.push(p);
                    if (R.startsWith(k, 'openfl_'))
                      switch (k) {
                        case 'openfl_Alpha':
                          this.__alpha = p;
                          break;
                        case 'openfl_ColorMultiplier':
                          this.__colorMultiplier = p;
                          break;
                        case 'openfl_ColorOffset':
                          this.__colorOffset = p;
                          break;
                        case 'openfl_Matrix':
                          this.__matrix = p;
                          break;
                        case 'openfl_Position':
                          this.__position = p;
                          break;
                        case 'openfl_TextureCoord':
                          this.__textureCoord = p;
                          break;
                        case 'openfl_TextureSize':
                          this.__textureSize = p;
                      }
                    this.__data[k] = p;
                    this.__isGenerated && (this[k] = p);
                }
              }
              k = f.matchedPos();
              d = k.pos + k.len;
            }
          }
        },
        __update: function () {
          null != this.program && this.__updateGL();
        },
        __updateFromBuffer: function (a, b) {
          null != this.program && this.__updateGLFromBuffer(a, b);
        },
        __updateGL: function () {
          for (var a = 0, b = 0, d = this.__inputBitmapData; b < d.length; ) {
            var f = d[b];
            ++b;
            f.__updateGL(this.__context, a);
            ++a;
          }
          b = 0;
          for (d = this.__paramBool; b < d.length; )
            ((a = d[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (d = this.__paramFloat; b < d.length; )
            ((a = d[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (d = this.__paramInt; b < d.length; )
            ((a = d[b]), ++b, a.__updateGL(this.__context));
        },
        __updateGLFromBuffer: function (a, b) {
          for (var d = 0, f, g, k, l, h, p = 0, r = a.inputCount; p < r; )
            ((h = p++),
              (f = a.inputRefs[h]),
              (g = a.inputs[h]),
              (k = a.inputFilter[h]),
              (l = a.inputMipFilter[h]),
              (h = a.inputWrap[h]),
              null != g && (f.__updateGL(this.__context, d, g, k, l, h), ++d));
          p = this.__context.gl;
          0 < a.paramDataLength
            ? (null == a.paramDataBuffer &&
                (a.paramDataBuffer = p.createBuffer()),
              this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
              Ec.bufferData(p, p.ARRAY_BUFFER, a.paramData, p.DYNAMIC_DRAW))
            : this.__context.__bindGLArrayBuffer(null);
          g = f = d = 0;
          k = a.paramBoolCount;
          l = a.paramFloatCount;
          var t = a.paramData,
            n = null,
            q = null,
            E = null;
          p = 0;
          for (r = a.paramCount; p < r; ) {
            h = p++;
            var m = !1;
            if (h < k) {
              var C = a.paramRefs_Bool[d];
              for (var x = 0, y = a.overrideBoolCount; x < y; ) {
                var z = x++;
                if (C.name == a.overrideBoolNames[z]) {
                  n = a.overrideBoolValues[z];
                  m = !0;
                  break;
                }
              }
              m
                ? C.__updateGL(this.__context, n)
                : C.__updateGLFromBuffer(
                    this.__context,
                    t,
                    a.paramPositions[h],
                    a.paramLengths[h],
                    b,
                  );
              ++d;
            } else if (h < k + l) {
              C = a.paramRefs_Float[f];
              x = 0;
              for (y = a.overrideFloatCount; x < y; )
                if (((z = x++), C.name == a.overrideFloatNames[z])) {
                  q = a.overrideFloatValues[z];
                  m = !0;
                  break;
                }
              m
                ? C.__updateGL(this.__context, q)
                : C.__updateGLFromBuffer(
                    this.__context,
                    t,
                    a.paramPositions[h],
                    a.paramLengths[h],
                    b,
                  );
              ++f;
            } else {
              C = a.paramRefs_Int[g];
              x = 0;
              for (y = a.overrideIntCount; x < y; )
                if (((z = x++), C.name == a.overrideIntNames[z])) {
                  E = a.overrideIntValues[z];
                  m = !0;
                  break;
                }
              m
                ? C.__updateGL(this.__context, E)
                : C.__updateGLFromBuffer(
                    this.__context,
                    t,
                    a.paramPositions[h],
                    a.paramLengths[h],
                    b,
                  );
              ++g;
            }
          }
        },
        get_glFragmentSource: function () {
          return this.__glFragmentSource;
        },
        get_glVertexSource: function () {
          return this.__glVertexSource;
        },
        __class__: rd,
        __properties__: {
          get_glVertexSource: 'get_glVertexSource',
          get_glFragmentSource: 'get_glFragmentSource',
        },
      };
      var ej = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        rd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.display.DisplayObjectShader'] = ej;
      ej.__name__ = 'openfl.display.DisplayObjectShader';
      ej.__super__ = rd;
      ej.prototype = w(rd.prototype, { __class__: ej });
      var Tk = function (a, b) {
        ka.call(this);
        this.name = a;
        this.frame = b;
      };
      h['openfl.display.FrameLabel'] = Tk;
      Tk.__name__ = 'openfl.display.FrameLabel';
      Tk.__super__ = ka;
      Tk.prototype = w(ka.prototype, { __class__: Tk });
      var cd = function (a) {
        this.__dirty = !0;
        this.__owner = a;
        this.__commands = new jd();
        this.__positionY = this.__positionX = this.__strokePadding = 0;
        this.__renderTransform = new qa();
        this.__usedShaderBuffers = new Ba();
        this.__worldTransform = new qa();
        this.__height = this.__width = 0;
        this.__bitmapScale = 1;
        this.__shaderBufferPool = new Ob(function () {
          return new fj();
        });
        this.moveTo(0, 0);
      };
      h['openfl.display.Graphics'] = cd;
      cd.__name__ = 'openfl.display.Graphics';
      cd.prototype = {
        beginBitmapFill: function (a, b, d, f) {
          null == f && (f = !1);
          null == d && (d = !0);
          this.__commands.beginBitmapFill(
            a,
            null != b ? b.clone() : null,
            d,
            f,
          );
          this.__visible = !0;
        },
        beginFill: function (a, b) {
          null == b && (b = 1);
          null == a && (a = 0);
          this.__commands.beginFill(a & 16777215, b);
          0 < b && (this.__visible = !0);
        },
        beginGradientFill: function (a, b, d, f, g, k, l, h) {
          null == h && (h = 0);
          null == l && (l = 1);
          null == k && (k = 0);
          if (null != b && 0 != b.length) {
            if (null == d) {
              d = [];
              for (var p = 0, u = b.length; p < u; ) (p++, d.push(1));
            }
            if (null == f)
              for (f = [], p = 0, u = b.length; p < u; ) {
                var r = p++;
                f.push(Math.ceil((r / (b.length - 1)) * 255));
              }
            if (!(d.length < b.length || f.length < b.length))
              for (
                this.__commands.beginGradientFill(a, b, d, f, g, k, l, h),
                  p = 0;
                p < d.length;

              )
                if (((a = d[p]), ++p, 0 < a)) {
                  this.__visible = !0;
                  break;
                }
          }
        },
        beginShaderFill: function (a, b) {
          null != a &&
            ((b = this.__shaderBufferPool.get()),
            this.__usedShaderBuffers.add(b),
            b.update(a),
            this.__commands.beginShaderFill(b));
        },
        clear: function () {
          for (var a = this.__usedShaderBuffers.h; null != a; ) {
            var b = a.item;
            a = a.next;
            this.__shaderBufferPool.release(b);
          }
          this.__usedShaderBuffers.clear();
          this.__commands.clear();
          this.__strokePadding = 0;
          null != this.__bounds &&
            (this.set___dirty(!0),
            (this.__transformDirty = !0),
            (this.__bounds = null));
          this.__visible = !1;
          this.__positionY = this.__positionX = 0;
          this.moveTo(0, 0);
        },
        cubicCurveTo: function (a, b, d, f, g, k) {
          var l = this.__findExtrema(this.__positionX, a, d, g),
            h = this.__findExtrema(this.__positionY, b, f, k);
          this.__inflateBounds(
            l.min - this.__strokePadding,
            h.min - this.__strokePadding,
          );
          this.__inflateBounds(
            l.max + this.__strokePadding,
            h.max + this.__strokePadding,
          );
          this.__positionX = g;
          this.__positionY = k;
          this.__commands.cubicCurveTo(a, b, d, f, g, k);
          this.set___dirty(!0);
        },
        curveTo: function (a, b, d, f) {
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          var g =
            (a < d && a > this.__positionX) || (a > d && a < this.__positionX)
              ? d
              : this.__calculateBezierQuadPoint(
                  (this.__positionX - a) / (this.__positionX - 2 * a + d),
                  this.__positionX,
                  a,
                  d,
                );
          var k =
            (b < f && b > this.__positionY) || (b > f && b < this.__positionY)
              ? f
              : this.__calculateBezierQuadPoint(
                  (this.__positionY - b) / (this.__positionY - 2 * b + f),
                  this.__positionY,
                  b,
                  f,
                );
          this.__inflateBounds(
            g - this.__strokePadding,
            k - this.__strokePadding,
          );
          this.__inflateBounds(
            g + this.__strokePadding,
            k + this.__strokePadding,
          );
          this.__positionX = d;
          this.__positionY = f;
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          this.__commands.curveTo(a, b, d, f);
          this.set___dirty(!0);
        },
        drawCircle: function (a, b, d) {
          0 >= d ||
            (this.__inflateBounds(
              a - d - this.__strokePadding,
              b - d - this.__strokePadding,
            ),
            this.__inflateBounds(
              a + d + this.__strokePadding,
              b + d + this.__strokePadding,
            ),
            this.__commands.drawCircle(a, b, d),
            this.set___dirty(!0));
        },
        drawGraphicsData: function (a) {
          for (a = a.iterator(); a.hasNext(); ) {
            var b = a.next();
            switch (b.__graphicsDataType) {
              case 0:
                if (null != b.fill) {
                  var d = b.thickness;
                  isNaN(d) && (d = null);
                  switch (b.fill.__graphicsFillType) {
                    case 0:
                      var f = b.fill;
                      this.lineStyle(
                        d,
                        f.color,
                        f.alpha,
                        b.pixelHinting,
                        b.scaleMode,
                        b.caps,
                        b.joints,
                        b.miterLimit,
                      );
                      break;
                    case 1:
                      f = b.fill;
                      this.lineStyle(
                        d,
                        0,
                        1,
                        b.pixelHinting,
                        b.scaleMode,
                        b.caps,
                        b.joints,
                        b.miterLimit,
                      );
                      this.lineGradientStyle(
                        f.type,
                        f.colors,
                        f.alphas,
                        f.ratios,
                        f.matrix,
                        f.spreadMethod,
                        f.interpolationMethod,
                        f.focalPointRatio,
                      );
                      break;
                    case 2:
                      ((f = b.fill),
                        this.lineStyle(
                          d,
                          0,
                          1,
                          b.pixelHinting,
                          b.scaleMode,
                          b.caps,
                          b.joints,
                          b.miterLimit,
                        ),
                        this.lineBitmapStyle(
                          f.bitmapData,
                          f.matrix,
                          f.repeat,
                          f.smooth,
                        ));
                  }
                } else this.lineStyle();
                break;
              case 1:
                f = b;
                this.beginFill(f.color, f.alpha);
                break;
              case 2:
                f = b;
                this.beginGradientFill(
                  f.type,
                  f.colors,
                  f.alphas,
                  f.ratios,
                  f.matrix,
                  f.spreadMethod,
                  f.interpolationMethod,
                  f.focalPointRatio,
                );
                break;
              case 3:
                this.drawPath(b.commands, b.data, b.winding);
                break;
              case 4:
                f = b;
                this.beginBitmapFill(
                  f.bitmapData,
                  f.matrix,
                  f.repeat,
                  f.smooth,
                );
                break;
              case 5:
                this.endFill();
                break;
              case 6:
                this.drawQuads(b.rects, b.indices, b.transforms);
                break;
              case 7:
                this.drawTriangles(b.vertices, b.indices, b.uvtData, b.culling);
                break;
              case 8:
                this.beginShaderFill(b.shader, b.matrix);
            }
          }
        },
        drawPath: function (a, b, d) {
          null == d && (d = 0);
          var f = 0;
          1 == d && this.__commands.windingNonZero();
          a = a.iterator();
          a: for (; a.hasNext(); )
            switch (a.next()) {
              case 1:
                this.moveTo(b.get(f), b.get(f + 1));
                f += 2;
                break;
              case 2:
                this.lineTo(b.get(f), b.get(f + 1));
                f += 2;
                break;
              case 3:
                this.curveTo(
                  b.get(f),
                  b.get(f + 1),
                  b.get(f + 2),
                  b.get(f + 3),
                );
                f += 4;
                break;
              case 4:
                this.moveTo(b.get(f + 2), b.get(f + 3));
                break a;
              case 5:
                this.lineTo(b.get(f + 2), b.get(f + 3));
                break a;
              case 6:
                (this.cubicCurveTo(
                  b.get(f),
                  b.get(f + 1),
                  b.get(f + 2),
                  b.get(f + 3),
                  b.get(f + 4),
                  b.get(f + 5),
                ),
                  (f += 6));
            }
        },
        drawQuads: function (a, b, d) {
          if (null != a) {
            var f = null != b,
              g = !1,
              k = !1,
              l = f ? b.get_length() : Math.floor(a.get_length() / 4);
            if (0 != l) {
              null != d &&
                (d.get_length() >= 6 * l
                  ? (k = g = !0)
                  : d.get_length() >= 4 * l
                    ? (g = !0)
                    : d.get_length() >= 2 * l && (k = !0));
              for (
                var h = ja.__pool.get(),
                  p = qa.__pool.get(),
                  r = Infinity,
                  t = Infinity,
                  n = -Infinity,
                  q = -Infinity,
                  E,
                  m = 0;
                m < l;

              ) {
                var C = m++;
                E = f ? 4 * b.get(C) : 4 * C;
                0 > E ||
                  (h.setTo(0, 0, a.get(E + 2), a.get(E + 3)),
                  0 >= h.width ||
                    0 >= h.height ||
                    (g && k
                      ? ((E = 6 * C),
                        p.setTo(
                          d.get(E),
                          d.get(E + 1),
                          d.get(E + 2),
                          d.get(E + 3),
                          d.get(E + 4),
                          d.get(E + 5),
                        ))
                      : g
                        ? ((E = 4 * C),
                          p.setTo(
                            d.get(E),
                            d.get(E + 1),
                            d.get(E + 2),
                            d.get(E + 3),
                            h.x,
                            h.y,
                          ))
                        : k
                          ? ((E = 2 * C),
                            (p.tx = d.get(E)),
                            (p.ty = d.get(E + 1)))
                          : ((p.tx = h.x), (p.ty = h.y)),
                    h.__transform(h, p),
                    r > h.x && (r = h.x),
                    t > h.y && (t = h.y),
                    n < h.get_right() && (n = h.get_right()),
                    q < h.get_bottom() && (q = h.get_bottom())));
              }
              this.__inflateBounds(r, t);
              this.__inflateBounds(n, q);
              this.__commands.drawQuads(a, b, d);
              this.set___dirty(!0);
              this.__visible = !0;
              ja.__pool.release(h);
              qa.__pool.release(p);
            }
          }
        },
        drawRect: function (a, b, d, f) {
          if (0 != d || 0 != f) {
            var g = 0 > d ? -1 : 1,
              k = 0 > f ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * g,
              b - this.__strokePadding * k,
            );
            this.__inflateBounds(
              a + d + this.__strokePadding * g,
              b + f + this.__strokePadding * k,
            );
            this.__commands.drawRect(a, b, d, f);
            this.set___dirty(!0);
          }
        },
        drawRoundRect: function (a, b, d, f, g, k) {
          if (0 != d || 0 != f) {
            var l = 0 > d ? -1 : 1,
              h = 0 > f ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * l,
              b - this.__strokePadding * h,
            );
            this.__inflateBounds(
              a + d + this.__strokePadding * l,
              b + f + this.__strokePadding * h,
            );
            this.__commands.drawRoundRect(a, b, d, f, g, k);
            this.set___dirty(!0);
          }
        },
        drawRoundRectComplex: function (a, b, d, f, g, k, l, h) {
          if (!(0 >= d || 0 >= f)) {
            this.__inflateBounds(
              a - this.__strokePadding,
              b - this.__strokePadding,
            );
            this.__inflateBounds(
              a + d + this.__strokePadding,
              b + f + this.__strokePadding,
            );
            var p = a + d,
              u = b + f;
            d = d < f ? 2 * d : 2 * f;
            g < d || (g = d);
            k < d || (k = d);
            l < d || (l = d);
            h < d || (h = d);
            d = 1 - Math.sin((Math.PI / 180) * 45);
            f = 1 - Math.tan((Math.PI / 180) * 22.5);
            var r = h * d,
              n = h * f;
            this.moveTo(p, u - h);
            this.curveTo(p, u - n, p - r, u - r);
            this.curveTo(p - n, u, p - h, u);
            r = l * d;
            n = l * f;
            this.lineTo(a + l, u);
            this.curveTo(a + n, u, a + r, u - r);
            this.curveTo(a, u - n, a, u - l);
            r = g * d;
            n = g * f;
            this.lineTo(a, b + g);
            this.curveTo(a, b + n, a + r, b + r);
            this.curveTo(a + n, b, a + g, b);
            r = k * d;
            n = k * f;
            this.lineTo(p - k, b);
            this.curveTo(p - n, b, p - r, b + r);
            this.curveTo(p, b + n, p, b + k);
            this.lineTo(p, u - h);
            this.set___dirty(!0);
          }
        },
        drawTriangles: function (a, b, d, f) {
          null == f && (f = 1);
          if (null != a && 0 != a.get_length()) {
            var g = (a.get_length() / 2) | 0;
            if (null == b) {
              if (0 != g % 3)
                throw new hf('Not enough vertices to close a triangle.');
              b = ra.toIntVector(null);
              for (var k = 0, l = g; k < l; ) {
                var h = k++;
                b.push(h);
              }
            }
            null == f && (f = 1);
            var p = Infinity,
              r = Infinity,
              t = -Infinity,
              n = -Infinity;
            k = 0;
            for (l = g; k < l; )
              ((h = k++),
                (g = a.get(2 * h)),
                (h = a.get(2 * h + 1)),
                p > g && (p = g),
                r > h && (r = h),
                t < g && (t = g),
                n < h && (n = h));
            this.__inflateBounds(p, r);
            this.__inflateBounds(t, n);
            this.__commands.drawTriangles(a, b, d, f);
            this.set___dirty(!0);
            this.__visible = !0;
          }
        },
        endFill: function () {
          this.__commands.endFill();
        },
        lineBitmapStyle: function (a, b, d, f) {
          null == f && (f = !1);
          null == d && (d = !0);
          this.__commands.lineBitmapStyle(
            a,
            null != b ? b.clone() : null,
            d,
            f,
          );
        },
        lineGradientStyle: function (a, b, d, f, g, k, l, h) {
          null == h && (h = 0);
          null == l && (l = 1);
          null == k && (k = 0);
          if (null == d) {
            d = [];
            for (var p = 0, u = b.length; p < u; ) (p++, d.push(1));
          }
          if (null == f)
            for (f = [], p = 0, u = b.length; p < u; ) {
              var r = p++;
              f.push(Math.ceil((r / (b.length - 1)) * 255));
            }
          this.__commands.lineGradientStyle(a, b, d, f, g, k, l, h);
        },
        lineStyle: function (a, b, d, f, g, k, l, h) {
          null == h && (h = 3);
          null == g && (g = 2);
          null == f && (f = !1);
          null == d && (d = 1);
          null == b && (b = 0);
          null == k && (k = 1);
          null == l && (l = 2);
          null != a &&
            (1 == l
              ? a > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a))
              : a / 2 > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a / 2)));
          this.__commands.lineStyle(a, b, d, f, g, k, l, h);
          null != a && (this.__visible = !0);
        },
        lineTo: function (a, b) {
          isFinite(a) &&
            isFinite(b) &&
            (this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            (this.__positionX = a),
            (this.__positionY = b),
            this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + 2 * this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            this.__commands.lineTo(a, b),
            this.set___dirty(!0));
        },
        moveTo: function (a, b) {
          this.__positionX = a;
          this.__positionY = b;
          this.__commands.moveTo(a, b);
        },
        readGraphicsData: function (a) {
          null == a && (a = !0);
          var b = ra.toObjectVector(null);
          this.__owner.__readGraphicsData(b, a);
          return b;
        },
        __calculateBezierCubicPoint: function (a, b, d, f, g) {
          var k = 1 - a;
          return (
            b * k * k * k +
            3 * d * a * k * k +
            3 * f * k * a * a +
            g * a * a * a
          );
        },
        __calculateBezierQuadPoint: function (a, b, d, f) {
          var g = 1 - a;
          return g * g * b + 2 * g * a * d + a * a * f;
        },
        __cleanup: function () {
          null != this.__bounds &&
            null != this.__canvas &&
            (this.set___dirty(!0), (this.__transformDirty = !0));
          this.__context = this.__canvas = this.__bitmap = null;
        },
        __getBounds: function (a, b) {
          if (null != this.__bounds) {
            var d = ja.__pool.get();
            this.__bounds.__transform(d, b);
            a.__expand(d.x, d.y, d.width, d.height);
            ja.__pool.release(d);
          }
        },
        __hitTest: function (a, b, d, f) {
          if (null == this.__bounds) return !1;
          var g = f.a * f.d - f.b * f.c,
            k =
              0 == g ? -f.tx : (1 / g) * (f.c * (f.ty - b) + f.d * (a - f.tx));
          g = f.a * f.d - f.b * f.c;
          a = 0 == g ? -f.ty : (1 / g) * (f.a * (b - f.ty) + f.b * (f.tx - a));
          return k > this.__bounds.x &&
            a > this.__bounds.y &&
            this.__bounds.contains(k, a)
            ? d
              ? B.hitTest(this, k, a)
              : !0
            : !1;
        },
        __findExtrema: function (a, b, d, f) {
          var g = [];
          if (
            !((b < f && b > a) || (b > f && b < a)) ||
            !((d < f && d > a) || (d > f && d < a))
          ) {
            var k = -a + 3 * b + f - 3 * d,
              l = 2 * a - 4 * b + 2 * d,
              h = b - a,
              p = l * l - 4 * k * h;
            0 == k
              ? ((k = -h / l),
                0 < k &&
                  1 > k &&
                  g.push(this.__calculateBezierCubicPoint(k, a, b, d, f)))
              : 0 <= p &&
                ((h = (-l + Math.sqrt(p)) / (2 * k)),
                (k = (-l - Math.sqrt(p)) / (2 * k)),
                0 < h &&
                  1 > h &&
                  g.push(this.__calculateBezierCubicPoint(h, a, b, d, f)),
                0 < k &&
                  1 > k &&
                  g.push(this.__calculateBezierCubicPoint(k, a, b, d, f)));
          }
          b = a;
          g.push(f);
          for (f = 0; f < g.length; )
            ((d = g[f]), ++f, d < b && (b = d), d > a && (a = d));
          return { min: b, max: a };
        },
        __inflateBounds: function (a, b) {
          null == this.__bounds
            ? ((this.__bounds = new ja(a, b, 0, 0)),
              (this.__transformDirty = !0))
            : (a < this.__bounds.x &&
                ((this.__bounds.width += this.__bounds.x - a),
                (this.__bounds.x = a),
                (this.__transformDirty = !0)),
              b < this.__bounds.y &&
                ((this.__bounds.height += this.__bounds.y - b),
                (this.__bounds.y = b),
                (this.__transformDirty = !0)),
              a > this.__bounds.x + this.__bounds.width &&
                (this.__bounds.width = a - this.__bounds.x),
              b > this.__bounds.y + this.__bounds.height &&
                (this.__bounds.height = b - this.__bounds.y));
        },
        __readGraphicsData: function (a) {
          for (
            var b = new fe(this.__commands),
              d = null,
              f,
              g = 0,
              k = this.__commands.types;
            g < k.length;

          ) {
            f = k[g];
            ++g;
            switch (f._hx_index) {
              case 4:
              case 5:
              case 6:
              case 7:
              case 9:
              case 10:
              case 17:
              case 18:
                null == d && (d = new gj());
                break;
              default:
                null != d && (a.push(d), (d = null));
            }
            switch (f._hx_index) {
              case 0:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.BEGIN_BITMAP_FILL;
                f = b;
                a.push(
                  new hj(
                    f.buffer.o[f.oPos],
                    f.buffer.o[f.oPos + 1],
                    f.buffer.b[f.bPos],
                    f.buffer.b[f.bPos + 1],
                  ),
                );
                break;
              case 1:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.BEGIN_FILL;
                f = b;
                a.push(new Xg(f.buffer.i[f.iPos], 1));
                break;
              case 2:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.BEGIN_GRADIENT_FILL;
                f = b;
                a.push(
                  new ij(
                    f.buffer.o[f.oPos],
                    f.buffer.ii[f.iiPos],
                    f.buffer.ff[f.ffPos],
                    f.buffer.ii[f.iiPos + 1],
                    f.buffer.o[f.oPos + 1],
                    f.buffer.o[f.oPos + 2],
                    f.buffer.o[f.oPos + 3],
                    f.buffer.f[f.fPos],
                  ),
                );
                break;
              case 3:
                break;
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.CUBIC_CURVE_TO;
                f = b;
                d.cubicCurveTo(
                  f.buffer.f[f.fPos],
                  f.buffer.f[f.fPos + 1],
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                  f.buffer.f[f.fPos + 4],
                  f.buffer.f[f.fPos + 5],
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.CURVE_TO;
                f = b;
                d.curveTo(
                  f.buffer.f[f.fPos],
                  f.buffer.f[f.fPos + 1],
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_CIRCLE;
                f = b;
                d.__drawCircle(
                  f.buffer.f[f.fPos],
                  f.buffer.f[f.fPos + 1],
                  f.buffer.f[f.fPos + 2],
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_ELLIPSE;
                f = b;
                d.__drawEllipse(
                  f.buffer.f[f.fPos],
                  f.buffer.f[f.fPos + 1],
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                );
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_RECT;
                f = b;
                d.__drawRect(
                  f.buffer.f[f.fPos],
                  f.buffer.f[f.fPos + 1],
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                );
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_ROUND_RECT;
                f = b;
                d.__drawRoundRect(
                  f.buffer.f[f.fPos],
                  f.buffer.f[f.fPos + 1],
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                  f.buffer.f[f.fPos + 4],
                  null != f.buffer.o[f.oPos]
                    ? f.buffer.o[f.oPos]
                    : f.buffer.f[f.fPos + 4],
                );
                break;
              case 13:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.END_FILL;
                a.push(new jj());
                break;
              case 14:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.LINE_BITMAP_STYLE;
                d = null;
                break;
              case 15:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.LINE_GRADIENT_STYLE;
                break;
              case 16:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.LINE_STYLE;
                var l = b;
                f = new kj(
                  l.buffer.o[l.oPos],
                  l.buffer.b[l.bPos],
                  l.buffer.o[l.oPos + 1],
                  l.buffer.o[l.oPos + 2],
                  l.buffer.o[l.oPos + 3],
                  l.buffer.f[l.fPos + 1],
                );
                f.fill = new Xg(l.buffer.i[l.iPos], l.buffer.f[l.fPos]);
                a.push(f);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.LINE_TO;
                f = b;
                d.lineTo(f.buffer.f[f.fPos], f.buffer.f[f.fPos + 1]);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.MOVE_TO;
                f = b;
                d.moveTo(f.buffer.f[f.fPos], f.buffer.f[f.fPos + 1]);
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = f;
            }
          }
          null != d && a.push(d);
        },
        __update: function (a, b) {
          if (
            !(
              null == this.__bounds ||
              0 >= this.__bounds.width ||
              0 >= this.__bounds.height
            )
          ) {
            var d = this.__owner.__renderTransform;
            if (null != d) {
              var f = b,
                g = b;
              null == this.__owner.__worldScale9Grid &&
                ((f =
                  0 == d.b ? Math.abs(d.a) : Math.sqrt(d.a * d.a + d.b * d.b)),
                (g =
                  0 == d.c ? Math.abs(d.d) : Math.sqrt(d.c * d.c + d.d * d.d)),
                null != a &&
                  ((f =
                    0 == a.b ? f * a.a : f * Math.sqrt(a.a * a.a + a.b * a.b)),
                  (g =
                    0 == a.c
                      ? g * a.d
                      : g * Math.sqrt(a.c * a.c + a.d * a.d))));
              a = this.__bounds.width * f;
              g *= this.__bounds.height;
              if (1 > a || 1 > g)
                ((1 <= this.__width || 1 <= this.__height) &&
                  this.set___dirty(!0),
                  (this.__height = this.__width = 0));
              else {
                null != cd.maxTextureWidth &&
                  a > cd.maxTextureWidth &&
                  (a = cd.maxTextureWidth);
                null != cd.maxTextureWidth &&
                  g > cd.maxTextureHeight &&
                  (g = cd.maxTextureHeight);
                if (null != this.__owner.__worldScale9Grid) {
                  this.__renderTransform.a = b;
                  this.__renderTransform.d = b;
                  f = 1 / b;
                  var k = 1 / b;
                } else
                  ((this.__renderTransform.a = a / this.__bounds.width),
                    (this.__renderTransform.d = g / this.__bounds.height),
                    (f = 1 / this.__renderTransform.a),
                    (k = 1 / this.__renderTransform.d));
                this.__worldTransform.a = f * d.a;
                this.__worldTransform.b = f * d.b;
                this.__worldTransform.c = k * d.c;
                this.__worldTransform.d = k * d.d;
                k = this.__bounds.x;
                var l = this.__bounds.y;
                f = k * d.a + l * d.c + d.tx;
                d = k * d.b + l * d.d + d.ty;
                1 < b
                  ? ((b = 1 / b),
                    (this.__worldTransform.tx = Math.round(f / b) * b),
                    (this.__worldTransform.ty = Math.round(d / b) * b))
                  : ((this.__worldTransform.tx = Math.round(f)),
                    (this.__worldTransform.ty = Math.round(d)));
                b = this.__worldTransform;
                k = b.a * b.d - b.b * b.c;
                this.__renderTransform.tx =
                  0 == k
                    ? -b.tx
                    : (1 / k) * (b.c * (b.ty - d) + b.d * (f - b.tx));
                b = this.__worldTransform;
                k = b.a * b.d - b.b * b.c;
                this.__renderTransform.ty =
                  0 == k
                    ? -b.ty
                    : (1 / k) * (b.a * (d - b.ty) + b.b * (b.tx - f));
                a = Math.ceil(a + 1);
                g = Math.ceil(g + 1);
                (a == this.__width && g == this.__height) ||
                  this.set___dirty(!0);
                this.__width = a;
                this.__height = g;
              }
            }
          }
        },
        set___dirty: function (a) {
          if (a && null != this.__owner) {
            var b = this.__owner;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          a && (this.__hardwareDirty = this.__softwareDirty = !0);
          return (this.__dirty = a);
        },
        __class__: cd,
        __properties__: { set___dirty: 'set___dirty' },
      };
      var af = function () {};
      h['openfl.display.IGraphicsFill'] = af;
      af.__name__ = 'openfl.display.IGraphicsFill';
      af.__isInterface__ = !0;
      af.prototype = { __class__: af };
      var Qd = function () {};
      h['openfl.display.IGraphicsData'] = Qd;
      Qd.__name__ = 'openfl.display.IGraphicsData';
      Qd.__isInterface__ = !0;
      Qd.prototype = { __class__: Qd };
      var hj = function (a, b, d, f) {
        null == f && (f = !1);
        null == d && (d = !0);
        this.bitmapData = a;
        this.matrix = b;
        this.repeat = d;
        this.smooth = f;
        this.__graphicsDataType = 4;
        this.__graphicsFillType = 2;
      };
      h['openfl.display.GraphicsBitmapFill'] = hj;
      hj.__name__ = 'openfl.display.GraphicsBitmapFill';
      hj.__interfaces__ = [af, Qd];
      hj.prototype = { __class__: hj };
      var jj = function () {
        this.__graphicsDataType = 5;
        this.__graphicsFillType = 3;
      };
      h['openfl.display.GraphicsEndFill'] = jj;
      jj.__name__ = 'openfl.display.GraphicsEndFill';
      jj.__interfaces__ = [af, Qd];
      jj.prototype = { __class__: jj };
      var ij = function (a, b, d, f, g, k, l, h) {
        null == h && (h = 0);
        null == a && (a = 0);
        null == k && (k = 0);
        null == l && (l = 1);
        this.type = a;
        this.colors = b;
        this.alphas = d;
        this.ratios = f;
        this.matrix = g;
        this.spreadMethod = k;
        this.interpolationMethod = l;
        this.focalPointRatio = h;
        this.__graphicsDataType = 2;
        this.__graphicsFillType = 1;
      };
      h['openfl.display.GraphicsGradientFill'] = ij;
      ij.__name__ = 'openfl.display.GraphicsGradientFill';
      ij.__interfaces__ = [af, Qd];
      ij.prototype = { __class__: ij };
      var lj = function () {};
      h['openfl.display.IGraphicsPath'] = lj;
      lj.__name__ = 'openfl.display.IGraphicsPath';
      lj.__isInterface__ = !0;
      var gj = function (a, b, d) {
        null == d && (d = 0);
        this.commands = a;
        this.data = b;
        this.winding = d;
        this.__graphicsDataType = 3;
      };
      h['openfl.display.GraphicsPath'] = gj;
      gj.__name__ = 'openfl.display.GraphicsPath';
      gj.__interfaces__ = [lj, Qd];
      gj.prototype = {
        cubicCurveTo: function (a, b, d, f, g, k) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(6);
          this.data.push(a);
          this.data.push(b);
          this.data.push(d);
          this.data.push(f);
          this.data.push(g);
          this.data.push(k);
        },
        curveTo: function (a, b, d, f) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(3);
          this.data.push(a);
          this.data.push(b);
          this.data.push(d);
          this.data.push(f);
        },
        lineTo: function (a, b) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(2);
          this.data.push(a);
          this.data.push(b);
        },
        moveTo: function (a, b) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(1);
          this.data.push(a);
          this.data.push(b);
        },
        __drawCircle: function (a, b, d) {
          this.__drawRoundRect(a - d, b - d, 2 * d, 2 * d, 2 * d, 2 * d);
        },
        __drawEllipse: function (a, b, d, f) {
          this.__drawRoundRect(a, b, d, f, d, f);
        },
        __drawRect: function (a, b, d, f) {
          this.moveTo(a, b);
          this.lineTo(a + d, b);
          this.lineTo(a + d, b + f);
          this.lineTo(a, b + f);
          this.lineTo(a, b);
        },
        __drawRoundRect: function (a, b, d, f, g, k) {
          g *= 0.5;
          k *= 0.5;
          g > d / 2 && (g = d / 2);
          k > f / 2 && (k = f / 2);
          d = a + d;
          f = b + f;
          var l = -g + 0.7071067811865476 * g,
            h = -g + 0.41421356237309503 * g,
            p = -k + 0.7071067811865476 * k,
            r = -k + 0.41421356237309503 * k;
          this.moveTo(d, f - k);
          this.curveTo(d, f + r, d + l, f + p);
          this.curveTo(d + h, f, d - g, f);
          this.lineTo(a + g, f);
          this.curveTo(a - h, f, a - l, f + p);
          this.curveTo(a, f + r, a, f - k);
          this.lineTo(a, b + k);
          this.curveTo(a, b - r, a - l, b - p);
          this.curveTo(a - h, b, a + g, b);
          this.lineTo(d - g, b);
          this.curveTo(d + h, b, d + l, b - p);
          this.curveTo(d, b - r, d, b + k);
          this.lineTo(d, f - k);
        },
        __class__: gj,
      };
      var Uk = function (a, b, d) {
        this.rects = a;
        this.indices = b;
        this.transforms = d;
        this.__graphicsDataType = 6;
      };
      h['openfl.display.GraphicsQuadPath'] = Uk;
      Uk.__name__ = 'openfl.display.GraphicsQuadPath';
      Uk.__interfaces__ = [lj, Qd];
      Uk.prototype = { __class__: Uk };
      var mj = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        rd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.display.GraphicsShader'] = mj;
      mj.__name__ = 'openfl.display.GraphicsShader';
      mj.__super__ = rd;
      mj.prototype = w(rd.prototype, { __class__: mj });
      var Vk = function (a, b) {
        this.shader = a;
        this.matrix = b;
        this.__graphicsDataType = 8;
        this.__graphicsFillType = 4;
      };
      h['openfl.display.GraphicsShaderFill'] = Vk;
      Vk.__name__ = 'openfl.display.GraphicsShaderFill';
      Vk.__interfaces__ = [af, Qd];
      Vk.prototype = { __class__: Vk };
      var Xg = function (a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.alpha = b;
        this.color = a;
        this.__graphicsDataType = 1;
        this.__graphicsFillType = 0;
      };
      h['openfl.display.GraphicsSolidFill'] = Xg;
      Xg.__name__ = 'openfl.display.GraphicsSolidFill';
      Xg.__interfaces__ = [af, Qd];
      Xg.prototype = { __class__: Xg };
      var Gl = function () {};
      h['openfl.display.IGraphicsStroke'] = Gl;
      Gl.__name__ = 'openfl.display.IGraphicsStroke';
      Gl.__isInterface__ = !0;
      var kj = function (a, b, d, f, g, k, l) {
        null == k && (k = 3);
        null == g && (g = 2);
        null == f && (f = 0);
        null == d && (d = 2);
        null == b && (b = !1);
        null == a && (a = NaN);
        this.caps = f;
        this.fill = l;
        this.joints = g;
        this.miterLimit = k;
        this.pixelHinting = b;
        this.scaleMode = d;
        this.thickness = a;
        this.__graphicsDataType = 0;
      };
      h['openfl.display.GraphicsStroke'] = kj;
      kj.__name__ = 'openfl.display.GraphicsStroke';
      kj.__interfaces__ = [Gl, Qd];
      kj.prototype = { __class__: kj };
      var Wk = function (a, b, d, f) {
        null == f && (f = 1);
        this.vertices = a;
        this.indices = b;
        this.uvtData = d;
        this.culling = f;
        this.__graphicsDataType = 7;
      };
      h['openfl.display.GraphicsTrianglePath'] = Wk;
      Wk.__name__ = 'openfl.display.GraphicsTrianglePath';
      Wk.__interfaces__ = [lj, Qd];
      Wk.prototype = { __class__: Wk };
      var Xk = function () {};
      h['openfl.display.ITileContainer'] = Xk;
      Xk.__name__ = 'openfl.display.ITileContainer';
      Xk.__isInterface__ = !0;
      var Wi = function (a) {
        null == a && (a = 80);
        this.quality = a;
      };
      h['openfl.display.JPEGEncoderOptions'] = Wi;
      Wi.__name__ = 'openfl.display.JPEGEncoderOptions';
      Wi.prototype = { __class__: Wi };
      var fm = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bevel';
              case 1:
                return 'miter';
              case 2:
                return 'round';
              default:
                return null;
            }
          },
        },
        Yk = function () {
          hb.call(this);
          this.__drawableType = 4;
          this.contentLoaderInfo = ee.create(this);
          this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
          this.__unloaded = !0;
        };
      h['openfl.display.Loader'] = Yk;
      Yk.__name__ = 'openfl.display.Loader';
      Yk.__super__ = hb;
      Yk.prototype = w(hb.prototype, {
        addChild: function (a) {
          throw new Xb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        addChildAt: function (a, b) {
          throw new Xb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChild: function (a) {
          if (a == this.content)
            return hb.prototype.removeChild.call(this, this.content);
          throw new Xb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChildAt: function (a) {
          throw new Xb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        __class__: Yk,
      });
      var ee = function () {
        ka.call(this);
        this.applicationDomain = qg.currentDomain;
        this.bytesTotal = this.bytesLoaded = 0;
        this.childAllowsParent = !0;
        this.parameters = {};
      };
      h['openfl.display.LoaderInfo'] = ee;
      ee.__name__ = 'openfl.display.LoaderInfo';
      ee.create = function (a) {
        var b = new ee();
        b.uncaughtErrorEvents = new nj();
        null != a ? (b.loader = a) : (b.url = ee.__rootURL);
        return b;
      };
      ee.__super__ = ka;
      ee.prototype = w(ka.prototype, {
        __complete: function () {
          this.__completed ||
            (this.bytesLoaded < this.bytesTotal &&
              (this.bytesLoaded = this.bytesTotal),
            this.__update(this.bytesLoaded, this.bytesTotal),
            (this.__completed = !0),
            this.dispatchEvent(new sa('complete')));
        },
        __update: function (a, b) {
          this.bytesLoaded = a;
          this.bytesTotal = b;
          this.dispatchEvent(new Cf('progress', !1, !1, a, b));
        },
        __class__: ee,
      });
      var ef = function () {
        ba.call(this);
        this.__enabled = !0;
      };
      h['openfl.display.MovieClip'] = ef;
      ef.__name__ = 'openfl.display.MovieClip';
      ef.__super__ = ba;
      ef.prototype = w(ba.prototype, {
        gotoAndStop: function (a, b) {
          null != this.__timeline && this.__timeline.__gotoAndStop(a, b);
        },
        __enterFrame: function (a) {
          null != this.__timeline && this.__timeline.__enterFrame(a);
          for (var b = 0, d = this.__children; b < d.length; ) {
            var f = d[b];
            ++b;
            f.__enterFrame(a);
          }
        },
        __tabTest: function (a) {
          this.__enabled && ba.prototype.__tabTest.call(this, a);
        },
        __onMouseDown: function (a) {
          this.__enabled && this.__hasDown && this.gotoAndStop('_down');
          this.__mouseIsDown = !0;
          null != this.stage &&
            this.stage.addEventListener(
              'mouseUp',
              m(this, this.__onMouseUp),
              !0,
            );
        },
        __onMouseUp: function (a) {
          this.__mouseIsDown = !1;
          null != this.stage &&
            this.stage.removeEventListener(
              'mouseUp',
              m(this, this.__onMouseUp),
            );
          this.__buttonMode &&
            (Ad.__eq(a.target, this) && this.__enabled && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__enabled && this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOut: function (a) {
          this.__enabled &&
            (this.__mouseIsDown && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOver: function (a) {
          this.__enabled && this.__hasOver && this.gotoAndStop('_over');
        },
        set_buttonMode: function (a) {
          if (this.__buttonMode != a) {
            if (a) {
              this.__hasUp = this.__hasOver = this.__hasDown = !1;
              for (var b = 0, d = this.get_currentLabels(); b < d.length; ) {
                var f = d[b];
                ++b;
                switch (f.name) {
                  case '_down':
                    this.__hasDown = !0;
                    break;
                  case '_over':
                    this.__hasOver = !0;
                    break;
                  case '_up':
                    this.__hasUp = !0;
                }
              }
              if (this.__hasDown || this.__hasOver || this.__hasUp)
                (this.addEventListener('rollOver', m(this, this.__onRollOver)),
                  this.addEventListener('rollOut', m(this, this.__onRollOut)),
                  this.addEventListener(
                    'mouseDown',
                    m(this, this.__onMouseDown),
                  ));
            } else
              (this.removeEventListener('rollOver', m(this, this.__onRollOver)),
                this.removeEventListener('rollOut', m(this, this.__onRollOut)),
                this.removeEventListener(
                  'mouseDown',
                  m(this, this.__onMouseDown),
                ));
            this.__buttonMode = a;
          }
          return a;
        },
        get_currentLabels: function () {
          return null != this.__timeline
            ? this.__timeline.__currentLabels.slice()
            : [];
        },
        __class__: ef,
        __properties__: w(ba.prototype.__properties__, {
          get_currentLabels: 'get_currentLabels',
        }),
      });
      var ja = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = d;
        this.height = f;
      };
      h['openfl.geom.Rectangle'] = ja;
      ja.__name__ = 'openfl.geom.Rectangle';
      ja.__limeRectangle = null;
      ja.prototype = {
        clone: function () {
          return new ja(this.x, this.y, this.width, this.height);
        },
        contains: function (a, b) {
          return a >= this.x && b >= this.y && a < this.get_right()
            ? b < this.get_bottom()
            : !1;
        },
        containsPoint: function (a) {
          return this.contains(a.x, a.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height;
        },
        equals: function (a) {
          return a == this
            ? !0
            : null != a &&
                this.x == a.x &&
                this.y == a.y &&
                this.width == a.width
              ? this.height == a.height
              : !1;
        },
        inflate: function (a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -= b;
          this.height += 2 * b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setTo: function (a, b, d, f) {
          this.x = a;
          this.y = b;
          this.width = d;
          this.height = f;
        },
        union: function (a) {
          if (0 == this.width || 0 == this.height) return a.clone();
          if (0 == a.width || 0 == a.height) return this.clone();
          var b = this.x > a.x ? a.x : this.x,
            d =
              this.get_right() < a.get_right()
                ? a.get_right()
                : this.get_right(),
            f = this.y > a.y ? a.y : this.y;
          a =
            this.get_bottom() < a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          return new ja(b, f, d - b, a - f);
        },
        __contract: function (a, b, d, f) {
          if (0 != this.width || 0 != this.height) {
            var g = 0,
              k = 0,
              l = 0,
              h = 0;
            this.x < a && (g = a - this.x);
            this.y < b && (k = b - this.y);
            this.get_right() > a + d && (l = a + d - this.get_right());
            this.get_bottom() > b + f && (h = b + f - this.get_bottom());
            this.x += g;
            this.y += k;
            this.width += l - g;
            this.height += h - k;
          }
        },
        __expand: function (a, b, d, f) {
          if (0 == this.width && 0 == this.height)
            ((this.x = a), (this.y = b), (this.width = d), (this.height = f));
          else {
            var g = this.get_right(),
              k = this.get_bottom();
            this.x > a && ((this.x = a), (this.width = g - a));
            this.y > b && ((this.y = b), (this.height = k - b));
            g < a + d && (this.width = a + d - this.x);
            k < b + f && (this.height = b + f - this.y);
          }
        },
        __toLimeRectangle: function () {
          null == ja.__limeRectangle && (ja.__limeRectangle = new xd());
          ja.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
          return ja.__limeRectangle;
        },
        __transform: function (a, b) {
          var d = b.a * this.x + b.c * this.y,
            f = d,
            g = b.b * this.x + b.d * this.y,
            k = g,
            l = b.a * (this.x + this.width) + b.c * this.y,
            h = b.b * (this.x + this.width) + b.d * this.y;
          l < d && (d = l);
          h < g && (g = h);
          l > f && (f = l);
          h > k && (k = h);
          l = b.a * (this.x + this.width) + b.c * (this.y + this.height);
          h = b.b * (this.x + this.width) + b.d * (this.y + this.height);
          l < d && (d = l);
          h < g && (g = h);
          l > f && (f = l);
          h > k && (k = h);
          l = b.a * this.x + b.c * (this.y + this.height);
          h = b.b * this.x + b.d * (this.y + this.height);
          l < d && (d = l);
          h < g && (g = h);
          l > f && (f = l);
          h > k && (k = h);
          a.setTo(d + b.tx, g + b.ty, f - d, k - g);
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_left: function () {
          return this.x;
        },
        get_right: function () {
          return this.x + this.width;
        },
        get_top: function () {
          return this.y;
        },
        get_topLeft: function () {
          return new I(this.x, this.y);
        },
        __class__: ja,
        __properties__: {
          get_topLeft: 'get_topLeft',
          get_top: 'get_top',
          get_right: 'get_right',
          get_left: 'get_left',
          get_bottom: 'get_bottom',
        },
      };
      var Ua = function (a, b) {
        hd.call(this);
        this.__context3D = a;
        this.__context = a.__context;
        this.__gl = this.gl = a.__context.webgl;
        this.__defaultRenderTarget = b;
        this.__flipped = null == this.__defaultRenderTarget;
        null == cd.maxTextureWidth &&
          (cd.maxTextureWidth = cd.maxTextureHeight =
            this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
        this.__matrix = ab._new();
        this.__values = [];
        this.__softwareRenderer = new Fe(null);
        this.__type = 'opengl';
        this.__setBlendMode(10);
        this.__context3D.__setGLBlend(!0);
        this.__clipRects = [];
        this.__maskObjects = [];
        this.__numClipRects = 0;
        this.__projection = ab._new();
        this.__projectionFlipped = ab._new();
        this.__stencilReference = 0;
        this.__tempRect = new ja();
        this.__defaultDisplayShader = new ej();
        this.__defaultGraphicsShader = new mj();
        this.__defaultShader = this.__defaultDisplayShader;
        this.__initShader(this.__defaultShader);
        this.__scrollRectMasks = new Ob(function () {
          return new Pe();
        });
        this.__maskShader = new Df();
      };
      h['openfl.display.OpenGLRenderer'] = Ua;
      Ua.__name__ = 'openfl.display.OpenGLRenderer';
      Ua.__super__ = hd;
      Ua.prototype = w(hd.prototype, {
        applyAlpha: function (a) {
          Ua.__alphaValue[0] = a * this.__worldAlpha;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride(
                'openfl_Alpha',
                Ua.__alphaValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__alpha &&
              (this.__currentShader.__alpha.value = Ua.__alphaValue);
        },
        applyBitmapData: function (a, b, d) {
          null == d && (d = !1);
          null != this.__currentShaderBuffer
            ? null != a &&
              ((Ua.__textureSizeValue[0] = a.__textureWidth),
              (Ua.__textureSizeValue[1] = a.__textureHeight),
              this.__currentShaderBuffer.addFloatOverride(
                'openfl_TextureSize',
                Ua.__textureSizeValue,
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__bitmap &&
                ((this.__currentShader.__bitmap.input = a),
                (this.__currentShader.__bitmap.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__bitmap.mipFilter = 2),
                (this.__currentShader.__bitmap.wrap = d ? 2 : 0)),
              null != this.__currentShader.__texture &&
                ((this.__currentShader.__texture.input = a),
                (this.__currentShader.__texture.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__texture.mipFilter = 2),
                (this.__currentShader.__texture.wrap = d ? 2 : 0)),
              null != this.__currentShader.__textureSize &&
                (null != a
                  ? ((Ua.__textureSizeValue[0] = a.__textureWidth),
                    (Ua.__textureSizeValue[1] = a.__textureHeight),
                    (this.__currentShader.__textureSize.value =
                      Ua.__textureSizeValue))
                  : (this.__currentShader.__textureSize.value = null)));
        },
        applyColorTransform: function (a) {
          var b = null != a && !a.__isDefault(!0);
          this.applyHasColorTransform(b);
          b
            ? (a.__setArrays(
                Ua.__colorMultipliersValue,
                Ua.__colorOffsetsValue,
              ),
              null != this.__currentShaderBuffer
                ? (this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorMultiplier',
                    Ua.__colorMultipliersValue,
                  ),
                  this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorOffset',
                    Ua.__colorOffsetsValue,
                  ))
                : null != this.__currentShader &&
                  (null != this.__currentShader.__colorMultiplier &&
                    (this.__currentShader.__colorMultiplier.value =
                      Ua.__colorMultipliersValue),
                  null != this.__currentShader.__colorOffset &&
                    (this.__currentShader.__colorOffset.value =
                      Ua.__colorOffsetsValue)))
            : null != this.__currentShaderBuffer
              ? (this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorMultiplier',
                  Ua.__emptyColorValue,
                ),
                this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorOffset',
                  Ua.__emptyColorValue,
                ))
              : null != this.__currentShader &&
                (null != this.__currentShader.__colorMultiplier &&
                  (this.__currentShader.__colorMultiplier.value =
                    Ua.__emptyColorValue),
                null != this.__currentShader.__colorOffset &&
                  (this.__currentShader.__colorOffset.value =
                    Ua.__emptyColorValue));
        },
        applyHasColorTransform: function (a) {
          Ua.__hasColorTransformValue[0] = a;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addBoolOverride(
                'openfl_HasColorTransform',
                Ua.__hasColorTransformValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value =
                Ua.__hasColorTransformValue);
        },
        applyMatrix: function (a) {
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride('openfl_Matrix', a)
            : null != this.__currentShader &&
              null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = a);
        },
        setShader: function (a) {
          this.__currentShaderBuffer = null;
          this.__currentShader != a &&
            (null == a
              ? ((this.__currentShader = null),
                this.__context3D.setProgram(null))
              : ((this.__currentShader = a),
                this.__initShader(a),
                this.__context3D.setProgram(a.program),
                this.__context3D.__flushGLProgram(),
                this.__currentShader.__enable(),
                (this.__context3D.__state.shader = a)));
        },
        setViewport: function () {
          this.__gl.viewport(
            this.__offsetX,
            this.__offsetY,
            this.__displayWidth,
            this.__displayHeight,
          );
        },
        updateShader: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__position &&
              (this.__currentShader.__position.__useArray = !0),
            null != this.__currentShader.__textureCoord &&
              (this.__currentShader.__textureCoord.__useArray = !0),
            this.__context3D.setProgram(this.__currentShader.program),
            this.__context3D.__flushGLProgram(),
            this.__context3D.__flushGLTextures(),
            this.__currentShader.__update());
        },
        useAlphaArray: function () {
          null != this.__currentShader &&
            null != this.__currentShader.__alpha &&
            (this.__currentShader.__alpha.__useArray = !0);
        },
        useColorTransformArray: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__colorMultiplier &&
              (this.__currentShader.__colorMultiplier.__useArray = !0),
            null != this.__currentShader.__colorOffset &&
              (this.__currentShader.__colorOffset.__useArray = !0));
        },
        __clear: function () {
          null == this.__stage || this.__stage.__transparent
            ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1)
            : this.__context3D.clear(
                this.__stage.__colorSplit[0],
                this.__stage.__colorSplit[1],
                this.__stage.__colorSplit[2],
                1,
                0,
                0,
                1,
              );
          this.__cleared = !0;
        },
        __clearShader: function () {
          null != this.__currentShader &&
            (null == this.__currentShaderBuffer
              ? null != this.__currentShader.__bitmap &&
                (this.__currentShader.__bitmap.input = null)
              : this.__currentShaderBuffer.clearOverride(),
            null != this.__currentShader.__texture &&
              (this.__currentShader.__texture.input = null),
            null != this.__currentShader.__textureSize &&
              (this.__currentShader.__textureSize.value = null),
            null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value = null),
            null != this.__currentShader.__position &&
              (this.__currentShader.__position.value = null),
            null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = null),
            this.__currentShader.__clearUseArray());
        },
        __copyShader: function (a) {
          this.__currentShader = a.__currentShader;
          this.__currentShaderBuffer = a.__currentShaderBuffer;
          this.__currentDisplayShader = a.__currentDisplayShader;
          this.__currentGraphicsShader = a.__currentGraphicsShader;
        },
        __getMatrix: function (a, b) {
          var d = qa.__pool.get();
          d.copyFrom(a);
          d.concat(this.__worldTransform);
          if (
            0 == b ||
            (1 == b &&
              0 == d.b &&
              0 == d.c &&
              1.001 > d.a &&
              0.999 < d.a &&
              1.001 > d.d &&
              0.999 < d.d)
          )
            ((d.tx = Math.round(d.tx)), (d.ty = Math.round(d.ty)));
          ab.identity(this.__matrix);
          ab.set(this.__matrix, 0, d.a);
          ab.set(this.__matrix, 1, d.b);
          ab.set(this.__matrix, 4, d.c);
          ab.set(this.__matrix, 5, d.d);
          ab.set(this.__matrix, 12, d.tx);
          ab.set(this.__matrix, 13, d.ty);
          ab.append(
            this.__matrix,
            this.__flipped ? this.__projectionFlipped : this.__projection,
          );
          this.__values[0] = ab.get(this.__matrix, 0);
          this.__values[1] = ab.get(this.__matrix, 1);
          this.__values[2] = ab.get(this.__matrix, 2);
          this.__values[3] = ab.get(this.__matrix, 3);
          this.__values[4] = ab.get(this.__matrix, 4);
          this.__values[5] = ab.get(this.__matrix, 5);
          this.__values[6] = ab.get(this.__matrix, 6);
          this.__values[7] = ab.get(this.__matrix, 7);
          this.__values[8] = ab.get(this.__matrix, 8);
          this.__values[9] = ab.get(this.__matrix, 9);
          this.__values[10] = ab.get(this.__matrix, 10);
          this.__values[11] = ab.get(this.__matrix, 11);
          this.__values[12] = ab.get(this.__matrix, 12);
          this.__values[13] = ab.get(this.__matrix, 13);
          this.__values[14] = ab.get(this.__matrix, 14);
          this.__values[15] = ab.get(this.__matrix, 15);
          qa.__pool.release(d);
          return this.__values;
        },
        __initShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultShader;
        },
        __initDisplayShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultDisplayShader;
        },
        __initGraphicsShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultGraphicsShader;
        },
        __initShaderBuffer: function (a) {
          return null != a
            ? this.__initGraphicsShader(a.shader)
            : this.__defaultGraphicsShader;
        },
        __popMask: function () {
          if (0 != this.__stencilReference) {
            var a = this.__maskObjects.pop();
            1 < this.__stencilReference
              ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  255,
                ),
                this.__context3D.setColorMask(!1, !1, !1, !1),
                this.__renderDrawableMask(a),
                this.__stencilReference--,
                this.__context3D.setStencilActions(2, 1, 5, 5, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  0,
                ),
                this.__context3D.setColorMask(!0, !0, !0, !0))
              : ((this.__stencilReference = 0),
                this.__context3D.setStencilActions(),
                this.__context3D.setStencilReferenceValue(0, 0, 0));
          }
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? (this.__scrollRectMasks.release(
                  this.__maskObjects[this.__maskObjects.length - 1],
                ),
                this.__popMask())
              : this.__popMaskRect());
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            0 < this.__numClipRects
              ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
              : this.__scissorRect());
        },
        __pushMask: function (a) {
          0 == this.__stencilReference &&
            (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4),
            (this.__updatedStencil = !0));
          this.__context3D.setStencilActions(2, 1, 2, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            255,
          );
          this.__context3D.setColorMask(!1, !1, !1, !1);
          this.__renderDrawableMask(a);
          this.__maskObjects.push(a);
          this.__stencilReference++;
          this.__context3D.setStencilActions(2, 1, 5, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            0,
          );
          this.__context3D.setColorMask(!0, !0, !0, !0);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? ((b = this.__scrollRectMasks.get()),
                b.get_graphics().clear(),
                b.get_graphics().beginFill(65280),
                b
                  .get_graphics()
                  .drawRect(
                    a.__scrollRect.x,
                    a.__scrollRect.y,
                    a.__scrollRect.width,
                    a.__scrollRect.height,
                  ),
                b.__renderTransform.copyFrom(a.__renderTransform),
                this.__pushMask(b))
              : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new ja());
          var d = qa.__pool.get();
          d.copyFrom(b);
          d.concat(this.__worldTransform);
          b = this.__clipRects[this.__numClipRects];
          a.__transform(b, d);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            b.__contract(a.x, a.y, a.width, a.height));
          0 > b.height && (b.height = 0);
          0 > b.width && (b.width = 0);
          qa.__pool.release(d);
          this.__scissorRect(b);
          this.__numClipRects++;
        },
        __render: function (a) {
          this.__context3D.setColorMask(!0, !0, !0, !0);
          this.__context3D.setCulling(3);
          this.__context3D.setDepthTest(!1, 0);
          this.__context3D.setStencilActions();
          this.__context3D.setStencilReferenceValue(0, 0, 0);
          this.__context3D.setScissorRectangle(null);
          this.__blendMode = null;
          this.__setBlendMode(10);
          if (null == this.__defaultRenderTarget) {
            if (
              (this.__context3D.__backBufferWantsBestResolution
                ? Ua.__scissorRectangle.setTo(
                    this.__offsetX / this.__pixelRatio,
                    this.__offsetY / this.__pixelRatio,
                    this.__displayWidth / this.__pixelRatio,
                    this.__displayHeight / this.__pixelRatio,
                  )
                : Ua.__scissorRectangle.setTo(
                    this.__offsetX,
                    this.__offsetY,
                    this.__displayWidth,
                    this.__displayHeight,
                  ),
              this.__context3D.setScissorRectangle(Ua.__scissorRectangle),
              (this.__upscaled =
                1 != this.__worldTransform.a || 1 != this.__worldTransform.d),
              this.__renderDrawable(a),
              0 < this.__offsetX || 0 < this.__offsetY)
            )
              (0 < this.__offsetX &&
                (Ua.__scissorRectangle.setTo(
                  0,
                  0,
                  this.__offsetX,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(Ua.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                Ua.__scissorRectangle.setTo(
                  this.__offsetX + this.__displayWidth,
                  0,
                  this.__width,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(Ua.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                0 < this.__offsetY &&
                  (Ua.__scissorRectangle.setTo(
                    0,
                    0,
                    this.__width,
                    this.__offsetY,
                  ),
                  this.__context3D.setScissorRectangle(Ua.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                  Ua.__scissorRectangle.setTo(
                    0,
                    this.__offsetY + this.__displayHeight,
                    this.__width,
                    this.__height,
                  ),
                  this.__context3D.setScissorRectangle(Ua.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                this.__context3D.setScissorRectangle(null));
          } else {
            this.__context3D.__backBufferWantsBestResolution
              ? Ua.__scissorRectangle.setTo(
                  this.__offsetX / this.__pixelRatio,
                  this.__offsetY / this.__pixelRatio,
                  this.__displayWidth / this.__pixelRatio,
                  this.__displayHeight / this.__pixelRatio,
                )
              : Ua.__scissorRectangle.setTo(
                  this.__offsetX,
                  this.__offsetY,
                  this.__displayWidth,
                  this.__displayHeight,
                );
            this.__context3D.setScissorRectangle(Ua.__scissorRectangle);
            var b = a.__mask,
              d = a.__scrollRect;
            a.__mask = null;
            a.__scrollRect = null;
            this.__renderDrawable(a);
            a.__mask = b;
            a.__scrollRect = d;
          }
          this.__context3D.present();
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                oj.renderDrawable(a, this);
                break;
              case 2:
                Fd.renderDrawable(a, this);
                break;
              case 3:
                Ef.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                pj.renderDrawable(a, this);
                break;
              case 6:
                qj.renderDrawable(a, this);
                break;
              case 7:
                Ie.renderDrawable(a, this);
                break;
              case 8:
                Gd.renderDrawable(a, this);
                break;
              case 9:
                V.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                oj.renderDrawableMask(a, this);
                break;
              case 2:
                Fd.renderDrawableMask(a, this);
                break;
              case 3:
                Ef.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                pj.renderDrawableMask(a, this);
                break;
              case 6:
                qj.renderDrawableMask(a, this);
                break;
              case 7:
                Ie.renderDrawableMask(a, this);
                break;
              case 8:
                Gd.renderDrawableMask(a, this);
                break;
              case 9:
                V.renderDrawableMask(a, this);
            }
        },
        __renderFilterPass: function (a, b, d, f) {
          null == f && (f = !0);
          if (null != a && null != b && null != this.__defaultRenderTarget) {
            var g = this.__context3D.__state.renderToTexture,
              k = this.__context3D.__state.renderToTextureDepthStencil,
              l = this.__context3D.__state.renderToTextureAntiAlias,
              h = this.__context3D.__state.renderToTextureSurfaceSelector;
            this.__context3D.setRenderToTexture(
              this.__defaultRenderTarget.getTexture(this.__context3D),
              !1,
            );
            f && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
            b = this.__initShader(b);
            this.setShader(b);
            this.applyAlpha(1);
            this.applyBitmapData(a, d);
            this.applyColorTransform(null);
            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
            this.updateShader();
            d = a.getVertexBuffer(this.__context3D);
            null != b.__position &&
              this.__context3D.setVertexBufferAt(b.__position.index, d, 0, 3);
            null != b.__textureCoord &&
              this.__context3D.setVertexBufferAt(
                b.__textureCoord.index,
                d,
                3,
                2,
              );
            a = a.getIndexBuffer(this.__context3D);
            this.__context3D.drawTriangles(a);
            null != g
              ? this.__context3D.setRenderToTexture(g, k, l, h)
              : this.__context3D.setRenderToBackBuffer();
            this.__clearShader();
          }
        },
        __resize: function (a, b) {
          this.__width = a;
          this.__height = b;
          a =
            null == this.__defaultRenderTarget
              ? this.__stage.stageWidth
              : this.__defaultRenderTarget.width;
          b =
            null == this.__defaultRenderTarget
              ? this.__stage.stageHeight
              : this.__defaultRenderTarget.height;
          if (null == this.__defaultRenderTarget) {
            var d = this.__worldTransform;
            d = Math.round(0 * d.a + 0 * d.c + d.tx);
          } else d = 0;
          this.__offsetX = d;
          null == this.__defaultRenderTarget
            ? ((d = this.__worldTransform),
              (d = Math.round(0 * d.b + 0 * d.d + d.ty)))
            : (d = 0);
          this.__offsetY = d;
          null == this.__defaultRenderTarget
            ? ((d = this.__worldTransform),
              (d = Math.round(a * d.a + 0 * d.c + d.tx - this.__offsetX)))
            : (d = a);
          this.__displayWidth = d;
          null == this.__defaultRenderTarget
            ? ((d = this.__worldTransform),
              (d = Math.round(0 * d.b + b * d.d + d.ty - this.__offsetY)))
            : (d = b);
          this.__displayHeight = d;
          ab.createOrtho(
            this.__projection,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            0,
            this.__displayHeight + 2 * this.__offsetY,
            -1e3,
            1e3,
          );
          ab.createOrtho(
            this.__projectionFlipped,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            this.__displayHeight + 2 * this.__offsetY,
            0,
            -1e3,
            1e3,
          );
        },
        __resumeClipAndMask: function (a) {
          0 < this.__stencilReference
            ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5),
              this.__context3D.setStencilReferenceValue(
                this.__stencilReference,
                255,
                0,
              ))
            : (this.__context3D.setStencilActions(),
              this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects
            ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
            : this.__scissorRect();
        },
        __scissorRect: function (a) {
          if (null != a) {
            var b = Math.floor(a.x),
              d = Math.floor(a.y),
              f = 0 < a.width ? Math.ceil(a.get_right()) - b : 0,
              g = 0 < a.height ? Math.ceil(a.get_bottom()) - d : 0;
            this.__context3D.__backBufferWantsBestResolution &&
              ((g = 1.5 / this.__pixelRatio),
              (b = a.x / this.__pixelRatio),
              (d = a.y / this.__pixelRatio),
              (f = 0 < a.width ? a.get_right() / this.__pixelRatio - b + g : 0),
              (g =
                0 < a.height ? a.get_bottom() / this.__pixelRatio - d + g : 0));
            0 > f && (f = 0);
            0 > g && (g = 0);
            Ua.__scissorRectangle.setTo(b, d, f, g);
            this.__context3D.setScissorRectangle(Ua.__scissorRectangle);
          } else this.__context3D.setScissorRectangle(null);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          if (this.__blendMode != a)
            switch (((this.__blendMode = a), a)) {
              case 0:
                this.__context3D.setBlendFactors(2, 2);
                break;
              case 9:
                this.__context3D.setBlendFactors(1, 5);
                break;
              case 12:
                this.__context3D.setBlendFactors(2, 6);
                break;
              case 14:
                this.__context3D.setBlendFactors(2, 2);
                this.__context3D.__setGLBlendEquation(
                  this.__gl.FUNC_REVERSE_SUBTRACT,
                );
                break;
              default:
                this.__context3D.setBlendFactors(2, 5);
            }
        },
        __setRenderTarget: function (a) {
          this.__defaultRenderTarget = a;
          this.__flipped = null == a;
          null != a && this.__resize(a.width, a.height);
        },
        __setShaderBuffer: function (a) {
          this.setShader(a.shader);
          this.__currentShaderBuffer = a;
        },
        __suspendClipAndMask: function () {
          0 < this.__stencilReference &&
            (this.__context3D.setStencilActions(),
            this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && this.__scissorRect();
        },
        __updateShaderBuffer: function (a) {
          null != this.__currentShader &&
            null != this.__currentShaderBuffer &&
            this.__currentShader.__updateFromBuffer(
              this.__currentShaderBuffer,
              a,
            );
        },
        __class__: Ua,
      });
      var mi = function (a) {
        null == a && (a = !1);
        this.fastCompression = a;
      };
      h['openfl.display.PNGEncoderOptions'] = mi;
      mi.__name__ = 'openfl.display.PNGEncoderOptions';
      mi.prototype = { __class__: mi };
      var ih = function (a) {
        this.onComplete = new wc();
        this.display = a;
        null != a &&
          (a.addEventListener('unload', m(this, this.display_onUnload)),
          Ka.get_current().addChild(a));
      };
      h['openfl.display.Preloader'] = ih;
      ih.__name__ = 'openfl.display.Preloader';
      ih.prototype = {
        start: function () {
          this.ready = !0;
          Ka.get_current().get_loaderInfo().__complete();
          if (null != this.display) {
            var a = new sa('complete', !0, !0);
            this.display.dispatchEvent(a);
            a.isDefaultPrevented() ||
              this.display.dispatchEvent(new sa('unload'));
          } else
            this.complete || ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {
          Ka.get_current().get_loaderInfo().__update(a, b);
          null != this.display &&
            this.display.dispatchEvent(new Cf('progress', !0, !0, a, b));
        },
        display_onUnload: function (a) {
          null != this.display &&
            (this.display.removeEventListener(
              'unload',
              m(this, this.display_onUnload),
            ),
            this.display.parent == Ka.get_current() &&
              Ka.get_current().removeChild(this.display),
            Ka.get_current().stage.set_focus(null),
            (this.display = null));
          this.ready &&
            !this.complete &&
            ((this.complete = !0), this.onComplete.dispatch());
        },
        __class__: ih,
      };
      var Dg = function () {
        ba.call(this);
        var a = this.getBackgroundColor(),
          b = 0;
        70 >
          0.299 * ((a >> 16) & 255) +
            0.587 * ((a >> 8) & 255) +
            0.114 * (a & 255) && (b = 16777215);
        a = this.getHeight() / 2 - 3.5;
        var d = this.getWidth() - 60;
        this.outline = new Pe();
        this.outline.get_graphics().beginFill(b, 0.07);
        this.outline.get_graphics().drawRect(0, 0, d, 7);
        this.outline.set_x(30);
        this.outline.set_y(a);
        this.outline.set_alpha(0);
        this.addChild(this.outline);
        this.progress = new Pe();
        this.progress.get_graphics().beginFill(b, 0.35);
        this.progress.get_graphics().drawRect(0, 0, d - 4, 3);
        this.progress.set_x(32);
        this.progress.set_y(a + 2);
        this.progress.set_scaleX(0);
        this.progress.set_alpha(0);
        this.addChild(this.progress);
        this.startAnimation = Ka.getTimer() + 100;
        this.endAnimation = this.startAnimation + 1e3;
        this.addEventListener(
          'addedToStage',
          m(this, this.this_onAddedToStage),
        );
      };
      h['openfl.display.DefaultPreloader'] = Dg;
      Dg.__name__ = 'openfl.display.DefaultPreloader';
      Dg.__super__ = ba;
      Dg.prototype = w(ba.prototype, {
        getBackgroundColor: function () {
          var a = Ka.get_current().stage.window.context.attributes;
          return Object.prototype.hasOwnProperty.call(a, 'background') &&
            null != a.background
            ? a.background
            : 0;
        },
        getHeight: function () {
          var a = Ka.get_current().stage.window.__height;
          return 0 < a ? a : Ka.get_current().stage.stageHeight;
        },
        getWidth: function () {
          var a = Ka.get_current().stage.window.__width;
          return 0 < a ? a : Ka.get_current().stage.stageWidth;
        },
        onInit: function () {
          this.addEventListener('enterFrame', m(this, this.this_onEnterFrame));
        },
        onLoaded: function () {
          this.removeEventListener(
            'enterFrame',
            m(this, this.this_onEnterFrame),
          );
          this.dispatchEvent(new sa('unload'));
        },
        onUpdate: function (a, b) {
          var d = 0;
          0 < b && ((d = a / b), 1 < d && (d = 1));
          this.progress.set_scaleX(d);
        },
        this_onAddedToStage: function (a) {
          this.removeEventListener(
            'addedToStage',
            m(this, this.this_onAddedToStage),
          );
          this.onInit();
          this.onUpdate(
            this.get_loaderInfo().bytesLoaded,
            this.get_loaderInfo().bytesTotal,
          );
          this.addEventListener('progress', m(this, this.this_onProgress));
          this.addEventListener('complete', m(this, this.this_onComplete));
        },
        this_onComplete: function (a) {
          a.preventDefault();
          this.removeEventListener('progress', m(this, this.this_onProgress));
          this.removeEventListener('complete', m(this, this.this_onComplete));
          this.onLoaded();
        },
        this_onEnterFrame: function (a) {
          a =
            (Ka.getTimer() - this.startAnimation) /
            (this.endAnimation - this.startAnimation);
          0 > a && (a = 0);
          1 < a && (a = 1);
          this.outline.set_alpha(this.progress.set_alpha(a));
        },
        this_onProgress: function (a) {
          this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
        },
        __class__: Dg,
      });
      var Tl = {
          _new: function (a) {
            return {};
          },
        },
        dj = function () {
          this.channels = 0;
          this.filter = 5;
          this.index = this.height = 0;
          this.mipFilter = 2;
          this.wrap = this.width = 0;
        };
      h['openfl.display.ShaderInput'] = dj;
      dj.__name__ = 'openfl.display.ShaderInput';
      dj.prototype = {
        __disableGL: function (a, b) {
          0 > b || a.setTextureAt(b, null);
        },
        __updateGL: function (a, b, d, f, g, k) {
          d = null != d ? d : this.input;
          f = null != f ? f : this.filter;
          g = null != g ? g : this.mipFilter;
          k = null != k ? k : this.wrap;
          null != d
            ? (a.setTextureAt(b, d.getTexture(a)),
              a.setSamplerStateAt(b, k, f, g))
            : a.setTextureAt(b, null);
        },
        __class__: dj,
      };
      var pg = function () {
        this.index = 0;
      };
      h['openfl.display.ShaderParameter'] = pg;
      pg.__name__ = 'openfl.display.ShaderParameter';
      pg.prototype = {
        __disableGL: function (a) {
          if (!(0 > this.index || ((a = a.gl), this.__isUniform)))
            for (var b = 0, d = this.__arrayLength; b < d; ) {
              var f = b++;
              a.disableVertexAttribArray(this.index + f);
            }
        },
        __updateGL: function (a, b) {
          if (!(0 > this.index)) {
            a = a.gl;
            b = null != b ? b : this.value;
            var d = this.__isBool ? b : null,
              f = this.__isFloat ? b : null,
              g = this.__isInt ? b : null;
            if (this.__isUniform)
              if (null != b && b.length >= this.__length)
                switch (this.type) {
                  case 0:
                    a.uniform1i(this.index, d[0] ? 1 : 0);
                    break;
                  case 1:
                    a.uniform2i(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0);
                    break;
                  case 2:
                    a.uniform3i(
                      this.index,
                      d[0] ? 1 : 0,
                      d[1] ? 1 : 0,
                      d[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.uniform4i(
                      this.index,
                      d[0] ? 1 : 0,
                      d[1] ? 1 : 0,
                      d[2] ? 1 : 0,
                      d[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.uniform1f(this.index, f[0]);
                    break;
                  case 5:
                    a.uniform2f(this.index, f[0], f[1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, f[0], f[1], f[2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 8:
                    a.uniform1i(this.index, g[0]);
                    break;
                  case 9:
                    a.uniform2i(this.index, g[0], g[1]);
                    break;
                  case 10:
                    a.uniform3i(this.index, g[0], g[1], g[2]);
                    break;
                  case 11:
                    a.uniform4i(this.index, g[0], g[1], g[2], g[3]);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = f[0];
                    this.__uniformMatrix[1] = f[1];
                    this.__uniformMatrix[2] = f[2];
                    this.__uniformMatrix[3] = f[3];
                    Ec.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = f[0];
                    this.__uniformMatrix[1] = f[1];
                    this.__uniformMatrix[2] = f[2];
                    this.__uniformMatrix[3] = f[3];
                    this.__uniformMatrix[4] = f[4];
                    this.__uniformMatrix[5] = f[5];
                    this.__uniformMatrix[6] = f[6];
                    this.__uniformMatrix[7] = f[7];
                    this.__uniformMatrix[8] = f[8];
                    Ec.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = f[0]),
                      (this.__uniformMatrix[1] = f[1]),
                      (this.__uniformMatrix[2] = f[2]),
                      (this.__uniformMatrix[3] = f[3]),
                      (this.__uniformMatrix[4] = f[4]),
                      (this.__uniformMatrix[5] = f[5]),
                      (this.__uniformMatrix[6] = f[6]),
                      (this.__uniformMatrix[7] = f[7]),
                      (this.__uniformMatrix[8] = f[8]),
                      (this.__uniformMatrix[9] = f[9]),
                      (this.__uniformMatrix[10] = f[10]),
                      (this.__uniformMatrix[11] = f[11]),
                      (this.__uniformMatrix[12] = f[12]),
                      (this.__uniformMatrix[13] = f[13]),
                      (this.__uniformMatrix[14] = f[14]),
                      (this.__uniformMatrix[15] = f[15]),
                      Ec.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
              else
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, 0);
                    break;
                  case 5:
                    a.uniform2f(this.index, 0, 0);
                    break;
                  case 6:
                    a.uniform3f(this.index, 0, 0, 0);
                    break;
                  case 7:
                    a.uniform4f(this.index, 0, 0, 0, 0);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, 0, 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    Ec.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    this.__uniformMatrix[4] = 0;
                    this.__uniformMatrix[5] = 0;
                    this.__uniformMatrix[6] = 0;
                    this.__uniformMatrix[7] = 0;
                    this.__uniformMatrix[8] = 0;
                    Ec.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = 0),
                      (this.__uniformMatrix[1] = 0),
                      (this.__uniformMatrix[2] = 0),
                      (this.__uniformMatrix[3] = 0),
                      (this.__uniformMatrix[4] = 0),
                      (this.__uniformMatrix[5] = 0),
                      (this.__uniformMatrix[6] = 0),
                      (this.__uniformMatrix[7] = 0),
                      (this.__uniformMatrix[8] = 0),
                      (this.__uniformMatrix[9] = 0),
                      (this.__uniformMatrix[10] = 0),
                      (this.__uniformMatrix[11] = 0),
                      (this.__uniformMatrix[12] = 0),
                      (this.__uniformMatrix[13] = 0),
                      (this.__uniformMatrix[14] = 0),
                      (this.__uniformMatrix[15] = 0),
                      Ec.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            else if (
              this.__useArray ||
              (null != b && b.length != this.__length)
            )
              for (k = 0, l = this.__arrayLength; k < l; )
                ((h = k++), a.enableVertexAttribArray(this.index + h));
            else {
              for (var k = 0, l = this.__arrayLength; k < l; ) {
                var h = k++;
                a.disableVertexAttribArray(this.index + h);
              }
              if (null != b)
                switch (this.type) {
                  case 0:
                    a.vertexAttrib1f(this.index, d[0] ? 1 : 0);
                    break;
                  case 1:
                    a.vertexAttrib2f(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0);
                    break;
                  case 2:
                    a.vertexAttrib3f(
                      this.index,
                      d[0] ? 1 : 0,
                      d[1] ? 1 : 0,
                      d[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.vertexAttrib4f(
                      this.index,
                      d[0] ? 1 : 0,
                      d[1] ? 1 : 0,
                      d[2] ? 1 : 0,
                      d[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.vertexAttrib1f(this.index, f[0]);
                    break;
                  case 5:
                    a.vertexAttrib2f(this.index, f[0], f[1]);
                    break;
                  case 6:
                    a.vertexAttrib3f(this.index, f[0], f[1], f[2]);
                    break;
                  case 7:
                    a.vertexAttrib4f(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 8:
                    a.vertexAttrib1f(this.index, g[0]);
                    break;
                  case 9:
                    a.vertexAttrib2f(this.index, g[0], g[1]);
                    break;
                  case 10:
                    a.vertexAttrib3f(this.index, g[0], g[1], g[2]);
                    break;
                  case 11:
                    a.vertexAttrib4f(this.index, g[0], g[1], g[2], g[3]);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, f[0], f[1]);
                    a.vertexAttrib2f(this.index + 1, f[2], f[3]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, f[0], f[1], f[2]);
                    a.vertexAttrib3f(this.index + 1, f[3], f[4], f[5]);
                    a.vertexAttrib3f(this.index + 2, f[6], f[7], f[8]);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, f[0], f[1], f[2], f[3]),
                      a.vertexAttrib4f(this.index + 1, f[4], f[5], f[6], f[7]),
                      a.vertexAttrib4f(
                        this.index + 2,
                        f[8],
                        f[9],
                        f[10],
                        f[11],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        f[12],
                        f[13],
                        f[14],
                        f[15],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
          }
        },
        __updateGLFromBuffer: function (a, b, d, f, g) {
          if (!(0 > this.index))
            if (((a = a.gl), this.__isUniform)) {
              if (f >= this.__length)
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, b[d]);
                    break;
                  case 5:
                    a.uniform2f(this.index, b[d], b[d + 1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, b[d], b[d + 1], b[d + 2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, b[d], b[d + 1], b[d + 2], b[d + 3]);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, b[d] | 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, b[d] | 0, b[d + 1] | 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(
                      this.index,
                      b[d] | 0,
                      b[d + 1] | 0,
                      b[d + 2] | 0,
                    );
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(
                      this.index,
                      b[d] | 0,
                      b[d + 1] | 0,
                      b[d + 2] | 0,
                      b[d + 3] | 0,
                    );
                    break;
                  case 12:
                    this.__uniformMatrix[0] = b[d];
                    this.__uniformMatrix[1] = b[d + 1];
                    this.__uniformMatrix[2] = b[d + 2];
                    this.__uniformMatrix[3] = b[d + 3];
                    Ec.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = b[d];
                    this.__uniformMatrix[1] = b[d + 1];
                    this.__uniformMatrix[2] = b[d + 2];
                    this.__uniformMatrix[3] = b[d + 3];
                    this.__uniformMatrix[4] = b[d + 4];
                    this.__uniformMatrix[5] = b[d + 5];
                    this.__uniformMatrix[6] = b[d + 6];
                    this.__uniformMatrix[7] = b[d + 7];
                    this.__uniformMatrix[8] = b[d + 8];
                    Ec.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = b[d]),
                      (this.__uniformMatrix[1] = b[d + 1]),
                      (this.__uniformMatrix[2] = b[d + 2]),
                      (this.__uniformMatrix[3] = b[d + 3]),
                      (this.__uniformMatrix[4] = b[d + 4]),
                      (this.__uniformMatrix[5] = b[d + 5]),
                      (this.__uniformMatrix[6] = b[d + 6]),
                      (this.__uniformMatrix[7] = b[d + 7]),
                      (this.__uniformMatrix[8] = b[d + 8]),
                      (this.__uniformMatrix[9] = b[d + 9]),
                      (this.__uniformMatrix[10] = b[d + 10]),
                      (this.__uniformMatrix[11] = b[d + 11]),
                      (this.__uniformMatrix[12] = b[d + 12]),
                      (this.__uniformMatrix[13] = b[d + 13]),
                      (this.__uniformMatrix[14] = b[d + 14]),
                      (this.__uniformMatrix[15] = b[d + 15]),
                      Ec.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            } else if (this.__internal || (0 != f && f != this.__length)) {
              b = a.FLOAT;
              this.__isBool ? (b = a.INT) : this.__isInt && (b = a.INT);
              k = 0;
              for (l = this.__arrayLength; k < l; )
                ((h = k++), a.enableVertexAttribArray(this.index + h));
              if (0 < f)
                for (k = 0, l = this.__arrayLength; k < l; )
                  ((h = k++),
                    a.vertexAttribPointer(
                      this.index + h,
                      this.__length,
                      b,
                      !1,
                      4 * this.__length,
                      4 * (d + g * this.__length + h * this.__arrayLength),
                    ));
            } else {
              for (var k = 0, l = this.__arrayLength; k < l; ) {
                var h = k++;
                a.disableVertexAttribArray(this.index + h);
              }
              if (0 < f)
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, b[d]);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, b[d], b[d + 1]);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, b[d], b[d + 1], b[d + 2]);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(
                      this.index,
                      b[d],
                      b[d + 1],
                      b[d + 2],
                      b[d + 3],
                    );
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, b[d], b[d + 1]);
                    a.vertexAttrib2f(this.index + 1, b[d + 2], b[d + 2 + 1]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, b[d], b[d + 1], b[d + 2]);
                    a.vertexAttrib3f(
                      this.index + 1,
                      b[d + 3],
                      b[d + 3 + 1],
                      b[d + 3 + 2],
                    );
                    a.vertexAttrib3f(
                      this.index + 2,
                      b[d + 6],
                      b[d + 6 + 1],
                      b[d + 6 + 2],
                    );
                    break;
                  case 20:
                    (a.vertexAttrib4f(
                      this.index + 0,
                      b[d],
                      b[d + 1],
                      b[d + 2],
                      b[d + 3],
                    ),
                      a.vertexAttrib4f(
                        this.index + 1,
                        b[d + 4],
                        b[d + 4 + 1],
                        b[d + 4 + 2],
                        b[d + 4 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 2,
                        b[d + 8],
                        b[d + 8 + 1],
                        b[d + 8 + 2],
                        b[d + 8 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        b[d + 12],
                        b[d + 12 + 1],
                        b[d + 12 + 2],
                        b[d + 12 + 3],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
        },
        set_name: function (a) {
          this.__internal = R.startsWith(a, 'openfl_');
          return (this.name = a);
        },
        __class__: pg,
        __properties__: { set_name: 'set_name' },
      };
      var Pe = function () {
        da.call(this);
        this.__drawableType = 3;
      };
      h['openfl.display.Shape'] = Pe;
      Pe.__name__ = 'openfl.display.Shape';
      Pe.__super__ = da;
      Pe.prototype = w(da.prototype, {
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new cd(this));
          return this.__graphics;
        },
        __class__: Pe,
        __properties__: w(da.prototype.__properties__, {
          get_graphics: 'get_graphics',
        }),
      });
      var Ff = function (a, b, d, f) {
        wa.call(this);
        this.__drawableType = 6;
        this.enabled = !0;
        this.trackAsMenu = !1;
        this.useHandCursor = !0;
        this.__upState = null != a ? a : new da();
        this.__overState = b;
        this.__downState = d;
        this.set_hitTestState(null != f ? f : new da());
        this.addEventListener('mouseDown', m(this, this.__this_onMouseDown));
        this.addEventListener('mouseOut', m(this, this.__this_onMouseOut));
        this.addEventListener('mouseOver', m(this, this.__this_onMouseOver));
        this.addEventListener('mouseUp', m(this, this.__this_onMouseUp));
        this.__tabEnabled = !0;
        this.set___currentState(this.__upState);
        null != Ff.__constructor &&
          ((a = Ff.__constructor), (Ff.__constructor = null), a(this));
      };
      h['openfl.display.SimpleButton'] = Ff;
      Ff.__name__ = 'openfl.display.SimpleButton';
      Ff.__constructor = null;
      Ff.__super__ = wa;
      Ff.prototype = w(wa.prototype, {
        __getBounds: function (a, b) {
          wa.prototype.__getBounds.call(this, a, b);
          var d = qa.__pool.get(),
            f = this.__currentState.__transform;
          d.a = f.a * b.a + f.b * b.c;
          d.b = f.a * b.b + f.b * b.d;
          d.c = f.c * b.a + f.d * b.c;
          d.d = f.c * b.b + f.d * b.d;
          d.tx = f.tx * b.a + f.ty * b.c + b.tx;
          d.ty = f.tx * b.b + f.ty * b.d + b.ty;
          this.__currentState.__getBounds(a, d);
          qa.__pool.release(d);
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            wa.prototype.__getRenderBounds.call(this, a, b);
          else {
            wa.prototype.__getBounds.call(this, a, b);
            var d = qa.__pool.get(),
              f = this.__currentState.__transform;
            d.a = f.a * b.a + f.b * b.c;
            d.b = f.a * b.b + f.b * b.d;
            d.c = f.c * b.a + f.d * b.c;
            d.d = f.c * b.b + f.d * b.d;
            d.tx = f.tx * b.a + f.ty * b.c + b.tx;
            d.ty = f.tx * b.b + f.ty * b.d + b.ty;
            this.__currentState.__getRenderBounds(a, d);
            qa.__pool.release(d);
          }
        },
        __getCursor: function () {
          return this.useHandCursor && !this.__ignoreEvent && this.enabled
            ? 'button'
            : null;
        },
        __hitTest: function (a, b, d, f, g, k) {
          var l = !1;
          null != this.get_hitTestState()
            ? this.get_hitTestState().__hitTest(a, b, d, f, g, k) &&
              (null != f &&
                (0 == f.length ? (f[0] = k) : (f[f.length - 1] = k)),
              (l = !g || this.mouseEnabled))
            : null != this.__currentState &&
              (!k.get_visible() ||
              this.__isMask ||
              (g && !this.mouseEnabled) ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
                ? (l = !1)
                : this.__currentState.__hitTest(a, b, d, f, g, k) && (l = g));
          if (null != f)
            for (; 1 < f.length && f[f.length - 1] == f[f.length - 2]; )
              f.pop();
          return l;
        },
        __hitTestMask: function (a, b) {
          var d = !1;
          this.__currentState.__hitTestMask(a, b) && (d = !0);
          return d;
        },
        __setStageReference: function (a) {
          wa.prototype.__setStageReference.call(this, a);
          null != this.__currentState &&
            this.__currentState.__setStageReference(a);
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setStageReference(a);
        },
        __setTransformDirty: function () {
          wa.prototype.__setTransformDirty.call(this);
          null != this.__currentState &&
            this.__currentState.__setTransformDirty();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setTransformDirty();
        },
        __update: function (a, b) {
          wa.prototype.__update.call(this, a, b);
          b &&
            (null != this.__currentState && this.__currentState.__update(a, !0),
            null != this.get_hitTestState() &&
              this.get_hitTestState() != this.__currentState &&
              this.get_hitTestState().__update(a, !0));
        },
        __updateTransforms: function (a) {
          wa.prototype.__updateTransforms.call(this, a);
          null != this.__currentState &&
            this.__currentState.__updateTransforms();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__updateTransforms();
        },
        get_downState: function () {
          return this.__downState;
        },
        get_hitTestState: function () {
          return this.__hitTestState;
        },
        set_hitTestState: function (a) {
          null != this.__hitTestState &&
            this.__hitTestState != a &&
            this.__hitTestState != this.get_downState() &&
            this.__hitTestState != this.get_upState() &&
            this.__hitTestState != this.get_overState() &&
            (this.__hitTestState.__renderParent = null);
          null != a &&
            ((a.__renderParent = this),
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty()));
          return (this.__hitTestState = a);
        },
        get_overState: function () {
          return this.__overState;
        },
        get_upState: function () {
          return this.__upState;
        },
        set___currentState: function (a) {
          null != this.__currentState &&
            this.__currentState != this.get_hitTestState() &&
            (this.__currentState.__renderParent = null);
          null != a && null != a.parent && a.parent.removeChild(a);
          da.__supportDOM &&
            null == this.__previousStates &&
            (this.__previousStates = ra.toObjectVector(null));
          if (a != this.__currentState) {
            if (da.__supportDOM) {
              null != this.__currentState &&
                (this.__currentState.__setStageReference(null),
                this.__previousStates.push(this.__currentState));
              var b = this.__previousStates.indexOf(a, 0);
              if (-1 < b) {
                var d = this.__previousStates;
                d.__tempIndex = b;
                b = 0;
                for (var f = []; b < f.length; ) {
                  var g = f[b++];
                  d.insertAt(d.__tempIndex, g);
                  d.__tempIndex++;
                }
                d.splice(d.__tempIndex, 1);
              }
            }
            null != a &&
              ((a.__renderParent = this),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty()));
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
          return (this.__currentState = a);
        },
        __this_onMouseDown: function (a) {
          this.enabled && this.set___currentState(this.get_downState());
        },
        __this_onMouseOut: function (a) {
          this.__ignoreEvent = !1;
          this.get_upState() != this.__currentState &&
            this.set___currentState(this.get_upState());
        },
        __this_onMouseOver: function (a) {
          a.buttonDown && (this.__ignoreEvent = !0);
          this.get_overState() != this.__currentState &&
            null != this.get_overState() &&
            !this.__ignoreEvent &&
            this.enabled &&
            this.set___currentState(this.get_overState());
        },
        __this_onMouseUp: function (a) {
          this.__ignoreEvent = !1;
          this.enabled && null != this.get_overState()
            ? this.set___currentState(this.get_overState())
            : this.set___currentState(this.get_upState());
        },
        __class__: Ff,
        __properties__: w(wa.prototype.__properties__, {
          set___currentState: 'set___currentState',
          get_upState: 'get_upState',
          get_overState: 'get_overState',
          set_hitTestState: 'set_hitTestState',
          get_hitTestState: 'get_hitTestState',
          get_downState: 'get_downState',
        }),
      });
      var rg = function (a, b) {
        hb.call(this);
        this.__drawableType = 5;
        this.set_name(null);
        this.__color = -1;
        this.__colorSplit = [255, 255, 255];
        this.__colorString = '#FFFFFF';
        this.__contentsScaleFactor = 1;
        this.__deltaTime = this.__currentTabOrderIndex = 0;
        this.__displayState = 2;
        this.__logicalHeight =
          this.__logicalWidth =
          this.__lastClickTime =
          this.__mouseY =
          this.__mouseX =
            0;
        this.__displayMatrix = new qa();
        this.__displayRect = new ja();
        this.__renderDirty = !0;
        this.stage3Ds = ra.toObjectVector(null);
        this.stage3Ds.push(new Gf(this));
        this.stage3Ds.push(new Gf(this));
        this.stage3Ds.push(new Gf(this));
        this.stage3Ds.push(new Gf(this));
        this.stage = this;
        this.align = 6;
        this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
        this.__quality = 1;
        this.__scaleMode = 2;
        this.showDefaultContextMenu = !0;
        this.softKeyboardRect = new ja();
        this.stageFocusRect = !0;
        this.__macKeyboard =
          (/AppleWebKit/.test(navigator.userAgent) &&
            /Mobile\/\w+/.test(navigator.userAgent)) ||
          /Mac/.test(navigator.platform);
        this.__clearBeforeRender = !0;
        this.__forceRender = !1;
        this.__stack = [];
        this.__rollOutStack = [];
        this.__mouseOutStack = [];
        this.__touchData = new ic();
        null == Ka.get_current().__loaderInfo &&
          ((Ka.get_current().__loaderInfo = ee.create(null)),
          (Ka.get_current().__loaderInfo.content = Ka.get_current()));
        this.__uncaughtErrorEvents =
          Ka.get_current().__loaderInfo.uncaughtErrorEvents;
        this.application = a.application;
        this.window = a;
        this.set_color(b);
        this.__contentsScaleFactor = a.__scale;
        this.__wasFullscreen = a.__fullscreen;
        this.__resize();
        null == Ka.get_current().stage && this.stage.addChild(Ka.get_current());
      };
      h['openfl.display.Stage'] = rg;
      rg.__name__ = 'openfl.display.Stage';
      rg.__interfaces__ = [Ga];
      rg.__super__ = hb;
      rg.prototype = w(hb.prototype, {
        localToGlobal: function (a) {
          return a.clone();
        },
        __broadcastEvent: function (a) {
          if (
            Object.prototype.hasOwnProperty.call(da.__broadcastEvents.h, a.type)
          )
            for (
              var b = da.__broadcastEvents.h[a.type], d = 0;
              d < b.length;

            ) {
              var f = b[d];
              ++d;
              if (f.stage == this || null == f.stage)
                if (this.__uncaughtErrorEvents.__enabled)
                  try {
                    f.__dispatch(a);
                  } catch (g) {
                    ((Na.lastError = g),
                      (f = Z.caught(g).unwrap()),
                      this.__handleError(f));
                  }
                else f.__dispatch(a);
            }
        },
        __createRenderer: function () {
          var a = (this.window.__width * this.window.__scale) | 0,
            b = (this.window.__height * this.window.__scale) | 0;
          switch (this.window.context.type) {
            case 'canvas':
              this.__renderer = new Fe(this.window.context.canvas2D);
              break;
            case 'dom':
              this.__renderer = new Wg(this.window.context.dom);
              break;
            case 'opengl':
            case 'opengles':
            case 'webgl':
              ((this.context3D = new sb(this)),
                this.context3D.configureBackBuffer(
                  this.stageWidth,
                  this.stageHeight,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                this.context3D.present(),
                (this.__renderer = new Ua(this.context3D)));
          }
          if (null != this.__renderer) {
            var d = this.get_quality();
            this.__renderer.__allowSmoothing = 2 != d;
            this.__renderer.__pixelRatio = this.window.__scale;
            this.__renderer.__worldTransform = this.__displayMatrix;
            this.__renderer.__stage = this;
            this.__renderer.__resize(a, b);
          }
        },
        __dispatchEvent: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var b = hb.prototype.__dispatchEvent.call(this, a);
            } catch (d) {
              ((Na.lastError = d),
                (a = Z.caught(d).unwrap()),
                this.__handleError(a),
                (b = !1));
            }
          else b = hb.prototype.__dispatchEvent.call(this, a);
          return b;
        },
        __dispatchPendingMouseEvent: function () {
          this.__pendingMouseEvent &&
            (this.__onMouse(
              'mouseMove',
              this.__pendingMouseX,
              this.__pendingMouseY,
              0,
            ),
            (this.__pendingMouseEvent = !1));
        },
        __dispatchStack: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var d = b.length;
              if (0 == d) {
                a.eventPhase = 2;
                var f = a.target;
                f.__dispatch(a);
              } else {
                a.eventPhase = 1;
                a.target = b[b.length - 1];
                for (var g = 0, k = d - 1; g < k; ) {
                  var l = g++;
                  b[l].__dispatch(a);
                  if (a.__isCanceled) return;
                }
                a.eventPhase = 2;
                f = a.target;
                f.__dispatch(a);
                if (!a.__isCanceled && a.bubbles)
                  for (a.eventPhase = 3, l = d - 2; 0 <= l; ) {
                    b[l].__dispatch(a);
                    if (a.__isCanceled) break;
                    --l;
                  }
              }
            } catch (u) {
              ((Na.lastError = u),
                (a = Z.caught(u).unwrap()),
                this.__handleError(a));
            }
          else if (((d = b.length), 0 == d))
            ((a.eventPhase = 2), (f = a.target), f.__dispatch(a));
          else {
            a.eventPhase = 1;
            a.target = b[b.length - 1];
            g = 0;
            for (k = d - 1; g < k; )
              if (((l = g++), b[l].__dispatch(a), a.__isCanceled)) return;
            a.eventPhase = 2;
            f = a.target;
            f.__dispatch(a);
            if (!a.__isCanceled && a.bubbles)
              for (a.eventPhase = 3, l = d - 2; 0 <= l; ) {
                b[l].__dispatch(a);
                if (a.__isCanceled) break;
                --l;
              }
          }
        },
        __dispatchTarget: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              return a.__dispatchEvent(b);
            } catch (d) {
              return (
                (Na.lastError = d),
                (a = Z.caught(d).unwrap()),
                this.__handleError(a),
                !1
              );
            }
          else return a.__dispatchEvent(b);
        },
        __drag: function (a) {
          var b = this.__dragObject.parent;
          if (null != b) {
            b = b.__getWorldTransform();
            var d = b.a * b.d - b.b * b.c;
            if (0 == d) ((a.x = -b.tx), (a.y = -b.ty));
            else {
              var f = (1 / d) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
              a.y = (1 / d) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
              a.x = f;
            }
          }
          b = a.x + this.__dragOffsetX;
          a = a.y + this.__dragOffsetY;
          null != this.__dragBounds &&
            (b < this.__dragBounds.x
              ? (b = this.__dragBounds.x)
              : b > this.__dragBounds.get_right() &&
                (b = this.__dragBounds.get_right()),
            a < this.__dragBounds.y
              ? (a = this.__dragBounds.y)
              : a > this.__dragBounds.get_bottom() &&
                (a = this.__dragBounds.get_bottom()));
          this.__dragObject.set_x(b);
          this.__dragObject.set_y(a);
        },
        __getInteractive: function (a) {
          null != a && a.push(this);
          return !0;
        },
        __globalToLocal: function (a, b) {
          a != b && b.copyFrom(a);
          return b;
        },
        __handleError: function (a) {
          var b = new Mf('uncaughtError', !0, !0, a);
          Ka.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b);
          if (!b.__preventDefault) {
            b = Te.toString(Te.exceptionStack());
            console.log(b);
            b = G.string(a);
            console.log(b);
            try {
              if (
                null != a &&
                Object.prototype.hasOwnProperty.call(a, 'stack') &&
                null != a.stack &&
                '' != a.stack
              )
                (console.log(a.stack), (a.stack = a.stack));
              else {
                var d = Te.toString(Te.callStack());
                console.log(d);
              }
            } catch (f) {
              Na.lastError = f;
            }
            throw a;
          }
        },
        __onKey: function (a, b, d) {
          this.__dispatchPendingMouseEvent();
          zb.__altKey = Xa.get_altKey(d);
          zb.__commandKey = Xa.get_metaKey(d);
          zb.__controlKey = Xa.get_ctrlKey(d) && !Xa.get_metaKey(d);
          zb.__ctrlKey = Xa.get_ctrlKey(d);
          zb.__shiftKey = Xa.get_shiftKey(d);
          var f = [];
          null == this.__focus
            ? this.__getInteractive(f)
            : this.__focus.__getInteractive(f);
          if (0 < f.length) {
            switch (b) {
              case 1073741908:
              case 1073741909:
              case 1073741910:
              case 1073741911:
              case 1073741912:
              case 1073741913:
              case 1073741914:
              case 1073741915:
              case 1073741916:
              case 1073741917:
              case 1073741918:
              case 1073741919:
              case 1073741920:
              case 1073741921:
              case 1073741922:
              case 1073741923:
              case 1073742044:
                var g = 3;
                break;
              case 1073742048:
              case 1073742049:
              case 1073742050:
              case 1073742051:
                g = 1;
                break;
              case 1073742052:
              case 1073742053:
              case 1073742054:
              case 1073742055:
                g = 2;
                break;
              default:
                g = 0;
            }
            switch (b) {
              case 8:
                b = 8;
                break;
              case 9:
                b = 9;
                break;
              case 13:
                b = 13;
                break;
              case 27:
                b = 27;
                break;
              case 32:
                b = 32;
                break;
              case 33:
                b = 49;
                break;
              case 34:
                b = 222;
                break;
              case 35:
                b = 51;
                break;
              case 36:
                b = 52;
                break;
              case 37:
                b = 53;
                break;
              case 38:
                b = 55;
                break;
              case 39:
                b = 222;
                break;
              case 40:
                b = 57;
                break;
              case 41:
                b = 48;
                break;
              case 42:
                b = 56;
                break;
              case 44:
                b = 188;
                break;
              case 45:
                b = 189;
                break;
              case 46:
                b = 190;
                break;
              case 47:
                b = 191;
                break;
              case 48:
                b = 48;
                break;
              case 49:
                b = 49;
                break;
              case 50:
                b = 50;
                break;
              case 51:
                b = 51;
                break;
              case 52:
                b = 52;
                break;
              case 53:
                b = 53;
                break;
              case 54:
                b = 54;
                break;
              case 55:
                b = 55;
                break;
              case 56:
                b = 56;
                break;
              case 57:
                b = 57;
                break;
              case 58:
                b = 186;
                break;
              case 59:
                b = 186;
                break;
              case 60:
                b = 60;
                break;
              case 61:
                b = 187;
                break;
              case 62:
                b = 190;
                break;
              case 63:
                b = 191;
                break;
              case 64:
                b = 50;
                break;
              case 91:
                b = 219;
                break;
              case 92:
                b = 220;
                break;
              case 93:
                b = 221;
                break;
              case 94:
                b = 54;
                break;
              case 95:
                b = 189;
                break;
              case 96:
                b = 192;
                break;
              case 97:
                b = 65;
                break;
              case 98:
                b = 66;
                break;
              case 99:
                b = 67;
                break;
              case 100:
                b = 68;
                break;
              case 101:
                b = 69;
                break;
              case 102:
                b = 70;
                break;
              case 103:
                b = 71;
                break;
              case 104:
                b = 72;
                break;
              case 105:
                b = 73;
                break;
              case 106:
                b = 74;
                break;
              case 107:
                b = 75;
                break;
              case 108:
                b = 76;
                break;
              case 109:
                b = 77;
                break;
              case 110:
                b = 78;
                break;
              case 111:
                b = 79;
                break;
              case 112:
                b = 80;
                break;
              case 113:
                b = 81;
                break;
              case 114:
                b = 82;
                break;
              case 115:
                b = 83;
                break;
              case 116:
                b = 84;
                break;
              case 117:
                b = 85;
                break;
              case 118:
                b = 86;
                break;
              case 119:
                b = 87;
                break;
              case 120:
                b = 88;
                break;
              case 121:
                b = 89;
                break;
              case 122:
                b = 90;
                break;
              case 127:
                b = 46;
                break;
              case 1073741881:
                b = 20;
                break;
              case 1073741882:
                b = 112;
                break;
              case 1073741883:
                b = 113;
                break;
              case 1073741884:
                b = 114;
                break;
              case 1073741885:
                b = 115;
                break;
              case 1073741886:
                b = 116;
                break;
              case 1073741887:
                b = 117;
                break;
              case 1073741888:
                b = 118;
                break;
              case 1073741889:
                b = 119;
                break;
              case 1073741890:
                b = 120;
                break;
              case 1073741891:
                b = 121;
                break;
              case 1073741892:
                b = 122;
                break;
              case 1073741893:
                b = 123;
                break;
              case 1073741894:
                b = 301;
                break;
              case 1073741895:
                b = 145;
                break;
              case 1073741896:
                b = 19;
                break;
              case 1073741897:
                b = 45;
                break;
              case 1073741898:
                b = 36;
                break;
              case 1073741899:
                b = 33;
                break;
              case 1073741901:
                b = 35;
                break;
              case 1073741902:
                b = 34;
                break;
              case 1073741903:
                b = 39;
                break;
              case 1073741904:
                b = 37;
                break;
              case 1073741905:
                b = 40;
                break;
              case 1073741906:
                b = 38;
                break;
              case 1073741907:
                b = 144;
                break;
              case 1073741908:
                b = 111;
                break;
              case 1073741909:
                b = 106;
                break;
              case 1073741910:
                b = 109;
                break;
              case 1073741911:
                b = 107;
                break;
              case 1073741912:
                b = 13;
                break;
              case 1073741913:
                b = 97;
                break;
              case 1073741914:
                b = 98;
                break;
              case 1073741915:
                b = 99;
                break;
              case 1073741916:
                b = 100;
                break;
              case 1073741917:
                b = 101;
                break;
              case 1073741918:
                b = 102;
                break;
              case 1073741919:
                b = 103;
                break;
              case 1073741920:
                b = 104;
                break;
              case 1073741921:
                b = 105;
                break;
              case 1073741922:
                b = 96;
                break;
              case 1073741923:
                b = 110;
                break;
              case 1073741925:
                b = 302;
                break;
              case 1073741928:
                b = 124;
                break;
              case 1073741929:
                b = 125;
                break;
              case 1073741930:
                b = 126;
                break;
              case 1073741982:
                b = 13;
                break;
              case 1073742044:
                b = 110;
                break;
              case 1073742048:
                b = 17;
                break;
              case 1073742049:
                b = 16;
                break;
              case 1073742050:
                b = 18;
                break;
              case 1073742051:
                b = 15;
                break;
              case 1073742052:
                b = 17;
                break;
              case 1073742053:
                b = 16;
                break;
              case 1073742054:
                b = 18;
                break;
              case 1073742055:
                b = 15;
            }
            var k = Hl.__getCharCode(b, Xa.get_shiftKey(d));
            if (
              'keyUp' == a &&
              (32 == b || 13 == b) &&
              this.__focus instanceof ba
            ) {
              var l = Fa.__cast(this.__focus, ba);
              if (l.get_buttonMode() && 1 == l.focusRect) {
                var h = I.__pool.get(),
                  p = I.__pool.get();
                p.x = this.__mouseX;
                p.y = this.__mouseY;
                l = zb.__create(
                  'click',
                  0,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  l.__globalToLocal(p, h),
                  l,
                );
                this.__dispatchStack(l, f);
                l.__updateAfterEventFlag && this.__renderAfterEvent();
                I.__pool.release(p);
                I.__pool.release(h);
              }
            }
            g = new rj(
              a,
              !0,
              !0,
              k,
              b,
              g,
              this.__macKeyboard
                ? Xa.get_ctrlKey(d) || Xa.get_metaKey(d)
                : Xa.get_ctrlKey(d),
              Xa.get_altKey(d),
              Xa.get_shiftKey(d),
              Xa.get_ctrlKey(d),
              Xa.get_metaKey(d),
            );
            f.reverse();
            this.__dispatchStack(g, f);
            if (g.__preventDefault)
              'keyDown' == a
                ? this.window.onKeyDown.cancel()
                : this.window.onKeyUp.cancel();
            else if ('keyDown' == a && 9 == b) {
              f = [];
              this.__tabTest(f);
              k = -1;
              a = null;
              b = Xa.get_shiftKey(d) ? -1 : 1;
              if (1 < f.length) {
                Cc.sort(f, function (a, b) {
                  return a.get_tabIndex() - b.get_tabIndex();
                });
                if (-1 != f[f.length - 1].get_tabIndex())
                  for (p = 0; p < f.length; ) {
                    if (-1 < f[p].get_tabIndex()) {
                      0 < p && f.splice(0, p);
                      break;
                    }
                    ++p;
                  }
                if (null != this.get_focus()) {
                  p = this.get_focus();
                  for (h = f.indexOf(p); -1 == h && null != p; ) {
                    k = p.parent;
                    if (null != k && k.get_tabChildren()) {
                      p = k.getChildIndex(p);
                      if (-1 == p) {
                        p = k;
                        continue;
                      }
                      for (
                        p += b;
                        Xa.get_shiftKey(d) ? 0 <= p : p < k.get_numChildren();

                      ) {
                        l = k.getChildAt(p);
                        if (
                          l instanceof wa &&
                          ((h = Fa.__cast(l, wa)), (h = f.indexOf(h)), -1 != h)
                        ) {
                          b = 0;
                          break;
                        }
                        p += b;
                      }
                    } else
                      Xa.get_shiftKey(d) &&
                        ((h = f.indexOf(k)), -1 != h && (b = 0));
                    p = k;
                  }
                  k = 0 > h ? 0 : h + b;
                } else k = this.__currentTabOrderIndex;
              } else
                1 == f.length &&
                  ((a = f[0]), this.get_focus() == a && (a = null));
              h = 0 <= k && k < f.length;
              1 == f.length || (0 == f.length && null != this.get_focus())
                ? (k = 0)
                : 1 < f.length &&
                  (0 > k && (k += f.length),
                  (k %= f.length),
                  (a = f[k]),
                  a == this.get_focus() &&
                    ((k += b),
                    0 > k && (k += f.length),
                    (k %= f.length),
                    (a = f[k])));
              b = null;
              null != this.get_focus() &&
                ((b = new Hf(
                  'keyFocusChange',
                  !0,
                  !0,
                  a,
                  Xa.get_shiftKey(d),
                  0,
                )),
                (f = []),
                this.get_focus().__getInteractive(f),
                f.reverse(),
                this.__dispatchStack(b, f),
                b.isDefaultPrevented() && this.window.onKeyDown.cancel());
              (null != b && b.isDefaultPrevented()) ||
                ((this.__currentTabOrderIndex = k),
                null != a && this.set_focus(a),
                h && this.window.onKeyDown.cancel());
            } else if (
              'keyDown' == a &&
              null != this.get_focus() &&
              !(this.get_focus() instanceof Kc) &&
              (this.__macKeyboard
                ? Xa.get_ctrlKey(d) || Xa.get_metaKey(d)
                : Xa.get_ctrlKey(d)) &&
              !Xa.get_altKey(d) &&
              !Xa.get_shiftKey(d)
            )
              switch (b) {
                case 65:
                  d = new sa('selectAll', !0, !0);
                  this.get_focus().dispatchEvent(d);
                  break;
                case 67:
                  d = new sa('copy', !0, !0);
                  this.get_focus().dispatchEvent(d);
                  break;
                case 86:
                  d = new sa('paste', !0, !0);
                  this.get_focus().dispatchEvent(d);
                  break;
                case 88:
                  ((d = new sa('cut', !0, !0)),
                    this.get_focus().dispatchEvent(d));
              }
            g.__updateAfterEventFlag && this.__renderAfterEvent();
          }
        },
        __onLimeCreateWindow: function (a) {
          if (this.window == a) {
            var b = this;
            a.onActivate.add(function () {
              b.__onLimeWindowActivate(a);
            });
            var d = this;
            a.onClose.add(
              function () {
                d.__onLimeWindowClose(a);
              },
              !1,
              -9e3,
            );
            var f = this;
            a.onDeactivate.add(function () {
              f.__onLimeWindowDeactivate(a);
            });
            var g = this;
            var k = function (b) {
              g.__onLimeWindowDropFile(a, b);
            };
            a.onDropFile.add(k);
            var l = this;
            a.onEnter.add(function () {
              l.__onLimeWindowEnter(a);
            });
            var h = this;
            a.onExpose.add(function () {
              h.__onLimeWindowExpose(a);
            });
            var p = this;
            a.onFocusIn.add(function () {
              p.__onLimeWindowFocusIn(a);
            });
            var r = this;
            a.onFocusOut.add(function () {
              r.__onLimeWindowFocusOut(a);
            });
            var t = this;
            a.onFullscreen.add(function () {
              t.__onLimeWindowFullscreen(a);
            });
            var n = this;
            k = function (b, d) {
              n.__onLimeKeyDown(a, b, d);
            };
            a.onKeyDown.add(k);
            var q = this;
            k = function (b, d) {
              q.__onLimeKeyUp(a, b, d);
            };
            a.onKeyUp.add(k);
            var E = this;
            a.onLeave.add(function () {
              E.__onLimeWindowLeave(a);
            });
            var C = this;
            a.onMinimize.add(function () {
              C.__onLimeWindowMinimize(a);
            });
            var x = this;
            k = function (b, d, f) {
              x.__onLimeMouseDown(a, b, d, f);
            };
            a.onMouseDown.add(k);
            var y = this;
            k = function (b, d) {
              y.__onLimeMouseMove(a, b, d);
            };
            a.onMouseMove.add(k);
            var z = this;
            k = function (b, d) {
              z.__onLimeMouseMoveRelative(a, b, d);
            };
            a.onMouseMoveRelative.add(k);
            var P = this;
            k = function (b, d, f) {
              P.__onLimeMouseUp(a, b, d, f);
            };
            a.onMouseUp.add(k);
            var B = this;
            k = function (b, d, f) {
              B.__onLimeMouseWheel(a, b, d, f);
            };
            a.onMouseWheel.add(k);
            var K = this;
            k = function (b, d) {
              K.__onLimeWindowMove(a, b, d);
            };
            a.onMove.add(k);
            a.onRender.add(m(this, this.__onLimeRender));
            a.onRenderContextLost.add(m(this, this.__onLimeRenderContextLost));
            a.onRenderContextRestored.add(
              m(this, this.__onLimeRenderContextRestored),
            );
            var w = this;
            k = function (b, d) {
              w.__onLimeWindowResize(a, b, d);
            };
            a.onResize.add(k);
            var v = this;
            a.onRestore.add(function () {
              v.__onLimeWindowRestore(a);
            });
            var F = this;
            k = function (b, d, f) {
              F.__onLimeTextEdit(a, b, d, f);
            };
            a.onTextEdit.add(k);
            var J = this;
            k = function (b) {
              J.__onLimeTextInput(a, b);
            };
            a.onTextInput.add(k);
            this.__onLimeWindowCreate(a);
          }
        },
        __onLimeGamepadAxisMove: function (a, b, d) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              ob.__onGamepadAxisMove(a, b, d);
            } catch (f) {
              ((Na.lastError = f),
                (a = Z.caught(f).unwrap()),
                this.__handleError(a));
            }
          else ob.__onGamepadAxisMove(a, b, d);
        },
        __onLimeGamepadButtonDown: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              ob.__onGamepadButtonDown(a, b);
            } catch (d) {
              ((Na.lastError = d),
                (a = Z.caught(d).unwrap()),
                this.__handleError(a));
            }
          else ob.__onGamepadButtonDown(a, b);
        },
        __onLimeGamepadButtonUp: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              ob.__onGamepadButtonUp(a, b);
            } catch (d) {
              ((Na.lastError = d),
                (a = Z.caught(d).unwrap()),
                this.__handleError(a));
            }
          else ob.__onGamepadButtonUp(a, b);
        },
        __onLimeGamepadConnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              ob.__onGamepadConnect(a);
            } catch (l) {
              Na.lastError = l;
              var b = Z.caught(l).unwrap();
              this.__handleError(b);
            }
          else ob.__onGamepadConnect(a);
          var d = this;
          b = function (b, f) {
            d.__onLimeGamepadAxisMove(a, b, f);
          };
          a.onAxisMove.add(b);
          var f = this;
          b = function (b) {
            f.__onLimeGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(b);
          var g = this;
          b = function (b) {
            g.__onLimeGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(b);
          var k = this;
          a.onDisconnect.add(function () {
            k.__onLimeGamepadDisconnect(a);
          });
        },
        __onLimeGamepadDisconnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              ob.__onGamepadDisconnect(a);
            } catch (b) {
              ((Na.lastError = b),
                (a = Z.caught(b).unwrap()),
                this.__handleError(a));
            }
          else ob.__onGamepadDisconnect(a);
        },
        __onLimeKeyDown: function (a, b, d) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyDown', b, d);
        },
        __onLimeKeyUp: function (a, b, d) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyUp', b, d);
        },
        __onLimeModuleExit: function (a) {
          null != this.window &&
            ((a = new sa('deactivate')), this.__broadcastEvent(a));
        },
        __onLimeMouseDown: function (a, b, d, f) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (f) {
              case 1:
                var g = 'middleMouseDown';
                break;
              case 2:
                g = 'rightMouseDown';
                break;
              default:
                g = 'mouseDown';
            }
            this.__onMouse(g, (b * a.__scale) | 0, (d * a.__scale) | 0, f);
            this.showDefaultContextMenu || 2 != f || a.onMouseDown.cancel();
          }
        },
        __onLimeMouseMove: function (a, b, d) {
          null != this.window &&
            this.window == a &&
            ((this.__pendingMouseEvent = !0),
            (this.__pendingMouseX = (b * a.__scale) | 0),
            (this.__pendingMouseY = (d * a.__scale) | 0));
        },
        __onLimeMouseMoveRelative: function (a, b, d) {},
        __onLimeMouseUp: function (a, b, d, f) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (f) {
              case 1:
                var g = 'middleMouseUp';
                break;
              case 2:
                g = 'rightMouseUp';
                break;
              default:
                g = 'mouseUp';
            }
            this.__onMouse(g, (b * a.__scale) | 0, (d * a.__scale) | 0, f);
            this.showDefaultContextMenu || 2 != f || a.onMouseUp.cancel();
          }
        },
        __onLimeMouseWheel: function (a, b, d, f) {
          null != this.window &&
            this.window == a &&
            (this.__dispatchPendingMouseEvent(),
            f == We.PIXELS
              ? this.__onMouseWheel((b * a.__scale) | 0, (d * a.__scale) | 0, f)
              : this.__onMouseWheel(b | 0, d | 0, f));
        },
        __renderAfterEvent: function () {
          this.__render(this.window.context);
        },
        __render: function (a) {
          a = !1;
          var b =
            null != this.__renderer &&
            (this.__renderDirty || this.__forceRender);
          if (this.__invalidated && b) {
            this.__invalidated = !1;
            var d = new sa('render');
            this.__broadcastEvent(d);
          }
          this.__update(!1, !0);
          if (null != this.__renderer) {
            if (null != this.context3D) {
              for (d = this.stage3Ds.iterator(); d.hasNext(); ) {
                var f = d.next();
                this.context3D.__renderStage3D(f);
              }
              this.context3D.__present && (b = !0);
            }
            b
              ? (null == this.context3D && this.__renderer.__clear(),
                this.__renderer.__render(this))
              : null == this.context3D && (a = !0);
            null != this.context3D &&
              (this.context3D.__present
                ? (this.__renderer.__cleared || this.__renderer.__clear(),
                  (this.context3D.__present = !1),
                  (this.context3D.__cleared = !1))
                : (a = !0));
            this.__renderer.__cleared = !1;
          }
          return a;
        },
        __onLimeRender: function (a) {
          this.__rendering ||
            ((this.__rendering = !0),
            this.__broadcastEvent(new sa('enterFrame')),
            this.__broadcastEvent(new sa('frameConstructed')),
            this.__broadcastEvent(new sa('exitFrame')),
            (this.__renderable = !0),
            this.__enterFrame(this.__deltaTime),
            (this.__deltaTime = 0),
            this.__render(a) && this.window.onRender.cancel(),
            (this.__rendering = !1));
        },
        __onLimeRenderContextLost: function () {
          this.context3D = this.__renderer = null;
          for (var a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__lostContext();
        },
        __onLimeRenderContextRestored: function (a) {
          this.__createRenderer();
          for (a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__restoreContext();
        },
        __onLimeTextEdit: function (a, b, d, f) {},
        __onLimeTextInput: function (a, b) {
          if (null != this.window && this.window == a) {
            var d = [];
            null == this.__focus
              ? this.__getInteractive(d)
              : this.__focus.__getInteractive(d);
            b = new me('textInput', !0, !0, b);
            0 < d.length
              ? (d.reverse(), this.__dispatchStack(b, d))
              : this.__dispatchEvent(b);
            b.isDefaultPrevented() && a.onTextInput.cancel();
          }
        },
        __onLimeTouchCancel: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchMove: function (a) {
          this.__onTouch('touchMove', a, this.__primaryTouch == a);
        },
        __onLimeTouchEnd: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchStart: function (a) {
          null == this.__primaryTouch && (this.__primaryTouch = a);
          this.__onTouch('touchBegin', a, this.__primaryTouch == a);
        },
        __onLimeUpdate: function (a) {
          this.__deltaTime = a;
          this.__dispatchPendingMouseEvent();
        },
        __onLimeWindowActivate: function (a) {},
        __onLimeWindowClose: function (a) {
          this.window == a && (this.window = null);
          this.__primaryTouch = null;
          a = new sa('deactivate');
          this.__broadcastEvent(a);
        },
        __onLimeWindowCreate: function (a) {
          null != this.window &&
            this.window == a &&
            null != a.context &&
            this.__createRenderer();
        },
        __onLimeWindowDeactivate: function (a) {},
        __onLimeWindowDropFile: function (a, b) {},
        __onLimeWindowEnter: function (a) {},
        __onLimeWindowExpose: function (a) {
          null != this.window && this.window == a && (this.__renderDirty = !0);
        },
        __onLimeWindowFocusIn: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__renderDirty = !0),
            (a = new sa('activate')),
            this.__broadcastEvent(a),
            this.set_focus(this.__cacheFocus));
        },
        __onLimeWindowFocusOut: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__primaryTouch = null),
            (a = new sa('deactivate')),
            this.__broadcastEvent(a),
            (a = this.get_focus()),
            this.set_focus(null),
            (this.__cacheFocus = a),
            (zb.__altKey = !1),
            (zb.__commandKey = !1),
            (zb.__ctrlKey = !1),
            (zb.__shiftKey = !1));
        },
        __onLimeWindowFullscreen: function (a) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen ||
              ((this.__wasFullscreen = !0),
              2 == this.__displayState && (this.__displayState = 1),
              this.__dispatchEvent(new Le('fullScreen', !1, !1, !0, !0))));
        },
        __onLimeWindowLeave: function (a) {
          null == this.window ||
            this.window != a ||
            zb.__buttonDown ||
            (this.__dispatchPendingMouseEvent(),
            (a = new sa('mouseLeave')),
            this.__dispatchEvent(a));
        },
        __onLimeWindowMinimize: function (a) {},
        __onLimeWindowMove: function (a, b, d) {},
        __onLimeWindowResize: function (a, b, d) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen &&
              !a.__fullscreen &&
              ((this.__wasFullscreen = !1),
              (this.__displayState = 2),
              this.__dispatchEvent(new Le('fullScreen', !1, !1, !1, !0))));
        },
        __onLimeWindowRestore: function (a) {
          null != this.window &&
            this.window == a &&
            this.__wasFullscreen &&
            !a.__fullscreen &&
            ((this.__wasFullscreen = !1),
            (this.__displayState = 2),
            this.__dispatchEvent(new Le('fullScreen', !1, !1, !1, !0)));
        },
        __onMouse: function (a, b, d, f) {
          if (!(2 < f)) {
            var g = I.__pool.get();
            g.setTo(b, d);
            b = this.__displayMatrix;
            d = b.a * b.d - b.b * b.c;
            if (0 == d) ((g.x = -b.tx), (g.y = -b.ty));
            else {
              var k = (1 / d) * (b.c * (b.ty - g.y) + b.d * (g.x - b.tx));
              g.y = (1 / d) * (b.a * (g.y - b.ty) + b.b * (b.tx - g.x));
              g.x = k;
            }
            this.__mouseX = g.x;
            this.__mouseY = g.y;
            b = [];
            this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this)
              ? (k = b[b.length - 1])
              : ((k = this), (b = [this]));
            null == k && (k = this);
            var l = null,
              h = !1;
            switch (a) {
              case 'middleMouseDown':
                this.__mouseDownMiddle = k;
                h = !0;
                break;
              case 'middleMouseUp':
                this.__mouseDownMiddle == k && (l = 'middleClick');
                this.__mouseDownMiddle = null;
                h = !0;
                break;
              case 'mouseDown':
                null != this.get_focus()
                  ? this.get_focus() != k &&
                    ((d = new Hf('mouseFocusChange', !0, !0, k, !1, 0)),
                    this.get_focus().dispatchEvent(d),
                    d.isDefaultPrevented() ||
                      (k.__allowMouseFocus()
                        ? this.set_focus(k)
                        : this.set_focus(null)))
                  : k.__allowMouseFocus()
                    ? this.set_focus(k)
                    : this.set_focus(null);
                this.__mouseDownLeft = k;
                this.__lastClickTarget != k &&
                  ((this.__lastClickTarget = null), (this.__lastClickTime = 0));
                h = zb.__buttonDown = !0;
                break;
              case 'mouseUp':
                null != this.__mouseDownLeft &&
                  ((zb.__buttonDown = !1),
                  this.__mouseDownLeft == k
                    ? (l = 'click')
                    : ((h = zb.__create(
                        'releaseOutside',
                        1,
                        0,
                        this.__mouseX,
                        this.__mouseY,
                        new I(this.__mouseX, this.__mouseY),
                        this,
                      )),
                      this.__mouseDownLeft.dispatchEvent(h)),
                  (this.__mouseDownLeft = null));
                h = !0;
                break;
              case 'rightMouseDown':
                this.__mouseDownRight = k;
                h = !0;
                break;
              case 'rightMouseUp':
                (this.__mouseDownRight == k && (l = 'rightClick'),
                  (this.__mouseDownRight = null),
                  (h = !0));
            }
            d = I.__pool.get();
            h = zb.__create(
              a,
              f,
              h ? this.window.clickCount : 0,
              this.__mouseX,
              this.__mouseY,
              k.__globalToLocal(g, d),
              k,
            );
            this.__dispatchStack(h, b);
            h.__updateAfterEventFlag && this.__renderAfterEvent();
            null != l &&
              ((h = zb.__create(
                l,
                f,
                0,
                this.__mouseX,
                this.__mouseY,
                k.__globalToLocal(g, d),
                k,
              )),
              this.__dispatchStack(h, b),
              h.__updateAfterEventFlag && this.__renderAfterEvent(),
              'mouseUp' == a &&
                (k.doubleClickEnabled
                  ? ((a = Ka.getTimer()),
                    500 > a - this.__lastClickTime &&
                    k == this.__lastClickTarget
                      ? ((h = zb.__create(
                          'doubleClick',
                          f,
                          0,
                          this.__mouseX,
                          this.__mouseY,
                          k.__globalToLocal(g, d),
                          k,
                        )),
                        this.__dispatchStack(h, b),
                        h.__updateAfterEventFlag && this.__renderAfterEvent(),
                        (this.__lastClickTime = 0),
                        (this.__lastClickTarget = null))
                      : ((this.__lastClickTarget = k),
                        (this.__lastClickTime = a)))
                  : ((this.__lastClickTarget = null),
                    (this.__lastClickTime = 0))));
            if ('auto' == sj.__cursor && !sj.__hidden) {
              h = null;
              if (null != this.__mouseDownLeft)
                h = this.__mouseDownLeft.__getCursor();
              else
                for (a = 0; a < b.length; )
                  if (
                    ((h = b[a]),
                    ++a,
                    (h = h.__getCursor()),
                    null != h && null != this.window)
                  ) {
                    this.window.set_cursor(gm.toLimeCursor(h));
                    break;
                  }
              null == h &&
                null != this.window &&
                this.window.set_cursor(Vb.ARROW);
            }
            k != this.__mouseOverTarget &&
              null != this.__mouseOverTarget &&
              ((h = zb.__create(
                'mouseOut',
                f,
                0,
                this.__mouseX,
                this.__mouseY,
                this.__mouseOverTarget.__globalToLocal(g, d),
                this.__mouseOverTarget,
              )),
              this.__dispatchStack(h, this.__mouseOutStack),
              h.__updateAfterEventFlag && this.__renderAfterEvent());
            for (a = 0; a < this.__rollOutStack.length; )
              ((l = this.__rollOutStack[a]),
                -1 == b.indexOf(l)
                  ? (M.remove(this.__rollOutStack, l),
                    (h = zb.__create(
                      'rollOut',
                      f,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(g, d),
                      l,
                    )),
                    (h.bubbles = !1),
                    this.__dispatchTarget(l, h),
                    h.__updateAfterEventFlag && this.__renderAfterEvent())
                  : ++a);
            for (a = 0; a < b.length; )
              ((l = b[a]),
                ++a,
                -1 == this.__rollOutStack.indexOf(l) &&
                  null != this.__mouseOverTarget &&
                  (l.hasEventListener('rollOver') &&
                    ((h = zb.__create(
                      'rollOver',
                      f,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(g, d),
                      l,
                    )),
                    (h.bubbles = !1),
                    this.__dispatchTarget(l, h),
                    h.__updateAfterEventFlag && this.__renderAfterEvent()),
                  (l.hasEventListener('rollOut') ||
                    l.hasEventListener('rollOver')) &&
                    this.__rollOutStack.push(l)));
            k != this.__mouseOverTarget &&
              (null != k &&
                ((h = zb.__create(
                  'mouseOver',
                  f,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  k.__globalToLocal(g, d),
                  k,
                )),
                this.__dispatchStack(h, b),
                h.__updateAfterEventFlag && this.__renderAfterEvent()),
              (this.__mouseOverTarget = k),
              (this.__mouseOutStack = b));
            null != this.__dragObject &&
              (this.__drag(g),
              (f = null),
              this.__mouseOverTarget == this.__dragObject
                ? ((k = this.__dragObject.mouseEnabled),
                  (a = this.__dragObject.mouseChildren),
                  (this.__dragObject.mouseEnabled = !1),
                  (this.__dragObject.mouseChildren = !1),
                  (b = []),
                  this.__hitTest(
                    this.__mouseX,
                    this.__mouseY,
                    !0,
                    b,
                    !0,
                    this,
                  ) && (f = b[b.length - 1]),
                  (this.__dragObject.mouseEnabled = k),
                  (this.__dragObject.mouseChildren = a))
                : this.__mouseOverTarget != this &&
                  (f = this.__mouseOverTarget),
              (this.__dragObject.dropTarget = f));
            I.__pool.release(g);
            I.__pool.release(d);
          }
        },
        __onMouseWheel: function (a, b, d) {
          var f = this.__mouseX,
            g = this.__mouseY;
          a = [];
          if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this))
            var k = a[a.length - 1];
          else ((k = this), (a = [this]));
          null == k && (k = this);
          d = I.__pool.get();
          d.setTo(f, g);
          f = this.__displayMatrix;
          g = f.a * f.d - f.b * f.c;
          if (0 == g) ((d.x = -f.tx), (d.y = -f.ty));
          else {
            var l = (1 / g) * (f.c * (f.ty - d.y) + f.d * (d.x - f.tx));
            d.y = (1 / g) * (f.a * (d.y - f.ty) + f.b * (f.tx - d.x));
            d.x = l;
          }
          b |= 0;
          b = zb.__create(
            'mouseWheel',
            0,
            0,
            this.__mouseX,
            this.__mouseY,
            k.__globalToLocal(d, d),
            k,
            b,
          );
          b.cancelable = !0;
          this.__dispatchStack(b, a);
          b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
          b.__updateAfterEventFlag && this.__renderAfterEvent();
          I.__pool.release(d);
        },
        __onTouch: function (a, b, d) {
          var f = I.__pool.get();
          f.setTo(
            Math.round(b.x * this.window.__width * this.window.__scale),
            Math.round(b.y * this.window.__height * this.window.__scale),
          );
          var g = this.__displayMatrix,
            k = g.a * g.d - g.b * g.c;
          if (0 == k) ((f.x = -g.tx), (f.y = -g.ty));
          else {
            var l = (1 / k) * (g.c * (g.ty - f.y) + g.d * (f.x - g.tx));
            f.y = (1 / k) * (g.a * (f.y - g.ty) + g.b * (g.tx - f.x));
            f.x = l;
          }
          g = f.x;
          k = f.y;
          l = [];
          if (this.__hitTest(g, k, !1, l, !0, this)) var h = l[l.length - 1];
          else ((h = this), (l = [this]));
          null == h && (h = this);
          var p = b.id;
          if (this.__touchData.h.hasOwnProperty(p))
            var r = this.__touchData.h[p];
          else
            ((r = If.__pool.get()),
              r.reset(),
              (r.touch = b),
              (this.__touchData.h[p] = r));
          var t = null,
            n = !1;
          switch (a) {
            case 'touchBegin':
              r.touchDownTarget = h;
              break;
            case 'touchEnd':
              (r.touchDownTarget == h && (t = 'touchTap'),
                (r.touchDownTarget = null),
                (n = !0));
          }
          var q = I.__pool.get();
          a = Jd.__create(a, null, g, k, h.__globalToLocal(f, q), h);
          a.touchPointID = p;
          a.isPrimaryTouchPoint = d;
          a.pressure = b.pressure;
          this.__dispatchStack(a, l);
          a.__updateAfterEventFlag && this.__renderAfterEvent();
          null != t &&
            ((a = Jd.__create(t, null, g, k, h.__globalToLocal(f, q), h)),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = d),
            (a.pressure = b.pressure),
            this.__dispatchStack(a, l),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          t = r.touchOverTarget;
          h != t &&
            null != t &&
            ((a = Jd.__create(
              'touchOut',
              null,
              g,
              k,
              t.__globalToLocal(f, q),
              t,
            )),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = d),
            (a.pressure = b.pressure),
            this.__dispatchTarget(t, a),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          for (var E = r.rollOutStack, m, C = 0; C < E.length; )
            ((m = E[C]),
              -1 == l.indexOf(m)
                ? (M.remove(E, m),
                  (a = Jd.__create(
                    'touchRollOut',
                    null,
                    g,
                    k,
                    t.__globalToLocal(f, q),
                    t,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = d),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(m, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent())
                : ++C);
          for (C = 0; C < l.length; )
            ((m = l[C]),
              ++C,
              -1 == E.indexOf(m) &&
                (m.hasEventListener('touchRollOver') &&
                  ((a = Jd.__create(
                    'touchRollOver',
                    null,
                    g,
                    k,
                    t.__globalToLocal(f, q),
                    m,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = d),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(m, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent()),
                m.hasEventListener('touchRollOut') && E.push(m)));
          h != t &&
            (null != h &&
              ((a = Jd.__create(
                'touchOver',
                null,
                g,
                k,
                h.__globalToLocal(f, q),
                h,
              )),
              (a.touchPointID = p),
              (a.isPrimaryTouchPoint = d),
              (a.bubbles = !0),
              (a.pressure = b.pressure),
              this.__dispatchTarget(h, a),
              a.__updateAfterEventFlag && this.__renderAfterEvent()),
            (r.touchOverTarget = h));
          I.__pool.release(f);
          I.__pool.release(q);
          n && (this.__touchData.remove(p), r.reset(), If.__pool.release(r));
        },
        __registerLimeModule: function (a) {
          a.onCreateWindow.add(m(this, this.__onLimeCreateWindow));
          a.onUpdate.add(m(this, this.__onLimeUpdate));
          a.onExit.add(m(this, this.__onLimeModuleExit), !1, 0);
          for (a = oc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onLimeGamepadConnect(b);
          }
          oc.onConnect.add(m(this, this.__onLimeGamepadConnect));
          Yb.onStart.add(m(this, this.__onLimeTouchStart));
          Yb.onMove.add(m(this, this.__onLimeTouchMove));
          Yb.onEnd.add(m(this, this.__onLimeTouchEnd));
          Yb.onCancel.add(m(this, this.__onLimeTouchCancel));
        },
        __resize: function () {
          var a = this.stageWidth,
            b = this.stageHeight,
            d = (this.window.__width * this.window.__scale) | 0,
            f = (this.window.__height * this.window.__scale) | 0;
          this.__displayMatrix.identity();
          if (
            null != this.get_fullScreenSourceRect() &&
            this.window.__fullscreen
          ) {
            this.stageWidth = this.get_fullScreenSourceRect().width | 0;
            this.stageHeight = this.get_fullScreenSourceRect().height | 0;
            var g = d / this.stageWidth,
              k = f / this.stageHeight;
            this.__displayMatrix.translate(
              -this.get_fullScreenSourceRect().x,
              -this.get_fullScreenSourceRect().y,
            );
            this.__displayMatrix.scale(g, k);
            this.__displayRect.setTo(
              this.get_fullScreenSourceRect().get_left(),
              this.get_fullScreenSourceRect().get_right(),
              this.get_fullScreenSourceRect().get_top(),
              this.get_fullScreenSourceRect().get_bottom(),
            );
          } else if (
            0 == this.__logicalWidth ||
            0 == this.__logicalHeight ||
            2 == this.get_scaleMode() ||
            0 == d ||
            0 == f
          )
            ((this.stageWidth = Math.round(d / this.window.__scale)),
              (this.stageHeight = Math.round(f / this.window.__scale)),
              this.__displayMatrix.scale(
                this.window.__scale,
                this.window.__scale,
              ),
              this.__displayRect.setTo(
                0,
                0,
                this.stageWidth,
                this.stageHeight,
              ));
          else
            switch (
              ((this.stageWidth = this.__logicalWidth),
              (this.stageHeight = this.__logicalHeight),
              this.get_scaleMode())
            ) {
              case 0:
                g = d / this.stageWidth;
                k = f / this.stageHeight;
                this.__displayMatrix.scale(g, k);
                this.__displayRect.setTo(
                  0,
                  0,
                  this.stageWidth,
                  this.stageHeight,
                );
                break;
              case 1:
                g = d / this.stageWidth;
                k = f / this.stageHeight;
                g = Math.max(g, k);
                k = this.stageWidth * g;
                var l = this.stageHeight * g;
                k = this.stageWidth - Math.round((k - d) / g);
                l = this.stageHeight - Math.round((l - f) / g);
                var h = Math.round((this.stageWidth - k) / 2),
                  p = Math.round((this.stageHeight - l) / 2);
                this.__displayMatrix.translate(-h, -p);
                this.__displayMatrix.scale(g, g);
                this.__displayRect.setTo(h, p, k, l);
                break;
              default:
                ((g = d / this.stageWidth),
                  (k = f / this.stageHeight),
                  (g = Math.min(g, k)),
                  (k = this.stageWidth * g),
                  (l = this.stageHeight * g),
                  (k = this.stageWidth - Math.round((k - d) / g)),
                  (l = this.stageHeight - Math.round((l - f) / g)),
                  (h = Math.round((this.stageWidth - k) / 2)),
                  (p = Math.round((this.stageHeight - l) / 2)),
                  this.__displayMatrix.translate(-h, -p),
                  this.__displayMatrix.scale(g, g),
                  this.__displayRect.setTo(h, p, k, l));
            }
          null != this.context3D &&
            this.context3D.configureBackBuffer(
              this.stageWidth,
              this.stageHeight,
              0,
              !0,
              !0,
              !0,
            );
          for (g = this.stage3Ds.iterator(); g.hasNext(); )
            g.next().__resize(d, f);
          null != this.__renderer && this.__renderer.__resize(d, f);
          this.__renderDirty = !0;
          if (this.stageWidth != a || this.stageHeight != b)
            (this.__setTransformDirty(),
              (a = new sa('resize')),
              this.__dispatchEvent(a));
        },
        __setLogicalSize: function (a, b) {
          this.__logicalWidth = a;
          this.__logicalHeight = b;
          this.__resize();
        },
        __stopDrag: function (a) {
          this.__dragObject = this.__dragBounds = null;
        },
        __unregisterLimeModule: function (a) {
          a.onCreateWindow.remove(m(this, this.__onLimeCreateWindow));
          a.onUpdate.remove(m(this, this.__onLimeUpdate));
          a.onExit.remove(m(this, this.__onLimeModuleExit));
          oc.onConnect.remove(m(this, this.__onLimeGamepadConnect));
          Yb.onStart.remove(m(this, this.__onLimeTouchStart));
          Yb.onMove.remove(m(this, this.__onLimeTouchMove));
          Yb.onEnd.remove(m(this, this.__onLimeTouchEnd));
          Yb.onCancel.remove(m(this, this.__onLimeTouchCancel));
        },
        __update: function (a, b) {
          a
            ? this.__transformDirty &&
              (hb.prototype.__update.call(this, !0, b),
              b && (this.__transformDirty = !1))
            : this.__transformDirty || this.__renderDirty
              ? (hb.prototype.__update.call(this, !1, b),
                b && da.__supportDOM && (this.__wasDirty = !0))
              : !this.__renderDirty &&
                this.__wasDirty &&
                (hb.prototype.__update.call(this, !1, b),
                b && (this.__wasDirty = !1));
        },
        set_color: function (a) {
          null == a
            ? ((this.__transparent = !0), (a = 0))
            : (this.__transparent = !1);
          this.__color != a &&
            ((this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255),
            (this.__colorSplit[1] = ((a & 65280) >>> 8) / 255),
            (this.__colorSplit[2] = (a & 255) / 255),
            (this.__colorString = '#' + R.hex(a & 16777215, 6)),
            (this.__renderDirty = !0),
            (this.__color = -16777216 | (a & 16777215)));
          return a;
        },
        get_displayState: function () {
          return this.__displayState;
        },
        set_displayState: function (a) {
          null != this.window &&
            (2 == a
              ? this.window.__fullscreen && this.window.set_fullscreen(!1)
              : this.window.__fullscreen || this.window.set_fullscreen(!0));
          return (this.__displayState = a);
        },
        get_focus: function () {
          return this.__focus;
        },
        set_focus: function (a) {
          if (a != this.__focus || (null == a && null != this.__cacheFocus)) {
            var b = this.__focus;
            this.__cacheFocus = this.__focus = a;
            if (null != b) {
              var d = new Hf('focusOut', !0, !1, a, !1, 0),
                f = [];
              b.__getInteractive(f);
              f.reverse();
              this.__dispatchStack(d, f);
            }
            null != a &&
              ((d = new Hf('focusIn', !0, !1, b, !1, 0)),
              (f = []),
              a.__getInteractive(f),
              f.reverse(),
              this.__dispatchStack(d, f));
          }
          return a;
        },
        get_frameRate: function () {
          return null != this.window ? this.window.__backend.getFrameRate() : 0;
        },
        get_fullScreenSourceRect: function () {
          return null == this.__fullScreenSourceRect
            ? null
            : this.__fullScreenSourceRect.clone();
        },
        set_height: function (a) {
          return this.get_height();
        },
        get_mouseX: function () {
          return this.__mouseX;
        },
        get_mouseY: function () {
          return this.__mouseY;
        },
        get_quality: function () {
          return this.__quality;
        },
        set_rotation: function (a) {
          return 0;
        },
        get_scaleMode: function () {
          return this.__scaleMode;
        },
        set_scaleMode: function (a) {
          a != this.__scaleMode && ((this.__scaleMode = a), this.__resize());
          return a;
        },
        set_scaleX: function (a) {
          return 0;
        },
        set_scaleY: function (a) {
          return 0;
        },
        get_tabEnabled: function () {
          return !1;
        },
        get_tabIndex: function () {
          return -1;
        },
        set_transform: function (a) {
          return this.get_transform();
        },
        set_width: function (a) {
          return this.get_width();
        },
        set_x: function (a) {
          return 0;
        },
        set_y: function (a) {
          return 0;
        },
        __class__: rg,
        __properties__: w(hb.prototype.__properties__, {
          set_color: 'set_color',
          set_scaleMode: 'set_scaleMode',
          get_scaleMode: 'get_scaleMode',
          get_quality: 'get_quality',
          get_fullScreenSourceRect: 'get_fullScreenSourceRect',
          get_frameRate: 'get_frameRate',
          set_focus: 'set_focus',
          get_focus: 'get_focus',
          set_displayState: 'set_displayState',
          get_displayState: 'get_displayState',
        }),
      });
      var Gf = function (a) {
        ka.call(this);
        this.__stage = a;
        this.__height = 0;
        this.__projectionTransform = new tj();
        this.__renderTransform = new tj();
        this.__y = this.__x = this.__width = 0;
        this.visible = !0;
        0 < a.stageWidth &&
          0 < a.stageHeight &&
          this.__resize(a.stageWidth, a.stageHeight);
      };
      h['openfl.display.Stage3D'] = Gf;
      Gf.__name__ = 'openfl.display.Stage3D';
      Gf.__super__ = ka;
      Gf.prototype = w(ka.prototype, {
        __createContext: function () {
          var a = this.__stage,
            b = a.__renderer;
          if ('cairo' == b.__type || 'canvas' == b.__type)
            this.__dispatchError();
          else if ('opengl' == b.__type)
            ((this.context3D = new sb(a, a.context3D.__contextState, this)),
              this.__dispatchCreate());
          else if ('dom' == b.__type)
            if (null == a.context3D) {
              this.__canvas = window.document.createElement('canvas');
              this.__canvas.width = a.stageWidth;
              this.__canvas.height = a.stageHeight;
              var d = a.window.context.attributes,
                f =
                  Object.prototype.hasOwnProperty.call(d, 'background') &&
                  null == d.background,
                g = Object.prototype.hasOwnProperty.call(d, 'colorDepth')
                  ? d.colorDepth
                  : 32;
              d =
                Object.prototype.hasOwnProperty.call(d, 'antialiasing') &&
                0 < d.antialiasing;
              this.__webgl = vl.getContextWebGL(this.__canvas, {
                alpha: f || 16 < g,
                antialias: d,
                depth: !0,
                premultipliedAlpha: !0,
                stencil: !0,
                preserveDrawingBuffer: !1,
              });
              null != this.__webgl &&
                (null == Pd.context &&
                  ((Pd.context = this.__webgl),
                  (Pd.type = 'webgl'),
                  (Pd.version = 1)),
                (a.context3D = new sb(a)),
                a.context3D.configureBackBuffer(
                  a.window.__width,
                  a.window.__height,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                a.context3D.present(),
                b.element.appendChild(this.__canvas),
                (this.__style = this.__canvas.style),
                this.__style.setProperty('position', 'absolute', null),
                this.__style.setProperty('top', '0', null),
                this.__style.setProperty('left', '0', null),
                this.__style.setProperty(
                  b.__transformOriginProperty,
                  '0 0 0',
                  null,
                ),
                this.__style.setProperty('z-index', '-1', null));
              null != a.context3D &&
                (this.context3D = new sb(a, a.context3D.__contextState, this));
              this.__dispatchCreate();
            } else this.__dispatchError();
        },
        __dispatchError: function () {
          this.__contextRequested = !1;
          this.dispatchEvent(
            new Hd('error', !1, !1, 'Context3D not available'),
          );
        },
        __dispatchCreate: function () {
          this.__contextRequested &&
            ((this.__contextRequested = !1),
            this.dispatchEvent(new sa('context3DCreate')));
        },
        __lostContext: function () {
          this.__contextLost = !0;
          null != this.context3D &&
            (this.context3D.__dispose(), (this.__contextRequested = !0));
        },
        __resize: function (a, b) {
          if (a != this.__width || b != this.__height)
            (null != this.__canvas &&
              ((this.__canvas.width = a), (this.__canvas.height = b)),
              this.__projectionTransform.copyRawDataFrom(
                ra.toFloatVector(null, null, null, [
                  2 / (0 < a ? a : 1),
                  0,
                  0,
                  0,
                  0,
                  -2 / (0 < b ? b : 1),
                  0,
                  0,
                  0,
                  0,
                  -0.001,
                  0,
                  -1,
                  1,
                  0,
                  1,
                ]),
              ),
              this.__renderTransform.identity(),
              this.__renderTransform.appendTranslation(this.__x, this.__y, 0),
              this.__renderTransform.append(this.__projectionTransform),
              (this.__width = a),
              (this.__height = b));
        },
        __restoreContext: function () {
          this.__contextLost = !1;
          this.__createContext();
        },
        get_x: function () {
          return this.__x;
        },
        get_y: function () {
          return this.__y;
        },
        __class__: Gf,
        __properties__: { get_y: 'get_y', get_x: 'get_x' },
      });
      var Yg = function (a, b, d, f, g, k, l, h) {
        null == h && (h = 0);
        null == l && (l = 0);
        null == k && (k = 0);
        null == g && (g = 1);
        null == f && (f = 1);
        null == d && (d = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.__id = a;
        this.__matrix = new qa();
        0 != b && this.set_x(b);
        0 != d && this.set_y(d);
        1 != f && this.set_scaleX(f);
        1 != g && this.set_scaleY(g);
        0 != k && this.set_rotation(k);
        this.__dirty = !0;
        this.__length = 0;
        this.__originX = l;
        this.__originY = h;
        this.__alpha = 1;
        this.__blendMode = null;
        this.__visible = !0;
      };
      h['openfl.display.Tile'] = Yg;
      Yg.__name__ = 'openfl.display.Tile';
      Yg.prototype = {
        getBounds: function (a) {
          var b = new ja();
          this.__findTileRect(b);
          var d = qa.__pool.get();
          if (null != a && a != this) {
            d.copyFrom(this.__getWorldTransform());
            var f = qa.__pool.get();
            f.copyFrom(a.__getWorldTransform());
            f.invert();
            d.concat(f);
            qa.__pool.release(f);
          } else d.identity();
          this.__getBounds(b, d);
          qa.__pool.release(d);
          return b;
        },
        __getBounds: function (a, b) {
          a.__transform(a, b);
        },
        __findTileRect: function (a) {
          if (null == this.get_tileset())
            if (null != this.parent) {
              var b = this.parent.__findTileset();
              null == b
                ? a.setTo(0, 0, 0, 0)
                : ((b = b.getRect(this.get_id())),
                  null == b ? a.setTo(0, 0, 0, 0) : a.copyFrom(b));
            } else a.setTo(0, 0, 0, 0);
          else a.copyFrom(this.get_tileset().getRect(this.get_id()));
          a.x = 0;
          a.y = 0;
        },
        __findTileset: function () {
          return null != this.get_tileset()
            ? this.get_tileset()
            : this.parent instanceof Zg
              ? this.parent.get_tileset()
              : null == this.parent
                ? null
                : this.parent.__findTileset();
        },
        __getWorldTransform: function () {
          var a = this.get_matrix().clone();
          null != this.parent && a.concat(this.parent.__getWorldTransform());
          return a;
        },
        __setRenderDirty: function () {
          this.__dirty ||
            ((this.__dirty = !0),
            null != this.parent && this.parent.__setRenderDirty());
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          a != this.__alpha && ((this.__alpha = a), this.__setRenderDirty());
          return a;
        },
        get_colorTransform: function () {
          return this.__colorTransform;
        },
        get_height: function () {
          var a = ja.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.height;
          ja.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = ja.__pool.get();
          this.__findTileRect(b);
          0 != b.height && this.set_scaleY(a / b.height);
          ja.__pool.release(b);
          return a;
        },
        get_id: function () {
          return this.__id;
        },
        get_matrix: function () {
          return this.__matrix;
        },
        get_originX: function () {
          return this.__originX;
        },
        set_originX: function (a) {
          a != this.__originX &&
            ((this.__originX = a), this.__setRenderDirty());
          return a;
        },
        get_originY: function () {
          return this.__originY;
        },
        set_originY: function (a) {
          a != this.__originY &&
            ((this.__originY = a), this.__setRenderDirty());
          return a;
        },
        get_rotation: function () {
          if (null == this.__rotation)
            if (0 == this.__matrix.b && 0 == this.__matrix.c)
              ((this.__rotationSine = this.__rotation = 0),
                (this.__rotationCosine = 1));
            else {
              var a =
                Math.atan2(this.__matrix.d, this.__matrix.c) - Math.PI / 2;
              this.__rotation = (180 / Math.PI) * a;
              this.__rotationSine = Math.sin(a);
              this.__rotationCosine = Math.cos(a);
            }
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = (Math.PI / 180) * a;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            b = this.get_scaleX();
            var d = this.get_scaleY();
            this.__matrix.a = this.__rotationCosine * b;
            this.__matrix.b = this.__rotationSine * b;
            this.__matrix.c = -this.__rotationSine * d;
            this.__matrix.d = this.__rotationCosine * d;
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleX: function () {
          null == this.__scaleX &&
            (0 == this.get_matrix().b
              ? (this.__scaleX = this.__matrix.a)
              : (this.__scaleX = Math.sqrt(
                  this.__matrix.a * this.__matrix.a +
                    this.__matrix.b * this.__matrix.b,
                )));
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX) {
            this.__scaleX = a;
            if (0 == this.__matrix.b) this.__matrix.a = a;
            else {
              this.get_rotation();
              var b = this.__rotationSine * a;
              this.__matrix.a = this.__rotationCosine * a;
              this.__matrix.b = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleY: function () {
          null == this.__scaleY &&
            (this.__scaleY =
              0 == this.__matrix.c
                ? this.get_matrix().d
                : Math.sqrt(
                    this.__matrix.c * this.__matrix.c +
                      this.__matrix.d * this.__matrix.d,
                  ));
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY) {
            this.__scaleY = a;
            if (0 == this.__matrix.c) this.__matrix.d = a;
            else {
              this.get_rotation();
              var b = this.__rotationCosine * a;
              this.__matrix.c = -this.__rotationSine * a;
              this.__matrix.d = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_shader: function () {
          return this.__shader;
        },
        get_tileset: function () {
          return this.__tileset;
        },
        set_tileset: function (a) {
          a != this.__tileset &&
            ((this.__tileset = a), this.__setRenderDirty());
          return a;
        },
        get_visible: function () {
          return this.__visible;
        },
        get_width: function () {
          var a = ja.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.width;
          ja.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = ja.__pool.get();
          this.__findTileRect(b);
          0 != b.width && this.set_scaleX(a / b.width);
          ja.__pool.release(b);
          return a;
        },
        get_x: function () {
          return this.__matrix.tx;
        },
        set_x: function (a) {
          a != this.__matrix.tx &&
            ((this.__matrix.tx = a), this.__setRenderDirty());
          return a;
        },
        get_y: function () {
          return this.__matrix.ty;
        },
        set_y: function (a) {
          a != this.__matrix.ty &&
            ((this.__matrix.ty = a), this.__setRenderDirty());
          return a;
        },
        __class__: Yg,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          get_visible: 'get_visible',
          set_tileset: 'set_tileset',
          get_tileset: 'get_tileset',
          get_shader: 'get_shader',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          set_originY: 'set_originY',
          get_originY: 'get_originY',
          set_originX: 'set_originX',
          get_originX: 'get_originX',
          get_matrix: 'get_matrix',
          get_id: 'get_id',
          set_height: 'set_height',
          get_height: 'get_height',
          get_colorTransform: 'get_colorTransform',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      };
      var $g = function (a, b, d, f, g, k, l) {
        null == l && (l = 0);
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = 1);
        null == d && (d = 1);
        null == b && (b = 0);
        null == a && (a = 0);
        Yg.call(this, -1, a, b, d, f, g, k, l);
        this.__tiles = [];
        this.__length = 0;
      };
      h['openfl.display.TileContainer'] = $g;
      $g.__name__ = 'openfl.display.TileContainer';
      $g.__interfaces__ = [Xk];
      $g.__super__ = Yg;
      $g.prototype = w(Yg.prototype, {
        getBounds: function (a) {
          for (var b = new ja(), d, f = 0, g = this.__tiles; f < g.length; )
            ((d = g[f]),
              ++f,
              (d = d.getBounds(a)),
              b.__expand(d.x, d.y, d.width, d.height));
          return b;
        },
        get_height: function () {
          for (
            var a = ja.__pool.get(), b, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((b = f[d]),
              ++d,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          d = a.height;
          ja.__pool.release(a);
          return d;
        },
        set_height: function (a) {
          for (
            var b = ja.__pool.get(), d, f = 0, g = this.__tiles;
            f < g.length;

          )
            ((d = g[f]),
              ++f,
              (d = d.getBounds(this)),
              b.__expand(d.x, d.y, d.width, d.height));
          0 != b.height && this.set_scaleY(a / b.height);
          ja.__pool.release(b);
          return a;
        },
        get_width: function () {
          for (
            var a = ja.__pool.get(), b, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((b = f[d]),
              ++d,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          d = a.width;
          ja.__pool.release(a);
          return d;
        },
        set_width: function (a) {
          for (
            var b = ja.__pool.get(), d, f = 0, g = this.__tiles;
            f < g.length;

          )
            ((d = g[f]),
              ++f,
              (d = d.getBounds(this)),
              b.__expand(d.x, d.y, d.width, d.height));
          0 != b.width && this.set_scaleX(a / b.width);
          ja.__pool.release(b);
          return a;
        },
        __class__: $g,
      });
      var Zg = function (a, b, d, f) {
        null == f && (f = !0);
        da.call(this);
        this.__drawableType = 9;
        this.__tileset = d;
        this.smoothing = f;
        this.tileColorTransformEnabled =
          this.tileBlendModeEnabled =
          this.tileAlphaEnabled =
            !0;
        this.__group = new $g();
        this.__group.set_tileset(d);
        this.__width = a;
        this.__height = b;
      };
      h['openfl.display.Tilemap'] = Zg;
      Zg.__name__ = 'openfl.display.Tilemap';
      Zg.__interfaces__ = [Xk];
      Zg.__super__ = da;
      Zg.prototype = w(da.prototype, {
        __enterFrame: function (a) {
          this.__group.__dirty &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var d = ja.__pool.get();
          d.setTo(0, 0, this.__width, this.__height);
          d.__transform(d, b);
          a.__expand(d.x, d.y, d.width, d.height);
          ja.__pool.release(d);
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (
            !k.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var l = this.__renderTransform,
            h = l.a * l.d - l.b * l.c;
          d = 0 == h ? -l.tx : (1 / h) * (l.c * (l.ty - b) + l.d * (a - l.tx));
          l = this.__renderTransform;
          h = l.a * l.d - l.b * l.c;
          a = 0 == h ? -l.ty : (1 / h) * (l.a * (b - l.ty) + l.b * (l.tx - a));
          return 0 < d && 0 < a && d <= this.__width && a <= this.__height
            ? (null == f || g || f.push(k), !0)
            : !1;
        },
        get_height: function () {
          return this.__height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          this.__height = a | 0;
          return this.__height * Math.abs(this.get_scaleY());
        },
        get_width: function () {
          return this.__width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          this.__width = a | 0;
          return this.__width * Math.abs(this.__scaleX);
        },
        __class__: Zg,
      });
      var Il = function (a, b) {
        this.__bitmapData = a;
        this.rectData = ra.toFloatVector(null);
        this.__data = [];
        if (null != b)
          for (a = 0; a < b.length; ) {
            var d = b[a];
            ++a;
            this.addRect(d);
          }
      };
      h['openfl.display.Tileset'] = Il;
      Il.__name__ = 'openfl.display.Tileset';
      Il.prototype = {
        addRect: function (a) {
          if (null == a) return -1;
          this.rectData.push(a.x);
          this.rectData.push(a.y);
          this.rectData.push(a.width);
          this.rectData.push(a.height);
          a = new uj(a);
          a.__update(this.__bitmapData);
          this.__data.push(a);
          return this.__data.length - 1;
        },
        getRect: function (a) {
          return a < this.__data.length && 0 <= a
            ? new ja(
                this.__data[a].x,
                this.__data[a].y,
                this.__data[a].width,
                this.__data[a].height,
              )
            : null;
        },
        __class__: Il,
      };
      var uj = function (a) {
        null != a &&
          ((this.x = a.x | 0),
          (this.y = a.y | 0),
          (this.width = a.width | 0),
          (this.height = a.height | 0));
      };
      h['openfl.display.TileData'] = uj;
      uj.__name__ = 'openfl.display.TileData';
      uj.prototype = {
        __update: function (a) {
          if (null != a) {
            var b = a.width;
            a = a.height;
            this.__uvX = this.x / b;
            this.__uvY = this.y / a;
            this.__uvWidth = (this.x + this.width) / b;
            this.__uvHeight = (this.y + this.height) / a;
          }
        },
        __class__: uj,
      };
      var Jl = function () {
        this.__totalFrames = this.__framesLoaded = 1;
        this.__currentLabels = [];
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1;
      };
      h['openfl.display.Timeline'] = Jl;
      Jl.__name__ = 'openfl.display.Timeline';
      Jl.prototype = {
        enterFrame: function (a) {},
        __enterFrame: function (a) {
          if (this.__isPlaying) {
            a = this.__getNextFrame(a);
            if (this.__lastFrameScriptEval == a) return;
            if (null != this.__frameScripts) {
              if (a < this.__currentFrame) {
                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                this.__currentFrame = 1;
              }
              if (!this.__evaluateFrameScripts(a)) return;
            } else this.__currentFrame = a;
          }
          this.__updateSymbol(this.__currentFrame);
        },
        __evaluateFrameScripts: function (a) {
          if (null == this.__frameScripts) return !0;
          var b = this.__currentFrame;
          for (a += 1; b < a; ) {
            var d = b++;
            if (
              d != this.__lastFrameScriptEval &&
              ((this.__currentFrame = this.__lastFrameScriptEval = d),
              (this.__frameScripts.h.hasOwnProperty(d) &&
                (this.__updateSymbol(d),
                (0, this.__frameScripts.h[d])(this.__scope),
                this.__currentFrame != d)) ||
                !this.__isPlaying)
            )
              return !1;
          }
          return !0;
        },
        __getNextFrame: function (a) {
          null != this.frameRate
            ? ((this.__timeElapsed += a),
              (a =
                this.__currentFrame +
                Math.floor(this.__timeElapsed / this.__frameTime)),
              1 > a && (a = 1),
              a > this.__totalFrames &&
                (a = Math.floor((a - 1) % this.__totalFrames) + 1),
              (this.__timeElapsed %= this.__frameTime))
            : ((a = this.__currentFrame + 1),
              a > this.__totalFrames && (a = 1));
          return a;
        },
        __goto: function (a) {
          1 > a ? (a = 1) : a > this.__totalFrames && (a = this.__totalFrames);
          this.__lastFrameScriptEval = -1;
          this.__currentFrame = a;
          this.__updateSymbol(this.__currentFrame);
          this.__evaluateFrameScripts(this.__currentFrame);
        },
        __gotoAndStop: function (a, b) {
          this.__stop();
          this.__goto(this.__resolveFrameReference(a));
        },
        __stop: function () {
          this.__isPlaying = !1;
        },
        __resolveFrameReference: function (a) {
          if ('number' == typeof a && (a | 0) === a) return a;
          if ('string' == typeof a) {
            for (var b = 0, d = this.__currentLabels; b < d.length; ) {
              var f = d[b];
              ++b;
              if (f.name == a) return f.frame;
            }
            throw new hf(
              'Error #2109: Frame label ' + a + ' not found in scene.',
            );
          }
          throw Z.thrown('Invalid type for frame ' + a.__name__);
        },
        __updateFrameLabel: function () {
          this.__currentFrameLabel = this.__currentLabel = null;
          for (var a = 0, b = this.__currentLabels; a < b.length; ) {
            var d = b[a];
            ++a;
            if (d.frame < this.__currentFrame) this.__currentLabel = d.name;
            else if (d.frame == this.__currentFrame)
              this.__currentFrameLabel = this.__currentLabel = d.name;
            else break;
          }
        },
        __updateSymbol: function (a) {
          this.__currentFrame != this.__lastFrameUpdate &&
            (this.__updateFrameLabel(),
            this.enterFrame(a),
            (this.__lastFrameUpdate = this.__currentFrame));
        },
        __class__: Jl,
      };
      var Ug = function (a, b) {
        og.call(this, a, b);
        this.stage = new rg(
          this,
          Object.prototype.hasOwnProperty.call(b.context, 'background')
            ? b.context.background
            : 16777215,
        );
        if (Object.prototype.hasOwnProperty.call(b, 'parameters'))
          try {
            this.stage.get_loaderInfo().parameters = b.parameters;
          } catch (d) {
            Na.lastError = d;
          }
        this.stage.__setLogicalSize(b.width, b.height);
        Object.prototype.hasOwnProperty.call(b, 'resizable') &&
          !b.resizable &&
          this.stage.set_scaleMode(3);
        a.addModule(this.stage);
      };
      h['openfl.display.Window'] = Ug;
      Ug.__name__ = 'openfl.display.Window';
      Ug.__super__ = og;
      Ug.prototype = w(og.prototype, {
        close: function () {
          og.prototype.close.call(this);
          this.onClose.canceled ||
            null == this.stage ||
            (this.application.removeModule(this.stage), (this.stage = null));
        },
        __class__: Ug,
      });
      var Vg = function () {};
      h['openfl.display._internal.CanvasBitmap'] = Vg;
      Vg.__name__ = 'openfl.display._internal.CanvasBitmap';
      Vg.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((x = b.__getAlpha(a.__worldAlpha)), 0 >= x)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              y = b.context;
              b.setTransform(a.__renderTransform, y);
              var d = a.opaqueBackground;
              y.fillStyle =
                'rgb(' +
                ((d >>> 16) & 255) +
                ',' +
                ((d >>> 8) & 255) +
                ',' +
                (d & 255) +
                ')';
              y.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((x = b.__getAlpha(a.__worldAlpha)), !(0 >= x))
            ) {
              var f = a.__graphics;
              if (null != f) {
                B.render(f, b);
                var g = f.__width,
                  k = f.__height;
                d = f.__canvas;
                if (null != d && f.__visible && 1 <= g && 1 <= k) {
                  var l = f.__worldTransform;
                  y = b.context;
                  z = a.__scrollRect;
                  var h = a.__worldScale9Grid;
                  if (null == z || (0 < z.width && 0 < z.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    y.globalAlpha = x;
                    if (null != h && 0 == l.b && 0 == l.c) {
                      var p = b.__pixelRatio;
                      x = qa.__pool.get();
                      x.translate(l.tx, l.ty);
                      b.setTransform(x, y);
                      qa.__pool.release(x);
                      x = f.__bounds;
                      var r = f.__renderTransform.a / f.__bitmapScale,
                        t = f.__renderTransform.d / f.__bitmapScale,
                        n = r * l.a,
                        q = t * l.d;
                      l = Math.max(1, Math.round(h.x * r));
                      f = Math.round(h.y * t);
                      z = Math.max(
                        1,
                        Math.round((x.get_right() - h.get_right()) * r),
                      );
                      var E = Math.round((x.get_bottom() - h.get_bottom()) * t);
                      r = Math.round(h.width * r);
                      h = Math.round(h.height * t);
                      t = Math.round(l / p);
                      var m = Math.round(f / p),
                        C = Math.round(z / p);
                      p = Math.round(E / p);
                      n = x.width * n - t - C;
                      x = x.height * q - m - p;
                      b.applySmoothing(y, !1);
                      0 != r && 0 != h
                        ? (y.drawImage(d, 0, 0, l, f, 0, 0, t, m),
                          y.drawImage(d, l, 0, r, f, t, 0, n, m),
                          y.drawImage(d, l + r, 0, z, f, t + n, 0, C, m),
                          y.drawImage(d, 0, f, l, h, 0, m, t, x),
                          y.drawImage(d, l, f, r, h, t, m, n, x),
                          y.drawImage(d, l + r, f, z, h, t + n, m, C, x),
                          y.drawImage(d, 0, f + h, l, E, 0, m + x, t, p),
                          y.drawImage(d, l, f + h, r, E, t, m + x, n, p),
                          y.drawImage(
                            d,
                            l + r,
                            f + h,
                            z,
                            E,
                            t + n,
                            m + x,
                            C,
                            p,
                          ))
                        : 0 == r && 0 != h
                          ? ((k = t + n + C),
                            y.drawImage(d, 0, 0, g, f, 0, 0, k, m),
                            y.drawImage(d, 0, f, g, h, 0, m, k, x),
                            y.drawImage(d, 0, f + h, g, E, 0, m + x, k, p))
                          : 0 == h &&
                            0 != r &&
                            ((g = m + x + p),
                            y.drawImage(d, 0, 0, l, k, 0, 0, t, g),
                            y.drawImage(d, l, 0, r, k, t, 0, n, g),
                            y.drawImage(d, l + r, 0, z, k, t + n, 0, C, g));
                    } else (b.setTransform(l, y), y.drawImage(d, 0, 0, g, k));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            ((x = b.__getAlpha(a.__worldAlpha)),
            0 < x &&
              null != a.__bitmapData &&
              a.__bitmapData.__isValid &&
              a.__bitmapData.readable &&
              ((y = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a, !1),
              Ha.convertToCanvas(a.__bitmapData.image),
              (y.globalAlpha = x),
              (z = a.__scrollRect),
              b.setTransform(a.__renderTransform, y),
              (b.__allowSmoothing && a.smoothing) ||
                (y.imageSmoothingEnabled = !1),
              null == z
                ? y.drawImage(
                    a.__bitmapData.image.get_src(),
                    0,
                    0,
                    a.__bitmapData.image.width,
                    a.__bitmapData.image.height,
                  )
                : y.drawImage(
                    a.__bitmapData.image.get_src(),
                    z.x,
                    z.y,
                    z.width,
                    z.height,
                    z.x,
                    z.y,
                    z.width,
                    z.height,
                  ),
              (b.__allowSmoothing && a.smoothing) ||
                (y.imageSmoothingEnabled = !0),
              b.__popMaskObject(a, !1)));
        } else if (((d = a.__cacheBitmap), d.__renderable)) {
          var x = b.__getAlpha(d.__worldAlpha);
          if (
            0 < x &&
            null != d.__bitmapData &&
            d.__bitmapData.__isValid &&
            d.__bitmapData.readable
          ) {
            var y = b.context;
            b.__setBlendMode(d.__worldBlendMode);
            b.__pushMaskObject(d, !1);
            Ha.convertToCanvas(d.__bitmapData.image);
            y.globalAlpha = x;
            var z = d.__scrollRect;
            b.setTransform(d.__renderTransform, y);
            (b.__allowSmoothing && d.smoothing) ||
              (y.imageSmoothingEnabled = !1);
            null == z
              ? y.drawImage(
                  d.__bitmapData.image.get_src(),
                  0,
                  0,
                  d.__bitmapData.image.width,
                  d.__bitmapData.image.height,
                )
              : y.drawImage(
                  d.__bitmapData.image.get_src(),
                  z.x,
                  z.y,
                  z.width,
                  z.height,
                  z.x,
                  z.y,
                  z.width,
                  z.height,
                );
            (b.__allowSmoothing && d.smoothing) ||
              (y.imageSmoothingEnabled = !0);
            b.__popMaskObject(d, !1);
          }
        }
        b.__renderEvent(a);
      };
      Vg.renderDrawableMask = function (a, b) {
        b.context.rect(0, 0, a.get_width(), a.get_height());
      };
      var Yi = function () {};
      h['openfl.display._internal.CanvasBitmapData'] = Yi;
      Yi.__name__ = 'openfl.display._internal.CanvasBitmapData';
      Yi.renderDrawable = function (a, b) {
        if (a.readable) {
          var d = a.image;
          d.type == Xc.DATA && Ha.convertToCanvas(d);
          var f = b.context;
          f.globalAlpha = 1;
          b.setTransform(a.__renderTransform, f);
          f.drawImage(d.get_src(), 0, 0, d.width, d.height);
        }
      };
      Yi.renderDrawableMask = function (a, b) {};
      var Af = function () {};
      h['openfl.display._internal.CanvasDisplayObject'] = Af;
      Af.__name__ = 'openfl.display._internal.CanvasDisplayObject';
      Af.renderDrawable = function (a, b) {
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, !1),
            null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          ) {
            var d = a.__cacheBitmap;
            if (d.__renderable) {
              var f = b.__getAlpha(d.__worldAlpha);
              if (
                0 < f &&
                null != d.__bitmapData &&
                d.__bitmapData.__isValid &&
                d.__bitmapData.readable
              ) {
                var g = b.context;
                b.__setBlendMode(d.__worldBlendMode);
                b.__pushMaskObject(d, !1);
                Ha.convertToCanvas(d.__bitmapData.image);
                g.globalAlpha = f;
                var k = d.__scrollRect;
                b.setTransform(d.__renderTransform, g);
                (b.__allowSmoothing && d.smoothing) ||
                  (g.imageSmoothingEnabled = !1);
                null == k
                  ? g.drawImage(
                      d.__bitmapData.image.get_src(),
                      0,
                      0,
                      d.__bitmapData.image.width,
                      d.__bitmapData.image.height,
                    )
                  : g.drawImage(
                      d.__bitmapData.image.get_src(),
                      k.x,
                      k.y,
                      k.width,
                      k.height,
                      k.x,
                      k.y,
                      k.width,
                      k.height,
                    );
                (b.__allowSmoothing && d.smoothing) ||
                  (g.imageSmoothingEnabled = !0);
                b.__popMaskObject(d, !1);
              }
            }
          } else if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((f = b.__getAlpha(a.__worldAlpha)),
              0 >= f ||
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (g = b.context),
                  b.setTransform(a.__renderTransform, g),
                  (d = a.opaqueBackground),
                  (g.fillStyle =
                    'rgb(' +
                    ((d >>> 16) & 255) +
                    ',' +
                    ((d >>> 8) & 255) +
                    ',' +
                    (d & 255) +
                    ')'),
                  g.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null == a.__graphics ||
                  !a.__renderable ||
                  ((f = b.__getAlpha(a.__worldAlpha)), 0 >= f)))
            )
          ) {
            var l = a.__graphics;
            if (null != l) {
              B.render(l, b);
              var h = l.__width,
                p = l.__height;
              d = l.__canvas;
              if (null != d && l.__visible && 1 <= h && 1 <= p) {
                var r = l.__worldTransform;
                g = b.context;
                k = a.__scrollRect;
                var t = a.__worldScale9Grid;
                if (null == k || (0 < k.width && 0 < k.height)) {
                  b.__setBlendMode(a.__worldBlendMode);
                  b.__pushMaskObject(a);
                  g.globalAlpha = f;
                  if (null != t && 0 == r.b && 0 == r.c) {
                    var n = b.__pixelRatio;
                    f = qa.__pool.get();
                    f.translate(r.tx, r.ty);
                    b.setTransform(f, g);
                    qa.__pool.release(f);
                    f = l.__bounds;
                    var q = l.__renderTransform.a / l.__bitmapScale,
                      E = l.__renderTransform.d / l.__bitmapScale,
                      m = q * r.a,
                      C = E * r.d;
                    r = Math.max(1, Math.round(t.x * q));
                    l = Math.round(t.y * E);
                    k = Math.max(
                      1,
                      Math.round((f.get_right() - t.get_right()) * q),
                    );
                    var x = Math.round((f.get_bottom() - t.get_bottom()) * E);
                    q = Math.round(t.width * q);
                    t = Math.round(t.height * E);
                    E = Math.round(r / n);
                    var y = Math.round(l / n),
                      z = Math.round(k / n);
                    n = Math.round(x / n);
                    m = f.width * m - E - z;
                    f = f.height * C - y - n;
                    b.applySmoothing(g, !1);
                    0 != q && 0 != t
                      ? (g.drawImage(d, 0, 0, r, l, 0, 0, E, y),
                        g.drawImage(d, r, 0, q, l, E, 0, m, y),
                        g.drawImage(d, r + q, 0, k, l, E + m, 0, z, y),
                        g.drawImage(d, 0, l, r, t, 0, y, E, f),
                        g.drawImage(d, r, l, q, t, E, y, m, f),
                        g.drawImage(d, r + q, l, k, t, E + m, y, z, f),
                        g.drawImage(d, 0, l + t, r, x, 0, y + f, E, n),
                        g.drawImage(d, r, l + t, q, x, E, y + f, m, n),
                        g.drawImage(d, r + q, l + t, k, x, E + m, y + f, z, n))
                      : 0 == q && 0 != t
                        ? ((p = E + m + z),
                          g.drawImage(d, 0, 0, h, l, 0, 0, p, y),
                          g.drawImage(d, 0, l, h, t, 0, y, p, f),
                          g.drawImage(d, 0, l + t, h, x, 0, y + f, p, n))
                        : 0 == t &&
                          0 != q &&
                          ((h = y + f + n),
                          g.drawImage(d, 0, 0, r, p, 0, 0, E, h),
                          g.drawImage(d, r, 0, q, p, E, 0, m, h),
                          g.drawImage(d, r + q, 0, k, p, E + m, 0, z, h));
                  } else (b.setTransform(r, g), g.drawImage(d, 0, 0, h, p));
                  b.__popMaskObject(a);
                }
              }
            }
          }
        b.__renderEvent(a);
      };
      Af.renderDrawableMask = function (a, b) {
        null != a.__graphics && B.renderMask(a.__graphics, b);
      };
      var Zi = function () {};
      h['openfl.display._internal.CanvasDisplayObjectContainer'] = Zi;
      Zi.__name__ = 'openfl.display._internal.CanvasDisplayObjectContainer';
      Zi.renderDrawable = function (a, b) {
        for (var d = a.__removedChildren.iterator(); d.hasNext(); ) {
          var f = d.next();
          null == f.stage && f.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          !(
            !a.__renderable ||
            0 >= a.__worldAlpha ||
            (null != a.get_mask() &&
              (0 >= a.get_mask().get_width() || 0 >= a.get_mask().get_height()))
          ) &&
          (Af.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            d = 0;
            for (f = a.__children; d < f.length; ) {
              var g = f[d];
              ++d;
              b.__renderDrawable(g);
              g.__renderDirty = !1;
            }
            a.__renderDirty = !1;
          } else
            for (d = 0, f = a.__children; d < f.length; )
              ((g = f[d]), ++d, b.__renderDrawable(g));
          b.__popMaskObject(a);
        }
      };
      Zi.renderDrawableMask = function (a, b) {
        for (var d = a.__removedChildren.iterator(); d.hasNext(); ) {
          var f = d.next();
          null == f.stage && f.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && B.renderMask(a.__graphics, b);
        d = 0;
        for (a = a.__children; d < a.length; )
          ((f = a[d]), ++d, b.__renderDrawableMask(f));
      };
      var jd = function () {
        null == jd.empty
          ? ((this.types = []),
            (this.b = []),
            (this.i = []),
            (this.f = []),
            (this.o = []),
            (this.ff = []),
            (this.ii = []),
            (this.copyOnWrite = !0))
          : this.clear();
      };
      h['openfl.display._internal.DrawCommandBuffer'] = jd;
      jd.__name__ = 'openfl.display._internal.DrawCommandBuffer';
      jd.prototype = {
        beginBitmapFill: function (a, b, d, f) {
          this.prepareWrite();
          this.types.push(fa.BEGIN_BITMAP_FILL);
          this.o.push(a);
          this.o.push(b);
          this.b.push(d);
          this.b.push(f);
        },
        beginFill: function (a, b) {
          this.prepareWrite();
          this.types.push(fa.BEGIN_FILL);
          this.i.push(a);
          this.f.push(b);
        },
        beginGradientFill: function (a, b, d, f, g, k, l, h) {
          this.prepareWrite();
          this.types.push(fa.BEGIN_GRADIENT_FILL);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(d);
          this.ii.push(f);
          this.o.push(g);
          this.o.push(k);
          this.o.push(l);
          this.f.push(h);
        },
        beginShaderFill: function (a) {
          this.prepareWrite();
          this.types.push(fa.BEGIN_SHADER_FILL);
          this.o.push(a);
        },
        clear: function () {
          this.types = jd.empty.types;
          this.b = jd.empty.b;
          this.i = jd.empty.i;
          this.f = jd.empty.f;
          this.o = jd.empty.o;
          this.ff = jd.empty.ff;
          this.ii = jd.empty.ii;
          this.copyOnWrite = !0;
        },
        cubicCurveTo: function (a, b, d, f, g, k) {
          this.prepareWrite();
          this.types.push(fa.CUBIC_CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(d);
          this.f.push(f);
          this.f.push(g);
          this.f.push(k);
        },
        curveTo: function (a, b, d, f) {
          this.prepareWrite();
          this.types.push(fa.CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(d);
          this.f.push(f);
        },
        drawCircle: function (a, b, d) {
          this.prepareWrite();
          this.types.push(fa.DRAW_CIRCLE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(d);
        },
        drawEllipse: function (a, b, d, f) {
          this.prepareWrite();
          this.types.push(fa.DRAW_ELLIPSE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(d);
          this.f.push(f);
        },
        drawQuads: function (a, b, d) {
          this.prepareWrite();
          this.types.push(fa.DRAW_QUADS);
          this.o.push(a);
          this.o.push(b);
          this.o.push(d);
        },
        drawRect: function (a, b, d, f) {
          this.prepareWrite();
          this.types.push(fa.DRAW_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(d);
          this.f.push(f);
        },
        drawRoundRect: function (a, b, d, f, g, k) {
          this.prepareWrite();
          this.types.push(fa.DRAW_ROUND_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(d);
          this.f.push(f);
          this.f.push(g);
          this.o.push(k);
        },
        drawTriangles: function (a, b, d, f) {
          this.prepareWrite();
          this.types.push(fa.DRAW_TRIANGLES);
          this.o.push(a);
          this.o.push(b);
          this.o.push(d);
          this.o.push(f);
        },
        endFill: function () {
          this.prepareWrite();
          this.types.push(fa.END_FILL);
        },
        lineBitmapStyle: function (a, b, d, f) {
          this.prepareWrite();
          this.types.push(fa.LINE_BITMAP_STYLE);
          this.o.push(a);
          this.o.push(b);
          this.b.push(d);
          this.b.push(f);
        },
        lineGradientStyle: function (a, b, d, f, g, k, l, h) {
          this.prepareWrite();
          this.types.push(fa.LINE_GRADIENT_STYLE);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(d);
          this.ii.push(f);
          this.o.push(g);
          this.o.push(k);
          this.o.push(l);
          this.f.push(h);
        },
        lineStyle: function (a, b, d, f, g, k, l, h) {
          this.prepareWrite();
          this.types.push(fa.LINE_STYLE);
          this.o.push(a);
          this.i.push(b);
          this.f.push(d);
          this.b.push(f);
          this.o.push(g);
          this.o.push(k);
          this.o.push(l);
          this.f.push(h);
        },
        lineTo: function (a, b) {
          this.prepareWrite();
          this.types.push(fa.LINE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        moveTo: function (a, b) {
          this.prepareWrite();
          this.types.push(fa.MOVE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        prepareWrite: function () {
          this.copyOnWrite &&
            ((this.types = this.types.slice()),
            (this.b = this.b.slice()),
            (this.i = this.i.slice()),
            (this.f = this.f.slice()),
            (this.o = this.o.slice()),
            (this.ff = this.ff.slice()),
            (this.ii = this.ii.slice()),
            (this.copyOnWrite = !1));
        },
        windingEvenOdd: function () {
          this.prepareWrite();
          this.types.push(fa.WINDING_EVEN_ODD);
        },
        windingNonZero: function () {
          this.prepareWrite();
          this.types.push(fa.WINDING_NON_ZERO);
        },
        get_length: function () {
          return this.types.length;
        },
        __class__: jd,
        __properties__: { get_length: 'get_length' },
      };
      var B = function () {};
      h['openfl.display._internal.CanvasGraphics'] = B;
      B.__name__ = 'openfl.display._internal.CanvasGraphics';
      B.allowSmoothing = null;
      B.bitmapFill = null;
      B.bitmapRepeat = null;
      B.bounds = null;
      B.graphics = null;
      B.hasFill = null;
      B.hasStroke = null;
      B.hitTesting = null;
      B.inversePendingMatrix = null;
      B.pendingMatrix = null;
      B.windingRule = null;
      B.worldAlpha = null;
      B.context = null;
      B.hitTestCanvas = null;
      B.hitTestContext = null;
      B.closePath = function (a) {
        null == a && (a = !1);
        null != B.context.strokeStyle &&
          (a || B.context.closePath(),
          B.context.stroke(),
          a && B.context.closePath(),
          B.context.beginPath());
      };
      B.createBitmapFill = function (a, b, d) {
        Ha.convertToCanvas(a.image);
        B.setSmoothing(d);
        return B.context.createPattern(
          a.image.get_src(),
          b ? 'repeat' : 'no-repeat',
        );
      };
      B.createGradientPattern = function (a, b, d, f, g, k, l, h) {
        l = !1;
        null == g && ((g = qa.__pool.get()), g.identity(), (l = !0));
        switch (a) {
          case 0:
            if (0 == k) {
              a = B.context.createLinearGradient(-819.2, 0, 819.2, 0);
              B.pendingMatrix = g.clone();
              B.inversePendingMatrix = g.clone();
              B.inversePendingMatrix.invert();
              for (var p = 0, u = b.length; p < u; ) {
                var r = p++;
                k = f[r] / 255;
                0 > k ? (k = 0) : 1 < k && (k = 1);
                a.addColorStop(k, B.getRGBA(b[r], d[r]));
              }
              l && qa.__pool.release(g);
              return a;
            }
            a = 819.2 * ((0 == k ? 1 : 25) - 1);
            l = window.document.createElement('canvas');
            h = l.getContext('2d');
            var n = B.getDimensions(g);
            l.width = B.context.canvas.width;
            l.height = B.context.canvas.height;
            a = B.context.createLinearGradient(-819.2 - a, 0, 819.2 + a, 0);
            if (1 == k)
              for (var t = 0, q = 0.04; 1 > t; ) {
                p = 0;
                for (u = b.length; p < u; )
                  ((r = p++),
                    (k = f[r] / 255),
                    (k = t + k * q),
                    0 > k ? (k = 0) : 1 < k && (k = 1),
                    a.addColorStop(k, B.getRGBA(b[r], d[r])));
                t += q;
                for (p = b.length - 1; 0 <= p; )
                  ((k = f[p] / 255),
                    (k = t + (1 - k) * q),
                    0 > k ? (k = 0) : 1 < k && (k = 1),
                    a.addColorStop(k, B.getRGBA(b[p], d[p])),
                    --p);
                t += q;
              }
            else if (2 == k)
              for (t = 0, q = 0.04; 1 > t; ) {
                p = 0;
                for (u = b.length; p < u; )
                  ((r = p++),
                    (k = f[r] / 255),
                    (k = t + k * q),
                    0 > k ? (k = 0) : 1 < k && (k = 0.999),
                    a.addColorStop(k, B.getRGBA(b[r], d[r])));
                k = t + 0.001;
                0 > k ? (k = 0) : 1 < k && (k = 1);
                a.addColorStop(
                  k - 0.001,
                  B.getRGBA(b[b.length - 1], d[d.length - 1]),
                );
                a.addColorStop(k, B.getRGBA(b[0], d[0]));
                t += q;
              }
            B.pendingMatrix = new qa();
            B.pendingMatrix.tx = g.tx - n.width / 2;
            B.pendingMatrix.ty = g.ty - n.height / 2;
            B.inversePendingMatrix = B.pendingMatrix.clone();
            B.inversePendingMatrix.invert();
            b = new Path2D();
            b.rect(0, 0, l.width, l.height);
            b.closePath();
            g = new DOMMatrix([g.a, g.b, g.c, g.d, g.tx, g.ty]);
            d = g.inverse();
            f = new Path2D();
            f.addPath(b, d);
            h.fillStyle = a;
            h.setTransform(g);
            h.fill(f);
            return B.context.createPattern(l, 'no-repeat');
          case 1:
            1 < h ? (h = 1) : -1 > h && (h = -1);
            a = B.context.createRadialGradient(819.2 * h, 0, 0, 0, 0, 819.2);
            B.pendingMatrix = g.clone();
            B.inversePendingMatrix = g.clone();
            B.inversePendingMatrix.invert();
            p = 0;
            for (u = b.length; p < u; )
              ((r = p++),
                (k = f[r] / 255),
                0 > k ? (k = 0) : 1 < k && (k = 1),
                a.addColorStop(k, B.getRGBA(b[r], d[r])));
            l && qa.__pool.release(g);
            return a;
        }
      };
      B.getRGBA = function (a, b) {
        var d = (a & 16711680) >>> 16,
          f = (a & 65280) >>> 8;
        a &= 255;
        return (
          'rgba(' +
          (null == d ? 'null' : G.string(z.toFloat(d))) +
          ', ' +
          (null == f ? 'null' : G.string(z.toFloat(f))) +
          ', ' +
          (null == a ? 'null' : G.string(z.toFloat(a))) +
          ', ' +
          b +
          ')'
        );
      };
      B.getDimensions = function (a) {
        var b = Math.cos(Math.atan2(a.c, a.a)),
          d = (a.a / b) * 1638.4;
        a = (a.d / b) * 1638.4;
        0 == d && 0 == a && (d = a = 819.2);
        return { width: d, height: a };
      };
      B.createTempPatternCanvas = function (a, b, d, f) {
        var g = window.document.createElement('canvas'),
          k = g.getContext('2d');
        g.width = d;
        g.height = f;
        a = a.image.get_src();
        k.fillStyle = k.createPattern(a, b ? 'repeat' : 'no-repeat');
        k.beginPath();
        k.moveTo(0, 0);
        k.lineTo(0, f);
        k.lineTo(d, f);
        k.lineTo(d, 0);
        k.lineTo(0, 0);
        k.closePath();
        B.hitTesting || k.fill(B.windingRule);
        return g;
      };
      B.drawRoundRect = function (a, b, d, f, g, k) {
        null == k && (k = g);
        g *= 0.5;
        k *= 0.5;
        g > d / 2 && (g = d / 2);
        k > f / 2 && (k = f / 2);
        d = a + d;
        f = b + f;
        var l = -g + 0.7071067811865476 * g,
          h = -g + 0.41421356237309503 * g,
          p = -k + 0.7071067811865476 * k,
          r = -k + 0.41421356237309503 * k;
        B.context.moveTo(d, f - k);
        B.context.quadraticCurveTo(d, f + r, d + l, f + p);
        B.context.quadraticCurveTo(d + h, f, d - g, f);
        B.context.lineTo(a + g, f);
        B.context.quadraticCurveTo(a - h, f, a - l, f + p);
        B.context.quadraticCurveTo(a, f + r, a, f - k);
        B.context.lineTo(a, b + k);
        B.context.quadraticCurveTo(a, b - r, a - l, b - p);
        B.context.quadraticCurveTo(a - h, b, a + g, b);
        B.context.lineTo(d - g, b);
        B.context.quadraticCurveTo(d + h, b, d + l, b - p);
        B.context.quadraticCurveTo(d, b - r, d, b + k);
        B.context.lineTo(d, f - k);
      };
      B.endFill = function () {
        B.context.beginPath();
        B.playCommands(B.fillCommands, !1);
        B.fillCommands.clear();
      };
      B.endStroke = function () {
        B.context.beginPath();
        B.playCommands(B.strokeCommands, !0);
        B.context.closePath();
        B.strokeCommands.clear();
      };
      B.hitTest = function (a, b, d) {
        B.bounds = a.__bounds;
        B.graphics = a;
        if (
          0 == a.__commands.get_length() ||
          null == B.bounds ||
          0 >= B.bounds.width ||
          0 >= B.bounds.height
        )
          return ((B.graphics = null), !1);
        B.hitTesting = !0;
        var f = a.__renderTransform,
          g = b * f.b + d * f.d + f.ty;
        b =
          b * f.a +
          d * f.c +
          f.tx -
          (B.bounds.x * f.a + B.bounds.y * f.c + f.tx);
        d = g - (B.bounds.x * f.b + B.bounds.y * f.d + f.ty);
        g = a.__canvas;
        var k = a.__context;
        a.__canvas = B.hitTestCanvas;
        a.__context = B.hitTestContext;
        B.context = a.__context;
        B.context.setTransform(f.a, f.b, f.c, f.d, f.tx, f.ty);
        B.fillCommands.clear();
        B.strokeCommands.clear();
        B.hasFill = !1;
        B.hasStroke = !1;
        B.bitmapFill = null;
        B.bitmapRepeat = !1;
        B.windingRule = 'evenodd';
        f = new fe(a.__commands);
        for (var l = 0, h = a.__commands.types; l < h.length; ) {
          var p = h[l];
          ++l;
          switch (p._hx_index) {
            case 0:
            case 1:
            case 2:
            case 3:
              B.endFill();
              if (B.hasFill && B.context.isPointInPath(b, d, B.windingRule))
                return (
                  f.destroy(),
                  (a.__canvas = g),
                  (a.__context = k),
                  (B.graphics = null),
                  !0
                );
              B.endStroke();
              if (B.hasStroke && B.context.isPointInStroke(b, d))
                return (
                  f.destroy(),
                  (a.__canvas = g),
                  (a.__context = k),
                  (B.graphics = null),
                  !0
                );
              if (p == fa.BEGIN_BITMAP_FILL) {
                switch (f.prev._hx_index) {
                  case 0:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 1:
                    f.iPos += 1;
                    f.fPos += 1;
                    break;
                  case 2:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 3:
                    f.oPos += 1;
                    break;
                  case 4:
                    f.fPos += 6;
                    break;
                  case 5:
                    f.fPos += 4;
                    break;
                  case 6:
                    f.fPos += 3;
                    break;
                  case 7:
                    f.fPos += 4;
                    break;
                  case 8:
                    f.oPos += 3;
                    break;
                  case 9:
                    f.fPos += 4;
                    break;
                  case 10:
                    f.fPos += 5;
                    f.oPos += 1;
                    break;
                  case 12:
                    f.oPos += 4;
                    break;
                  case 14:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 15:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 16:
                    f.oPos += 4;
                    f.iPos += 1;
                    f.fPos += 2;
                    f.bPos += 1;
                    break;
                  case 17:
                    f.fPos += 2;
                    break;
                  case 18:
                    f.fPos += 2;
                    break;
                  case 19:
                    f.oPos += 1;
                    break;
                  case 20:
                    f.oPos += 1;
                }
                f.prev = fa.BEGIN_BITMAP_FILL;
                p = f;
                B.fillCommands.beginBitmapFill(
                  p.buffer.o[p.oPos],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.b[p.bPos],
                  p.buffer.b[p.bPos + 1],
                );
                B.strokeCommands.beginBitmapFill(
                  p.buffer.o[p.oPos],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.b[p.bPos],
                  p.buffer.b[p.bPos + 1],
                );
              } else if (p == fa.BEGIN_GRADIENT_FILL) {
                switch (f.prev._hx_index) {
                  case 0:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 1:
                    f.iPos += 1;
                    f.fPos += 1;
                    break;
                  case 2:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 3:
                    f.oPos += 1;
                    break;
                  case 4:
                    f.fPos += 6;
                    break;
                  case 5:
                    f.fPos += 4;
                    break;
                  case 6:
                    f.fPos += 3;
                    break;
                  case 7:
                    f.fPos += 4;
                    break;
                  case 8:
                    f.oPos += 3;
                    break;
                  case 9:
                    f.fPos += 4;
                    break;
                  case 10:
                    f.fPos += 5;
                    f.oPos += 1;
                    break;
                  case 12:
                    f.oPos += 4;
                    break;
                  case 14:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 15:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 16:
                    f.oPos += 4;
                    f.iPos += 1;
                    f.fPos += 2;
                    f.bPos += 1;
                    break;
                  case 17:
                    f.fPos += 2;
                    break;
                  case 18:
                    f.fPos += 2;
                    break;
                  case 19:
                    f.oPos += 1;
                    break;
                  case 20:
                    f.oPos += 1;
                }
                f.prev = fa.BEGIN_GRADIENT_FILL;
                p = f;
                B.fillCommands.beginGradientFill(
                  p.buffer.o[p.oPos],
                  p.buffer.ii[p.iiPos],
                  p.buffer.ff[p.ffPos],
                  p.buffer.ii[p.iiPos + 1],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.o[p.oPos + 2],
                  p.buffer.o[p.oPos + 3],
                  p.buffer.f[p.fPos],
                );
                B.strokeCommands.beginGradientFill(
                  p.buffer.o[p.oPos],
                  p.buffer.ii[p.iiPos],
                  p.buffer.ff[p.ffPos],
                  p.buffer.ii[p.iiPos + 1],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.o[p.oPos + 2],
                  p.buffer.o[p.oPos + 3],
                  p.buffer.f[p.fPos],
                );
              } else if (p == fa.BEGIN_SHADER_FILL) {
                switch (f.prev._hx_index) {
                  case 0:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 1:
                    f.iPos += 1;
                    f.fPos += 1;
                    break;
                  case 2:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 3:
                    f.oPos += 1;
                    break;
                  case 4:
                    f.fPos += 6;
                    break;
                  case 5:
                    f.fPos += 4;
                    break;
                  case 6:
                    f.fPos += 3;
                    break;
                  case 7:
                    f.fPos += 4;
                    break;
                  case 8:
                    f.oPos += 3;
                    break;
                  case 9:
                    f.fPos += 4;
                    break;
                  case 10:
                    f.fPos += 5;
                    f.oPos += 1;
                    break;
                  case 12:
                    f.oPos += 4;
                    break;
                  case 14:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 15:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 16:
                    f.oPos += 4;
                    f.iPos += 1;
                    f.fPos += 2;
                    f.bPos += 1;
                    break;
                  case 17:
                    f.fPos += 2;
                    break;
                  case 18:
                    f.fPos += 2;
                    break;
                  case 19:
                    f.oPos += 1;
                    break;
                  case 20:
                    f.oPos += 1;
                }
                f.prev = fa.BEGIN_SHADER_FILL;
                p = f;
                B.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                B.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
              } else {
                switch (f.prev._hx_index) {
                  case 0:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 1:
                    f.iPos += 1;
                    f.fPos += 1;
                    break;
                  case 2:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 3:
                    f.oPos += 1;
                    break;
                  case 4:
                    f.fPos += 6;
                    break;
                  case 5:
                    f.fPos += 4;
                    break;
                  case 6:
                    f.fPos += 3;
                    break;
                  case 7:
                    f.fPos += 4;
                    break;
                  case 8:
                    f.oPos += 3;
                    break;
                  case 9:
                    f.fPos += 4;
                    break;
                  case 10:
                    f.fPos += 5;
                    f.oPos += 1;
                    break;
                  case 12:
                    f.oPos += 4;
                    break;
                  case 14:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 15:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 16:
                    f.oPos += 4;
                    f.iPos += 1;
                    f.fPos += 2;
                    f.bPos += 1;
                    break;
                  case 17:
                    f.fPos += 2;
                    break;
                  case 18:
                    f.fPos += 2;
                    break;
                  case 19:
                    f.oPos += 1;
                    break;
                  case 20:
                    f.oPos += 1;
                }
                f.prev = fa.BEGIN_FILL;
                p = f;
                B.fillCommands.beginFill(p.buffer.i[p.iPos], 1);
                B.strokeCommands.beginFill(p.buffer.i[p.iPos], 1);
              }
              break;
            case 4:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.CUBIC_CURVE_TO;
              p = f;
              B.fillCommands.cubicCurveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.f[p.fPos + 5],
              );
              B.strokeCommands.cubicCurveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.f[p.fPos + 5],
              );
              break;
            case 5:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.CURVE_TO;
              p = f;
              B.fillCommands.curveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              B.strokeCommands.curveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 6:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.DRAW_CIRCLE;
              p = f;
              B.fillCommands.drawCircle(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
              );
              B.strokeCommands.drawCircle(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
              );
              break;
            case 7:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.DRAW_ELLIPSE;
              p = f;
              B.fillCommands.drawEllipse(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              B.strokeCommands.drawEllipse(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 9:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.DRAW_RECT;
              p = f;
              B.fillCommands.drawRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              B.strokeCommands.drawRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 10:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.DRAW_ROUND_RECT;
              p = f;
              B.fillCommands.drawRoundRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.o[p.oPos],
              );
              B.strokeCommands.drawRoundRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.o[p.oPos],
              );
              break;
            case 13:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.END_FILL;
              B.endFill();
              if (B.hasFill && B.context.isPointInPath(b, d, B.windingRule))
                return (
                  f.destroy(),
                  (a.__canvas = g),
                  (a.__context = k),
                  (B.graphics = null),
                  !0
                );
              B.endStroke();
              if (B.hasStroke && B.context.isPointInStroke(b, d))
                return (
                  f.destroy(),
                  (a.__canvas = g),
                  (a.__context = k),
                  (B.graphics = null),
                  !0
                );
              B.hasFill = !1;
              B.bitmapFill = null;
              break;
            case 14:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.LINE_BITMAP_STYLE;
              p = f;
              B.strokeCommands.lineBitmapStyle(
                p.buffer.o[p.oPos],
                p.buffer.o[p.oPos + 1],
                p.buffer.b[p.bPos],
                p.buffer.b[p.bPos + 1],
              );
              break;
            case 15:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.LINE_GRADIENT_STYLE;
              p = f;
              B.strokeCommands.lineGradientStyle(
                p.buffer.o[p.oPos],
                p.buffer.ii[p.iiPos],
                p.buffer.ff[p.ffPos],
                p.buffer.ii[p.iiPos + 1],
                p.buffer.o[p.oPos + 1],
                p.buffer.o[p.oPos + 2],
                p.buffer.o[p.oPos + 3],
                p.buffer.f[p.fPos],
              );
              break;
            case 16:
              B.endStroke();
              if (B.hasStroke && B.context.isPointInStroke(b, d))
                return (
                  f.destroy(),
                  (a.__canvas = g),
                  (a.__context = k),
                  (B.graphics = null),
                  !0
                );
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.LINE_STYLE;
              p = f;
              B.strokeCommands.lineStyle(
                p.buffer.o[p.oPos],
                p.buffer.i[p.iPos],
                1,
                p.buffer.b[p.bPos],
                p.buffer.o[p.oPos + 1],
                p.buffer.o[p.oPos + 2],
                p.buffer.o[p.oPos + 3],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 17:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.LINE_TO;
              p = f;
              B.fillCommands.lineTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1]);
              B.strokeCommands.lineTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 18:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = fa.MOVE_TO;
              p = f;
              B.fillCommands.moveTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1]);
              B.strokeCommands.moveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 21:
              B.windingRule = 'evenodd';
              break;
            case 22:
              B.windingRule = 'nonzero';
              break;
            default:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1;
              }
              f.prev = p;
          }
        }
        l = !1;
        0 < B.fillCommands.get_length() && B.endFill();
        B.hasFill && B.context.isPointInPath(b, d, B.windingRule) && (l = !0);
        0 < B.strokeCommands.get_length() && B.endStroke();
        B.hasStroke && B.context.isPointInStroke(b, d) && (l = !0);
        f.destroy();
        a.__canvas = g;
        a.__context = k;
        B.graphics = null;
        return l;
      };
      B.normalizeUVT = function (a, b) {
        null == b && (b = !1);
        for (
          var d = -Infinity, f, g = a.get_length(), k = 1, l = g + 1;
          k < l;

        )
          ((f = k++),
            (b && 0 == f % 3) || ((f = a.get(f - 1)), d < f && (d = f)));
        if (!b) return { max: d, uvt: a };
        var h = ra.toFloatVector(null);
        k = 1;
        for (l = g + 1; k < l; )
          ((f = k++), (b && 0 == f % 3) || h.push(a.get(f - 1)));
        return { max: d, uvt: h };
      };
      B.playCommands = function (a, b) {
        null == b && (b = !1);
        B.bounds = B.graphics.__bounds;
        var d = B.bounds.x,
          f = B.bounds.y,
          g = 0,
          k = 0,
          l = !1,
          h = 0,
          p = 0,
          r = !1;
        B.windingRule = 'evenodd';
        B.setSmoothing(!0);
        var t = !1,
          n = new fe(a),
          q,
          E,
          m,
          C = null,
          x = null,
          y = 0,
          z = a.types;
        a: for (; y < z.length; ) {
          var P = z[y];
          ++y;
          switch (P._hx_index) {
            case 0:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.BEGIN_BITMAP_FILL;
              var K = n;
              B.bitmapFill = K.buffer.o[K.oPos];
              if (K.buffer.o[K.oPos].readable)
                B.context.fillStyle = B.createBitmapFill(
                  K.buffer.o[K.oPos],
                  K.buffer.b[K.bPos],
                  K.buffer.b[K.bPos + 1],
                );
              else {
                var w = R.hex(0, 6);
                B.context.fillStyle = '#' + w;
              }
              B.hasFill = !0;
              null != K.buffer.o[K.oPos + 1]
                ? ((B.pendingMatrix = K.buffer.o[K.oPos + 1]),
                  (B.inversePendingMatrix = K.buffer.o[K.oPos + 1].clone()),
                  B.inversePendingMatrix.invert())
                : ((B.pendingMatrix = null), (B.inversePendingMatrix = null));
              break;
            case 1:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.BEGIN_FILL;
              var v = n;
              if (0.005 > v.buffer.f[v.fPos]) B.hasFill = !1;
              else {
                if (1 == v.buffer.f[v.fPos]) {
                  var F = R.hex(v.buffer.i[v.iPos] & 16777215, 6);
                  B.context.fillStyle = '#' + F;
                } else {
                  var J = (v.buffer.i[v.iPos] & 16711680) >>> 16;
                  var G = (v.buffer.i[v.iPos] & 65280) >>> 8;
                  var Oa = v.buffer.i[v.iPos] & 255;
                  B.context.fillStyle =
                    'rgba(' +
                    J +
                    ', ' +
                    G +
                    ', ' +
                    Oa +
                    ', ' +
                    v.buffer.f[v.fPos] +
                    ')';
                }
                B.bitmapFill = null;
                B.setSmoothing(!0);
                B.hasFill = !0;
              }
              break;
            case 2:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.BEGIN_GRADIENT_FILL;
              var S = n;
              B.context.fillStyle = B.createGradientPattern(
                S.buffer.o[S.oPos],
                S.buffer.ii[S.iiPos],
                S.buffer.ff[S.ffPos],
                S.buffer.ii[S.iiPos + 1],
                S.buffer.o[S.oPos + 1],
                S.buffer.o[S.oPos + 2],
                S.buffer.o[S.oPos + 3],
                S.buffer.f[S.fPos],
              );
              B.bitmapFill = null;
              B.setSmoothing(!0);
              B.hasFill = !0;
              break;
            case 3:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.BEGIN_SHADER_FILL;
              var L = n,
                rb = L.buffer.o[L.oPos];
              if (0 < rb.inputCount) {
                B.bitmapFill = rb.inputs[0];
                if (B.bitmapFill.readable)
                  B.context.fillStyle = B.createBitmapFill(
                    B.bitmapFill,
                    0 != rb.inputWrap[0],
                    5 != rb.inputFilter[0],
                  );
                else {
                  var D = R.hex(0, 6);
                  B.context.fillStyle = '#' + D;
                }
                B.hasFill = !0;
                B.pendingMatrix = null;
                B.inversePendingMatrix = null;
              }
              break;
            case 4:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.CUBIC_CURVE_TO;
              var W = n;
              t = !0;
              B.context.bezierCurveTo(
                W.buffer.f[W.fPos] - d,
                W.buffer.f[W.fPos + 1] - f,
                W.buffer.f[W.fPos + 2] - d,
                W.buffer.f[W.fPos + 3] - f,
                W.buffer.f[W.fPos + 4] - d,
                W.buffer.f[W.fPos + 5] - f,
              );
              g = W.buffer.f[W.fPos + 4];
              k = W.buffer.f[W.fPos + 5];
              break;
            case 5:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.CURVE_TO;
              var kb = n;
              t = !0;
              B.context.quadraticCurveTo(
                kb.buffer.f[kb.fPos] - d,
                kb.buffer.f[kb.fPos + 1] - f,
                kb.buffer.f[kb.fPos + 2] - d,
                kb.buffer.f[kb.fPos + 3] - f,
              );
              g = kb.buffer.f[kb.fPos + 2];
              k = kb.buffer.f[kb.fPos + 3];
              break;
            case 6:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.DRAW_CIRCLE;
              var pa = n;
              t = !0;
              B.context.moveTo(
                pa.buffer.f[pa.fPos] - d + pa.buffer.f[pa.fPos + 2],
                pa.buffer.f[pa.fPos + 1] - f,
              );
              B.context.arc(
                pa.buffer.f[pa.fPos] - d,
                pa.buffer.f[pa.fPos + 1] - f,
                pa.buffer.f[pa.fPos + 2],
                0,
                2 * Math.PI,
                !0,
              );
              break;
            case 7:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.DRAW_ELLIPSE;
              var ca = n;
              t = !0;
              var M = ca.buffer.f[ca.fPos];
              var Q = ca.buffer.f[ca.fPos + 1];
              var A = ca.buffer.f[ca.fPos + 2];
              var Ga = ca.buffer.f[ca.fPos + 3];
              M -= d;
              Q -= f;
              var O = (A / 2) * 0.5522848;
              var H = (Ga / 2) * 0.5522848;
              var ha = M + A;
              var N = Q + Ga;
              var Fb = M + A / 2;
              var U = Q + Ga / 2;
              B.context.moveTo(M, U);
              B.context.bezierCurveTo(M, U - H, Fb - O, Q, Fb, Q);
              B.context.bezierCurveTo(Fb + O, Q, ha, U - H, ha, U);
              B.context.bezierCurveTo(ha, U + H, Fb + O, N, Fb, N);
              B.context.bezierCurveTo(Fb - O, N, M, U + H, M, U);
              break;
            case 8:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.DRAW_QUADS;
              var V = n,
                da = V.buffer.o[V.oPos],
                ea = V.buffer.o[V.oPos + 1],
                X = V.buffer.o[V.oPos + 2],
                Z = null != ea,
                ib = !1,
                Mc = !1,
                aa = Z ? ea.get_length() : Math.floor(da.get_length() / 4);
              if (0 == aa) return;
              null != X &&
                (X.get_length() >= 6 * aa
                  ? (Mc = ib = !0)
                  : X.get_length() >= 4 * aa
                    ? (ib = !0)
                    : X.get_length() >= 2 * aa && (Mc = !0));
              var Jb = ja.__pool.get(),
                T = qa.__pool.get(),
                wa = B.graphics.__renderTransform;
              B.context.save();
              for (var Tc = 0, ba = aa; Tc < ba; ) {
                var ve = Tc++;
                var Y = Z ? 4 * ea.get(ve) : 4 * ve;
                if (
                  !(
                    0 > Y ||
                    (Jb.setTo(
                      da.get(Y),
                      da.get(Y + 1),
                      da.get(Y + 2),
                      da.get(Y + 3),
                    ),
                    0 >= Jb.width || 0 >= Jb.height)
                  )
                ) {
                  if (ib && Mc) {
                    var Ba = 6 * ve;
                    T.setTo(
                      X.get(Ba),
                      X.get(Ba + 1),
                      X.get(Ba + 2),
                      X.get(Ba + 3),
                      X.get(Ba + 4),
                      X.get(Ba + 5),
                    );
                  } else
                    ib
                      ? ((Ba = 4 * ve),
                        T.setTo(
                          X.get(Ba),
                          X.get(Ba + 1),
                          X.get(Ba + 2),
                          X.get(Ba + 3),
                          Jb.x,
                          Jb.y,
                        ))
                      : Mc
                        ? ((Ba = 2 * ve),
                          (T.tx = X.get(Ba)),
                          (T.ty = X.get(Ba + 1)))
                        : ((T.tx = Jb.x), (T.ty = Jb.y));
                  T.tx += g - d;
                  T.ty += k - f;
                  T.concat(wa);
                  B.context.setTransform(T.a, T.b, T.c, T.d, T.tx, T.ty);
                  null != B.bitmapFill && B.bitmapFill.readable
                    ? B.context.drawImage(
                        B.bitmapFill.image.get_src(),
                        Jb.x,
                        Jb.y,
                        Jb.width,
                        Jb.height,
                        0,
                        0,
                        Jb.width,
                        Jb.height,
                      )
                    : B.context.fillRect(0, 0, Jb.width, Jb.height);
                }
              }
              ja.__pool.release(Jb);
              qa.__pool.release(T);
              B.context.restore();
              break;
            case 9:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.DRAW_RECT;
              var lb = n;
              var Gb = !1;
              if (
                null != B.bitmapFill &&
                B.bitmapFill.readable &&
                !B.hitTesting
              ) {
                var za = (m = E = q = 0);
                var ia = !0;
                if (null != B.pendingMatrix)
                  if (0 != B.pendingMatrix.b || 0 != B.pendingMatrix.c) ia = !1;
                  else {
                    null == C && (C = I.__pool.get());
                    null == x && (x = I.__pool.get());
                    C.setTo(lb.buffer.f[lb.fPos], lb.buffer.f[lb.fPos + 1]);
                    var ka = B.inversePendingMatrix,
                      la = C.x,
                      ma = C.y;
                    C.x = la * ka.a + ma * ka.c + ka.tx;
                    C.y = la * ka.b + ma * ka.d + ka.ty;
                    x.setTo(
                      lb.buffer.f[lb.fPos] + lb.buffer.f[lb.fPos + 2],
                      lb.buffer.f[lb.fPos + 1] + lb.buffer.f[lb.fPos + 3],
                    );
                    var Ab = B.inversePendingMatrix,
                      oa = x.x,
                      jf = x.y;
                    x.x = oa * Ab.a + jf * Ab.c + Ab.tx;
                    x.y = oa * Ab.b + jf * Ab.d + Ab.ty;
                    q = C.y;
                    za = C.x;
                    m = x.y;
                    E = x.x;
                  }
                else
                  ((q = lb.buffer.f[lb.fPos + 1]),
                    (za = lb.buffer.f[lb.fPos]),
                    (m = lb.buffer.f[lb.fPos + 1] + lb.buffer.f[lb.fPos + 3]),
                    (E = lb.buffer.f[lb.fPos] + lb.buffer.f[lb.fPos + 2]));
                ia &&
                  0 <= q &&
                  0 <= za &&
                  E <= B.bitmapFill.width &&
                  m <= B.bitmapFill.height &&
                  ((Gb = !0),
                  B.hitTesting ||
                    B.context.drawImage(
                      B.bitmapFill.image.get_src(),
                      za,
                      q,
                      E - za,
                      m - q,
                      lb.buffer.f[lb.fPos] - d,
                      lb.buffer.f[lb.fPos + 1] - f,
                      lb.buffer.f[lb.fPos + 2],
                      lb.buffer.f[lb.fPos + 3],
                    ));
              }
              Gb ||
                ((t = !0),
                B.context.rect(
                  lb.buffer.f[lb.fPos] - d,
                  lb.buffer.f[lb.fPos + 1] - f,
                  lb.buffer.f[lb.fPos + 2],
                  lb.buffer.f[lb.fPos + 3],
                ));
              break;
            case 10:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.DRAW_ROUND_RECT;
              var Nc = n;
              t = !0;
              B.drawRoundRect(
                Nc.buffer.f[Nc.fPos] - d,
                Nc.buffer.f[Nc.fPos + 1] - f,
                Nc.buffer.f[Nc.fPos + 2],
                Nc.buffer.f[Nc.fPos + 3],
                Nc.buffer.f[Nc.fPos + 4],
                Nc.buffer.o[Nc.oPos],
              );
              break;
            case 12:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.DRAW_TRIANGLES;
              var $c = n,
                sa = $c.buffer.o[$c.oPos],
                ua = $c.buffer.o[$c.oPos + 1],
                Va = $c.buffer.o[$c.oPos + 2],
                na = null,
                ya = null == B.bitmapFill;
              if (ya && null != Va) break a;
              if (!ya) {
                if (null == Va) {
                  Va = ra.toFloatVector(null);
                  for (var xa = 0, $a = (sa.get_length() / 2) | 0; xa < $a; ) {
                    var ta = xa++;
                    Va.push(sa.get(2 * ta) - d / B.bitmapFill.width);
                    Va.push(sa.get(2 * ta + 1) - f / B.bitmapFill.height);
                  }
                }
                var Ca = Va.get_length() != sa.get_length(),
                  hb = B.normalizeUVT(Va, Ca),
                  Ea = hb.max;
                Va = hb.uvt;
                na =
                  1 < Ea
                    ? B.createTempPatternCanvas(
                        B.bitmapFill,
                        B.bitmapRepeat,
                        B.bounds.width | 0,
                        B.bounds.height | 0,
                      )
                    : B.createTempPatternCanvas(
                        B.bitmapFill,
                        B.bitmapRepeat,
                        B.bitmapFill.width,
                        B.bitmapFill.height,
                      );
              }
              for (
                var Aa = 0,
                  va = ua.get_length(),
                  Ha,
                  Ia,
                  Ja,
                  jb,
                  vc,
                  Ma,
                  db,
                  Pa,
                  Qa,
                  Da,
                  Lb,
                  Fa,
                  Ka,
                  La,
                  Na,
                  Sa,
                  Uc,
                  Ra,
                  Ta,
                  Ua,
                  bb,
                  Ya,
                  Za,
                  dd,
                  cb,
                  eb,
                  fb,
                  gb;
                Aa < va;

              ) {
                Ha = Aa;
                Ia = Aa + 1;
                Ja = Aa + 2;
                jb = 2 * ua.get(Ha);
                vc = 2 * ua.get(Ha) + 1;
                Ma = 2 * ua.get(Ia);
                db = 2 * ua.get(Ia) + 1;
                Pa = 2 * ua.get(Ja);
                Qa = 2 * ua.get(Ja) + 1;
                Da = sa.get(jb) - d;
                Lb = sa.get(vc) - f;
                Fa = sa.get(Ma) - d;
                Ka = sa.get(db) - f;
                La = sa.get(Pa) - d;
                Na = sa.get(Qa) - f;
                switch ($c.buffer.o[$c.oPos + 3]) {
                  case 0:
                    if (0 > (Fa - Da) * (Na - Lb) - (Ka - Lb) * (La - Da)) {
                      Aa += 3;
                      continue;
                    }
                    break;
                  case 2:
                    if (!(0 > (Fa - Da) * (Na - Lb) - (Ka - Lb) * (La - Da))) {
                      Aa += 3;
                      continue;
                    }
                }
                ya
                  ? (B.context.beginPath(),
                    B.context.moveTo(Da, Lb),
                    B.context.lineTo(Fa, Ka),
                    B.context.lineTo(La, Na),
                    B.context.closePath(),
                    B.hitTesting || B.context.fill(B.windingRule),
                    (Aa += 3))
                  : ((Sa = Va.get(jb) * na.width),
                    (Ra = Va.get(Ma) * na.width),
                    (Ua = Va.get(Pa) * na.width),
                    (Uc = Va.get(vc) * na.height),
                    (Ta = Va.get(db) * na.height),
                    (bb = Va.get(Qa) * na.height),
                    (Ya = Sa * (bb - Ta) - Ra * bb + Ua * Ta + (Ra - Ua) * Uc),
                    0 == Ya
                      ? ((Aa += 3), B.context.restore())
                      : (B.context.save(),
                        B.context.beginPath(),
                        B.context.moveTo(Da, Lb),
                        B.context.lineTo(Fa, Ka),
                        B.context.lineTo(La, Na),
                        B.context.closePath(),
                        B.context.clip(),
                        (Za =
                          -(
                            Uc * (La - Fa) -
                            Ta * La +
                            bb * Fa +
                            (Ta - bb) * Da
                          ) / Ya),
                        (dd =
                          (Ta * Na +
                            Uc * (Ka - Na) -
                            bb * Ka +
                            (bb - Ta) * Lb) /
                          Ya),
                        (cb =
                          (Sa * (La - Fa) -
                            Ra * La +
                            Ua * Fa +
                            (Ra - Ua) * Da) /
                          Ya),
                        (eb =
                          -(
                            Ra * Na +
                            Sa * (Ka - Na) -
                            Ua * Ka +
                            (Ua - Ra) * Lb
                          ) / Ya),
                        (fb =
                          (Sa * (bb * Fa - Ta * La) +
                            Uc * (Ra * La - Ua * Fa) +
                            (Ua * Ta - Ra * bb) * Da) /
                          Ya),
                        (gb =
                          (Sa * (bb * Ka - Ta * Na) +
                            Uc * (Ra * Na - Ua * Ka) +
                            (Ua * Ta - Ra * bb) * Lb) /
                          Ya),
                        B.context.transform(Za, dd, cb, eb, fb, gb),
                        B.context.drawImage(na, 0, 0, na.width, na.height),
                        B.context.restore(),
                        (Aa += 3)));
              }
              break;
            case 14:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.LINE_BITMAP_STYLE;
              var dc = n;
              b && B.hasStroke && B.closePath(!0);
              B.context.moveTo(g - d, k - f);
              if (dc.buffer.o[dc.oPos].readable)
                B.context.strokeStyle = B.createBitmapFill(
                  dc.buffer.o[dc.oPos],
                  dc.buffer.b[dc.bPos],
                  dc.buffer.b[dc.bPos + 1],
                );
              else {
                var Ob = R.hex(0, 6);
                B.context.strokeStyle = '#' + Ob;
              }
              B.hasStroke = !0;
              break;
            case 15:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.LINE_GRADIENT_STYLE;
              var Wa = n;
              b && B.hasStroke && B.closePath(!0);
              B.context.moveTo(g - d, k - f);
              B.context.strokeStyle = B.createGradientPattern(
                Wa.buffer.o[Wa.oPos],
                Wa.buffer.ii[Wa.iiPos],
                Wa.buffer.ff[Wa.ffPos],
                Wa.buffer.ii[Wa.iiPos + 1],
                Wa.buffer.o[Wa.oPos + 1],
                Wa.buffer.o[Wa.oPos + 2],
                Wa.buffer.o[Wa.oPos + 3],
                Wa.buffer.f[Wa.fPos],
              );
              B.setSmoothing(!0);
              B.hasStroke = !0;
              break;
            case 16:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.LINE_STYLE;
              var xb = n;
              b && B.hasStroke && B.closePath(!0);
              B.context.moveTo(g - d, k - f);
              if (null == xb.buffer.o[xb.oPos]) B.hasStroke = !1;
              else {
                B.context.lineWidth =
                  0 < xb.buffer.o[xb.oPos] ? xb.buffer.o[xb.oPos] : 1;
                var Bb =
                  null == xb.buffer.o[xb.oPos + 3]
                    ? 'round'
                    : (null == xb.buffer.o[xb.oPos + 3]
                        ? 'null'
                        : fm.toString(xb.buffer.o[xb.oPos + 3])
                      ).toLowerCase();
                B.context.lineJoin = Bb;
                var mb =
                  null == xb.buffer.o[xb.oPos + 2]
                    ? 'round'
                    : 0 == xb.buffer.o[xb.oPos + 2]
                      ? 'butt'
                      : (null == xb.buffer.o[xb.oPos + 2]
                          ? 'null'
                          : em.toString(xb.buffer.o[xb.oPos + 2])
                        ).toLowerCase();
                B.context.lineCap = mb;
                B.context.miterLimit = xb.buffer.f[xb.fPos + 1];
                if (1 == xb.buffer.f[xb.fPos]) {
                  var nb = R.hex(xb.buffer.i[xb.iPos] & 16777215, 6);
                  B.context.strokeStyle = '#' + nb;
                } else
                  ((J = (xb.buffer.i[xb.iPos] & 16711680) >>> 16),
                    (G = (xb.buffer.i[xb.iPos] & 65280) >>> 8),
                    (Oa = xb.buffer.i[xb.iPos] & 255),
                    (B.context.strokeStyle =
                      'rgba(' +
                      J +
                      ', ' +
                      G +
                      ', ' +
                      Oa +
                      ', ' +
                      xb.buffer.f[xb.fPos] +
                      ')'));
                B.setSmoothing(!0);
                B.hasStroke = !0;
              }
              break;
            case 17:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.LINE_TO;
              var ab = n;
              t = !0;
              B.context.lineTo(
                ab.buffer.f[ab.fPos] - d,
                ab.buffer.f[ab.fPos + 1] - f,
              );
              g = ab.buffer.f[ab.fPos];
              k = ab.buffer.f[ab.fPos + 1];
              g == h && k == p && (l = !0);
              break;
            case 18:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = fa.MOVE_TO;
              var Xa = n;
              B.context.moveTo(
                Xa.buffer.f[Xa.fPos] - d,
                Xa.buffer.f[Xa.fPos + 1] - f,
              );
              g = Xa.buffer.f[Xa.fPos];
              k = Xa.buffer.f[Xa.fPos + 1];
              r &&
                Xa.buffer.f[Xa.fPos] != h &&
                Xa.buffer.f[Xa.fPos + 1] != p &&
                (l = !0);
              h = Xa.buffer.f[Xa.fPos];
              p = Xa.buffer.f[Xa.fPos + 1];
              r = !0;
              break;
            case 21:
              B.windingRule = 'evenodd';
              break;
            case 22:
              B.windingRule = 'nonzero';
              break;
            default:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = P;
          }
        }
        null != C && I.__pool.release(C);
        null != x && I.__pool.release(x);
        n.destroy();
        if (t) {
          if (b && B.hasStroke) {
            if (B.hasFill) {
              if (g != h || k != p) (B.context.lineTo(h - d, p - f), (l = !0));
              l && B.closePath(!0);
            } else l && g == h && k == p && B.closePath(!0);
            B.hitTesting || B.context.stroke();
          }
          b ||
            (!B.hasFill && null == B.bitmapFill) ||
            (B.context.translate(-B.bounds.x, -B.bounds.y),
            null != B.pendingMatrix
              ? (B.context.transform(
                  B.pendingMatrix.a,
                  B.pendingMatrix.b,
                  B.pendingMatrix.c,
                  B.pendingMatrix.d,
                  B.pendingMatrix.tx,
                  B.pendingMatrix.ty,
                ),
                B.hitTesting || B.context.fill(B.windingRule),
                B.context.transform(
                  B.inversePendingMatrix.a,
                  B.inversePendingMatrix.b,
                  B.inversePendingMatrix.c,
                  B.inversePendingMatrix.d,
                  B.inversePendingMatrix.tx,
                  B.inversePendingMatrix.ty,
                ))
              : B.hitTesting || B.context.fill(B.windingRule),
            B.context.translate(B.bounds.x, B.bounds.y),
            B.context.closePath());
        }
      };
      B.render = function (a, b) {
        a.__update(b.__worldTransform, b.__pixelRatio);
        if (a.__softwareDirty) {
          B.hitTesting = !1;
          B.graphics = a;
          B.allowSmoothing = b.__allowSmoothing;
          B.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
          B.bounds = a.__bounds;
          var d = a.__width,
            f = a.__height;
          if (
            !a.__visible ||
            0 == a.__commands.get_length() ||
            null == B.bounds ||
            1 > d ||
            1 > f
          )
            ((a.__canvas = null), (a.__context = null), (a.__bitmap = null));
          else {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')));
            B.context = a.__context;
            var g = a.__renderTransform,
              k = a.__canvas,
              l = b.__pixelRatio,
              h = (d * l) | 0,
              p = (f * l) | 0;
            b.__setBlendModeContext(B.context, 10);
            b.__isDOM
              ? (k.width == h && k.height == p
                  ? B.context.clearRect(0, 0, h, p)
                  : ((k.width = h),
                    (k.height = p),
                    (k.style.width = d + 'px'),
                    (k.style.height = f + 'px')),
                (d = a.__renderTransform),
                B.context.setTransform(
                  d.a * l,
                  d.b * l,
                  d.c * l,
                  d.d * l,
                  d.tx * l,
                  d.ty * l,
                ))
              : (k.width == h && k.height == p
                  ? (B.context.closePath(),
                    B.context.setTransform(1, 0, 0, 1, 0, 0),
                    B.context.clearRect(0, 0, h, p))
                  : ((k.width = d), (k.height = f)),
                B.context.setTransform(g.a, g.b, g.c, g.d, g.tx, g.ty));
            B.fillCommands.clear();
            B.strokeCommands.clear();
            B.hasFill = !1;
            B.hasStroke = !1;
            B.bitmapFill = null;
            l = B.bitmapRepeat = !1;
            f = d = 0;
            B.windingRule = 'evenodd';
            g = new fe(a.__commands);
            k = 0;
            for (h = a.__commands.types; k < h.length; )
              switch (((p = h[k]), ++k, p._hx_index)) {
                case 0:
                case 1:
                case 2:
                case 3:
                  B.endFill();
                  B.endStroke();
                  if (p == fa.BEGIN_BITMAP_FILL) {
                    switch (g.prev._hx_index) {
                      case 0:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 1:
                        g.iPos += 1;
                        g.fPos += 1;
                        break;
                      case 2:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 3:
                        g.oPos += 1;
                        break;
                      case 4:
                        g.fPos += 6;
                        break;
                      case 5:
                        g.fPos += 4;
                        break;
                      case 6:
                        g.fPos += 3;
                        break;
                      case 7:
                        g.fPos += 4;
                        break;
                      case 8:
                        g.oPos += 3;
                        break;
                      case 9:
                        g.fPos += 4;
                        break;
                      case 10:
                        g.fPos += 5;
                        g.oPos += 1;
                        break;
                      case 12:
                        g.oPos += 4;
                        break;
                      case 14:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 15:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 16:
                        g.oPos += 4;
                        g.iPos += 1;
                        g.fPos += 2;
                        g.bPos += 1;
                        break;
                      case 17:
                        g.fPos += 2;
                        break;
                      case 18:
                        g.fPos += 2;
                        break;
                      case 19:
                        g.oPos += 1;
                        break;
                      case 20:
                        g.oPos += 1;
                    }
                    g.prev = fa.BEGIN_BITMAP_FILL;
                    p = g;
                    B.fillCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                    B.strokeCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                  } else if (p == fa.BEGIN_GRADIENT_FILL) {
                    switch (g.prev._hx_index) {
                      case 0:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 1:
                        g.iPos += 1;
                        g.fPos += 1;
                        break;
                      case 2:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 3:
                        g.oPos += 1;
                        break;
                      case 4:
                        g.fPos += 6;
                        break;
                      case 5:
                        g.fPos += 4;
                        break;
                      case 6:
                        g.fPos += 3;
                        break;
                      case 7:
                        g.fPos += 4;
                        break;
                      case 8:
                        g.oPos += 3;
                        break;
                      case 9:
                        g.fPos += 4;
                        break;
                      case 10:
                        g.fPos += 5;
                        g.oPos += 1;
                        break;
                      case 12:
                        g.oPos += 4;
                        break;
                      case 14:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 15:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 16:
                        g.oPos += 4;
                        g.iPos += 1;
                        g.fPos += 2;
                        g.bPos += 1;
                        break;
                      case 17:
                        g.fPos += 2;
                        break;
                      case 18:
                        g.fPos += 2;
                        break;
                      case 19:
                        g.oPos += 1;
                        break;
                      case 20:
                        g.oPos += 1;
                    }
                    g.prev = fa.BEGIN_GRADIENT_FILL;
                    p = g;
                    B.fillCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                    B.strokeCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                  } else if (p == fa.BEGIN_SHADER_FILL) {
                    switch (g.prev._hx_index) {
                      case 0:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 1:
                        g.iPos += 1;
                        g.fPos += 1;
                        break;
                      case 2:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 3:
                        g.oPos += 1;
                        break;
                      case 4:
                        g.fPos += 6;
                        break;
                      case 5:
                        g.fPos += 4;
                        break;
                      case 6:
                        g.fPos += 3;
                        break;
                      case 7:
                        g.fPos += 4;
                        break;
                      case 8:
                        g.oPos += 3;
                        break;
                      case 9:
                        g.fPos += 4;
                        break;
                      case 10:
                        g.fPos += 5;
                        g.oPos += 1;
                        break;
                      case 12:
                        g.oPos += 4;
                        break;
                      case 14:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 15:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 16:
                        g.oPos += 4;
                        g.iPos += 1;
                        g.fPos += 2;
                        g.bPos += 1;
                        break;
                      case 17:
                        g.fPos += 2;
                        break;
                      case 18:
                        g.fPos += 2;
                        break;
                      case 19:
                        g.oPos += 1;
                        break;
                      case 20:
                        g.oPos += 1;
                    }
                    g.prev = fa.BEGIN_SHADER_FILL;
                    p = g;
                    B.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                    B.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
                  } else {
                    switch (g.prev._hx_index) {
                      case 0:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 1:
                        g.iPos += 1;
                        g.fPos += 1;
                        break;
                      case 2:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 3:
                        g.oPos += 1;
                        break;
                      case 4:
                        g.fPos += 6;
                        break;
                      case 5:
                        g.fPos += 4;
                        break;
                      case 6:
                        g.fPos += 3;
                        break;
                      case 7:
                        g.fPos += 4;
                        break;
                      case 8:
                        g.oPos += 3;
                        break;
                      case 9:
                        g.fPos += 4;
                        break;
                      case 10:
                        g.fPos += 5;
                        g.oPos += 1;
                        break;
                      case 12:
                        g.oPos += 4;
                        break;
                      case 14:
                        g.oPos += 2;
                        g.bPos += 2;
                        break;
                      case 15:
                        g.oPos += 4;
                        g.iiPos += 2;
                        g.ffPos += 1;
                        g.fPos += 1;
                        break;
                      case 16:
                        g.oPos += 4;
                        g.iPos += 1;
                        g.fPos += 2;
                        g.bPos += 1;
                        break;
                      case 17:
                        g.fPos += 2;
                        break;
                      case 18:
                        g.fPos += 2;
                        break;
                      case 19:
                        g.oPos += 1;
                        break;
                      case 20:
                        g.oPos += 1;
                    }
                    g.prev = fa.BEGIN_FILL;
                    p = g;
                    B.fillCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                    B.strokeCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                  }
                  break;
                case 4:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.CUBIC_CURVE_TO;
                  p = g;
                  B.fillCommands.cubicCurveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.f[p.fPos + 5],
                  );
                  l
                    ? B.strokeCommands.cubicCurveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                        p.buffer.f[p.fPos + 4],
                        p.buffer.f[p.fPos + 5],
                      )
                    : ((d = p.buffer.f[p.fPos + 4]),
                      (f = p.buffer.f[p.fPos + 5]));
                  break;
                case 5:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.CURVE_TO;
                  p = g;
                  B.fillCommands.curveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  l
                    ? B.strokeCommands.curveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                      )
                    : ((d = p.buffer.f[p.fPos + 2]),
                      (f = p.buffer.f[p.fPos + 3]));
                  break;
                case 6:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.DRAW_CIRCLE;
                  p = g;
                  B.fillCommands.drawCircle(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                  );
                  l &&
                    B.strokeCommands.drawCircle(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                    );
                  break;
                case 7:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.DRAW_ELLIPSE;
                  p = g;
                  B.fillCommands.drawEllipse(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  l &&
                    B.strokeCommands.drawEllipse(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 8:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.DRAW_QUADS;
                  p = g;
                  B.fillCommands.drawQuads(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                  );
                  break;
                case 9:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.DRAW_RECT;
                  p = g;
                  B.fillCommands.drawRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  l &&
                    B.strokeCommands.drawRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 10:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.DRAW_ROUND_RECT;
                  p = g;
                  B.fillCommands.drawRoundRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.o[p.oPos],
                  );
                  l &&
                    B.strokeCommands.drawRoundRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                      p.buffer.f[p.fPos + 4],
                      p.buffer.o[p.oPos],
                    );
                  break;
                case 12:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.DRAW_TRIANGLES;
                  p = g;
                  B.fillCommands.drawTriangles(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                  );
                  break;
                case 13:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.END_FILL;
                  B.endFill();
                  B.endStroke();
                  l = B.hasFill = !1;
                  B.bitmapFill = null;
                  f = d = 0;
                  break;
                case 14:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.LINE_BITMAP_STYLE;
                  p = g;
                  l ||
                    (0 == d && 0 == f) ||
                    (B.strokeCommands.moveTo(d, f), (f = d = 0));
                  l = !0;
                  B.strokeCommands.lineBitmapStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.b[p.bPos],
                    p.buffer.b[p.bPos + 1],
                  );
                  break;
                case 15:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.LINE_GRADIENT_STYLE;
                  p = g;
                  l ||
                    (0 == d && 0 == f) ||
                    (B.strokeCommands.moveTo(d, f), (f = d = 0));
                  l = !0;
                  B.strokeCommands.lineGradientStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.ii[p.iiPos],
                    p.buffer.ff[p.ffPos],
                    p.buffer.ii[p.iiPos + 1],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos],
                  );
                  break;
                case 16:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.LINE_STYLE;
                  p = g;
                  l ||
                    null == p.buffer.o[p.oPos] ||
                    (0 == d && 0 == f) ||
                    (B.strokeCommands.moveTo(d, f), (f = d = 0));
                  l = null != p.buffer.o[p.oPos];
                  B.strokeCommands.lineStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.i[p.iPos],
                    p.buffer.f[p.fPos],
                    p.buffer.b[p.bPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos + 1],
                  );
                  break;
                case 17:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.LINE_TO;
                  p = g;
                  B.fillCommands.lineTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  l
                    ? B.strokeCommands.lineTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((d = p.buffer.f[p.fPos]), (f = p.buffer.f[p.fPos + 1]));
                  break;
                case 18:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.MOVE_TO;
                  p = g;
                  B.fillCommands.moveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  l
                    ? B.strokeCommands.moveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((d = p.buffer.f[p.fPos]), (f = p.buffer.f[p.fPos + 1]));
                  break;
                case 19:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.OVERRIDE_BLEND_MODE;
                  p = g;
                  b.__setBlendModeContext(B.context, p.buffer.o[p.oPos]);
                  break;
                case 21:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.WINDING_EVEN_ODD;
                  B.fillCommands.windingEvenOdd();
                  B.windingRule = 'evenodd';
                  break;
                case 22:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = fa.WINDING_NON_ZERO;
                  B.fillCommands.windingNonZero();
                  B.windingRule = 'nonzero';
                  break;
                default:
                  switch (g.prev._hx_index) {
                    case 0:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 1:
                      g.iPos += 1;
                      g.fPos += 1;
                      break;
                    case 2:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 3:
                      g.oPos += 1;
                      break;
                    case 4:
                      g.fPos += 6;
                      break;
                    case 5:
                      g.fPos += 4;
                      break;
                    case 6:
                      g.fPos += 3;
                      break;
                    case 7:
                      g.fPos += 4;
                      break;
                    case 8:
                      g.oPos += 3;
                      break;
                    case 9:
                      g.fPos += 4;
                      break;
                    case 10:
                      g.fPos += 5;
                      g.oPos += 1;
                      break;
                    case 12:
                      g.oPos += 4;
                      break;
                    case 14:
                      g.oPos += 2;
                      g.bPos += 2;
                      break;
                    case 15:
                      g.oPos += 4;
                      g.iiPos += 2;
                      g.ffPos += 1;
                      g.fPos += 1;
                      break;
                    case 16:
                      g.oPos += 4;
                      g.iPos += 1;
                      g.fPos += 2;
                      g.bPos += 1;
                      break;
                    case 17:
                      g.fPos += 2;
                      break;
                    case 18:
                      g.fPos += 2;
                      break;
                    case 19:
                      g.oPos += 1;
                      break;
                    case 20:
                      g.oPos += 1;
                  }
                  g.prev = p;
              }
            0 < B.fillCommands.get_length() && B.endFill();
            0 < B.strokeCommands.get_length() && B.endStroke();
            g.destroy();
            a.__bitmap = Tb.fromCanvas(a.__canvas);
          }
          a.__softwareDirty = !1;
          a.set___dirty(!1);
          B.graphics = null;
        }
      };
      B.renderMask = function (a, b) {
        if (0 != a.__commands.get_length()) {
          B.context = b.context;
          b = new fe(a.__commands);
          var d = 0;
          for (a = a.__commands.types; d < a.length; ) {
            var f = a[d];
            ++d;
            switch (f._hx_index) {
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.CUBIC_CURVE_TO;
                f = b;
                B.context.bezierCurveTo(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                  f.buffer.f[f.fPos + 2] - 0,
                  f.buffer.f[f.fPos + 3] - 0,
                  f.buffer.f[f.fPos + 4] - 0,
                  f.buffer.f[f.fPos + 5] - 0,
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.CURVE_TO;
                f = b;
                B.context.quadraticCurveTo(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                  f.buffer.f[f.fPos + 2] - 0,
                  f.buffer.f[f.fPos + 3] - 0,
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_CIRCLE;
                f = b;
                B.context.arc(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                  f.buffer.f[f.fPos + 2],
                  0,
                  2 * Math.PI,
                  !0,
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_ELLIPSE;
                var g = b;
                f = g.buffer.f[g.fPos];
                var k = g.buffer.f[g.fPos + 1];
                var l = g.buffer.f[g.fPos + 2];
                var h = g.buffer.f[g.fPos + 3];
                f -= 0;
                k -= 0;
                g = (l / 2) * 0.5522848;
                var p = (h / 2) * 0.5522848;
                var r = f + l;
                var t = k + h;
                l = f + l / 2;
                h = k + h / 2;
                B.context.moveTo(f, h);
                B.context.bezierCurveTo(f, h - p, l - g, k, l, k);
                B.context.bezierCurveTo(l + g, k, r, h - p, r, h);
                B.context.bezierCurveTo(r, h + p, l + g, t, l, t);
                B.context.bezierCurveTo(l - g, t, f, h + p, f, h);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_RECT;
                f = b;
                B.context.beginPath();
                B.context.rect(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                );
                B.context.closePath();
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.DRAW_ROUND_RECT;
                f = b;
                B.drawRoundRect(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                  f.buffer.f[f.fPos + 2],
                  f.buffer.f[f.fPos + 3],
                  f.buffer.f[f.fPos + 4],
                  f.buffer.o[f.oPos],
                );
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.LINE_TO;
                f = b;
                B.context.lineTo(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                );
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = fa.MOVE_TO;
                f = b;
                B.context.moveTo(
                  f.buffer.f[f.fPos] - 0,
                  f.buffer.f[f.fPos + 1] - 0,
                );
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = f;
            }
          }
          b.destroy();
        }
      };
      B.setSmoothing = function (a) {
        B.allowSmoothing || (a = !1);
        B.context.imageSmoothingEnabled != a &&
          (B.context.imageSmoothingEnabled = a);
      };
      var $i = function () {};
      h['openfl.display._internal.CanvasSimpleButton'] = $i;
      $i.__name__ = 'openfl.display._internal.CanvasSimpleButton';
      $i.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      $i.renderDrawableMask = function (a, b) {
        b.__renderDrawableMask(a.__currentState);
      };
      var X = function () {};
      h['openfl.display._internal.CanvasTextField'] = X;
      X.__name__ = 'openfl.display._internal.CanvasTextField';
      X.context = null;
      X.clearRect = null;
      X.renderDrawable = function (a, b) {
        b.__isDOM &&
          !a.__renderedOnCanvasWhileOnDOM &&
          ((a.__renderedOnCanvasWhileOnDOM = !0),
          1 == a.get_type() && a.replaceText(0, a.__text.length, a.__text),
          a.__isHTML &&
            a.__updateText(
              Ia.parse(
                a.__text,
                a.get_multiline(),
                a.__styleSheet,
                a.__textFormat,
                a.__textEngine.textFormatRanges,
              ),
            ),
          (a.__dirty = !0),
          (a.__layoutDirty = !0),
          a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty()));
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, a.__dirty),
            null == a.__cacheBitmap || a.__isCacheBitmapRender)
          ) {
            var d = a.__textEngine,
              f = !(d.background || d.border),
              g = f ? d.textBounds : d.bounds,
              k = a.__graphics,
              l = 0;
            if (a.__dirty) {
              a.__updateLayout();
              null == k.__bounds && (k.__bounds = new ja());
              if (0 == a.get_text().length) {
                var h = d.bounds.width - 4,
                  p = a.get_defaultTextFormat().align;
                l = 3 == p ? 0 : 4 == p ? h : h / 2;
                switch (p) {
                  case 0:
                    l += a.get_defaultTextFormat().leftMargin / 2;
                    l -= a.get_defaultTextFormat().rightMargin / 2;
                    l += a.get_defaultTextFormat().indent / 2;
                    l += a.get_defaultTextFormat().blockIndent / 2;
                    break;
                  case 2:
                    l += a.get_defaultTextFormat().leftMargin;
                    l += a.get_defaultTextFormat().indent;
                    l += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 3:
                    l += a.get_defaultTextFormat().leftMargin;
                    l += a.get_defaultTextFormat().indent;
                    l += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 4:
                    l -= a.get_defaultTextFormat().rightMargin;
                }
                f && ((g.y = d.bounds.y), (g.x = l));
              }
              k.__bounds.copyFrom(g);
            }
            p = b.__pixelRatio;
            k.__update(b.__worldTransform, p);
            if (a.__dirty || k.__softwareDirty) {
              h = Math.round(k.__width * p);
              var r = Math.round(k.__height * p);
              if (
                !(
                  (null != d.text && '' != d.text) ||
                  d.background ||
                  d.border ||
                  d.__hasFocus ||
                  (1 == d.type && d.selectable)
                ) ||
                ((0 >= d.width || 0 >= d.height) && 2 != d.autoSize)
              )
                ((a.__graphics.__canvas = null),
                  (a.__graphics.__context = null),
                  (a.__graphics.__bitmap = null),
                  (a.__graphics.__softwareDirty = !1),
                  a.__graphics.set___dirty(!1),
                  (a.__dirty = !1));
              else {
                null == a.__graphics.__canvas &&
                  ((a.__graphics.__canvas =
                    window.document.createElement('canvas')),
                  (a.__graphics.__context =
                    a.__graphics.__canvas.getContext('2d')));
                X.context = k.__context;
                k.__canvas.width = h;
                k.__canvas.height = r;
                b.__isDOM &&
                  ((k.__canvas.style.width = Math.round(h / p) + 'px'),
                  (k.__canvas.style.height = Math.round(r / p) + 'px'));
                var t = qa.__pool.get();
                t.scale(p, p);
                t.concat(k.__renderTransform);
                X.context.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
                qa.__pool.release(t);
                null == X.clearRect &&
                  (X.clearRect =
                    'undefined' !== typeof navigator &&
                    'undefined' !== typeof navigator.isCocoonJS);
                X.clearRect &&
                  X.context.clearRect(
                    0,
                    0,
                    k.__canvas.width,
                    k.__canvas.height,
                  );
                if ((null != d.text && '' != d.text) || d.__hasFocus) {
                  h = d.text;
                  k.__context.imageSmoothingEnabled =
                    !b.__allowSmoothing ||
                    (0 == d.antiAliasType && 400 == d.sharpness)
                      ? !1
                      : !0;
                  if (d.border || d.background) {
                    X.context.rect(0.5, 0.5, g.width - 1, g.height - 1);
                    if (d.background) {
                      var n = R.hex(d.backgroundColor & 16777215, 6);
                      X.context.fillStyle = '#' + n;
                      X.context.fill();
                    }
                    d.border &&
                      ((X.context.lineWidth = 1),
                      (n = R.hex(d.borderColor & 16777215, 6)),
                      (X.context.strokeStyle = '#' + n),
                      X.context.stroke());
                  }
                  X.context.textBaseline = 'alphabetic';
                  X.context.textAlign = 'start';
                  r = -a.get_scrollH();
                  var q = (f = 0);
                  for (n = a.get_scrollV() - 1; q < n; ) {
                    var E = q++;
                    f -= d.lineHeights.get(E);
                  }
                  var m;
                  for (l = d.layoutGroups.iterator(); l.hasNext(); ) {
                    var C = l.next();
                    if (!(C.lineIndex < a.get_scrollV() - 1)) {
                      if (C.lineIndex > d.get_bottomScrollV() - 1) break;
                      t = '#' + R.hex(C.format.color & 16777215, 6);
                      X.context.font = Db.getFont(C.format);
                      X.context.fillStyle = t;
                      X.context.fillText(
                        h.substring(C.startIndex, C.endIndex),
                        C.offsetX + r - g.x,
                        C.offsetY + C.ascent + f - g.y,
                      );
                      if (-1 < a.__caretIndex && d.selectable)
                        if (a.__selectionIndex == a.__caretIndex) {
                          if (
                            a.__showCursor &&
                            C.startIndex <= a.__caretIndex &&
                            C.endIndex >= a.__caretIndex
                          ) {
                            q = m = 0;
                            for (n = a.__caretIndex - C.startIndex; q < n; ) {
                              E = q++;
                              if (C.positions.length <= E) break;
                              m += C.positions[E];
                            }
                            q = 0;
                            n = a.get_scrollV();
                            for (E = C.lineIndex + 1; n < E; ) {
                              var x = n++;
                              q += d.lineHeights.get(x - 1);
                            }
                            X.context.beginPath();
                            n = R.hex(C.format.color & 16777215, 6);
                            X.context.strokeStyle = '#' + n;
                            X.context.moveTo(
                              C.offsetX + m - a.get_scrollH() - g.x,
                              q + 2 - g.y,
                            );
                            X.context.lineWidth = 1;
                            X.context.lineTo(
                              C.offsetX + m - a.get_scrollH() - g.x,
                              q +
                                Db.getFormatHeight(a.get_defaultTextFormat()) -
                                1 -
                                g.y,
                            );
                            X.context.stroke();
                            X.context.closePath();
                          }
                        } else if (
                          (C.startIndex <= a.__caretIndex &&
                            C.endIndex >= a.__caretIndex) ||
                          (C.startIndex <= a.__selectionIndex &&
                            C.endIndex >= a.__selectionIndex) ||
                          (C.startIndex > a.__caretIndex &&
                            C.endIndex < a.__selectionIndex) ||
                          (C.startIndex > a.__selectionIndex &&
                            C.endIndex < a.__caretIndex)
                        )
                          ((m =
                            Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                            (q =
                              Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                            C.startIndex > m && (m = C.startIndex),
                            C.endIndex < q && (q = C.endIndex),
                            (E = a.getCharBoundaries(m)),
                            q >= C.endIndex
                              ? ((n = a.getCharBoundaries(C.endIndex - 1)),
                                null != n && (n.x += n.width + 2))
                              : (n = a.getCharBoundaries(q)),
                            null != E &&
                              null != n &&
                              ((X.context.fillStyle = '#000000'),
                              X.context.fillRect(
                                E.x + r - g.x,
                                E.y + f,
                                n.x - E.x,
                                C.height,
                              ),
                              (X.context.fillStyle = '#FFFFFF'),
                              X.context.fillText(
                                h.substring(m, q),
                                r + E.x - g.x,
                                C.offsetY + C.ascent + f,
                              )));
                      C.format.underline &&
                        (X.context.beginPath(),
                        (X.context.strokeStyle = t),
                        (X.context.lineWidth = 1),
                        (t = C.offsetX + r - g.x),
                        (m =
                          Math.ceil(C.offsetY + f + C.ascent - g.y) +
                          Math.floor(0.185 * C.ascent) +
                          0.5),
                        X.context.moveTo(t, m),
                        X.context.lineTo(t + C.width, m),
                        X.context.stroke(),
                        X.context.closePath());
                    }
                  }
                } else {
                  if (d.border || d.background)
                    (d.border
                      ? X.context.rect(0.5, 0.5, g.width - 1, g.height - 1)
                      : X.context.rect(0, 0, g.width, g.height),
                      d.background &&
                        ((n = R.hex(d.backgroundColor & 16777215, 6)),
                        (X.context.fillStyle = '#' + n),
                        X.context.fill()),
                      d.border &&
                        ((X.context.lineWidth = 1),
                        (X.context.lineCap = 'square'),
                        (n = R.hex(d.borderColor & 16777215, 6)),
                        (X.context.strokeStyle = '#' + n),
                        X.context.stroke()));
                  if (-1 < a.__caretIndex && d.selectable && a.__showCursor) {
                    r = -a.get_scrollH() + (f ? 0 : l);
                    q = f = 0;
                    for (n = a.get_scrollV() - 1; q < n; )
                      ((E = q++), (f += d.lineHeights.get(E)));
                    X.context.beginPath();
                    n = R.hex(a.get_defaultTextFormat().color & 16777215, 6);
                    X.context.strokeStyle = '#' + n;
                    X.context.moveTo(r + 2.5, f + 2.5);
                    X.context.lineWidth = 1;
                    X.context.lineTo(
                      r + 2.5,
                      f + Db.getFormatHeight(a.get_defaultTextFormat()) - 1,
                    );
                    X.context.stroke();
                    X.context.closePath();
                  }
                }
                k.__bitmap = Tb.fromCanvas(a.__graphics.__canvas);
                k.__bitmapScale = p;
                k.__visible = !0;
                a.__dirty = !1;
                k.__softwareDirty = !1;
                k.set___dirty(!1);
              }
            }
            f = !1;
            0 == a.__textEngine.antiAliasType &&
              1 == a.__textEngine.gridFitType &&
              (f = b.context.imageSmoothingEnabled) &&
              (b.context.imageSmoothingEnabled = !1);
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable &&
              ((g = b.__getAlpha(a.__worldAlpha)),
              !(0 >= g) &&
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (d = b.context),
                  b.setTransform(a.__renderTransform, d),
                  (t = a.opaqueBackground),
                  (d.fillStyle =
                    'rgb(' +
                    ((t >>> 16) & 255) +
                    ',' +
                    ((t >>> 8) & 255) +
                    ',' +
                    (t & 255) +
                    ')'),
                  d.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null != a.__graphics &&
                  a.__renderable &&
                  ((g = b.__getAlpha(a.__worldAlpha)),
                  !(0 >= g) &&
                    ((k = a.__graphics),
                    null != k &&
                      (B.render(k, b),
                      (h = k.__width),
                      (r = k.__height),
                      (l = k.__canvas),
                      null != l &&
                        k.__visible &&
                        1 <= h &&
                        1 <= r &&
                        ((C = k.__worldTransform),
                        (d = b.context),
                        (p = a.__scrollRect),
                        (x = a.__worldScale9Grid),
                        null == p || (0 < p.width && 0 < p.height)))))))
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              d.globalAlpha = g;
              if (null != x && 0 == C.b && 0 == C.c) {
                p = b.__pixelRatio;
                t = qa.__pool.get();
                t.translate(C.tx, C.ty);
                b.setTransform(t, d);
                qa.__pool.release(t);
                g = k.__bounds;
                q = k.__renderTransform.a / k.__bitmapScale;
                var y = k.__renderTransform.d / k.__bitmapScale;
                n = q * C.a;
                E = y * C.d;
                k = Math.max(1, Math.round(x.x * q));
                C = Math.round(x.y * y);
                t = Math.max(
                  1,
                  Math.round((g.get_right() - x.get_right()) * q),
                );
                m = Math.round((g.get_bottom() - x.get_bottom()) * y);
                q = Math.round(x.width * q);
                x = Math.round(x.height * y);
                y = Math.round(k / p);
                var z = Math.round(C / p),
                  P = Math.round(t / p);
                p = Math.round(m / p);
                n = g.width * n - y - P;
                g = g.height * E - z - p;
                b.applySmoothing(d, !1);
                0 != q && 0 != x
                  ? (d.drawImage(l, 0, 0, k, C, 0, 0, y, z),
                    d.drawImage(l, k, 0, q, C, y, 0, n, z),
                    d.drawImage(l, k + q, 0, t, C, y + n, 0, P, z),
                    d.drawImage(l, 0, C, k, x, 0, z, y, g),
                    d.drawImage(l, k, C, q, x, y, z, n, g),
                    d.drawImage(l, k + q, C, t, x, y + n, z, P, g),
                    d.drawImage(l, 0, C + x, k, m, 0, z + g, y, p),
                    d.drawImage(l, k, C + x, q, m, y, z + g, n, p),
                    d.drawImage(l, k + q, C + x, t, m, y + n, z + g, P, p))
                  : 0 == q && 0 != x
                    ? ((k = y + n + P),
                      d.drawImage(l, 0, 0, h, C, 0, 0, k, z),
                      d.drawImage(l, 0, C, h, x, 0, z, k, g),
                      d.drawImage(l, 0, C + x, h, m, 0, z + g, k, p))
                    : 0 == x &&
                      0 != q &&
                      ((g = z + g + p),
                      d.drawImage(l, 0, 0, k, r, 0, 0, y, g),
                      d.drawImage(l, k, 0, q, r, y, 0, n, g),
                      d.drawImage(l, k + q, 0, t, r, y + n, 0, P, g));
              } else (b.setTransform(C, d), d.drawImage(l, 0, 0, h, r));
              b.__popMaskObject(a);
            }
            f && (b.context.imageSmoothingEnabled = !0);
          } else
            ((a = a.__cacheBitmap),
              a.__renderable &&
                ((g = b.__getAlpha(a.__worldAlpha)),
                0 < g &&
                  null != a.__bitmapData &&
                  a.__bitmapData.__isValid &&
                  a.__bitmapData.readable &&
                  ((d = b.context),
                  b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a, !1),
                  Ha.convertToCanvas(a.__bitmapData.image),
                  (d.globalAlpha = g),
                  (p = a.__scrollRect),
                  b.setTransform(a.__renderTransform, d),
                  (b.__allowSmoothing && a.smoothing) ||
                    (d.imageSmoothingEnabled = !1),
                  null == p
                    ? d.drawImage(
                        a.__bitmapData.image.get_src(),
                        0,
                        0,
                        a.__bitmapData.image.width,
                        a.__bitmapData.image.height,
                      )
                    : d.drawImage(
                        a.__bitmapData.image.get_src(),
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                      ),
                  (b.__allowSmoothing && a.smoothing) ||
                    (d.imageSmoothingEnabled = !0),
                  b.__popMaskObject(a, !1))));
      };
      X.renderDrawableMask = function (a, b) {
        Af.renderDrawableMask(a, b);
      };
      var Ge = function () {};
      h['openfl.display._internal.CanvasTilemap'] = Ge;
      Ge.__name__ = 'openfl.display._internal.CanvasTilemap';
      Ge.renderTileContainer = function (a, b, d, f, g, k, l, h, p, r, t, n) {
        var u = b.context,
          q = b.__roundPixels,
          E = qa.__pool.get(),
          C = a.__tiles,
          m,
          x = null,
          y = 0;
        for (a = a.__length; y < a; ) {
          var z = y++;
          var P = C[z];
          E.setTo(1, 0, 0, 1, -P.get_originX(), -P.get_originY());
          E.concat(P.get_matrix());
          E.concat(d);
          q && ((E.tx = Math.round(E.tx)), (E.ty = Math.round(E.ty)));
          var B = null != P.get_tileset() ? P.get_tileset() : f;
          z = P.get_alpha() * l;
          if ((m = P.get_visible()) && !(0 >= z))
            if (
              (k || (z = 1),
              h && (x = null != P.__blendMode ? P.__blendMode : p),
              0 < P.__length)
            )
              Ge.renderTileContainer(P, b, E, B, g, k, z, h, x, r, t, n);
            else if (null != B) {
              m = P.get_id();
              if (-1 == m) {
                if (
                  ((P = P.__rect), null == P || 0 >= P.width || 0 >= P.height)
                )
                  continue;
              } else {
                P = B.__data[m];
                if (null == P) continue;
                n.setTo(P.x, P.y, P.width, P.height);
                P = n;
              }
              B = B.__bitmapData;
              null != B &&
                null != B.image &&
                (B != r &&
                  (null == B.image.buffer.__srcImage &&
                    Ha.convertToCanvas(B.image),
                  (t = B.image.get_src()),
                  (r = B)),
                (u.globalAlpha = z),
                h && b.__setBlendMode(x),
                b.setTransform(E, u),
                u.drawImage(
                  t,
                  P.x,
                  P.y,
                  P.width,
                  P.height,
                  0,
                  0,
                  P.width,
                  P.height,
                ));
            }
        }
        qa.__pool.release(E);
      };
      Ge.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((x = b.__getAlpha(a.__worldAlpha)), 0 >= x)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              y = b.context;
              b.setTransform(a.__renderTransform, y);
              var d = a.opaqueBackground;
              y.fillStyle =
                'rgb(' +
                ((d >>> 16) & 255) +
                ',' +
                ((d >>> 8) & 255) +
                ',' +
                (d & 255) +
                ')';
              y.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((x = b.__getAlpha(a.__worldAlpha)), !(0 >= x))
            ) {
              var f = a.__graphics;
              if (null != f) {
                B.render(f, b);
                var g = f.__width,
                  k = f.__height;
                d = f.__canvas;
                if (null != d && f.__visible && 1 <= g && 1 <= k) {
                  var l = f.__worldTransform;
                  y = b.context;
                  z = a.__scrollRect;
                  var h = a.__worldScale9Grid;
                  if (null == z || (0 < z.width && 0 < z.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    y.globalAlpha = x;
                    if (null != h && 0 == l.b && 0 == l.c) {
                      var p = b.__pixelRatio;
                      x = qa.__pool.get();
                      x.translate(l.tx, l.ty);
                      b.setTransform(x, y);
                      qa.__pool.release(x);
                      x = f.__bounds;
                      var r = f.__renderTransform.a / f.__bitmapScale,
                        t = f.__renderTransform.d / f.__bitmapScale,
                        n = r * l.a,
                        q = t * l.d;
                      l = Math.max(1, Math.round(h.x * r));
                      f = Math.round(h.y * t);
                      z = Math.max(
                        1,
                        Math.round((x.get_right() - h.get_right()) * r),
                      );
                      var E = Math.round((x.get_bottom() - h.get_bottom()) * t);
                      r = Math.round(h.width * r);
                      h = Math.round(h.height * t);
                      t = Math.round(l / p);
                      var C = Math.round(f / p),
                        m = Math.round(z / p);
                      p = Math.round(E / p);
                      n = x.width * n - t - m;
                      x = x.height * q - C - p;
                      b.applySmoothing(y, !1);
                      0 != r && 0 != h
                        ? (y.drawImage(d, 0, 0, l, f, 0, 0, t, C),
                          y.drawImage(d, l, 0, r, f, t, 0, n, C),
                          y.drawImage(d, l + r, 0, z, f, t + n, 0, m, C),
                          y.drawImage(d, 0, f, l, h, 0, C, t, x),
                          y.drawImage(d, l, f, r, h, t, C, n, x),
                          y.drawImage(d, l + r, f, z, h, t + n, C, m, x),
                          y.drawImage(d, 0, f + h, l, E, 0, C + x, t, p),
                          y.drawImage(d, l, f + h, r, E, t, C + x, n, p),
                          y.drawImage(
                            d,
                            l + r,
                            f + h,
                            z,
                            E,
                            t + n,
                            C + x,
                            m,
                            p,
                          ))
                        : 0 == r && 0 != h
                          ? ((k = t + n + m),
                            y.drawImage(d, 0, 0, g, f, 0, 0, k, C),
                            y.drawImage(d, 0, f, g, h, 0, C, k, x),
                            y.drawImage(d, 0, f + h, g, E, 0, C + x, k, p))
                          : 0 == h &&
                            0 != r &&
                            ((g = C + x + p),
                            y.drawImage(d, 0, 0, l, k, 0, 0, t, g),
                            y.drawImage(d, l, 0, r, k, t, 0, n, g),
                            y.drawImage(d, l + r, 0, z, k, t + n, 0, m, g));
                    } else (b.setTransform(l, y), y.drawImage(d, 0, 0, g, k));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            0 != a.__group.__tiles.length &&
            ((x = b.__getAlpha(a.__worldAlpha)),
            0 >= x ||
              ((y = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a),
              (d = ja.__pool.get()),
              d.setTo(0, 0, a.__width, a.__height),
              b.__pushMaskRect(d, a.__renderTransform),
              (b.__allowSmoothing && a.smoothing) ||
                (y.imageSmoothingEnabled = !1),
              Ge.renderTileContainer(
                a.__group,
                b,
                a.__renderTransform,
                a.__tileset,
                b.__allowSmoothing && a.smoothing,
                a.tileAlphaEnabled,
                x,
                a.tileBlendModeEnabled,
                a.__worldBlendMode,
                null,
                null,
                d,
              ),
              (b.__allowSmoothing && a.smoothing) ||
                (y.imageSmoothingEnabled = !0),
              b.__popMaskRect(),
              b.__popMaskObject(a),
              ja.__pool.release(d)));
        } else if (((d = a.__cacheBitmap), d.__renderable)) {
          var x = b.__getAlpha(d.__worldAlpha);
          if (
            0 < x &&
            null != d.__bitmapData &&
            d.__bitmapData.__isValid &&
            d.__bitmapData.readable
          ) {
            var y = b.context;
            b.__setBlendMode(d.__worldBlendMode);
            b.__pushMaskObject(d, !1);
            Ha.convertToCanvas(d.__bitmapData.image);
            y.globalAlpha = x;
            var z = d.__scrollRect;
            b.setTransform(d.__renderTransform, y);
            (b.__allowSmoothing && d.smoothing) ||
              (y.imageSmoothingEnabled = !1);
            null == z
              ? y.drawImage(
                  d.__bitmapData.image.get_src(),
                  0,
                  0,
                  d.__bitmapData.image.width,
                  d.__bitmapData.image.height,
                )
              : y.drawImage(
                  d.__bitmapData.image.get_src(),
                  z.x,
                  z.y,
                  z.width,
                  z.height,
                  z.x,
                  z.y,
                  z.width,
                  z.height,
                );
            (b.__allowSmoothing && d.smoothing) ||
              (y.imageSmoothingEnabled = !0);
            b.__popMaskObject(d, !1);
          }
        }
        b.__renderEvent(a);
      };
      Ge.renderDrawableMask = function (a, b) {};
      var Bf = function () {};
      h['openfl.display._internal.CanvasVideo'] = Bf;
      Bf.__name__ = 'openfl.display._internal.CanvasVideo';
      Bf.render = function (a, b) {
        if (a.__renderable && null != a.__stream) {
          var d = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= d)) {
            var f = b.context;
            if (null != a.__stream.__video) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              f.globalAlpha = d;
              d = a.__scrollRect;
              var g = a.smoothing;
              b.setTransform(a.__worldTransform, f);
              g || (f.imageSmoothingEnabled = !1);
              null == d
                ? f.drawImage(
                    a.__stream.__video,
                    0,
                    0,
                    a.get_width(),
                    a.get_height(),
                  )
                : f.drawImage(
                    a.__stream.__video,
                    d.x,
                    d.y,
                    d.width,
                    d.height,
                    d.x,
                    d.y,
                    d.width,
                    d.height,
                  );
              g || (f.imageSmoothingEnabled = !0);
              b.__popMaskObject(a);
            }
          }
        }
      };
      Bf.renderDrawable = function (a, b) {
        Bf.render(a, b);
        b.__renderEvent(a);
      };
      Bf.renderDrawableMask = function (a, b) {};
      var Fd = function () {};
      h['openfl.display._internal.Context3DBitmap'] = Fd;
      Fd.__name__ = 'openfl.display._internal.Context3DBitmap';
      Fd.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid
        ) {
          var d = b.__context3D;
          b.__setBlendMode(a.__worldBlendMode);
          b.__pushMaskObject(a);
          var f = b.__initDisplayShader(a.__worldShader);
          b.setShader(f);
          b.applyBitmapData(
            a.__bitmapData,
            b.__allowSmoothing && (a.smoothing || b.__upscaled),
          );
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var g = a.__bitmapData.getVertexBuffer(d);
          null != f.__position &&
            d.setVertexBufferAt(f.__position.index, g, 0, 3);
          null != f.__textureCoord &&
            d.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
          f = a.__bitmapData.getIndexBuffer(d);
          d.drawTriangles(f);
          b.__clearShader();
          b.__popMaskObject(a);
        }
      };
      Fd.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var d = b.__context3D,
                f = ja.__pool.get();
              f.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(f, a.__renderTransform);
              var g = a.opaqueBackground;
              d.clear(
                ((g >>> 16) & 255) / 255,
                ((g >>> 8) & 255) / 255,
                (g & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              ja.__pool.release(f);
            }
            null != a.__graphics && ne.render(a, b);
          }
          Fd.render(a, b);
        } else Fd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      Fd.renderDrawableMask = function (a, b) {
        Fd.renderMask(a, b);
      };
      Fd.renderMask = function (a, b) {
        if (null != a.__bitmapData && a.__bitmapData.__isValid) {
          var d = b.__context3D,
            f = b.__maskShader;
          b.setShader(f);
          b.applyBitmapData(Df.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.updateShader();
          var g = a.__bitmapData.getVertexBuffer(d);
          null != f.__position &&
            d.setVertexBufferAt(f.__position.index, g, 0, 3);
          null != f.__textureCoord &&
            d.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
          a = a.__bitmapData.getIndexBuffer(d);
          d.drawTriangles(a);
          b.__clearShader();
        }
      };
      var oj = function () {};
      h['openfl.display._internal.Context3DBitmapData'] = oj;
      oj.__name__ = 'openfl.display._internal.Context3DBitmapData';
      oj.renderDrawable = function (a, b) {
        var d = b.__context3D;
        b.__setBlendMode(10);
        var f = b.__defaultDisplayShader;
        b.setShader(f);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.applyAlpha(a.__worldAlpha);
        b.applyColorTransform(a.__worldColorTransform);
        b.updateShader();
        var g = a.getVertexBuffer(d);
        null != f.__position &&
          d.setVertexBufferAt(f.__position.index, g, 0, 3);
        null != f.__textureCoord &&
          d.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
        a = a.getIndexBuffer(d);
        d.drawTriangles(a);
        b.__clearShader();
      };
      oj.renderDrawableMask = function (a, b) {
        var d = b.__context3D,
          f = b.__maskShader;
        b.setShader(f);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.updateShader();
        var g = a.getVertexBuffer(d);
        null != f.__position &&
          d.setVertexBufferAt(f.__position.index, g, 0, 3);
        null != f.__textureCoord &&
          d.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
        a = a.getIndexBuffer(d);
        d.drawTriangles(a);
        b.__clearShader();
      };
      var ah = function (a, b, d, f) {
        this.context3D = a;
        this.elementType = b;
        this.dataPerVertex = f;
        this.vertexCount = this.indexCount = 0;
        this.resize(d);
      };
      h['openfl.display._internal.Context3DBuffer'] = ah;
      ah.__name__ = 'openfl.display._internal.Context3DBuffer';
      ah.prototype = {
        flushVertexBufferData: function () {
          this.vertexBufferData.length > this.vertexCount &&
            ((this.vertexCount = this.vertexBufferData.length),
            (this.vertexBuffer = this.context3D.createVertexBuffer(
              this.vertexCount,
              this.dataPerVertex,
              0,
            )));
          this.vertexBuffer.uploadFromTypedArray(
            Tg.toArrayBufferView(this.vertexBufferData),
          );
        },
        resize: function (a, b) {
          null == b && (b = -1);
          this.elementCount = a;
          -1 == b && (b = this.dataPerVertex);
          b != this.dataPerVertex &&
            ((this.vertexBuffer = null),
            (this.vertexCount = 0),
            (this.dataPerVertex = b));
          var d = 0;
          switch (this.elementType._hx_index) {
            case 0:
              d = 4 * a;
              break;
            case 1:
              d = 3 * a;
              break;
            case 2:
              d = 3 * a;
          }
          b *= d;
          if (null == this.vertexBufferData) {
            var f = (d = null),
              g = null,
              k = null,
              l = null;
            this.vertexBufferData = b =
              null != b
                ? new Float32Array(b)
                : null != d
                  ? new Float32Array(d)
                  : null != f
                    ? new Float32Array(f.__array)
                    : null != g
                      ? new Float32Array(g)
                      : null != k
                        ? null == l
                          ? new Float32Array(k, 0)
                          : new Float32Array(k, 0, l)
                        : null;
          } else
            b > this.vertexBufferData.length &&
              ((a = this.vertexBufferData),
              (l = k = g = f = d = null),
              (this.vertexBufferData = b =
                null != b
                  ? new Float32Array(b)
                  : null != d
                    ? new Float32Array(d)
                    : null != f
                      ? new Float32Array(f.__array)
                      : null != g
                        ? new Float32Array(g)
                        : null != k
                          ? null == l
                            ? new Float32Array(k, 0)
                            : new Float32Array(k, 0, l)
                          : null),
              this.vertexBufferData.set(a));
        },
        __class__: ah,
      };
      var vj = (K['openfl.display._internal.Context3DElementType'] = {
        __ename__: 'openfl.display._internal.Context3DElementType',
        __constructs__: null,
        QUADS: {
          _hx_name: 'QUADS',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: q,
        },
        TRIANGLES: {
          _hx_name: 'TRIANGLES',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: q,
        },
        TRIANGLE_INDICES: {
          _hx_name: 'TRIANGLE_INDICES',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: q,
        },
      });
      vj.__constructs__ = [vj.QUADS, vj.TRIANGLES, vj.TRIANGLE_INDICES];
      var Ef = function () {};
      h['openfl.display._internal.Context3DDisplayObject'] = Ef;
      Ef.__name__ = 'openfl.display._internal.Context3DDisplayObject';
      Ef.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          Fd.render(a.__cacheBitmap, b);
        else if (
          !(
            (null == a.opaqueBackground && null == a.__graphics) ||
            !a.__renderable ||
            0 >= a.__worldAlpha
          )
        ) {
          if (
            null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            0 < a.get_height()
          ) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var d = b.__context3D,
              f = ja.__pool.get();
            f.setTo(0, 0, a.get_width(), a.get_height());
            b.__pushMaskRect(f, a.__renderTransform);
            var g = a.opaqueBackground;
            d.clear(
              ((g >>> 16) & 255) / 255,
              ((g >>> 8) & 255) / 255,
              (g & 255) / 255,
              1,
              0,
              0,
              1,
            );
            b.__popMaskRect();
            b.__popMaskObject(a);
            ja.__pool.release(f);
          }
          null != a.__graphics && ne.render(a, b);
        }
        b.__renderEvent(a);
      };
      Ef.renderDrawableMask = function (a, b) {
        null != a.__graphics && ne.renderMask(a, b);
      };
      var pj = function () {};
      h['openfl.display._internal.Context3DDisplayObjectContainer'] = pj;
      pj.__name__ = 'openfl.display._internal.Context3DDisplayObjectContainer';
      pj.renderDrawable = function (a, b) {
        for (var d = a.__removedChildren.iterator(); d.hasNext(); ) {
          var f = d.next();
          null == f.stage && f.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          (Ef.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          if (0 < a.__children.length)
            if ((b.__pushMaskObject(a), null != b.__stage)) {
              d = 0;
              for (f = a.__children; d < f.length; ) {
                var g = f[d];
                ++d;
                b.__renderDrawable(g);
                g.__renderDirty = !1;
              }
              a.__renderDirty = !1;
            } else
              for (d = 0, f = a.__children; d < f.length; )
                ((g = f[d]), ++d, b.__renderDrawable(g));
          0 < a.__children.length && b.__popMaskObject(a);
        }
      };
      pj.renderDrawableMask = function (a, b) {
        for (var d = a.__removedChildren.iterator(); d.hasNext(); ) {
          var f = d.next();
          null == f.stage && f.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && ne.renderMask(a, b);
        d = 0;
        for (a = a.__children; d < a.length; )
          ((f = a[d]), ++d, b.__renderDrawableMask(f));
      };
      var Kb = function () {};
      h['openfl.display._internal.Context3DGraphics'] = Kb;
      Kb.__name__ = 'openfl.display._internal.Context3DGraphics';
      Kb.maskRender = null;
      Kb.buildBuffer = function (a, b) {
        var d,
          f = (d = 0),
          g = 0,
          k = new fe(a.__commands);
        b = b.__context3D;
        for (
          var l = ja.__pool.get(),
            h = qa.__pool.get(),
            p = null,
            r = 0,
            t = a.__commands.types;
          r < t.length;

        ) {
          var n = t[r];
          ++r;
          switch (n._hx_index) {
            case 0:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = fa.BEGIN_BITMAP_FILL;
              p = k;
              p = p.buffer.o[p.oPos];
              break;
            case 1:
              p = null;
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = n;
              break;
            case 3:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = fa.BEGIN_SHADER_FILL;
              p = k;
              n = p.buffer.o[p.oPos];
              p = null;
              if (null != n)
                for (var q = 0, E = n.inputCount; q < E; ) {
                  var C = q++;
                  if ('bitmap' == n.inputRefs[C].name) {
                    p = n.inputs[C];
                    break;
                  }
                }
              break;
            case 8:
              if (null != p) {
                switch (k.prev._hx_index) {
                  case 0:
                    k.oPos += 2;
                    k.bPos += 2;
                    break;
                  case 1:
                    k.iPos += 1;
                    k.fPos += 1;
                    break;
                  case 2:
                    k.oPos += 4;
                    k.iiPos += 2;
                    k.ffPos += 1;
                    k.fPos += 1;
                    break;
                  case 3:
                    k.oPos += 1;
                    break;
                  case 4:
                    k.fPos += 6;
                    break;
                  case 5:
                    k.fPos += 4;
                    break;
                  case 6:
                    k.fPos += 3;
                    break;
                  case 7:
                    k.fPos += 4;
                    break;
                  case 8:
                    k.oPos += 3;
                    break;
                  case 9:
                    k.fPos += 4;
                    break;
                  case 10:
                    k.fPos += 5;
                    k.oPos += 1;
                    break;
                  case 12:
                    k.oPos += 4;
                    break;
                  case 14:
                    k.oPos += 2;
                    k.bPos += 2;
                    break;
                  case 15:
                    k.oPos += 4;
                    k.iiPos += 2;
                    k.ffPos += 1;
                    k.fPos += 1;
                    break;
                  case 16:
                    k.oPos += 4;
                    k.iPos += 1;
                    k.fPos += 2;
                    k.bPos += 1;
                    break;
                  case 17:
                    k.fPos += 2;
                    break;
                  case 18:
                    k.fPos += 2;
                    break;
                  case 19:
                    k.oPos += 1;
                    break;
                  case 20:
                    k.oPos += 1;
                }
                k.prev = fa.DRAW_QUADS;
                E = k;
                n = E.buffer.o[E.oPos];
                q = E.buffer.o[E.oPos + 1];
                E = E.buffer.o[E.oPos + 2];
                C = null != q;
                var x = !1,
                  m = !1,
                  y = C ? q.get_length() : Math.floor(n.get_length() / 4);
                if (0 == y) return;
                null != E &&
                  (E.get_length() >= 6 * y
                    ? (m = x = !0)
                    : E.get_length() >= 4 * y
                      ? (x = !0)
                      : E.get_length() >= 2 * y && (m = !0));
                null == a.__quadBuffer
                  ? (a.__quadBuffer = new ah(b, vj.QUADS, y, 4))
                  : a.__quadBuffer.resize(d + y, 4);
                for (
                  var z,
                    P,
                    B,
                    K,
                    v,
                    w,
                    F,
                    J,
                    I,
                    G,
                    S,
                    Oa,
                    L,
                    rb,
                    W = a.__quadBuffer.vertexBufferData,
                    kb = p.width,
                    pa = p.height,
                    ca = 0,
                    D = y;
                  ca < D;

                )
                  ((K = ca++),
                    (z = 16 * (d + K)),
                    (P = C ? 4 * q.get(K) : 4 * K),
                    0 > P ||
                      (l.setTo(
                        n.get(P),
                        n.get(P + 1),
                        n.get(P + 2),
                        n.get(P + 3),
                      ),
                      (P = l.width),
                      (B = l.height),
                      0 >= P ||
                        0 >= B ||
                        (x && m
                          ? ((K *= 6),
                            h.setTo(
                              E.get(K),
                              E.get(K + 1),
                              E.get(K + 2),
                              E.get(K + 3),
                              E.get(K + 4),
                              E.get(K + 5),
                            ))
                          : x
                            ? ((K *= 4),
                              h.setTo(
                                E.get(K),
                                E.get(K + 1),
                                E.get(K + 2),
                                E.get(K + 3),
                                l.x,
                                l.y,
                              ))
                            : m
                              ? ((K *= 2),
                                (h.tx = E.get(K)),
                                (h.ty = E.get(K + 1)))
                              : ((h.tx = l.x), (h.ty = l.y)),
                        (K = l.x / kb),
                        (v = l.y / pa),
                        (w = l.get_right() / kb),
                        (F = l.get_bottom() / pa),
                        (J = 0 * h.a + 0 * h.c + h.tx),
                        (I = 0 * h.b + 0 * h.d + h.ty),
                        (G = P * h.a + 0 * h.c + h.tx),
                        (S = P * h.b + 0 * h.d + h.ty),
                        (Oa = 0 * h.a + B * h.c + h.tx),
                        (L = 0 * h.b + B * h.d + h.ty),
                        (rb = P * h.a + B * h.c + h.tx),
                        (P = P * h.b + B * h.d + h.ty),
                        (W[z] = J),
                        (W[z + 1] = I),
                        (W[z + 2] = K),
                        (W[z + 3] = v),
                        (W[z + 4] = G),
                        (W[z + 4 + 1] = S),
                        (W[z + 4 + 2] = w),
                        (W[z + 4 + 3] = v),
                        (W[z + 8] = Oa),
                        (W[z + 8 + 1] = L),
                        (W[z + 8 + 2] = K),
                        (W[z + 8 + 3] = F),
                        (W[z + 12] = rb),
                        (W[z + 12 + 1] = P),
                        (W[z + 12 + 2] = w),
                        (W[z + 12 + 3] = F))));
                d += y;
              }
              break;
            case 12:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = fa.DRAW_TRIANGLES;
              E = k;
              n = E.buffer.o[E.oPos];
              q = E.buffer.o[E.oPos + 1];
              E = E.buffer.o[E.oPos + 2];
              C = null != q;
              y = Math.floor(n.get_length() / 2);
              x = C ? q.get_length() : y;
              z = (y = (m = null != E) && E.get_length() >= 3 * y) ? 4 : 2;
              W = y ? 3 : 2;
              kb = z + 2;
              pa = y ? g : f;
              Kb.resizeVertexBuffer(a, y, pa + x * kb);
              ca = y ? a.__vertexBufferDataUVT : a.__vertexBufferData;
              B = 0;
              for (K = x; B < K; )
                ((v = B++),
                  (D = pa + v * kb),
                  (P = C ? 2 * q.get(v) : 2 * v),
                  (v = C ? q.get(v) * W : v * W),
                  y
                    ? ((w = E.get(v + 2)),
                      (ca[D] = n.get(P) / w),
                      (ca[D + 1] = n.get(P + 1) / w),
                      (ca[D + 2] = 0),
                      (ca[D + 3] = 1 / w))
                    : ((ca[D] = n.get(P)), (ca[D + 1] = n.get(P + 1))),
                  (ca[D + z] = m ? E.get(v) : 0),
                  (ca[D + z + 1] = m ? E.get(v + 1) : 0));
              y ? (g += x * kb) : (f += x * kb);
              break;
            case 13:
              p = null;
              break;
            default:
              switch (k.prev._hx_index) {
                case 0:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 1:
                  k.iPos += 1;
                  k.fPos += 1;
                  break;
                case 2:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 3:
                  k.oPos += 1;
                  break;
                case 4:
                  k.fPos += 6;
                  break;
                case 5:
                  k.fPos += 4;
                  break;
                case 6:
                  k.fPos += 3;
                  break;
                case 7:
                  k.fPos += 4;
                  break;
                case 8:
                  k.oPos += 3;
                  break;
                case 9:
                  k.fPos += 4;
                  break;
                case 10:
                  k.fPos += 5;
                  k.oPos += 1;
                  break;
                case 12:
                  k.oPos += 4;
                  break;
                case 14:
                  k.oPos += 2;
                  k.bPos += 2;
                  break;
                case 15:
                  k.oPos += 4;
                  k.iiPos += 2;
                  k.ffPos += 1;
                  k.fPos += 1;
                  break;
                case 16:
                  k.oPos += 4;
                  k.iPos += 1;
                  k.fPos += 2;
                  k.bPos += 1;
                  break;
                case 17:
                  k.fPos += 2;
                  break;
                case 18:
                  k.fPos += 2;
                  break;
                case 19:
                  k.oPos += 1;
                  break;
                case 20:
                  k.oPos += 1;
              }
              k.prev = n;
          }
        }
        0 < d && a.__quadBuffer.flushVertexBufferData();
        if (0 < f) {
          d = a.__vertexBuffer;
          if (null == d || f > a.__vertexBufferCount)
            ((d = b.createVertexBuffer(f, 4, 0)),
              (a.__vertexBuffer = d),
              (a.__vertexBufferCount = f));
          d.uploadFromTypedArray(Tg.toArrayBufferView(a.__vertexBufferData));
        }
        if (0 < g) {
          d = a.__vertexBufferUVT;
          if (null == d || g > a.__vertexBufferCountUVT)
            ((d = b.createVertexBuffer(g, 6, 0)),
              (a.__vertexBufferUVT = d),
              (a.__vertexBufferCountUVT = g));
          d.uploadFromTypedArray(Tg.toArrayBufferView(a.__vertexBufferDataUVT));
        }
        ja.__pool.release(l);
        qa.__pool.release(h);
      };
      Kb.isCompatible = function (a) {
        if (null != a.__owner.__worldScale9Grid) return !1;
        var b = new fe(a.__commands),
          d = !1,
          f = !1,
          g = !1,
          k = 0;
        for (a = a.__commands.types; k < a.length; ) {
          var l = a[k];
          ++k;
          switch (l._hx_index) {
            case 0:
              f = !0;
              g = d = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = l;
              break;
            case 1:
              f = !1;
              d = !0;
              g = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = l;
              break;
            case 3:
              d = f = !1;
              g = !0;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = l;
              break;
            case 8:
              if (f || g) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = l;
              } else return (b.destroy(), !1);
              break;
            case 9:
              if (d) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = l;
              } else return (b.destroy(), !1);
              break;
            case 12:
              if (f || g) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = l;
              } else return (b.destroy(), !1);
              break;
            case 13:
              g = d = f = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = l;
              break;
            case 18:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = l;
              break;
            case 19:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = l;
              break;
            default:
              return (b.destroy(), !1);
          }
        }
        b.destroy();
        return !0;
      };
      Kb.render = function (a, b) {
        if (a.__visible && 0 != a.__commands.get_length())
          if ((null != a.__bitmap && !a.__dirty) || !Kb.isCompatible(a)) {
            b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
            var d = b.__softwareRenderer.__worldTransform;
            b.__softwareRenderer.__worldTransform =
              7 == a.__owner.__drawableType
                ? qa.__identity
                : b.__worldTransform;
            B.render(a, b.__softwareRenderer);
            b.__softwareRenderer.__worldTransform = d;
          } else {
            a.__bitmap = null;
            a.__update(b.__worldTransform, b.__pixelRatio);
            var f = a.__width,
              g = a.__height;
            if (null != a.__bounds && 1 <= f && 1 <= g) {
              (a.__hardwareDirty ||
                (null == a.__quadBuffer &&
                  null == a.__vertexBuffer &&
                  null == a.__vertexBufferUVT)) &&
                Kb.buildBuffer(a, b);
              d = new fe(a.__commands);
              for (
                var k = b.__context3D,
                  l = qa.__pool.get(),
                  h = null,
                  p = null,
                  r = !1,
                  t = !1,
                  n = null,
                  q = 0,
                  E = 0,
                  C = 0,
                  x = 0,
                  m = 0,
                  y = a.__commands.types;
                m < y.length;

              )
                switch (((f = y[m]), ++m, f._hx_index)) {
                  case 0:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = fa.BEGIN_BITMAP_FILL;
                    t = d;
                    p = t.buffer.o[t.oPos];
                    r = t.buffer.b[t.bPos];
                    t = t.buffer.b[t.bPos + 1];
                    n = h = null;
                    break;
                  case 1:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = fa.BEGIN_FILL;
                    p = d;
                    n =
                      ((p.buffer.i[p.iPos] | 0) & 16777215) |
                      (((255 * p.buffer.f[p.fPos]) | 0) << 24);
                    p = h = null;
                    break;
                  case 3:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = fa.BEGIN_SHADER_FILL;
                    E = d;
                    h = E.buffer.o[E.oPos];
                    E = 0;
                    p =
                      null == h || null == h.shader || null == h.shader.__bitmap
                        ? null
                        : h.shader.__bitmap.input;
                    n = null;
                    break;
                  case 8:
                    if (null != p) {
                      switch (d.prev._hx_index) {
                        case 0:
                          d.oPos += 2;
                          d.bPos += 2;
                          break;
                        case 1:
                          d.iPos += 1;
                          d.fPos += 1;
                          break;
                        case 2:
                          d.oPos += 4;
                          d.iiPos += 2;
                          d.ffPos += 1;
                          d.fPos += 1;
                          break;
                        case 3:
                          d.oPos += 1;
                          break;
                        case 4:
                          d.fPos += 6;
                          break;
                        case 5:
                          d.fPos += 4;
                          break;
                        case 6:
                          d.fPos += 3;
                          break;
                        case 7:
                          d.fPos += 4;
                          break;
                        case 8:
                          d.oPos += 3;
                          break;
                        case 9:
                          d.fPos += 4;
                          break;
                        case 10:
                          d.fPos += 5;
                          d.oPos += 1;
                          break;
                        case 12:
                          d.oPos += 4;
                          break;
                        case 14:
                          d.oPos += 2;
                          d.bPos += 2;
                          break;
                        case 15:
                          d.oPos += 4;
                          d.iiPos += 2;
                          d.ffPos += 1;
                          d.fPos += 1;
                          break;
                        case 16:
                          d.oPos += 4;
                          d.iPos += 1;
                          d.fPos += 2;
                          d.bPos += 1;
                          break;
                        case 17:
                          d.fPos += 2;
                          break;
                        case 18:
                          d.fPos += 2;
                          break;
                        case 19:
                          d.oPos += 1;
                          break;
                        case 20:
                          d.oPos += 1;
                      }
                      d.prev = fa.DRAW_QUADS;
                      var z = d;
                      f = z.buffer.o[z.oPos];
                      z = z.buffer.o[z.oPos + 1];
                      f =
                        null != z
                          ? z.get_length()
                          : Math.floor(f.get_length() / 4);
                      var P = b.__getMatrix(a.__owner.__renderTransform, 1);
                      null == h || Kb.maskRender
                        ? ((z = Kb.maskRender
                            ? b.__maskShader
                            : b.__initGraphicsShader(null)),
                          b.setShader(z),
                          b.applyMatrix(P),
                          b.applyBitmapData(p, t, r),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ),
                          b.updateShader())
                        : ((z = b.__initShaderBuffer(h)),
                          b.__setShaderBuffer(h),
                          b.applyMatrix(P),
                          b.applyBitmapData(p, !1, r),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ));
                      for (P = q + f; q < P; ) {
                        f = Math.min(P - q, k.__quadIndexBufferElements) | 0;
                        if (0 >= f) break;
                        null == h || Kb.maskRender || b.__updateShaderBuffer(E);
                        null != z.__position &&
                          k.setVertexBufferAt(
                            z.__position.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * q,
                            2,
                          );
                        null != z.__textureCoord &&
                          k.setVertexBufferAt(
                            z.__textureCoord.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * q + 2,
                            2,
                          );
                        k.drawTriangles(k.__quadIndexBuffer, 0, 2 * f);
                        E += 4 * f;
                        q += f;
                      }
                      b.__clearShader();
                    }
                    break;
                  case 9:
                    if (null != n) {
                      switch (d.prev._hx_index) {
                        case 0:
                          d.oPos += 2;
                          d.bPos += 2;
                          break;
                        case 1:
                          d.iPos += 1;
                          d.fPos += 1;
                          break;
                        case 2:
                          d.oPos += 4;
                          d.iiPos += 2;
                          d.ffPos += 1;
                          d.fPos += 1;
                          break;
                        case 3:
                          d.oPos += 1;
                          break;
                        case 4:
                          d.fPos += 6;
                          break;
                        case 5:
                          d.fPos += 4;
                          break;
                        case 6:
                          d.fPos += 3;
                          break;
                        case 7:
                          d.fPos += 4;
                          break;
                        case 8:
                          d.oPos += 3;
                          break;
                        case 9:
                          d.fPos += 4;
                          break;
                        case 10:
                          d.fPos += 5;
                          d.oPos += 1;
                          break;
                        case 12:
                          d.oPos += 4;
                          break;
                        case 14:
                          d.oPos += 2;
                          d.bPos += 2;
                          break;
                        case 15:
                          d.oPos += 4;
                          d.iiPos += 2;
                          d.ffPos += 1;
                          d.fPos += 1;
                          break;
                        case 16:
                          d.oPos += 4;
                          d.iPos += 1;
                          d.fPos += 2;
                          d.bPos += 1;
                          break;
                        case 17:
                          d.fPos += 2;
                          break;
                        case 18:
                          d.fPos += 2;
                          break;
                        case 19:
                          d.oPos += 1;
                          break;
                        case 20:
                          d.oPos += 1;
                      }
                      d.prev = fa.DRAW_RECT;
                      var K = d;
                      z = K.buffer.f[K.fPos];
                      P = K.buffer.f[K.fPos + 1];
                      f = K.buffer.f[K.fPos + 2];
                      g = K.buffer.f[K.fPos + 3];
                      K = n;
                      Kb.tempColorTransform.redOffset = (K >>> 16) & 255;
                      Kb.tempColorTransform.greenOffset = (K >>> 8) & 255;
                      Kb.tempColorTransform.blueOffset = K & 255;
                      Kb.tempColorTransform.__combine(
                        a.__owner.__worldColorTransform,
                      );
                      l.identity();
                      l.scale(f, g);
                      l.tx = z;
                      l.ty = P;
                      l.concat(a.__owner.__renderTransform);
                      f = Kb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(f);
                      b.applyMatrix(b.__getMatrix(l, 1));
                      b.applyBitmapData(Kb.blankBitmapData, !0, r);
                      b.applyAlpha(
                        (((K >>> 24) & 255) / 255) * a.__owner.__worldAlpha,
                      );
                      b.applyColorTransform(Kb.tempColorTransform);
                      b.updateShader();
                      z = Kb.blankBitmapData.getVertexBuffer(k);
                      null != f.__position &&
                        k.setVertexBufferAt(f.__position.index, z, 0, 3);
                      null != f.__textureCoord &&
                        k.setVertexBufferAt(f.__textureCoord.index, z, 3, 2);
                      f = Kb.blankBitmapData.getIndexBuffer(k);
                      k.drawTriangles(f);
                      E += 4;
                      b.__clearShader();
                    }
                    break;
                  case 12:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = fa.DRAW_TRIANGLES;
                    g = d;
                    z = g.buffer.o[g.oPos + 1];
                    P = g.buffer.o[g.oPos + 2];
                    f = g.buffer.o[g.oPos + 3];
                    K = null != z;
                    g = Math.floor(g.buffer.o[g.oPos].get_length() / 2);
                    z = K ? z.get_length() : g;
                    K = (P = null != P && P.get_length() >= 3 * g) ? 4 : 2;
                    g = K + 2;
                    var v = P ? a.__vertexBufferUVT : a.__vertexBuffer,
                      w = P ? x : C,
                      F = b.__getMatrix(a.__owner.__renderTransform, 1);
                    if (null == h || Kb.maskRender) {
                      var J = Kb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(J);
                      b.applyMatrix(F);
                      b.applyBitmapData(p, t, r);
                      b.applyAlpha(a.__owner.__worldAlpha);
                      b.applyColorTransform(a.__owner.__worldColorTransform);
                      b.updateShader();
                    } else
                      ((J = b.__initShaderBuffer(h)),
                        b.__setShaderBuffer(h),
                        b.applyMatrix(F),
                        b.applyBitmapData(p, !1, r),
                        b.applyAlpha(1),
                        b.applyColorTransform(null),
                        b.__updateShaderBuffer(E));
                    null != J.__position &&
                      k.setVertexBufferAt(J.__position.index, v, w, P ? 4 : 2);
                    null != J.__textureCoord &&
                      k.setVertexBufferAt(J.__textureCoord.index, v, w + K, 2);
                    switch (f) {
                      case 0:
                        k.setCulling(0);
                        break;
                      case 1:
                        k.setCulling(3);
                        break;
                      case 2:
                        k.setCulling(1);
                    }
                    k.__drawTriangles(0, z);
                    E += z;
                    P ? (x += g * z) : (C += g * z);
                    switch (f) {
                      case 1:
                      case 2:
                        k.setCulling(0);
                    }
                    b.__clearShader();
                    break;
                  case 13:
                    h = n = p = null;
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = f;
                    k.setCulling(3);
                    break;
                  case 18:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = fa.MOVE_TO;
                    break;
                  case 19:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = fa.OVERRIDE_BLEND_MODE;
                    f = d;
                    b.__setBlendMode(f.buffer.o[f.oPos]);
                    break;
                  default:
                    switch (d.prev._hx_index) {
                      case 0:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 1:
                        d.iPos += 1;
                        d.fPos += 1;
                        break;
                      case 2:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 3:
                        d.oPos += 1;
                        break;
                      case 4:
                        d.fPos += 6;
                        break;
                      case 5:
                        d.fPos += 4;
                        break;
                      case 6:
                        d.fPos += 3;
                        break;
                      case 7:
                        d.fPos += 4;
                        break;
                      case 8:
                        d.oPos += 3;
                        break;
                      case 9:
                        d.fPos += 4;
                        break;
                      case 10:
                        d.fPos += 5;
                        d.oPos += 1;
                        break;
                      case 12:
                        d.oPos += 4;
                        break;
                      case 14:
                        d.oPos += 2;
                        d.bPos += 2;
                        break;
                      case 15:
                        d.oPos += 4;
                        d.iiPos += 2;
                        d.ffPos += 1;
                        d.fPos += 1;
                        break;
                      case 16:
                        d.oPos += 4;
                        d.iPos += 1;
                        d.fPos += 2;
                        d.bPos += 1;
                        break;
                      case 17:
                        d.fPos += 2;
                        break;
                      case 18:
                        d.fPos += 2;
                        break;
                      case 19:
                        d.oPos += 1;
                        break;
                      case 20:
                        d.oPos += 1;
                    }
                    d.prev = f;
                }
              qa.__pool.release(l);
            }
            a.__hardwareDirty = !1;
            a.set___dirty(!1);
          }
      };
      Kb.renderMask = function (a, b) {
        Kb.maskRender = !0;
        Kb.render(a, b);
        Kb.maskRender = !1;
      };
      Kb.resizeVertexBuffer = function (a, b, d) {
        var f = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
          g = null;
        if (null == f) {
          var k = (g = null),
            l = null,
            h = null,
            p = null;
          g = d =
            null != d
              ? new Float32Array(d)
              : null != g
                ? new Float32Array(g)
                : null != k
                  ? new Float32Array(k.__array)
                  : null != l
                    ? new Float32Array(l)
                    : null != h
                      ? null == p
                        ? new Float32Array(h, 0)
                        : new Float32Array(h, 0, p)
                      : null;
        } else
          d > f.length &&
            ((p = h = l = k = g = null),
            (g = d =
              null != d
                ? new Float32Array(d)
                : null != g
                  ? new Float32Array(g)
                  : null != k
                    ? new Float32Array(k.__array)
                    : null != l
                      ? new Float32Array(l)
                      : null != h
                        ? null == p
                          ? new Float32Array(h, 0)
                          : new Float32Array(h, 0, p)
                        : null),
            g.set(f));
        null != g &&
          (b ? (a.__vertexBufferDataUVT = g) : (a.__vertexBufferData = g));
      };
      var Df = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        rd.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.display._internal.Context3DMaskShader'] = Df;
      Df.__name__ = 'openfl.display._internal.Context3DMaskShader';
      Df.__super__ = rd;
      Df.prototype = w(rd.prototype, { __class__: Df });
      var ne = function () {};
      h['openfl.display._internal.Context3DShape'] = ne;
      ne.__name__ = 'openfl.display._internal.Context3DShape';
      ne.render = function (a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha)) {
          var d = a.__graphics;
          if (null != d) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            Kb.render(d, b);
            if (null != d.__bitmap && d.__visible) {
              var f = b.__context3D,
                g = b.__initDisplayShader(a.__worldShader);
              b.setShader(g);
              b.applyBitmapData(d.__bitmap, !0);
              var k = qa.__pool.get();
              k.scale(1 / d.__bitmapScale, 1 / d.__bitmapScale);
              k.concat(d.__worldTransform);
              b.applyMatrix(b.__getMatrix(k, 1));
              qa.__pool.release(k);
              b.applyAlpha(a.__worldAlpha);
              b.applyColorTransform(a.__worldColorTransform);
              b.updateShader();
              k = d.__bitmap.getVertexBuffer(f);
              null != g.__position &&
                f.setVertexBufferAt(g.__position.index, k, 0, 3);
              null != g.__textureCoord &&
                f.setVertexBufferAt(g.__textureCoord.index, k, 3, 2);
              d = d.__bitmap.getIndexBuffer(f);
              f.drawTriangles(d);
              b.__clearShader();
            }
            b.__popMaskObject(a);
          }
        }
      };
      ne.renderMask = function (a, b) {
        var d = a.__graphics;
        if (null != d && (Kb.renderMask(d, b), null != d.__bitmap)) {
          a = b.__context3D;
          var f = b.__maskShader;
          b.setShader(f);
          b.applyBitmapData(d.__bitmap, !0);
          b.applyMatrix(b.__getMatrix(d.__worldTransform, 1));
          b.updateShader();
          var g = d.__bitmap.getVertexBuffer(a);
          null != f.__position &&
            a.setVertexBufferAt(f.__position.index, g, 0, 3);
          null != f.__textureCoord &&
            a.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
          d = d.__bitmap.getIndexBuffer(a);
          a.drawTriangles(d);
          b.__clearShader();
        }
      };
      var qj = function () {};
      h['openfl.display._internal.Context3DSimpleButton'] = qj;
      qj.__name__ = 'openfl.display._internal.Context3DSimpleButton';
      qj.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      qj.renderDrawableMask = function (a, b) {
        null != a.__currentState && b.__renderDrawableMask(a.__currentState);
      };
      var Ie = function () {};
      h['openfl.display._internal.Context3DTextField'] = Ie;
      Ie.__name__ = 'openfl.display._internal.Context3DTextField';
      Ie.render = function (a, b) {
        b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
        var d = b.__softwareRenderer;
        b = a.__textEngine;
        var f = !(b.background || b.border),
          g = f ? b.textBounds : b.bounds,
          k = a.__graphics,
          l = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == k.__bounds && (k.__bounds = new ja());
          if (0 == a.get_text().length) {
            l = b.bounds.width - 4;
            var h = a.get_defaultTextFormat().align;
            l = 3 == h ? 0 : 4 == h ? l : l / 2;
            switch (h) {
              case 0:
                l += a.get_defaultTextFormat().leftMargin / 2;
                l -= a.get_defaultTextFormat().rightMargin / 2;
                l += a.get_defaultTextFormat().indent / 2;
                l += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                l += a.get_defaultTextFormat().leftMargin;
                l += a.get_defaultTextFormat().indent;
                l += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                l += a.get_defaultTextFormat().leftMargin;
                l += a.get_defaultTextFormat().indent;
                l += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                l -= a.get_defaultTextFormat().rightMargin;
            }
            f && ((g.y = b.bounds.y), (g.x = l));
          }
          k.__bounds.copyFrom(g);
        }
        h = d.__pixelRatio;
        k.__update(d.__worldTransform, h);
        if (a.__dirty || k.__softwareDirty) {
          var p = Math.round(k.__width * h),
            r = Math.round(k.__height * h);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            X.context = k.__context;
            k.__canvas.width = p;
            k.__canvas.height = r;
            d.__isDOM &&
              ((k.__canvas.style.width = Math.round(p / h) + 'px'),
              (k.__canvas.style.height = Math.round(r / h) + 'px'));
            p = qa.__pool.get();
            p.scale(h, h);
            p.concat(k.__renderTransform);
            X.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            qa.__pool.release(p);
            null == X.clearRect &&
              (X.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            X.clearRect &&
              X.context.clearRect(0, 0, k.__canvas.width, k.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              f = b.text;
              k.__context.imageSmoothingEnabled =
                !d.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                X.context.rect(0.5, 0.5, g.width - 1, g.height - 1);
                if (b.background) {
                  var t = R.hex(b.backgroundColor & 16777215, 6);
                  X.context.fillStyle = '#' + t;
                  X.context.fill();
                }
                b.border &&
                  ((X.context.lineWidth = 1),
                  (t = R.hex(b.borderColor & 16777215, 6)),
                  (X.context.strokeStyle = '#' + t),
                  X.context.stroke());
              }
              X.context.textBaseline = 'alphabetic';
              X.context.textAlign = 'start';
              d = -a.get_scrollH();
              var n = (l = 0);
              for (t = a.get_scrollV() - 1; n < t; ) {
                var q = n++;
                l -= b.lineHeights.get(q);
              }
              var E;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((r = p.next()), !(r.lineIndex < a.get_scrollV() - 1))) {
                  if (r.lineIndex > b.get_bottomScrollV() - 1) break;
                  var C = '#' + R.hex(r.format.color & 16777215, 6);
                  X.context.font = Db.getFont(r.format);
                  X.context.fillStyle = C;
                  X.context.fillText(
                    f.substring(r.startIndex, r.endIndex),
                    r.offsetX + d - g.x,
                    r.offsetY + r.ascent + l - g.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        r.startIndex <= a.__caretIndex &&
                        r.endIndex >= a.__caretIndex
                      ) {
                        n = E = 0;
                        for (t = a.__caretIndex - r.startIndex; n < t; ) {
                          q = n++;
                          if (r.positions.length <= q) break;
                          E += r.positions[q];
                        }
                        n = 0;
                        t = a.get_scrollV();
                        for (q = r.lineIndex + 1; t < q; ) {
                          var x = t++;
                          n += b.lineHeights.get(x - 1);
                        }
                        X.context.beginPath();
                        t = R.hex(r.format.color & 16777215, 6);
                        X.context.strokeStyle = '#' + t;
                        X.context.moveTo(
                          r.offsetX + E - a.get_scrollH() - g.x,
                          n + 2 - g.y,
                        );
                        X.context.lineWidth = 1;
                        X.context.lineTo(
                          r.offsetX + E - a.get_scrollH() - g.x,
                          n +
                            Db.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            g.y,
                        );
                        X.context.stroke();
                        X.context.closePath();
                      }
                    } else if (
                      (r.startIndex <= a.__caretIndex &&
                        r.endIndex >= a.__caretIndex) ||
                      (r.startIndex <= a.__selectionIndex &&
                        r.endIndex >= a.__selectionIndex) ||
                      (r.startIndex > a.__caretIndex &&
                        r.endIndex < a.__selectionIndex) ||
                      (r.startIndex > a.__selectionIndex &&
                        r.endIndex < a.__caretIndex)
                    )
                      ((E = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (n = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        r.startIndex > E && (E = r.startIndex),
                        r.endIndex < n && (n = r.endIndex),
                        (q = a.getCharBoundaries(E)),
                        n >= r.endIndex
                          ? ((t = a.getCharBoundaries(r.endIndex - 1)),
                            null != t && (t.x += t.width + 2))
                          : (t = a.getCharBoundaries(n)),
                        null != q &&
                          null != t &&
                          ((X.context.fillStyle = '#000000'),
                          X.context.fillRect(
                            q.x + d - g.x,
                            q.y + l,
                            t.x - q.x,
                            r.height,
                          ),
                          (X.context.fillStyle = '#FFFFFF'),
                          X.context.fillText(
                            f.substring(E, n),
                            d + q.x - g.x,
                            r.offsetY + r.ascent + l,
                          )));
                  r.format.underline &&
                    (X.context.beginPath(),
                    (X.context.strokeStyle = C),
                    (X.context.lineWidth = 1),
                    (C = r.offsetX + d - g.x),
                    (E =
                      Math.ceil(r.offsetY + l + r.ascent - g.y) +
                      Math.floor(0.185 * r.ascent) +
                      0.5),
                    X.context.moveTo(C, E),
                    X.context.lineTo(C + r.width, E),
                    X.context.stroke(),
                    X.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? X.context.rect(0.5, 0.5, g.width - 1, g.height - 1)
                  : X.context.rect(0, 0, g.width, g.height),
                  b.background &&
                    ((t = R.hex(b.backgroundColor & 16777215, 6)),
                    (X.context.fillStyle = '#' + t),
                    X.context.fill()),
                  b.border &&
                    ((X.context.lineWidth = 1),
                    (X.context.lineCap = 'square'),
                    (t = R.hex(b.borderColor & 16777215, 6)),
                    (X.context.strokeStyle = '#' + t),
                    X.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                d = -a.get_scrollH() + (f ? 0 : l);
                n = l = 0;
                for (t = a.get_scrollV() - 1; n < t; )
                  ((q = n++), (l += b.lineHeights.get(q)));
                X.context.beginPath();
                t = R.hex(a.get_defaultTextFormat().color & 16777215, 6);
                X.context.strokeStyle = '#' + t;
                X.context.moveTo(d + 2.5, l + 2.5);
                X.context.lineWidth = 1;
                X.context.lineTo(
                  d + 2.5,
                  l + Db.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                X.context.stroke();
                X.context.closePath();
              }
            }
            k.__bitmap = Tb.fromCanvas(a.__graphics.__canvas);
            k.__bitmapScale = h;
            k.__visible = !0;
            a.__dirty = !1;
            k.__softwareDirty = !1;
            k.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      Ie.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            (Ie.render(a, b),
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            ))
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var d = b.__context3D,
                f = ja.__pool.get();
              f.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(f, a.__renderTransform);
              var g = a.opaqueBackground;
              d.clear(
                ((g >>> 16) & 255) / 255,
                ((g >>> 8) & 255) / 255,
                (g & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              ja.__pool.release(f);
            }
            null != a.__graphics && ne.render(a, b);
          }
        } else Fd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      Ie.renderDrawableMask = function (a, b) {
        Ie.renderMask(a, b);
        Ef.renderDrawableMask(a, b);
      };
      Ie.renderMask = function (a, b) {
        var d = b.__softwareRenderer;
        b = a.__textEngine;
        var f = !(b.background || b.border),
          g = f ? b.textBounds : b.bounds,
          k = a.__graphics,
          l = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == k.__bounds && (k.__bounds = new ja());
          if (0 == a.get_text().length) {
            l = b.bounds.width - 4;
            var h = a.get_defaultTextFormat().align;
            l = 3 == h ? 0 : 4 == h ? l : l / 2;
            switch (h) {
              case 0:
                l += a.get_defaultTextFormat().leftMargin / 2;
                l -= a.get_defaultTextFormat().rightMargin / 2;
                l += a.get_defaultTextFormat().indent / 2;
                l += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                l += a.get_defaultTextFormat().leftMargin;
                l += a.get_defaultTextFormat().indent;
                l += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                l += a.get_defaultTextFormat().leftMargin;
                l += a.get_defaultTextFormat().indent;
                l += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                l -= a.get_defaultTextFormat().rightMargin;
            }
            f && ((g.y = b.bounds.y), (g.x = l));
          }
          k.__bounds.copyFrom(g);
        }
        h = d.__pixelRatio;
        k.__update(d.__worldTransform, h);
        if (a.__dirty || k.__softwareDirty) {
          var p = Math.round(k.__width * h),
            r = Math.round(k.__height * h);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            X.context = k.__context;
            k.__canvas.width = p;
            k.__canvas.height = r;
            d.__isDOM &&
              ((k.__canvas.style.width = Math.round(p / h) + 'px'),
              (k.__canvas.style.height = Math.round(r / h) + 'px'));
            p = qa.__pool.get();
            p.scale(h, h);
            p.concat(k.__renderTransform);
            X.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            qa.__pool.release(p);
            null == X.clearRect &&
              (X.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            X.clearRect &&
              X.context.clearRect(0, 0, k.__canvas.width, k.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              f = b.text;
              k.__context.imageSmoothingEnabled =
                !d.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                X.context.rect(0.5, 0.5, g.width - 1, g.height - 1);
                if (b.background) {
                  var t = R.hex(b.backgroundColor & 16777215, 6);
                  X.context.fillStyle = '#' + t;
                  X.context.fill();
                }
                b.border &&
                  ((X.context.lineWidth = 1),
                  (t = R.hex(b.borderColor & 16777215, 6)),
                  (X.context.strokeStyle = '#' + t),
                  X.context.stroke());
              }
              X.context.textBaseline = 'alphabetic';
              X.context.textAlign = 'start';
              d = -a.get_scrollH();
              var n = (l = 0);
              for (t = a.get_scrollV() - 1; n < t; ) {
                var q = n++;
                l -= b.lineHeights.get(q);
              }
              var E;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((r = p.next()), !(r.lineIndex < a.get_scrollV() - 1))) {
                  if (r.lineIndex > b.get_bottomScrollV() - 1) break;
                  var C = '#' + R.hex(r.format.color & 16777215, 6);
                  X.context.font = Db.getFont(r.format);
                  X.context.fillStyle = C;
                  X.context.fillText(
                    f.substring(r.startIndex, r.endIndex),
                    r.offsetX + d - g.x,
                    r.offsetY + r.ascent + l - g.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        r.startIndex <= a.__caretIndex &&
                        r.endIndex >= a.__caretIndex
                      ) {
                        n = E = 0;
                        for (t = a.__caretIndex - r.startIndex; n < t; ) {
                          q = n++;
                          if (r.positions.length <= q) break;
                          E += r.positions[q];
                        }
                        n = 0;
                        t = a.get_scrollV();
                        for (q = r.lineIndex + 1; t < q; ) {
                          var x = t++;
                          n += b.lineHeights.get(x - 1);
                        }
                        X.context.beginPath();
                        t = R.hex(r.format.color & 16777215, 6);
                        X.context.strokeStyle = '#' + t;
                        X.context.moveTo(
                          r.offsetX + E - a.get_scrollH() - g.x,
                          n + 2 - g.y,
                        );
                        X.context.lineWidth = 1;
                        X.context.lineTo(
                          r.offsetX + E - a.get_scrollH() - g.x,
                          n +
                            Db.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            g.y,
                        );
                        X.context.stroke();
                        X.context.closePath();
                      }
                    } else if (
                      (r.startIndex <= a.__caretIndex &&
                        r.endIndex >= a.__caretIndex) ||
                      (r.startIndex <= a.__selectionIndex &&
                        r.endIndex >= a.__selectionIndex) ||
                      (r.startIndex > a.__caretIndex &&
                        r.endIndex < a.__selectionIndex) ||
                      (r.startIndex > a.__selectionIndex &&
                        r.endIndex < a.__caretIndex)
                    )
                      ((E = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (n = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        r.startIndex > E && (E = r.startIndex),
                        r.endIndex < n && (n = r.endIndex),
                        (q = a.getCharBoundaries(E)),
                        n >= r.endIndex
                          ? ((t = a.getCharBoundaries(r.endIndex - 1)),
                            null != t && (t.x += t.width + 2))
                          : (t = a.getCharBoundaries(n)),
                        null != q &&
                          null != t &&
                          ((X.context.fillStyle = '#000000'),
                          X.context.fillRect(
                            q.x + d - g.x,
                            q.y + l,
                            t.x - q.x,
                            r.height,
                          ),
                          (X.context.fillStyle = '#FFFFFF'),
                          X.context.fillText(
                            f.substring(E, n),
                            d + q.x - g.x,
                            r.offsetY + r.ascent + l,
                          )));
                  r.format.underline &&
                    (X.context.beginPath(),
                    (X.context.strokeStyle = C),
                    (X.context.lineWidth = 1),
                    (C = r.offsetX + d - g.x),
                    (E =
                      Math.ceil(r.offsetY + l + r.ascent - g.y) +
                      Math.floor(0.185 * r.ascent) +
                      0.5),
                    X.context.moveTo(C, E),
                    X.context.lineTo(C + r.width, E),
                    X.context.stroke(),
                    X.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? X.context.rect(0.5, 0.5, g.width - 1, g.height - 1)
                  : X.context.rect(0, 0, g.width, g.height),
                  b.background &&
                    ((t = R.hex(b.backgroundColor & 16777215, 6)),
                    (X.context.fillStyle = '#' + t),
                    X.context.fill()),
                  b.border &&
                    ((X.context.lineWidth = 1),
                    (X.context.lineCap = 'square'),
                    (t = R.hex(b.borderColor & 16777215, 6)),
                    (X.context.strokeStyle = '#' + t),
                    X.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                d = -a.get_scrollH() + (f ? 0 : l);
                n = l = 0;
                for (t = a.get_scrollV() - 1; n < t; )
                  ((q = n++), (l += b.lineHeights.get(q)));
                X.context.beginPath();
                t = R.hex(a.get_defaultTextFormat().color & 16777215, 6);
                X.context.strokeStyle = '#' + t;
                X.context.moveTo(d + 2.5, l + 2.5);
                X.context.lineWidth = 1;
                X.context.lineTo(
                  d + 2.5,
                  l + Db.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                X.context.stroke();
                X.context.closePath();
              }
            }
            k.__bitmap = Tb.fromCanvas(a.__graphics.__canvas);
            k.__bitmapScale = h;
            k.__visible = !0;
            a.__dirty = !1;
            k.__softwareDirty = !1;
            k.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      var V = function () {};
      h['openfl.display._internal.Context3DTilemap'] = V;
      V.__name__ = 'openfl.display._internal.Context3DTilemap';
      V.cacheColorTransform = null;
      V.context = null;
      V.dataPerVertex = null;
      V.currentBitmapData = null;
      V.currentBlendMode = null;
      V.currentShader = null;
      V.bufferPosition = null;
      V.lastFlushedPosition = null;
      V.lastUsedBitmapData = null;
      V.lastUsedShader = null;
      V.numTiles = null;
      V.vertexBufferData = null;
      V.vertexDataPosition = null;
      V.buildBuffer = function (a, b) {
        if (
          !a.__renderable ||
          0 == a.__group.__tiles.length ||
          0 >= a.__worldAlpha
        )
          a.__group.__dirty = !1;
        else {
          V.numTiles = 0;
          V.vertexBufferData =
            null != a.__buffer ? a.__buffer.vertexBufferData : null;
          V.vertexDataPosition = 0;
          var d = ja.__pool.get(),
            f = qa.__pool.get(),
            g = qa.__pool.get();
          V.dataPerVertex = 4;
          a.tileAlphaEnabled && V.dataPerVertex++;
          a.tileColorTransformEnabled && (V.dataPerVertex += 8);
          V.buildBufferTileContainer(
            a,
            a.__group,
            b,
            g,
            a.__tileset,
            a.tileAlphaEnabled,
            a.__worldAlpha,
            a.tileColorTransformEnabled,
            a.__worldColorTransform,
            null,
            d,
            f,
          );
          a.__buffer.flushVertexBufferData();
          ja.__pool.release(d);
          qa.__pool.release(f);
          qa.__pool.release(g);
        }
      };
      V.buildBufferTileContainer = function (
        a,
        b,
        d,
        f,
        g,
        k,
        l,
        h,
        p,
        r,
        t,
        n,
        q,
      ) {
        null == q && (q = !0);
        var u = qa.__pool.get(),
          E = d.__roundPixels,
          C = b.__tiles;
        q && V.resizeBuffer(a, V.numTiles + V.getRecursiveLength(b));
        q = null;
        for (
          var x, m, y, z, P, B, K, v, w, F, J, I = k ? 5 : 4, G = 0;
          G < C.length;

        ) {
          z = C[G];
          ++G;
          u.setTo(1, 0, 0, 1, -z.get_originX(), -z.get_originY());
          u.concat(z.get_matrix());
          u.concat(f);
          E && ((u.tx = Math.round(u.tx)), (u.ty = Math.round(u.ty)));
          var S = null != z.get_tileset() ? z.get_tileset() : g;
          var Oa = z.get_alpha() * l;
          var L = z.get_visible();
          z.__dirty = !1;
          if (L && !(0 >= Oa))
            if (
              (h &&
                (null != z.get_colorTransform()
                  ? null == p
                    ? (q = z.get_colorTransform())
                    : (null == V.cacheColorTransform &&
                        (V.cacheColorTransform = new Ib()),
                      (q = V.cacheColorTransform),
                      (q.redMultiplier =
                        p.redMultiplier * z.get_colorTransform().redMultiplier),
                      (q.greenMultiplier =
                        p.greenMultiplier *
                        z.get_colorTransform().greenMultiplier),
                      (q.blueMultiplier =
                        p.blueMultiplier *
                        z.get_colorTransform().blueMultiplier),
                      (q.alphaMultiplier =
                        p.alphaMultiplier *
                        z.get_colorTransform().alphaMultiplier),
                      (q.redOffset =
                        p.redOffset + z.get_colorTransform().redOffset),
                      (q.greenOffset =
                        p.greenOffset + z.get_colorTransform().greenOffset),
                      (q.blueOffset =
                        p.blueOffset + z.get_colorTransform().blueOffset),
                      (q.alphaOffset =
                        p.alphaOffset + z.get_colorTransform().alphaOffset))
                  : (q = p)),
              k || (Oa = 1),
              0 < z.__length)
            )
              V.buildBufferTileContainer(
                a,
                z,
                d,
                u,
                S,
                k,
                Oa,
                h,
                q,
                r,
                t,
                n,
                !1,
              );
            else if (
              null != S &&
              ((L = z.get_id()), (x = S.__bitmapData), null != x)
            ) {
              if (-1 == L) {
                m = z.__rect;
                if (null == m || 0 >= m.width || 0 >= m.height) continue;
                S = m.x / x.width;
                z = m.y / x.height;
                L = m.get_right() / x.width;
                P = m.get_bottom() / x.height;
              } else {
                x = S.__data[L];
                if (null == x) continue;
                t.setTo(x.x, x.y, x.width, x.height);
                m = t;
                S = x.__uvX;
                z = x.__uvY;
                L = x.__uvWidth;
                P = x.__uvHeight;
              }
              x = m.width;
              y = m.height;
              m = 0 * u.a + 0 * u.c + u.tx;
              B = 0 * u.b + 0 * u.d + u.ty;
              K = x * u.a + 0 * u.c + u.tx;
              v = x * u.b + 0 * u.d + u.ty;
              w = 0 * u.a + y * u.c + u.tx;
              F = 0 * u.b + y * u.d + u.ty;
              J = x * u.a + y * u.c + u.tx;
              y = x * u.b + y * u.d + u.ty;
              x = V.vertexDataPosition;
              V.vertexBufferData[x] = m;
              V.vertexBufferData[x + 1] = B;
              V.vertexBufferData[x + 2] = S;
              V.vertexBufferData[x + 3] = z;
              V.vertexBufferData[x + V.dataPerVertex] = K;
              V.vertexBufferData[x + V.dataPerVertex + 1] = v;
              V.vertexBufferData[x + V.dataPerVertex + 2] = L;
              V.vertexBufferData[x + V.dataPerVertex + 3] = z;
              V.vertexBufferData[x + 2 * V.dataPerVertex] = w;
              V.vertexBufferData[x + 2 * V.dataPerVertex + 1] = F;
              V.vertexBufferData[x + 2 * V.dataPerVertex + 2] = S;
              V.vertexBufferData[x + 2 * V.dataPerVertex + 3] = P;
              V.vertexBufferData[x + 3 * V.dataPerVertex] = J;
              V.vertexBufferData[x + 3 * V.dataPerVertex + 1] = y;
              V.vertexBufferData[x + 3 * V.dataPerVertex + 2] = L;
              V.vertexBufferData[x + 3 * V.dataPerVertex + 3] = P;
              k &&
                ((V.vertexBufferData[x + 0 * V.dataPerVertex + 4] = Oa),
                (V.vertexBufferData[x + V.dataPerVertex + 4] = Oa),
                (V.vertexBufferData[x + 2 * V.dataPerVertex + 4] = Oa),
                (V.vertexBufferData[x + 3 * V.dataPerVertex + 4] = Oa));
              if (h)
                if (null != q)
                  for (Oa = 0; 4 > Oa; )
                    ((S = Oa++),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I] =
                        q.redMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 1] =
                        q.greenMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 2] =
                        q.blueMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 3] =
                        q.alphaMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 4] =
                        q.redOffset),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 5] =
                        q.greenOffset),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 6] =
                        q.blueOffset),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 7] =
                        q.alphaOffset));
                else
                  for (Oa = 0; 4 > Oa; )
                    ((S = Oa++),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 1] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 2] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 3] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 4] = 0),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 5] = 0),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 6] = 0),
                      (V.vertexBufferData[x + V.dataPerVertex * S + I + 7] =
                        0));
              V.vertexDataPosition += 4 * V.dataPerVertex;
            }
        }
        b.__dirty = !1;
        qa.__pool.release(u);
      };
      V.flush = function (a, b, d) {
        null == V.currentShader && (V.currentShader = b.__defaultDisplayShader);
        if (
          V.bufferPosition > V.lastFlushedPosition &&
          null != V.currentBitmapData &&
          null != V.currentShader
        ) {
          var f = b.__initDisplayShader(V.currentShader);
          b.setShader(f);
          b.applyBitmapData(V.currentBitmapData, a.smoothing);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          a.tileAlphaEnabled ? b.useAlphaArray() : b.applyAlpha(a.__worldAlpha);
          a.tileBlendModeEnabled && b.__setBlendMode(d);
          a.tileColorTransformEnabled
            ? (b.applyHasColorTransform(!0), b.useColorTransformArray())
            : b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          d = a.__buffer.vertexBuffer;
          for (
            var g = V.lastFlushedPosition * V.dataPerVertex * 4, k;
            V.lastFlushedPosition < V.bufferPosition;

          ) {
            k =
              Math.min(
                V.bufferPosition - V.lastFlushedPosition,
                V.context.__quadIndexBufferElements,
              ) | 0;
            if (0 >= k) break;
            null != f.__position &&
              V.context.setVertexBufferAt(f.__position.index, d, g, 2);
            null != f.__textureCoord &&
              V.context.setVertexBufferAt(f.__textureCoord.index, d, g + 2, 2);
            a.tileAlphaEnabled &&
              null != f.__alpha &&
              V.context.setVertexBufferAt(f.__alpha.index, d, g + 4, 1);
            if (a.tileColorTransformEnabled) {
              var l = a.tileAlphaEnabled ? 5 : 4;
              null != f.__colorMultiplier &&
                V.context.setVertexBufferAt(
                  f.__colorMultiplier.index,
                  d,
                  g + l,
                  4,
                );
              null != f.__colorOffset &&
                V.context.setVertexBufferAt(
                  f.__colorOffset.index,
                  d,
                  g + l + 4,
                  4,
                );
            }
            V.context.drawTriangles(V.context.__quadIndexBuffer, 0, 2 * k);
            V.lastFlushedPosition += k;
          }
          b.__clearShader();
        }
        V.lastUsedBitmapData = V.currentBitmapData;
        V.lastUsedShader = V.currentShader;
      };
      V.getRecursiveLength = function (a) {
        a = a.__tiles;
        for (var b = 0, d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          0 < f.__length ? (b += V.getRecursiveLength(f)) : ++b;
        }
        return b;
      };
      V.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          ((V.context = b.__context3D), V.buildBuffer(a, b), 0 != V.numTiles)
        ) {
          V.bufferPosition = 0;
          V.lastFlushedPosition = 0;
          V.lastUsedBitmapData = null;
          V.lastUsedShader = null;
          V.currentBitmapData = null;
          V.currentShader = null;
          V.currentBlendMode = a.__worldBlendMode;
          a.tileBlendModeEnabled || b.__setBlendMode(V.currentBlendMode);
          b.__pushMaskObject(a);
          var d = ja.__pool.get();
          d.setTo(0, 0, a.__width, a.__height);
          b.__pushMaskRect(d, a.__renderTransform);
          V.renderTileContainer(
            a,
            b,
            a.__group,
            a.__worldShader,
            a.__tileset,
            a.__worldAlpha,
            a.tileBlendModeEnabled,
            V.currentBlendMode,
            null,
          );
          V.flush(a, b, V.currentBlendMode);
          b.__popMaskRect();
          b.__popMaskObject(a);
          ja.__pool.release(d);
        }
      };
      V.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var d = b.__context3D,
                f = ja.__pool.get();
              f.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(f, a.__renderTransform);
              var g = a.opaqueBackground;
              d.clear(
                ((g >>> 16) & 255) / 255,
                ((g >>> 8) & 255) / 255,
                (g & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              ja.__pool.release(f);
            }
            null != a.__graphics && ne.render(a, b);
          }
          V.render(a, b);
        } else Fd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      V.renderDrawableMask = function (a, b) {
        if (null != a.opaqueBackground || null != a.__graphics)
          (null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height(),
            null != a.__graphics && ne.renderMask(a, b));
        V.renderMask(a, b);
      };
      V.renderTileContainer = function (a, b, d, f, g, k, l, h, p) {
        d = d.__tiles;
        for (var r, u, n, t = null, q, E = 0; E < d.length; ) {
          var x = d[E];
          ++E;
          r = null != x.get_tileset() ? x.get_tileset() : g;
          u = x.get_alpha() * k;
          if ((n = x.get_visible()) && !(0 >= u))
            if (
              ((n = null != x.get_shader() ? x.get_shader() : f),
              l && (t = null != x.__blendMode ? x.__blendMode : h),
              0 < x.__length)
            )
              V.renderTileContainer(a, b, x, n, r, u, l, t, p);
            else if (
              null != r &&
              ((q = x.get_id()), (u = r.__bitmapData), null != u)
            ) {
              if (-1 == q) {
                if (
                  ((r = x.__rect), null == r || 0 >= r.width || 0 >= r.height)
                )
                  continue;
              } else if (((r = r.__data[q]), null == r)) continue;
              (n != V.currentShader ||
                (u != V.currentBitmapData && null != V.currentBitmapData) ||
                V.currentBlendMode != t) &&
                V.flush(a, b, V.currentBlendMode);
              V.currentBitmapData = u;
              V.currentShader = n;
              V.currentBlendMode = t;
              V.bufferPosition++;
            }
        }
      };
      V.renderMask = function (a, b) {};
      V.resizeBuffer = function (a, b) {
        V.numTiles = b;
        null == a.__buffer
          ? (a.__buffer = new ah(
              V.context,
              vj.QUADS,
              V.numTiles,
              V.dataPerVertex,
            ))
          : a.__buffer.resize(V.numTiles, V.dataPerVertex);
        V.vertexBufferData = a.__buffer.vertexBufferData;
      };
      var Gd = function () {};
      h['openfl.display._internal.Context3DVideo'] = Gd;
      Gd.__name__ = 'openfl.display._internal.Context3DVideo';
      Gd.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__stream &&
          null != a.__stream.__video
        ) {
          var d = b.__context3D,
            f = d.gl;
          if (null != a.__getTexture(d)) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var g = b.__initDisplayShader(a.__worldShader);
            b.setShader(g);
            b.applyBitmapData(null, !0, !1);
            b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
            b.applyAlpha(a.__worldAlpha);
            b.applyColorTransform(a.__worldColorTransform);
            null != g.__textureSize &&
              ((Gd.__textureSizeValue[0] =
                null != a.__stream ? a.__stream.__video.videoWidth : 0),
              (Gd.__textureSizeValue[1] =
                null != a.__stream ? a.__stream.__video.videoHeight : 0),
              (g.__textureSize.value = Gd.__textureSizeValue));
            b.updateShader();
            d.setTextureAt(0, a.__getTexture(d));
            d.__flushGLTextures();
            f.uniform1i(g.__texture.index, 0);
            a.smoothing
              ? (f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.LINEAR),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.LINEAR))
              : (f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST));
            f = a.__getVertexBuffer(d);
            null != g.__position &&
              d.setVertexBufferAt(g.__position.index, f, 0, 3);
            null != g.__textureCoord &&
              d.setVertexBufferAt(g.__textureCoord.index, f, 3, 2);
            g = a.__getIndexBuffer(d);
            d.drawTriangles(g);
            b.__clearShader();
            b.__popMaskObject(a);
          }
        }
      };
      Gd.renderDrawable = function (a, b) {
        Gd.render(a, b);
        b.__renderEvent(a);
      };
      Gd.renderDrawableMask = function (a, b) {
        Gd.renderMask(a, b);
      };
      Gd.renderMask = function (a, b) {
        if (null != a.__stream && null != a.__stream.__video) {
          var d = b.__context3D,
            f = b.__maskShader;
          b.setShader(f);
          b.applyBitmapData(Df.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          b.updateShader();
          var g = a.__getVertexBuffer(d);
          null != f.__position &&
            d.setVertexBufferAt(f.__position.index, g, 0, 3);
          null != f.__textureCoord &&
            d.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
          a = a.__getIndexBuffer(d);
          d.drawTriangles(a);
          b.__clearShader();
        }
      };
      var Qb = function () {};
      h['openfl.display._internal.DOMBitmap'] = Qb;
      Qb.__name__ = 'openfl.display._internal.DOMBitmap';
      Qb.clear = function (a, b) {
        id.clear(a, b);
        null != a.__image &&
          (b.element.removeChild(a.__image),
          (a.__image = null),
          (a.__style = null));
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Qb.renderCanvas = function (a, b) {
        null != a.__image &&
          (b.element.removeChild(a.__image), (a.__image = null));
        null == a.__canvas &&
          ((a.__canvas = window.document.createElement('canvas')),
          (a.__context = a.__canvas.getContext('2d')),
          (a.__imageVersion = -1),
          (b.__allowSmoothing && a.smoothing) ||
            (a.__context.imageSmoothingEnabled = !1),
          b.__initializeElement(a, a.__canvas));
        a.__imageVersion != a.__bitmapData.image.version &&
          (Ha.convertToCanvas(a.__bitmapData.image),
          (a.__canvas.width = a.__bitmapData.width + 1),
          (a.__canvas.width = a.__bitmapData.width),
          (a.__canvas.height = a.__bitmapData.height),
          a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0),
          (a.__imageVersion = a.__bitmapData.image.version));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      Qb.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var d = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != d
          ) {
            B.render(d, b.__canvasRenderer);
            if (
              d.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != d.__canvas
            )
              null != d.__canvas
                ? a.__canvas != d.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = d.__canvas),
                  (a.__context = d.__context),
                  b.__initializeElement(a, a.__canvas))
                : bf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var f = a.__renderTransform;
              a.__renderTransform = d.__worldTransform;
              d.__transformDirty &&
                ((d.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = f;
              b.__popMaskObject(a);
            }
          } else bf.clear(a, b);
          null != a.stage &&
          a.__worldVisible &&
          a.__renderable &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid &&
          a.__bitmapData.readable
            ? (b.__pushMaskObject(a),
              null != a.__bitmapData.image.buffer.__srcImage
                ? ((f = a.__bitmapData.image.buffer.__srcImage.src),
                  R.startsWith(f, 'data:') || R.startsWith(f, 'blob:')
                    ? Qb.renderCanvas(a, b)
                    : Qb.renderImage(a, b))
                : Qb.renderCanvas(a, b),
              b.__popMaskObject(a))
            : Qb.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (d = a.__cacheBitmap),
            null != d.stage &&
            d.__worldVisible &&
            d.__renderable &&
            null != d.__bitmapData &&
            d.__bitmapData.__isValid &&
            d.__bitmapData.readable
              ? (b.__pushMaskObject(d),
                null != d.__bitmapData.image.buffer.__srcImage
                  ? ((f = d.__bitmapData.image.buffer.__srcImage.src),
                    R.startsWith(f, 'data:') || R.startsWith(f, 'blob:')
                      ? Qb.renderCanvas(d, b)
                      : Qb.renderImage(d, b))
                  : Qb.renderCanvas(d, b),
                b.__popMaskObject(d))
              : Qb.clear(d, b));
        b.__renderEvent(a);
      };
      Qb.renderDrawableClear = function (a, b) {
        Qb.clear(a, b);
      };
      Qb.renderImage = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas), (a.__canvas = null));
        null == a.__image &&
          ((a.__image = window.document.createElement('img')),
          (a.__image.crossOrigin = 'Anonymous'),
          (a.__image.src = a.__bitmapData.image.buffer.__srcImage.src),
          b.__initializeElement(a, a.__image));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      var id = function () {};
      h['openfl.display._internal.DOMDisplayObject'] = id;
      id.__name__ = 'openfl.display._internal.DOMDisplayObject';
      id.clear = function (a, b) {
        null != a.__cacheBitmap && Qb.clear(a.__cacheBitmap, b);
        bf.clear(a, b);
      };
      id.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var d = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != d
          ) {
            B.render(d, b.__canvasRenderer);
            if (
              d.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != d.__canvas
            )
              null != d.__canvas
                ? a.__canvas != d.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = d.__canvas),
                  (a.__context = d.__context),
                  b.__initializeElement(a, a.__canvas))
                : bf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var f = a.__renderTransform;
              a.__renderTransform = d.__worldTransform;
              d.__transformDirty &&
                ((d.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = f;
              b.__popMaskObject(a);
            }
          } else bf.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (d = a.__cacheBitmap),
            null != d.stage &&
            d.__worldVisible &&
            d.__renderable &&
            null != d.__bitmapData &&
            d.__bitmapData.__isValid &&
            d.__bitmapData.readable
              ? (b.__pushMaskObject(d),
                null != d.__bitmapData.image.buffer.__srcImage
                  ? ((f = d.__bitmapData.image.buffer.__srcImage.src),
                    R.startsWith(f, 'data:') || R.startsWith(f, 'blob:')
                      ? Qb.renderCanvas(d, b)
                      : Qb.renderImage(d, b))
                  : Qb.renderCanvas(d, b),
                b.__popMaskObject(d))
              : Qb.clear(d, b));
        b.__renderEvent(a);
      };
      id.renderDrawableClear = function (a, b) {
        id.clear(a, b);
      };
      var bj = function () {};
      h['openfl.display._internal.DOMDisplayObjectContainer'] = bj;
      bj.__name__ = 'openfl.display._internal.DOMDisplayObjectContainer';
      bj.renderDrawable = function (a, b) {
        for (var d = a.__removedChildren.iterator(); d.hasNext(); ) {
          var f = d.next();
          null == f.stage && b.__renderDrawable(f);
        }
        for (d = a.__removedChildren.iterator(); d.hasNext(); )
          ((f = d.next()), null == f.stage && f.__cleanup());
        a.__removedChildren.set_length(0);
        id.renderDrawable(a, b);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            d = 0;
            for (f = a.__children; d < f.length; )
              ((g = f[d]), ++d, b.__renderDrawable(g), (g.__renderDirty = !1));
            a.__renderDirty = !1;
          } else
            for (d = 0, f = a.__children; d < f.length; )
              ((g = f[d]), ++d, b.__renderDrawable(g));
          b.__popMaskObject(a);
        } else {
          d = 0;
          for (f = a.__children; d < f.length; ) {
            var g = f[d];
            ++d;
            b.__renderDrawableClear(g);
          }
          bf.clear(a, b);
          a.__cacheBitmap.stage = a.stage;
        }
      };
      bj.renderDrawableClear = function (a, b) {
        for (var d = a.__removedChildren.iterator(); d.hasNext(); ) {
          var f = d.next();
          null == f.stage && b.__renderDrawableClear(f);
        }
        for (d = a.__removedChildren.iterator(); d.hasNext(); )
          ((f = d.next()), null == f.stage && f.__cleanup());
        a.__removedChildren.set_length(0);
        d = 0;
        for (f = a.__children; d < f.length; ) {
          var g = f[d];
          ++d;
          b.__renderDrawableClear(g);
        }
        id.clear(a, b);
      };
      var bf = function () {};
      h['openfl.display._internal.DOMShape'] = bf;
      bf.__name__ = 'openfl.display._internal.DOMShape';
      bf.clear = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      var cj = function () {};
      h['openfl.display._internal.DOMSimpleButton'] = cj;
      cj.__name__ = 'openfl.display._internal.DOMSimpleButton';
      cj.renderDrawable = function (a, b) {
        b.__pushMaskObject(a);
        for (var d = a.__previousStates.iterator(); d.hasNext(); ) {
          var f = d.next();
          b.__renderDrawable(f);
        }
        a.__previousStates.set_length(0);
        null != a.__currentState &&
          (a.__currentState.stage != a.stage &&
            a.__currentState.__setStageReference(a.stage),
          b.__renderDrawable(a.__currentState));
        b.__popMaskObject(a);
        b.__renderEvent(a);
      };
      cj.renderDrawableClear = function (a, b) {
        id.renderDrawableClear(a, b);
      };
      var Ze = function () {};
      h['openfl.display._internal.DOMTextField'] = Ze;
      Ze.__name__ = 'openfl.display._internal.DOMTextField';
      Ze.clear = function (a, b) {
        id.clear(a, b);
        null != a.__div &&
          (b.element.removeChild(a.__div),
          (a.__div = null),
          (a.__style = null));
      };
      Ze.renderDrawable = function (a, b) {
        a.__domRender = !0;
        b.__updateCacheBitmap(a, a.__forceCachedBitmapUpdate);
        a.__forceCachedBitmapUpdate = !1;
        a.__domRender = !1;
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          a.__renderedOnCanvasWhileOnDOM &&
            ((a.__renderedOnCanvasWhileOnDOM = !1),
            a.__isHTML &&
              null != a.__htmlText &&
              (a.__updateText(a.__htmlText),
              (a.__dirty = !0),
              (a.__layoutDirty = !0),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty())));
          var d = a.__textEngine;
          if (null != a.stage && a.__worldVisible && a.__renderable) {
            if (a.__dirty || a.__renderTransformChanged || null == a.__div)
              if ('' != d.text || d.background || d.border || 1 == d.type) {
                a.__updateLayout();
                null == a.__div &&
                  ((a.__div = window.document.createElement('div')),
                  b.__initializeElement(a, a.__div),
                  a.__style.setProperty('outline', 'none', null),
                  a.__div.addEventListener(
                    'input',
                    function (b) {
                      b.preventDefault();
                      a.get_htmlText() != a.__div.innerHTML &&
                        (a.set_htmlText(a.__div.innerHTML),
                        (a.__dirty = !1),
                        a.dispatchEvent(
                          new me('textInput', !1, !1, a.get_htmlText()),
                        ));
                    },
                    !0,
                  ));
                d.wordWrap
                  ? a.__style.setProperty('word-wrap', 'break-word', null)
                  : a.__style.setProperty('white-space', 'nowrap', null);
                a.__style.setProperty('overflow', 'hidden', null);
                d.selectable
                  ? (a.__style.setProperty('cursor', 'text', null),
                    a.__style.setProperty('-webkit-user-select', 'text', null),
                    a.__style.setProperty('-moz-user-select', 'text', null),
                    a.__style.setProperty('-ms-user-select', 'text', null),
                    a.__style.setProperty('-o-user-select', 'text', null))
                  : a.__style.setProperty('cursor', 'inherit', null);
                a.__div.contentEditable = 1 == d.type;
                var f = a.__style;
                d.background
                  ? f.setProperty(
                      'background-color',
                      '#' + R.hex(d.backgroundColor & 16777215, 6),
                      null,
                    )
                  : f.removeProperty('background-color');
                var g = d.width,
                  k = d.height,
                  l = '';
                a.__isHTML &&
                  a.__updateText(
                    Ia.parse(
                      a.__text,
                      a.get_multiline(),
                      a.__styleSheet,
                      a.__textFormat,
                      a.__textEngine.textFormatRanges,
                    ),
                  );
                for (
                  var h = -a.get_scrollH(), p = d.layoutGroups.iterator();
                  p.hasNext();

                ) {
                  var r = p.next();
                  if (!(r.lineIndex < a.get_scrollV() - 1)) {
                    if (r.lineIndex > d.get_bottomScrollV() - 1) break;
                    l += '<div style="';
                    null != r.format.font &&
                      (l += 'font: ' + Db.getFont(r.format) + '; ');
                    null != r.format.color &&
                      (l +=
                        'color: #' +
                        R.hex(r.format.color & 16777215, 6) +
                        '; ');
                    1 == r.format.underline &&
                      (l += 'text-decoration: underline; ');
                    if (null != r.format.align)
                      switch (r.format.align) {
                        case 0:
                          l += 'text-align: center; ';
                          break;
                        case 2:
                          l += 'text-align: justify; ';
                          break;
                        case 4:
                          l += 'text-align: right; ';
                          break;
                        default:
                          l += 'text-align: left; ';
                      }
                    null != r.format.leftMargin &&
                      (l +=
                        'padding-left: ' + 1 * r.format.leftMargin + 'px; ');
                    null != r.format.rightMargin &&
                      (l +=
                        'padding-right: ' + 1 * r.format.rightMargin + 'px; ');
                    null != r.format.indent &&
                      (l += 'text-indent: ' + 1 * r.format.indent + 'px; ');
                    l +=
                      'left: ' +
                      (r.offsetX + h) +
                      'px; top: ' +
                      (r.offsetY + 0 + 3) +
                      'px; vertical-align: top; position: absolute;">';
                    if (null != r.format.url && '' != r.format.url) {
                      var t = 'text-decoration: underline; ';
                      null != r.format.color &&
                        (t +=
                          'color: #' +
                          R.hex(r.format.color & 16777215, 6) +
                          '; ');
                      l +=
                        "<a style='" +
                        t +
                        "' href='" +
                        r.format.url +
                        "' target='" +
                        r.format.target +
                        "'>";
                    }
                    l = a.__isHTML
                      ? l +
                        R.replace(
                          d.text.substring(r.startIndex, r.endIndex),
                          ' ',
                          '&nbsp;',
                        )
                      : l +
                        R.replace(
                          R.htmlEscape(
                            d.text.substring(r.startIndex, r.endIndex),
                          ),
                          ' ',
                          '&nbsp;',
                        );
                    null != r.format.url && '' != r.format.url && (l += '</a>');
                    l += '</div>';
                  }
                }
                d.border
                  ? (f.setProperty(
                      'border',
                      'solid 1px #' + R.hex(d.borderColor & 16777215, 6),
                      null,
                    ),
                    a.__renderTransform.translate(-1, -1),
                    (a.__renderTransformChanged = !0),
                    (a.__transformDirty = !0))
                  : '' != f.border &&
                    (f.removeProperty('border'),
                    (a.__renderTransformChanged = !0));
                f.setProperty('width', g + 'px', null);
                f.setProperty('height', k + 'px', null);
                a.__div.innerHTML = l;
                a.__dirty = !1;
              } else
                null != a.__div &&
                  (b.element.removeChild(a.__div), (a.__div = null));
            null != a.__div &&
              ((d = b.__roundPixels),
              (b.__roundPixels = !0),
              b.__updateClip(a),
              b.__applyStyle(a, !0, !0, !0),
              (b.__roundPixels = d));
          } else Ze.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (d = a.__cacheBitmap),
            null != d.stage &&
            d.__worldVisible &&
            d.__renderable &&
            null != d.__bitmapData &&
            d.__bitmapData.__isValid &&
            d.__bitmapData.readable
              ? (b.__pushMaskObject(d),
                null != d.__bitmapData.image.buffer.__srcImage
                  ? ((f = d.__bitmapData.image.buffer.__srcImage.src),
                    R.startsWith(f, 'data:') || R.startsWith(f, 'blob:')
                      ? Qb.renderCanvas(d, b)
                      : Qb.renderImage(d, b))
                  : Qb.renderCanvas(d, b),
                b.__popMaskObject(d))
              : Qb.clear(d, b));
        b.__renderEvent(a);
      };
      Ze.renderDrawableClear = function (a, b) {
        Ze.clear(a, b);
      };
      var $e = function () {};
      h['openfl.display._internal.DOMTilemap'] = $e;
      $e.__name__ = 'openfl.display._internal.DOMTilemap';
      $e.clear = function (a, b) {
        id.clear(a, b);
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      $e.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender)
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            0 < a.__group.__tiles.length
          ) {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')),
              b.__initializeElement(a, a.__canvas));
            a.__canvas.width = a.__width;
            a.__canvas.height = a.__height;
            b.__canvasRenderer.context = a.__context;
            var d = a.__renderTransform;
            a.__renderTransform = qa.__identity;
            var f = b.__canvasRenderer;
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable
            ) {
              var g = f.__getAlpha(a.__worldAlpha);
              if (!(0 >= g)) {
                if (
                  null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height()
                ) {
                  f.__setBlendMode(a.__worldBlendMode);
                  f.__pushMaskObject(a);
                  var k = f.context;
                  f.setTransform(a.__renderTransform, k);
                  var l = a.opaqueBackground;
                  k.fillStyle =
                    'rgb(' +
                    ((l >>> 16) & 255) +
                    ',' +
                    ((l >>> 8) & 255) +
                    ',' +
                    (l & 255) +
                    ')';
                  k.fillRect(0, 0, a.get_width(), a.get_height());
                  f.__popMaskObject(a);
                }
                if (
                  null != a.__graphics &&
                  a.__renderable &&
                  ((g = f.__getAlpha(a.__worldAlpha)), !(0 >= g))
                ) {
                  var h = a.__graphics;
                  if (null != h) {
                    B.render(h, f);
                    var p = h.__width,
                      r = h.__height;
                    l = h.__canvas;
                    if (null != l && h.__visible && 1 <= p && 1 <= r) {
                      var t = h.__worldTransform;
                      k = f.context;
                      var n = a.__scrollRect,
                        q = a.__worldScale9Grid;
                      if (null == n || (0 < n.width && 0 < n.height)) {
                        f.__setBlendMode(a.__worldBlendMode);
                        f.__pushMaskObject(a);
                        k.globalAlpha = g;
                        if (null != q && 0 == t.b && 0 == t.c) {
                          var E = f.__pixelRatio;
                          g = qa.__pool.get();
                          g.translate(t.tx, t.ty);
                          f.setTransform(g, k);
                          qa.__pool.release(g);
                          g = h.__bounds;
                          var x = h.__renderTransform.a / h.__bitmapScale,
                            C = h.__renderTransform.d / h.__bitmapScale,
                            m = x * t.a,
                            y = C * t.d;
                          t = Math.max(1, Math.round(q.x * x));
                          h = Math.round(q.y * C);
                          n = Math.max(
                            1,
                            Math.round((g.get_right() - q.get_right()) * x),
                          );
                          var z = Math.round(
                            (g.get_bottom() - q.get_bottom()) * C,
                          );
                          x = Math.round(q.width * x);
                          q = Math.round(q.height * C);
                          C = Math.round(t / E);
                          var P = Math.round(h / E),
                            K = Math.round(n / E);
                          E = Math.round(z / E);
                          m = g.width * m - C - K;
                          g = g.height * y - P - E;
                          f.applySmoothing(k, !1);
                          0 != x && 0 != q
                            ? (k.drawImage(l, 0, 0, t, h, 0, 0, C, P),
                              k.drawImage(l, t, 0, x, h, C, 0, m, P),
                              k.drawImage(l, t + x, 0, n, h, C + m, 0, K, P),
                              k.drawImage(l, 0, h, t, q, 0, P, C, g),
                              k.drawImage(l, t, h, x, q, C, P, m, g),
                              k.drawImage(l, t + x, h, n, q, C + m, P, K, g),
                              k.drawImage(l, 0, h + q, t, z, 0, P + g, C, E),
                              k.drawImage(l, t, h + q, x, z, C, P + g, m, E),
                              k.drawImage(
                                l,
                                t + x,
                                h + q,
                                n,
                                z,
                                C + m,
                                P + g,
                                K,
                                E,
                              ))
                            : 0 == x && 0 != q
                              ? ((r = C + m + K),
                                k.drawImage(l, 0, 0, p, h, 0, 0, r, P),
                                k.drawImage(l, 0, h, p, q, 0, P, r, g),
                                k.drawImage(l, 0, h + q, p, z, 0, P + g, r, E))
                              : 0 == q &&
                                0 != x &&
                                ((p = P + g + E),
                                k.drawImage(l, 0, 0, t, r, 0, 0, C, p),
                                k.drawImage(l, t, 0, x, r, C, 0, m, p),
                                k.drawImage(l, t + x, 0, n, r, C + m, 0, K, p));
                        } else
                          (f.setTransform(t, k), k.drawImage(l, 0, 0, p, r));
                        f.__popMaskObject(a);
                      }
                    }
                  }
                }
              }
            }
            f = b.__canvasRenderer;
            a.__renderable &&
              0 != a.__group.__tiles.length &&
              ((g = f.__getAlpha(a.__worldAlpha)),
              0 >= g ||
                ((k = f.context),
                f.__setBlendMode(a.__worldBlendMode),
                f.__pushMaskObject(a),
                (l = ja.__pool.get()),
                l.setTo(0, 0, a.__width, a.__height),
                f.__pushMaskRect(l, a.__renderTransform),
                (f.__allowSmoothing && a.smoothing) ||
                  (k.imageSmoothingEnabled = !1),
                Ge.renderTileContainer(
                  a.__group,
                  f,
                  a.__renderTransform,
                  a.__tileset,
                  f.__allowSmoothing && a.smoothing,
                  a.tileAlphaEnabled,
                  g,
                  a.tileBlendModeEnabled,
                  a.__worldBlendMode,
                  null,
                  null,
                  l,
                ),
                (f.__allowSmoothing && a.smoothing) ||
                  (k.imageSmoothingEnabled = !0),
                f.__popMaskRect(),
                f.__popMaskObject(a),
                ja.__pool.release(l)));
            a.__renderTransform = d;
            b.__canvasRenderer.context = null;
            b.__updateClip(a);
            b.__applyStyle(a, !0, !1, !0);
          } else $e.clear(a, b);
        else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (d = a.__cacheBitmap),
            null != d.stage &&
            d.__worldVisible &&
            d.__renderable &&
            null != d.__bitmapData &&
            d.__bitmapData.__isValid &&
            d.__bitmapData.readable
              ? (b.__pushMaskObject(d),
                null != d.__bitmapData.image.buffer.__srcImage
                  ? ((f = d.__bitmapData.image.buffer.__srcImage.src),
                    R.startsWith(f, 'data:') || R.startsWith(f, 'blob:')
                      ? Qb.renderCanvas(d, b)
                      : Qb.renderImage(d, b))
                  : Qb.renderCanvas(d, b),
                b.__popMaskObject(d))
              : Qb.clear(d, b));
        b.__renderEvent(a);
      };
      $e.renderDrawableClear = function (a, b) {
        $e.clear(a, b);
      };
      var He = function () {};
      h['openfl.display._internal.DOMVideo'] = He;
      He.__name__ = 'openfl.display._internal.DOMVideo';
      He.clear = function (a, b) {
        id.clear(a, b);
        a.__active &&
          (b.element.removeChild(a.__stream.__video), (a.__active = !1));
      };
      He.render = function (a, b) {
        null != a.stage &&
        null != a.__stream &&
        a.__worldVisible &&
        a.__renderable
          ? (a.__active ||
              (b.__initializeElement(a, a.__stream.__video),
              (a.__active = !0),
              (a.__dirty = !0)),
            a.__dirty &&
              ((a.__stream.__video.width = a.__width | 0),
              (a.__stream.__video.height = a.__height | 0),
              (a.__dirty = !1)),
            b.__updateClip(a),
            b.__applyStyle(a, !0, !0, !0))
          : He.clear(a, b);
      };
      He.renderDrawable = function (a, b) {
        He.render(a, b);
        b.__renderEvent(a);
      };
      He.renderDrawableClear = function (a, b) {
        id.renderDrawableClear(a, b);
      };
      var fe = function (a) {
        this.buffer = a;
        this.bPos =
          this.iPos =
          this.fPos =
          this.oPos =
          this.ffPos =
          this.iiPos =
          this.tsPos =
            0;
        this.prev = fa.UNKNOWN;
      };
      h['openfl.display._internal.DrawCommandReader'] = fe;
      fe.__name__ = 'openfl.display._internal.DrawCommandReader';
      fe.prototype = {
        destroy: function () {
          this.buffer = null;
          this.reset();
        },
        reset: function () {
          this.bPos =
            this.iPos =
            this.fPos =
            this.oPos =
            this.ffPos =
            this.iiPos =
            this.tsPos =
              0;
        },
        __class__: fe,
      };
      var fa = (K['openfl.display._internal.DrawCommandType'] = {
        __ename__: 'openfl.display._internal.DrawCommandType',
        __constructs__: null,
        BEGIN_BITMAP_FILL: {
          _hx_name: 'BEGIN_BITMAP_FILL',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        BEGIN_FILL: {
          _hx_name: 'BEGIN_FILL',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        BEGIN_GRADIENT_FILL: {
          _hx_name: 'BEGIN_GRADIENT_FILL',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        BEGIN_SHADER_FILL: {
          _hx_name: 'BEGIN_SHADER_FILL',
          _hx_index: 3,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        CUBIC_CURVE_TO: {
          _hx_name: 'CUBIC_CURVE_TO',
          _hx_index: 4,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        CURVE_TO: {
          _hx_name: 'CURVE_TO',
          _hx_index: 5,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_CIRCLE: {
          _hx_name: 'DRAW_CIRCLE',
          _hx_index: 6,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_ELLIPSE: {
          _hx_name: 'DRAW_ELLIPSE',
          _hx_index: 7,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_QUADS: {
          _hx_name: 'DRAW_QUADS',
          _hx_index: 8,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_RECT: {
          _hx_name: 'DRAW_RECT',
          _hx_index: 9,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_ROUND_RECT: {
          _hx_name: 'DRAW_ROUND_RECT',
          _hx_index: 10,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_TILES: {
          _hx_name: 'DRAW_TILES',
          _hx_index: 11,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_TRIANGLES: {
          _hx_name: 'DRAW_TRIANGLES',
          _hx_index: 12,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        END_FILL: {
          _hx_name: 'END_FILL',
          _hx_index: 13,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_BITMAP_STYLE: {
          _hx_name: 'LINE_BITMAP_STYLE',
          _hx_index: 14,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_GRADIENT_STYLE: {
          _hx_name: 'LINE_GRADIENT_STYLE',
          _hx_index: 15,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_STYLE: {
          _hx_name: 'LINE_STYLE',
          _hx_index: 16,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_TO: {
          _hx_name: 'LINE_TO',
          _hx_index: 17,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        MOVE_TO: {
          _hx_name: 'MOVE_TO',
          _hx_index: 18,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        OVERRIDE_BLEND_MODE: {
          _hx_name: 'OVERRIDE_BLEND_MODE',
          _hx_index: 19,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        OVERRIDE_MATRIX: {
          _hx_name: 'OVERRIDE_MATRIX',
          _hx_index: 20,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        WINDING_EVEN_ODD: {
          _hx_name: 'WINDING_EVEN_ODD',
          _hx_index: 21,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        WINDING_NON_ZERO: {
          _hx_name: 'WINDING_NON_ZERO',
          _hx_index: 22,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 23,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
      });
      fa.__constructs__ = [
        fa.BEGIN_BITMAP_FILL,
        fa.BEGIN_FILL,
        fa.BEGIN_GRADIENT_FILL,
        fa.BEGIN_SHADER_FILL,
        fa.CUBIC_CURVE_TO,
        fa.CURVE_TO,
        fa.DRAW_CIRCLE,
        fa.DRAW_ELLIPSE,
        fa.DRAW_QUADS,
        fa.DRAW_RECT,
        fa.DRAW_ROUND_RECT,
        fa.DRAW_TILES,
        fa.DRAW_TRIANGLES,
        fa.END_FILL,
        fa.LINE_BITMAP_STYLE,
        fa.LINE_GRADIENT_STYLE,
        fa.LINE_STYLE,
        fa.LINE_TO,
        fa.MOVE_TO,
        fa.OVERRIDE_BLEND_MODE,
        fa.OVERRIDE_MATRIX,
        fa.WINDING_EVEN_ODD,
        fa.WINDING_NON_ZERO,
        fa.UNKNOWN,
      ];
      var Jf = function (a, b, d, f, g, k, l) {
        null == l && (l = !1);
        null == k && (k = !1);
        null == g && (g = !1);
        null == f && (f = 0);
        null == d && (d = 2);
        null == b && (b = 5);
        null == a && (a = 0);
        this.wrap = a;
        this.filter = b;
        this.mipfilter = d;
        this.lodBias = f;
        this.ignoreSampler = g;
        this.centroid = k;
        this.textureAlpha = l;
      };
      h['openfl.display._internal.SamplerState'] = Jf;
      Jf.__name__ = 'openfl.display._internal.SamplerState';
      Jf.prototype = {
        clone: function () {
          var a = new Jf(
            this.wrap,
            this.filter,
            this.mipfilter,
            this.lodBias,
            this.ignoreSampler,
            this.centroid,
            this.textureAlpha,
          );
          a.mipmapGenerated = this.mipmapGenerated;
          return a;
        },
        copyFrom: function (a) {
          null == a ||
            a.ignoreSampler ||
            ((this.wrap = a.wrap),
            (this.filter = a.filter),
            (this.mipfilter = a.mipfilter),
            (this.lodBias = a.lodBias),
            (this.centroid = a.centroid),
            (this.textureAlpha = a.textureAlpha));
        },
        equals: function (a) {
          return null == a
            ? !1
            : this.wrap == a.wrap &&
                this.filter == a.filter &&
                this.mipfilter == a.mipfilter &&
                this.lodBias == a.lodBias
              ? this.textureAlpha == a.textureAlpha
              : !1;
        },
        __class__: Jf,
      };
      var fj = function () {
        this.inputRefs = [];
        this.inputFilter = [];
        this.inputMipFilter = [];
        this.inputs = [];
        this.inputWrap = [];
        this.overrideIntNames = [];
        this.overrideIntValues = [];
        this.overrideFloatNames = [];
        this.overrideFloatValues = [];
        this.overrideBoolNames = [];
        this.overrideBoolValues = [];
        this.paramLengths = [];
        this.paramPositions = [];
        this.paramRefs_Bool = [];
        this.paramRefs_Float = [];
        this.paramRefs_Int = [];
        this.paramTypes = [];
      };
      h['openfl.display._internal.ShaderBuffer'] = fj;
      fj.__name__ = 'openfl.display._internal.ShaderBuffer';
      fj.prototype = {
        addBoolOverride: function (a, b) {
          this.overrideBoolNames[this.overrideBoolCount] = a;
          this.overrideBoolValues[this.overrideBoolCount] = b;
          this.overrideBoolCount++;
        },
        addFloatOverride: function (a, b) {
          this.overrideFloatNames[this.overrideFloatCount] = a;
          this.overrideFloatValues[this.overrideFloatCount] = b;
          this.overrideFloatCount++;
        },
        clearOverride: function () {
          this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
              0;
        },
        update: function (a) {
          this.paramIntCount =
            this.paramFloatCount =
            this.paramDataLength =
            this.paramCount =
            this.paramBoolCount =
            this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
            this.inputCount =
              0;
          this.shader = null;
          if (null != a) {
            a.__init();
            this.inputCount = a.__inputBitmapData.length;
            for (var b, d = 0, f = this.inputCount; d < f; ) {
              var g = d++;
              b = a.__inputBitmapData[g];
              this.inputs[g] = b.input;
              this.inputFilter[g] = b.filter;
              this.inputMipFilter[g] = b.mipFilter;
              this.inputRefs[g] = b;
              this.inputWrap[g] = b.wrap;
            }
            b = a.__paramBool.length;
            var k = a.__paramFloat.length,
              l = a.__paramInt.length;
            this.paramCount = b + k + l;
            this.paramBoolCount = b;
            this.paramFloatCount = k;
            this.paramIntCount = l;
            var h = 0;
            d = 0;
            for (f = b; d < f; ) {
              g = d++;
              var p = a.__paramBool[g];
              this.paramPositions[h] = this.paramDataLength;
              var r = null != p.value ? p.value.length : 0;
              this.paramLengths[h] = r;
              this.paramDataLength += r;
              this.paramTypes[h] = 0;
              this.paramRefs_Bool[g] = p;
              ++h;
            }
            d = 0;
            for (f = k; d < f; )
              ((g = d++),
                (p = a.__paramFloat[g]),
                (this.paramPositions[h] = this.paramDataLength),
                (r = null != p.value ? p.value.length : 0),
                (this.paramLengths[h] = r),
                (this.paramDataLength += r),
                (this.paramTypes[h] = 1),
                (this.paramRefs_Float[g] = p),
                ++h);
            d = 0;
            for (f = l; d < f; )
              ((g = d++),
                (p = a.__paramInt[g]),
                (this.paramPositions[h] = this.paramDataLength),
                (r = null != p.value ? p.value.length : 0),
                (this.paramLengths[h] = r),
                (this.paramDataLength += r),
                (this.paramTypes[h] = 2),
                (this.paramRefs_Int[g] = p),
                ++h);
            if (0 < this.paramDataLength)
              if (null == this.paramData) {
                d = this.paramDataLength;
                var t = (p = h = l = f = null);
                this.paramData = d =
                  null != d
                    ? new Float32Array(d)
                    : null != f
                      ? new Float32Array(f)
                      : null != l
                        ? new Float32Array(l.__array)
                        : null != h
                          ? new Float32Array(h)
                          : null != p
                            ? null == t
                              ? new Float32Array(p, 0)
                              : new Float32Array(p, 0, t)
                            : null;
              } else
                this.paramDataLength > this.paramData.length &&
                  ((d = this.paramDataLength),
                  (t = p = h = l = f = null),
                  (d =
                    null != d
                      ? new Float32Array(d)
                      : null != f
                        ? new Float32Array(f)
                        : null != l
                          ? new Float32Array(l.__array)
                          : null != h
                            ? new Float32Array(h)
                            : null != p
                              ? null == t
                                ? new Float32Array(p, 0)
                                : new Float32Array(p, 0, t)
                              : null),
                  d.set(this.paramData),
                  (this.paramData = d));
            d = t = p = h = l = 0;
            for (f = this.paramCount; d < f; )
              if (((g = d++), (r = this.paramLengths[g]), g < b)) {
                g = this.paramRefs_Bool[l];
                ++l;
                for (var n = 0; n < r; ) {
                  var q = n++;
                  this.paramData[t] = g.value[q] ? 1 : 0;
                  ++t;
                }
              } else if (g < b + k)
                for (g = this.paramRefs_Float[h], ++h, n = 0; n < r; )
                  ((q = n++), (this.paramData[t] = g.value[q]), ++t);
              else
                for (g = this.paramRefs_Int[p], ++p, n = 0; n < r; )
                  ((q = n++), (this.paramData[t] = g.value[q]), ++t);
            this.shader = a;
          }
        },
        __class__: fj,
      };
      var sb = function (a, b, d) {
        this.driverInfo = 'OpenGL (Direct blitting)';
        this.backBufferHeight = this.backBufferWidth = 0;
        ka.call(this);
        this.__stage = a;
        this.__contextState = b;
        this.__stage3D = d;
        this.__context = a.window.context;
        this.gl = this.__context.webgl;
        null == this.__contextState && (this.__contextState = new bh());
        this.__state = new bh();
        var f;
        this.__vertexConstants = new Float32Array(512);
        this.__fragmentConstants = new Float32Array(512);
        var g = null;
        a = [1, 1, 1, 1];
        var k = (f = d = b = null);
        this.__positionScale = a =
          null != g
            ? new Float32Array(g)
            : null != a
              ? new Float32Array(a)
              : null != b
                ? new Float32Array(b.__array)
                : null != d
                  ? new Float32Array(d)
                  : null != f
                    ? null == k
                      ? new Float32Array(f, 0)
                      : new Float32Array(f, 0, k)
                    : null;
        this.__programs = new Sa();
        -1 == sb.__glMaxViewportDims &&
          (sb.__glMaxViewportDims = this.gl.getParameter(
            this.gl.MAX_VIEWPORT_DIMS,
          ));
        this.maxBackBufferHeight = this.maxBackBufferWidth =
          sb.__glMaxViewportDims;
        -1 == sb.__glMaxTextureMaxAnisotropy &&
          ((a = this.gl.getExtension('EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')),
          null != a
            ? ((sb.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT),
              (sb.__glMaxTextureMaxAnisotropy = this.gl.getParameter(
                a.MAX_TEXTURE_MAX_ANISOTROPY_EXT,
              )))
            : ((sb.__glTextureMaxAnisotropy = 0),
              (sb.__glMaxTextureMaxAnisotropy = 0)));
        -1 == sb.__glDepthStencil &&
          (sb.__glDepthStencil = this.gl.DEPTH_STENCIL);
        -1 == sb.__glMemoryTotalAvailable &&
          ((a = this.gl.getExtension('NVX_gpu_memory_info')),
          null != a &&
            ((sb.__glMemoryTotalAvailable =
              a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX),
            (sb.__glMemoryCurrentAvailable =
              a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)));
        null == sb.__driverInfo &&
          ((a = this.gl.getParameter(this.gl.VENDOR)),
          (b = this.gl.getParameter(this.gl.VERSION)),
          (d = this.gl.getParameter(this.gl.RENDERER)),
          (f = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION)),
          (sb.__driverInfo =
            'OpenGL Vendor=' +
            a +
            ' Version=' +
            b +
            ' Renderer=' +
            d +
            ' GLSL=' +
            f));
        this.driverInfo = sb.__driverInfo;
        this.__quadIndexBufferElements = 16383;
        g = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
        k = f = d = b = a = null;
        a =
          null != g
            ? new Uint16Array(g)
            : null != a
              ? new Uint16Array(a)
              : null != b
                ? new Uint16Array(b.__array)
                : null != d
                  ? new Uint16Array(d)
                  : null != f
                    ? null == k
                      ? new Uint16Array(f, 0)
                      : new Uint16Array(f, 0, k)
                    : null;
        f = d = b = 0;
        for (k = this.__quadIndexBufferElements; f < k; )
          (f++,
            (a[b] = d),
            (a[b + 1] = d + 1),
            (a[b + 2] = d + 2),
            (a[b + 3] = d + 2),
            (a[b + 4] = d + 1),
            (a[b + 5] = d + 3),
            (b += 6),
            (d += 4));
        this.__quadIndexBuffer = this.createIndexBuffer(
          this.__quadIndexBufferCount,
        );
        this.__quadIndexBuffer.uploadFromTypedArray(a);
      };
      h['openfl.display3D.Context3D'] = sb;
      sb.__name__ = 'openfl.display3D.Context3D';
      sb.__driverInfo = null;
      sb.__super__ = ka;
      sb.prototype = w(ka.prototype, {
        clear: function (a, b, d, f, g, k, l) {
          null == l && (l = 7);
          null == k && (k = 0);
          null == g && (g = 1);
          null == f && (f = 1);
          null == d && (d = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          var h = 0;
          if (0 != (l & 1)) {
            null == this.__state.renderToTexture &&
              (this.__stage.context3D != this ||
                this.__stage.__renderer.__cleared ||
                (this.__stage.__renderer.__cleared = !0),
              (this.__cleared = !0));
            h |= this.gl.COLOR_BUFFER_BIT;
            if (
              1 != this.__contextState.colorMaskRed ||
              1 != this.__contextState.colorMaskGreen ||
              1 != this.__contextState.colorMaskBlue ||
              1 != this.__contextState.colorMaskAlpha
            )
              (this.gl.colorMask(!0, !0, !0, !0),
                (this.__contextState.colorMaskRed = !0),
                (this.__contextState.colorMaskGreen = !0),
                (this.__contextState.colorMaskBlue = !0),
                (this.__contextState.colorMaskAlpha = !0));
            this.gl.clearColor(a, b, d, f);
          }
          0 != (l & 2) &&
            ((h |= this.gl.DEPTH_BUFFER_BIT),
            1 != this.__contextState.depthMask &&
              (this.gl.depthMask(!0), (this.__contextState.depthMask = !0)),
            this.gl.clearDepth(g));
          0 != (l & 4) &&
            ((h |= this.gl.STENCIL_BUFFER_BIT),
            255 != this.__contextState.stencilWriteMask &&
              (this.gl.stencilMask(255),
              (this.__contextState.stencilWriteMask = 255)),
            this.gl.clearStencil(k),
            (this.__contextState.stencilWriteMask = 255));
          0 != h && (this.__setGLScissorTest(!1), this.gl.clear(h));
        },
        configureBackBuffer: function (a, b, d, f, g, k) {
          null == k && (k = !1);
          null == g && (g = !1);
          null == f && (f = !0);
          g &&
            ((a = (a * this.__stage.window.__scale) | 0),
            (b = (b * this.__stage.window.__scale) | 0));
          if (null == this.__stage3D)
            ((this.backBufferWidth = a),
              (this.backBufferHeight = b),
              (this.__backBufferAntiAlias = d),
              (this.__state.backBufferEnableDepthAndStencil = f),
              (this.__backBufferWantsBestResolution = g),
              (this.__backBufferWantsBestResolutionOnBrowserZoom = k));
          else {
            if (
              null == this.__backBufferTexture ||
              this.backBufferWidth != a ||
              this.backBufferHeight != b
            ) {
              null != this.__backBufferTexture &&
                this.__backBufferTexture.dispose();
              null != this.__frontBufferTexture &&
                this.__frontBufferTexture.dispose();
              this.__backBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              this.__frontBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              null == this.__stage3D.__vertexBuffer &&
                (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
              var l = g ? a : (a * this.__stage.window.__scale) | 0,
                h = g ? b : (b * this.__stage.window.__scale) | 0;
              l = ra.toFloatVector(null, null, null, [
                l,
                h,
                0,
                1,
                1,
                0,
                h,
                0,
                0,
                1,
                l,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
              ]);
              this.__stage3D.__vertexBuffer.uploadFromVector(l, 0, 20);
              null == this.__stage3D.__indexBuffer &&
                ((this.__stage3D.__indexBuffer = this.createIndexBuffer(6)),
                (l = ra.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3])),
                this.__stage3D.__indexBuffer.uploadFromVector(l, 0, 6));
            }
            this.backBufferWidth = a;
            this.backBufferHeight = b;
            this.__backBufferAntiAlias = d;
            this.__state.backBufferEnableDepthAndStencil = f;
            this.__backBufferWantsBestResolution = g;
            this.__backBufferWantsBestResolutionOnBrowserZoom = k;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(f, d, 0);
            this.__frontBufferTexture.__getGLFramebuffer(f, d, 0);
          }
        },
        createIndexBuffer: function (a, b) {
          null == b && (b = 1);
          return new Zk(this, a, b);
        },
        createProgram: function (a) {
          null == a && (a = 0);
          return new $k(this, a);
        },
        createRectangleTexture: function (a, b, d, f) {
          return new ch(this, a, b, hm.toString(d), f);
        },
        createVertexBuffer: function (a, b, d) {
          null == d && (d = 1);
          return new al(this, a, b, Ul.toString(d));
        },
        drawTriangles: function (a, b, d) {
          null == d && (d = -1);
          null == b && (b = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          d = -1 == d ? a.__numIndices : 3 * d;
          this.__bindGLElementArrayBuffer(a.__id);
          this.gl.drawElements(
            this.gl.TRIANGLES,
            d,
            this.gl.UNSIGNED_SHORT,
            2 * b,
          );
        },
        present: function () {
          this.setRenderToBackBuffer();
          if (null != this.__stage3D && null != this.__backBufferTexture) {
            this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
            var a = this.__backBufferTexture;
            this.__backBufferTexture = this.__frontBufferTexture;
            this.__frontBufferTexture = a;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(
                this.__state.backBufferEnableDepthAndStencil,
                this.__backBufferAntiAlias,
                0,
              );
            this.__cleared = !1;
          }
          this.__present = !0;
        },
        setBlendFactors: function (a, b) {
          this.setBlendFactorsSeparate(a, b, a, b);
        },
        setBlendFactorsSeparate: function (a, b, d, f) {
          this.__state.blendSourceRGBFactor = a;
          this.__state.blendDestinationRGBFactor = b;
          this.__state.blendSourceAlphaFactor = d;
          this.__state.blendDestinationAlphaFactor = f;
          this.__setGLBlendEquation(this.gl.FUNC_ADD);
        },
        setColorMask: function (a, b, d, f) {
          this.__state.colorMaskRed = a;
          this.__state.colorMaskGreen = b;
          this.__state.colorMaskBlue = d;
          this.__state.colorMaskAlpha = f;
        },
        setCulling: function (a) {
          this.__state.culling = a;
        },
        setDepthTest: function (a, b) {
          this.__state.depthMask = a;
          this.__state.depthCompareMode = b;
        },
        setProgram: function (a) {
          this.__state.program = a;
          this.__state.shader = null;
          if (null != a)
            for (var b = 0, d = a.__samplerStates.length; b < d; ) {
              var f = b++;
              null == this.__state.samplerStates[f]
                ? (this.__state.samplerStates[f] = a.__samplerStates[f].clone())
                : this.__state.samplerStates[f].copyFrom(a.__samplerStates[f]);
            }
        },
        setProgramConstantsFromMatrix: function (a, b, d, f) {
          null == f && (f = !1);
          if (
            null != this.__state.program &&
            1 == this.__state.program.__format
          )
            (this.__flushGLProgram(),
              (a = new Float32Array(16)),
              (a[0] = d.rawData.get(0)),
              (a[1] = d.rawData.get(1)),
              (a[2] = d.rawData.get(2)),
              (a[3] = d.rawData.get(3)),
              (a[4] = d.rawData.get(4)),
              (a[5] = d.rawData.get(5)),
              (a[6] = d.rawData.get(6)),
              (a[7] = d.rawData.get(7)),
              (a[8] = d.rawData.get(8)),
              (a[9] = d.rawData.get(9)),
              (a[10] = d.rawData.get(10)),
              (a[11] = d.rawData.get(11)),
              (a[12] = d.rawData.get(12)),
              (a[13] = d.rawData.get(13)),
              (a[14] = d.rawData.get(14)),
              (a[15] = d.rawData.get(15)),
              Ec.uniformMatrix4fv(this.gl, b, f, a));
          else {
            var g = (a = 1 == a)
              ? this.__vertexConstants
              : this.__fragmentConstants;
            d = d.rawData;
            var k = 4 * b;
            f
              ? ((g[k++] = d.get(0)),
                (g[k++] = d.get(4)),
                (g[k++] = d.get(8)),
                (g[k++] = d.get(12)),
                (g[k++] = d.get(1)),
                (g[k++] = d.get(5)),
                (g[k++] = d.get(9)),
                (g[k++] = d.get(13)),
                (g[k++] = d.get(2)),
                (g[k++] = d.get(6)),
                (g[k++] = d.get(10)),
                (g[k++] = d.get(14)),
                (g[k++] = d.get(3)),
                (g[k++] = d.get(7)),
                (g[k++] = d.get(11)))
              : ((g[k++] = d.get(0)),
                (g[k++] = d.get(1)),
                (g[k++] = d.get(2)),
                (g[k++] = d.get(3)),
                (g[k++] = d.get(4)),
                (g[k++] = d.get(5)),
                (g[k++] = d.get(6)),
                (g[k++] = d.get(7)),
                (g[k++] = d.get(8)),
                (g[k++] = d.get(9)),
                (g[k++] = d.get(10)),
                (g[k++] = d.get(11)),
                (g[k++] = d.get(12)),
                (g[k++] = d.get(13)),
                (g[k++] = d.get(14)));
            g[k++] = d.get(15);
            null != this.__state.program &&
              this.__state.program.__markDirty(a, b, 4);
          }
        },
        setRenderToBackBuffer: function () {
          this.__state.renderToTexture = null;
        },
        setRenderToTexture: function (a, b, d, f) {
          null == f && (f = 0);
          null == d && (d = 0);
          null == b && (b = !1);
          this.__state.renderToTexture = a;
          this.__state.renderToTextureDepthStencil = b;
          this.__state.renderToTextureAntiAlias = d;
          this.__state.renderToTextureSurfaceSelector = f;
        },
        setSamplerStateAt: function (a, b, d, f) {
          null == this.__state.samplerStates[a] &&
            (this.__state.samplerStates[a] = new Jf());
          a = this.__state.samplerStates[a];
          a.wrap = b;
          a.filter = d;
          a.mipfilter = f;
        },
        setScissorRectangle: function (a) {
          null != a
            ? ((this.__state.scissorEnabled = !0),
              this.__state.scissorRectangle.copyFrom(a))
            : (this.__state.scissorEnabled = !1);
        },
        setStencilActions: function (a, b, d, f, g) {
          null == g && (g = 5);
          null == f && (f = 5);
          null == d && (d = 5);
          null == b && (b = 0);
          null == a && (a = 2);
          this.__state.stencilTriangleFace = a;
          this.__state.stencilCompareMode = b;
          this.__state.stencilPass = d;
          this.__state.stencilDepthFail = f;
          this.__state.stencilFail = g;
        },
        setStencilReferenceValue: function (a, b, d) {
          null == d && (d = 255);
          null == b && (b = 255);
          this.__state.stencilReferenceValue = a;
          this.__state.stencilReadMask = b;
          this.__state.stencilWriteMask = d;
        },
        setTextureAt: function (a, b) {
          this.__state.textures[a] = b;
        },
        setVertexBufferAt: function (a, b, d, f) {
          null == f && (f = 4);
          null == d && (d = 0);
          if (!(0 > a))
            if (null == b)
              (this.gl.disableVertexAttribArray(a),
                this.__bindGLArrayBuffer(null));
            else
              switch (
                (this.__bindGLArrayBuffer(b.__id),
                this.gl.enableVertexAttribArray(a),
                (d *= 4),
                f)
              ) {
                case 0:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.UNSIGNED_BYTE,
                    !0,
                    b.__stride,
                    d,
                  );
                  break;
                case 1:
                  this.gl.vertexAttribPointer(
                    a,
                    1,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    d,
                  );
                  break;
                case 2:
                  this.gl.vertexAttribPointer(
                    a,
                    2,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    d,
                  );
                  break;
                case 3:
                  this.gl.vertexAttribPointer(
                    a,
                    3,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    d,
                  );
                  break;
                case 4:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    d,
                  );
                  break;
                default:
                  throw new Rc();
              }
        },
        __bindGLArrayBuffer: function (a) {
          this.__contextState.__currentGLArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a),
            (this.__contextState.__currentGLArrayBuffer = a));
        },
        __bindGLElementArrayBuffer: function (a) {
          this.__contextState.__currentGLElementArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a),
            (this.__contextState.__currentGLElementArrayBuffer = a));
        },
        __bindGLFramebuffer: function (a) {
          this.__contextState.__currentGLFramebuffer != a &&
            (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a),
            (this.__contextState.__currentGLFramebuffer = a));
        },
        __bindGLTexture2D: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_2D, a);
          this.__contextState.__currentGLTexture2D = a;
        },
        __bindGLTextureCubeMap: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
          this.__contextState.__currentGLTextureCubeMap = a;
        },
        __dispose: function () {
          this.driverInfo += ' (Disposed)';
          null != this.__stage3D &&
            ((this.__stage3D.__indexBuffer = null),
            (this.__stage3D.__vertexBuffer = null),
            (this.__stage3D = this.__stage3D.context3D = null));
          this.__positionScale =
            this.__frontBufferTexture =
            this.__fragmentConstants =
            this.__renderStage3DProgram =
            this.__context =
            this.__backBufferTexture =
              null;
          this.__present = !1;
          this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null;
        },
        __drawTriangles: function (a, b) {
          null == a && (a = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          this.gl.drawArrays(this.gl.TRIANGLES, a, b);
        },
        __flushGL: function () {
          this.__flushGLProgram();
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          this.__flushGLBlend();
          if (
            this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
            this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
            this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
            this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
          )
            (this.gl.colorMask(
              this.__state.colorMaskRed,
              this.__state.colorMaskGreen,
              this.__state.colorMaskBlue,
              this.__state.colorMaskAlpha,
            ),
              (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
              (this.__contextState.colorMaskGreen =
                this.__state.colorMaskGreen),
              (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
              (this.__contextState.colorMaskAlpha =
                this.__state.colorMaskAlpha));
          this.__flushGLCulling();
          this.__flushGLDepth();
          this.__flushGLScissor();
          this.__flushGLStencil();
          this.__flushGLTextures();
        },
        __flushGLBlend: function () {
          if (
            this.__contextState.blendDestinationRGBFactor !=
              this.__state.blendDestinationRGBFactor ||
            this.__contextState.blendSourceRGBFactor !=
              this.__state.blendSourceRGBFactor ||
            this.__contextState.blendDestinationAlphaFactor !=
              this.__state.blendDestinationAlphaFactor ||
            this.__contextState.blendSourceAlphaFactor !=
              this.__state.blendSourceAlphaFactor
          )
            (this.__setGLBlend(!0),
              this.__state.blendDestinationRGBFactor ==
                this.__state.blendDestinationAlphaFactor &&
              this.__state.blendSourceRGBFactor ==
                this.__state.blendSourceAlphaFactor
                ? this.gl.blendFunc(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                  )
                : this.gl.blendFuncSeparate(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                    this.__getGLBlend(this.__state.blendSourceAlphaFactor),
                    this.__getGLBlend(this.__state.blendDestinationAlphaFactor),
                  ),
              (this.__contextState.blendDestinationRGBFactor =
                this.__state.blendDestinationRGBFactor),
              (this.__contextState.blendSourceRGBFactor =
                this.__state.blendSourceRGBFactor),
              (this.__contextState.blendDestinationAlphaFactor =
                this.__state.blendDestinationAlphaFactor),
              (this.__contextState.blendSourceAlphaFactor =
                this.__state.blendSourceAlphaFactor));
        },
        __flushGLCulling: function () {
          if (this.__contextState.culling != this.__state.culling) {
            if (3 == this.__state.culling) this.__setGLCullFace(!1);
            else
              switch ((this.__setGLCullFace(!0), this.__state.culling)) {
                case 0:
                  this.gl.cullFace(this.gl.BACK);
                  break;
                case 1:
                  this.gl.cullFace(this.gl.FRONT);
                  break;
                case 2:
                  this.gl.cullFace(this.gl.FRONT_AND_BACK);
                  break;
                case 3:
                  break;
                default:
                  throw new Rc();
              }
            this.__contextState.culling = this.__state.culling;
          }
        },
        __flushGLDepth: function () {
          var a =
            this.__state.depthMask &&
            (null != this.__state.renderToTexture
              ? this.__state.renderToTextureDepthStencil
              : this.__state.backBufferEnableDepthAndStencil);
          this.__contextState.depthMask != a &&
            (this.gl.depthMask(a), (this.__contextState.depthMask = a));
          if (
            this.__contextState.depthCompareMode !=
            this.__state.depthCompareMode
          ) {
            switch (this.__state.depthCompareMode) {
              case 0:
                this.gl.depthFunc(this.gl.ALWAYS);
                break;
              case 1:
                this.gl.depthFunc(this.gl.EQUAL);
                break;
              case 2:
                this.gl.depthFunc(this.gl.GREATER);
                break;
              case 3:
                this.gl.depthFunc(this.gl.GEQUAL);
                break;
              case 4:
                this.gl.depthFunc(this.gl.LESS);
                break;
              case 5:
                this.gl.depthFunc(this.gl.LEQUAL);
                break;
              case 6:
                this.gl.depthFunc(this.gl.NEVER);
                break;
              case 7:
                this.gl.depthFunc(this.gl.NOTEQUAL);
                break;
              default:
                throw new Rc();
            }
            this.__contextState.depthCompareMode =
              this.__state.depthCompareMode;
          }
        },
        __flushGLFramebuffer: function () {
          if (null != this.__state.renderToTexture) {
            if (
              this.__contextState.renderToTexture !=
                this.__state.renderToTexture ||
              this.__contextState.renderToTextureSurfaceSelector !=
                this.__state.renderToTextureSurfaceSelector
            ) {
              var a = this.__state.renderToTexture.__getGLFramebuffer(
                this.__state.renderToTextureDepthStencil,
                this.__state.renderToTextureAntiAlias,
                this.__state.renderToTextureSurfaceSelector,
              );
              this.__bindGLFramebuffer(a);
              this.__contextState.renderToTexture =
                this.__state.renderToTexture;
              this.__contextState.renderToTextureAntiAlias =
                this.__state.renderToTextureAntiAlias;
              this.__contextState.renderToTextureDepthStencil =
                this.__state.renderToTextureDepthStencil;
              this.__contextState.renderToTextureSurfaceSelector =
                this.__state.renderToTextureSurfaceSelector;
            }
            this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
            this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
            this.__setGLFrontFace(!0);
          } else {
            if (
              null == this.__stage &&
              0 == this.backBufferWidth &&
              0 == this.backBufferHeight
            )
              throw new Xb('Context3D backbuffer has not been configured');
            if (
              null != this.__contextState.renderToTexture ||
              this.__contextState.__currentGLFramebuffer !=
                this.__state.__primaryGLFramebuffer ||
              this.__contextState.backBufferEnableDepthAndStencil !=
                this.__state.backBufferEnableDepthAndStencil
            )
              (this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer),
                (this.__contextState.renderToTexture = null),
                (this.__contextState.backBufferEnableDepthAndStencil =
                  this.__state.backBufferEnableDepthAndStencil));
            this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLStencilTest(
              this.__state.backBufferEnableDepthAndStencil,
            );
            this.__setGLFrontFace(this.__stage.context3D != this);
          }
        },
        __flushGLProgram: function () {
          var a = this.__state.shader,
            b = this.__state.program;
          this.__contextState.shader != a &&
            (null != this.__contextState.shader &&
              this.__contextState.shader.__disable(),
            null != a && a.__enable(),
            (this.__contextState.shader = a));
          this.__contextState.program != b &&
            (null != this.__contextState.program &&
              this.__contextState.program.__disable(),
            null != b && b.__enable(),
            (this.__contextState.program = b));
          null != b &&
            0 == b.__format &&
            ((this.__positionScale[1] =
              this.__stage.context3D == this &&
              null == this.__state.renderToTexture
                ? 1
                : -1),
            b.__setPositionScale(this.__positionScale));
        },
        __flushGLScissor: function () {
          if (this.__state.scissorEnabled) {
            this.__setGLScissorTest(!0);
            this.__contextState.scissorEnabled = !0;
            var a = this.__state.scissorRectangle.x | 0,
              b = this.__state.scissorRectangle.y | 0,
              d = this.__state.scissorRectangle.width | 0,
              f = this.__state.scissorRectangle.height | 0;
            this.__backBufferWantsBestResolution &&
              ((a =
                (this.__state.scissorRectangle.x *
                  this.__stage.window.__scale) |
                0),
              (b =
                (this.__state.scissorRectangle.y *
                  this.__stage.window.__scale) |
                0),
              (d =
                (this.__state.scissorRectangle.width *
                  this.__stage.window.__scale) |
                0),
              (f =
                (this.__state.scissorRectangle.height *
                  this.__stage.window.__scale) |
                0));
            null == this.__state.renderToTexture &&
              null == this.__stage3D &&
              (b =
                ((this.__stage.window.__height * this.__stage.window.__scale) |
                  0) -
                f -
                b);
            if (
              this.__contextState.scissorRectangle.x != a ||
              this.__contextState.scissorRectangle.y != b ||
              this.__contextState.scissorRectangle.width != d ||
              this.__contextState.scissorRectangle.height != f
            )
              (this.gl.scissor(a, b, d, f),
                this.__contextState.scissorRectangle.setTo(a, b, d, f));
          } else
            this.__contextState.scissorEnabled != this.__state.scissorEnabled &&
              (this.__setGLScissorTest(!1),
              (this.__contextState.scissorEnabled = !1));
        },
        __flushGLStencil: function () {
          if (
            this.__contextState.stencilTriangleFace !=
              this.__state.stencilTriangleFace ||
            this.__contextState.stencilPass != this.__state.stencilPass ||
            this.__contextState.stencilDepthFail !=
              this.__state.stencilDepthFail ||
            this.__contextState.stencilFail != this.__state.stencilFail
          )
            (this.gl.stencilOpSeparate(
              this.__getGLTriangleFace(this.__state.stencilTriangleFace),
              this.__getGLStencilAction(this.__state.stencilFail),
              this.__getGLStencilAction(this.__state.stencilDepthFail),
              this.__getGLStencilAction(this.__state.stencilPass),
            ),
              (this.__contextState.stencilTriangleFace =
                this.__state.stencilTriangleFace),
              (this.__contextState.stencilPass = this.__state.stencilPass),
              (this.__contextState.stencilDepthFail =
                this.__state.stencilDepthFail),
              (this.__contextState.stencilFail = this.__state.stencilFail));
          this.__contextState.stencilWriteMask !=
            this.__state.stencilWriteMask &&
            (this.gl.stencilMask(this.__state.stencilWriteMask),
            (this.__contextState.stencilWriteMask =
              this.__state.stencilWriteMask));
          if (
            this.__contextState.stencilCompareMode !=
              this.__state.stencilCompareMode ||
            this.__contextState.stencilReferenceValue !=
              this.__state.stencilReferenceValue ||
            this.__contextState.stencilReadMask != this.__state.stencilReadMask
          )
            (this.gl.stencilFunc(
              this.__getGLCompareMode(this.__state.stencilCompareMode),
              this.__state.stencilReferenceValue,
              this.__state.stencilReadMask,
            ),
              (this.__contextState.stencilCompareMode =
                this.__state.stencilCompareMode),
              (this.__contextState.stencilReferenceValue =
                this.__state.stencilReferenceValue),
              (this.__contextState.stencilReadMask =
                this.__state.stencilReadMask));
        },
        __flushGLTextures: function () {
          for (
            var a = 0, b, d, f = 0, g = this.__state.textures.length;
            f < g;

          ) {
            var k = f++;
            b = this.__state.textures[k];
            d = this.__state.samplerStates[k];
            null == d &&
              ((this.__state.samplerStates[k] = new Jf()),
              (d = this.__state.samplerStates[k]));
            this.gl.activeTexture(this.gl.TEXTURE0 + a);
            null != b
              ? (b.__textureTarget == this.gl.TEXTURE_2D
                  ? this.__bindGLTexture2D(b.__getTexture())
                  : this.__bindGLTextureCubeMap(b.__getTexture()),
                (this.__contextState.textures[k] = b),
                b.__setSamplerState(d))
              : this.__bindGLTexture2D(null);
            null != this.__state.program &&
              0 == this.__state.program.__format &&
              d.textureAlpha &&
              (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4),
              null != b && null != b.__alphaTexture
                ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D
                    ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture())
                    : this.__bindGLTextureCubeMap(
                        b.__alphaTexture.__getTexture(),
                      ),
                  b.__alphaTexture.__setSamplerState(d),
                  this.gl.uniform1i(
                    this.__state.program.__agalAlphaSamplerEnabled[a].location,
                    1,
                  ))
                : (this.__bindGLTexture2D(null),
                  null != this.__state.program.__agalAlphaSamplerEnabled[a] &&
                    this.gl.uniform1i(
                      this.__state.program.__agalAlphaSamplerEnabled[a]
                        .location,
                      0,
                    )));
            ++a;
          }
        },
        __flushGLViewport: function () {
          if (null == this.__state.renderToTexture)
            if (this.__stage.context3D == this) {
              var a = this.backBufferWidth,
                b = this.backBufferHeight;
              null != this.__stage3D ||
                this.__backBufferWantsBestResolution ||
                ((a = (this.backBufferWidth * this.__stage.window.__scale) | 0),
                (b =
                  (this.backBufferHeight * this.__stage.window.__scale) | 0));
              var d = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                f =
                  (this.__stage.window.__height * this.__stage.window.__scale -
                    b -
                    (null == this.__stage3D ? 0 : this.__stage3D.get_y())) |
                  0;
              this.gl.viewport(d, f, a, b);
            } else
              this.gl.viewport(
                0,
                0,
                this.backBufferWidth,
                this.backBufferHeight,
              );
          else
            ((b = a = 0),
              this.__state.renderToTexture instanceof wj
                ? ((b = this.__state.renderToTexture),
                  (a = b.__width),
                  (b = b.__height))
                : this.__state.renderToTexture instanceof ch
                  ? ((b = this.__state.renderToTexture),
                    (a = b.__width),
                    (b = b.__height))
                  : this.__state.renderToTexture instanceof xj &&
                    ((b = this.__state.renderToTexture), (b = a = b.__size)),
              this.gl.viewport(0, 0, a, b));
        },
        __getGLBlend: function (a) {
          switch (a) {
            case 0:
              return this.gl.DST_ALPHA;
            case 1:
              return this.gl.DST_COLOR;
            case 2:
              return this.gl.ONE;
            case 3:
              return this.gl.ONE_MINUS_DST_ALPHA;
            case 4:
              return this.gl.ONE_MINUS_DST_COLOR;
            case 5:
              return this.gl.ONE_MINUS_SRC_ALPHA;
            case 6:
              return this.gl.ONE_MINUS_SRC_COLOR;
            case 7:
              return this.gl.SRC_ALPHA;
            case 8:
              return this.gl.SRC_COLOR;
            case 9:
              return this.gl.ZERO;
            default:
              throw new Rc();
          }
        },
        __getGLCompareMode: function (a) {
          switch (a) {
            case 0:
              return this.gl.ALWAYS;
            case 1:
              return this.gl.EQUAL;
            case 2:
              return this.gl.GREATER;
            case 3:
              return this.gl.GEQUAL;
            case 4:
              return this.gl.LESS;
            case 5:
              return this.gl.LEQUAL;
            case 6:
              return this.gl.NEVER;
            case 7:
              return this.gl.NOTEQUAL;
            default:
              return this.gl.EQUAL;
          }
        },
        __getGLStencilAction: function (a) {
          switch (a) {
            case 0:
              return this.gl.DECR;
            case 1:
              return this.gl.DECR_WRAP;
            case 2:
              return this.gl.INCR;
            case 3:
              return this.gl.INCR_WRAP;
            case 4:
              return this.gl.INVERT;
            case 5:
              return this.gl.KEEP;
            case 6:
              return this.gl.REPLACE;
            case 7:
              return this.gl.ZERO;
            default:
              return this.gl.KEEP;
          }
        },
        __getGLTriangleFace: function (a) {
          switch (a) {
            case 0:
              return this.gl.BACK;
            case 1:
              return this.gl.FRONT;
            case 2:
              return this.gl.FRONT_AND_BACK;
            case 3:
              return this.gl.NONE;
            default:
              return this.gl.FRONT_AND_BACK;
          }
        },
        __renderStage3D: function (a) {
          var b = a.context3D;
          if (
            null != b &&
            b != this &&
            null != b.__frontBufferTexture &&
            a.visible &&
            0 < this.backBufferHeight &&
            0 < this.backBufferWidth
          ) {
            if (null == this.__renderStage3DProgram) {
              var d = new ma();
              d.assemble(Vl.toString(1), 'm44 op, va0, vc0\nmov v0, va1');
              var f = new ma();
              f.assemble(
                Vl.toString(0),
                'tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1',
              );
              this.__renderStage3DProgram = this.createProgram();
              this.__renderStage3DProgram.upload(d.agalcode, f.agalcode);
            }
            this.setProgram(this.__renderStage3DProgram);
            this.setBlendFactors(2, 9);
            this.setColorMask(!0, !0, !0, !0);
            this.setCulling(3);
            this.setDepthTest(!1, 0);
            this.setStencilActions();
            this.setStencilReferenceValue(0, 0, 0);
            this.setScissorRectangle(null);
            this.setTextureAt(0, b.__frontBufferTexture);
            this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
            this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
            this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
            this.drawTriangles(a.__indexBuffer);
            this.__present = !0;
          }
        },
        __setGLBlend: function (a) {
          this.__contextState.__enableGLBlend != a &&
            (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND),
            (this.__contextState.__enableGLBlend = a));
        },
        __setGLBlendEquation: function (a) {
          this.__contextState.__glBlendEquation != a &&
            (this.gl.blendEquation(a),
            (this.__contextState.__glBlendEquation = a));
        },
        __setGLCullFace: function (a) {
          this.__contextState.__enableGLCullFace != a &&
            (a
              ? this.gl.enable(this.gl.CULL_FACE)
              : this.gl.disable(this.gl.CULL_FACE),
            (this.__contextState.__enableGLCullFace = a));
        },
        __setGLDepthTest: function (a) {
          this.__contextState.__enableGLDepthTest != a &&
            (a
              ? this.gl.enable(this.gl.DEPTH_TEST)
              : this.gl.disable(this.gl.DEPTH_TEST),
            (this.__contextState.__enableGLDepthTest = a));
        },
        __setGLFrontFace: function (a) {
          this.__contextState.__frontFaceGLCCW != a &&
            (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW),
            (this.__contextState.__frontFaceGLCCW = a));
        },
        __setGLScissorTest: function (a) {
          this.__contextState.__enableGLScissorTest != a &&
            (a
              ? this.gl.enable(this.gl.SCISSOR_TEST)
              : this.gl.disable(this.gl.SCISSOR_TEST),
            (this.__contextState.__enableGLScissorTest = a));
        },
        __setGLStencilTest: function (a) {
          this.__contextState.__enableGLStencilTest != a &&
            (a
              ? this.gl.enable(this.gl.STENCIL_TEST)
              : this.gl.disable(this.gl.STENCIL_TEST),
            (this.__contextState.__enableGLStencilTest = a));
        },
        __class__: sb,
      });
      var Ul = {
          fromString: function (a) {
            switch (a) {
              case 'dynamicDraw':
                return 0;
              case 'staticDraw':
                return 1;
              default:
                return null;
            }
          },
          toString: function (a) {
            switch (a) {
              case 0:
                return 'dynamicDraw';
              case 1:
                return 'staticDraw';
              default:
                return null;
            }
          },
        },
        Vl = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'fragment';
              case 1:
                return 'vertex';
              default:
                return null;
            }
          },
        },
        hm = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bgrPacked565';
              case 1:
                return 'bgra';
              case 2:
                return 'bgraPacked4444';
              case 3:
                return 'compressed';
              case 4:
                return 'compressedAlpha';
              case 5:
                return 'rgbaHalfFloat';
              default:
                return null;
            }
          },
        },
        Zk = function (a, b, d) {
          this.__context = a;
          this.__numIndices = b;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__usage = 0 == d ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
        };
      h['openfl.display3D.IndexBuffer3D'] = Zk;
      Zk.__name__ = 'openfl.display3D.IndexBuffer3D';
      Zk.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLElementArrayBuffer(this.__id),
            Ec.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, d) {
          if (null != a) {
            var f = b + d,
              g = this.__tempUInt16Array;
            if (
              null == this.__tempUInt16Array ||
              this.__tempUInt16Array.length < d
            )
              ((this.__tempUInt16Array = null != d ? new Uint16Array(d) : null),
                null != g && this.__tempUInt16Array.set(g));
            for (d = b; d < f; )
              ((g = d++), (this.__tempUInt16Array[g - b] = a.get(g)));
            this.uploadFromTypedArray(this.__tempUInt16Array);
          }
        },
        __class__: Zk,
      };
      var $k = function (a, b) {
        this.__context = a;
        this.__format = b;
        0 == this.__format
          ? ((this.__agalSamplerUsageMask = 0),
            (this.__agalUniforms = new Ba()),
            (this.__agalSamplerUniforms = new Ba()),
            (this.__agalAlphaSamplerUniforms = new Ba()),
            (this.__agalAlphaSamplerEnabled = []))
          : ((this.__glslAttribNames = []),
            (this.__glslAttribTypes = []),
            (this.__glslSamplerNames = []),
            (this.__glslUniformLocations = []),
            (this.__glslUniformNames = []),
            (this.__glslUniformTypes = []));
        this.__samplerStates = [];
      };
      h['openfl.display3D.Program3D'] = $k;
      $k.__name__ = 'openfl.display3D.Program3D';
      $k.prototype = {
        upload: function (a, b) {
          if (0 == this.__format) {
            var d = [];
            a = Yc.convertToGLSL(a, null);
            b = Yc.convertToGLSL(b, d);
            5 == Pa.level &&
              (Pa.info(a, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 399,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }),
              Pa.info(b, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 400,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }));
            this.__deleteShaders();
            this.__uploadFromGLSL(a, b);
            this.__buildAGALUniformList();
            b = 0;
            for (a = d.length; b < a; ) {
              var f = b++;
              this.__samplerStates[f] = d[f];
            }
          }
        },
        __buildAGALUniformList: function () {
          if (1 != this.__format) {
            var a = this.__context.gl;
            this.__agalUniforms.clear();
            this.__agalSamplerUniforms.clear();
            this.__agalAlphaSamplerUniforms.clear();
            this.__agalAlphaSamplerEnabled = [];
            this.__agalSamplerUsageMask = 0;
            var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
            for (var d = new Ba(), f = new Ba(), g = 0; g < b; ) {
              var k = g++,
                l = a.getActiveUniform(this.__glProgram, k),
                h = l.name,
                p = l.size,
                r = l.type;
              l = new yj(this.__context);
              l.name = h;
              l.size = p;
              l.type = r;
              l.location = a.getUniformLocation(this.__glProgram, l.name);
              h = l.name.indexOf('[');
              0 <= h && (l.name = l.name.substring(0, h));
              switch (l.type) {
                case 35674:
                  l.regCount = 2;
                  break;
                case 35675:
                  l.regCount = 3;
                  break;
                case 35676:
                  l.regCount = 4;
                  break;
                default:
                  l.regCount = 1;
              }
              l.regCount *= l.size;
              this.__agalUniforms.add(l);
              if ('vcPositionScale' == l.name) this.__agalPositionScale = l;
              else if (R.startsWith(l.name, 'vc'))
                ((l.regIndex = G.parseInt(l.name.substring(2))),
                  (l.regData = this.__context.__vertexConstants),
                  d.add(l));
              else if (R.startsWith(l.name, 'fc'))
                ((l.regIndex = G.parseInt(l.name.substring(2))),
                  (l.regData = this.__context.__fragmentConstants),
                  f.add(l));
              else if (
                R.startsWith(l.name, 'sampler') &&
                -1 == l.name.indexOf('alpha')
              )
                for (
                  l.regIndex = G.parseInt(l.name.substring(7)),
                    this.__agalSamplerUniforms.add(l),
                    h = 0,
                    p = l.regCount;
                  h < p;

                )
                  ((r = h++),
                    (this.__agalSamplerUsageMask |= 1 << (l.regIndex + r)));
              else
                R.startsWith(l.name, 'sampler') && R.endsWith(l.name, '_alpha')
                  ? ((h = l.name.indexOf('_') - 7),
                    (l.regIndex = G.parseInt(l.name.substring(7, 7 + h)) + 4),
                    this.__agalAlphaSamplerUniforms.add(l))
                  : R.startsWith(l.name, 'sampler') &&
                    R.endsWith(l.name, '_alphaEnabled') &&
                    ((l.regIndex = G.parseInt(l.name.substring(7))),
                    (this.__agalAlphaSamplerEnabled[l.regIndex] = l));
              5 == Pa.level &&
                Pa.verbose(
                  '' +
                    k +
                    ' name:' +
                    l.name +
                    ' type:' +
                    l.type +
                    ' size:' +
                    l.size +
                    ' location:' +
                    G.string(l.location),
                  {
                    fileName: 'openfl/display3D/Program3D.hx',
                    lineNumber: 577,
                    className: 'openfl.display3D.Program3D',
                    methodName: '__buildAGALUniformList',
                  },
                );
            }
            this.__agalVertexUniformMap = new dh(F.array(d));
            this.__agalFragmentUniformMap = new dh(F.array(f));
          }
        },
        __deleteShaders: function () {
          var a = this.__context.gl;
          null != this.__glProgram && (this.__glProgram = null);
          null != this.__glVertexShader &&
            (a.deleteShader(this.__glVertexShader),
            (this.__glVertexShader = null));
          null != this.__glFragmentShader &&
            (a.deleteShader(this.__glFragmentShader),
            (this.__glFragmentShader = null));
        },
        __disable: function () {},
        __enable: function () {
          var a = this.__context.gl;
          a.useProgram(this.__glProgram);
          if (0 == this.__format) {
            this.__agalVertexUniformMap.markAllDirty();
            this.__agalFragmentUniformMap.markAllDirty();
            for (var b = this.__agalSamplerUniforms.h; null != b; ) {
              var d = b.item;
              b = b.next;
              if (1 == d.regCount) a.uniform1i(d.location, d.regIndex);
              else throw new Rc('!!! TODO: uniform location on webgl');
            }
            for (b = this.__agalAlphaSamplerUniforms.h; null != b; )
              if (((d = b.item), (b = b.next), 1 == d.regCount))
                a.uniform1i(d.location, d.regIndex);
              else throw new Rc('!!! TODO: uniform location on webgl');
          }
        },
        __flush: function () {
          0 == this.__format &&
            (this.__agalVertexUniformMap.flush(),
            this.__agalFragmentUniformMap.flush());
        },
        __markDirty: function (a, b, d) {
          1 != this.__format &&
            (a
              ? this.__agalVertexUniformMap.markDirty(b, d)
              : this.__agalFragmentUniformMap.markDirty(b, d));
        },
        __setPositionScale: function (a) {
          1 != this.__format &&
            null != this.__agalPositionScale &&
            this.__context.gl.uniform4fv(this.__agalPositionScale.location, a);
        },
        __uploadFromGLSL: function (a, b) {
          var d = this.__context.gl;
          this.__glVertexSource = a;
          this.__glFragmentSource = b;
          this.__glVertexShader = d.createShader(d.VERTEX_SHADER);
          d.shaderSource(this.__glVertexShader, a);
          d.compileShader(this.__glVertexShader);
          if (
            0 == d.getShaderParameter(this.__glVertexShader, d.COMPILE_STATUS)
          ) {
            var f =
              'Error compiling vertex shader\n' +
              d.getShaderInfoLog(this.__glVertexShader);
            Pa.error(f + ('\n' + a), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 869,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            });
          }
          this.__glFragmentShader = d.createShader(d.FRAGMENT_SHADER);
          d.shaderSource(this.__glFragmentShader, b);
          d.compileShader(this.__glFragmentShader);
          0 ==
            d.getShaderParameter(this.__glFragmentShader, d.COMPILE_STATUS) &&
            ((f =
              'Error compiling fragment shader\n' +
              d.getShaderInfoLog(this.__glFragmentShader)),
            Pa.error(f + ('\n' + b), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 881,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
          this.__glProgram = d.createProgram();
          if (0 == this.__format)
            for (b = 0; 16 > b; ) {
              var g = b++;
              f = 'va' + g;
              -1 != a.indexOf(' ' + f) &&
                d.bindAttribLocation(this.__glProgram, g, f);
            }
          else
            for (b = 0, a = this.__glslAttribNames; b < a.length; )
              if (
                ((f = a[b]),
                ++b,
                -1 < f.indexOf('Position') && R.startsWith(f, 'openfl_'))
              ) {
                d.bindAttribLocation(this.__glProgram, 0, f);
                break;
              }
          d.attachShader(this.__glProgram, this.__glVertexShader);
          d.attachShader(this.__glProgram, this.__glFragmentShader);
          d.linkProgram(this.__glProgram);
          0 == d.getProgramParameter(this.__glProgram, d.LINK_STATUS) &&
            ((f =
              'Unable to initialize the shader program\n' +
              d.getProgramInfoLog(this.__glProgram)),
            Pa.error(f, {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 922,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
        },
        __class__: $k,
      };
      var yj = function (a) {
        this.context = a;
        this.isDirty = !0;
        this.regDataPointer = new Sk(null, 0);
      };
      h['openfl.display3D.Uniform'] = yj;
      yj.__name__ = 'openfl.display3D.Uniform';
      yj.prototype = {
        flush: function () {
          var a = this.context.gl,
            b = 4 * this.regIndex;
          switch (this.type) {
            case 35664:
              cm.uniform2fv(
                a,
                this.location,
                this.regData.subarray(b, b + 2 * this.regCount),
              );
              break;
            case 35665:
              var d = this.location;
              b = this.regData.subarray(b, b + 3 * this.regCount);
              var f = null;
              null != f ? a.uniform3fv(d, b, f, null) : a.uniform3fv(d, b);
              break;
            case 35666:
              d = this.location;
              b = this.regData.subarray(b, b + 4 * this.regCount);
              f = null;
              null != f ? a.uniform4fv(d, b, f, null) : a.uniform4fv(d, b);
              break;
            case 35674:
              Ec.uniformMatrix2fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 4 * this.size),
              );
              break;
            case 35675:
              Ec.uniformMatrix3fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 9 * this.size),
              );
              break;
            case 35676:
              Ec.uniformMatrix4fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 16 * this.size),
              );
              break;
            default:
              ((d = this.location),
                (b = this.regData.subarray(b, b + 4 * this.regCount)),
                (f = null),
                null != f ? a.uniform4fv(d, b, f, null) : a.uniform4fv(d, b));
          }
        },
        __class__: yj,
      };
      var dh = function (a) {
        this.__uniforms = a;
        this.__uniforms.sort(function (a, b) {
          return N.compare(a.regIndex, b.regIndex);
        });
        var b = 0;
        a = 0;
        for (var d = this.__uniforms; a < d.length; ) {
          var f = d[a];
          ++a;
          f.regIndex + f.regCount > b && (b = f.regIndex + f.regCount);
        }
        this.__registerLookup = ra.toObjectVector(null, b);
        a = 0;
        for (d = this.__uniforms; a < d.length; ) {
          f = d[a];
          ++a;
          b = 0;
          for (var g = f.regCount; b < g; ) {
            var k = b++;
            this.__registerLookup.set(f.regIndex + k, f);
          }
        }
        this.__anyDirty = this.__allDirty = !0;
      };
      h['openfl.display3D.UniformMap'] = dh;
      dh.__name__ = 'openfl.display3D.UniformMap';
      dh.prototype = {
        flush: function () {
          if (this.__anyDirty) {
            for (var a = 0, b = this.__uniforms; a < b.length; ) {
              var d = b[a];
              ++a;
              if (this.__allDirty || d.isDirty) (d.flush(), (d.isDirty = !1));
            }
            this.__anyDirty = this.__allDirty = !1;
          }
        },
        markAllDirty: function () {
          this.__anyDirty = this.__allDirty = !0;
        },
        markDirty: function (a, b) {
          if (!this.__allDirty)
            for (
              b = a + b,
                b > this.__registerLookup.get_length() &&
                  (b = this.__registerLookup.get_length());
              a < b;

            ) {
              var d = this.__registerLookup.get(a);
              null != d
                ? ((this.__anyDirty = d.isDirty = !0),
                  (a = d.regIndex + d.regCount))
                : ++a;
            }
        },
        __class__: dh,
      };
      var al = function (a, b, d, f) {
        this.__context = a;
        this.__numVertices = b;
        this.__vertexSize = d;
        a = this.__context.gl;
        this.__id = a.createBuffer();
        this.__stride = 4 * this.__vertexSize;
        this.__usage = 0 == Ul.fromString(f) ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
      };
      h['openfl.display3D.VertexBuffer3D'] = al;
      al.__name__ = 'openfl.display3D.VertexBuffer3D';
      al.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLArrayBuffer(this.__id),
            Ec.bufferData(b, b.ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, d) {
          if (null != a) {
            b *= this.__vertexSize;
            var f = d * this.__vertexSize;
            d = b + f;
            var g = this.__tempFloat32Array;
            if (
              null == this.__tempFloat32Array ||
              this.__tempFloat32Array.length < f
            )
              ((this.__tempFloat32Array =
                null != f ? new Float32Array(f) : null),
                null != g && this.__tempFloat32Array.set(g));
            for (f = b; f < d; )
              ((g = f++), (this.__tempFloat32Array[g - b] = a.get(g)));
            this.uploadFromTypedArray(
              Tg.toArrayBufferView(this.__tempFloat32Array),
            );
          }
        },
        __class__: al,
      };
      var Yc = function () {};
      h['openfl.display3D._internal.AGALConverter'] = Yc;
      Yc.__name__ = 'openfl.display3D._internal.AGALConverter';
      Yc.prefixFromType = function (a, b) {
        switch (a) {
          case 0:
            return 'va';
          case 1:
            return b == oe.VERTEX ? 'vc' : 'fc';
          case 2:
            return b == oe.VERTEX ? 'vt' : 'ft';
          case 3:
            return 'output_';
          case 4:
            return 'v';
          case 5:
            return 'sampler';
          default:
            throw new Rc('Invalid data!');
        }
      };
      Yc.readUInt64 = function (a) {
        var b = a.readInt();
        a = a.readInt();
        return new nb(a, b);
      };
      Yc.convertToGLSL = function (a, b) {
        a.position = 0;
        a.__endian = 1;
        var d = a.readByte() & 255;
        if (176 == d) return a.readUTF();
        if (160 != d) throw new Rc('Magic value must be 0xA0, may not be AGAL');
        var f = a.readInt();
        if (1 != f) throw new Rc('Version must be 1');
        if (161 != (a.readByte() & 255))
          throw new Rc('Shader type ID must be 0xA1');
        d = 0 == (a.readByte() & 255) ? oe.VERTEX : oe.FRAGMENT;
        for (var g = new zj(), k = ''; ; ) {
          f = a.position;
          if (!z.gt(Cd.get_length(a), f)) break;
          var l = a.readInt();
          f = a.readUnsignedInt();
          var h = Yc.readUInt64(a),
            p = Yc.readUInt64(a);
          f = sg.parse(f, d);
          h = Kf.parse(h, d, f.mask);
          var r = Kf.parse(p, d, f.mask);
          k += '\t';
          switch (l) {
            case 0:
              k += G.string(f.toGLSL() + ' = ' + h.toGLSL() + '; // mov');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 1:
              k += G.string(
                f.toGLSL() +
                  ' = ' +
                  h.toGLSL() +
                  ' + ' +
                  r.toGLSL() +
                  '; // add',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 2:
              k += G.string(
                f.toGLSL() +
                  ' = ' +
                  h.toGLSL() +
                  ' - ' +
                  r.toGLSL() +
                  '; // sub',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 3:
              k += G.string(
                f.toGLSL() +
                  ' = ' +
                  h.toGLSL() +
                  ' * ' +
                  r.toGLSL() +
                  '; // mul',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 4:
              k += G.string(
                f.toGLSL() +
                  ' = ' +
                  h.toGLSL() +
                  ' / ' +
                  r.toGLSL() +
                  '; // div',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 5:
              k =
                -1 < h.toGLSL().indexOf('.')
                  ? k +
                    G.string(f.toGLSL() + ' = 1.0 / ' + h.toGLSL() + '; // rcp')
                  : k +
                    G.string(
                      f.toGLSL() + ' = vec4(1) / ' + h.toGLSL() + '; // rcp',
                    );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 6:
              k += G.string(
                f.toGLSL() +
                  ' = min(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '); // min',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 7:
              k += G.string(
                f.toGLSL() +
                  ' = max(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '); // max',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 8:
              k += G.string(
                f.toGLSL() + ' = fract(' + h.toGLSL() + '); // frc',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 9:
              k += G.string(
                f.toGLSL() + ' = sqrt(' + h.toGLSL() + '); // sqrt',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 10:
              k += G.string(
                f.toGLSL() + ' = inversesqrt(' + h.toGLSL() + '); // rsq',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 11:
              k += G.string(
                f.toGLSL() +
                  ' = pow(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '); // pow',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 12:
              k += G.string(f.toGLSL() + ' = log2(' + h.toGLSL() + '); // log');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 13:
              k += G.string(f.toGLSL() + ' = exp2(' + h.toGLSL() + '); // exp');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 14:
              k += G.string(
                f.toGLSL() + ' = normalize(' + h.toGLSL() + '); // normalize',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 15:
              k += G.string(f.toGLSL() + ' = sin(' + h.toGLSL() + '); // sin');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 16:
              k += G.string(f.toGLSL() + ' = cos(' + h.toGLSL() + '); // cos');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 17:
              h.sourceMask = r.sourceMask = 7;
              k += G.string(
                f.toGLSL() +
                  ' = cross(vec3(' +
                  h.toGLSL() +
                  '), vec3(' +
                  r.toGLSL() +
                  ')); // crs',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 18:
              h.sourceMask = r.sourceMask = 7;
              k += G.string(
                f.toGLSL() +
                  ' = vec4(dot(vec3(' +
                  h.toGLSL() +
                  '), vec3(' +
                  r.toGLSL() +
                  ')))' +
                  f.getWriteMask() +
                  '; // dp3',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 19:
              h.sourceMask = r.sourceMask = 15;
              k += G.string(
                f.toGLSL() +
                  ' = vec4(dot(vec4(' +
                  h.toGLSL() +
                  '), vec4(' +
                  r.toGLSL() +
                  ')))' +
                  f.getWriteMask() +
                  '; // dp4',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 20:
              k += G.string(f.toGLSL() + ' = abs(' + h.toGLSL() + '); // abs');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 21:
              k += G.string(f.toGLSL() + ' = -' + h.toGLSL() + '; // neg');
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 22:
              k += G.string(
                f.toGLSL() +
                  ' = clamp(' +
                  h.toGLSL() +
                  ', 0.0, 1.0); // saturate',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              break;
            case 23:
              l = g.getRegisterUsage(r);
              l != ia.VECTOR_4 && l != ia.VECTOR_4_ARRAY
                ? ((k += G.string(
                    f.toGLSL() +
                      ' = ' +
                      h.toGLSL() +
                      ' * mat3(' +
                      r.toGLSL(!1) +
                      '); // m33',
                  )),
                  g.addDR(f, ia.VECTOR_4),
                  g.addSR(h, ia.VECTOR_4),
                  g.addSR(r, ia.MATRIX_4_4))
                : ((h.sourceMask = r.sourceMask = 7),
                  (k += G.string(
                    f.toGLSL() +
                      ' = vec3(dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 0) +
                      '), dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 1) +
                      '),dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 2) +
                      ')); // m33',
                  )),
                  g.addDR(f, ia.VECTOR_4),
                  g.addSR(h, ia.VECTOR_4),
                  g.addSR(r, ia.VECTOR_4, 0),
                  g.addSR(r, ia.VECTOR_4, 1),
                  g.addSR(r, ia.VECTOR_4, 2));
              break;
            case 24:
              l = g.getRegisterUsage(r);
              l != ia.VECTOR_4 && l != ia.VECTOR_4_ARRAY
                ? ((k += G.string(
                    f.toGLSL() +
                      ' = ' +
                      h.toGLSL() +
                      ' * ' +
                      r.toGLSL(!1) +
                      '; // m44',
                  )),
                  g.addDR(f, ia.VECTOR_4),
                  g.addSR(h, ia.VECTOR_4),
                  g.addSR(r, ia.MATRIX_4_4))
                : ((h.sourceMask = r.sourceMask = 15),
                  (k += G.string(
                    f.toGLSL() +
                      ' = vec4(dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 0) +
                      '), dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 1) +
                      '), dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 2) +
                      '), dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 3) +
                      ')); // m44',
                  )),
                  g.addDR(f, ia.VECTOR_4),
                  g.addSR(h, ia.VECTOR_4),
                  g.addSR(r, ia.VECTOR_4, 0),
                  g.addSR(r, ia.VECTOR_4, 1),
                  g.addSR(r, ia.VECTOR_4, 2),
                  g.addSR(r, ia.VECTOR_4, 3));
              break;
            case 25:
              f.mask &= 7;
              l = g.getRegisterUsage(r);
              l != ia.VECTOR_4 && l != ia.VECTOR_4_ARRAY
                ? ((k += G.string(
                    f.toGLSL() +
                      ' = ' +
                      h.toGLSL() +
                      ' * ' +
                      r.toGLSL(!1) +
                      '; // m34',
                  )),
                  g.addDR(f, ia.VECTOR_4),
                  g.addSR(h, ia.VECTOR_4),
                  g.addSR(r, ia.MATRIX_4_4))
                : ((h.sourceMask = r.sourceMask = 15),
                  (k += G.string(
                    f.toGLSL() +
                      ' = vec3(dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 0) +
                      '), dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 1) +
                      '),dot(' +
                      h.toGLSL(!0) +
                      ',' +
                      r.toGLSL(!0, 2) +
                      ')); // m34',
                  )),
                  g.addDR(f, ia.VECTOR_4),
                  g.addSR(h, ia.VECTOR_4),
                  g.addSR(r, ia.VECTOR_4, 0),
                  g.addSR(r, ia.VECTOR_4, 1),
                  g.addSR(r, ia.VECTOR_4, 2));
              break;
            case 39:
              h.sourceMask = 15;
              k += G.string(
                'if (any(lessThan(' + h.toGLSL() + ', vec4(0)))) discard;',
              );
              g.addSR(h, ia.VECTOR_4);
              break;
            case 40:
              r = tg.parse(p, d);
              switch (r.d) {
                case 0:
                  2 == r.t
                    ? ((h.sourceMask = 3),
                      g.addSaR(r, ia.SAMPLER_2D_ALPHA),
                      (k += G.string(
                        'if (' + r.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (k += G.string(
                        '\t\t' +
                          f.toGLSL() +
                          ' = vec4(texture2D(' +
                          r.toGLSL() +
                          ', ' +
                          h.toGLSL() +
                          ').xyz, texture2D(' +
                          r.toGLSL() +
                          '_alpha, ' +
                          h.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (k += '\t} else {\n'),
                      (k += G.string(
                        '\t\t' +
                          f.toGLSL() +
                          ' = texture2D(' +
                          r.toGLSL() +
                          ', ' +
                          h.toGLSL() +
                          '); // tex\n',
                      )),
                      (k += '\t}'))
                    : ((h.sourceMask = 3),
                      g.addSaR(r, ia.SAMPLER_2D),
                      (k += G.string(
                        f.toGLSL() +
                          ' = texture2D(' +
                          r.toGLSL() +
                          ', ' +
                          h.toGLSL() +
                          '); // tex',
                      )));
                  break;
                case 1:
                  2 == r.t
                    ? ((h.sourceMask = 7),
                      g.addSaR(r, ia.SAMPLER_CUBE_ALPHA),
                      (k += G.string(
                        'if (' + r.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (k += G.string(
                        '\t\t' +
                          f.toGLSL() +
                          ' = vec4(textureCube(' +
                          r.toGLSL() +
                          ', ' +
                          h.toGLSL() +
                          ').xyz, textureCube(' +
                          r.toGLSL() +
                          '_alpha, ' +
                          h.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (k += '\t} else {\n'),
                      (k += G.string(
                        '\t\t' +
                          f.toGLSL() +
                          ' = textureCube(' +
                          r.toGLSL() +
                          ', ' +
                          h.toGLSL() +
                          '); // tex',
                      )),
                      (k += '\t}'))
                    : ((h.sourceMask = 7),
                      (k += G.string(
                        f.toGLSL() +
                          ' = textureCube(' +
                          r.toGLSL() +
                          ', ' +
                          h.toGLSL() +
                          '); // tex',
                      )),
                      g.addSaR(r, ia.SAMPLER_CUBE));
              }
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              null != b && (b[r.n] = r.toSamplerState());
              break;
            case 41:
              h.sourceMask = r.sourceMask = 15;
              k += G.string(
                f.toGLSL() +
                  ' = vec4(greaterThanEqual(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '))' +
                  f.getWriteMask() +
                  '; // ste',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 42:
              h.sourceMask = r.sourceMask = 15;
              k += G.string(
                f.toGLSL() +
                  ' = vec4(lessThan(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '))' +
                  f.getWriteMask() +
                  '; // slt',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 44:
              h.sourceMask = r.sourceMask = 15;
              k += G.string(
                f.toGLSL() +
                  ' = vec4(equal(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '))' +
                  f.getWriteMask() +
                  '; // seq',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            case 45:
              h.sourceMask = r.sourceMask = 15;
              k += G.string(
                f.toGLSL() +
                  ' = vec4(notEqual(' +
                  h.toGLSL() +
                  ', ' +
                  r.toGLSL() +
                  '))' +
                  f.getWriteMask() +
                  '; // sne',
              );
              g.addDR(f, ia.VECTOR_4);
              g.addSR(h, ia.VECTOR_4);
              g.addSR(r, ia.VECTOR_4);
              break;
            default:
              throw new Rc('Opcode ' + l);
          }
          k += '\n';
        }
        null == Yc.limitedProfile &&
          ((f = Pd.context.getParameter(7938)),
          (Yc.limitedProfile =
            -1 < f.indexOf('OpenGL ES') || -1 < f.indexOf('WebGL')));
        a =
          '' +
          G.string(
            '// AGAL ' + (d == oe.VERTEX ? 'vertex' : 'fragment') + ' shader\n',
          );
        a = Yc.limitedProfile
          ? a +
            '#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n'
          : a + '#version 120\n';
        a += G.string(g.toGLSL(!1));
        d == oe.VERTEX && (a += 'uniform vec4 vcPositionScale;\n');
        a = a + 'void main() {\n' + G.string(g.toGLSL(!0));
        a += G.string(k);
        d == oe.VERTEX && (a += '\tgl_Position *= vcPositionScale;\n');
        return a + '}\n';
      };
      var sg = function () {};
      h['openfl.display3D._internal._AGALConverter.DestRegister'] = sg;
      sg.__name__ = 'openfl.display3D._internal._AGALConverter.DestRegister';
      sg.parse = function (a, b) {
        var d = new sg();
        d.programType = b;
        d.type = (a >>> 24) & 15;
        d.mask = (a >>> 16) & 15;
        d.n = a & 65535;
        return d;
      };
      sg.prototype = {
        getWriteMask: function () {
          var a = '.';
          0 != (this.mask & 1) && (a += 'x');
          0 != (this.mask & 2) && (a += 'y');
          0 != (this.mask & 4) && (a += 'z');
          0 != (this.mask & 8) && (a += 'w');
          return a;
        },
        toGLSL: function (a) {
          null == a && (a = !0);
          var b =
            3 == this.type
              ? this.programType == oe.VERTEX
                ? 'gl_Position'
                : 'gl_FragColor'
              : Yc.prefixFromType(this.type, this.programType) + this.n;
          a && 15 != this.mask && (b += this.getWriteMask());
          return b;
        },
        __class__: sg,
      };
      var oe = (K['openfl.display3D._internal._AGALConverter.ProgramType'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.ProgramType',
        __constructs__: null,
        VERTEX: {
          _hx_name: 'VERTEX',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: q,
        },
        FRAGMENT: {
          _hx_name: 'FRAGMENT',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: q,
        },
      });
      oe.__constructs__ = [oe.VERTEX, oe.FRAGMENT];
      var zj = function () {
        this.mEntries = [];
      };
      h['openfl.display3D._internal.RegisterMap'] = zj;
      zj.__name__ = 'openfl.display3D._internal.RegisterMap';
      zj.prototype = {
        add: function (a, b, d, f) {
          for (var g = 0, k = this.mEntries; g < k.length; ) {
            var h = k[g];
            ++g;
            if (h.type == a && h.name == b && h.number == d) {
              if (h.usage != f)
                throw new Rc(
                  'Cannot use register in multiple ways yet (mat4/vec4)',
                );
              return;
            }
          }
          h = new bl();
          h.type = a;
          h.name = b;
          h.number = d;
          h.usage = f;
          this.mEntries.push(h);
        },
        addDR: function (a, b) {
          this.add(a.type, a.toGLSL(!1), a.n, b);
        },
        addSaR: function (a, b) {
          this.add(a.type, a.toGLSL(), a.n, b);
        },
        addSR: function (a, b, d) {
          null == d && (d = 0);
          0 != a.d
            ? (this.add(
                a.itype,
                Yc.prefixFromType(a.itype, a.programType) + a.n,
                a.n,
                ia.VECTOR_4,
              ),
              this.add(
                a.type,
                Yc.prefixFromType(a.type, a.programType) + a.o,
                a.o,
                ia.VECTOR_4_ARRAY,
              ))
            : this.add(a.type, a.toGLSL(!1, d), a.n + d, b);
        },
        getRegisterUsage: function (a) {
          return 0 != a.d
            ? ia.VECTOR_4_ARRAY
            : this.getUsage(a.type, a.toGLSL(!1), a.n);
        },
        getUsage: function (a, b, d) {
          for (var f = 0, g = this.mEntries; f < g.length; ) {
            var k = g[f];
            ++f;
            if (k.type == a && k.name == b && k.number == d) return k.usage;
          }
          return ia.UNUSED;
        },
        toGLSL: function (a) {
          this.mEntries.sort(function (a, b) {
            return a.number - b.number;
          });
          this.mEntries.sort(function (a, b) {
            return Fa.__cast(a.type, Ol) - Fa.__cast(b.type, Ol);
          });
          for (var b = '', d = 0, f = this.mEntries.length; d < f; ) {
            var g = d++;
            g = this.mEntries[g];
            if (!((a && 2 != g.type) || (!a && 2 == g.type)) && 3 != g.type) {
              switch (g.type) {
                case 0:
                  b += 'attribute ';
                  break;
                case 1:
                  b += 'uniform ';
                  break;
                case 2:
                  b += '\t';
                  break;
                case 3:
                  break;
                case 4:
                  b += 'varying ';
                  break;
                case 5:
                  b += 'uniform ';
                  break;
                default:
                  throw new Rc();
              }
              switch (g.usage._hx_index) {
                case 0:
                  Pa.info('Missing switch patten: RegisterUsage.UNUSED', {
                    fileName: 'openfl/display3D/_internal/AGALConverter.hx',
                    lineNumber: 751,
                    className: 'openfl.display3D._internal.RegisterMap',
                    methodName: 'toGLSL',
                  });
                  break;
                case 1:
                  b += 'vec4 ';
                  break;
                case 2:
                  b += 'mat4 ';
                  break;
                case 3:
                  b += 'sampler2D ';
                  break;
                case 5:
                  b += 'samplerCube ';
                  break;
                case 7:
                  b += 'vec4 ';
              }
              g.usage == ia.SAMPLER_2D_ALPHA
                ? ((b += 'sampler2D '),
                  (b += G.string(g.name)),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'sampler2D '),
                  (b += G.string(g.name + '_alpha')),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'bool '),
                  (b += G.string(g.name + '_alphaEnabled')))
                : g.usage == ia.SAMPLER_CUBE_ALPHA
                  ? ((b += 'samplerCube '),
                    (b += G.string(g.name)),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'samplerCube '),
                    (b += G.string(g.name + '_alpha')),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'bool '),
                    (b += G.string(g.name + '_alphaEnabled')))
                  : (b =
                      g.usage == ia.VECTOR_4_ARRAY
                        ? b + G.string(g.name + '[128]')
                        : b + G.string(g.name));
              b += ';\n';
            }
          }
          return b;
        },
        __class__: zj,
      };
      var bl = function () {};
      h['openfl.display3D._internal._AGALConverter.RegisterMapEntry'] = bl;
      bl.__name__ =
        'openfl.display3D._internal._AGALConverter.RegisterMapEntry';
      bl.prototype = { __class__: bl };
      var ia = (K['openfl.display3D._internal._AGALConverter.RegisterUsage'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
        __constructs__: null,
        UNUSED: {
          _hx_name: 'UNUSED',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        VECTOR_4: {
          _hx_name: 'VECTOR_4',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        MATRIX_4_4: {
          _hx_name: 'MATRIX_4_4',
          _hx_index: 2,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_2D: {
          _hx_name: 'SAMPLER_2D',
          _hx_index: 3,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_2D_ALPHA: {
          _hx_name: 'SAMPLER_2D_ALPHA',
          _hx_index: 4,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_CUBE: {
          _hx_name: 'SAMPLER_CUBE',
          _hx_index: 5,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_CUBE_ALPHA: {
          _hx_name: 'SAMPLER_CUBE_ALPHA',
          _hx_index: 6,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        VECTOR_4_ARRAY: {
          _hx_name: 'VECTOR_4_ARRAY',
          _hx_index: 7,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
      });
      ia.__constructs__ = [
        ia.UNUSED,
        ia.VECTOR_4,
        ia.MATRIX_4_4,
        ia.SAMPLER_2D,
        ia.SAMPLER_2D_ALPHA,
        ia.SAMPLER_CUBE,
        ia.SAMPLER_CUBE_ALPHA,
        ia.VECTOR_4_ARRAY,
      ];
      var tg = function () {};
      h['openfl.display3D._internal._AGALConverter.SamplerRegister'] = tg;
      tg.__name__ = 'openfl.display3D._internal._AGALConverter.SamplerRegister';
      tg.parse = function (a, b) {
        var d = new tg();
        d.programType = b;
        b = 60;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.f = b;
        b = 56;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.m = b;
        b = 52;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.w = b;
        b = 48;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.s = b;
        b = 44;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.d = b;
        b = 40;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.t = b;
        b = 32;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.type = b;
        b = 16;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.b = b;
        b = a.low & 65535;
        d.n = b;
        return d;
      };
      tg.prototype = {
        toGLSL: function () {
          return Yc.prefixFromType(this.type, this.programType) + this.n;
        },
        toSamplerState: function () {
          switch (this.f) {
            case 0:
              var a = 5;
              break;
            case 1:
              a = 4;
              break;
            default:
              throw new Rc();
          }
          switch (this.m) {
            case 0:
              var b = 2;
              break;
            case 1:
              b = 1;
              break;
            case 2:
              b = 0;
              break;
            default:
              throw new Rc();
          }
          switch (this.w) {
            case 0:
              var d = 0;
              break;
            case 1:
              d = 2;
              break;
            default:
              throw new Rc();
          }
          return new Jf(
            d,
            a,
            b,
            ((this.b << 24) >> 24) / 8,
            4 == (this.s & 4),
            1 == (this.s & 1),
            2 == this.t,
          );
        },
        __class__: tg,
      };
      var Kf = function () {};
      h['openfl.display3D._internal._AGALConverter.SourceRegister'] = Kf;
      Kf.__name__ = 'openfl.display3D._internal._AGALConverter.SourceRegister';
      Kf.parse = function (a, b, d) {
        var f = new Kf();
        f.programType = b;
        b = 63;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 1;
        f.d = b;
        b = 48;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 3;
        f.q = b;
        b = 40;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        f.itype = b;
        b = 32;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        f.type = b;
        b = 24;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        f.s = b;
        b = 16;
        b =
          0 == b
            ? new nb(a.high, a.low)
            : 32 > b
              ? new nb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new nb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        f.o = b;
        b = a.low & 65535;
        f.n = b;
        f.sourceMask = d;
        return f;
      };
      Kf.prototype = {
        toGLSL: function (a, b) {
          null == b && (b = 0);
          null == a && (a = !0);
          if (3 == this.type)
            return this.programType == oe.VERTEX
              ? 'gl_Position'
              : 'gl_FragColor';
          var d = 228 == this.s && 15 == this.sourceMask,
            f = '';
          if (5 != this.type && !d) {
            if (0 != (this.sourceMask & 1))
              switch (this.s & 3) {
                case 0:
                  f += 'x';
                  break;
                case 1:
                  f += 'y';
                  break;
                case 2:
                  f += 'z';
                  break;
                case 3:
                  f += 'w';
              }
            if (0 != (this.sourceMask & 2))
              switch ((this.s >> 2) & 3) {
                case 0:
                  f += 'x';
                  break;
                case 1:
                  f += 'y';
                  break;
                case 2:
                  f += 'z';
                  break;
                case 3:
                  f += 'w';
              }
            if (0 != (this.sourceMask & 4))
              switch ((this.s >> 4) & 3) {
                case 0:
                  f += 'x';
                  break;
                case 1:
                  f += 'y';
                  break;
                case 2:
                  f += 'z';
                  break;
                case 3:
                  f += 'w';
              }
            if (0 != (this.sourceMask & 8))
              switch ((this.s >> 6) & 3) {
                case 0:
                  f += 'x';
                  break;
                case 1:
                  f += 'y';
                  break;
                case 2:
                  f += 'z';
                  break;
                case 3:
                  f += 'w';
              }
          }
          d = Yc.prefixFromType(this.type, this.programType);
          if (0 == this.d) d += this.n + b;
          else {
            d += this.o;
            var g = '';
            switch (this.q) {
              case 0:
                g = 'x';
                break;
              case 1:
                g = 'y';
                break;
              case 2:
                g = 'z';
                break;
              case 3:
                g = 'w';
            }
            g =
              Yc.prefixFromType(this.itype, this.programType) +
              this.n +
              '.' +
              g;
            d += '[ int(' + g + ') +' + b + ']';
          }
          a && '' != f && (d += '.' + f);
          return d;
        },
        __class__: Kf,
      };
      var bh = function () {
        this.backBufferEnableDepthAndStencil = !1;
        this.blendDestinationAlphaFactor = 9;
        this.blendSourceAlphaFactor = 2;
        this.blendDestinationRGBFactor = 9;
        this.blendSourceRGBFactor = 2;
        this.colorMaskAlpha =
          this.colorMaskBlue =
          this.colorMaskGreen =
          this.colorMaskRed =
            !0;
        this.culling = 3;
        this.depthCompareMode = 4;
        this.depthMask = !0;
        this.samplerStates = [];
        this.scissorRectangle = new ja();
        this.stencilCompareMode = 0;
        this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
        this.stencilReadMask = 255;
        this.stencilReferenceValue = 0;
        this.stencilTriangleFace = 2;
        this.stencilWriteMask = 255;
        this.textures = [];
        this.__frontFaceGLCCW = !0;
        this.__glBlendEquation = 32774;
      };
      h['openfl.display3D._internal.Context3DState'] = bh;
      bh.__name__ = 'openfl.display3D._internal.Context3DState';
      bh.prototype = { __class__: bh };
      var vb = function (a) {
        ka.call(this);
        this.__context = a;
        var b = this.__context.gl;
        this.__textureID = b.createTexture();
        this.__textureContext = this.__context.__context;
        if (null == vb.__supportsBGRA) {
          vb.__textureInternalFormat = b.RGBA;
          vb.__supportsBGRA = !1;
          vb.__textureFormat = b.RGBA;
          vb.__compressedFormats = new ic();
          vb.__compressedFormatsAlpha = new ic();
          a = b.getExtension('WEBGL_compressed_texture_s3tc');
          var d = b.getExtension('WEBGL_compressed_texture_etc1');
          b = b.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
          if (null != a) {
            var f = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            vb.__compressedFormats.h[0] = f;
            f = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            vb.__compressedFormatsAlpha.h[0] = f;
          }
          null != d &&
            ((f = d.COMPRESSED_RGB_ETC1_WEBGL),
            (vb.__compressedFormats.h[2] = f),
            (f = d.COMPRESSED_RGB_ETC1_WEBGL),
            (vb.__compressedFormatsAlpha.h[2] = f));
          null != b &&
            ((f = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG),
            (vb.__compressedFormats.h[1] = f),
            (f = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG),
            (vb.__compressedFormatsAlpha.h[1] = f));
        }
        this.__internalFormat = vb.__textureInternalFormat;
        this.__format = vb.__textureFormat;
      };
      h['openfl.display3D.textures.TextureBase'] = vb;
      vb.__name__ = 'openfl.display3D.textures.TextureBase';
      vb.__compressedFormats = null;
      vb.__compressedFormatsAlpha = null;
      vb.__textureFormat = null;
      vb.__textureInternalFormat = null;
      vb.__super__ = ka;
      vb.prototype = w(ka.prototype, {
        dispose: function () {
          var a = this.__context.gl;
          null != this.__alphaTexture &&
            (this.__alphaTexture.dispose(), (this.__alphaTexture = null));
          null != this.__textureID &&
            (a.deleteTexture(this.__textureID), (this.__textureID = null));
          null != this.__glFramebuffer &&
            (a.deleteFramebuffer(this.__glFramebuffer),
            (this.__glFramebuffer = null));
          null != this.__glDepthRenderbuffer &&
            (a.deleteRenderbuffer(this.__glDepthRenderbuffer),
            (this.__glDepthRenderbuffer = null));
          null != this.__glStencilRenderbuffer &&
            (a.deleteRenderbuffer(this.__glStencilRenderbuffer),
            (this.__glStencilRenderbuffer = null));
        },
        __getGLFramebuffer: function (a, b, d) {
          b = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = b.createFramebuffer()),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            b.framebufferTexture2D(
              b.FRAMEBUFFER,
              b.COLOR_ATTACHMENT0,
              b.TEXTURE_2D,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking &&
              ((d = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              d != b.FRAMEBUFFER_COMPLETE &&
                Pa.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    d +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 201,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )));
          a &&
            null == this.__glDepthRenderbuffer &&
            (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            0 != sb.__glDepthStencil
              ? ((this.__glStencilRenderbuffer = this.__glDepthRenderbuffer =
                  b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  sb.__glDepthStencil,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ))
              : ((this.__glDepthRenderbuffer = b.createRenderbuffer()),
                (this.__glStencilRenderbuffer = b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.DEPTH_COMPONENT16,
                  this.__width,
                  this.__height,
                ),
                b.bindRenderbuffer(
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                ),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.STENCIL_INDEX8,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                )),
            this.__context.__enableErrorChecking &&
              ((d = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              d != b.FRAMEBUFFER_COMPLETE &&
                Pa.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    d +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 239,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )),
            b.bindRenderbuffer(b.RENDERBUFFER, null));
          return this.__glFramebuffer;
        },
        __getTexture: function () {
          return this.__textureID;
        },
        __setSamplerState: function (a) {
          if (!a.equals(this.__samplerState)) {
            var b = this.__context.gl;
            this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP
              ? this.__context.__bindGLTextureCubeMap(this.__textureID)
              : this.__context.__bindGLTexture2D(this.__textureID);
            var d;
            switch (a.wrap) {
              case 0:
                var f = (d = b.CLAMP_TO_EDGE);
                break;
              case 1:
                d = b.CLAMP_TO_EDGE;
                f = b.REPEAT;
                break;
              case 2:
                f = d = b.REPEAT;
                break;
              case 3:
                d = b.REPEAT;
                f = b.CLAMP_TO_EDGE;
                break;
              default:
                throw new Xb('wrap bad enum');
            }
            var g = 5 == a.filter ? b.NEAREST : b.LINEAR;
            switch (a.mipfilter) {
              case 0:
                var k =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_LINEAR
                    : b.LINEAR_MIPMAP_LINEAR;
                break;
              case 1:
                k =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_NEAREST
                    : b.LINEAR_MIPMAP_NEAREST;
                break;
              case 2:
                k = 5 == a.filter ? b.NEAREST : b.LINEAR;
                break;
              default:
                throw new Xb('mipfiter bad enum');
            }
            b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, k);
            b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, g);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, d);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, f);
            null == this.__samplerState && (this.__samplerState = a.clone());
            this.__samplerState.copyFrom(a);
            return !0;
          }
          return !1;
        },
        __uploadFromImage: function (a) {
          var b = this.__context.gl,
            d;
          if (this.__textureTarget == b.TEXTURE_2D) {
            if (1 == a.buffer.bitsPerPixel) var f = (d = b.ALPHA);
            else ((d = vb.__textureInternalFormat), (f = vb.__textureFormat));
            this.__context.__bindGLTexture2D(this.__textureID);
            a.type == Xc.DATA || a.get_premultiplied()
              ? !a.get_premultiplied() &&
                a.get_transparent() &&
                b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1)
              : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
            a.type == Xc.DATA
              ? Ec.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  d,
                  a.buffer.width,
                  a.buffer.height,
                  0,
                  f,
                  b.UNSIGNED_BYTE,
                  a.get_data(),
                )
              : Ec.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  d,
                  f,
                  b.UNSIGNED_BYTE,
                  a.get_src(),
                );
            this.__context.__bindGLTexture2D(null);
          }
        },
        __class__: vb,
      });
      var xj = function (a, b, d, f, g) {
        vb.call(this, a);
        this.__width = this.__height = this.__size = b;
        this.__optimizeForRenderToTexture = f;
        this.__streamingLevels = g;
        this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
        this.__uploadedSides = 0;
      };
      h['openfl.display3D.textures.CubeTexture'] = xj;
      xj.__name__ = 'openfl.display3D.textures.CubeTexture';
      xj.__super__ = vb;
      xj.prototype = w(vb.prototype, {
        __getGLFramebuffer: function (a, b, d) {
          var f = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = f.createFramebuffer()),
            (this.__framebufferSurface = -1));
          if (
            this.__framebufferSurface != d &&
            ((this.__framebufferSurface = d),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            f.framebufferTexture2D(
              f.FRAMEBUFFER,
              f.COLOR_ATTACHMENT0,
              f.TEXTURE_CUBE_MAP_POSITIVE_X + d,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking)
          ) {
            var g = f.checkFramebufferStatus(f.FRAMEBUFFER);
            g != f.FRAMEBUFFER_COMPLETE &&
              Pa.error(
                'Error: Context3D.setRenderToTexture status:' +
                  g +
                  ' width:' +
                  this.__width +
                  ' height:' +
                  this.__height,
                {
                  fileName: 'openfl/display3D/textures/CubeTexture.hx',
                  lineNumber: 279,
                  className: 'openfl.display3D.textures.CubeTexture',
                  methodName: '__getGLFramebuffer',
                },
              );
          }
          return vb.prototype.__getGLFramebuffer.call(this, a, b, d);
        },
        __setSamplerState: function (a) {
          if (vb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_CUBE_MAP),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != sb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > sb.__glMaxTextureMaxAnisotropy &&
                (a = sb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(
                b.TEXTURE_CUBE_MAP,
                sb.__glTextureMaxAnisotropy,
                a,
              );
            }
            return !0;
          }
          return !1;
        },
        __class__: xj,
      });
      var ch = function (a, b, d, f, g) {
        vb.call(this, a);
        this.__width = b;
        this.__height = d;
        this.__optimizeForRenderToTexture = g;
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
        this.uploadFromTypedArray(null);
        g && this.__getGLFramebuffer(!0, 0, 0);
      };
      h['openfl.display3D.textures.RectangleTexture'] = ch;
      ch.__name__ = 'openfl.display3D.textures.RectangleTexture';
      ch.__super__ = vb;
      ch.prototype = w(vb.prototype, {
        uploadFromTypedArray: function (a) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          Ec.texImage2D(
            b,
            this.__textureTarget,
            0,
            this.__internalFormat,
            this.__width,
            this.__height,
            0,
            this.__format,
            b.UNSIGNED_BYTE,
            a,
          );
          this.__context.__bindGLTexture2D(null);
        },
        __setSamplerState: function (a) {
          if (vb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            if (0 != sb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > sb.__glMaxTextureMaxAnisotropy &&
                (a = sb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, sb.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: ch,
      });
      var wj = function (a, b, d, f, g, k) {
        vb.call(this, a);
        this.__width = b;
        this.__height = d;
        this.__optimizeForRenderToTexture = g;
        this.__streamingLevels = k;
        a = this.__context.gl;
        this.__textureTarget = a.TEXTURE_2D;
        this.__context.__bindGLTexture2D(this.__textureID);
        Ec.texImage2D(
          a,
          this.__textureTarget,
          0,
          this.__internalFormat,
          this.__width,
          this.__height,
          0,
          this.__format,
          a.UNSIGNED_BYTE,
          null,
        );
        this.__context.__bindGLTexture2D(null);
        g && this.__getGLFramebuffer(!0, 0, 0);
      };
      h['openfl.display3D.textures.Texture'] = wj;
      wj.__name__ = 'openfl.display3D.textures.Texture';
      wj.__super__ = vb;
      wj.prototype = w(vb.prototype, {
        __setSamplerState: function (a) {
          if (vb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_2D),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != sb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > sb.__glMaxTextureMaxAnisotropy &&
                (a = sb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, sb.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: wj,
      });
      var cl = function (a) {
        vb.call(this, a);
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
      };
      h['openfl.display3D.textures.VideoTexture'] = cl;
      cl.__name__ = 'openfl.display3D.textures.VideoTexture';
      cl.__super__ = vb;
      cl.prototype = w(vb.prototype, {
        dispose: function () {
          null != this.__netStream &&
            null != this.__netStream.__video &&
            this.__netStream.__video.removeEventListener(
              'timeupdate',
              m(this, this.__onTimeUpdate),
            );
          vb.prototype.dispose.call(this);
        },
        __onTimeUpdate: function (a) {
          null != this.__netStream &&
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState &&
            this.__textureReady();
        },
        __getTexture: function () {
          if (
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState
          ) {
            var a = this.__context.gl;
            this.__context.__bindGLTexture2D(this.__textureID);
            Ec.texImage2D(
              a,
              a.TEXTURE_2D,
              0,
              a.RGBA,
              a.RGBA,
              a.UNSIGNED_BYTE,
              this.__netStream.__video,
            );
            this.__cacheTime = this.__netStream.__video.currentTime;
          }
          return this.__textureID;
        },
        __textureReady: function () {
          this.videoWidth = this.__netStream.__video.videoWidth;
          this.videoHeight = this.__netStream.__video.videoHeight;
          var a = new sa('textureReady');
          this.dispatchEvent(a);
        },
        __class__: cl,
      });
      var Xb = function (a, b) {
        null == b && (b = 0);
        null == a && (a = '');
        Z.call(this, a);
        this.errorID = b;
        this.name = 'Error';
        this.__skipStack++;
      };
      h['openfl.errors.Error'] = Xb;
      Xb.__name__ = 'openfl.errors.Error';
      Xb.__super__ = Z;
      Xb.prototype = w(Z.prototype, {
        toString: function () {
          return null != this.get_message() ? this.get_message() : 'Error';
        },
        __class__: Xb,
      });
      var hf = function (a) {
        null == a && (a = '');
        Xb.call(this, a);
        this.name = 'ArgumentError';
        this.__skipStack++;
      };
      h['openfl.errors.ArgumentError'] = hf;
      hf.__name__ = 'openfl.errors.ArgumentError';
      hf.__super__ = Xb;
      hf.prototype = w(Xb.prototype, { __class__: hf });
      var ug = function (a) {
        null == a && (a = '');
        Xb.call(this, a);
        this.name = 'IOError';
        this.__skipStack++;
      };
      h['openfl.errors.IOError'] = ug;
      ug.__name__ = 'openfl.errors.IOError';
      ug.__super__ = Xb;
      ug.prototype = w(Xb.prototype, { __class__: ug });
      var eh = function (a, b) {
        ug.call(this, 'End of file was encountered');
        this.name = 'EOFError';
        this.errorID = 2030;
        this.__skipStack++;
      };
      h['openfl.errors.EOFError'] = eh;
      eh.__name__ = 'openfl.errors.EOFError';
      eh.__super__ = ug;
      eh.prototype = w(ug.prototype, { __class__: eh });
      var Rc = function (a) {
        null == a && (a = '');
        Xb.call(this, a, 0);
        this.name = 'IllegalOperationError';
        this.__skipStack++;
      };
      h['openfl.errors.IllegalOperationError'] = Rc;
      Rc.__name__ = 'openfl.errors.IllegalOperationError';
      Rc.__super__ = Xb;
      Rc.prototype = w(Xb.prototype, { __class__: Rc });
      var Gg = function (a) {
        null == a && (a = '');
        Xb.call(this, a, 0);
        this.name = 'RangeError';
        this.__skipStack++;
      };
      h['openfl.errors.RangeError'] = Gg;
      Gg.__name__ = 'openfl.errors.RangeError';
      Gg.__super__ = Xb;
      Gg.prototype = w(Xb.prototype, { __class__: Gg });
      var gf = function (a) {
        null == a && (a = '');
        Xb.call(this, a, 0);
        this.name = 'TypeError';
        this.__skipStack++;
      };
      h['openfl.errors.TypeError'] = gf;
      gf.__name__ = 'openfl.errors.TypeError';
      gf.__super__ = Xb;
      gf.prototype = w(Xb.prototype, { __class__: gf });
      var sa = function (a, b, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        this.type = a;
        this.bubbles = b;
        this.cancelable = d;
        this.eventPhase = 2;
      };
      h['openfl.events.Event'] = sa;
      sa.__name__ = 'openfl.events.Event';
      sa.prototype = {
        isDefaultPrevented: function () {
          return this.__preventDefault;
        },
        preventDefault: function () {
          this.cancelable && (this.__preventDefault = !0);
        },
        stopPropagation: function () {
          this.__isCanceled = !0;
        },
        __class__: sa,
      };
      var vg = function (a, b, d, f) {
        null == f && (f = !1);
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.activating = f;
      };
      h['openfl.events.ActivityEvent'] = vg;
      vg.__name__ = 'openfl.events.ActivityEvent';
      vg.__super__ = sa;
      vg.prototype = w(sa.prototype, { __class__: vg });
      var me = function (a, b, d, f) {
        null == f && (f = '');
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.text = f;
      };
      h['openfl.events.TextEvent'] = me;
      me.__name__ = 'openfl.events.TextEvent';
      me.__super__ = sa;
      me.prototype = w(sa.prototype, { __class__: me });
      var Hd = function (a, b, d, f, g) {
        null == g && (g = 0);
        null == f && (f = '');
        null == d && (d = !1);
        null == b && (b = !1);
        me.call(this, a, b, d, f);
        this.errorID = g;
      };
      h['openfl.events.ErrorEvent'] = Hd;
      Hd.__name__ = 'openfl.events.ErrorEvent';
      Hd.__super__ = me;
      Hd.prototype = w(me.prototype, { __class__: Hd });
      var Eg = function (a) {
        this.active = !1;
        this.reset(a);
      };
      h['openfl.events._EventDispatcher.DispatchIterator'] = Eg;
      Eg.__name__ = 'openfl.events._EventDispatcher.DispatchIterator';
      Eg.prototype = {
        copy: function () {
          this.isCopy || ((this.list = this.list.slice()), (this.isCopy = !0));
        },
        hasNext: function () {
          return this.index < this.list.length;
        },
        next: function () {
          return this.list[this.index++];
        },
        remove: function (a, b) {
          if (this.active)
            if (this.isCopy) {
              b = this.index;
              for (var d = this.list.length; b < d; ) {
                var f = b++;
                if (this.list[f] == a) {
                  this.list.splice(f, 1);
                  break;
                }
              }
            } else b < this.index && this.index--;
        },
        reset: function (a) {
          this.list = a;
          this.isCopy = !1;
          this.index = 0;
        },
        start: function () {
          this.active = !0;
        },
        stop: function () {
          this.active = !1;
        },
        __class__: Eg,
      };
      var ff = function (a, b, d, f) {
        f && ff.supportsWeakReference
          ? (this.weakRefCallback = new WeakRef(a))
          : (this.callback = a);
        this.useCapture = b;
        this.priority = d;
        this.useWeakReference = f;
      };
      h['openfl.events._EventDispatcher.Listener'] = ff;
      ff.__name__ = 'openfl.events._EventDispatcher.Listener';
      ff.prototype = {
        match: function (a, b) {
          var d = this.callback;
          return null != this.weakRefCallback &&
            ((d = this.weakRefCallback.deref()), null == d)
            ? !1
            : d == a
              ? this.useCapture == b
              : !1;
        },
        __class__: ff,
      };
      var Hf = function (a, b, d, f, g, k) {
        null == k && (k = 0);
        null == g && (g = !1);
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.keyCode = k;
        this.shiftKey = g;
        this.relatedObject = f;
      };
      h['openfl.events.FocusEvent'] = Hf;
      Hf.__name__ = 'openfl.events.FocusEvent';
      Hf.__super__ = sa;
      Hf.prototype = w(sa.prototype, { __class__: Hf });
      var Le = function (a, b, d, f, g) {
        null == g && (g = !1);
        null == f && (f = !1);
        null == d && (d = !1);
        null == b && (b = !1);
        vg.call(this, a, b, d);
        this.fullScreen = f;
        this.interactive = g;
      };
      h['openfl.events.FullScreenEvent'] = Le;
      Le.__name__ = 'openfl.events.FullScreenEvent';
      Le.__super__ = vg;
      Le.prototype = w(vg.prototype, { __class__: Le });
      var wg = function (a, b, d, f) {
        null == d && (d = !1);
        null == b && (b = !0);
        sa.call(this, a, b, d);
        this.device = f;
      };
      h['openfl.events.GameInputEvent'] = wg;
      wg.__name__ = 'openfl.events.GameInputEvent';
      wg.__super__ = sa;
      wg.prototype = w(sa.prototype, { __class__: wg });
      var fh = function (a, b, d, f, g) {
        null == g && (g = !1);
        null == f && (f = 0);
        null == d && (d = !1);
        null == b && (b = !1);
        this.responseHeaders = [];
        this.status = f;
        this.redirected = g;
        sa.call(this, a, b, d);
      };
      h['openfl.events.HTTPStatusEvent'] = fh;
      fh.__name__ = 'openfl.events.HTTPStatusEvent';
      fh.__super__ = sa;
      fh.prototype = w(sa.prototype, { __class__: fh });
      var xg = function (a, b, d, f, g) {
        null == g && (g = 0);
        null == f && (f = '');
        null == d && (d = !1);
        null == b && (b = !0);
        Hd.call(this, a, b, d, f, g);
      };
      h['openfl.events.IOErrorEvent'] = xg;
      xg.__name__ = 'openfl.events.IOErrorEvent';
      xg.__super__ = Hd;
      xg.prototype = w(Hd.prototype, { __class__: xg });
      var rj = function (a, b, d, f, g, k, h, r, p, t, q) {
        null == q && (q = !1);
        null == t && (t = !1);
        null == p && (p = !1);
        null == r && (r = !1);
        null == h && (h = !1);
        null == g && (g = 0);
        null == f && (f = 0);
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.charCode = f;
        this.keyCode = g;
        this.keyLocation = null != k ? k : 0;
        this.ctrlKey = h;
        this.altKey = r;
        this.shiftKey = p;
        this.controlKey = t;
        this.commandKey = q;
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.KeyboardEvent'] = rj;
      rj.__name__ = 'openfl.events.KeyboardEvent';
      rj.__super__ = sa;
      rj.prototype = w(sa.prototype, { __class__: rj });
      var zb = function (a, b, d, f, g, k, h, r, p, t, q, n, E, x) {
        null == x && (x = 0);
        null == E && (E = !1);
        null == n && (n = !1);
        null == q && (q = 0);
        null == t && (t = !1);
        null == p && (p = !1);
        null == r && (r = !1);
        null == h && (h = !1);
        null == g && (g = 0);
        null == f && (f = 0);
        null == d && (d = !1);
        null == b && (b = !0);
        sa.call(this, a, b, d);
        this.shiftKey = p;
        this.altKey = r;
        this.ctrlKey = h;
        this.bubbles = b;
        this.relatedObject = k;
        this.delta = q;
        this.localX = f;
        this.localY = g;
        this.buttonDown = t;
        this.commandKey = n;
        this.controlKey = E;
        this.clickCount = x;
        this.isRelatedObjectInaccessible = !1;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.MouseEvent'] = zb;
      zb.__name__ = 'openfl.events.MouseEvent';
      zb.__altKey = null;
      zb.__buttonDown = null;
      zb.__commandKey = null;
      zb.__controlKey = null;
      zb.__ctrlKey = null;
      zb.__shiftKey = null;
      zb.__create = function (a, b, d, f, g, k, h, r) {
        null == r && (r = 0);
        a = new zb(
          a,
          !0,
          !1,
          k.x,
          k.y,
          null,
          zb.__ctrlKey,
          zb.__altKey,
          zb.__shiftKey,
          zb.__buttonDown,
          r,
          zb.__commandKey,
          zb.__controlKey,
          d,
        );
        a.stageX = f;
        a.stageY = g;
        a.target = h;
        return a;
      };
      zb.__super__ = sa;
      zb.prototype = w(sa.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: zb,
      });
      var Aj = function (a, b, d, f) {
        null == d && (d = !1);
        null == b && (b = !1);
        this.info = f;
        sa.call(this, a, b, d);
      };
      h['openfl.events.NetStatusEvent'] = Aj;
      Aj.__name__ = 'openfl.events.NetStatusEvent';
      Aj.__super__ = sa;
      Aj.prototype = w(sa.prototype, { __class__: Aj });
      var Cf = function (a, b, d, f, g) {
        null == g && (g = 0);
        null == f && (f = 0);
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.bytesLoaded = f;
        this.bytesTotal = g;
      };
      h['openfl.events.ProgressEvent'] = Cf;
      Cf.__name__ = 'openfl.events.ProgressEvent';
      Cf.__super__ = sa;
      Cf.prototype = w(sa.prototype, { __class__: Cf });
      var kh = function (a, b, d, f, g, k) {
        null == k && (k = !0);
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.objectMatrix = f;
        this.objectColorTransform = g;
        this.allowSmoothing = k;
      };
      h['openfl.events.RenderEvent'] = kh;
      kh.__name__ = 'openfl.events.RenderEvent';
      kh.__super__ = sa;
      kh.prototype = w(sa.prototype, { __class__: kh });
      var Bj = function (a, b, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.data = new Ic(0);
        this.data.__endian = 1;
        this.position = 0;
      };
      h['openfl.events.SampleDataEvent'] = Bj;
      Bj.__name__ = 'openfl.events.SampleDataEvent';
      Bj.__super__ = sa;
      Bj.prototype = w(sa.prototype, {
        getBufferSize: function () {
          var a = (z.toFloat(Cd.get_length(this.data)) / z.toFloat(4) / 2) | 0;
          if (0 < a) {
            if (0 != a && 0 == (a & (a - 1)) && 2048 <= a && 8192 >= a)
              return ((this.tempBuffer = new Float32Array(2 * a)), a);
            throw new Xb(
              'To be consistent with flash the listener function registered to SampleDataEvent has to provide 2048, 4096 or 8192 samples if targeting HTML5.',
            );
          }
          return 0;
        },
        getSamples: function (a) {
          this.data.position = 0;
          this.tempBuffer = Yl.fromBytes(Cd.toBytes(this.data));
          this.leftChannel = a.outputBuffer.getChannelData(0);
          this.rightChannel = a.outputBuffer.getChannelData(1);
          for (
            var b = (a = 0),
              d = (z.toFloat(Cd.get_length(this.data)) / z.toFloat(2)) | 0;
            b < d;

          ) {
            var f = b++;
            this.leftChannel[f] = this.tempBuffer[a++];
            this.rightChannel[f] = this.tempBuffer[a++];
          }
        },
        __class__: Bj,
      });
      var Cj = function (a, b, d, f, g) {
        null == g && (g = 0);
        null == f && (f = '');
        null == d && (d = !1);
        null == b && (b = !1);
        Hd.call(this, a, b, d, f, g);
      };
      h['openfl.events.SecurityErrorEvent'] = Cj;
      Cj.__name__ = 'openfl.events.SecurityErrorEvent';
      Cj.__super__ = Hd;
      Cj.prototype = w(Hd.prototype, { __class__: Cj });
      var yg = function (a, b, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        sa.call(this, a, b, d);
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.TimerEvent'] = yg;
      yg.__name__ = 'openfl.events.TimerEvent';
      yg.__super__ = sa;
      yg.prototype = w(sa.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: yg,
      });
      var Jd = function (
        a,
        b,
        d,
        f,
        g,
        k,
        h,
        r,
        p,
        t,
        q,
        n,
        E,
        x,
        C,
        m,
        y,
        z,
        P,
        B,
      ) {
        null == m && (m = !1);
        null == C && (C = !1);
        null == x && (x = !1);
        null == E && (E = !1);
        null == n && (n = !1);
        null == t && (t = 0);
        null == p && (p = 0);
        null == r && (r = 0);
        null == h && (h = 0);
        null == k && (k = 0);
        null == g && (g = !1);
        null == f && (f = 0);
        null == d && (d = !1);
        null == b && (b = !0);
        sa.call(this, a, b, d);
        this.touchPointID = f;
        this.isPrimaryTouchPoint = g;
        this.localX = k;
        this.localY = h;
        this.sizeX = r;
        this.sizeY = p;
        this.pressure = t;
        this.relatedObject = q;
        this.ctrlKey = n;
        this.altKey = E;
        this.shiftKey = x;
        this.commandKey = C;
        this.controlKey = m;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.TouchEvent'] = Jd;
      Jd.__name__ = 'openfl.events.TouchEvent';
      Jd.__create = function (a, b, d, f, g, k) {
        a = new Jd(a, !0, !1, 0, !0, g.x, g.y, 1, 1, 1);
        a.stageX = d;
        a.stageY = f;
        a.target = k;
        return a;
      };
      Jd.__super__ = sa;
      Jd.prototype = w(sa.prototype, { __class__: Jd });
      var Mf = function (a, b, d, f) {
        null == d && (d = !0);
        null == b && (b = !0);
        Hd.call(this, a, b, d);
        this.error = f;
      };
      h['openfl.events.UncaughtErrorEvent'] = Mf;
      Mf.__name__ = 'openfl.events.UncaughtErrorEvent';
      Mf.__super__ = Hd;
      Mf.prototype = w(Hd.prototype, { __class__: Mf });
      var nj = function () {
        this.__enabled = !0;
        ka.call(this);
      };
      h['openfl.events.UncaughtErrorEvents'] = nj;
      nj.__name__ = 'openfl.events.UncaughtErrorEvents';
      nj.__super__ = ka;
      nj.prototype = w(ka.prototype, {
        addEventListener: function (a, b, d, f, g) {
          null == g && (g = !1);
          null == f && (f = 0);
          null == d && (d = !1);
          ka.prototype.addEventListener.call(this, a, b, d, f, g);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) && (this.__enabled = !0);
        },
        removeEventListener: function (a, b, d) {
          null == d && (d = !1);
          ka.prototype.removeEventListener.call(this, a, b, d);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) || (this.__enabled = !1);
        },
        __class__: nj,
      });
      var zg = function () {
        this.__leftExtension = this.__bottomExtension = 0;
        this.__needSecondBitmapData = !0;
        this.__numShaderPasses = 0;
        this.__preserveObject = !1;
        this.__rightExtension = 0;
        this.__shaderBlendMode = 10;
        this.__topExtension = 0;
        this.__smooth = !0;
      };
      h['openfl.filters.BitmapFilter'] = zg;
      zg.__name__ = 'openfl.filters.BitmapFilter';
      zg.prototype = {
        clone: function () {
          return new zg();
        },
        __applyFilter: function (a, b, d, f) {
          return b;
        },
        __initShader: function (a, b, d) {
          return null;
        },
        __class__: zg,
      };
      var Fc = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        rd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters.BitmapFilterShader'] = Fc;
      Fc.__name__ = 'openfl.filters.BitmapFilterShader';
      Fc.__super__ = rd;
      Fc.prototype = w(rd.prototype, { __class__: Fc });
      var Dj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec4 uColor;\n\t\tuniform float uStrength;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void)\n\t\t{\n            vec4 texel = texture2D(openfl_Texture, vTexCoord);\n\n            vec3 contributions = vec3(0.00443, 0.05399, 0.24197);\n            vec3 top = vec3(\n                texture2D(openfl_Texture, vBlurCoords[0]).a,\n                texture2D(openfl_Texture, vBlurCoords[1]).a,\n                texture2D(openfl_Texture, vBlurCoords[2]).a\n            );\n            vec3 bottom = vec3(\n                texture2D(openfl_Texture, vBlurCoords[3]).a,\n                texture2D(openfl_Texture, vBlurCoords[4]).a,\n                texture2D(openfl_Texture, vBlurCoords[5]).a\n            );\n\n            float a = texel.a * 0.39894;\n\t\t\ta += dot(top, contributions.xyz);\n            a += dot(bottom, contributions.zyx);\n\n\t\t\tgl_FragColor = uColor * clamp(a * uStrength, 0.0, 1.0);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void) {\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\n\t\t\tvec3 offset = vec3(0.5, 0.75, 1.0);\n\t\t\tvec2 r = uRadius / openfl_TextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * offset.z;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * offset.y;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * offset.x;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord + r * offset.x;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * offset.y;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * offset.z;\n\t\t}\n\t');
        Fc.call(this);
        this.uRadius.value = [0, 0];
        this.uColor.value = [0, 0, 0, 0];
        this.uStrength.value = [1];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.BlurAlphaShader'] = Dj;
      Dj.__name__ = 'openfl.filters._GlowFilter.BlurAlphaShader';
      Dj.__super__ = Fc;
      Dj.prototype = w(Fc.prototype, { __class__: Dj });
      var Ej = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Fc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.CombineKnockoutShader'] = Ej;
      Ej.__name__ = 'openfl.filters._GlowFilter.CombineKnockoutShader';
      Ej.__super__ = Fc;
      Ej.prototype = w(Fc.prototype, { __class__: Ej });
      var Fj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = src + glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Fc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.CombineShader'] = Fj;
      Fj.__name__ = 'openfl.filters._GlowFilter.CombineShader';
      Fj.__super__ = Fc;
      Fj.prototype = w(Fc.prototype, { __class__: Fj });
      var Gj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * src.a;\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Fc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.InnerCombineKnockoutShader'] = Gj;
      Gj.__name__ = 'openfl.filters._GlowFilter.InnerCombineKnockoutShader';
      Gj.__super__ = Fc;
      Gj.prototype = w(Fc.prototype, { __class__: Gj });
      var Hj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = vec4((src.rgb * (1.0 - glow.a)) + (glow.rgb * src.a), src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Fc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.InnerCombineShader'] = Hj;
      Hj.__name__ = 'openfl.filters._GlowFilter.InnerCombineShader';
      Hj.__super__ = Fc;
      Hj.prototype = w(Fc.prototype, { __class__: Hj });
      var Ij = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tvec4 texel = texture2D(openfl_Texture, vTexCoord);\n\t\t\tgl_FragColor = vec4(texel.rgb, 1.0 - texel.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\t\t}\n\t');
        Fc.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.InvertAlphaShader'] = Ij;
      Ij.__name__ = 'openfl.filters._GlowFilter.InvertAlphaShader';
      Ij.__super__ = Fc;
      Ij.prototype = w(Fc.prototype, { __class__: Ij });
      var Wc = function (a, b, d, f, g, k, h, r) {
        null == r && (r = !1);
        null == h && (h = !1);
        null == k && (k = 1);
        null == g && (g = 2);
        null == f && (f = 6);
        null == d && (d = 6);
        null == b && (b = 1);
        null == a && (a = 16711680);
        zg.call(this);
        this.__color = a;
        this.__alpha = b;
        this.__blurX = d;
        this.__blurY = f;
        this.__strength = g;
        this.__inner = h;
        this.__knockout = r;
        this.__quality = k;
        this.__updateSize();
        this.__renderDirty =
          this.__preserveObject =
          this.__needSecondBitmapData =
            !0;
      };
      h['openfl.filters.GlowFilter'] = Wc;
      Wc.__name__ = 'openfl.filters.GlowFilter';
      Wc.__super__ = zg;
      Wc.prototype = w(zg.prototype, {
        clone: function () {
          return new Wc(
            this.__color,
            this.__alpha,
            this.__blurX,
            this.__blurY,
            this.__strength,
            this.__quality,
            this.__inner,
            this.__knockout,
          );
        },
        __applyFilter: function (a, b, d, f) {
          var g = (this.__color >> 16) & 255,
            k = (this.__color >> 8) & 255,
            h = this.__color & 255;
          d = Wb.gaussianBlur(
            a.image,
            b.image,
            d.__toLimeRectangle(),
            f.__toLimeVector2(),
            this.__blurX,
            this.__blurY,
            this.__quality,
            this.__strength,
          );
          d.colorTransform(
            d.get_rect(),
            new Ib(0, 0, 0, this.__alpha, g, k, h, 0).__toLimeColorMatrix(),
          );
          return d == a.image ? a : b;
        },
        __initShader: function (a, b, d) {
          if (this.__inner && 0 == b) return Wc.__invertAlphaShader;
          a = b - (this.__inner ? 1 : 0);
          b = this.__horizontalPasses + this.__verticalPasses;
          if (a < b) {
            var f = Wc.__blurAlphaShader;
            a < this.__horizontalPasses
              ? ((d = 0.5 * Math.pow(0.5, a >> 1)),
                (f.uRadius.value[0] = this.get_blurX() * d),
                (f.uRadius.value[1] = 0))
              : ((d = 0.5 * Math.pow(0.5, (a - this.__horizontalPasses) >> 1)),
                (f.uRadius.value[0] = 0),
                (f.uRadius.value[1] = this.get_blurY() * d));
            f.uColor.value[0] = ((this.get_color() >> 16) & 255) / 255;
            f.uColor.value[1] = ((this.get_color() >> 8) & 255) / 255;
            f.uColor.value[2] = (this.get_color() & 255) / 255;
            f.uColor.value[3] = this.get_alpha();
            f.uStrength.value[0] = a == b - 1 ? this.__strength : 1;
            return f;
          }
          if (this.__inner) {
            if (this.__knockout)
              return (
                (f = Wc.__innerCombineKnockoutShader),
                (f.sourceBitmap.input = d),
                (f.offset.value[0] = 0),
                (f.offset.value[1] = 0),
                f
              );
            f = Wc.__innerCombineShader;
          } else {
            if (this.__knockout)
              return (
                (f = Wc.__combineKnockoutShader),
                (f.sourceBitmap.input = d),
                (f.offset.value[0] = 0),
                (f.offset.value[1] = 0),
                f
              );
            f = Wc.__combineShader;
          }
          f.sourceBitmap.input = d;
          f.offset.value[0] = 0;
          f.offset.value[1] = 0;
          return f;
        },
        __updateSize: function () {
          this.__rightExtension = this.__leftExtension =
            0 < this.__blurX ? Math.ceil(1.5 * this.__blurX) : 0;
          this.__bottomExtension = this.__topExtension =
            0 < this.__blurY ? Math.ceil(1.5 * this.__blurY) : 0;
          this.__calculateNumShaderPasses();
        },
        __calculateNumShaderPasses: function () {
          this.__horizontalPasses =
            0 >= this.__blurX
              ? 0
              : Math.round((this.__quality / 4) * this.__blurX) + 1;
          this.__verticalPasses =
            0 >= this.__blurY
              ? 0
              : Math.round((this.__quality / 4) * this.__blurY) + 1;
          this.__numShaderPasses =
            this.__horizontalPasses +
            this.__verticalPasses +
            (this.__inner ? 2 : 1);
        },
        get_alpha: function () {
          return this.__alpha;
        },
        get_blurX: function () {
          return this.__blurX;
        },
        get_blurY: function () {
          return this.__blurY;
        },
        get_color: function () {
          return this.__color;
        },
        __class__: Wc,
        __properties__: {
          get_color: 'get_color',
          get_blurY: 'get_blurY',
          get_blurX: 'get_blurX',
          get_alpha: 'get_alpha',
        },
      });
      var tj = function (a) {
        null != a && 16 == a.get_length()
          ? (this.rawData = a.concat(null))
          : (this.rawData = ra.toFloatVector(
              null,
              null,
              null,
              [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            ));
      };
      h['openfl.geom.Matrix3D'] = tj;
      tj.__name__ = 'openfl.geom.Matrix3D';
      tj.prototype = {
        append: function (a) {
          var b = this.rawData.get(0),
            d = this.rawData.get(4),
            f = this.rawData.get(8),
            g = this.rawData.get(12),
            k = this.rawData.get(1),
            h = this.rawData.get(5),
            r = this.rawData.get(9),
            p = this.rawData.get(13),
            t = this.rawData.get(2),
            q = this.rawData.get(6),
            n = this.rawData.get(10),
            E = this.rawData.get(14),
            x = this.rawData.get(3),
            C = this.rawData.get(7),
            m = this.rawData.get(11),
            y = this.rawData.get(15),
            z = a.rawData.get(0),
            P = a.rawData.get(4),
            B = a.rawData.get(8),
            K = a.rawData.get(12),
            v = a.rawData.get(1),
            w = a.rawData.get(5),
            F = a.rawData.get(9),
            J = a.rawData.get(13),
            I = a.rawData.get(2),
            S = a.rawData.get(6),
            G = a.rawData.get(10),
            Oa = a.rawData.get(14),
            L = a.rawData.get(3),
            W = a.rawData.get(7),
            rb = a.rawData.get(11);
          a = a.rawData.get(15);
          this.rawData.set(0, b * z + k * P + t * B + x * K);
          this.rawData.set(1, b * v + k * w + t * F + x * J);
          this.rawData.set(2, b * I + k * S + t * G + x * Oa);
          this.rawData.set(3, b * L + k * W + t * rb + x * a);
          this.rawData.set(4, d * z + h * P + q * B + C * K);
          this.rawData.set(5, d * v + h * w + q * F + C * J);
          this.rawData.set(6, d * I + h * S + q * G + C * Oa);
          this.rawData.set(7, d * L + h * W + q * rb + C * a);
          this.rawData.set(8, f * z + r * P + n * B + m * K);
          this.rawData.set(9, f * v + r * w + n * F + m * J);
          this.rawData.set(10, f * I + r * S + n * G + m * Oa);
          this.rawData.set(11, f * L + r * W + n * rb + m * a);
          this.rawData.set(12, g * z + p * P + E * B + y * K);
          this.rawData.set(13, g * v + p * w + E * F + y * J);
          this.rawData.set(14, g * I + p * S + E * G + y * Oa);
          this.rawData.set(15, g * L + p * W + E * rb + y * a);
        },
        appendTranslation: function (a, b, d) {
          var f = this.rawData;
          f.set(12, f.get(12) + a);
          f = this.rawData;
          f.set(13, f.get(13) + b);
          f = this.rawData;
          f.set(14, f.get(14) + d);
        },
        copyRawDataFrom: function (a, b, d) {
          null == d && (d = !1);
          null == b && (b = 0);
          d && this.transpose();
          for (var f = 0, g = a.get_length() - b; f < g; ) {
            var k = f++;
            this.rawData.set(k, a.get(k + b));
          }
          d && this.transpose();
        },
        identity: function () {
          this.rawData = ra.toFloatVector(
            null,
            null,
            null,
            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          );
        },
        transpose: function () {
          var a = this.rawData.copy();
          this.rawData.set(1, a.get(4));
          this.rawData.set(2, a.get(8));
          this.rawData.set(3, a.get(12));
          this.rawData.set(4, a.get(1));
          this.rawData.set(6, a.get(9));
          this.rawData.set(7, a.get(13));
          this.rawData.set(8, a.get(2));
          this.rawData.set(9, a.get(6));
          this.rawData.set(11, a.get(14));
          this.rawData.set(12, a.get(3));
          this.rawData.set(13, a.get(7));
          this.rawData.set(14, a.get(11));
        },
        __class__: tj,
      };
      var lh = function (a) {
        this.__colorTransform = new Ib();
        this.concatenatedColorTransform = new Ib();
        this.pixelBounds = new ja();
        this.__displayObject = a;
        this.__hasMatrix = !0;
      };
      h['openfl.geom.Transform'] = lh;
      lh.__name__ = 'openfl.geom.Transform';
      lh.prototype = {
        get_colorTransform: function () {
          return this.__colorTransform.__clone();
        },
        get_matrix: function () {
          return this.__hasMatrix
            ? this.__displayObject.__transform.clone()
            : null;
        },
        set_matrix: function (a) {
          if (null == a) return ((this.__hasMatrix = !1), null);
          this.__hasMatrix = !0;
          this.__hasMatrix3D = !1;
          null != this.__displayObject &&
            this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
          return a;
        },
        __setTransform: function (a, b, d, f, g, k) {
          if (null != this.__displayObject) {
            var h = this.__displayObject.__transform;
            if (
              h.a != a ||
              h.b != b ||
              h.c != d ||
              h.d != f ||
              h.tx != g ||
              h.ty != k
            ) {
              var r = 0 == b ? a : Math.sqrt(a * a + b * b);
              var p = 0 == d ? f : Math.sqrt(d * d + f * f);
              this.__displayObject.__scaleX = r;
              this.__displayObject.__scaleY = p;
              r = (180 / Math.PI) * Math.atan2(f, d) - 90;
              r != this.__displayObject.__rotation &&
                ((this.__displayObject.__rotation = r),
                (r *= Math.PI / 180),
                (this.__displayObject.__rotationSine = Math.sin(r)),
                (this.__displayObject.__rotationCosine = Math.cos(r)));
              h.a = a;
              h.b = b;
              h.c = d;
              h.d = f;
              h.tx = g;
              h.ty = k;
              this.__displayObject.__setTransformDirty();
            }
          }
        },
        __class__: lh,
        __properties__: {
          set_matrix: 'set_matrix',
          get_matrix: 'get_matrix',
          get_colorTransform: 'get_colorTransform',
        },
      };
      var ii = function (a, b, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = f;
        this.x = a;
        this.y = b;
        this.z = d;
      };
      h['openfl.geom.Vector3D'] = ii;
      ii.__name__ = 'openfl.geom.Vector3D';
      ii.prototype = { __class__: ii };
      var dl = function (a, b) {
        this.__webAudioContext = null;
        this.__urlLoading = !1;
        ka.call(this, this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.isBuffering = !1;
        this.url = null;
        null != a && this.load(a, b);
        null == a &&
          null != he.context &&
          'web' == he.context.type &&
          (this.__webAudioContext = he.context.web);
      };
      h['openfl.media.Sound'] = dl;
      dl.__name__ = 'openfl.media.Sound';
      dl.__super__ = ka;
      dl.prototype = w(ka.prototype, {
        load: function (a, b) {
          var d = this;
          this.url = a.url;
          this.__urlLoading = !0;
          this.dispatchEvent(new sa('open'));
          a = Aa.getLibrary('default');
          if (
            null != a &&
            Object.prototype.hasOwnProperty.call(
              a.cachedAudioBuffers.h,
              this.url,
            )
          )
            ((a = a.cachedAudioBuffers.h[this.url]),
              (b = null != a && null != a.data ? a.data.byteLength : 0),
              this.AudioBuffer_onURLProgress(b, b),
              this.AudioBuffer_onURLLoad(a));
          else
            xc.loadFromFile(this.url)
              .onProgress(m(this, this.AudioBuffer_onURLProgress))
              .onComplete(m(this, this.AudioBuffer_onURLLoad))
              .onError(function (a) {
                d.AudioBuffer_onURLLoad(null);
              });
        },
        AudioBuffer_onURLLoad: function (a) {
          this.__urlLoading = !1;
          null == a
            ? this.dispatchEvent(new xg('ioError'))
            : ((this.__buffer = a),
              this.dispatchEvent(new sa('complete')),
              null != this.__pendingSoundChannel &&
                ((this.__pendingAudioSource.buffer = this.__buffer),
                this.__pendingAudioSource.init(),
                this.__pendingSoundChannel.__initAudioSource(
                  this.__pendingAudioSource,
                )));
          this.__pendingAudioSource = this.__pendingSoundChannel = null;
        },
        AudioBuffer_onURLProgress: function (a, b) {
          var d = new Cf('progress');
          d.bytesLoaded = a;
          d.bytesTotal = b;
          this.dispatchEvent(d);
        },
        __class__: dl,
      });
      var el = function (a, b, d) {
        this.__firstRun = !0;
        ka.call(this, this);
        this.__sound = a;
        this.rightPeak = this.leftPeak = 1;
        this.__soundTransform = null != d ? d : new Lf();
        this.__initAudioSource(b);
        ge.__registerSoundChannel(this);
      };
      h['openfl.media.SoundChannel'] = el;
      el.__name__ = 'openfl.media.SoundChannel';
      el.__super__ = ka;
      el.prototype = w(ka.prototype, {
        stop: function () {
          ge.__unregisterSoundChannel(this);
          this.__isValid &&
            (null != this.__processor &&
              (this.__processor.disconnect(),
              (this.__processor = this.__processor.onaudioprocess = null)),
            this.__audioSource.stop(),
            this.__dispose());
        },
        __dispose: function () {
          this.__isValid &&
            (this.__audioSource.onComplete.remove(
              m(this, this.audioSource_onComplete),
            ),
            this.__audioSource.dispose(),
            (this.__audioSource = null),
            (this.__isValid = !1));
        },
        __startSampleData: function () {
          var a = this,
            b = this.__sound.__webAudioContext;
          if (null != b) {
            this.__sampleDataEvent = new Bj('sampleData');
            this.__sound.dispatchEvent(this.__sampleDataEvent);
            var d = this.__sampleDataEvent.getBufferSize();
            0 == d
              ? Ka.setTimeout(function () {
                  a.stop();
                  a.dispatchEvent(new sa('soundComplete'));
                }, 1)
              : ((this.__processor = b.createScriptProcessor(d, 0, 2)),
                this.__processor.connect(b.destination),
                (this.__processor.onaudioprocess = m(this, this.onSample)),
                b.resume());
          }
        },
        __updateTransform: function () {
          this.set_soundTransform(this.get_soundTransform());
        },
        __initAudioSource: function (a) {
          this.__audioSource = a;
          null != this.__audioSource &&
            (this.__audioSource.onComplete.add(
              m(this, this.audioSource_onComplete),
            ),
            (this.__isValid = !0),
            this.__audioSource.play());
        },
        get_position: function () {
          return this.__isValid
            ? this.__audioSource.get_currentTime() + this.__audioSource.offset
            : 0;
        },
        set_position: function (a) {
          if (!this.__isValid) return 0;
          this.__audioSource.set_currentTime(
            (a | 0) - this.__audioSource.offset,
          );
          return a;
        },
        get_soundTransform: function () {
          return this.__soundTransform.clone();
        },
        set_soundTransform: function (a) {
          if (null != a) {
            this.__soundTransform.pan = a.pan;
            this.__soundTransform.volume = a.volume;
            var b = ge.__soundTransform.pan + this.__soundTransform.pan;
            -1 > b && (b = -1);
            1 < b && (b = 1);
            var d = ge.__soundTransform.volume * this.__soundTransform.volume;
            this.__isValid &&
              (this.__audioSource.set_gain(d),
              (d = this.__audioSource.get_position()),
              (d.x = b),
              (d.z = -1 * Math.sqrt(1 - Math.pow(b, 2))),
              this.__audioSource.set_position(d));
          }
          return a;
        },
        audioSource_onComplete: function () {
          ge.__unregisterSoundChannel(this);
          this.__dispose();
          this.dispatchEvent(new sa('soundComplete'));
        },
        onSample: function (a) {
          if (this.__firstRun) {
            var b = !0;
            this.__firstRun = !1;
          } else
            (Cd.set_length(this.__sampleDataEvent.data, 0),
              this.__sound.dispatchEvent(this.__sampleDataEvent),
              (b = z.gt(Cd.get_length(this.__sampleDataEvent.data), 0)));
          b
            ? this.__sampleDataEvent.getSamples(a)
            : (this.stop(), this.dispatchEvent(new sa('soundComplete')));
        },
        __class__: el,
        __properties__: {
          set_soundTransform: 'set_soundTransform',
          get_soundTransform: 'get_soundTransform',
          set_position: 'set_position',
          get_position: 'get_position',
        },
      });
      var Wl = function () {};
      h['openfl.media.SoundLoaderContext'] = Wl;
      Wl.__name__ = 'openfl.media.SoundLoaderContext';
      var Lf = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 1);
        this.volume = a;
        this.pan = b;
        this.rightToRight =
          this.rightToLeft =
          this.leftToRight =
          this.leftToLeft =
            0;
      };
      h['openfl.media.SoundTransform'] = Lf;
      Lf.__name__ = 'openfl.media.SoundTransform';
      Lf.prototype = {
        clone: function () {
          return new Lf(this.volume, this.pan);
        },
        __class__: Lf,
      };
      var ge = function () {};
      h['openfl.media.SoundMixer'] = ge;
      ge.__name__ = 'openfl.media.SoundMixer';
      ge.__registerSoundChannel = function (a) {
        ge.__soundChannels.push(a);
      };
      ge.__unregisterSoundChannel = function (a) {
        M.remove(ge.__soundChannels, a);
      };
      var fl = function (a, b) {
        null == b && (b = 240);
        null == a && (a = 320);
        da.call(this);
        this.__drawableType = 8;
        this.__width = a;
        this.__height = b;
        this.__textureTime = -1;
        this.smoothing = !1;
        this.deblocking = 0;
      };
      h['openfl.media.Video'] = fl;
      fl.__name__ = 'openfl.media.Video';
      fl.__super__ = da;
      fl.prototype = w(da.prototype, {
        __enterFrame: function (a) {
          this.__renderable &&
            null != this.__stream &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var d = ja.__pool.get();
          d.setTo(0, 0, this.__width, this.__height);
          d.__transform(d, b);
          a.__expand(d.x, d.y, d.width, d.height);
          ja.__pool.release(d);
        },
        __getIndexBuffer: function (a) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context
          )
            ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBufferContext = a.__context),
              (this.__indexBuffer = a.createIndexBuffer(6)),
              this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData));
          return this.__indexBuffer;
        },
        __getTexture: function (a) {
          if (null == this.__stream || null == this.__stream.__video)
            return null;
          var b = a.__context.webgl,
            d = b.RGBA,
            f = b.RGBA;
          this.__stream.__closed ||
            this.__stream.__video.currentTime == this.__textureTime ||
            (null == this.__texture &&
              (this.__texture = a.createRectangleTexture(
                this.__stream.__video.videoWidth,
                this.__stream.__video.videoHeight,
                1,
                !1,
              )),
            a.__bindGLTexture2D(this.__texture.__textureID),
            Ec.texImage2D(
              b,
              b.TEXTURE_2D,
              0,
              d,
              f,
              b.UNSIGNED_BYTE,
              this.__stream.__video,
            ),
            (this.__textureTime = this.__stream.__video.currentTime));
          return this.__texture;
        },
        __getVertexBuffer: function (a) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            this.__currentWidth != this.get_width() ||
            this.__currentHeight != this.get_height()
          )
            ((this.__currentWidth = this.get_width()),
              (this.__currentHeight = this.get_height()),
              (this.__vertexBufferData = new Float32Array(20)),
              (this.__vertexBufferData[0] = this.get_width()),
              (this.__vertexBufferData[1] = this.get_height()),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[6] = this.get_height()),
              (this.__vertexBufferData[9] = 1),
              (this.__vertexBufferData[10] = this.get_width()),
              (this.__vertexBufferData[13] = 1),
              (this.__vertexBufferContext = a.__context),
              (this.__vertexBuffer = a.createVertexBuffer(3, 5)),
              this.__vertexBuffer.uploadFromTypedArray(
                Tg.toArrayBufferView(this.__vertexBufferData),
              ));
          return this.__vertexBuffer;
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (
            !k.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var h = this.__renderTransform,
            r = h.a * h.d - h.b * h.c;
          d = 0 == r ? -h.tx : (1 / r) * (h.c * (h.ty - b) + h.d * (a - h.tx));
          h = this.__renderTransform;
          r = h.a * h.d - h.b * h.c;
          a = 0 == r ? -h.ty : (1 / r) * (h.a * (b - h.ty) + h.b * (h.tx - a));
          return 0 < d && 0 < a && d <= this.__width && a <= this.__height
            ? (null == f || g || f.push(k), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          var d = I.__pool.get();
          d.setTo(a, b);
          this.__globalToLocal(d, d);
          a = 0 < d.x && 0 < d.y && d.x <= this.__width && d.y <= this.__height;
          I.__pool.release(d);
          return a;
        },
        get_height: function () {
          return this.__height * this.get_scaleY();
        },
        set_height: function (a) {
          if (1 != this.get_scaleY() || a != this.__height)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleY(1);
          return (this.__height = a);
        },
        get_width: function () {
          return this.__width * this.__scaleX;
        },
        set_width: function (a) {
          if (1 != this.__scaleX || this.__width != a)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleX(1);
          return (this.__width = a);
        },
        __class__: fl,
      });
      var Vj = function (a, b, d) {
        this.description = a;
        this.extension = b;
        this.macType = d;
      };
      h['openfl.net.FileFilter'] = Vj;
      Vj.__name__ = 'openfl.net.FileFilter';
      Vj.prototype = { __class__: Vj };
      var Ig = function () {
        ka.call(this);
        this.__inputControl = window.document.createElement('input');
        this.__inputControl.setAttribute('type', 'file');
        this.__inputControl.onclick = function (a) {
          a.cancelBubble = !0;
          a.stopPropagation();
        };
      };
      h['openfl.net.FileReference'] = Ig;
      Ig.__name__ = 'openfl.net.FileReference';
      Ig.__super__ = ka;
      Ig.prototype = w(ka.prototype, {
        browse: function (a) {
          var b = this,
            d = (this.__path = this.__data = null);
          if (null != a) {
            d = [];
            for (var f = 0; f < a.length; ) {
              var g = a[f];
              ++f;
              d.push(R.replace(R.replace(g.extension, '*.', '.'), ';', ','));
            }
            d = d.join(',');
          }
          null != d
            ? this.__inputControl.setAttribute('accept', d)
            : this.__inputControl.removeAttribute('accept');
          this.__inputControl.onchange = function () {
            if (0 == b.__inputControl.files.length)
              b.dispatchEvent(new sa('cancel'));
            else {
              var a = b.__inputControl.files[0],
                d = new Date(a.lastModified);
              b.modificationDate = d;
              b.creationDate = b.get_modificationDate();
              b.size = a.size;
              d = Ed.extension(a.name);
              b.type = '.' + d;
              b.name = Ed.withoutDirectory(a.name);
              b.__path = a.name;
              b.dispatchEvent(new sa('select'));
            }
          };
          this.__inputControl.click();
          return !0;
        },
        load: function () {
          var a = this,
            b = this.__inputControl.files[0],
            d = new FileReader();
          d.onload = function (b) {
            a.data = Cd.fromArrayBuffer(b.target.result);
            a.openFileDialog_onComplete();
          };
          d.onerror = function (b) {
            a.dispatchEvent(new xg('ioError'));
          };
          d.readAsArrayBuffer(b);
        },
        openFileDialog_onComplete: function () {
          this.dispatchEvent(new sa('complete'));
        },
        get_modificationDate: function () {
          return this.modificationDate;
        },
        __class__: Ig,
        __properties__: { get_modificationDate: 'get_modificationDate' },
      });
      var gl = function () {
        ka.call(this);
      };
      h['openfl.net.NetConnection'] = gl;
      gl.__name__ = 'openfl.net.NetConnection';
      gl.__super__ = ka;
      gl.prototype = w(ka.prototype, { __class__: gl });
      var hl = function (a, b) {
        ka.call(this);
        this.__connection = a;
        this.__soundTransform = new Lf();
        this.__video = window.document.createElement('video');
        this.__video.setAttribute('playsinline', '');
        this.__video.setAttribute('webkit-playsinline', '');
        this.__video.setAttribute('crossorigin', 'anonymous');
        this.__video.addEventListener('error', m(this, this.video_onError), !1);
        this.__video.addEventListener(
          'waiting',
          m(this, this.video_onWaiting),
          !1,
        );
        this.__video.addEventListener('ended', m(this, this.video_onEnd), !1);
        this.__video.addEventListener('pause', m(this, this.video_onPause), !1);
        this.__video.addEventListener(
          'seeking',
          m(this, this.video_onSeeking),
          !1,
        );
        this.__video.addEventListener(
          'playing',
          m(this, this.video_onPlaying),
          !1,
        );
        this.__video.addEventListener(
          'timeupdate',
          m(this, this.video_onTimeUpdate),
          !1,
        );
        this.__video.addEventListener(
          'loadstart',
          m(this, this.video_onLoadStart),
          !1,
        );
        this.__video.addEventListener(
          'stalled',
          m(this, this.video_onStalled),
          !1,
        );
        this.__video.addEventListener(
          'durationchanged',
          m(this, this.video_onDurationChanged),
          !1,
        );
        this.__video.addEventListener(
          'canplay',
          m(this, this.video_onCanPlay),
          !1,
        );
        this.__video.addEventListener(
          'canplaythrough',
          m(this, this.video_onCanPlayThrough),
          !1,
        );
        this.__video.addEventListener(
          'loadedmetadata',
          m(this, this.video_onLoadMetaData),
          !1,
        );
      };
      h['openfl.net.NetStream'] = hl;
      hl.__name__ = 'openfl.net.NetStream';
      hl.__super__ = ka;
      hl.prototype = w(ka.prototype, {
        __dispatchStatus: function (a) {
          a = new Aj('netStatus', !1, !1, { code: a });
          this.__connection.dispatchEvent(a);
          this.dispatchEvent(a);
        },
        __playStatus: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onPlayStatus;
              b({
                code: a,
                duration: this.__video.duration,
                position: this.__video.currentTime,
                speed: this.__video.playbackRate,
                start: this.__video.startTime,
              });
            } catch (d) {
              Na.lastError = d;
            }
        },
        video_onCanPlay: function (a) {
          this.__playStatus('NetStream.Play.canplay');
        },
        video_onCanPlayThrough: function (a) {
          this.__playStatus('NetStream.Play.canplaythrough');
        },
        video_onDurationChanged: function (a) {
          this.__playStatus('NetStream.Play.durationchanged');
        },
        video_onEnd: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__dispatchStatus('NetStream.Play.Complete');
          this.__playStatus('NetStream.Play.Complete');
        },
        video_onError: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__playStatus('NetStream.Play.error');
        },
        video_onLoadMetaData: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onMetaData;
              b({
                width: this.__video.videoWidth,
                height: this.__video.videoHeight,
                duration: this.__video.duration,
              });
            } catch (d) {
              Na.lastError = d;
            }
        },
        video_onLoadStart: function (a) {
          this.__playStatus('NetStream.Play.loadstart');
        },
        video_onPause: function (a) {
          this.__playStatus('NetStream.Play.pause');
        },
        video_onPlaying: function (a) {
          this.__dispatchStatus('NetStream.Play.Start');
          this.__playStatus('NetStream.Play.playing');
        },
        video_onSeeking: function (a) {
          this.__playStatus('NetStream.Play.seeking');
          this.__dispatchStatus('NetStream.Seek.Complete');
        },
        video_onStalled: function (a) {
          this.__playStatus('NetStream.Play.stalled');
        },
        video_onTimeUpdate: function (a) {
          null != this.__video &&
            ((this.time = this.__video.currentTime),
            this.__playStatus('NetStream.Play.timeupdate'));
        },
        video_onWaiting: function (a) {
          this.__playStatus('NetStream.Play.waiting');
        },
        __class__: hl,
      });
      var Pc = function () {
        ka.call(this);
        this.client = this;
        this.objectEncoding = Pc.defaultObjectEncoding;
      };
      h['openfl.net.SharedObject'] = Pc;
      Pc.__name__ = 'openfl.net.SharedObject';
      Pc.__sharedObjects = null;
      Pc.getLocal = function (a, b, d) {
        d = ' ~%&\\;:"\',<>?#'.split('');
        var f = !0;
        if (null == a || '' == a) f = !1;
        else
          for (var g = 0; g < d.length; ) {
            var k = d[g];
            ++g;
            if (-1 < a.indexOf(k)) {
              f = !1;
              break;
            }
          }
        if (!f) throw new Xb('Error #2134: Cannot create SharedObject.');
        null == Pc.__sharedObjects &&
          ((Pc.__sharedObjects = new Sa()),
          null != A.current && A.current.onExit.add(Pc.application_onExit));
        d = b + '/' + a;
        if (!Object.prototype.hasOwnProperty.call(Pc.__sharedObjects.h, d)) {
          f = null;
          try {
            var h = Ve.getLocalStorage();
            null == b &&
              (null != h &&
                ((f = h.getItem(window.location.href + ':' + a)),
                h.removeItem(window.location.href + ':' + a)),
              (b = window.location.pathname));
            null != h && null == f && (f = h.getItem(b + ':' + a));
          } catch (p) {
            Na.lastError = p;
          }
          h = new Pc();
          h.data = {};
          h.__localPath = b;
          h.__name = a;
          if (null != f && '' != f)
            try {
              var r = new bd(f);
              r.setResolver({
                resolveEnum: ib.resolveEnum,
                resolveClass: Pc.__resolveClass,
              });
              h.data = r.unserialize();
            } catch (p) {
              Na.lastError = p;
            }
          Pc.__sharedObjects.h[d] = h;
        }
        return Pc.__sharedObjects.h[d];
      };
      Pc.__resolveClass = function (a) {
        return null != a
          ? (R.startsWith(a, 'neash.') &&
              (a = R.replace(a, 'neash.', 'openfl.')),
            R.startsWith(a, 'native.') &&
              (a = R.replace(a, 'native.', 'openfl.')),
            R.startsWith(a, 'flash.') &&
              (a = R.replace(a, 'flash.', 'openfl.')),
            R.startsWith(a, 'openfl._v2.') &&
              (a = R.replace(a, 'openfl._v2.', 'openfl.')),
            R.startsWith(a, 'openfl._legacy.') &&
              (a = R.replace(a, 'openfl._legacy.', 'openfl.')),
            h[a])
          : null;
      };
      Pc.application_onExit = function (a) {
        a = Pc.__sharedObjects.h;
        for (var b = Object.keys(a), d = b.length, f = 0; f < d; )
          a[b[f++]].flush();
      };
      Pc.__super__ = ka;
      Pc.prototype = w(ka.prototype, {
        flush: function (a) {
          if (0 == N.fields(this.data).length) return 0;
          a = gd.run(this.data);
          try {
            var b = Ve.getLocalStorage();
            null != b &&
              (b.removeItem(this.__localPath + ':' + this.__name),
              b.setItem(this.__localPath + ':' + this.__name, a));
          } catch (d) {
            return ((Na.lastError = d), 1);
          }
          return 0;
        },
        __class__: Pc,
      });
      var il = function (a) {
        ka.call(this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.dataFormat = 1;
        null != a && this.load(a);
      };
      h['openfl.net.URLLoader'] = il;
      il.__name__ = 'openfl.net.URLLoader';
      il.__super__ = ka;
      il.prototype = w(ka.prototype, {
        load: function (a) {
          var b = this,
            d = new sa('open');
          this.dispatchEvent(d);
          0 == this.dataFormat
            ? ((d = new Pi()),
              this.__prepareRequest(d, a),
              d
                .load()
                .onProgress(m(this, this.httpRequest_onProgress))
                .onError(m(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = a;
                  a = new sa('complete');
                  b.dispatchEvent(a);
                }))
            : ((d = new ng()),
              this.__prepareRequest(d, a),
              d
                .load()
                .onProgress(m(this, this.httpRequest_onProgress))
                .onError(m(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = 2 == b.dataFormat ? Xl._new(a) : a;
                  a = new sa('complete');
                  b.dispatchEvent(a);
                }));
        },
        __dispatchResponseStatus: function () {
          var a = new fh(
            'httpResponseStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          a.responseURL = this.__httpRequest.uri;
          var b = [];
          if (
            this.__httpRequest.enableResponseHeaders &&
            null != this.__httpRequest.responseHeaders
          )
            for (
              var d = 0, f = this.__httpRequest.responseHeaders;
              d < f.length;

            ) {
              var g = f[d];
              ++d;
              b.push(new jl(g.name, g.value));
            }
          a.responseHeaders = b;
          this.dispatchEvent(a);
        },
        __dispatchStatus: function () {
          var a = new fh(
            'httpStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          this.dispatchEvent(a);
        },
        __prepareRequest: function (a, b) {
          this.__httpRequest = a;
          this.__httpRequest.uri = b.url;
          this.__httpRequest.method = b.method;
          if (null != b.data)
            if (ib.typeof(b.data) == C.TObject) {
              var d = N.fields(b.data);
              for (a = 0; a < d.length; ) {
                var f = d[a];
                ++a;
                this.__httpRequest.formData.h[f] = N.field(b.data, f);
              }
            } else
              this.__httpRequest.data =
                b.data instanceof yb ? b.data : yb.ofString(G.string(b.data));
          this.__httpRequest.contentType = b.contentType;
          if (null != b.requestHeaders)
            for (a = 0, d = b.requestHeaders; a < d.length; )
              ((f = d[a]),
                ++a,
                this.__httpRequest.headers.push(new Gi(f.name, f.value)));
          this.__httpRequest.followRedirects = b.followRedirects;
          this.__httpRequest.timeout = b.idleTimeout | 0;
          this.__httpRequest.manageCookies = b.manageCookies;
          this.__httpRequest.withCredentials = b.withCredentials;
          this.__httpRequest.userAgent = b.userAgent;
          this.__httpRequest.enableResponseHeaders = !0;
        },
        httpRequest_onError: function (a) {
          this.__dispatchResponseStatus();
          this.__dispatchStatus();
          this.__httpRequest instanceof Ye
            ? (this.data = this.__httpRequest.responseData)
            : this.__httpRequest instanceof ng &&
              (this.data = this.__httpRequest.responseData);
          var b = 403 == a ? new Cj('securityError') : new xg('ioError');
          b.text = G.string(a);
          this.dispatchEvent(b);
        },
        httpRequest_onProgress: function (a, b) {
          var d = new Cf('progress');
          d.bytesLoaded = a;
          d.bytesTotal = b;
          this.dispatchEvent(d);
        },
        __class__: il,
      });
      var Qh = function (a) {
        this.withCredentials = !1;
        null != a && (this.url = a);
        this.contentType = null;
        this.followRedirects = Je.followRedirects;
        this.idleTimeout = 0 < Je.idleTimeout ? Je.idleTimeout : 3e4;
        this.manageCookies = Je.manageCookies;
        this.method = 'GET';
        this.requestHeaders = [];
        this.userAgent = Je.userAgent;
      };
      h['openfl.net.URLRequest'] = Qh;
      Qh.__name__ = 'openfl.net.URLRequest';
      Qh.prototype = { __class__: Qh };
      var Je = function () {};
      h['openfl.net.URLRequestDefaults'] = Je;
      Je.__name__ = 'openfl.net.URLRequestDefaults';
      Je.userAgent = null;
      var jl = function (a, b) {
        null == b && (b = '');
        null == a && (a = '');
        this.name = a;
        this.value = b;
      };
      h['openfl.net.URLRequestHeader'] = jl;
      jl.__name__ = 'openfl.net.URLRequestHeader';
      jl.prototype = { __class__: jl };
      var Xl = {
          _new: function (a) {
            var b = {};
            null != a && Xl.decode(b, a);
            return b;
          },
          decode: function (a, b) {
            for (var d = N.fields(a), f = 0; f < d.length; ) {
              var g = d[f];
              ++f;
              N.deleteField(a, g);
            }
            d = b.split(';').join('&').split('&');
            for (f = 0; f < d.length; )
              if (((g = d[f]), ++f, (b = g.indexOf('=')), 0 < b)) {
                var k = M.substr(g, 0, b);
                k = decodeURIComponent(k.split('+').join(' '));
                g = M.substr(g, b + 1, null);
                a[k] = decodeURIComponent(g.split('+').join(' '));
              } else
                0 != b && (a[decodeURIComponent(g.split('+').join(' '))] = '');
          },
        },
        qg = function (a) {
          this.parentDomain = null != a ? a : qg.currentDomain;
        };
      h['openfl.system.ApplicationDomain'] = qg;
      qg.__name__ = 'openfl.system.ApplicationDomain';
      qg.prototype = { __class__: qg };
      var kl = function () {
        ka.call(this);
        this.clear();
      };
      h['openfl.text.StyleSheet'] = kl;
      kl.__name__ = 'openfl.text.StyleSheet';
      kl.__super__ = ka;
      kl.prototype = w(ka.prototype, {
        clear: function () {
          this.__styleNamesDirty = !1;
          this.__styleNames = null;
          this.__styles = new Sa();
        },
        __applyStyle: function (a, b) {
          a = a.toLowerCase();
          Object.prototype.hasOwnProperty.call(this.__styles.h, a) &&
            this.__applyStyleObject(this.__styles.h[a], b);
        },
        __applyStyleObject: function (a, b) {
          if (null != a) {
            var d = new xa('[0-9A-Fa-f]+', ''),
              f = new xa('[0-9]+', '');
            var g = a;
            null != g && Object.prototype.hasOwnProperty.call(g, 'color')
              ? ((g = Ad.__get(a, 'color')),
                (g = d.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.color = G.parseInt('0x' + d.matched(0)));
            g = a;
            null != g &&
              Object.prototype.hasOwnProperty.call(g, 'fontFamily') &&
              ((g = Ad.__get(a, 'fontFamily')),
              (b.font = this.__parseFont(null == g ? null : G.string(g))));
            g = a;
            null != g && Object.prototype.hasOwnProperty.call(g, 'fontSize')
              ? ((g = Ad.__get(a, 'fontSize')),
                (g = f.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.size = G.parseInt(f.matched(0)));
            g = a;
            if (
              null != g &&
              Object.prototype.hasOwnProperty.call(g, 'fontStyle')
            )
              switch (Ad.__get(a, 'fontStyle')) {
                case 'italic':
                  b.italic = !0;
                  break;
                case 'normal':
                  b.italic = !1;
              }
            g = a;
            if (
              null != g &&
              Object.prototype.hasOwnProperty.call(g, 'fontWeight')
            )
              switch (Ad.__get(a, 'fontWeight')) {
                case 'bold':
                  b.bold = !0;
                  break;
                case 'normal':
                  b.bold = !1;
              }
            g = a;
            null != g && Object.prototype.hasOwnProperty.call(g, 'leading')
              ? ((g = Ad.__get(a, 'leading')),
                (g = f.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.leading = G.parseInt(f.matched(0)));
            g = a;
            null != g &&
            Object.prototype.hasOwnProperty.call(g, 'letterSpacing')
              ? ((g = Ad.__get(a, 'letterSpacing')),
                (g = f.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.letterSpacing = parseFloat(f.matched(0)));
            g = a;
            null != g && Object.prototype.hasOwnProperty.call(g, 'marginLeft')
              ? ((g = Ad.__get(a, 'marginLeft')),
                (g = f.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.leftMargin = G.parseInt(f.matched(0)));
            g = a;
            null != g && Object.prototype.hasOwnProperty.call(g, 'marginRight')
              ? ((g = Ad.__get(a, 'marginRight')),
                (g = f.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.rightMargin = G.parseInt(f.matched(0)));
            g = a;
            if (
              null != g &&
              Object.prototype.hasOwnProperty.call(g, 'textAlign')
            )
              switch (Ad.__get(a, 'textAlign')) {
                case 'center':
                  b.align = 0;
                  break;
                case 'justify':
                  b.align = 2;
                  break;
                case 'left':
                  b.align = 3;
                  break;
                case 'right':
                  b.align = 4;
              }
            g = a;
            if (
              null != g &&
              Object.prototype.hasOwnProperty.call(g, 'textDecoration')
            )
              switch (Ad.__get(a, 'textDecoration')) {
                case 'none':
                  b.underline = !1;
                  break;
                case 'underline':
                  b.underline = !0;
              }
            g = a;
            null != g && Object.prototype.hasOwnProperty.call(g, 'textIndent')
              ? ((g = Ad.__get(a, 'textIndent')),
                (g = f.match(null == g ? null : G.string(g))))
              : (g = !1);
            g && (b.blockIndent = G.parseInt(f.matched(0)));
          }
        },
        __parseFont: function (a) {
          if (null == a) return null;
          -1 < a.indexOf(',') && (a = M.substr(a, 0, a.indexOf(',')));
          switch (a) {
            case 'mono':
              return '_typewriter';
            case 'sans-serif':
              return '_sans';
            case 'serif':
              return '_serif';
            default:
              return a;
          }
        },
        __class__: kl,
      });
      var Kc = function () {
        this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
        this.__mouseScrollVCounter = 0;
        this.condenseWhite = !1;
        wa.call(this);
        this.__wordSelection = !1;
        this.__drawableType = 7;
        this.__selectionIndex = this.__caretIndex = -1;
        this.__displayAsPassword = !1;
        this.__graphics = new cd(this);
        this.__textEngine = new Db(this);
        this.__layoutDirty = !0;
        this.__offsetY = this.__offsetX = 0;
        this.__mouseWheelEnabled = !0;
        this.__text = '';
        null == Kc.__defaultTextFormat &&
          ((Kc.__defaultTextFormat = new ue(
            'Times New Roman',
            12,
            0,
            !1,
            !1,
            !1,
            '',
            '',
            3,
            0,
            0,
            0,
            0,
          )),
          (Kc.__defaultTextFormat.blockIndent = 0),
          (Kc.__defaultTextFormat.bullet = !1),
          (Kc.__defaultTextFormat.letterSpacing = 0),
          (Kc.__defaultTextFormat.kerning = !1));
        this.__textFormat = Kc.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(
          new kd(this.__textFormat, 0, 0),
        );
        this.addEventListener('mouseDown', m(this, this.this_onMouseDown));
        this.addEventListener('focusIn', m(this, this.this_onFocusIn));
        this.addEventListener('focusOut', m(this, this.this_onFocusOut));
        this.addEventListener('keyDown', m(this, this.this_onKeyDown));
        this.addEventListener('mouseWheel', m(this, this.this_onMouseWheel));
      };
      h['openfl.text.TextField'] = Kc;
      Kc.__name__ = 'openfl.text.TextField';
      Kc.__defaultTextFormat = null;
      Kc.__super__ = wa;
      Kc.prototype = w(wa.prototype, {
        getCharBoundaries: function (a) {
          if (0 > a || a > this.__text.length - 1) return null;
          var b = new ja();
          return this.__getCharBoundaries(a, b) ? b : null;
        },
        getLineIndexOfChar: function (a) {
          if (0 > a || a > this.__text.length) return -1;
          this.__updateLayout();
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var d = b.next();
            if (d.startIndex <= a && d.endIndex >= a) return d.lineIndex;
          }
          return -1;
        },
        getLineLength: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return 0;
          for (
            var b = -1, d = -1, f = this.__textEngine.layoutGroups.iterator();
            f.hasNext();

          ) {
            var g = f.next();
            if (g.lineIndex == a) -1 == b && (b = g.startIndex);
            else if (g.lineIndex == a + 1) {
              d = g.startIndex;
              break;
            }
          }
          -1 == d && (d = this.__text.length);
          return d - b;
        },
        getLineOffset: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return -1;
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var d = b.next();
            if (d.lineIndex == a) return d.startIndex;
          }
          return 0;
        },
        getLineText: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return null;
          for (
            var b = -1, d = -1, f = this.__textEngine.layoutGroups.iterator();
            f.hasNext();

          ) {
            var g = f.next();
            if (g.lineIndex == a) -1 == b && (b = g.startIndex);
            else if (g.lineIndex == a + 1) {
              d = g.startIndex;
              break;
            }
          }
          -1 == d && (d = this.__text.length);
          return this.__textEngine.text.substring(b, d);
        },
        replaceSelectedText: function (a) {
          this.__replaceSelectedText(a, !1);
        },
        replaceText: function (a, b, d) {
          this.__replaceText(a, b, d, !1);
        },
        setSelection: function (a, b) {
          this.__selectionIndex = a;
          this.__caretIndex = b;
          this.__updateScrollV();
          this.__updateScrollH();
          null != this.stage &&
            this.stage.get_focus() == this &&
            (this.__stopCursorTimer(), this.__startCursorTimer());
        },
        setTextFormat: function (a, b, d) {
          null == d && (d = -1);
          null == b && (b = -1);
          var f = this.get_text().length;
          -1 == b ? (-1 == d && (d = f), (b = 0)) : -1 == d && (d = b + 1);
          if (b != d) {
            if (0 > b || 0 >= d || d < b || b >= f || d > f) throw new Gg();
            if (0 == b && d == f) {
              this.__textEngine.textFormatRanges.set_length(1);
              var g = this.__textEngine.textFormatRanges.get(0);
              g.start = 0;
              g.end = f;
              g.format.__merge(a);
            } else {
              f = 0;
              for (var k; f < this.__textEngine.textFormatRanges.get_length(); )
                if (
                  ((g = this.__textEngine.textFormatRanges.get(f)), g.end <= b)
                )
                  ++f;
                else if (g.start >= d) break;
                else if (g.start <= b && g.end >= d)
                  if (g.start == b && g.end == d) {
                    g.format = g.format.clone();
                    g.format.__merge(a);
                    break;
                  } else if (g.start == b)
                    ((k = new kd(g.format.clone(), b, d)),
                      k.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(f, k),
                      (g.start = d),
                      (f += 2));
                  else {
                    g.end == d
                      ? ((k = new kd(g.format.clone(), b, d)),
                        k.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(f + 1, k))
                      : ((k = new kd(g.format.clone(), b, d)),
                        k.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(f + 1, k),
                        (k = new kd(g.format.clone(), d, g.end)),
                        this.__textEngine.textFormatRanges.insertAt(f + 2, k));
                    g.end = b;
                    break;
                  }
                else if (g.start >= b && g.end <= d)
                  g.start == b
                    ? ((g.format = g.format.clone()),
                      g.format.__merge(a),
                      (g.end = d))
                    : this.__textEngine.textFormatRanges.removeAt(f);
                else if (g.start > b && g.end > b) {
                  g.start = d;
                  break;
                } else
                  g.start < b && g.end <= d
                    ? ((k = new kd(g.format.clone(), b, d)),
                      k.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(f + 1, k),
                      (g.end = b),
                      (f += 2))
                    : (++f,
                      Pa.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 1610,
                          className: 'openfl.text.TextField',
                          methodName: 'setTextFormat',
                        },
                      ));
            }
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __setStageReference: function (a) {
          this.__stopTextInput();
          wa.prototype.__setStageReference.call(this, a);
        },
        __allowMouseFocus: function () {
          return this.mouseEnabled;
        },
        __caretBeginningOfLine: function () {
          this.__caretIndex = this.getLineOffset(
            this.getLineIndexOfChar(this.__caretIndex),
          );
        },
        __caretBeginningOfNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1)
              : this.__text.length;
        },
        __caretBeginningOfPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          if (0 < a) {
            var b = this.getLineOffset(
              this.getLineIndexOfChar(this.__caretIndex),
            );
            this.__caretIndex =
              this.__caretIndex == b ? this.getLineOffset(a - 1) : b;
          }
        },
        __caretEndOfLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1) - 1
              : this.__text.length;
        },
        __caretNextCharacter: function () {
          this.__caretIndex < this.__text.length && this.__caretIndex++;
        },
        __caretNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          a < this.__textEngine.numLines - 1 &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a + 1,
            ));
        },
        __caretPreviousCharacter: function () {
          0 < this.__caretIndex && this.__caretIndex--;
        },
        __caretPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          0 < a &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a - 1,
            ));
        },
        __disableInput: function () {
          this.__inputEnabled &&
            null != this.stage &&
            (this.stage.window.__backend.setTextInputEnabled(!1),
            this.stage.window.onTextInput.remove(
              m(this, this.window_onTextInput),
            ),
            this.stage.window.onKeyDown.remove(m(this, this.window_onKeyDown)),
            (this.__inputEnabled = !1),
            this.__stopCursorTimer());
        },
        __dispatch: function (a) {
          if (2 == a.eventPhase && 'mouseUp' == a.type) {
            var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            null != b &&
              ((b = b.format.url),
              null != b &&
                '' != b &&
                (R.startsWith(b, 'event:')
                  ? this.dispatchEvent(
                      new me('link', !0, !1, M.substr(b, 6, null)),
                    )
                  : Ka.getURL(new Qh(b))));
          }
          return wa.prototype.__dispatch.call(this, a);
        },
        __enableInput: function () {
          if (null != this.stage) {
            var a = this.getBounds(this.stage);
            a = new xd(a.x, a.y, a.width, a.height);
            this.stage.window.setTextInputRect(a);
            this.stage.window.__backend.setTextInputEnabled(!0);
            this.__inputEnabled ||
              (this.stage.window.__backend.setTextInputEnabled(!0),
              this.stage.window.onTextInput.has(
                m(this, this.window_onTextInput),
              ) ||
                (this.stage.window.onTextInput.add(
                  m(this, this.window_onTextInput),
                ),
                this.stage.window.onKeyDown.add(
                  m(this, this.window_onKeyDown),
                )),
              (this.__inputEnabled = !0),
              this.__stopCursorTimer(),
              this.__startCursorTimer());
          }
        },
        __getBounds: function (a, b) {
          this.__updateLayout();
          var d = ja.__pool.get();
          d.copyFrom(this.__textEngine.bounds);
          d.offset(this.__offsetX, this.__offsetY);
          d.__transform(d, b);
          a.__expand(d.x, d.y, d.width, d.height);
          ja.__pool.release(d);
        },
        __getCharBoundaries: function (a, b) {
          if (0 > a || a > this.__text.length - 1) return !1;
          this.__updateLayout();
          for (
            var d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (a >= f.startIndex && a < f.endIndex)
              try {
                for (var g = f.offsetX, k = 0, h = a - f.startIndex; k < h; ) {
                  var r = k++;
                  g += f.positions[r];
                }
                b.setTo(
                  g,
                  f.offsetY,
                  f.positions[a - f.startIndex],
                  f.ascent + f.descent,
                );
                return !0;
              } catch (p) {
                Na.lastError = p;
              }
          }
          return !1;
        },
        __getCharIndexOnDifferentLine: function (a, b) {
          if (
            0 > a ||
            a > this.__text.length ||
            0 > b ||
            b > this.__textEngine.numLines - 1
          )
            return -1;
          for (
            var d = null,
              f = null,
              g = this.__textEngine.layoutGroups.iterator();
            g.hasNext();

          ) {
            var k = g.next();
            if (a >= k.startIndex && a <= k.endIndex) {
              d = k.offsetX;
              for (var h = 0, r = a - k.startIndex; h < r; ) {
                var p = h++;
                d += k.positions[p];
              }
              if (null != f) return this.__getPosition(d, f);
            }
            if (k.lineIndex == b) {
              f = k.offsetY + k.height / 2;
              k = 0;
              for (h = this.get_scrollV() - 1; k < h; )
                ((r = k++), (f -= this.__textEngine.lineHeights.get(r)));
              if (null != d) return this.__getPosition(d, f);
            }
          }
          return -1;
        },
        __getCursor: function () {
          var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
          return null != a && '' != a.format.url
            ? 'button'
            : this.__textEngine.selectable
              ? 'ibeam'
              : null;
        },
        __getGroup: function (a, b, d) {
          null == d && (d = !1);
          this.__updateLayout();
          a += this.get_scrollH();
          for (var f = 0, g = this.get_scrollV() - 1; f < g; ) {
            var k = f++;
            b += this.__textEngine.lineHeights.get(k);
          }
          !d &&
            b > this.__textEngine.textHeight &&
            (b = this.__textEngine.textHeight);
          var h = !0;
          f = 0;
          for (g = this.__textEngine.layoutGroups.get_length(); f < g; ) {
            k = f++;
            var r = this.__textEngine.layoutGroups.get(k);
            k =
              k < this.__textEngine.layoutGroups.get_length() - 1
                ? this.__textEngine.layoutGroups.get(k + 1)
                : null;
            h &&
              (b < r.offsetY && (b = r.offsetY),
              a < r.offsetX && (a = r.offsetX),
              (h = !1));
            if (
              (b >= r.offsetY && b <= r.offsetY + r.height) ||
              (!d && null == k)
            )
              if (
                (a >= r.offsetX && a <= r.offsetX + r.width) ||
                (!d && (null == k || k.lineIndex != r.lineIndex))
              )
                return r;
          }
          return null;
        },
        __getPosition: function (a, b) {
          b = this.__getGroup(a, b);
          if (null == b) return this.__text.length;
          for (var d = 0, f = 0, g = b.positions.length; f < g; ) {
            var k = f++;
            d += b.positions[k];
            if (a <= b.offsetX + d) {
              if (a <= b.offsetX + (d - b.positions[k]) + b.positions[k] / 2)
                return b.startIndex + k;
              if (b.startIndex + k < b.endIndex) return b.startIndex + k + 1;
              break;
            }
          }
          return b.endIndex;
        },
        __getPositionByIdentifier: function (a, b, d) {
          a = this.__getPosition(a, b);
          d = d ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          b = this.__text.charAt(a);
          if (this.__specialSelectionInitialIndex <= a)
            for (; -1 == d.indexOf(b) && a < this.__text.length; )
              (++a, (b = this.__text.charAt(a)));
          else {
            for (; -1 == d.indexOf(b) && 0 < a; )
              (--a, (b = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          }
          return a;
        },
        __getOppositeIdentifierBound: function (a, b) {
          b = b ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          var d = this.__text.charAt(a);
          if (a <= this.__caretIndex) {
            for (; -1 == b.indexOf(d) && 0 < a; )
              (--a, (d = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          } else
            for (; -1 == b.indexOf(d) && a < this.__text.length; )
              (++a, (d = this.__text.charAt(a)));
          return a;
        },
        __hitTest: function (a, b, d, f, g, k) {
          if (
            !k.get_visible() ||
            this.__isMask ||
            (g && !this.mouseEnabled) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          this.__updateLayout();
          d = this.__renderTransform;
          g = d.a * d.d - d.b * d.c;
          var h =
            0 == g ? -d.tx : (1 / g) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          d = this.__renderTransform;
          g = d.a * d.d - d.b * d.c;
          return this.__textEngine.bounds.contains(
            h,
            0 == g ? -d.ty : (1 / g) * (d.a * (b - d.ty) + d.b * (d.tx - a)),
          )
            ? (null != f && f.push(k), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          this.__getRenderTransform();
          this.__updateLayout();
          var d = this.__renderTransform,
            f = d.a * d.d - d.b * d.c,
            g =
              0 == f ? -d.tx : (1 / f) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          d = this.__renderTransform;
          f = d.a * d.d - d.b * d.c;
          return this.__textEngine.bounds.contains(
            g,
            0 == f ? -d.ty : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a)),
          )
            ? !0
            : !1;
        },
        __replaceSelectedText: function (a, b) {
          null == b && (b = !0);
          null == a && (a = '');
          if ('' != a || this.__selectionIndex != this.__caretIndex) {
            var d =
                this.__caretIndex < this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex,
              f =
                this.__caretIndex > this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex;
            if (
              !(
                d == f &&
                0 < this.__textEngine.maxChars &&
                this.__text.length == this.__textEngine.maxChars
              )
            ) {
              d > this.__text.length && (d = this.__text.length);
              f > this.__text.length && (f = this.__text.length);
              if (f < d) {
                var g = f;
                f = d;
                d = g;
              }
              0 > d && (d = 0);
              this.__replaceText(d, f, a, b);
            }
          }
        },
        __replaceText: function (a, b, d, f) {
          if (!(b < a || 0 > a || b > this.__text.length || null == d)) {
            f &&
              ((d = this.__textEngine.restrictText(d)),
              0 < this.__textEngine.maxChars &&
                ((f =
                  this.__textEngine.maxChars - this.__text.length + (b - a)),
                0 >= f ? (d = '') : f < d.length && (d = M.substr(d, 0, f))));
            this.__updateText(
              this.__text.substring(0, a) + d + this.__text.substring(b),
            );
            f = d.length - (b - a);
            for (
              var g = 0, k;
              g < this.__textEngine.textFormatRanges.get_length();

            ) {
              k = this.__textEngine.textFormatRanges.get(g);
              if (a == b)
                k.start == k.end
                  ? 0 != k.start
                    ? Pa.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 2184,
                          className: 'openfl.text.TextField',
                          methodName: '__replaceText',
                        },
                      )
                    : (k.end += f)
                  : k.end >= a &&
                    (k.start >= a
                      ? ((k.start += f), (k.end += f))
                      : k.start < a && k.end >= b && (k.end += f));
              else if (k.end > a)
                if (k.start > b) ((k.start += f), (k.end += f));
                else if (k.start <= a && k.end > b) k.end += f;
                else if (k.start >= a && k.end <= b) {
                  k = this.__textEngine.textFormatRanges;
                  k.__tempIndex = g--;
                  for (var h = 0, r = []; h < r.length; ) {
                    var p = r[h++];
                    k.insertAt(k.__tempIndex, p);
                    k.__tempIndex++;
                  }
                  k.splice(k.__tempIndex, 1);
                } else
                  k.end > b && k.start > a && k.start <= b
                    ? ((k.start = a), (k.end += f))
                    : k.start < a && k.end > a && k.end <= b && (k.end = a);
              ++g;
            }
            0 == this.__textEngine.textFormatRanges.get_length()
              ? this.__textEngine.textFormatRanges.push(
                  new kd(this.get_defaultTextFormat().clone(), 0, d.length),
                )
              : a == b && 0 < this.__textEngine.textFormatRanges.get(0).start
                ? this.__textEngine.textFormatRanges.unshift(
                    new kd(
                      this.get_defaultTextFormat().clone(),
                      0,
                      this.__textEngine.textFormatRanges.get(0).start,
                    ),
                  )
                : a != b &&
                  this.__textEngine.textFormatRanges.get(
                    this.__textEngine.textFormatRanges.get_length() - 1,
                  ).end < this.__text.length &&
                  this.__textEngine.textFormatRanges.push(
                    new kd(
                      this.get_defaultTextFormat().clone(),
                      this.__textEngine.textFormatRanges.get(
                        this.__textEngine.textFormatRanges.get_length() - 1,
                      ).end,
                      this.__text.length,
                    ),
                  );
            this.__selectionIndex = this.__caretIndex = a + d.length;
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __startCursorTimer: function () {
          1 == this.get_type()
            ? (this.__inputEnabled &&
                ((this.__cursorTimer = wf.delay(
                  m(this, this.__startCursorTimer),
                  600,
                )),
                (this.__showCursor = !this.__showCursor)),
              (this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()))
            : this.get_selectable() &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __startTextInput: function () {
          0 > this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex = this.__text.length);
          (da.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__enableInput();
        },
        __stopCursorTimer: function () {
          null != this.__cursorTimer &&
            (this.__cursorTimer.stop(), (this.__cursorTimer = null));
          this.__showCursor &&
            ((this.__showCursor = !1),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __stopTextInput: function () {
          (da.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__disableInput();
        },
        __updateLayout: function () {
          if (this.__layoutDirty) {
            var a = this.__textEngine.width;
            this.__textEngine.update();
            if (2 != this.__textEngine.autoSize) {
              if (this.__textEngine.width != a)
                switch (this.__textEngine.autoSize) {
                  case 0:
                    this.set_x(
                      this.get_x() + (a - this.__textEngine.width) / 2,
                    );
                    break;
                  case 3:
                    this.set_x(this.get_x() + (a - this.__textEngine.width));
                }
              this.__textEngine.getBounds();
            }
            this.__layoutDirty = !1;
            this.setSelection(this.__selectionIndex, this.__caretIndex);
          }
        },
        __updateMouseDrag: function () {
          if (null != this.stage) {
            var a = this.getBounds(this);
            this.get_mouseX() > a.width - 1
              ? this.set_scrollH(
                  this.get_scrollH() +
                    (Math.max(
                      Math.min(0.1 * (this.get_mouseX() - a.width), 10),
                      1,
                    ) |
                      0),
                )
              : 1 > this.get_mouseX() &&
                this.set_scrollH(
                  this.get_scrollH() -
                    (Math.max(Math.min(-0.1 * this.get_mouseX(), 10), 1) | 0),
                );
            this.__mouseScrollVCounter++;
            this.__mouseScrollVCounter > this.stage.get_frameRate() / 10 &&
              (this.get_mouseY() > a.height - 2
                ? this.set_scrollV(
                    Math.min(
                      this.get_scrollV() +
                        Math.max(
                          Math.min(0.03 * (this.get_mouseY() - a.height), 5),
                          1,
                        ),
                      this.get_maxScrollV(),
                    ) | 0,
                  )
                : 2 > this.get_mouseY() &&
                  this.set_scrollV(
                    this.get_scrollV() -
                      (Math.max(Math.min(-0.03 * this.get_mouseY(), 5), 1) | 0),
                  ),
              (this.__mouseScrollVCounter = 0));
            this.stage_onMouseMove(null);
          }
        },
        __updateScrollH: function () {
          this.__updateLayout();
          var a = this.getBounds(this);
          if (this.get_textWidth() <= a.width - 4) this.set_scrollH(0);
          else {
            var b = this.get_scrollH();
            if (
              0 == this.__caretIndex ||
              this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) ==
                this.__caretIndex
            )
              b = 0;
            else {
              var d = ja.__pool.get(),
                f = !1;
              this.__caretIndex < this.__text.length &&
                (f = this.__getCharBoundaries(this.__caretIndex, d));
              f ||
                (this.__getCharBoundaries(this.__caretIndex - 1, d),
                (d.x += d.width));
              for (; d.x < b && 0 < b; ) b -= 24;
              for (; d.x > b + a.width - 4; ) b += 24;
              ja.__pool.release(d);
            }
            0 < b &&
              1 != this.get_type() &&
              ((d = this.getLineLength(
                this.getLineIndexOfChar(this.__caretIndex),
              )),
              this.get_scrollH() + a.width - 4 > d &&
                this.set_scrollH(Math.ceil(d - a.width + 4)));
            0 > b
              ? this.set_scrollH(0)
              : b > this.get_maxScrollH()
                ? this.set_scrollH(this.get_maxScrollH())
                : this.set_scrollH(b);
          }
        },
        __updateScrollV: function () {
          this.__updateLayout();
          if (this.get_textHeight() <= this.get_height() - 4)
            this.set_scrollV(1);
          else {
            var a = this.getLineIndexOfChar(this.__caretIndex);
            -1 == a &&
              0 < this.__caretIndex &&
              (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
            if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
            else if (a + 1 > this.get_bottomScrollV()) {
              var b = 0;
              for (
                a >= this.__textEngine.lineHeights.get_length() &&
                (a = this.__textEngine.lineHeights.get_length() - 1);
                0 <= a;

              ) {
                b += this.__textEngine.lineHeights.get(a);
                if (b > this.get_height() - 4) {
                  a += 0 > b - this.get_height() ? 1 : 2;
                  break;
                }
                --a;
              }
              this.set_scrollV(a);
            } else this.set_scrollV(this.get_scrollV());
          }
        },
        __updateText: function (a) {
          da.__supportDOM &&
            this.__renderedOnCanvasWhileOnDOM &&
            (this.__forceCachedBitmapUpdate = this.__text != a);
          this.__textEngine.set_text(a);
          this.__text = this.__textEngine.text;
          null != this.stage && this.stage.get_focus() == this
            ? (this.__text.length < this.__selectionIndex &&
                (this.__selectionIndex = this.__text.length),
              this.__text.length < this.__caretIndex &&
                (this.__caretIndex = this.__text.length))
            : this.__isHTML
              ? (this.__selectionIndex = this.__caretIndex = this.__text.length)
              : (this.__caretIndex = this.__selectionIndex = 0);
          if (
            !this.__displayAsPassword ||
            (da.__supportDOM && !this.__renderedOnCanvasWhileOnDOM)
          )
            this.__textEngine.set_text(this.__text);
          else {
            a = '';
            for (var b = 0, d = this.get_text().length; b < d; )
              (b++, (a += '*'));
            this.__textEngine.set_text(a);
          }
        },
        __updateTransforms: function (a) {
          wa.prototype.__updateTransforms.call(this, a);
          a = this.__renderTransform;
          var b = this.__offsetX,
            d = this.__offsetY;
          a.tx = b * a.a + d * a.c + a.tx;
          a.ty = b * a.b + d * a.d + a.ty;
        },
        set_autoSize: function (a) {
          a != this.__textEngine.autoSize &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.autoSize = a);
        },
        set_background: function (a) {
          a != this.__textEngine.background &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.background = a);
        },
        set_backgroundColor: function (a) {
          a != this.__textEngine.backgroundColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.backgroundColor = a);
        },
        set_border: function (a) {
          a != this.__textEngine.border &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.border = a);
        },
        set_borderColor: function (a) {
          a != this.__textEngine.borderColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.borderColor = a);
        },
        get_bottomScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_bottomScrollV();
        },
        get_caretIndex: function () {
          return this.__caretIndex;
        },
        get_defaultTextFormat: function () {
          return this.__textFormat.clone();
        },
        set_defaultTextFormat: function (a) {
          this.__textFormat.__merge(a);
          this.__dirty = this.__layoutDirty = !0;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return a;
        },
        get_displayAsPassword: function () {
          return this.__displayAsPassword;
        },
        get_height: function () {
          this.__updateLayout();
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          a != this.__textEngine.height &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.height = a));
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        get_htmlText: function () {
          return this.__isHTML ? this.__htmlText : this.__text;
        },
        set_htmlText: function (a) {
          if (null == a)
            throw (
              (a = new gf('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          (this.__isHTML && this.__text == a) ||
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          this.__isHTML = !0;
          this.condenseWhite && (a = a.replace(/\s+/g, ' '));
          this.__htmlText = a;
          a = Ia.parse(
            a,
            this.get_multiline(),
            this.__styleSheet,
            this.__textFormat,
            this.__textEngine.textFormatRanges,
          );
          this.__updateText(a);
          return a;
        },
        get_length: function () {
          return null != this.__text ? this.__text.length : 0;
        },
        get_maxScrollH: function () {
          this.__updateLayout();
          return this.__textEngine.maxScrollH;
        },
        get_maxScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_maxScrollV();
        },
        get_mouseWheelEnabled: function () {
          return this.__mouseWheelEnabled;
        },
        get_multiline: function () {
          return this.__textEngine.multiline;
        },
        get_numLines: function () {
          this.__updateLayout();
          return this.__textEngine.numLines;
        },
        set_restrict: function (a) {
          this.__textEngine.restrict != a &&
            (this.__textEngine.set_restrict(a), this.__updateText(this.__text));
          return a;
        },
        get_scrollH: function () {
          return this.__textEngine.scrollH;
        },
        set_scrollH: function (a) {
          this.__updateLayout();
          a > this.__textEngine.maxScrollH &&
            (a = this.__textEngine.maxScrollH);
          0 > a && (a = 0);
          a != this.__textEngine.scrollH &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.scrollH = a),
            this.dispatchEvent(new sa('scroll')));
          return this.__textEngine.scrollH;
        },
        get_scrollV: function () {
          return this.__textEngine.get_scrollV();
        },
        set_scrollV: function (a) {
          this.__updateLayout();
          a > this.__textEngine.get_maxScrollV() &&
            (a = this.__textEngine.get_maxScrollV());
          1 > a && (a = 1);
          if (
            a != this.__textEngine.get_scrollV() ||
            0 == this.__textEngine.get_scrollV()
          )
            ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()),
              this.__textEngine.set_scrollV(a),
              this.dispatchEvent(new sa('scroll')));
          return this.__textEngine.get_scrollV();
        },
        get_selectable: function () {
          return this.__textEngine.selectable;
        },
        set_selectable: function (a) {
          a != this.__textEngine.selectable &&
            1 == this.get_type() &&
            (null != this.stage && this.stage.get_focus() == this
              ? this.__startTextInput()
              : a || this.__stopTextInput());
          return (this.__textEngine.selectable = a);
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? 1 == this.__textEngine.type
            : this.__tabEnabled;
        },
        get_text: function () {
          return this.__text;
        },
        set_text: function (a) {
          if (null == a)
            throw (
              (a = new gf('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (null != this.__styleSheet) return this.set_htmlText(a);
          if (this.__isHTML || this.__text != a)
            ((this.__layoutDirty = this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else return a;
          if (1 < this.__textEngine.textFormatRanges.get_length()) {
            var b = this.__textEngine.textFormatRanges,
              d = this.__textEngine.textFormatRanges.get_length() - 1;
            b.__tempIndex = 1;
            for (var f = 0, g = []; f < g.length; ) {
              var k = g[f++];
              b.insertAt(b.__tempIndex, k);
              b.__tempIndex++;
            }
            b.splice(b.__tempIndex, d);
          }
          b = this.__textEngine.textFormatRanges.get(0);
          b.format = this.__textFormat;
          b.start = 0;
          b.end = a.length;
          this.__isHTML = !1;
          this.__updateText(a);
          return a;
        },
        set_textColor: function (a) {
          a != this.__textFormat.color &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          for (
            var b = this.__textEngine.textFormatRanges.iterator();
            b.hasNext();

          )
            b.next().format.color = a;
          return (this.__textFormat.color = a);
        },
        get_textWidth: function () {
          this.__updateLayout();
          return this.__textEngine.textWidth;
        },
        get_textHeight: function () {
          this.__updateLayout();
          return this.__textEngine.textHeight;
        },
        get_type: function () {
          return this.__textEngine.type;
        },
        set_type: function (a) {
          null != this.__styleSheet && (a = 0);
          a != this.__textEngine.type &&
            ((this.__textEngine.type = a),
            1 == a
              ? (this.addEventListener(
                  'addedToStage',
                  m(this, this.this_onAddedToStage),
                ),
                this.this_onFocusIn(null),
                (this.__textEngine.__useIntAdvances = !0))
              : (this.removeEventListener(
                  'addedToStage',
                  m(this, this.this_onAddedToStage),
                ),
                this.__stopTextInput(),
                (this.__textEngine.__useIntAdvances = null)),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__textEngine.type;
        },
        get_width: function () {
          this.__updateLayout();
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          a != this.__textEngine.width &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.width = a));
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_wordWrap: function (a) {
          a != this.__textEngine.wordWrap &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.wordWrap = a);
        },
        get_x: function () {
          return this.__transform.tx + this.__offsetX;
        },
        set_x: function (a) {
          a != this.__transform.tx + this.__offsetX &&
            this.__setTransformDirty();
          this.__transform.tx = a - this.__offsetX;
          return a;
        },
        get_y: function () {
          return this.__transform.ty + this.__offsetY;
        },
        set_y: function (a) {
          a != this.__transform.ty + this.__offsetY &&
            this.__setTransformDirty();
          this.__transform.ty = a - this.__offsetY;
          return a;
        },
        stage_onMouseMove: function (a) {
          if (
            null != this.stage &&
            this.get_selectable() &&
            0 <= this.__selectionIndex &&
            (this.__updateLayout(),
            (a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  )),
            a != this.__caretIndex)
          ) {
            this.__caretIndex = a;
            if (this.__wordSelection || this.__lineSelection)
              this.__selectionIndex = this.__getOppositeIdentifierBound(
                this.__specialSelectionInitialIndex,
                this.__lineSelection,
              );
            a = !0;
            da.__supportDOM &&
              (this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0),
              (a = !1));
            a &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          }
        },
        stage_onMouseUp: function (a) {
          a = a.currentTarget;
          a.removeEventListener('enterFrame', m(this, this.this_onEnterFrame));
          a.removeEventListener('mouseMove', m(this, this.stage_onMouseMove));
          a.removeEventListener('mouseUp', m(this, this.stage_onMouseUp));
          if (this.stage == a && a.get_focus() == this) {
            this.__getWorldTransform();
            this.__updateLayout();
            a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  );
            var b = Math.max(this.__selectionIndex, a) | 0;
            this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
            this.__caretIndex = b;
            this.__wordSelection = this.__lineSelection = !1;
            this.__inputEnabled &&
              (this.this_onFocusIn(null),
              this.__stopCursorTimer(),
              this.__startCursorTimer(),
              da.__supportDOM &&
                this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0));
          }
        },
        this_onAddedToStage: function (a) {
          this.this_onFocusIn(null);
        },
        this_onEnterFrame: function (a) {
          this.__updateMouseDrag();
        },
        this_onFocusIn: function (a) {
          1 == this.get_type() &&
          null != this.stage &&
          this.stage.get_focus() == this
            ? this.__startTextInput()
            : 1 != this.get_type() &&
              this.get_selectable() &&
              null != this.stage &&
              this.stage.get_focus() == this &&
              this.__startCursorTimer();
        },
        this_onFocusOut: function (a) {
          this.__stopCursorTimer();
          this.__stopTextInput();
          this.__selectionIndex != this.__caretIndex &&
            ((this.__selectionIndex = this.__caretIndex),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        this_onKeyDown: function (a) {
          this.get_selectable() &&
            1 != this.get_type() &&
            67 == a.keyCode &&
            (a.commandKey || a.ctrlKey) &&
            (this.__caretIndex == this.__selectionIndex ||
              this.get_displayAsPassword() ||
              nc.set_text(
                this.__text.substring(this.__caretIndex, this.__selectionIndex),
              ));
        },
        this_onMouseDown: function (a) {
          if (this.get_selectable() || 1 == this.get_type()) {
            this.__lineSelection = 3 == a.clickCount;
            this.__wordSelection = 2 == a.clickCount;
            if (this.__lineSelection) {
              var b = this.__caretIndex;
              this.__caretIndex = this.__getPositionByIdentifier(
                a.stageX + this.get_scrollH(),
                a.stageY,
                !0,
              );
              this.__selectionIndex = this.__getOppositeIdentifierBound(b, !0);
            } else
              this.__wordSelection
                ? ((b = this.__caretIndex),
                  (this.__caretIndex = this.__getPositionByIdentifier(
                    a.stageX + this.get_scrollH(),
                    a.stageY,
                    !1,
                  )),
                  (this.__selectionIndex = this.__getOppositeIdentifierBound(
                    b,
                    !1,
                  )),
                  (this.__specialSelectionInitialIndex = b))
                : (this.__selectionIndex = this.__caretIndex =
                    this.__getPosition(
                      this.get_mouseX() + this.get_scrollH(),
                      this.get_mouseY(),
                    ));
            this.setSelection(this.__caretIndex, this.__selectionIndex);
            this.__updateLayout();
            da.__supportDOM ||
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
            null != this.stage &&
              (this.stage.addEventListener(
                'enterFrame',
                m(this, this.this_onEnterFrame),
              ),
              this.stage.addEventListener(
                'mouseMove',
                m(this, this.stage_onMouseMove),
              ),
              this.stage.addEventListener(
                'mouseUp',
                m(this, this.stage_onMouseUp),
              ));
          }
        },
        this_onMouseWheel: function (a) {
          this.get_mouseWheelEnabled() &&
            this.set_scrollV(
              Math.min(this.get_scrollV() - a.delta, this.get_maxScrollV()) | 0,
            );
        },
        window_onKeyDown: function (a, b) {
          switch (a) {
            case 8:
              this.__selectionIndex == this.__caretIndex &&
                0 < this.__caretIndex &&
                (this.__selectionIndex = this.__caretIndex - 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new sa('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 97:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)) &&
                this.setSelection(0, this.__text.length);
              break;
            case 99:
              if (Xa.get_metaKey(b) || Xa.get_ctrlKey(b))
                this.__caretIndex == this.__selectionIndex ||
                  this.get_displayAsPassword() ||
                  nc.set_text(
                    this.__text.substring(
                      this.__caretIndex,
                      this.__selectionIndex,
                    ),
                  );
              break;
            case 120:
              (!Xa.get_metaKey(b) && !Xa.get_ctrlKey(b)) ||
                this.__caretIndex == this.__selectionIndex ||
                this.get_displayAsPassword() ||
                (nc.set_text(
                  this.__text.substring(
                    this.__caretIndex,
                    this.__selectionIndex,
                  ),
                ),
                this.replaceSelectedText(''),
                this.dispatchEvent(new sa('change', !0)));
              break;
            case 127:
              this.__selectionIndex == this.__caretIndex &&
                this.__caretIndex < this.__text.length &&
                (this.__selectionIndex = this.__caretIndex + 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new sa('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 1073741898:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretBeginningOfLine(),
                Xa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741901:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretEndOfLine(),
                Xa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741903:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)
                  ? this.__caretBeginningOfNextLine()
                  : this.__caretNextCharacter(),
                Xa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741904:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)
                  ? this.__caretBeginningOfPreviousLine()
                  : this.__caretPreviousCharacter(),
                Xa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741905:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretNextLine(),
                Xa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741906:
              this.get_selectable() &&
                (Xa.get_metaKey(b) || Xa.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretPreviousLine(),
                Xa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 13:
            case 1073741912:
              this.__textEngine.multiline
                ? ((a = new me('textInput', !0, !0, '\n')),
                  this.dispatchEvent(a),
                  a.isDefaultPrevented() ||
                    (this.__replaceSelectedText('\n', !0),
                    this.dispatchEvent(new sa('change', !0))))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
          }
        },
        window_onTextInput: function (a) {
          this.__replaceSelectedText(a, !0);
          this.dispatchEvent(new sa('change', !0));
        },
        __class__: Kc,
        __properties__: w(wa.prototype.__properties__, {
          set_wordWrap: 'set_wordWrap',
          set_textColor: 'set_textColor',
          set_restrict: 'set_restrict',
          set_borderColor: 'set_borderColor',
          set_border: 'set_border',
          set_backgroundColor: 'set_backgroundColor',
          set_background: 'set_background',
          set_autoSize: 'set_autoSize',
          set_type: 'set_type',
          get_type: 'get_type',
          get_textWidth: 'get_textWidth',
          get_textHeight: 'get_textHeight',
          set_text: 'set_text',
          get_text: 'get_text',
          set_selectable: 'set_selectable',
          get_selectable: 'get_selectable',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_scrollH: 'set_scrollH',
          get_scrollH: 'get_scrollH',
          get_numLines: 'get_numLines',
          get_multiline: 'get_multiline',
          get_mouseWheelEnabled: 'get_mouseWheelEnabled',
          get_maxScrollV: 'get_maxScrollV',
          get_maxScrollH: 'get_maxScrollH',
          get_length: 'get_length',
          set_htmlText: 'set_htmlText',
          get_htmlText: 'get_htmlText',
          get_displayAsPassword: 'get_displayAsPassword',
          set_defaultTextFormat: 'set_defaultTextFormat',
          get_defaultTextFormat: 'get_defaultTextFormat',
          get_caretIndex: 'get_caretIndex',
          get_bottomScrollV: 'get_bottomScrollV',
        }),
      });
      var ue = function (a, b, d, f, g, k, h, r, p, t, q, n, E) {
        this.font = a;
        this.size = b;
        this.color = d;
        this.bold = f;
        this.italic = g;
        this.underline = k;
        this.url = h;
        this.target = r;
        this.align = p;
        this.leftMargin = t;
        this.rightMargin = q;
        this.indent = n;
        this.leading = E;
      };
      h['openfl.text.TextFormat'] = ue;
      ue.__name__ = 'openfl.text.TextFormat';
      ue.prototype = {
        clone: function () {
          var a = new ue(
            this.font,
            this.size,
            this.color,
            this.bold,
            this.italic,
            this.underline,
            this.url,
            this.target,
          );
          a.align = this.align;
          a.leftMargin = this.leftMargin;
          a.rightMargin = this.rightMargin;
          a.indent = this.indent;
          a.leading = this.leading;
          a.blockIndent = this.blockIndent;
          a.bullet = this.bullet;
          a.kerning = this.kerning;
          a.letterSpacing = this.letterSpacing;
          a.tabStops = this.tabStops;
          a.__ascent = this.__ascent;
          a.__descent = this.__descent;
          a.__cacheKey = this.__toCacheKey();
          return a;
        },
        __merge: function (a) {
          null != a.font && (this.font = a.font);
          null != a.size && (this.size = a.size);
          null != a.color && (this.color = a.color);
          null != a.bold && (this.bold = a.bold);
          null != a.italic && (this.italic = a.italic);
          null != a.underline && (this.underline = a.underline);
          null != a.url && (this.url = a.url);
          null != a.target && (this.target = a.target);
          null != a.align && (this.align = a.align);
          null != a.leftMargin && (this.leftMargin = a.leftMargin);
          null != a.rightMargin && (this.rightMargin = a.rightMargin);
          null != a.indent && (this.indent = a.indent);
          null != a.leading && (this.leading = a.leading);
          null != a.blockIndent && (this.blockIndent = a.blockIndent);
          null != a.bullet && (this.bullet = a.bullet);
          null != a.kerning && (this.kerning = a.kerning);
          null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
          null != a.tabStops && (this.tabStops = a.tabStops);
          null != a.__ascent && (this.__ascent = a.__ascent);
          null != a.__descent && (this.__descent = a.__descent);
          this.__toCacheKey();
        },
        __toCacheKey: function () {
          return (this.__cacheKey =
            '' +
            this.font +
            this.size +
            G.string(this.bold) +
            G.string(this.italic));
        },
        __class__: ue,
      };
      var im = {
          fromString: function (a) {
            switch (a) {
              case 'center':
                return 0;
              case 'end':
                return 1;
              case 'justify':
                return 2;
              case 'left':
                return 3;
              case 'right':
                return 4;
              case 'start':
                return 5;
              default:
                return null;
            }
          },
        },
        gh = function (a, b) {
          this.__collisions = [];
          this.__wordMap = new ic();
          this.set(a, b);
        };
      h['openfl.text._internal.CacheMeasurement'] = gh;
      gh.__name__ = 'openfl.text._internal.CacheMeasurement';
      gh.prototype = {
        set: function (a, b) {
          this.__addCollision(a, b);
        },
        get: function (a) {
          return 1 < this.__collisions.length
            ? this.__wordMap.h[this.__collisions.indexOf(a)]
            : this.__wordMap.h[0];
        },
        __addCollision: function (a, b) {
          if (!this.exists(a)) {
            var d = this.__wordMap;
            a = this.__collisions.push(a) - 1;
            d.h[a] = b;
          }
        },
        exists: function (a) {
          return 0 == this.__collisions.length
            ? !1
            : -1 < this.__collisions.indexOf(a);
        },
        __class__: gh,
      };
      var Ia = function () {};
      h['openfl.text._internal.HTMLParser'] = Ia;
      Ia.__name__ = 'openfl.text._internal.HTMLParser';
      Ia.parse = function (a, b, d, f, g) {
        a = b
          ? a.replace(Ia.__regexBreakTag.r, '\n')
          : a.replace(Ia.__regexBreakTag.r, '');
        a = a.replace(Ia.__regexEntityNbsp.r, ' ');
        a = Ia.__regexCharEntity.map(a, function (a) {
          var b = a.matched(1),
            d = a.matched(2);
          return null != b && ((b = G.parseInt(b)), null != b)
            ? String.fromCodePoint(b)
            : null != d && ((d = G.parseInt('0' + d)), null != d)
              ? String.fromCodePoint(d)
              : a.matched(0);
        });
        var k = a.split('<');
        if (1 == k.length) {
          a = Ia.__htmlUnescape(a.replace(Ia.__regexHTMLTag.r, ''));
          if (1 < g.get_length()) {
            var h = g.get_length() - 1;
            g.__tempIndex = 1;
            for (var r = 0, p = []; r < p.length; ) {
              var t = p[r++];
              g.insertAt(g.__tempIndex, t);
              g.__tempIndex++;
            }
            g.splice(g.__tempIndex, h);
          }
          b = g.get(0);
          b.format = f;
          b.start = 0;
          b.end = a.length;
        } else {
          h = g.get_length();
          r = g.__tempIndex = 0;
          for (p = []; r < p.length; )
            ((t = p[r++]), g.insertAt(g.__tempIndex, t), g.__tempIndex++);
          g.splice(g.__tempIndex, h);
          a = '';
          h = [f.clone()];
          r = [];
          t = !1;
          for (p = 0; p < k.length; ) {
            var q = k[p];
            ++p;
            if ('' != q) {
              var n = '/' == M.substr(q, 0, 1),
                E = q.indexOf('>'),
                x = E + 1,
                C = q.indexOf(' ');
              C = q.substring(n ? 1 : 0, -1 < C && C < E ? C : E).toLowerCase();
              if (n)
                0 != r.length &&
                  C == r[r.length - 1] &&
                  (r.pop(),
                  h.pop(),
                  (n = h[h.length - 1].clone()),
                  ('p' == C || 'li' == C) &&
                    0 < g.get_length() &&
                    (b && (a += '\n'), (t = !0)),
                  x < q.length &&
                    ((t = Ia.__htmlUnescape(M.substr(q, x, null))),
                    g.push(new kd(n, a.length, a.length + t.length)),
                    (a += t),
                    (t = !1)));
              else if (((n = h[h.length - 1].clone()), -1 < E)) {
                null != d &&
                  (d.__applyStyle(C, n),
                  Ia.__regexClass.match(q) &&
                    (d.__applyStyle(
                      '.' + Ia.__getAttributeMatch(Ia.__regexClass),
                      n,
                    ),
                    d.__applyStyle(
                      C + '.' + Ia.__getAttributeMatch(Ia.__regexClass),
                      n,
                    )));
                switch (C) {
                  case 'a':
                    null != d && d.__applyStyle('a:link', n);
                    Ia.__regexHref.match(q) &&
                      (n.url = Ia.__getAttributeMatch(Ia.__regexHref));
                    break;
                  case 'b':
                    n.bold = !0;
                    break;
                  case 'em':
                  case 'i':
                    n.italic = !0;
                    break;
                  case 'font':
                    Ia.__regexFace.match(q) &&
                      (n.font = Ia.__getAttributeMatch(Ia.__regexFace));
                    Ia.__regexColor.match(q) &&
                      (n.color = G.parseInt(
                        '0x' + Ia.__getAttributeMatch(Ia.__regexColor),
                      ));
                    if (Ia.__regexSize.match(q)) {
                      E = Ia.__getAttributeMatch(Ia.__regexSize);
                      var m = M.cca(E, 0);
                      n.size =
                        43 == m || 45 == m
                          ? (2 <= h.length ? h[h.length - 2] : f).size +
                            G.parseInt(E)
                          : G.parseInt(E);
                    }
                    break;
                  case 'li':
                    0 < g.get_length() && !t && (a += '\n');
                    E = n.clone();
                    E.underline = !1;
                    g.push(new kd(E, a.length, a.length + 2));
                    a += '\u2022 ';
                    break;
                  case 'p':
                    0 < g.get_length() && !t && (a += '\n');
                    Ia.__regexAlign.match(q) &&
                      ((E = Ia.__getAttributeMatch(
                        Ia.__regexAlign,
                      ).toLowerCase()),
                      (n.align = im.fromString(E)));
                    break;
                  case 'textformat':
                    Ia.__regexBlockIndent.match(q) &&
                      (n.blockIndent = G.parseInt(
                        Ia.__getAttributeMatch(Ia.__regexBlockIndent),
                      ));
                    Ia.__regexIndent.match(q) &&
                      (n.indent = G.parseInt(
                        Ia.__getAttributeMatch(Ia.__regexIndent),
                      ));
                    Ia.__regexLeading.match(q) &&
                      (n.leading = G.parseInt(
                        Ia.__getAttributeMatch(Ia.__regexLeading),
                      ));
                    Ia.__regexLeftMargin.match(q) &&
                      (n.leftMargin = G.parseInt(
                        Ia.__getAttributeMatch(Ia.__regexLeftMargin),
                      ));
                    Ia.__regexRightMargin.match(q) &&
                      (n.rightMargin = G.parseInt(
                        Ia.__getAttributeMatch(Ia.__regexRightMargin),
                      ));
                    if (Ia.__regexTabStops.match(q)) {
                      E = Ia.__getAttributeMatch(Ia.__regexTabStops).split(' ');
                      m = [];
                      for (var y = 0; y < E.length; ) {
                        var z = E[y];
                        ++y;
                        m.push(G.parseInt(z));
                      }
                      n.tabStops = m;
                    }
                    break;
                  case 'u':
                    n.underline = !0;
                }
                h.push(n);
                r.push(C);
                x < q.length &&
                  ((t = Ia.__htmlUnescape(q.substring(x))),
                  g.push(new kd(n, a.length, a.length + t.length)),
                  (a += t),
                  (t = !1));
              } else
                ((t = Ia.__htmlUnescape(q)),
                  g.push(new kd(n, a.length, a.length + t.length)),
                  (a += t),
                  (t = !1));
            }
          }
          0 == g.get_length() && g.push(new kd(h[0], 0, 0));
        }
        return a;
      };
      Ia.__getAttributeMatch = function (a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3);
      };
      Ia.__htmlUnescape = function (a) {
        a = a.replace(Ia.__regexEntityApos.r, "'");
        return R.htmlUnescape(a);
      };
      var Ag = function () {
        this.__shortWordMap = new Sa();
        this.__longWordMap = new Sa();
      };
      h['openfl.text._internal.ShapeCache'] = Ag;
      Ag.__name__ = 'openfl.text._internal.ShapeCache';
      Ag.hashFunction = function (a) {
        for (var b = 0, d, f = 0, g = a.length; f < g; )
          ((d = f++), (d = M.cca(a, d)), (b = (b << 5) - b + d), (b |= 0));
        return b;
      };
      Ag.prototype = {
        cache: function (a, b, d) {
          a = a.format.__cacheKey;
          return 15 < d.length
            ? this.__cacheLongWord(d, a, b)
            : this.__cacheShortWord(d, a, b);
        },
        __cacheShortWord: function (a, b, d) {
          if (Object.prototype.hasOwnProperty.call(this.__shortWordMap.h, b)) {
            var f = this.__shortWordMap.h[b];
            if (Object.prototype.hasOwnProperty.call(f.h, a)) return f.h[a];
            var g = d();
            f.h[a] = g;
          } else
            ((f = new Sa()),
              (g = d()),
              (f.h[a] = g),
              (this.__shortWordMap.h[b] = f));
          return d();
        },
        __cacheLongWord: function (a, b, d) {
          var f = Ag.hashFunction(a);
          if (Object.prototype.hasOwnProperty.call(this.__longWordMap.h, b)) {
            var g = this.__longWordMap.h[b];
            if (g.h.hasOwnProperty(f)) {
              var k = g.h[f];
              if (k.exists(a)) return k.get(a);
              k.set(a, d());
            } else ((k = new gh(a, d())), (g.h[f] = k));
          } else
            ((g = new ic()),
              (k = new gh(a, d())),
              (k.hash = f),
              (g.h[f] = k),
              (this.__longWordMap.h[b] = g));
          return d();
        },
        __class__: Ag,
      };
      var Db = function (a) {
        this.__shapeCache = new Ag();
        this.textField = a;
        this.height = this.width = 100;
        this.set_text('');
        this.bounds = new ja(0, 0, 0, 0);
        this.textBounds = new ja(0, 0, 0, 0);
        this.type = 0;
        this.autoSize = 2;
        this.embedFonts = !1;
        this.selectable = !0;
        this.borderColor = 0;
        this.border = !1;
        this.backgroundColor = 16777215;
        this.background = !1;
        this.gridFitType = 1;
        this.maxChars = 0;
        this.multiline = !1;
        this.numLines = 1;
        this.scrollH = this.sharpness = 0;
        this.set_scrollV(1);
        this.wordWrap = !1;
        this.lineAscents = ra.toFloatVector(null);
        this.lineBreaks = ra.toIntVector(null);
        this.lineDescents = ra.toFloatVector(null);
        this.lineLeadings = ra.toFloatVector(null);
        this.lineHeights = ra.toFloatVector(null);
        this.lineWidths = ra.toFloatVector(null);
        this.layoutGroups = ra.toObjectVector(null);
        this.textFormatRanges = ra.toObjectVector(null);
        null == Db.__context &&
          (Db.__context = window.document
            .createElement('canvas')
            .getContext('2d'));
      };
      h['openfl.text._internal.TextEngine'] = Db;
      Db.__name__ = 'openfl.text._internal.TextEngine';
      Db.__context = null;
      Db.findFont = function (a) {
        return ua.__fontByName.h[a];
      };
      Db.findFontVariant = function (a) {
        var b = a.font,
          d = a.bold;
        a = a.italic;
        null == b && (b = '_serif');
        var f = R.replace(R.replace(b, ' Normal', ''), ' Regular', '');
        return d &&
          a &&
          Object.prototype.hasOwnProperty.call(
            ua.__fontByName.h,
            f + ' Bold Italic',
          )
          ? Db.findFont(f + ' Bold Italic')
          : d &&
              Object.prototype.hasOwnProperty.call(
                ua.__fontByName.h,
                f + ' Bold',
              )
            ? Db.findFont(f + ' Bold')
            : a &&
                Object.prototype.hasOwnProperty.call(
                  ua.__fontByName.h,
                  f + ' Italic',
                )
              ? Db.findFont(f + ' Italic')
              : Db.findFont(b);
      };
      Db.getFormatHeight = function (a) {
        var b = Db.getFont(a);
        Db.__context.font = b;
        b = Db.getFontInstance(a);
        if (null != a.__ascent) {
          var d = a.size * a.__ascent;
          b = a.size * a.__descent;
        } else
          null != b && 0 != b.unitsPerEM
            ? ((d = (b.ascender / b.unitsPerEM) * a.size),
              (b = Math.abs((b.descender / b.unitsPerEM) * a.size)))
            : ((d = a.size), (b = 0.185 * a.size));
        return d + b + a.leading;
      };
      Db.getFont = function (a) {
        var b = a.font,
          d = a.bold,
          f = a.italic;
        null == b && (b = '_serif');
        var g = R.replace(R.replace(b, ' Normal', ''), ' Regular', '');
        d &&
        f &&
        Object.prototype.hasOwnProperty.call(
          ua.__fontByName.h,
          g + ' Bold Italic',
        )
          ? ((b = g + ' Bold Italic'), (f = d = !1))
          : d &&
              Object.prototype.hasOwnProperty.call(
                ua.__fontByName.h,
                g + ' Bold',
              )
            ? ((b = g + ' Bold'), (d = !1))
            : f &&
                Object.prototype.hasOwnProperty.call(
                  ua.__fontByName.h,
                  g + ' Italic',
                )
              ? ((b = g + ' Italic'), (f = !1))
              : (d &&
                  (-1 < b.indexOf(' Bold ') || R.endsWith(b, ' Bold')) &&
                  (d = !1),
                f &&
                  (-1 < b.indexOf(' Italic ') || R.endsWith(b, ' Italic')) &&
                  (f = !1));
        d = (f ? 'italic ' : 'normal ') + 'normal ' + (d ? 'bold ' : 'normal ');
        d += a.size + 'px';
        d += '/' + (a.size + 3) + 'px ';
        switch (b) {
          case '_sans':
            a = 'sans-serif';
            break;
          case '_serif':
            a = 'serif';
            break;
          case '_typewriter':
            a = 'monospace';
            break;
          default:
            a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, '$1') + "'";
        }
        return (d += '' + a);
      };
      Db.getFontInstance = function (a) {
        return Db.findFontVariant(a);
      };
      Db.prototype = {
        createRestrictRegexp: function (a) {
          var b = '',
            d = !1;
          a = new xa('\\^([^\\^]+)', 'gu').map(a, function (a) {
            if (d) return ((d = !d), a.matched(1));
            b += a.matched(1);
            d = !d;
            return '';
          });
          var f = [];
          0 < a.length && f.push('[^' + a + ']');
          0 < b.length && f.push('[' + b + ']');
          return new xa('(' + f.join('|') + ')', 'g');
        },
        getBounds: function () {
          var a = this.border ? 1 : 0;
          this.bounds.width = this.width + a;
          this.bounds.height = this.height + a;
          a = this.width;
          for (
            var b = this.height,
              d = this.layoutGroups.get_length() - 1,
              f = 0,
              g = this.layoutGroups.get_length();
            f < g;

          ) {
            var k = f++,
              h = this.layoutGroups.get(k);
            if (k != d || h.startIndex != h.endIndex || 1 == this.type)
              (h.offsetX < a && (a = h.offsetX),
                h.offsetY < b && (b = h.offsetY));
          }
          a >= this.width && (a = 2);
          b >= this.height && (b = 2);
          this.textBounds.setTo(
            Math.max(a - 2, 0),
            Math.max(b - 2, 0),
            Math.min(this.textWidth + 4, this.bounds.width),
            Math.min(1.185 * this.textHeight + 4, this.bounds.height),
          );
        },
        getLineBreaks: function () {
          this.lineBreaks.set_length(0);
          for (var a = -1, b; a < this.text.length; )
            if (
              ((b = this.text.indexOf('\n', a + 1)),
              (a = this.text.indexOf('\r', a + 1)),
              (a = -1 == a ? b : -1 == b ? a : a < b ? a : b),
              -1 < a)
            )
              this.lineBreaks.push(a);
            else break;
        },
        getLineMeasurements: function () {
          this.lineAscents.set_length(0);
          this.lineDescents.set_length(0);
          this.lineLeadings.set_length(0);
          this.lineHeights.set_length(0);
          this.lineWidths.set_length(0);
          var a = 0,
            b = 0,
            d = null,
            f = 0,
            g = 0;
          this.textHeight = this.textWidth = 0;
          this.numLines = 1;
          this.maxScrollH = 0;
          for (
            var k = this.layoutGroups.get_length() - 1,
              h = 0,
              r = this.layoutGroups.get_length();
            h < r;

          ) {
            var p = h++;
            var t = this.layoutGroups.get(p);
            if (p != k || t.startIndex != t.endIndex || 1 == this.type) {
              for (; t.lineIndex > this.numLines - 1; )
                (this.lineAscents.push(a),
                  this.lineDescents.push(b),
                  this.lineLeadings.push(null != d ? d : 0),
                  this.lineHeights.push(f),
                  this.lineWidths.push(g),
                  (b = a = 0),
                  (d = null),
                  (g = f = 0),
                  this.numLines++);
              a = Math.max(a, t.ascent);
              b = Math.max(b, t.descent);
              d = null == d ? t.leading : Math.max(d, t.leading) | 0;
              f = Math.max(f, t.height);
              g = t.offsetX - 2 + t.width;
              g > this.textWidth && (this.textWidth = g);
              p = Math.ceil(t.offsetY - 2 + t.ascent + t.descent);
              p > this.textHeight && (this.textHeight = p);
            }
          }
          0 == this.textHeight &&
            null != this.textField &&
            1 == this.type &&
            ((a = this.textField.__textFormat),
            (b = Db.getFontInstance(a)),
            null != a.__ascent
              ? ((k = a.size * a.__ascent), (h = a.size * a.__descent))
              : null != b && 0 != b.unitsPerEM
                ? ((k = (b.ascender / b.unitsPerEM) * a.size),
                  (h = Math.abs((b.descender / b.unitsPerEM) * a.size)))
                : ((k = a.size), (h = 0.185 * a.size)),
            (d = a.leading),
            (a = k),
            (b = h),
            (this.textHeight = p = Math.ceil(k + h)));
          this.lineAscents.push(a);
          this.lineDescents.push(b);
          this.lineLeadings.push(null != d ? d : 0);
          this.lineHeights.push(f);
          this.lineWidths.push(g);
          1 == this.numLines && 0 < d && (this.textHeight += d);
          if (2 != this.autoSize)
            switch (this.autoSize) {
              case 0:
              case 1:
              case 3:
                (this.wordWrap || (this.width = this.textWidth + 4),
                  (this.height = this.textHeight + 4),
                  (this.bottomScrollV = this.numLines));
            }
          this.maxScrollH =
            this.textWidth > this.width - 4
              ? (this.textWidth - this.width + 4) | 0
              : 0;
          this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH);
        },
        getLayoutGroups: function () {
          var a = this;
          this.layoutGroups.set_length(0);
          if (null != this.text && '' != this.text) {
            var b = -1,
              d = null,
              f = null,
              g = Kc.__defaultTextFormat.clone(),
              k = 0,
              h = 0,
              r = 0,
              p = 0,
              t = 3,
              q = 0,
              n = 0,
              E = 0,
              x = 0,
              C = !0,
              m = null,
              y = null,
              z = 0,
              P = 0,
              B = 0,
              K = -2,
              v = -1,
              w = this.text.indexOf(' '),
              F = 0,
              J =
                F < this.lineBreaks.get_length() ? this.lineBreaks.get(F) : -1,
              I = 0,
              S = 0,
              G = 0,
              Oa = 0,
              L = function (b, f, k) {
                var h = function () {
                  var d = [];
                  if (null == a.__useIntAdvances) {
                    var g = new xa('Trident/7.0', '');
                    a.__useIntAdvances = g.match(D.navigator.userAgent);
                  }
                  if (a.__useIntAdvances) {
                    var h = 0;
                    g = f;
                    for (var l = k; g < l; ) {
                      var r = g++;
                      r = a.measureText(b.substring(f, r + 1));
                      d.push(r - h);
                      h = r;
                    }
                  } else
                    for (g = f, l = k; g < l; )
                      ((r = g++),
                        r < b.length - 1
                          ? ((h = a.measureText(b.charAt(r + 1))),
                            (h = a.measureText(M.substr(b, r, 2)) - h))
                          : (h = Db.__context.measureText(b.charAt(r)).width),
                        d.push(h));
                  return d;
                };
                return 2 == g.align
                  ? h()
                  : a.__shapeCache.cache(d, h, b.substring(f, k));
              },
              W = function (a) {
                for (var b = 0, d = 0; d < a.length; ) {
                  var f = a[d];
                  ++d;
                  b += f;
                }
                return b;
              },
              rb = function () {
                return 2 + E + q + (C ? n : 0);
              },
              kb = function () {
                return a.width - 2 - x - rb();
              },
              ca = function (b, f) {
                null == m || m.startIndex != m.endIndex
                  ? ((m = new Jj(d.format, b, f)), a.layoutGroups.push(m))
                  : ((m.format = d.format),
                    (m.startIndex = b),
                    (m.endIndex = f));
              },
              pa = function () {
                null != g.__ascent
                  ? ((h = g.size * g.__ascent), (p = g.size * g.__descent))
                  : null != f && 0 != f.unitsPerEM
                    ? ((h = (f.ascender / f.unitsPerEM) * g.size),
                      (p = Math.abs((f.descender / f.unitsPerEM) * g.size)))
                    : ((h = g.size), (p = 0.185 * g.size));
                k = g.leading;
                P = Math.ceil(h + p + k);
                P > B && (B = P);
                h > r && (r = h);
              },
              Q = function () {
                C = !0;
                t = null != g.align ? g.align : 3;
                q = null != g.blockIndent ? g.blockIndent : 0;
                n = null != g.indent ? g.indent : 0;
                E = null != g.leftMargin ? g.leftMargin : 0;
                x = null != g.rightMargin ? g.rightMargin : 0;
              },
              A = function () {
                if (b < a.textFormatRanges.get_length() - 1) {
                  b += 1;
                  d = a.textFormatRanges.get(b);
                  g.__merge(d.format);
                  var k = Db.getFont(g);
                  Db.__context.font = k;
                  f = Db.getFontInstance(g);
                  return !0;
                }
                return !1;
              },
              Ga = function (f, g) {
                if (f >= g) ((y = []), (z = 0));
                else if (g <= d.end) ((y = L(a.text, f, g)), (z = W(y)));
                else {
                  var k = f;
                  f = d.end;
                  var h = 0;
                  y = [];
                  for (z = 0; ; )
                    if (
                      (k != f && ((k = L(a.text, k, f)), (y = y.concat(k))),
                      f != g)
                    ) {
                      if (!A()) {
                        Pa.warn(
                          "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                          {
                            fileName: 'openfl/text/_internal/TextEngine.hx',
                            lineNumber: 1121,
                            className: 'openfl.text._internal.TextEngine',
                            methodName: 'getLayoutGroups',
                          },
                        );
                        break;
                      }
                      k = f;
                      f = g < d.end ? g : d.end;
                      ++h;
                    } else {
                      z = W(y);
                      break;
                    }
                  b -= h + 1;
                  A();
                }
              },
              O = function (b) {
                if (b <= d.end) {
                  y = L(a.text, G, b);
                  z = W(y);
                  ca(G, b);
                  m.positions = y;
                  var f = I,
                    g = rb();
                  m.offsetX = f + g;
                  m.ascent = h;
                  m.descent = p;
                  m.leading = k;
                  m.lineIndex = Oa;
                  m.offsetY = S + 2;
                  m.width = z;
                  m.height = P;
                  I += z;
                  b == d.end && ((m = null), A(), pa());
                } else
                  for (;;) {
                    var l = b < d.end ? b : d.end;
                    G != l &&
                      ((y = L(a.text, G, l)),
                      (z = W(y)),
                      ca(G, l),
                      (m.positions = y),
                      (f = I),
                      (g = rb()),
                      (m.offsetX = f + g),
                      (m.ascent = h),
                      (m.descent = p),
                      (m.leading = k),
                      (m.lineIndex = Oa),
                      (m.offsetY = S + 2),
                      (m.width = z),
                      (m.height = P),
                      (I += z),
                      (G = l));
                    l == d.end && (m = null);
                    if (l == b) break;
                    if (!A()) {
                      Pa.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/_internal/TextEngine.hx',
                          lineNumber: 1209,
                          className: 'openfl.text._internal.TextEngine',
                          methodName: 'getLayoutGroups',
                        },
                      );
                      break;
                    }
                    pa();
                  }
                G = b;
              },
              H = function () {
                pa();
                for (var b = a.layoutGroups.get_length(); -1 < --b; ) {
                  var d = a.layoutGroups.get(b);
                  if (d.lineIndex < Oa) break;
                  d.lineIndex > Oa || ((d.ascent = r), (d.height = B));
                }
                S += B;
                B = r = 0;
                Oa += 1;
                I = 0;
                C = !1;
              },
              ha = function (b) {
                if (4 <= a.width && a.wordWrap) {
                  var d = y;
                  var f = W(d);
                  for (var g = d.length - 1; 0 <= g; ) {
                    var k = M.cca(a.text, G + g);
                    if (32 != k && 9 != k) break;
                    f -= d[g];
                    --g;
                  }
                  for (; 0 < d.length && I + f > kb(); ) {
                    for (k = g = f = 0; I + k < kb(); ) {
                      var h = d[g];
                      0 == h ? (++g, ++f) : ((k += h), ++g);
                    }
                    if (g == f) g = f + 1;
                    else
                      for (; 1 < g && I + k > kb(); )
                        (--g,
                          0 < g - f
                            ? (Ga(G, G + g - f), (k = z))
                            : ((g = 1), (f = 0), Ga(G, G + 1), (k = 0)));
                    d = G + g - f;
                    O(d);
                    H();
                    Ga(d, b);
                    d = y;
                    f = z;
                  }
                }
                O(b);
              };
            A();
            Q();
            pa();
            for (var N, Fb = this.text.length + 1; G < Fb; )
              if (-1 < J && (-1 == w || J < w))
                (G <= J
                  ? (Ga(G, J), ha(J), (m = null))
                  : null != m &&
                    m.startIndex != m.endIndex &&
                    (m.endIndex == w &&
                      (m.width -= m.positions[m.positions.length - 1]),
                    (m = null)),
                  H(),
                  d.end == J && (A(), pa()),
                  (G = J + 1),
                  (v = J),
                  ++F,
                  (J =
                    F < this.lineBreaks.get_length()
                      ? this.lineBreaks.get(F)
                      : -1),
                  Q());
              else if (-1 < w)
                for (
                  null != m && m.startIndex != m.endIndex && (m = null), N = !1;
                  G < this.text.length;

                ) {
                  var U = -1;
                  -1 == w ? (U = J) : ((U = w + 1), -1 < J && J < U && (U = J));
                  -1 == U && (U = this.text.length);
                  Ga(G, U);
                  if (2 == t) {
                    if (0 < y.length && G == K) {
                      G += 1;
                      var V = y.shift();
                      z -= V;
                      I += V;
                    }
                    0 < y.length &&
                      U == w + 1 &&
                      (--U, (V = y.pop()), (z -= V));
                  }
                  this.wordWrap &&
                    I + z > kb() &&
                    ((N = !0),
                    0 < y.length &&
                      U == w + 1 &&
                      I + z - y[y.length - 1] <= kb() &&
                      (N = !1));
                  if (N) {
                    2 != t &&
                      (null != m || 0 < this.layoutGroups.get_length()) &&
                      ((N = m),
                      null == N &&
                        (N = this.layoutGroups.get(
                          this.layoutGroups.get_length() - 1,
                        )),
                      (N.width -= N.positions[N.positions.length - 1]),
                      N.endIndex--);
                    N = this.layoutGroups.get_length() - 1;
                    for (V = 0; 0 <= N; ) {
                      m = this.layoutGroups.get(N);
                      if (0 < N && m.startIndex > K) ++V;
                      else break;
                      --N;
                    }
                    G == K + 1 && H();
                    I = 0;
                    if (0 < V) {
                      N = this.layoutGroups.get(
                        this.layoutGroups.get_length() - V,
                      ).offsetX;
                      V = this.layoutGroups.get_length() - V;
                      for (var R = this.layoutGroups.get_length(); V < R; ) {
                        var da = V++;
                        m = this.layoutGroups.get(da);
                        m.offsetX -= N;
                        m.offsetY = S + 2;
                        m.lineIndex = Oa;
                        I += m.width;
                      }
                    }
                    ha(U);
                    N = !1;
                  } else
                    null != m && G == w && K != w - 1
                      ? (2 != t &&
                          ((m.endIndex = w),
                          (m.positions = m.positions.concat(y)),
                          (m.width += z)),
                        (I += z),
                        (G = U))
                      : null == m || 2 == t
                        ? (ha(U), U == this.text.length && H())
                        : ((V = U < d.end ? U : d.end),
                          V < U && ((y = L(this.text, G, V)), (z = W(y))),
                          (m.endIndex = V),
                          (m.positions = m.positions.concat(y)),
                          (m.width += z),
                          (I += z),
                          V == d.end &&
                            ((m = null), A(), pa(), (G = V), V != U && O(U)),
                          J == U && ++U,
                          (G = U),
                          U == this.text.length &&
                            (H(),
                            -1 != J &&
                              ((v = J),
                              ++F,
                              (J =
                                F < this.lineBreaks.get_length()
                                  ? this.lineBreaks.get(F)
                                  : -1))));
                  U = this.text.indexOf(' ', G);
                  J == K &&
                    ((m.endIndex = J),
                    0 > J - m.startIndex - m.positions.length &&
                      m.positions.push(0),
                    (G = J + 1));
                  K = w;
                  w = U;
                  if (
                    (-1 < J && J <= G && (w > J || -1 == w)) ||
                    G > this.text.length
                  )
                    break;
                }
              else
                (G < this.text.length &&
                  (Ga(G, this.text.length), ha(this.text.length), H()),
                  (G += 1));
            v == G - 2 &&
              -1 < v &&
              (ca(G - 1, G - 1),
              (m.positions = []),
              (m.ascent = h),
              (m.descent = p),
              (m.leading = k),
              (m.lineIndex = Oa),
              (m.offsetX = rb()),
              (m.offsetY = S + 2),
              (m.width = 0),
              (m.height = P));
          }
        },
        measureText: function (a) {
          return Db.__context.measureText(a).width;
        },
        restrictText: function (a) {
          if (null == a) return a;
          null != this.__restrictRegexp &&
            (a = this.__restrictRegexp.split(a).join(''));
          return a;
        },
        setTextAlignment: function () {
          for (
            var a = -1,
              b = 0,
              d,
              f,
              g = !1,
              k = 0,
              h = this.layoutGroups.get_length();
            k < h;

          ) {
            var r = k++;
            d = this.layoutGroups.get(r);
            if (d.lineIndex != a)
              switch (
                ((a = d.lineIndex),
                (b = this.width - 4 - d.format.rightMargin),
                d.format.align)
              ) {
                case 0:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round((b - this.lineWidths.get(a)) / 2)
                      : 0;
                  break;
                case 2:
                  if (this.lineWidths.get(a) < b) {
                    f = 1;
                    for (
                      var p = r + 1, t = this.layoutGroups.get_length();
                      p < t;

                    ) {
                      var q = p++;
                      if (this.layoutGroups.get(q).lineIndex == a)
                        (0 != q &&
                          32 !=
                            M.cca(
                              this.text,
                              this.layoutGroups.get(q).startIndex - 1,
                            )) ||
                          ++f;
                      else break;
                    }
                    if (
                      1 < f &&
                      ((d = this.layoutGroups.get(r + f - 1)),
                      (p = M.cca(this.text, d.endIndex)),
                      d.endIndex < this.text.length && 10 != p && 13 != p)
                    ) {
                      b = (b - this.lineWidths.get(a)) / (f - 1);
                      g = !0;
                      p = 1;
                      do this.layoutGroups.get(r + p).offsetX += b * p;
                      while (++p < f);
                    }
                  }
                  b = 0;
                  break;
                case 4:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round(b - this.lineWidths.get(a))
                      : 0;
                  break;
                default:
                  b = 0;
              }
            0 < b && (d.offsetX += b);
          }
          g && this.getLineMeasurements();
        },
        update: function () {
          null == this.text || 0 == this.textFormatRanges.get_length()
            ? (this.lineAscents.set_length(0),
              this.lineBreaks.set_length(0),
              this.lineDescents.set_length(0),
              this.lineLeadings.set_length(0),
              this.lineHeights.set_length(0),
              this.lineWidths.set_length(0),
              this.layoutGroups.set_length(0),
              (this.textHeight = this.textWidth = 0),
              (this.numLines = 1),
              (this.maxScrollH = 0),
              (this.bottomScrollV = this.maxScrollV = 1))
            : (this.getLineBreaks(),
              this.getLayoutGroups(),
              this.getLineMeasurements(),
              this.setTextAlignment());
          this.getBounds();
        },
        get_bottomScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (
            var a = this.lineHeights.get_length(),
              b =
                this.lineLeadings.get_length() == a
                  ? -this.lineLeadings.get(a - 1)
                  : 0,
              d = (0 < this.get_scrollV() ? this.get_scrollV() : 1) - 1,
              f = this.lineHeights.get_length();
            d < f;

          ) {
            var g = d++,
              k = this.lineHeights.get(g);
            b += k;
            if (b > this.height - 4) {
              a = g + (0 <= b - this.height ? 0 : 1);
              break;
            }
          }
          return a < this.get_scrollV() ? this.get_scrollV() : a;
        },
        get_maxScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (var a = this.numLines - 1, b = 0; 0 <= a; ) {
            b += this.lineHeights.get(a);
            if (b > this.height - 4) {
              a += 0 > b - this.height ? 1 : 2;
              break;
            }
            --a;
          }
          return 1 > a ? 1 : a;
        },
        set_restrict: function (a) {
          if (this.restrict == a) return this.restrict;
          this.restrict = a;
          this.__restrictRegexp =
            null == this.restrict || 0 == this.restrict.length
              ? null
              : this.createRestrictRegexp(a);
          return this.restrict;
        },
        get_scrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.get_maxScrollV();
          return this.scrollV > a ? a : this.scrollV;
        },
        set_scrollV: function (a) {
          1 > a
            ? (a = 1)
            : a > this.get_maxScrollV() && (a = this.get_maxScrollV());
          return (this.scrollV = a);
        },
        set_text: function (a) {
          return (this.text = a);
        },
        __class__: Db,
        __properties__: {
          set_text: 'set_text',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_restrict: 'set_restrict',
          get_maxScrollV: 'get_maxScrollV',
          get_bottomScrollV: 'get_bottomScrollV',
        },
      };
      var kd = function (a, b, d) {
        this.format = a;
        this.start = b;
        this.end = d;
      };
      h['openfl.text._internal.TextFormatRange'] = kd;
      kd.__name__ = 'openfl.text._internal.TextFormatRange';
      kd.prototype = { __class__: kd };
      var Jj = function (a, b, d) {
        this.format = a;
        this.startIndex = b;
        this.endIndex = d;
      };
      h['openfl.text._internal.TextLayoutGroup'] = Jj;
      Jj.__name__ = 'openfl.text._internal.TextLayoutGroup';
      Jj.prototype = { __class__: Jj };
      var ob = function () {
        ka.call(this);
        ob.__instances.push(this);
      };
      h['openfl.ui.GameInput'] = ob;
      ob.__name__ = 'openfl.ui.GameInput';
      ob.__getDevice = function (a) {
        if (null == a) return null;
        if (null == ob.__devices.h.__keys__[a.__id__]) {
          var b = jc.__getDeviceData(),
            d = b[a.id].id;
          b = jc.__getDeviceData();
          b = new ll(d, b[a.id].id);
          ob.__deviceList.push(b);
          ob.__devices.set(a, b);
          ob.numDevices = ob.__deviceList.length;
        }
        return ob.__devices.h[a.__id__];
      };
      ob.__onGamepadAxisMove = function (a, b, d) {
        a = ob.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__axis.h.hasOwnProperty(b)) {
            if (null == b) var f = 'null';
            else
              switch (b) {
                case 0:
                  f = 'LEFT_X';
                  break;
                case 1:
                  f = 'LEFT_Y';
                  break;
                case 2:
                  f = 'RIGHT_X';
                  break;
                case 3:
                  f = 'RIGHT_Y';
                  break;
                case 4:
                  f = 'TRIGGER_LEFT';
                  break;
                case 5:
                  f = 'TRIGGER_RIGHT';
                  break;
                default:
                  f = 'UNKNOWN (' + b + ')';
              }
            f = new Id(a, 'AXIS_' + f, -1, 1);
            a.__axis.h[b] = f;
            a.__controls.push(f);
          }
          f = a.__axis.h[b];
          f.value = d;
          f.dispatchEvent(new sa('change'));
        }
      };
      ob.__onGamepadButtonDown = function (a, b) {
        a = ob.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var d = 'null';
            else
              switch (b) {
                case 0:
                  d = 'A';
                  break;
                case 1:
                  d = 'B';
                  break;
                case 2:
                  d = 'X';
                  break;
                case 3:
                  d = 'Y';
                  break;
                case 4:
                  d = 'BACK';
                  break;
                case 5:
                  d = 'GUIDE';
                  break;
                case 6:
                  d = 'START';
                  break;
                case 7:
                  d = 'LEFT_STICK';
                  break;
                case 8:
                  d = 'RIGHT_STICK';
                  break;
                case 9:
                  d = 'LEFT_SHOULDER';
                  break;
                case 10:
                  d = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  d = 'DPAD_UP';
                  break;
                case 12:
                  d = 'DPAD_DOWN';
                  break;
                case 13:
                  d = 'DPAD_LEFT';
                  break;
                case 14:
                  d = 'DPAD_RIGHT';
                  break;
                default:
                  d = 'UNKNOWN (' + b + ')';
              }
            d = new Id(a, 'BUTTON_' + d, 0, 1);
            a.__button.h[b] = d;
            a.__controls.push(d);
          }
          d = a.__button.h[b];
          d.value = 1;
          d.dispatchEvent(new sa('change'));
        }
      };
      ob.__onGamepadButtonUp = function (a, b) {
        a = ob.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var d = 'null';
            else
              switch (b) {
                case 0:
                  d = 'A';
                  break;
                case 1:
                  d = 'B';
                  break;
                case 2:
                  d = 'X';
                  break;
                case 3:
                  d = 'Y';
                  break;
                case 4:
                  d = 'BACK';
                  break;
                case 5:
                  d = 'GUIDE';
                  break;
                case 6:
                  d = 'START';
                  break;
                case 7:
                  d = 'LEFT_STICK';
                  break;
                case 8:
                  d = 'RIGHT_STICK';
                  break;
                case 9:
                  d = 'LEFT_SHOULDER';
                  break;
                case 10:
                  d = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  d = 'DPAD_UP';
                  break;
                case 12:
                  d = 'DPAD_DOWN';
                  break;
                case 13:
                  d = 'DPAD_LEFT';
                  break;
                case 14:
                  d = 'DPAD_RIGHT';
                  break;
                default:
                  d = 'UNKNOWN (' + b + ')';
              }
            d = new Id(a, 'BUTTON_' + d, 0, 1);
            a.__button.h[b] = d;
            a.__controls.push(d);
          }
          d = a.__button.h[b];
          d.value = 0;
          d.dispatchEvent(new sa('change'));
        }
      };
      ob.__onGamepadConnect = function (a) {
        a = ob.__getDevice(a);
        if (null != a)
          for (var b = 0, d = ob.__instances; b < d.length; ) {
            var f = d[b];
            ++b;
            f.dispatchEvent(new wg('deviceAdded', !0, !1, a));
          }
      };
      ob.__onGamepadDisconnect = function (a) {
        var b = ob.__devices.h[a.__id__];
        if (null != b) {
          null != ob.__devices.h.__keys__[a.__id__] &&
            (M.remove(ob.__deviceList, ob.__devices.h[a.__id__]),
            ob.__devices.remove(a));
          ob.numDevices = ob.__deviceList.length;
          a = 0;
          for (var d = ob.__instances; a < d.length; ) {
            var f = d[a];
            ++a;
            f.dispatchEvent(new wg('deviceRemoved', !0, !1, b));
          }
        }
      };
      ob.__super__ = ka;
      ob.prototype = w(ka.prototype, {
        addEventListener: function (a, b, d, f, g) {
          null == g && (g = !1);
          null == f && (f = 0);
          null == d && (d = !1);
          ka.prototype.addEventListener.call(this, a, b, d, f, g);
          if ('deviceAdded' == a)
            for (a = 0, b = ob.__deviceList; a < b.length; )
              ((d = b[a]),
                ++a,
                this.dispatchEvent(new wg('deviceAdded', !0, !1, d)));
        },
        __class__: ob,
      });
      var Id = function (a, b, d, f, g) {
        null == g && (g = 0);
        ka.call(this);
        this.device = a;
        this.id = b;
        this.minValue = d;
        this.maxValue = f;
        this.value = g;
      };
      h['openfl.ui.GameInputControl'] = Id;
      Id.__name__ = 'openfl.ui.GameInputControl';
      Id.__super__ = ka;
      Id.prototype = w(ka.prototype, { __class__: Id });
      var ll = function (a, b) {
        this.__controls = [];
        this.__button = new ic();
        this.__axis = new ic();
        this.id = a;
        this.name = b;
        a = new Id(this, 'AXIS_0', -1, 1);
        this.__axis.h[0] = a;
        this.__controls.push(a);
        a = new Id(this, 'AXIS_1', -1, 1);
        this.__axis.h[1] = a;
        this.__controls.push(a);
        a = new Id(this, 'AXIS_2', -1, 1);
        this.__axis.h[2] = a;
        this.__controls.push(a);
        a = new Id(this, 'AXIS_3', -1, 1);
        this.__axis.h[3] = a;
        this.__controls.push(a);
        a = new Id(this, 'AXIS_4', -1, 1);
        this.__axis.h[4] = a;
        this.__controls.push(a);
        a = new Id(this, 'AXIS_5', -1, 1);
        this.__axis.h[5] = a;
        this.__controls.push(a);
        for (b = 0; 15 > b; ) {
          var d = b++;
          a = new Id(this, 'BUTTON_' + d, 0, 1);
          this.__button.h[d] = a;
          this.__controls.push(a);
        }
      };
      h['openfl.ui.GameInputDevice'] = ll;
      ll.__name__ = 'openfl.ui.GameInputDevice';
      ll.prototype = { __class__: ll };
      var Hl = function () {};
      h['openfl.ui.Keyboard'] = Hl;
      Hl.__name__ = 'openfl.ui.Keyboard';
      Hl.__getCharCode = function (a, b) {
        null == b && (b = !1);
        if (b) {
          switch (a) {
            case 48:
              return 41;
            case 49:
              return 33;
            case 50:
              return 64;
            case 51:
              return 35;
            case 52:
              return 36;
            case 53:
              return 37;
            case 54:
              return 94;
            case 55:
              return 38;
            case 56:
              return 42;
            case 57:
              return 40;
            case 186:
              return 58;
            case 187:
              return 43;
            case 188:
              return 60;
            case 189:
              return 95;
            case 190:
              return 62;
            case 191:
              return 63;
            case 192:
              return 126;
            case 219:
              return 123;
            case 220:
              return 124;
            case 221:
              return 125;
            case 222:
              return 34;
          }
          if (65 <= a && 90 >= a) return a - 65 + 65;
        } else {
          switch (a) {
            case 8:
              return 8;
            case 9:
              return 9;
            case 13:
              return 13;
            case 27:
              return 27;
            case 32:
              return 32;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
          }
          if (48 <= a && 57 >= a) return a - 48 + 48;
          if (65 <= a && 90 >= a) return a - 65 + 97;
        }
        if (96 <= a && 105 >= a) return a - 96 + 48;
        switch (a) {
          case 8:
            return 8;
          case 13:
            return 13;
          case 46:
            return 127;
          case 106:
            return 42;
          case 107:
            return 43;
          case 108:
            return 44;
          case 110:
            return 45;
          case 111:
            return 46;
        }
        return 0;
      };
      var sj = function () {};
      h['openfl.ui.Mouse'] = sj;
      sj.__name__ = 'openfl.ui.Mouse';
      sj.__hidden = null;
      var gm = {
          toLimeCursor: function (a) {
            switch (a) {
              case 'arrow':
                return Vb.ARROW;
              case 'auto':
                return Vb.DEFAULT;
              case 'button':
                return Vb.POINTER;
              case 'crosshair':
                return Vb.CROSSHAIR;
              case 'custom':
                return Vb.CUSTOM;
              case 'hand':
                return Vb.MOVE;
              case 'ibeam':
                return Vb.TEXT;
              case 'resize_nesw':
                return Vb.RESIZE_NESW;
              case 'resize_ns':
                return Vb.RESIZE_NS;
              case 'resize_nwse':
                return Vb.RESIZE_NWSE;
              case 'resize_we':
                return Vb.RESIZE_WE;
              case 'wait':
                return Vb.WAIT;
              case 'waitarrow':
                return Vb.WAIT_ARROW;
              default:
                return Vb.DEFAULT;
            }
          },
        },
        ma = function (a) {
          null == a && (a = !1);
          this.debugEnabled = a;
          ma.initialized || ma.init();
        };
      h['openfl.utils.AGALMiniAssembler'] = ma;
      ma.__name__ = 'openfl.utils.AGALMiniAssembler';
      ma.init = function () {
        ma.initialized = !0;
        var a = ma.OPMAP,
          b = new tb('mov', 2, 0, 0);
        a.h.mov = b;
        a = ma.OPMAP;
        b = new tb('add', 3, 1, 0);
        a.h.add = b;
        a = ma.OPMAP;
        b = new tb('sub', 3, 2, 0);
        a.h.sub = b;
        a = ma.OPMAP;
        b = new tb('mul', 3, 3, 0);
        a.h.mul = b;
        a = ma.OPMAP;
        b = new tb('div', 3, 4, 0);
        a.h.div = b;
        a = ma.OPMAP;
        b = new tb('rcp', 2, 5, 0);
        a.h.rcp = b;
        a = ma.OPMAP;
        b = new tb('min', 3, 6, 0);
        a.h.min = b;
        a = ma.OPMAP;
        b = new tb('max', 3, 7, 0);
        a.h.max = b;
        a = ma.OPMAP;
        b = new tb('frc', 2, 8, 0);
        a.h.frc = b;
        a = ma.OPMAP;
        b = new tb('sqt', 2, 9, 0);
        a.h.sqt = b;
        a = ma.OPMAP;
        b = new tb('rsq', 2, 10, 0);
        a.h.rsq = b;
        a = ma.OPMAP;
        b = new tb('pow', 3, 11, 0);
        a.h.pow = b;
        a = ma.OPMAP;
        b = new tb('log', 2, 12, 0);
        a.h.log = b;
        a = ma.OPMAP;
        b = new tb('exp', 2, 13, 0);
        a.h.exp = b;
        a = ma.OPMAP;
        b = new tb('nrm', 2, 14, 0);
        a.h.nrm = b;
        a = ma.OPMAP;
        b = new tb('sin', 2, 15, 0);
        a.h.sin = b;
        a = ma.OPMAP;
        b = new tb('cos', 2, 16, 0);
        a.h.cos = b;
        a = ma.OPMAP;
        b = new tb('crs', 3, 17, 0);
        a.h.crs = b;
        a = ma.OPMAP;
        b = new tb('dp3', 3, 18, 0);
        a.h.dp3 = b;
        a = ma.OPMAP;
        b = new tb('dp4', 3, 19, 0);
        a.h.dp4 = b;
        a = ma.OPMAP;
        b = new tb('abs', 2, 20, 0);
        a.h.abs = b;
        a = ma.OPMAP;
        b = new tb('neg', 2, 21, 0);
        a.h.neg = b;
        a = ma.OPMAP;
        b = new tb('sat', 2, 22, 0);
        a.h.sat = b;
        a = ma.OPMAP;
        b = new tb('m33', 3, 23, 16);
        a.h.m33 = b;
        a = ma.OPMAP;
        b = new tb('m44', 3, 24, 16);
        a.h.m44 = b;
        a = ma.OPMAP;
        b = new tb('m34', 3, 25, 16);
        a.h.m34 = b;
        a = ma.OPMAP;
        b = new tb('ddx', 2, 26, 288);
        a.h.ddx = b;
        a = ma.OPMAP;
        b = new tb('ddy', 2, 27, 288);
        a.h.ddy = b;
        a = ma.OPMAP;
        b = new tb('ife', 2, 28, 897);
        a.h.ife = b;
        a = ma.OPMAP;
        b = new tb('ine', 2, 29, 897);
        a.h.ine = b;
        a = ma.OPMAP;
        b = new tb('ifg', 2, 30, 897);
        a.h.ifg = b;
        a = ma.OPMAP;
        b = new tb('ifl', 2, 31, 897);
        a.h.ifl = b;
        a = ma.OPMAP;
        b = new tb('els', 0, 32, 1921);
        a.h.els = b;
        a = ma.OPMAP;
        b = new tb('eif', 0, 33, 1409);
        a.h.eif = b;
        a = ma.OPMAP;
        b = new tb('kil', 1, 39, 160);
        a.h.kil = b;
        a = ma.OPMAP;
        b = new tb('tex', 3, 40, 40);
        a.h.tex = b;
        a = ma.OPMAP;
        b = new tb('sge', 3, 41, 0);
        a.h.sge = b;
        a = ma.OPMAP;
        b = new tb('slt', 3, 42, 0);
        a.h.slt = b;
        a = ma.OPMAP;
        b = new tb('sgn', 2, 43, 0);
        a.h.sgn = b;
        a = ma.OPMAP;
        b = new tb('seq', 3, 44, 0);
        a.h.seq = b;
        a = ma.OPMAP;
        b = new tb('sne', 3, 45, 0);
        a.h.sne = b;
        a = ma.SAMPLEMAP;
        b = new Rb('rgba', 8, 0);
        a.h.rgba = b;
        a = ma.SAMPLEMAP;
        b = new Rb('compressed', 8, 1);
        a.h.compressed = b;
        a = ma.SAMPLEMAP;
        b = new Rb('compressedalpha', 8, 2);
        a.h.compressedalpha = b;
        a = ma.SAMPLEMAP;
        b = new Rb('dxt1', 8, 1);
        a.h.dxt1 = b;
        a = ma.SAMPLEMAP;
        b = new Rb('dxt5', 8, 2);
        a.h.dxt5 = b;
        a = ma.SAMPLEMAP;
        b = new Rb('video', 8, 3);
        a.h.video = b;
        a = ma.SAMPLEMAP;
        b = new Rb('2d', 12, 0);
        a.h['2d'] = b;
        a = ma.SAMPLEMAP;
        b = new Rb('3d', 12, 2);
        a.h['3d'] = b;
        a = ma.SAMPLEMAP;
        b = new Rb('cube', 12, 1);
        a.h.cube = b;
        a = ma.SAMPLEMAP;
        b = new Rb('mipnearest', 24, 1);
        a.h.mipnearest = b;
        a = ma.SAMPLEMAP;
        b = new Rb('miplinear', 24, 2);
        a.h.miplinear = b;
        a = ma.SAMPLEMAP;
        b = new Rb('mipnone', 24, 0);
        a.h.mipnone = b;
        a = ma.SAMPLEMAP;
        b = new Rb('nomip', 24, 0);
        a.h.nomip = b;
        a = ma.SAMPLEMAP;
        b = new Rb('nearest', 28, 0);
        a.h.nearest = b;
        a = ma.SAMPLEMAP;
        b = new Rb('linear', 28, 1);
        a.h.linear = b;
        a = ma.SAMPLEMAP;
        b = new Rb('anisotropic2x', 28, 2);
        a.h.anisotropic2x = b;
        a = ma.SAMPLEMAP;
        b = new Rb('anisotropic4x', 28, 3);
        a.h.anisotropic4x = b;
        a = ma.SAMPLEMAP;
        b = new Rb('anisotropic8x', 28, 4);
        a.h.anisotropic8x = b;
        a = ma.SAMPLEMAP;
        b = new Rb('anisotropic16x', 28, 5);
        a.h.anisotropic16x = b;
        a = ma.SAMPLEMAP;
        b = new Rb('centroid', 16, 1);
        a.h.centroid = b;
        a = ma.SAMPLEMAP;
        b = new Rb('single', 16, 2);
        a.h.single = b;
        a = ma.SAMPLEMAP;
        b = new Rb('ignoresampler', 16, 4);
        a.h.ignoresampler = b;
        a = ma.SAMPLEMAP;
        b = new Rb('repeat', 20, 1);
        a.h.repeat = b;
        a = ma.SAMPLEMAP;
        b = new Rb('wrap', 20, 1);
        a.h.wrap = b;
        a = ma.SAMPLEMAP;
        b = new Rb('clamp', 20, 0);
        a.h.clamp = b;
        a = ma.SAMPLEMAP;
        b = new Rb('clamp_u_repeat_v', 20, 2);
        a.h.clamp_u_repeat_v = b;
        a = ma.SAMPLEMAP;
        b = new Rb('repeat_u_clamp_v', 20, 3);
        a.h.repeat_u_clamp_v = b;
      };
      ma.prototype = {
        assemble: function (a, b, d, f) {
          null == f && (f = !1);
          null == d && (d = 1);
          var g = Ka.getTimer();
          this.agalcode = new Ic(0);
          this.error = '';
          var k = !1;
          'fragment' == a
            ? (k = !0)
            : 'vertex' != a &&
              (this.error =
                'ERROR: mode needs to be "fragment" or "vertex" but is "' +
                a +
                '".');
          this.agalcode.__endian = 1;
          this.agalcode.writeByte(160);
          this.agalcode.writeUnsignedInt(d);
          this.agalcode.writeByte(161);
          this.agalcode.writeByte(k ? 1 : 0);
          this.initregmap(d, f);
          a = R.replace(b, '\r', '\n').split('\n');
          b = 0;
          f = a.length;
          for (
            var h = new xa('<.*>', 'g'),
              r = new xa('([\\w\\.\\-\\+]+)', 'gi'),
              p = new xa('^\\w{3}', 'ig'),
              t = new xa(
                'vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?',
                'gi',
              ),
              q = new xa('\\[.*\\]', 'ig'),
              n = new xa('^\\b[A-Za-z]{1,3}', 'ig'),
              E = new xa('\\d+', ''),
              m = new xa('(\\.[xyzw]{1,4})', ''),
              x = new xa('[A-Za-z]{1,3}', 'ig'),
              C = new xa('(\\.[xyzw]{1,1})', ''),
              y = new xa('\\+\\d{1,3}', 'ig'),
              P = 0;
            P < f && '' == this.error;

          ) {
            var B = R.trim(a[P]),
              K = B.indexOf('//');
            -1 != K && (B = M.substr(B, 0, K));
            var v = h.match(B) ? h.matchedPos().pos : -1;
            K = null;
            -1 != v &&
              ((K = this.match(M.substr(B, v, null), r)),
              (B = M.substr(B, 0, v)));
            var w = null;
            p.match(B) && ((v = p.matched(0)), (w = ma.OPMAP.h[v]));
            if (null == w)
              3 <= B.length &&
                Pa.warn('warning: bad line ' + P + ': ' + a[P], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 262,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else if (
              (this.debugEnabled &&
                Pa.info(w, {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 272,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                }),
              null == w)
            )
              3 <= B.length &&
                Pa.warn('warning: bad line ' + P + ': ' + a[P], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 279,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else {
              B = M.substr(B, B.indexOf(w.name) + w.name.length, null);
              if (0 != (w.flags & 256) && 2 > d) {
                this.error = 'error: opcode requires version 2.';
                break;
              }
              if (0 != (w.flags & 64) && k) {
                this.error =
                  'error: opcode is only allowed in vertex programs.';
                break;
              }
              if (0 != (w.flags & 32) && !k) {
                this.error =
                  'error: opcode is only allowed in fragment programs.';
                break;
              }
              this.verbose &&
                Pa.info('emit opcode=' + G.string(w), {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 308,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
              this.agalcode.writeUnsignedInt(w.emitCode);
              ++b;
              if (4096 < b) {
                this.error = 'error: too many opcodes. maximum is 4096.';
                break;
              }
              var J = this.match(B, t);
              if (J.length != w.numRegister) {
                this.error =
                  'error: wrong number of operands. found ' +
                  J.length +
                  ' but expected ' +
                  w.numRegister +
                  '.';
                break;
              }
              var F = !1,
                I = 160;
              B = 0;
              for (v = J.length; B < v; ) {
                var S = B++,
                  Oa = !1,
                  L = this.match(J[S], q);
                0 < L.length &&
                  ((J[S] = R.replace(J[S], L[0], '0')),
                  this.verbose &&
                    Pa.info('IS REL', {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 344,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    }),
                  (Oa = !0));
                var W = this.match(J[S], n);
                if (0 == W.length) {
                  this.error =
                    'error: could not parse operand ' + S + ' (' + J[S] + ').';
                  F = !0;
                  break;
                }
                var rb = ma.REGMAP.h[W[0]];
                this.debugEnabled &&
                  Pa.info(rb, {
                    fileName: 'openfl/utils/AGALMiniAssembler.hx',
                    lineNumber: 363,
                    className: 'openfl.utils.AGALMiniAssembler',
                    methodName: 'assemble',
                  });
                if (null == rb) {
                  this.error =
                    'error: could not find register name for operand ' +
                    S +
                    ' (' +
                    J[S] +
                    ').';
                  F = !0;
                  break;
                }
                if (k) {
                  if (0 == (rb.flags & 32)) {
                    this.error =
                      'error: register operand ' +
                      S +
                      ' (' +
                      J[S] +
                      ') only allowed in vertex programs.';
                    F = !0;
                    break;
                  }
                  if (Oa) {
                    this.error =
                      'error: register operand ' +
                      S +
                      ' (' +
                      J[S] +
                      ') relative adressing not allowed in fragment programs.';
                    F = !0;
                    break;
                  }
                } else if (0 == (rb.flags & 64)) {
                  this.error =
                    'error: register operand ' +
                    S +
                    ' (' +
                    J[S] +
                    ') only allowed in fragment programs.';
                  F = !0;
                  break;
                }
                J[S] = M.substr(
                  J[S],
                  J[S].indexOf(rb.name) + rb.name.length,
                  null,
                );
                var kb = Oa ? this.match(L[0], E) : this.match(J[S], E);
                W = 0;
                0 < kb.length && (W = G.parseInt(kb[0]));
                if (z.gt(W, rb.range)) {
                  B = rb.range + 1;
                  this.error =
                    'error: register operand ' +
                    S +
                    ' (' +
                    J[S] +
                    ') index exceeds limit of ' +
                    (null == B ? 'null' : G.string(z.toFloat(B))) +
                    '.';
                  F = !0;
                  break;
                }
                var pa = this.match(J[S], m),
                  ca = 0 == S && 0 == (w.flags & 128),
                  D = 2 == S && 0 != (w.flags & 8),
                  A = 0,
                  Q = 0,
                  Ga = 0;
                if (ca && Oa) {
                  this.error = 'error: relative can not be destination';
                  F = !0;
                  break;
                }
                if (0 < pa.length) {
                  for (var N = (kb = 0), U = pa[0].length, H = 1; H < U; )
                    ((N = M.cca(pa[0], H) - 120),
                      z.gt(N, 2) && (N = 3),
                      (kb = ca ? kb | (1 << N) : kb | (N << ((H - 1) << 1))),
                      ++H);
                  if (!ca) for (; 4 >= H; ) ((kb |= N << ((H - 1) << 1)), ++H);
                } else kb = ca ? 15 : 228;
                if (Oa) {
                  pa = this.match(L[0], x);
                  A = ma.REGMAP.h[pa[0]];
                  if (null == A) {
                    this.error = 'error: bad index register';
                    F = !0;
                    break;
                  }
                  A = A.emitCode;
                  N = this.match(L[0], C);
                  if (0 == N.length) {
                    this.error = 'error: bad index register select';
                    F = !0;
                    break;
                  }
                  Q = M.cca(N[0], 1) - 120;
                  z.gt(Q, 2) && (Q = 3);
                  L = this.match(L[0], y);
                  0 < L.length && (Ga = G.parseInt(L[0]));
                  if (0 > Ga || 255 < Ga) {
                    this.error =
                      'error: index offset ' + Ga + ' out of bounds. [0..255]';
                    F = !0;
                    break;
                  }
                  this.verbose &&
                    Pa.info(
                      'RELATIVE: type=' +
                        A +
                        '==' +
                        pa[0] +
                        ' sel=' +
                        (null == Q ? 'null' : G.string(z.toFloat(Q))) +
                        '==' +
                        N[0] +
                        ' idx=' +
                        (null == W ? 'null' : G.string(z.toFloat(W))) +
                        ' offset=' +
                        Ga,
                      {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 518,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      },
                    );
                }
                this.verbose &&
                  Pa.info(
                    '  emit argcode=' +
                      G.string(rb) +
                      '[' +
                      (null == W ? 'null' : G.string(z.toFloat(W))) +
                      '][' +
                      kb +
                      ']',
                    {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 525,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    },
                  );
                if (ca)
                  (this.agalcode.writeShort(W),
                    this.agalcode.writeByte(kb),
                    this.agalcode.writeByte(rb.emitCode),
                    (I -= 32));
                else {
                  if (D) {
                    this.verbose &&
                      Pa.info('  emit sampler', {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 541,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                    S = 5;
                    L = Oa = 0;
                    for (rb = null == K ? 0 : K.length; L < rb; )
                      ((kb = L++),
                        this.verbose &&
                          Pa.info('    opt: ' + K[kb], {
                            fileName: 'openfl/utils/AGALMiniAssembler.hx',
                            lineNumber: 552,
                            className: 'openfl.utils.AGALMiniAssembler',
                            methodName: 'assemble',
                          }),
                        (ca = ma.SAMPLEMAP.h[K[kb]]),
                        null == ca
                          ? ((Oa = parseFloat(K[kb])),
                            this.verbose &&
                              Pa.info('    bias: ' + Oa, {
                                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                                lineNumber: 565,
                                className: 'openfl.utils.AGALMiniAssembler',
                                methodName: 'assemble',
                              }))
                          : (16 != ca.flag && (S &= ~(15 << ca.flag)),
                            (S |= ca.mask << ca.flag)));
                    this.agalcode.writeShort(W);
                    this.agalcode.writeByte((8 * Oa) | 0);
                    this.agalcode.writeByte(0);
                    this.agalcode.writeUnsignedInt(S);
                    this.verbose &&
                      Pa.info('    bits: ' + (S - 5), {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 586,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                  } else
                    (0 == S && (this.agalcode.writeUnsignedInt(0), (I -= 32)),
                      this.agalcode.writeShort(W),
                      this.agalcode.writeByte(Ga),
                      this.agalcode.writeByte(kb),
                      this.agalcode.writeByte(rb.emitCode),
                      this.agalcode.writeByte(A),
                      this.agalcode.writeShort(Oa ? Q | 32768 : 0));
                  I -= 64;
                }
              }
              for (B = 0; B < I; ) (this.agalcode.writeByte(0), (B += 8));
              if (F) break;
            }
            ++P;
          }
          '' != this.error &&
            ((this.error += '\n  at line ' + P + ' ' + a[P]),
            Cd.set_length(this.agalcode, 0),
            Pa.info(this.error, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 631,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            }));
          if (this.debugEnabled) {
            d = 'generated bytecode:';
            k = Cd.get_length(this.agalcode);
            B = 0;
            for (v = k; B < v; )
              ((k = B++),
                0 == k % 16 && (d += '\n'),
                0 == k % 4 && (d += ' '),
                (k = R.hex(this.agalcode.b[k], 2)),
                2 > k.length && (k = '0' + k),
                (d += k));
            Pa.info(d, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 662,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            });
          }
          this.verbose &&
            Pa.info(
              'AGALMiniAssembler.assemble time: ' +
                (Ka.getTimer() - g) / 1e3 +
                's',
              {
                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                lineNumber: 667,
                className: 'openfl.utils.AGALMiniAssembler',
                methodName: 'assemble',
              },
            );
          return this.agalcode;
        },
        initregmap: function (a, b) {
          var d = ma.REGMAP,
            f = new yd(
              'va',
              'vertex attribute',
              0,
              b ? 1024 : 1 == a || 2 == a ? 7 : 15,
              66,
            );
          d.h.va = f;
          d = ma.REGMAP;
          f = new yd(
            'vc',
            'vertex constant',
            1,
            b ? 1024 : 1 == a ? 127 : 249,
            66,
          );
          d.h.vc = f;
          d = ma.REGMAP;
          f = new yd(
            'vt',
            'vertex temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            67,
          );
          d.h.vt = f;
          d = ma.REGMAP;
          f = new yd('vo', 'vertex output', 3, b ? 1024 : 0, 65);
          d.h.vo = f;
          d = ma.REGMAP;
          f = new yd('vi', 'varying', 4, b ? 1024 : 1 == a ? 7 : 9, 99);
          d.h.vi = f;
          d = ma.REGMAP;
          f = new yd(
            'fc',
            'fragment constant',
            1,
            b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199,
            34,
          );
          d.h.fc = f;
          d = ma.REGMAP;
          f = new yd(
            'ft',
            'fragment temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            35,
          );
          d.h.ft = f;
          d = ma.REGMAP;
          f = new yd('fs', 'texture sampler', 5, b ? 1024 : 7, 34);
          d.h.fs = f;
          d = ma.REGMAP;
          f = new yd('fo', 'fragment output', 3, b ? 1024 : 1 == a ? 0 : 3, 33);
          d.h.fo = f;
          d = ma.REGMAP;
          f = new yd(
            'fd',
            'fragment depth output',
            6,
            b ? 1024 : 1 == a ? -1 : 0,
            33,
          );
          d.h.fd = f;
          d = ma.REGMAP;
          f = new yd('iid', 'instance id', 7, b ? 1024 : 0, 66);
          d.h.iid = f;
          f = ma.REGMAP.h.vo;
          ma.REGMAP.h.op = f;
          f = ma.REGMAP.h.vi;
          ma.REGMAP.h.i = f;
          f = ma.REGMAP.h.vi;
          ma.REGMAP.h.v = f;
          f = ma.REGMAP.h.fo;
          ma.REGMAP.h.oc = f;
          f = ma.REGMAP.h.fd;
          ma.REGMAP.h.od = f;
          f = ma.REGMAP.h.vi;
          ma.REGMAP.h.fi = f;
        },
        match: function (a, b) {
          for (var d = [], f = 0; b.matchSub(a, f); )
            ((f = b.matched(0)),
              d.push(f),
              (f = b.matchedPos().pos + f.length));
          return d;
        },
        __class__: ma,
      };
      var tb = function (a, b, d, f) {
        this.name = a;
        this.numRegister = b;
        this.emitCode = d;
        this.flags = f;
      };
      h['openfl.utils._AGALMiniAssembler.OpCode'] = tb;
      tb.__name__ = 'openfl.utils._AGALMiniAssembler.OpCode';
      tb.prototype = {
        toString: function () {
          return (
            '[OpCode name="' +
            this.name +
            '", numRegister=' +
            this.numRegister +
            ', emitCode=' +
            this.emitCode +
            ', flags=' +
            this.flags +
            ']'
          );
        },
        __class__: tb,
      };
      var yd = function (a, b, d, f, g) {
        this.name = a;
        this.longName = b;
        this.emitCode = d;
        this.range = f;
        this.flags = g;
      };
      h['openfl.utils._AGALMiniAssembler.Register'] = yd;
      yd.__name__ = 'openfl.utils._AGALMiniAssembler.Register';
      yd.prototype = {
        toString: function () {
          return (
            '[Register name="' +
            this.name +
            '", longName="' +
            this.longName +
            '", emitCode=' +
            (null == this.emitCode
              ? 'null'
              : G.string(z.toFloat(this.emitCode))) +
            ', range=' +
            (null == this.range ? 'null' : G.string(z.toFloat(this.range))) +
            ', flags=' +
            (null == this.flags ? 'null' : G.string(z.toFloat(this.flags))) +
            ']'
          );
        },
        __class__: yd,
      };
      var Rb = function (a, b, d) {
        this.name = a;
        this.flag = b;
        this.mask = d;
      };
      h['openfl.utils._AGALMiniAssembler.Sampler'] = Rb;
      Rb.__name__ = 'openfl.utils._AGALMiniAssembler.Sampler';
      Rb.prototype = { __class__: Rb };
      var Kj = function () {};
      h['openfl.utils.IAssetCache'] = Kj;
      Kj.__name__ = 'openfl.utils.IAssetCache';
      Kj.__isInterface__ = !0;
      Kj.prototype = {
        __class__: Kj,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var Lj = function () {
        this.__enabled = !0;
        this.bitmapData = new Sa();
        this.font = new Sa();
        this.sound = new Sa();
      };
      h['openfl.utils.AssetCache'] = Lj;
      Lj.__name__ = 'openfl.utils.AssetCache';
      Lj.__interfaces__ = [Kj];
      Lj.prototype = {
        getFont: function (a) {
          return this.font.h[a];
        },
        hasFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.font.h, a);
        },
        setFont: function (a, b) {
          this.font.h[a] = b;
        },
        get_enabled: function () {
          return this.__enabled;
        },
        __class__: Lj,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var Ke = function () {
        Mb.call(this);
      };
      h['openfl.utils.AssetLibrary'] = Ke;
      Ke.__name__ = 'openfl.utils.AssetLibrary';
      Ke.fromBundle = function (a) {
        a = Mb.fromBundle(a);
        if (null != a) {
          if (a instanceof Ke) return a;
          var b = new Ke();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      Ke.fromManifest = function (a) {
        a = Mb.fromManifest(a);
        if (null != a) {
          if (a instanceof Ke) return a;
          var b = new Ke();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      Ke.__super__ = Mb;
      Ke.prototype = w(Mb.prototype, {
        bind: function (a, b) {
          return !1;
        },
        exists: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.exists(a, b)
            : Mb.prototype.exists.call(this, a, b);
        },
        getAsset: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.getAsset(a, b)
            : Mb.prototype.getAsset.call(this, a, b);
        },
        getAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.getAudioBuffer(a)
            : Mb.prototype.getAudioBuffer.call(this, a);
        },
        getBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.getBytes(a)
            : Mb.prototype.getBytes.call(this, a);
        },
        getFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.getFont(a)
            : Mb.prototype.getFont.call(this, a);
        },
        getImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.getImage(a)
            : Mb.prototype.getImage.call(this, a);
        },
        getPath: function (a) {
          return null != this.__proxy
            ? this.__proxy.getPath(a)
            : Mb.prototype.getPath.call(this, a);
        },
        getText: function (a) {
          return null != this.__proxy
            ? this.__proxy.getText(a)
            : Mb.prototype.getText.call(this, a);
        },
        isLocal: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.isLocal(a, b)
            : Mb.prototype.isLocal.call(this, a, b);
        },
        load: function () {
          return null != this.__proxy
            ? this.__proxy.load()
            : Mb.prototype.load.call(this);
        },
        loadAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadAudioBuffer(a)
            : Mb.prototype.loadAudioBuffer.call(this, a);
        },
        loadBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadBytes(a)
            : Mb.prototype.loadBytes.call(this, a);
        },
        loadFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadFont(a)
            : Mb.prototype.loadFont.call(this, a);
        },
        loadImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadImage(a)
            : Mb.prototype.loadImage.call(this, a);
        },
        loadText: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadText(a)
            : Mb.prototype.loadText.call(this, a);
        },
        unload: function () {
          null != this.__proxy
            ? this.__proxy.unload()
            : Mb.prototype.unload.call(this);
        },
        __class__: Ke,
      });
      var $b = function () {};
      h['openfl.utils.Assets'] = $b;
      $b.__name__ = 'openfl.utils.Assets';
      $b.exists = function (a, b) {
        return Aa.exists(a, b);
      };
      $b.getFont = function (a, b) {
        null == b && (b = !0);
        if (b && $b.cache.get_enabled() && $b.cache.hasFont(a))
          return $b.cache.getFont(a);
        var d = Aa.getFont(a, !1);
        if (null != d) {
          var f = new ua();
          f.__fromLimeFont(d);
          b && $b.cache.get_enabled() && $b.cache.setFont(a, f);
          return f;
        }
        return new ua();
      };
      $b.getText = function (a) {
        return Aa.getText(a);
      };
      var Cd = {
          __properties__: {
            set_length: 'set_length',
            get_length: 'get_length',
          },
          fromArrayBuffer: function (a) {
            return null == a ? null : Ic.fromBytes(yb.ofData(a));
          },
          fromBytes: function (a) {
            return null == a ? null : a instanceof Ic ? a : Ic.fromBytes(a);
          },
          toArrayBuffer: function (a) {
            return a.b.bufferValue;
          },
          toBytes: function (a) {
            return a;
          },
          get_length: function (a) {
            return null == a ? 0 : a.length;
          },
          set_length: function (a, b) {
            0 <= b && (a.__resize(b), b < a.position && (a.position = b));
            return (a.length = b);
          },
        },
        Kl = function () {};
      h['openfl.utils.IDataOutput'] = Kl;
      Kl.__name__ = 'openfl.utils.IDataOutput';
      Kl.__isInterface__ = !0;
      var Ll = function () {};
      h['openfl.utils.IDataInput'] = Ll;
      Ll.__name__ = 'openfl.utils.IDataInput';
      Ll.__isInterface__ = !0;
      var Ic = function (a) {
        null == a && (a = 0);
        var b = new yb(new ArrayBuffer(a));
        yb.call(this, b.b.buffer);
        this.__allocated = a;
        null == Ic.__defaultEndian &&
          (pc.get_endianness() == Qi.LITTLE_ENDIAN
            ? (Ic.__defaultEndian = 1)
            : (Ic.__defaultEndian = 0));
        this.__endian = Ic.__defaultEndian;
        this.objectEncoding = Ic.defaultObjectEncoding;
        this.position = 0;
      };
      h['openfl.utils.ByteArrayData'] = Ic;
      Ic.__name__ = 'openfl.utils.ByteArrayData';
      Ic.__interfaces__ = [Kl, Ll];
      Ic.fromBytes = function (a) {
        var b = new Ic();
        b.__fromBytes(a);
        return b;
      };
      Ic.__super__ = yb;
      Ic.prototype = w(yb.prototype, {
        readByte: function () {
          var a = this.readUnsignedByte();
          return 0 != (a & 128) ? a - 256 : a;
        },
        readInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            d = this.readUnsignedByte(),
            f = this.readUnsignedByte();
          return 1 == this.__endian
            ? (f << 24) | (d << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (d << 8) | f;
        },
        readUnsignedByte: function () {
          if (this.position < this.length) return this.b[this.position++];
          throw new eh();
        },
        readUnsignedInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            d = this.readUnsignedByte(),
            f = this.readUnsignedByte();
          return 1 == this.__endian
            ? (f << 24) | (d << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (d << 8) | f;
        },
        readUnsignedShort: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          return 1 == this.__endian ? (b << 8) + a : (a << 8) | b;
        },
        readUTF: function () {
          var a = this.readUnsignedShort();
          return this.readUTFBytes(a);
        },
        readUTFBytes: function (a) {
          if (this.position + a > this.length) throw new eh();
          this.position += a;
          return this.getString(this.position - a, a);
        },
        writeByte: function (a) {
          this.__resize(this.position + 1);
          this.b[this.position++] = a & 255;
        },
        writeBytes: function (a, b, d) {
          null == d && (d = 0);
          null == b && (b = 0);
          0 != Cd.get_length(a) &&
            (0 == d && (d = Cd.get_length(a) - b),
            this.__resize(this.position + d),
            this.blit(this.position, a, b, d),
            (this.position += d));
        },
        writeInt: function (a) {
          this.__resize(this.position + 4);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 24) & 255))
            : ((this.b[this.position++] = (a >> 24) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeShort: function (a) {
          this.__resize(this.position + 2);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255))
            : ((this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeUnsignedInt: function (a) {
          this.writeInt(a);
        },
        __fromBytes: function (a) {
          this.b = a.b;
          this.__allocated = a.length;
          this.data = a.data;
          this.length = a.length;
        },
        __resize: function (a) {
          if (a > this.__allocated) {
            var b = new yb(new ArrayBuffer((3 * (a + 1)) >> 1));
            if (0 < this.__allocated) {
              var d = this.length;
              this.length = this.__allocated;
              b.blit(0, this, 0, this.__allocated);
              this.length = d;
            }
            this.b = b.b;
            this.__allocated = b.length;
            this.data = b.data;
          }
          this.length < a && (this.length = a);
        },
        __class__: Ic,
      });
      var Ad = {
          __get: function (a, b) {
            if (null == a || null == b) return null;
            if (Object.prototype.hasOwnProperty.call(a, b))
              return N.field(a, b);
            if (a instanceof hb) {
              var d = a.getChildByName(b);
              if (null != d) return d;
            }
            return N.getProperty(a, b);
          },
          __eq: function (a, b) {
            return a == b;
          },
        },
        Mj = function () {};
      h['haxe.lang.Iterator'] = Mj;
      Mj.__name__ = 'haxe.lang.Iterator';
      Mj.__isInterface__ = !0;
      Mj.prototype = { __class__: Mj };
      var Nj = function () {};
      h['haxe.lang.Iterable'] = Nj;
      Nj.__name__ = 'haxe.lang.Iterable';
      Nj.__isInterface__ = !0;
      Nj.prototype = { __class__: Nj };
      var zi = function (a, b) {
        null == b && (b = 0);
        if (isNaN(a) || 0 > a)
          throw new Xb(
            'The delay specified is negative or not a finite number',
          );
        ka.call(this);
        this.__delay = a;
        this.__repeatCount = b;
        this.running = !1;
        this.currentCount = 0;
      };
      h['openfl.utils.Timer'] = zi;
      zi.__name__ = 'openfl.utils.Timer';
      zi.__super__ = ka;
      zi.prototype = w(ka.prototype, {
        start: function () {
          this.running ||
            ((this.running = !0),
            (this.__timerID = window.setInterval(
              m(this, this.timer_onTimer),
              this.__delay | 0,
            )));
        },
        stop: function () {
          this.running = !1;
          null != this.__timerID &&
            (window.clearInterval(this.__timerID), (this.__timerID = null));
        },
        __handleUpdateAfterEvent: function () {
          null != Ka.get_current() &&
            null != Ka.get_current().stage &&
            Ka.get_current().stage.__renderAfterEvent();
        },
        timer_onTimer: function () {
          this.currentCount++;
          if (
            0 < this.__repeatCount &&
            this.currentCount >= this.__repeatCount
          ) {
            this.stop();
            var a = new yg('timer');
            this.dispatchEvent(a);
            a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
            a = new yg('timerComplete');
          } else a = new yg('timer');
          this.dispatchEvent(a);
          a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
        },
        __class__: zi,
      });
      var yc = function () {};
      h['openfl.utils._internal.Lib'] = yc;
      yc.__name__ = 'openfl.utils._internal.Lib';
      yc.application = null;
      yc.current = null;
      var If = function () {
        this.rollOutStack = [];
      };
      h['openfl.utils._internal.TouchData'] = If;
      If.__name__ = 'openfl.utils._internal.TouchData';
      If.prototype = {
        reset: function () {
          this.touchOverTarget = this.touchDownTarget = this.touch = null;
          this.rollOutStack.splice(0, this.rollOutStack.length);
        },
        __class__: If,
      };
      D.$haxeUID |= 0;
      'undefined' != typeof performance &&
        'function' == typeof performance.now &&
        (M.now = performance.now.bind(performance));
      h.Math = Math;
      null == String.fromCodePoint &&
        (String.fromCodePoint = function (a) {
          return 65536 > a
            ? String.fromCharCode(a)
            : String.fromCharCode((a >> 10) + 55232) +
                String.fromCharCode((a & 1023) + 56320);
        });
      Object.defineProperty(String.prototype, '__class__', {
        value: (h.String = String),
        enumerable: !1,
        writable: !0,
      });
      String.__name__ = 'String';
      h.Array = Array;
      Array.__name__ = 'Array';
      Date.prototype.__class__ = h.Date = Date;
      Date.__name__ = 'Date';
      var Ol = {},
        $l = {},
        am = Number,
        Zl = Boolean,
        Rl = {},
        Sl = {};
      fd.NIL = new fd(null, null);
      Fa.__toStr = {}.toString;
      'undefined' == typeof window &&
        (D.onmessage = function (a) {
          a = a.data;
          try {
            ((D.onmessage = ((J = pd.__current), m(J, J.dispatchMessage))),
              bm.toFunction(a)());
          } catch (b) {
            ((Na.lastError = b), pd.__current.destroy());
          }
        });
      U.__alpha16 = new Uint32Array(256);
      for (var Bg = 0; 256 > Bg; ) {
        var hh = Bg++;
        U.__alpha16[hh] = Math.ceil(257.00392156862745 * hh);
      }
      U.__clamp = new Uint8Array(511);
      for (Bg = 0; 255 > Bg; ) ((hh = Bg++), (U.__clamp[hh] = hh));
      for (Bg = 255; 511 > Bg; ) ((hh = Bg++), (U.__clamp[hh] = 255));
      Pa.level = 3;
      'undefined' == typeof console && (console = {});
      null == console.log && (console.log = function () {});
      B.hitTestCanvas = Ve.get_supported()
        ? window.document.createElement('canvas')
        : null;
      B.hitTestContext = Ve.get_supported()
        ? B.hitTestCanvas.getContext('2d')
        : null;
      da.__meta__ = {
        fields: {
          __cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
          removeEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      da.__broadcastEvents = new Sa();
      da.__instanceCount = 0;
      da.__tempStack = new Ob(
        function () {
          return ra.toObjectVector(null);
        },
        function (a) {
          a.set_length(0);
        },
      );
      ua.__fontByName = new Sa();
      ua.__registeredFonts = [];
      S.Element = 0;
      S.PCData = 1;
      S.CData = 2;
      S.Comment = 3;
      S.DocType = 4;
      S.ProcessingInstruction = 5;
      S.Document = 6;
      Za.offset = 10;
      Za.delay = 4;
      Za.instance = null;
      ta.windows = [];
      r.black = 0;
      r.dark = 4473924;
      r.medium = 8947848;
      r.light = 13421772;
      r.white = 16777215;
      r.uiFont = '_sans';
      r.uiFontMono = '_typewriter';
      r.smallSize = 20;
      r.normalSize = 24;
      vc.okCancel = ['OK', 'Cancel'];
      dd.maxFaceLength = 13;
      zc.lastTab = 0;
      we.hintText = '* Shift+click a tag to learn its effect.';
      Eb.MAX_SIZE = 16777216;
      Eb.MARGINS = 4;
      Eb.embeddedScanned = !1;
      Eb.embedded = (function (a) {
        a = new Sa();
        a.h.ui_font = {
          name: 'Share Tech',
          url: 'https://fonts.googleapis.com/css2?family=Share+Tech&display=swap',
        };
        return a;
      })(this);
      Hb.windowDensity = 0.75;
      Hb.avgRoomSize = 8;
      Hb.roomSizeChaos = 1;
      Hb.regularRooms = !0;
      Hb.preferCorners = !1;
      Hb.preferWalls = !1;
      Hb.connectivity = 0.5;
      I.__pool = new Ob(
        function () {
          return new I();
        },
        function (a) {
          a.setTo(0, 0);
        },
      );
      t.seed = 1;
      qa.__meta__ = {
        fields: {
          equals: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      qa.__identity = new qa();
      qa.__pool = new Ob(
        function () {
          return new qa();
        },
        function (a) {
          a.identity();
        },
      );
      Ib.__pool = new Ob(
        function () {
          return new Ib();
        },
        function (a) {
          a.__identity();
        },
      );
      aa.salon = Ih.proto();
      aa.bathroom = vh.proto();
      aa.bedroom = wh.proto();
      aa.kitchen = Ch.proto();
      aa.storage = Mh.proto();
      aa.hall = Bh.proto();
      aa.gallery = Wf.proto();
      aa.cellar = xh.proto();
      aa.attic = uh.proto();
      aa.study = Jh.proto();
      aa.library = Dh.proto();
      aa.workshop = ol.proto();
      aa.passage = Yf.proto();
      aa.observatory = Fh.proto();
      aa.laboratory = nl.proto();
      aa.lookout = Eh.proto();
      aa.greenhouse = Ah.proto();
      aa.studio = Zf.proto();
      aa.vault = Lh.proto();
      aa.chapel = yh.proto();
      aa.trophy = Kh.proto();
      aa.armoury = ml.proto();
      aa.generic = Vf.chamber();
      aa.corridor = Vf.corridor();
      aa.stairhall = Vf.stairhall();
      aa.special = [
        aa.study,
        aa.library,
        aa.workshop,
        aa.passage,
        aa.laboratory,
        aa.observatory,
        aa.greenhouse,
        aa.chapel,
        aa.studio,
        aa.trophy,
        aa.armoury,
        aa.lookout,
        aa.vault,
      ];
      aa.gothicSet = !1;
      Ma.MAX_SIZE = 11;
      Ma.SIZE = ['small', 'medium', 'large'];
      Ma.HEIGHT = ['low', 'tall'];
      Ma.ALL =
        'small medium large square low tall slab regular mechanical organic spiral basement blank transparent generic'.split(
          ' ',
        );
      ub.planView = !0;
      Bc.dark = !1;
      ed.curFloor = 0;
      rf.MARGIN = 10;
      fc.lastCols = 2;
      fc.lastDPC = 100;
      fc.lastFloor = !0;
      fc.lastProps = !0;
      fc.lastAnnote = !0;
      Ae.COLLAPSED = '+ Layers';
      Ae.EXPANDED = '- Layers';
      ye.nFloors = 0;
      oa.NORTH = new oa(-1, 0);
      oa.SOUTH = new oa(1, 0);
      oa.EAST = new oa(0, 1);
      oa.WEST = new oa(0, -1);
      oa.NE = new oa(-1, 1);
      oa.SE = new oa(1, 1);
      oa.NW = new oa(-1, -1);
      oa.SW = new oa(1, -1);
      oa.CARDINAL = [oa.NORTH, oa.EAST, oa.SOUTH, oa.WEST];
      oa.ORDINAL = [oa.NE, oa.SE, oa.SW, oa.NW];
      oa.ROSE = oa.CARDINAL.concat(oa.ORDINAL);
      Ta.tetro0 = ' x xxx';
      Ta.tetro1 = 'x  xxx';
      Ta.tetro2 = 'xx xx ';
      Ta.tetro3 = 'xx  xx';
      Ta.tetro = [Ta.tetro0, Ta.tetro1, Ta.tetro2, Ta.tetro3];
      Ta.pento0 = ' xxxx  x ';
      Ta.pento1 = 'xx xx x  ';
      Ta.pento2 = 'xxx x  x ';
      Ta.pento3 = 'x xxxx';
      Ta.pento4 = 'x  x  xxx';
      Ta.pento5 = 'x  xx  xx';
      Ta.pento6 = ' x xxx x ';
      Ta.pento7 = 'xx  x  xx';
      Ta.pento = [
        Ta.pento0,
        Ta.pento1,
        Ta.pento2,
        Ta.pento3,
        Ta.pento4,
        Ta.pento5,
        Ta.pento6,
        Ta.pento7,
      ];
      Od.HEAD_SIZE = 0.1;
      Od.HEAD_ANGLE = 0.4 * Math.PI;
      ad.OPEN_ANGLE = Math.PI / 3;
      ad.mode = 'hidden';
      Wd.angle = I.polar(1, Math.PI / 4);
      ie.useFading = !0;
      Be.stepSize = 0.1;
      mb.mode = 'dots';
      mb.double = !1;
      mb.dashes = [0.1, 0.1];
      mb.dots = [0.03, 0.07];
      mb.solid = [1, 0];
      wd.nStrokes = 5;
      wd.clusterSize = 0.18;
      wd.z = 1.2;
      Ac.isVisible = !0;
      Ac.showNumbers = !1;
      eb.showArrows = !0;
      eb.showProps = !0;
      eb.showAO = !0;
      eb.showLights = !0;
      eb.exportFloor = !0;
      eb.exportProps = !0;
      eb.exportAnnote = !0;
      Q.colorPaper = 14869216;
      Q.colorInk = 3158840;
      Q.colorFloor = 15790320;
      Q.colorWall = 3158840;
      Q.colorProps = 15790320;
      Q.colorWindow = 15790320;
      Q.colorStairs = 15790320;
      Q.colorLabels = 3357542;
      Q.strNormal10 = 0.3;
      Q.strGrid10 = 0.2;
      Q.alphaGrid = 0.5;
      Q.alphaAO = 0.3;
      Q.alphaLight = 0;
      Q.fontRoom = {
        face: null,
        embedded: 'ui_font',
        size: 28,
        bold: !1,
        italic: !1,
      };
      Q.hatching = !1;
      Q.strokeNormal = 0.03;
      Q.strokeGrid = 0.02;
      Ca._p0 = new I(-819.2, 0);
      Ca._p1 = new I(819.2, 0);
      ac.lx = 0;
      ac.ly = 0;
      Ja.JOINTS = (function (a) {
        a = new ic();
        a.h[2] = 'round';
        a.h[1] = 'miter';
        a.h[0] = 'bevel';
        return a;
      })(this);
      Ja.CAPS = (function (a) {
        a = new ic();
        a.h[1] = 'round';
        a.h[2] = 'square';
        a.h[0] = 'butt';
        return a;
      })(this);
      Ja.BLEND_MODES = (function (a) {
        a = new ic();
        a.h[10] = 'normal';
        a.h[9] = 'multiply';
        a.h[0] = 'plus-lighter';
        return a;
      })(this);
      Ja.gradients = [];
      Ja.imports = [];
      Ja.handleObject = null;
      Ja.substituteFont = Ja.substituteGenerics;
      fb.baseURL = 'https://watabou.github.io/city-generator/0.10.0/';
      Re.gold = 2 / (3 + Math.sqrt(5));
      x.fortified = !1;
      x.columnWidth = 40;
      x.floorHeight = 60;
      x.roofSlope = 1.5;
      x.apronHeight = 12;
      x.baseHeight = 10;
      x.baseThickness = 2;
      L.colorInk = 3355448;
      L.colorBg = 16053490;
      L.colorWall = L.colorBg;
      L.colorRoof = L.colorBg;
      L.colorBase = L.colorWall;
      L.colorStairs = L.colorBase;
      L.colorDoor = L.colorBg;
      L.colorWindow = L.colorBg;
      L.colorFrame = L.colorWall;
      L.colorGrass = L.colorInk;
      L.colorLamp = L.colorWall;
      L.colorSign1 = L.colorBg;
      L.colorSign2 = L.colorInk;
      L.strokeNormal = 1.5;
      L.strokeFine = 0.8;
      L.mode = ze.LINEWORK;
      Xd.maxRatio = 2.5;
      rc.f = rc.decay;
      rc.color = 0;
      rc.th0 = 1;
      rc.th1 = 0;
      dg.STEP_DEPTH = 5;
      vf.STEP_HEIGHT = 3.5;
      sf.H = 4;
      cb.plurals = (function (a) {
        a = new Sa();
        a.h.child = 'children';
        a.h.fish = 'fish';
        return a;
      })(this);
      xe.rng = Math.random;
      qh.values = (function (a) {
        a = new Sa();
        a.h.aliceblue = 15792383;
        a.h.antiquewhite = 16444375;
        a.h.aqua = 65535;
        a.h.aquamarine = 8388564;
        a.h.azure = 15794175;
        a.h.beige = 16119260;
        a.h.bisque = 16770244;
        a.h.black = 0;
        a.h.blanchedalmond = 16772045;
        a.h.blue = 255;
        a.h.blueviolet = 9055202;
        a.h.brown = 10824234;
        a.h.burlywood = 14596231;
        a.h.cadetblue = 6266528;
        a.h.chartreuse = 8388352;
        a.h.chocolate = 13789470;
        a.h.coral = 16744272;
        a.h.cornflowerblue = 6591981;
        a.h.cornsilk = 16775388;
        a.h.crimson = 14423100;
        a.h.cyan = 65535;
        a.h.darkblue = 139;
        a.h.darkcyan = 35723;
        a.h.darkgoldenrod = 12092939;
        a.h.darkgreen = 25600;
        a.h.darkgrey = 11119017;
        a.h.darkkhaki = 12433259;
        a.h.darkmagenta = 9109643;
        a.h.darkolivegreen = 5597999;
        a.h.darkorange = 16747520;
        a.h.darkorchid = 10040012;
        a.h.darkred = 9109504;
        a.h.darksalmon = 15308410;
        a.h.darkseagreen = 9419919;
        a.h.darkslateblue = 4734347;
        a.h.darkslategrey = 3100495;
        a.h.darkturquoise = 52945;
        a.h.darkviolet = 9699539;
        a.h.deeppink = 16716947;
        a.h.deepskyblue = 49151;
        a.h.dimgrey = 6908265;
        a.h.dodgerblue = 2003199;
        a.h.firebrick = 11674146;
        a.h.floralwhite = 16775920;
        a.h.forestgreen = 2263842;
        a.h.fuchsia = 16711935;
        a.h.gainsboro = 14474460;
        a.h.ghostwhite = 16316671;
        a.h.goldenrod = 14329120;
        a.h.gold = 16766720;
        a.h.green = 32768;
        a.h.greenyellow = 11403055;
        a.h.grey = 8421504;
        a.h.honeydew = 15794160;
        a.h.hotpink = 16738740;
        a.h.indianred = 13458524;
        a.h.indigo = 4915330;
        a.h.ivory = 16777200;
        a.h.khaki = 15787660;
        a.h.lavenderblush = 16773365;
        a.h.lavender = 15132410;
        a.h.lawngreen = 8190976;
        a.h.lemonchiffon = 16775885;
        a.h.lightblue = 11393254;
        a.h.lightcoral = 15761536;
        a.h.lightcyan = 14745599;
        a.h.lightgoldenrodyellow = 16448210;
        a.h.lightgreen = 9498256;
        a.h.lightgrey = 13882323;
        a.h.lightpink = 16758465;
        a.h.lightsalmon = 16752762;
        a.h.lightseagreen = 2142890;
        a.h.lightskyblue = 8900346;
        a.h.lightslategrey = 7833753;
        a.h.lightsteelblue = 11584734;
        a.h.lightyellow = 16777184;
        a.h.lime = 65280;
        a.h.limegreen = 3329330;
        a.h.linen = 16445670;
        a.h.magenta = 16711935;
        a.h.maroon = 8388608;
        a.h.mediumaquamarine = 6737322;
        a.h.mediumblue = 205;
        a.h.mediumorchid = 12211667;
        a.h.mediumpurple = 9662683;
        a.h.mediumseagreen = 3978097;
        a.h.mediumslateblue = 8087790;
        a.h.mediumspringgreen = 64154;
        a.h.mediumturquoise = 4772300;
        a.h.mediumvioletred = 13047173;
        a.h.midnightblue = 1644912;
        a.h.mintcream = 16121850;
        a.h.mistyrose = 16770273;
        a.h.moccasin = 16770229;
        a.h.navajowhite = 16768685;
        a.h.navy = 128;
        a.h.oldlace = 16643558;
        a.h.olive = 8421376;
        a.h.olivedrab = 7048739;
        a.h.orange = 16753920;
        a.h.orangered = 16729344;
        a.h.orchid = 14315734;
        a.h.palegoldenrod = 15657130;
        a.h.palegreen = 10025880;
        a.h.paleturquoise = 11529966;
        a.h.palevioletred = 14381203;
        a.h.papayawhip = 16773077;
        a.h.peachpuff = 16767673;
        a.h.peru = 13468991;
        a.h.pink = 16761035;
        a.h.plum = 14524637;
        a.h.powderblue = 11591910;
        a.h.purple = 8388736;
        a.h.rebeccapurple = 6697881;
        a.h.red = 16711680;
        a.h.rosybrown = 12357519;
        a.h.royalblue = 4286945;
        a.h.saddlebrown = 9127187;
        a.h.salmon = 16416882;
        a.h.sandybrown = 16032864;
        a.h.seagreen = 3050327;
        a.h.seashell = 16774638;
        a.h.sienna = 10506797;
        a.h.silver = 12632256;
        a.h.skyblue = 8900331;
        a.h.slateblue = 6970061;
        a.h.slategrey = 7372944;
        a.h.snow = 16775930;
        a.h.springgreen = 65407;
        a.h.steelblue = 4620980;
        a.h.tan = 13808780;
        a.h.teal = 32896;
        a.h.thistle = 14204888;
        a.h.tomato = 16737095;
        a.h.turquoise = 4251856;
        a.h.violet = 15631086;
        a.h.wheat = 16113331;
        a.h.white = 16777215;
        a.h.whitesmoke = 16119285;
        a.h.yellow = 16776960;
        a.h.yellowgreen = 10145074;
        return a;
      })(this);
      Cb._tick = new gc();
      Cb.source = null;
      Cb.lastTime = 0;
      Cb.timeScale = 1;
      gd.USE_CACHE = !1;
      gd.USE_ENUM_INDEX = !1;
      gd.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      gd.BASE64_CODES = null;
      bd.DEFAULT_RESOLVER = new Ai();
      bd.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      bd.CODES = null;
      Me.escapes = (function (a) {
        a = new Sa();
        a.h.lt = '<';
        a.h.gt = '>';
        a.h.amp = '&';
        a.h.quot = '"';
        a.h.apos = "'";
        return a;
      })(this);
      Qc.LEN_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, -1, -1,
      ];
      Qc.LEN_BASE_VAL_TBL = [
        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
        67, 83, 99, 115, 131, 163, 195, 227, 258,
      ];
      Qc.DIST_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, -1, -1,
      ];
      Qc.DIST_BASE_VAL_TBL = [
        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
        513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577,
      ];
      Qc.CODE_LENGTHS_POS = [
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ];
      Qc.FIXED_HUFFMAN = null;
      Rg.undefined = new Rg();
      yk.undefined = Rg.undefined;
      ya.activeRequests = 0;
      ya.requestLimit = 17;
      ya.requestQueue = new Ba();
      pd.__current = new pd(D.location.href);
      pd.__isWorker = 'undefined' == typeof window;
      pd.__messages = new Ba();
      pd.__resolveMethods = new Ba();
      Qa.dummyCharacter = '\u007f';
      Qa.windowID = 0;
      ke.DICTIONARY =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split(
          '',
        );
      ke.EXTENDED_DICTIONARY = (function (a) {
        a = [];
        for (var b = 0, d = ke.DICTIONARY; b < d.length; ) {
          var f = d[b];
          ++b;
          for (var g = 0, k = ke.DICTIONARY; g < k.length; ) {
            var h = k[g];
            ++g;
            a.push(f + h);
          }
        }
        return a;
      })(this);
      qd.MUL_TABLE = [
        1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265,
        497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269,
        261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369,
        361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69,
        271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446,
        55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371,
        367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317,
        157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277,
        275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491,
        61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221,
        439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202,
        401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185,
        23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341,
        339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79,
        315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295,
        147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69,
        275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130,
        259, 129, 257, 1,
      ];
      qd.SHG_TABLE = [
        0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14,
        14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15,
        15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15,
        12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14,
        16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16,
        14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16,
        15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16,
        17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16,
        17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15,
        16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17,
        17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17,
        16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14,
        17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16,
        17, 16, 17, 9,
      ];
      ab.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      nc.onUpdate = new wc();
      nc.__updated = !1;
      pe.sensorByID = new ic();
      pe.sensors = [];
      oc.devices = new ic();
      oc.onConnect = new Nk();
      jc.devices = new ic();
      jc.onConnect = new Ok();
      Yb.onCancel = new mg();
      Yb.onEnd = new mg();
      Yb.onMove = new mg();
      Yb.onStart = new mg();
      Aa.cache = new Rk();
      Aa.onChange = new wc();
      Aa.bundlePaths = new Sa();
      Aa.libraries = new Sa();
      Aa.libraryPaths = new Sa();
      Pa.throwErrors = !0;
      Ka.__lastTimerID = 0;
      Ka.__timers = new ic();
      Ee.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ui.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      qe.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Vi.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Fg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Nf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Cg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Tb.__meta__ = {
        fields: {
          image: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __framebufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __indexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __surface: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __vertexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __fromImage: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Tb.__tempVector = new Uf();
      hd.__meta__ = {
        fields: {
          __context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __type: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Xi.__meta__ = {
        fields: {
          cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix3: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applyMatrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeCairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Fe.__meta__ = {
        fields: {
          context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applySmoothing: { SuppressWarnings: ['checkstyle:Dynamic'] },
          setTransform: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      aj.__meta__ = {
        fields: {
          __element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Wg.__meta__ = {
        fields: {
          element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      rd.__meta__ = {
        fields: { glProgram: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      cd.maxTextureHeight = null;
      cd.maxTextureWidth = null;
      ee.__meta__ = {
        statics: {
          create: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
        fields: { parameters: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      ee.__rootURL = Ve.get_supported() ? window.document.URL : '';
      ja.__pool = new Ob(
        function () {
          return new ja();
        },
        function (a) {
          a.setTo(0, 0, 0, 0);
        },
      );
      Ua.__meta__ = {
        fields: {
          gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projection: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projectionFlipped: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Ua.__alphaValue = [1];
      Ua.__colorMultipliersValue = [0, 0, 0, 0];
      Ua.__colorOffsetsValue = [0, 0, 0, 0];
      Ua.__emptyColorValue = [0, 0, 0, 0];
      Ua.__hasColorTransformValue = [!1];
      Ua.__scissorRectangle = new ja();
      Ua.__textureSizeValue = [0, 0];
      ih.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { onComplete: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Dg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      dj.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      pg.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      rg.__meta__ = {
        fields: {
          __broadcastEvent: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __dispatchEvent: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchStack: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchTarget: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __handleError: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      uj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ug.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { _: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Vg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Af.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      jd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { o: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      jd.empty = new jd();
      B.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          windingRule: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createBitmapFill: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createGradientPattern: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      B.fillCommands = new jd();
      B.strokeCommands = new jd();
      X.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ge.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          renderTileContainer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Bf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Fd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ah.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ef.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Kb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Kb.blankBitmapData = new Tb(1, 1, !1, 0);
      Kb.tempColorTransform = new Ib(1, 1, 1, 1, 0, 0, 0, 0);
      Df.opaqueBitmapData = new Tb(1, 1, !1, 0);
      ne.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ie.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      V.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Gd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Gd.__textureSizeValue = [0, 0];
      Qb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      id.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      bf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ze.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      $e.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      He.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      fe.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Jf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      fj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          overrideIntValues: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      sb.__glDepthStencil = -1;
      sb.__glMaxTextureMaxAnisotropy = -1;
      sb.__glMaxViewportDims = -1;
      sb.__glMemoryCurrentAvailable = -1;
      sb.__glMemoryTotalAvailable = -1;
      sb.__glTextureMaxAnisotropy = -1;
      yj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      dh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Yc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Yc.limitedProfile = !0;
      sg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      zj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      tg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Kf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      bh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      vb.__meta__ = {
        fields: {
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __getGLFramebuffer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      vb.__supportsBGRA = null;
      Eg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ff.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ff.supportsWeakReference = Object.prototype.hasOwnProperty.call(
        D,
        'WeakRef',
      );
      Wc.__invertAlphaShader = new Ij();
      Wc.__blurAlphaShader = new Dj();
      Wc.__combineShader = new Fj();
      Wc.__innerCombineShader = new Hj();
      Wc.__combineKnockoutShader = new Ej();
      Wc.__innerCombineKnockoutShader = new Gj();
      Lf.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      ge.__soundChannels = [];
      ge.__soundTransform = new Lf();
      Pc.defaultObjectEncoding = 10;
      Je.followRedirects = !0;
      Je.idleTimeout = 0;
      Je.manageCookies = !0;
      qg.currentDomain = new qg(null);
      ue.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      gh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ia.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ia.__regexAlign = new xa('align\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Ia.__regexBreakTag = new xa('<br\\s*/?>', 'gi');
      Ia.__regexBlockIndent = new xa(
        'blockindent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Ia.__regexClass = new xa('class\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Ia.__regexColor = new xa('color\\s?=\\s?("#([^"]+)"|\'#([^\']+)\')', 'i');
      Ia.__regexEntityApos = new xa('&apos;', 'g');
      Ia.__regexEntityNbsp = new xa('&nbsp;', 'g');
      Ia.__regexCharEntity = new xa('&#(?:([0-9]+)|(x[0-9a-fA-F]+));', 'g');
      Ia.__regexFace = new xa('face\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Ia.__regexHTMLTag = new xa('<.*?>', 'g');
      Ia.__regexHref = new xa('href\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Ia.__regexIndent = new xa(
        ' indent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Ia.__regexLeading = new xa(
        'leading\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Ia.__regexLeftMargin = new xa(
        'leftmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Ia.__regexRightMargin = new xa(
        'rightmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Ia.__regexSize = new xa('size\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Ia.__regexTabStops = new xa(
        'tabstops\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Ag.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Db.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Jj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ob.__meta__ = {
        fields: {
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ob.numDevices = 0;
      ob.__deviceList = [];
      ob.__instances = [];
      ob.__devices = new za();
      sj.__cursor = 'auto';
      ma.__meta__ = {
        obj: {
          SuppressWarnings: [
            ['checkstyle:ConstantName', 'checkstyle:FieldDocComment'],
          ],
        },
      };
      ma.OPMAP = new Sa();
      ma.REGMAP = new Sa();
      ma.SAMPLEMAP = new Sa();
      ma.initialized = !1;
      tb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      yd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Rb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      $b.cache = new Lj();
      Ic.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ic.defaultObjectEncoding = 10;
      Ic.__defaultEndian = null;
      Ad.__meta__ = {
        statics: {
          __get: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Mj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Nj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      yc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      If.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { touch: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      If.__pool = new Ob(
        function () {
          return new If();
        },
        function (a) {
          a.reset();
        },
      );
      ha.main();
    })(
      'undefined' != typeof v
        ? v
        : 'undefined' != typeof window
          ? window
          : 'undefined' != typeof self
            ? self
            : this,
      'undefined' != typeof window
        ? window
        : 'undefined' != typeof D
          ? D
          : 'undefined' != typeof self
            ? self
            : this,
    );
  };
  'undefined' !== typeof self && self.constructor.name.includes('Worker')
    ? D({}, v)
    : ((O.lime = O.lime || {}),
      (O.lime.$scripts = O.lime.$scripts || {}),
      (O.lime.$scripts.Dwellings = D),
      (O.lime.embed = function (D) {
        var A = {},
          H = O.lime.$scripts[D];
        if (!H) throw Error('Cannot find project name "' + D + '"');
        H(A, v);
        for (var ha in A) O[ha] = O[ha] || A[ha];
        (H = A.lime || window.lime) &&
          H.embed &&
          this !== H.embed &&
          H.embed.apply(H, arguments);
        return A;
      }));
  'function' === typeof define &&
    define.amd &&
    (define([], function () {
      return O.lime;
    }),
    (define.__amd = define.amd),
    (define.amd = null));
};
$lime_init(
  'undefined' !== typeof exports
    ? exports
    : 'function' === typeof define && define.amd
      ? {}
      : 'undefined' !== typeof window
        ? window
        : 'undefined' !== typeof self
          ? self
          : this,
  'undefined' !== typeof window
    ? window
    : 'undefined' !== typeof global
      ? global
      : 'undefined' !== typeof self
        ? self
        : this,
);
('undefined' !== typeof self && self.constructor.name.includes('Worker')) ||
  (!(function () {
    var O = function () {
      this.init();
    };
    O.prototype = {
      init: function () {
        var h = this || v;
        return (
          (h._counter = 1e3),
          (h._html5AudioPool = []),
          (h.html5PoolSize = 10),
          (h._codecs = {}),
          (h._howls = []),
          (h._muted = !1),
          (h._volume = 1),
          (h._canPlayEvent = 'canplaythrough'),
          (h._navigator =
            'undefined' != typeof window && window.navigator
              ? window.navigator
              : null),
          (h.masterGain = null),
          (h.noAudio = !1),
          (h.usingWebAudio = !0),
          (h.autoSuspend = !0),
          (h.ctx = null),
          (h.autoUnlock = !0),
          h._setup(),
          h
        );
      },
      volume: function (h) {
        var q = this || v;
        if (
          ((h = parseFloat(h)), q.ctx || m(), void 0 !== h && 0 <= h && 1 >= h)
        ) {
          if (((q._volume = h), q._muted)) return q;
          q.usingWebAudio &&
            q.masterGain.gain.setValueAtTime(h, v.ctx.currentTime);
          for (var K = 0; K < q._howls.length; K++)
            if (!q._howls[K]._webAudio)
              for (
                var w = q._howls[K]._getSoundIds(), D = 0;
                D < w.length;
                D++
              ) {
                var pa = q._howls[K]._soundById(w[D]);
                pa && pa._node && (pa._node.volume = pa._volume * h);
              }
          return q;
        }
        return q._volume;
      },
      mute: function (h) {
        var q = this || v;
        q.ctx || m();
        q._muted = h;
        q.usingWebAudio &&
          q.masterGain.gain.setValueAtTime(
            h ? 0 : q._volume,
            v.ctx.currentTime,
          );
        for (var K = 0; K < q._howls.length; K++)
          if (!q._howls[K]._webAudio)
            for (var w = q._howls[K]._getSoundIds(), D = 0; D < w.length; D++) {
              var pa = q._howls[K]._soundById(w[D]);
              pa && pa._node && (pa._node.muted = !!h || pa._muted);
            }
        return q;
      },
      stop: function () {
        for (var h = this || v, q = 0; q < h._howls.length; q++)
          h._howls[q].stop();
        return h;
      },
      unload: function () {
        for (var h = this || v, q = h._howls.length - 1; 0 <= q; q--)
          h._howls[q].unload();
        return (
          h.usingWebAudio &&
            h.ctx &&
            void 0 !== h.ctx.close &&
            (h.ctx.close(), (h.ctx = null), m()),
          h
        );
      },
      codecs: function (h) {
        return (this || v)._codecs[h.replace(/^x-/, '')];
      },
      _setup: function () {
        var h = this || v;
        if (
          ((h.state = h.ctx ? h.ctx.state || 'suspended' : 'suspended'),
          h._autoSuspend(),
          !h.usingWebAudio)
        )
          if ('undefined' != typeof Audio)
            try {
              var q = new Audio();
              void 0 === q.oncanplaythrough && (h._canPlayEvent = 'canplay');
            } catch (K) {
              h.noAudio = !0;
            }
          else h.noAudio = !0;
        try {
          ((q = new Audio()), q.muted && (h.noAudio = !0));
        } catch (K) {}
        return (h.noAudio || h._setupCodecs(), h);
      },
      _setupCodecs: function () {
        var h = this || v,
          q = null;
        try {
          q = 'undefined' != typeof Audio ? new Audio() : null;
        } catch (Fb) {
          return h;
        }
        if (!q || 'function' != typeof q.canPlayType) return h;
        var m = q.canPlayType('audio/mpeg;').replace(/^no$/, ''),
          w = h._navigator ? h._navigator.userAgent : '',
          D = w.match(/OPR\/(\d+)/g);
        D = D && 33 > parseInt(D[0].split('/')[1], 10);
        var pa = -1 !== w.indexOf('Safari') && -1 === w.indexOf('Chrome');
        w = w.match(/Version\/(.*?) /);
        w = pa && w && 15 > parseInt(w[1], 10);
        return (
          (h._codecs = {
            mp3: !(
              D ||
              (!m && !q.canPlayType('audio/mp3;').replace(/^no$/, ''))
            ),
            mpeg: !!m,
            opus: !!q
              .canPlayType('audio/ogg; codecs="opus"')
              .replace(/^no$/, ''),
            ogg: !!q
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            oga: !!q
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            wav: !!(
              q.canPlayType('audio/wav; codecs="1"') ||
              q.canPlayType('audio/wav')
            ).replace(/^no$/, ''),
            aac: !!q.canPlayType('audio/aac;').replace(/^no$/, ''),
            caf: !!q.canPlayType('audio/x-caf;').replace(/^no$/, ''),
            m4a: !!(
              q.canPlayType('audio/x-m4a;') ||
              q.canPlayType('audio/m4a;') ||
              q.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            m4b: !!(
              q.canPlayType('audio/x-m4b;') ||
              q.canPlayType('audio/m4b;') ||
              q.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            mp4: !!(
              q.canPlayType('audio/x-mp4;') ||
              q.canPlayType('audio/mp4;') ||
              q.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            weba: !(
              w ||
              !q.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            webm: !(
              w ||
              !q.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            dolby: !!q
              .canPlayType('audio/mp4; codecs="ec-3"')
              .replace(/^no$/, ''),
            flac: !!(
              q.canPlayType('audio/x-flac;') || q.canPlayType('audio/flac;')
            ).replace(/^no$/, ''),
          }),
          h
        );
      },
      _unlockAudio: function () {
        var h = this || v;
        if (!h._audioUnlocked && h.ctx) {
          h._audioUnlocked = !1;
          h.autoUnlock = !1;
          h._mobileUnloaded ||
            44100 === h.ctx.sampleRate ||
            ((h._mobileUnloaded = !0), h.unload());
          h._scratchBuffer = h.ctx.createBuffer(1, 1, 22050);
          var q = function (m) {
            for (; h._html5AudioPool.length < h.html5PoolSize; )
              try {
                var K = new Audio();
                K._unlocked = !0;
                h._releaseHtml5Audio(K);
              } catch (Gb) {
                h.noAudio = !0;
                break;
              }
            for (m = 0; m < h._howls.length; m++)
              if (!h._howls[m]._webAudio) {
                K = h._howls[m]._getSoundIds();
                for (var w = 0; w < K.length; w++) {
                  var v = h._howls[m]._soundById(K[w]);
                  v &&
                    v._node &&
                    !v._node._unlocked &&
                    ((v._node._unlocked = !0), v._node.load());
                }
              }
            h._autoResume();
            var D = h.ctx.createBufferSource();
            D.buffer = h._scratchBuffer;
            D.connect(h.ctx.destination);
            void 0 === D.start ? D.noteOn(0) : D.start(0);
            'function' == typeof h.ctx.resume && h.ctx.resume();
            D.onended = function () {
              D.disconnect(0);
              h._audioUnlocked = !0;
              document.removeEventListener('touchstart', q, !0);
              document.removeEventListener('touchend', q, !0);
              document.removeEventListener('click', q, !0);
              document.removeEventListener('keydown', q, !0);
              for (var m = 0; m < h._howls.length; m++)
                h._howls[m]._emit('unlock');
            };
          };
          return (
            document.addEventListener('touchstart', q, !0),
            document.addEventListener('touchend', q, !0),
            document.addEventListener('click', q, !0),
            document.addEventListener('keydown', q, !0),
            h
          );
        }
      },
      _obtainHtml5Audio: function () {
        var h = this || v;
        if (h._html5AudioPool.length) return h._html5AudioPool.pop();
        h = new Audio().play();
        return (
          h &&
            'undefined' != typeof Promise &&
            (h instanceof Promise || 'function' == typeof h.then) &&
            h.catch(function () {
              console.warn(
                'HTML5 Audio pool exhausted, returning potentially locked audio object.',
              );
            }),
          new Audio()
        );
      },
      _releaseHtml5Audio: function (h) {
        var q = this || v;
        return (h._unlocked && q._html5AudioPool.push(h), q);
      },
      _autoSuspend: function () {
        var h = this;
        if (
          h.autoSuspend &&
          h.ctx &&
          void 0 !== h.ctx.suspend &&
          v.usingWebAudio
        ) {
          for (var q = 0; q < h._howls.length; q++)
            if (h._howls[q]._webAudio)
              for (var m = 0; m < h._howls[q]._sounds.length; m++)
                if (!h._howls[q]._sounds[m]._paused) return h;
          return (
            h._suspendTimer && clearTimeout(h._suspendTimer),
            (h._suspendTimer = setTimeout(function () {
              if (h.autoSuspend) {
                h._suspendTimer = null;
                h.state = 'suspending';
                var q = function () {
                  h.state = 'suspended';
                  h._resumeAfterSuspend &&
                    (delete h._resumeAfterSuspend, h._autoResume());
                };
                h.ctx.suspend().then(q, q);
              }
            }, 3e4)),
            h
          );
        }
      },
      _autoResume: function () {
        var h = this;
        if (h.ctx && void 0 !== h.ctx.resume && v.usingWebAudio)
          return (
            'running' === h.state &&
            'interrupted' !== h.ctx.state &&
            h._suspendTimer
              ? (clearTimeout(h._suspendTimer), (h._suspendTimer = null))
              : 'suspended' === h.state ||
                  ('running' === h.state && 'interrupted' === h.ctx.state)
                ? (h.ctx.resume().then(function () {
                    h.state = 'running';
                    for (var q = 0; q < h._howls.length; q++)
                      h._howls[q]._emit('resume');
                  }),
                  h._suspendTimer &&
                    (clearTimeout(h._suspendTimer), (h._suspendTimer = null)))
                : 'suspending' === h.state && (h._resumeAfterSuspend = !0),
            h
          );
      },
    };
    var v = new O(),
      D = function (h) {
        if (!h.src || 0 === h.src.length)
          return void console.error(
            'An array of source files must be passed with any new Howl.',
          );
        this.init(h);
      };
    D.prototype = {
      init: function (h) {
        var q = this;
        return (
          v.ctx || m(),
          (q._autoplay = h.autoplay || !1),
          (q._format = 'string' != typeof h.format ? h.format : [h.format]),
          (q._html5 = h.html5 || !1),
          (q._muted = h.mute || !1),
          (q._loop = h.loop || !1),
          (q._pool = h.pool || 5),
          (q._preload =
            ('boolean' != typeof h.preload && 'metadata' !== h.preload) ||
            h.preload),
          (q._rate = h.rate || 1),
          (q._sprite = h.sprite || {}),
          (q._src = 'string' != typeof h.src ? h.src : [h.src]),
          (q._volume = void 0 !== h.volume ? h.volume : 1),
          (q._xhr = {
            method: h.xhr && h.xhr.method ? h.xhr.method : 'GET',
            headers: h.xhr && h.xhr.headers ? h.xhr.headers : null,
            withCredentials:
              !(!h.xhr || !h.xhr.withCredentials) && h.xhr.withCredentials,
          }),
          (q._duration = 0),
          (q._state = 'unloaded'),
          (q._sounds = []),
          (q._endTimers = {}),
          (q._queue = []),
          (q._playLock = !1),
          (q._onend = h.onend ? [{ fn: h.onend }] : []),
          (q._onfade = h.onfade ? [{ fn: h.onfade }] : []),
          (q._onload = h.onload ? [{ fn: h.onload }] : []),
          (q._onloaderror = h.onloaderror ? [{ fn: h.onloaderror }] : []),
          (q._onplayerror = h.onplayerror ? [{ fn: h.onplayerror }] : []),
          (q._onpause = h.onpause ? [{ fn: h.onpause }] : []),
          (q._onplay = h.onplay ? [{ fn: h.onplay }] : []),
          (q._onstop = h.onstop ? [{ fn: h.onstop }] : []),
          (q._onmute = h.onmute ? [{ fn: h.onmute }] : []),
          (q._onvolume = h.onvolume ? [{ fn: h.onvolume }] : []),
          (q._onrate = h.onrate ? [{ fn: h.onrate }] : []),
          (q._onseek = h.onseek ? [{ fn: h.onseek }] : []),
          (q._onunlock = h.onunlock ? [{ fn: h.onunlock }] : []),
          (q._onresume = []),
          (q._webAudio = v.usingWebAudio && !q._html5),
          void 0 !== v.ctx && v.ctx && v.autoUnlock && v._unlockAudio(),
          v._howls.push(q),
          q._autoplay &&
            q._queue.push({
              event: 'play',
              action: function () {
                q.play();
              },
            }),
          q._preload && 'none' !== q._preload && q.load(),
          q
        );
      },
      load: function () {
        var h = null;
        if (v.noAudio)
          return void this._emit('loaderror', null, 'No audio support.');
        'string' == typeof this._src && (this._src = [this._src]);
        for (var q = 0; q < this._src.length; q++) {
          var m;
          if (this._format && this._format[q]) var w = this._format[q];
          else {
            if ('string' != typeof (m = this._src[q])) {
              this._emit(
                'loaderror',
                null,
                'Non-string found in selected audio sources - ignoring.',
              );
              continue;
            }
            (w = /^data:audio\/([^;,]+);/i.exec(m)) ||
              (w = /\.([^.]+)$/.exec(m.split('?', 1)[0]));
            w && (w = w[1].toLowerCase());
          }
          if (
            (w ||
              console.warn(
                'No file extension was found. Consider using the "format" property or specify an extension.',
              ),
            w && v.codecs(w))
          ) {
            h = this._src[q];
            break;
          }
        }
        return h
          ? ((this._src = h),
            (this._state = 'loading'),
            'https:' === window.location.protocol &&
              'http:' === h.slice(0, 5) &&
              ((this._html5 = !0), (this._webAudio = !1)),
            new H(this),
            this._webAudio && T(this),
            this)
          : void this._emit(
              'loaderror',
              null,
              'No codec support for selected audio sources.',
            );
      },
      play: function (h, q) {
        var m = this,
          w = null;
        if ('number' == typeof h) ((w = h), (h = null));
        else {
          if ('string' == typeof h && 'loaded' === m._state && !m._sprite[h])
            return null;
          if (void 0 === h && ((h = '__default'), !m._playLock)) {
            for (var D = 0, pa = 0; pa < m._sounds.length; pa++)
              m._sounds[pa]._paused &&
                !m._sounds[pa]._ended &&
                (D++, (w = m._sounds[pa]._id));
            1 === D ? (h = null) : (w = null);
          }
        }
        var A = w ? m._soundById(w) : m._inactiveSound();
        if (!A) return null;
        if (
          (w && !h && (h = A._sprite || '__default'), 'loaded' !== m._state)
        ) {
          A._sprite = h;
          A._ended = !1;
          var H = A._id;
          return (
            m._queue.push({
              event: 'play',
              action: function () {
                m.play(H);
              },
            }),
            H
          );
        }
        if (w && !A._paused) return (q || m._loadQueue('play'), A._id);
        m._webAudio && v._autoResume();
        var O = Math.max(0, 0 < A._seek ? A._seek : m._sprite[h][0] / 1e3),
          ha = Math.max(0, (m._sprite[h][0] + m._sprite[h][1]) / 1e3 - O),
          ea = (1e3 * ha) / Math.abs(A._rate),
          T = m._sprite[h][0] / 1e3,
          ra = (m._sprite[h][0] + m._sprite[h][1]) / 1e3;
        A._sprite = h;
        A._ended = !1;
        var Ob = function () {
          A._paused = !1;
          A._seek = O;
          A._start = T;
          A._stop = ra;
          A._loop = !(!A._loop && !m._sprite[h][2]);
        };
        if (O >= ra) return void m._ended(A);
        var ca = A._node;
        if (m._webAudio)
          ((w = function () {
            m._playLock = !1;
            Ob();
            m._refreshBuffer(A);
            ca.gain.setValueAtTime(
              A._muted || m._muted ? 0 : A._volume,
              v.ctx.currentTime,
            );
            A._playStart = v.ctx.currentTime;
            void 0 === ca.bufferSource.start
              ? A._loop
                ? ca.bufferSource.noteGrainOn(0, O, 86400)
                : ca.bufferSource.noteGrainOn(0, O, ha)
              : A._loop
                ? ca.bufferSource.start(0, O, 86400)
                : ca.bufferSource.start(0, O, ha);
            ea !== 1 / 0 &&
              (m._endTimers[A._id] = setTimeout(m._ended.bind(m, A), ea));
            q ||
              setTimeout(function () {
                m._emit('play', A._id);
                m._loadQueue();
              }, 0);
          }),
            'running' === v.state && 'interrupted' !== v.ctx.state
              ? w()
              : ((m._playLock = !0),
                m.once('resume', w),
                m._clearTimer(A._id)));
        else {
          var za = function () {
            ca.currentTime = O;
            ca.muted = A._muted || m._muted || v._muted || ca.muted;
            ca.volume = A._volume * v.volume();
            ca.playbackRate = A._rate;
            try {
              var w = ca.play();
              if (
                (w &&
                'undefined' != typeof Promise &&
                (w instanceof Promise || 'function' == typeof w.then)
                  ? ((m._playLock = !0),
                    Ob(),
                    w
                      .then(function () {
                        m._playLock = !1;
                        ca._unlocked = !0;
                        q ? m._loadQueue() : m._emit('play', A._id);
                      })
                      .catch(function () {
                        m._playLock = !1;
                        m._emit(
                          'playerror',
                          A._id,
                          'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                        );
                        A._ended = !0;
                        A._paused = !0;
                      }))
                  : q || ((m._playLock = !1), Ob(), m._emit('play', A._id)),
                (ca.playbackRate = A._rate),
                ca.paused)
              )
                return void m._emit(
                  'playerror',
                  A._id,
                  'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                );
              '__default' !== h || A._loop
                ? (m._endTimers[A._id] = setTimeout(m._ended.bind(m, A), ea))
                : ((m._endTimers[A._id] = function () {
                    m._ended(A);
                    ca.removeEventListener('ended', m._endTimers[A._id], !1);
                  }),
                  ca.addEventListener('ended', m._endTimers[A._id], !1));
            } catch (wa) {
              m._emit('playerror', A._id, wa);
            }
          };
          'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA' ===
            ca.src && ((ca.src = m._src), ca.load());
          w =
            (window && window.ejecta) ||
            (!ca.readyState && v._navigator.isCocoonJS);
          if (3 <= ca.readyState || w) za();
          else {
            m._playLock = !0;
            m._state = 'loading';
            var Ba = function () {
              m._state = 'loaded';
              za();
              ca.removeEventListener(v._canPlayEvent, Ba, !1);
            };
            ca.addEventListener(v._canPlayEvent, Ba, !1);
            m._clearTimer(A._id);
          }
        }
        return A._id;
      },
      pause: function (h, q) {
        var m = this;
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'pause',
              action: function () {
                m.pause(h);
              },
            }),
            m
          );
        for (var w = m._getSoundIds(h), v = 0; v < w.length; v++) {
          m._clearTimer(w[v]);
          var A = m._soundById(w[v]);
          if (
            A &&
            !A._paused &&
            ((A._seek = m.seek(w[v])),
            (A._rateSeek = 0),
            (A._paused = !0),
            m._stopFade(w[v]),
            A._node)
          )
            if (m._webAudio) {
              if (!A._node.bufferSource) continue;
              void 0 === A._node.bufferSource.stop
                ? A._node.bufferSource.noteOff(0)
                : A._node.bufferSource.stop(0);
              m._cleanBuffer(A._node);
            } else
              (isNaN(A._node.duration) && A._node.duration !== 1 / 0) ||
                A._node.pause();
          q || m._emit('pause', A ? A._id : null);
        }
        return m;
      },
      stop: function (h, q) {
        var m = this;
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'stop',
              action: function () {
                m.stop(h);
              },
            }),
            m
          );
        for (var w = m._getSoundIds(h), v = 0; v < w.length; v++) {
          m._clearTimer(w[v]);
          var A = m._soundById(w[v]);
          A &&
            ((A._seek = A._start || 0),
            (A._rateSeek = 0),
            (A._paused = !0),
            (A._ended = !0),
            m._stopFade(w[v]),
            A._node &&
              (m._webAudio
                ? A._node.bufferSource &&
                  (void 0 === A._node.bufferSource.stop
                    ? A._node.bufferSource.noteOff(0)
                    : A._node.bufferSource.stop(0),
                  m._cleanBuffer(A._node))
                : (isNaN(A._node.duration) && A._node.duration !== 1 / 0) ||
                  ((A._node.currentTime = A._start || 0),
                  A._node.pause(),
                  A._node.duration === 1 / 0 && m._clearSound(A._node))),
            q || m._emit('stop', A._id));
        }
        return m;
      },
      mute: function (h, q) {
        var m = this;
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'mute',
              action: function () {
                m.mute(h, q);
              },
            }),
            m
          );
        if (void 0 === q) {
          if ('boolean' != typeof h) return m._muted;
          m._muted = h;
        }
        for (var w = m._getSoundIds(q), A = 0; A < w.length; A++) {
          var D = m._soundById(w[A]);
          D &&
            ((D._muted = h),
            D._interval && m._stopFade(D._id),
            m._webAudio && D._node
              ? D._node.gain.setValueAtTime(
                  h ? 0 : D._volume,
                  v.ctx.currentTime,
                )
              : D._node && (D._node.muted = !!v._muted || h),
            m._emit('mute', D._id));
        }
        return m;
      },
      volume: function () {
        var h,
          q,
          m = this,
          w = arguments;
        if (0 === w.length) return m._volume;
        1 === w.length || (2 === w.length && void 0 === w[1])
          ? 0 <= m._getSoundIds().indexOf(w[0])
            ? (q = parseInt(w[0], 10))
            : (h = parseFloat(w[0]))
          : 2 <= w.length && ((h = parseFloat(w[0])), (q = parseInt(w[1], 10)));
        var A;
        if (!(void 0 !== h && 0 <= h && 1 >= h))
          return ((A = q ? m._soundById(q) : m._sounds[0]), A ? A._volume : 0);
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'volume',
              action: function () {
                m.volume.apply(m, w);
              },
            }),
            m
          );
        void 0 === q && (m._volume = h);
        q = m._getSoundIds(q);
        for (var D = 0; D < q.length; D++)
          (A = m._soundById(q[D])) &&
            ((A._volume = h),
            w[2] || m._stopFade(q[D]),
            m._webAudio && A._node && !A._muted
              ? A._node.gain.setValueAtTime(h, v.ctx.currentTime)
              : A._node && !A._muted && (A._node.volume = h * v.volume()),
            m._emit('volume', A._id));
        return m;
      },
      fade: function (h, q, m, w) {
        var K = this;
        if ('loaded' !== K._state || K._playLock)
          return (
            K._queue.push({
              event: 'fade',
              action: function () {
                K.fade(h, q, m, w);
              },
            }),
            K
          );
        h = Math.min(Math.max(0, parseFloat(h)), 1);
        q = Math.min(Math.max(0, parseFloat(q)), 1);
        m = parseFloat(m);
        K.volume(h, w);
        for (var A = K._getSoundIds(w), J = 0; J < A.length; J++) {
          var D = K._soundById(A[J]);
          if (D) {
            if ((w || K._stopFade(A[J]), K._webAudio && !D._muted)) {
              var H = v.ctx.currentTime,
                O = H + m / 1e3;
              D._volume = h;
              D._node.gain.setValueAtTime(h, H);
              D._node.gain.linearRampToValueAtTime(q, O);
            }
            K._startFadeInterval(D, h, q, m, A[J], void 0 === w);
          }
        }
        return K;
      },
      _startFadeInterval: function (h, q, m, w, v, A) {
        var K = this,
          J = q,
          D = m - q;
        v = Math.abs(D / 0.01);
        v = Math.max(4, 0 < v ? w / v : w);
        var H = Date.now();
        h._fadeTo = m;
        h._interval = setInterval(function () {
          var v = (Date.now() - H) / w;
          H = Date.now();
          J += D * v;
          J = Math.round(100 * J) / 100;
          J = 0 > D ? Math.max(m, J) : Math.min(m, J);
          K._webAudio ? (h._volume = J) : K.volume(J, h._id, !0);
          A && (K._volume = J);
          ((m < q && J <= m) || (m > q && J >= m)) &&
            (clearInterval(h._interval),
            (h._interval = null),
            (h._fadeTo = null),
            K.volume(m, h._id),
            K._emit('fade', h._id));
        }, v);
      },
      _stopFade: function (h) {
        var q = this._soundById(h);
        return (
          q &&
            q._interval &&
            (this._webAudio &&
              q._node.gain.cancelScheduledValues(v.ctx.currentTime),
            clearInterval(q._interval),
            (q._interval = null),
            this.volume(q._fadeTo, h),
            (q._fadeTo = null),
            this._emit('fade', h)),
          this
        );
      },
      loop: function () {
        var h,
          q,
          m,
          w = arguments;
        if (0 === w.length) return this._loop;
        if (1 === w.length) {
          if ('boolean' != typeof w[0])
            return !!(m = this._soundById(parseInt(w[0], 10))) && m._loop;
          this._loop = h = w[0];
        } else 2 === w.length && ((h = w[0]), (q = parseInt(w[1], 10)));
        q = this._getSoundIds(q);
        for (w = 0; w < q.length; w++)
          (m = this._soundById(q[w])) &&
            ((m._loop = h),
            this._webAudio &&
              m._node &&
              m._node.bufferSource &&
              ((m._node.bufferSource.loop = h),
              h &&
                ((m._node.bufferSource.loopStart = m._start || 0),
                (m._node.bufferSource.loopEnd = m._stop),
                this.playing(q[w]) &&
                  (this.pause(q[w], !0), this.play(q[w], !0)))));
        return this;
      },
      rate: function () {
        var h,
          q,
          m = this,
          w = arguments;
        0 === w.length
          ? (q = m._sounds[0]._id)
          : 1 === w.length
            ? 0 <= m._getSoundIds().indexOf(w[0])
              ? (q = parseInt(w[0], 10))
              : (h = parseFloat(w[0]))
            : 2 === w.length &&
              ((h = parseFloat(w[0])), (q = parseInt(w[1], 10)));
        var A;
        if ('number' != typeof h)
          return ((A = m._soundById(q)), A ? A._rate : m._rate);
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'rate',
              action: function () {
                m.rate.apply(m, w);
              },
            }),
            m
          );
        void 0 === q && (m._rate = h);
        q = m._getSoundIds(q);
        for (var D = 0; D < q.length; D++)
          if ((A = m._soundById(q[D]))) {
            m.playing(q[D]) &&
              ((A._rateSeek = m.seek(q[D])),
              (A._playStart = m._webAudio ? v.ctx.currentTime : A._playStart));
            A._rate = h;
            m._webAudio && A._node && A._node.bufferSource
              ? A._node.bufferSource.playbackRate.setValueAtTime(
                  h,
                  v.ctx.currentTime,
                )
              : A._node && (A._node.playbackRate = h);
            var H = m.seek(q[D]);
            H =
              (1e3 *
                ((m._sprite[A._sprite][0] + m._sprite[A._sprite][1]) / 1e3 -
                  H)) /
              Math.abs(A._rate);
            (!m._endTimers[q[D]] && A._paused) ||
              (m._clearTimer(q[D]),
              (m._endTimers[q[D]] = setTimeout(m._ended.bind(m, A), H)));
            m._emit('rate', A._id);
          }
        return m;
      },
      seek: function () {
        var h,
          q,
          m = this,
          w = arguments;
        0 === w.length
          ? m._sounds.length && (q = m._sounds[0]._id)
          : 1 === w.length
            ? 0 <= m._getSoundIds().indexOf(w[0])
              ? (q = parseInt(w[0], 10))
              : m._sounds.length &&
                ((q = m._sounds[0]._id), (h = parseFloat(w[0])))
            : 2 === w.length &&
              ((h = parseFloat(w[0])), (q = parseInt(w[1], 10)));
        if (void 0 === q) return 0;
        if ('number' == typeof h && ('loaded' !== m._state || m._playLock))
          return (
            m._queue.push({
              event: 'seek',
              action: function () {
                m.seek.apply(m, w);
              },
            }),
            m
          );
        var A = m._soundById(q);
        if (A) {
          if (!('number' == typeof h && 0 <= h))
            return m._webAudio
              ? ((h = m.playing(q) ? v.ctx.currentTime - A._playStart : 0),
                A._seek +
                  ((A._rateSeek ? A._rateSeek - A._seek : 0) +
                    h * Math.abs(A._rate)))
              : A._node.currentTime;
          var D = m.playing(q);
          D && m.pause(q, !0);
          A._seek = h;
          A._ended = !1;
          m._clearTimer(q);
          m._webAudio ||
            !A._node ||
            isNaN(A._node.duration) ||
            (A._node.currentTime = h);
          var H = function () {
            D && m.play(q, !0);
            m._emit('seek', q);
          };
          if (D && !m._webAudio) {
            var O = function () {
              m._playLock ? setTimeout(O, 0) : H();
            };
            setTimeout(O, 0);
          } else H();
        }
        return m;
      },
      playing: function (h) {
        if ('number' == typeof h)
          return ((h = this._soundById(h)), !!h && !h._paused);
        for (h = 0; h < this._sounds.length; h++)
          if (!this._sounds[h]._paused) return !0;
        return !1;
      },
      duration: function (h) {
        var q = this._duration;
        h = this._soundById(h);
        return (h && (q = this._sprite[h._sprite][1] / 1e3), q);
      },
      state: function () {
        return this._state;
      },
      unload: function () {
        for (var h = this._sounds, q = 0; q < h.length; q++)
          (h[q]._paused || this.stop(h[q]._id),
            this._webAudio ||
              (this._clearSound(h[q]._node),
              h[q]._node.removeEventListener('error', h[q]._errorFn, !1),
              h[q]._node.removeEventListener(v._canPlayEvent, h[q]._loadFn, !1),
              h[q]._node.removeEventListener('ended', h[q]._endFn, !1),
              v._releaseHtml5Audio(h[q]._node)),
            delete h[q]._node,
            this._clearTimer(h[q]._id));
        q = v._howls.indexOf(this);
        0 <= q && v._howls.splice(q, 1);
        h = !0;
        for (q = 0; q < v._howls.length; q++)
          if (
            v._howls[q]._src === this._src ||
            0 <= this._src.indexOf(v._howls[q]._src)
          ) {
            h = !1;
            break;
          }
        return (
          A && h && delete A[this._src],
          (v.noAudio = !1),
          (this._state = 'unloaded'),
          (this._sounds = []),
          null
        );
      },
      on: function (h, q, m, w) {
        h = this['_on' + h];
        return (
          'function' == typeof q &&
            h.push(w ? { id: m, fn: q, once: w } : { id: m, fn: q }),
          this
        );
      },
      off: function (h, q, m) {
        var w = this['_on' + h];
        if (('number' == typeof q && ((m = q), (q = null)), q || m))
          for (h = 0; h < w.length; h++) {
            var v = m === w[h].id;
            if ((q === w[h].fn && v) || (!q && v)) {
              w.splice(h, 1);
              break;
            }
          }
        else if (h) this['_on' + h] = [];
        else
          for (q = Object.keys(this), h = 0; h < q.length; h++)
            0 === q[h].indexOf('_on') &&
              Array.isArray(this[q[h]]) &&
              (this[q[h]] = []);
        return this;
      },
      once: function (h, q, m) {
        return (this.on(h, q, m, 1), this);
      },
      _emit: function (h, q, m) {
        for (var w = this['_on' + h], v = w.length - 1; 0 <= v; v--)
          (w[v].id && w[v].id !== q && 'load' !== h) ||
            (setTimeout(
              function (h) {
                h.call(this, q, m);
              }.bind(this, w[v].fn),
              0,
            ),
            w[v].once && this.off(h, w[v].fn, w[v].id));
        return (this._loadQueue(h), this);
      },
      _loadQueue: function (h) {
        if (0 < this._queue.length) {
          var q = this._queue[0];
          q.event === h && (this._queue.shift(), this._loadQueue());
          h || q.action();
        }
        return this;
      },
      _ended: function (h) {
        var q = h._sprite;
        if (
          !this._webAudio &&
          h._node &&
          !h._node.paused &&
          !h._node.ended &&
          h._node.currentTime < h._stop
        )
          return (setTimeout(this._ended.bind(this, h), 100), this);
        q = !(!h._loop && !this._sprite[q][2]);
        if (
          (this._emit('end', h._id),
          !this._webAudio && q && this.stop(h._id, !0).play(h._id),
          this._webAudio && q)
        ) {
          this._emit('play', h._id);
          h._seek = h._start || 0;
          h._rateSeek = 0;
          h._playStart = v.ctx.currentTime;
          var m = (1e3 * (h._stop - h._start)) / Math.abs(h._rate);
          this._endTimers[h._id] = setTimeout(this._ended.bind(this, h), m);
        }
        return (
          this._webAudio &&
            !q &&
            ((h._paused = !0),
            (h._ended = !0),
            (h._seek = h._start || 0),
            (h._rateSeek = 0),
            this._clearTimer(h._id),
            this._cleanBuffer(h._node),
            v._autoSuspend()),
          this._webAudio || q || this.stop(h._id, !0),
          this
        );
      },
      _clearTimer: function (h) {
        if (this._endTimers[h]) {
          if ('function' != typeof this._endTimers[h])
            clearTimeout(this._endTimers[h]);
          else {
            var q = this._soundById(h);
            q &&
              q._node &&
              q._node.removeEventListener('ended', this._endTimers[h], !1);
          }
          delete this._endTimers[h];
        }
        return this;
      },
      _soundById: function (h) {
        for (var q = 0; q < this._sounds.length; q++)
          if (h === this._sounds[q]._id) return this._sounds[q];
        return null;
      },
      _inactiveSound: function () {
        this._drain();
        for (var h = 0; h < this._sounds.length; h++)
          if (this._sounds[h]._ended) return this._sounds[h].reset();
        return new H(this);
      },
      _drain: function () {
        var h = this._pool,
          q = 0,
          m;
        if (!(this._sounds.length < h)) {
          for (m = 0; m < this._sounds.length; m++)
            this._sounds[m]._ended && q++;
          for (m = this._sounds.length - 1; 0 <= m && !(q <= h); m--)
            this._sounds[m]._ended &&
              (this._webAudio &&
                this._sounds[m]._node &&
                this._sounds[m]._node.disconnect(0),
              this._sounds.splice(m, 1),
              q--);
        }
      },
      _getSoundIds: function (h) {
        if (void 0 === h) {
          h = [];
          for (var q = 0; q < this._sounds.length; q++)
            h.push(this._sounds[q]._id);
          return h;
        }
        return [h];
      },
      _refreshBuffer: function (h) {
        return (
          (h._node.bufferSource = v.ctx.createBufferSource()),
          (h._node.bufferSource.buffer = A[this._src]),
          h._panner
            ? h._node.bufferSource.connect(h._panner)
            : h._node.bufferSource.connect(h._node),
          (h._node.bufferSource.loop = h._loop),
          h._loop &&
            ((h._node.bufferSource.loopStart = h._start || 0),
            (h._node.bufferSource.loopEnd = h._stop || 0)),
          h._node.bufferSource.playbackRate.setValueAtTime(
            h._rate,
            v.ctx.currentTime,
          ),
          this
        );
      },
      _cleanBuffer: function (h) {
        var q = v._navigator && 0 <= v._navigator.vendor.indexOf('Apple');
        if (!h.bufferSource) return this;
        if (
          v._scratchBuffer &&
          h.bufferSource &&
          ((h.bufferSource.onended = null), h.bufferSource.disconnect(0), q)
        )
          try {
            h.bufferSource.buffer = v._scratchBuffer;
          } catch (K) {}
        return ((h.bufferSource = null), this);
      },
      _clearSound: function (h) {
        /MSIE |Trident\//.test(v._navigator && v._navigator.userAgent) ||
          (h.src =
            'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA');
      },
    };
    var H = function (h) {
      this._parent = h;
      this.init();
    };
    H.prototype = {
      init: function () {
        var h = this._parent;
        return (
          (this._muted = h._muted),
          (this._loop = h._loop),
          (this._volume = h._volume),
          (this._rate = h._rate),
          (this._seek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++v._counter),
          h._sounds.push(this),
          this.create(),
          this
        );
      },
      create: function () {
        var h = this._parent,
          q = v._muted || this._muted || this._parent._muted ? 0 : this._volume;
        return (
          h._webAudio
            ? ((this._node =
                void 0 === v.ctx.createGain
                  ? v.ctx.createGainNode()
                  : v.ctx.createGain()),
              this._node.gain.setValueAtTime(q, v.ctx.currentTime),
              (this._node.paused = !0),
              this._node.connect(v.masterGain))
            : v.noAudio ||
              ((this._node = v._obtainHtml5Audio()),
              (this._errorFn = this._errorListener.bind(this)),
              this._node.addEventListener('error', this._errorFn, !1),
              (this._loadFn = this._loadListener.bind(this)),
              this._node.addEventListener(v._canPlayEvent, this._loadFn, !1),
              (this._endFn = this._endListener.bind(this)),
              this._node.addEventListener('ended', this._endFn, !1),
              (this._node.src = h._src),
              (this._node.preload = !0 === h._preload ? 'auto' : h._preload),
              (this._node.volume = q * v.volume()),
              this._node.load()),
          this
        );
      },
      reset: function () {
        var h = this._parent;
        return (
          (this._muted = h._muted),
          (this._loop = h._loop),
          (this._volume = h._volume),
          (this._rate = h._rate),
          (this._seek = 0),
          (this._rateSeek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++v._counter),
          this
        );
      },
      _errorListener: function () {
        this._parent._emit(
          'loaderror',
          this._id,
          this._node.error ? this._node.error.code : 0,
        );
        this._node.removeEventListener('error', this._errorFn, !1);
      },
      _loadListener: function () {
        var h = this._parent;
        h._duration = Math.ceil(10 * this._node.duration) / 10;
        0 === Object.keys(h._sprite).length &&
          (h._sprite = { __default: [0, 1e3 * h._duration] });
        'loaded' !== h._state &&
          ((h._state = 'loaded'), h._emit('load'), h._loadQueue());
        this._node.removeEventListener(v._canPlayEvent, this._loadFn, !1);
      },
      _endListener: function () {
        var h = this._parent;
        h._duration === 1 / 0 &&
          ((h._duration = Math.ceil(10 * this._node.duration) / 10),
          h._sprite.__default[1] === 1 / 0 &&
            (h._sprite.__default[1] = 1e3 * h._duration),
          h._ended(this));
        this._node.removeEventListener('ended', this._endFn, !1);
      },
    };
    var A = {},
      T = function (h) {
        var q = h._src;
        if (A[q]) return ((h._duration = A[q].duration), void ea(h));
        if (/^data:[^;]+;base64,/.test(q)) {
          for (
            var m = atob(q.split(',')[1]), v = new Uint8Array(m.length), D = 0;
            D < m.length;
            ++D
          )
            v[D] = m.charCodeAt(D);
          w(v.buffer, h);
        } else {
          var H = new XMLHttpRequest();
          H.open(h._xhr.method, q, !0);
          H.withCredentials = h._xhr.withCredentials;
          H.responseType = 'arraybuffer';
          h._xhr.headers &&
            Object.keys(h._xhr.headers).forEach(function (q) {
              H.setRequestHeader(q, h._xhr.headers[q]);
            });
          H.onload = function () {
            var q = (H.status + '')[0];
            if ('0' !== q && '2' !== q && '3' !== q)
              return void h._emit(
                'loaderror',
                null,
                'Failed loading audio file with status: ' + H.status + '.',
              );
            w(H.response, h);
          };
          H.onerror = function () {
            h._webAudio &&
              ((h._html5 = !0),
              (h._webAudio = !1),
              (h._sounds = []),
              delete A[q],
              h.load());
          };
          ha(H);
        }
      },
      ha = function (h) {
        try {
          h.send();
        } catch (q) {
          h.onerror();
        }
      },
      w = function (h, q) {
        var m = function () {
            q._emit('loaderror', null, 'Decoding audio data failed.');
          },
          w = function (h) {
            h && 0 < q._sounds.length ? ((A[q._src] = h), ea(q, h)) : m();
          };
        'undefined' != typeof Promise && 1 === v.ctx.decodeAudioData.length
          ? v.ctx.decodeAudioData(h).then(w).catch(m)
          : v.ctx.decodeAudioData(h, w, m);
      },
      ea = function (h, q) {
        q && !h._duration && (h._duration = q.duration);
        0 === Object.keys(h._sprite).length &&
          (h._sprite = { __default: [0, 1e3 * h._duration] });
        'loaded' !== h._state &&
          ((h._state = 'loaded'), h._emit('load'), h._loadQueue());
      },
      m = function () {
        if (v.usingWebAudio) {
          try {
            'undefined' != typeof AudioContext
              ? (v.ctx = new AudioContext())
              : 'undefined' != typeof webkitAudioContext
                ? (v.ctx = new webkitAudioContext())
                : (v.usingWebAudio = !1);
          } catch (K) {
            v.usingWebAudio = !1;
          }
          v.ctx || (v.usingWebAudio = !1);
          var h = /iP(hone|od|ad)/.test(v._navigator && v._navigator.platform),
            q =
              v._navigator &&
              v._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
          q = q ? parseInt(q[1], 10) : null;
          h &&
            q &&
            9 > q &&
            ((h = /safari/.test(
              v._navigator && v._navigator.userAgent.toLowerCase(),
            )),
            v._navigator && !h && (v.usingWebAudio = !1));
          v.usingWebAudio &&
            ((v.masterGain =
              void 0 === v.ctx.createGain
                ? v.ctx.createGainNode()
                : v.ctx.createGain()),
            v.masterGain.gain.setValueAtTime(
              v._muted ? 0 : v._volume,
              v.ctx.currentTime,
            ),
            v.masterGain.connect(v.ctx.destination));
          v._setup();
        }
      };
    'function' == typeof define &&
      define.amd &&
      define([], function () {
        return { Howler: v, Howl: D };
      });
    'undefined' != typeof exports && ((exports.Howler = v), (exports.Howl = D));
    'undefined' != typeof global
      ? ((global.HowlerGlobal = O),
        (global.Howler = v),
        (global.Howl = D),
        (global.Sound = H))
      : 'undefined' != typeof window &&
        ((window.HowlerGlobal = O),
        (window.Howler = v),
        (window.Howl = D),
        (window.Sound = H));
  })(),
  !(function () {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function (v) {
      if (!this.ctx || !this.ctx.listener) return this;
      for (var D = this._howls.length - 1; 0 <= D; D--)
        this._howls[D].stereo(v);
      return this;
    };
    HowlerGlobal.prototype.pos = function (v, D, H) {
      return this.ctx && this.ctx.listener
        ? ((D = 'number' != typeof D ? this._pos[1] : D),
          (H = 'number' != typeof H ? this._pos[2] : H),
          'number' != typeof v
            ? this._pos
            : ((this._pos = [v, D, H]),
              void 0 !== this.ctx.listener.positionX
                ? (this.ctx.listener.positionX.setTargetAtTime(
                    this._pos[0],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionY.setTargetAtTime(
                    this._pos[1],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionZ.setTargetAtTime(
                    this._pos[2],
                    Howler.ctx.currentTime,
                    0.1,
                  ))
                : this.ctx.listener.setPosition(
                    this._pos[0],
                    this._pos[1],
                    this._pos[2],
                  ),
              this))
        : this;
    };
    HowlerGlobal.prototype.orientation = function (v, D, H, A, O, ha) {
      if (!this.ctx || !this.ctx.listener) return this;
      var w = this._orientation;
      return (
        (D = 'number' != typeof D ? w[1] : D),
        (H = 'number' != typeof H ? w[2] : H),
        (A = 'number' != typeof A ? w[3] : A),
        (O = 'number' != typeof O ? w[4] : O),
        (ha = 'number' != typeof ha ? w[5] : ha),
        'number' != typeof v
          ? w
          : ((this._orientation = [v, D, H, A, O, ha]),
            void 0 !== this.ctx.listener.forwardX
              ? (this.ctx.listener.forwardX.setTargetAtTime(
                  v,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardY.setTargetAtTime(
                  D,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardZ.setTargetAtTime(
                  H,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upX.setTargetAtTime(
                  A,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upY.setTargetAtTime(
                  O,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upZ.setTargetAtTime(
                  ha,
                  Howler.ctx.currentTime,
                  0.1,
                ))
              : this.ctx.listener.setOrientation(v, D, H, A, O, ha),
            this)
      );
    };
    Howl.prototype.init = (function (v) {
      return function (D) {
        return (
          (this._orientation = D.orientation || [1, 0, 0]),
          (this._stereo = D.stereo || null),
          (this._pos = D.pos || null),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== D.coneInnerAngle ? D.coneInnerAngle : 360,
            coneOuterAngle:
              void 0 !== D.coneOuterAngle ? D.coneOuterAngle : 360,
            coneOuterGain: void 0 !== D.coneOuterGain ? D.coneOuterGain : 0,
            distanceModel:
              void 0 !== D.distanceModel ? D.distanceModel : 'inverse',
            maxDistance: void 0 !== D.maxDistance ? D.maxDistance : 1e4,
            panningModel: void 0 !== D.panningModel ? D.panningModel : 'HRTF',
            refDistance: void 0 !== D.refDistance ? D.refDistance : 1,
            rolloffFactor: void 0 !== D.rolloffFactor ? D.rolloffFactor : 1,
          }),
          (this._onstereo = D.onstereo ? [{ fn: D.onstereo }] : []),
          (this._onpos = D.onpos ? [{ fn: D.onpos }] : []),
          (this._onorientation = D.onorientation
            ? [{ fn: D.onorientation }]
            : []),
          v.call(this, D)
        );
      };
    })(Howl.prototype.init);
    Howl.prototype.stereo = function (v, D) {
      var H = this;
      if (!H._webAudio) return H;
      if ('loaded' !== H._state)
        return (
          H._queue.push({
            event: 'stereo',
            action: function () {
              H.stereo(v, D);
            },
          }),
          H
        );
      var A = void 0 === Howler.ctx.createStereoPanner ? 'spatial' : 'stereo';
      if (void 0 === D) {
        if ('number' != typeof v) return H._stereo;
        H._stereo = v;
        H._pos = [v, 0, 0];
      }
      for (var T = H._getSoundIds(D), ha = 0; ha < T.length; ha++) {
        var w = H._soundById(T[ha]);
        if (w) {
          if ('number' != typeof v) return w._stereo;
          w._stereo = v;
          w._pos = [v, 0, 0];
          w._node &&
            ((w._pannerAttr.panningModel = 'equalpower'),
            (w._panner && w._panner.pan) || O(w, A),
            'spatial' === A
              ? void 0 !== w._panner.positionX
                ? (w._panner.positionX.setValueAtTime(
                    v,
                    Howler.ctx.currentTime,
                  ),
                  w._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                  w._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime))
                : w._panner.setPosition(v, 0, 0)
              : w._panner.pan.setValueAtTime(v, Howler.ctx.currentTime));
          H._emit('stereo', w._id);
        }
      }
      return H;
    };
    Howl.prototype.pos = function (v, D, H, A) {
      var T = this;
      if (!T._webAudio) return T;
      if ('loaded' !== T._state)
        return (
          T._queue.push({
            event: 'pos',
            action: function () {
              T.pos(v, D, H, A);
            },
          }),
          T
        );
      if (
        ((D = 'number' != typeof D ? 0 : D),
        (H = 'number' != typeof H ? -0.5 : H),
        void 0 === A)
      ) {
        if ('number' != typeof v) return T._pos;
        T._pos = [v, D, H];
      }
      for (var ha = T._getSoundIds(A), w = 0; w < ha.length; w++) {
        var ea = T._soundById(ha[w]);
        if (ea) {
          if ('number' != typeof v) return ea._pos;
          ea._pos = [v, D, H];
          ea._node &&
            ((ea._panner && !ea._panner.pan) || O(ea, 'spatial'),
            void 0 !== ea._panner.positionX
              ? (ea._panner.positionX.setValueAtTime(v, Howler.ctx.currentTime),
                ea._panner.positionY.setValueAtTime(D, Howler.ctx.currentTime),
                ea._panner.positionZ.setValueAtTime(H, Howler.ctx.currentTime))
              : ea._panner.setPosition(v, D, H));
          T._emit('pos', ea._id);
        }
      }
      return T;
    };
    Howl.prototype.orientation = function (v, D, H, A) {
      var T = this;
      if (!T._webAudio) return T;
      if ('loaded' !== T._state)
        return (
          T._queue.push({
            event: 'orientation',
            action: function () {
              T.orientation(v, D, H, A);
            },
          }),
          T
        );
      if (
        ((D = 'number' != typeof D ? T._orientation[1] : D),
        (H = 'number' != typeof H ? T._orientation[2] : H),
        void 0 === A)
      ) {
        if ('number' != typeof v) return T._orientation;
        T._orientation = [v, D, H];
      }
      for (var ha = T._getSoundIds(A), w = 0; w < ha.length; w++) {
        var ea = T._soundById(ha[w]);
        if (ea) {
          if ('number' != typeof v) return ea._orientation;
          ea._orientation = [v, D, H];
          ea._node &&
            (ea._panner ||
              (ea._pos || (ea._pos = T._pos || [0, 0, -0.5]), O(ea, 'spatial')),
            void 0 !== ea._panner.orientationX
              ? (ea._panner.orientationX.setValueAtTime(
                  v,
                  Howler.ctx.currentTime,
                ),
                ea._panner.orientationY.setValueAtTime(
                  D,
                  Howler.ctx.currentTime,
                ),
                ea._panner.orientationZ.setValueAtTime(
                  H,
                  Howler.ctx.currentTime,
                ))
              : ea._panner.setOrientation(v, D, H));
          T._emit('orientation', ea._id);
        }
      }
      return T;
    };
    Howl.prototype.pannerAttr = function () {
      var v,
        D,
        H = arguments;
      if (!this._webAudio) return this;
      if (0 === H.length) return this._pannerAttr;
      if (1 === H.length) {
        if ('object' != typeof H[0])
          return (
            (D = this._soundById(parseInt(H[0], 10))),
            D ? D._pannerAttr : this._pannerAttr
          );
        var A = H[0];
        void 0 === v &&
          (A.pannerAttr ||
            (A.pannerAttr = {
              coneInnerAngle: A.coneInnerAngle,
              coneOuterAngle: A.coneOuterAngle,
              coneOuterGain: A.coneOuterGain,
              distanceModel: A.distanceModel,
              maxDistance: A.maxDistance,
              refDistance: A.refDistance,
              rolloffFactor: A.rolloffFactor,
              panningModel: A.panningModel,
            }),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== A.pannerAttr.coneInnerAngle
                ? A.pannerAttr.coneInnerAngle
                : this._coneInnerAngle,
            coneOuterAngle:
              void 0 !== A.pannerAttr.coneOuterAngle
                ? A.pannerAttr.coneOuterAngle
                : this._coneOuterAngle,
            coneOuterGain:
              void 0 !== A.pannerAttr.coneOuterGain
                ? A.pannerAttr.coneOuterGain
                : this._coneOuterGain,
            distanceModel:
              void 0 !== A.pannerAttr.distanceModel
                ? A.pannerAttr.distanceModel
                : this._distanceModel,
            maxDistance:
              void 0 !== A.pannerAttr.maxDistance
                ? A.pannerAttr.maxDistance
                : this._maxDistance,
            refDistance:
              void 0 !== A.pannerAttr.refDistance
                ? A.pannerAttr.refDistance
                : this._refDistance,
            rolloffFactor:
              void 0 !== A.pannerAttr.rolloffFactor
                ? A.pannerAttr.rolloffFactor
                : this._rolloffFactor,
            panningModel:
              void 0 !== A.pannerAttr.panningModel
                ? A.pannerAttr.panningModel
                : this._panningModel,
          }));
      } else 2 === H.length && ((A = H[0]), (v = parseInt(H[1], 10)));
      v = this._getSoundIds(v);
      for (H = 0; H < v.length; H++)
        if ((D = this._soundById(v[H]))) {
          var T = D._pannerAttr;
          T = {
            coneInnerAngle:
              void 0 !== A.coneInnerAngle ? A.coneInnerAngle : T.coneInnerAngle,
            coneOuterAngle:
              void 0 !== A.coneOuterAngle ? A.coneOuterAngle : T.coneOuterAngle,
            coneOuterGain:
              void 0 !== A.coneOuterGain ? A.coneOuterGain : T.coneOuterGain,
            distanceModel:
              void 0 !== A.distanceModel ? A.distanceModel : T.distanceModel,
            maxDistance:
              void 0 !== A.maxDistance ? A.maxDistance : T.maxDistance,
            refDistance:
              void 0 !== A.refDistance ? A.refDistance : T.refDistance,
            rolloffFactor:
              void 0 !== A.rolloffFactor ? A.rolloffFactor : T.rolloffFactor,
            panningModel:
              void 0 !== A.panningModel ? A.panningModel : T.panningModel,
          };
          var ha = D._panner;
          ha ||
            (D._pos || (D._pos = this._pos || [0, 0, -0.5]),
            O(D, 'spatial'),
            (ha = D._panner));
          ha.coneInnerAngle = T.coneInnerAngle;
          ha.coneOuterAngle = T.coneOuterAngle;
          ha.coneOuterGain = T.coneOuterGain;
          ha.distanceModel = T.distanceModel;
          ha.maxDistance = T.maxDistance;
          ha.refDistance = T.refDistance;
          ha.rolloffFactor = T.rolloffFactor;
          ha.panningModel = T.panningModel;
        }
      return this;
    };
    Sound.prototype.init = (function (v) {
      return function () {
        var D = this._parent;
        this._orientation = D._orientation;
        this._stereo = D._stereo;
        this._pos = D._pos;
        this._pannerAttr = D._pannerAttr;
        v.call(this);
        this._stereo
          ? D.stereo(this._stereo)
          : this._pos &&
            D.pos(this._pos[0], this._pos[1], this._pos[2], this._id);
      };
    })(Sound.prototype.init);
    Sound.prototype.reset = (function (v) {
      return function () {
        var D = this._parent;
        return (
          (this._orientation = D._orientation),
          (this._stereo = D._stereo),
          (this._pos = D._pos),
          (this._pannerAttr = D._pannerAttr),
          this._stereo
            ? D.stereo(this._stereo)
            : this._pos
              ? D.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
              : this._panner &&
                (this._panner.disconnect(0),
                (this._panner = void 0),
                D._refreshBuffer(this)),
          v.call(this)
        );
      };
    })(Sound.prototype.reset);
    var O = function (v, D) {
      'spatial' === (D || 'spatial')
        ? ((v._panner = Howler.ctx.createPanner()),
          (v._panner.coneInnerAngle = v._pannerAttr.coneInnerAngle),
          (v._panner.coneOuterAngle = v._pannerAttr.coneOuterAngle),
          (v._panner.coneOuterGain = v._pannerAttr.coneOuterGain),
          (v._panner.distanceModel = v._pannerAttr.distanceModel),
          (v._panner.maxDistance = v._pannerAttr.maxDistance),
          (v._panner.refDistance = v._pannerAttr.refDistance),
          (v._panner.rolloffFactor = v._pannerAttr.rolloffFactor),
          (v._panner.panningModel = v._pannerAttr.panningModel),
          void 0 !== v._panner.positionX
            ? (v._panner.positionX.setValueAtTime(
                v._pos[0],
                Howler.ctx.currentTime,
              ),
              v._panner.positionY.setValueAtTime(
                v._pos[1],
                Howler.ctx.currentTime,
              ),
              v._panner.positionZ.setValueAtTime(
                v._pos[2],
                Howler.ctx.currentTime,
              ))
            : v._panner.setPosition(v._pos[0], v._pos[1], v._pos[2]),
          void 0 !== v._panner.orientationX
            ? (v._panner.orientationX.setValueAtTime(
                v._orientation[0],
                Howler.ctx.currentTime,
              ),
              v._panner.orientationY.setValueAtTime(
                v._orientation[1],
                Howler.ctx.currentTime,
              ),
              v._panner.orientationZ.setValueAtTime(
                v._orientation[2],
                Howler.ctx.currentTime,
              ))
            : v._panner.setOrientation(
                v._orientation[0],
                v._orientation[1],
                v._orientation[2],
              ))
        : ((v._panner = Howler.ctx.createStereoPanner()),
          v._panner.pan.setValueAtTime(v._stereo, Howler.ctx.currentTime));
      v._panner.connect(v._node);
      v._paused || v._parent.pause(v._id, !0).play(v._id, !0);
    };
  })());
!(function (O) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = O())
    : 'function' == typeof define && define.amd
      ? define([], O)
      : (('undefined' != typeof window
          ? window
          : 'undefined' != typeof global
            ? global
            : 'undefined' != typeof self
              ? self
              : this
        ).pako = O());
})(function () {
  return (function A(v, D, H) {
    function T(w, m) {
      if (!D[w]) {
        if (!v[w]) {
          var h = 'function' == typeof require && require;
          if (!m && h) return h(w, !0);
          if (ha) return ha(w, !0);
          m = Error("Cannot find module '" + w + "'");
          throw ((m.code = 'MODULE_NOT_FOUND'), m);
        }
        m = D[w] = { exports: {} };
        v[w][0].call(
          m.exports,
          function (h) {
            var q = v[w][1][h];
            return T(q ? q : h);
          },
          m,
          m.exports,
          A,
          v,
          D,
          H,
        );
      }
      return D[w].exports;
    }
    for (
      var ha = 'function' == typeof require && require, w = 0;
      w < H.length;
      w++
    )
      T(H[w]);
    return T;
  })(
    {
      1: [
        function (v, D, H) {
          function A(v) {
            if (!(this instanceof A)) return new A(v);
            v = this.options = w.assign(
              {
                level: J,
                method: pa,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: Ga,
                to: '',
              },
              v || {},
            );
            v.raw && 0 < v.windowBits
              ? (v.windowBits = -v.windowBits)
              : v.gzip &&
                0 < v.windowBits &&
                16 > v.windowBits &&
                (v.windowBits += 16);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new h();
            this.strm.avail_out = 0;
            var D = ha.deflateInit2(
              this.strm,
              v.level,
              v.method,
              v.windowBits,
              v.memLevel,
              v.strategy,
            );
            if (D !== K) throw Error(m[D]);
            if (
              (v.header && ha.deflateSetHeader(this.strm, v.header),
              v.dictionary)
            ) {
              var H;
              if (
                ((H =
                  'string' == typeof v.dictionary
                    ? ea.string2buf(v.dictionary)
                    : '[object ArrayBuffer]' === q.call(v.dictionary)
                      ? new Uint8Array(v.dictionary)
                      : v.dictionary),
                (D = ha.deflateSetDictionary(this.strm, H)),
                D !== K)
              )
                throw Error(m[D]);
              this._dict_set = !0;
            }
          }
          function T(h, q) {
            q = new A(q);
            if ((q.push(h, !0), q.err)) throw q.msg;
            return q.result;
          }
          var ha = v('./zlib/deflate'),
            w = v('./utils/common'),
            ea = v('./utils/strings'),
            m = v('./zlib/messages'),
            h = v('./zlib/zstream'),
            q = Object.prototype.toString,
            K = 0,
            J = -1,
            Ga = 0,
            pa = 8;
          A.prototype.push = function (h, m) {
            var v,
              A = this.strm,
              D = this.options.chunkSize;
            if (this.ended) return !1;
            m = m === ~~m ? m : !0 === m ? 4 : 0;
            'string' == typeof h
              ? (A.input = ea.string2buf(h))
              : '[object ArrayBuffer]' === q.call(h)
                ? (A.input = new Uint8Array(h))
                : (A.input = h);
            A.next_in = 0;
            A.avail_in = A.input.length;
            do {
              if (
                (0 === A.avail_out &&
                  ((A.output = new w.Buf8(D)),
                  (A.next_out = 0),
                  (A.avail_out = D)),
                (v = ha.deflate(A, m)),
                1 !== v && v !== K)
              )
                return (this.onEnd(v), (this.ended = !0), !1);
              (0 !== A.avail_out &&
                (0 !== A.avail_in || (4 !== m && 2 !== m))) ||
                ('string' === this.options.to
                  ? this.onData(
                      ea.buf2binstring(w.shrinkBuf(A.output, A.next_out)),
                    )
                  : this.onData(w.shrinkBuf(A.output, A.next_out)));
            } while ((0 < A.avail_in || 0 === A.avail_out) && 1 !== v);
            return 4 === m
              ? ((v = ha.deflateEnd(this.strm)),
                this.onEnd(v),
                (this.ended = !0),
                v === K)
              : 2 !== m || (this.onEnd(K), (A.avail_out = 0), !0);
          };
          A.prototype.onData = function (h) {
            this.chunks.push(h);
          };
          A.prototype.onEnd = function (h) {
            h === K &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = w.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = h;
            this.msg = this.strm.msg;
          };
          H.Deflate = A;
          H.deflate = T;
          H.deflateRaw = function (h, q) {
            return ((q = q || {}), (q.raw = !0), T(h, q));
          };
          H.gzip = function (h, q) {
            return ((q = q || {}), (q.gzip = !0), T(h, q));
          };
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/deflate': 8,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      2: [
        function (v, D, H) {
          function A(v) {
            if (!(this instanceof A)) return new A(v);
            var D = (this.options = w.assign(
              { chunkSize: 16384, windowBits: 0, to: '' },
              v || {},
            ));
            D.raw &&
              0 <= D.windowBits &&
              16 > D.windowBits &&
              ((D.windowBits = -D.windowBits),
              0 === D.windowBits && (D.windowBits = -15));
            !(0 <= D.windowBits && 16 > D.windowBits) ||
              (v && v.windowBits) ||
              (D.windowBits += 32);
            15 < D.windowBits &&
              48 > D.windowBits &&
              0 === (15 & D.windowBits) &&
              (D.windowBits |= 15);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new q();
            this.strm.avail_out = 0;
            v = ha.inflateInit2(this.strm, D.windowBits);
            if (v !== m.Z_OK) throw Error(h[v]);
            this.header = new K();
            ha.inflateGetHeader(this.strm, this.header);
          }
          function T(h, q) {
            q = new A(q);
            if ((q.push(h, !0), q.err)) throw q.msg;
            return q.result;
          }
          var ha = v('./zlib/inflate'),
            w = v('./utils/common'),
            ea = v('./utils/strings'),
            m = v('./zlib/constants'),
            h = v('./zlib/messages'),
            q = v('./zlib/zstream'),
            K = v('./zlib/gzheader'),
            J = Object.prototype.toString;
          A.prototype.push = function (h, q) {
            var v,
              A,
              D,
              K,
              H,
              T = this.strm,
              pa = this.options.chunkSize,
              Ga = this.options.dictionary,
              ca = !1;
            if (this.ended) return !1;
            q = q === ~~q ? q : !0 === q ? m.Z_FINISH : m.Z_NO_FLUSH;
            'string' == typeof h
              ? (T.input = ea.binstring2buf(h))
              : '[object ArrayBuffer]' === J.call(h)
                ? (T.input = new Uint8Array(h))
                : (T.input = h);
            T.next_in = 0;
            T.avail_in = T.input.length;
            do {
              if (
                (0 === T.avail_out &&
                  ((T.output = new w.Buf8(pa)),
                  (T.next_out = 0),
                  (T.avail_out = pa)),
                (v = ha.inflate(T, m.Z_NO_FLUSH)),
                v === m.Z_NEED_DICT &&
                  Ga &&
                  ((H =
                    'string' == typeof Ga
                      ? ea.string2buf(Ga)
                      : '[object ArrayBuffer]' === J.call(Ga)
                        ? new Uint8Array(Ga)
                        : Ga),
                  (v = ha.inflateSetDictionary(this.strm, H))),
                v === m.Z_BUF_ERROR && !0 === ca && ((v = m.Z_OK), (ca = !1)),
                v !== m.Z_STREAM_END && v !== m.Z_OK)
              )
                return (this.onEnd(v), (this.ended = !0), !1);
              T.next_out &&
                ((0 !== T.avail_out &&
                  v !== m.Z_STREAM_END &&
                  (0 !== T.avail_in ||
                    (q !== m.Z_FINISH && q !== m.Z_SYNC_FLUSH))) ||
                  ('string' === this.options.to
                    ? ((A = ea.utf8border(T.output, T.next_out)),
                      (D = T.next_out - A),
                      (K = ea.buf2string(T.output, A)),
                      (T.next_out = D),
                      (T.avail_out = pa - D),
                      D && w.arraySet(T.output, T.output, A, D, 0),
                      this.onData(K))
                    : this.onData(w.shrinkBuf(T.output, T.next_out))));
              0 === T.avail_in && 0 === T.avail_out && (ca = !0);
            } while (
              (0 < T.avail_in || 0 === T.avail_out) &&
              v !== m.Z_STREAM_END
            );
            return (
              v === m.Z_STREAM_END && (q = m.Z_FINISH),
              q === m.Z_FINISH
                ? ((v = ha.inflateEnd(this.strm)),
                  this.onEnd(v),
                  (this.ended = !0),
                  v === m.Z_OK)
                : q !== m.Z_SYNC_FLUSH ||
                  (this.onEnd(m.Z_OK), (T.avail_out = 0), !0)
            );
          };
          A.prototype.onData = function (h) {
            this.chunks.push(h);
          };
          A.prototype.onEnd = function (h) {
            h === m.Z_OK &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = w.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = h;
            this.msg = this.strm.msg;
          };
          H.Inflate = A;
          H.inflate = T;
          H.inflateRaw = function (h, q) {
            return ((q = q || {}), (q.raw = !0), T(h, q));
          };
          H.ungzip = T;
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/constants': 6,
          './zlib/gzheader': 9,
          './zlib/inflate': 11,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      3: [
        function (v, D, H) {
          v =
            'undefined' != typeof Uint8Array &&
            'undefined' != typeof Uint16Array &&
            'undefined' != typeof Int32Array;
          H.assign = function (v) {
            for (var w = Array.prototype.slice.call(arguments, 1); w.length; ) {
              var A = w.shift();
              if (A) {
                if ('object' != typeof A)
                  throw new TypeError(A + 'must be non-object');
                for (var m in A) A.hasOwnProperty(m) && (v[m] = A[m]);
              }
            }
            return v;
          };
          H.shrinkBuf = function (v, w) {
            return v.length === w
              ? v
              : v.subarray
                ? v.subarray(0, w)
                : ((v.length = w), v);
          };
          var A = {
              arraySet: function (v, w, A, m, h) {
                if (w.subarray && v.subarray)
                  return void v.set(w.subarray(A, A + m), h);
                for (var q = 0; q < m; q++) v[h + q] = w[A + q];
              },
              flattenChunks: function (v) {
                var w, A;
                var m = (A = 0);
                for (w = v.length; m < w; m++) A += v[m].length;
                var h = new Uint8Array(A);
                m = A = 0;
                for (w = v.length; m < w; m++) {
                  var q = v[m];
                  h.set(q, A);
                  A += q.length;
                }
                return h;
              },
            },
            T = {
              arraySet: function (v, w, A, m, h) {
                for (var q = 0; q < m; q++) v[h + q] = w[A + q];
              },
              flattenChunks: function (v) {
                return [].concat.apply([], v);
              },
            };
          H.setTyped = function (v) {
            v
              ? ((H.Buf8 = Uint8Array),
                (H.Buf16 = Uint16Array),
                (H.Buf32 = Int32Array),
                H.assign(H, A))
              : ((H.Buf8 = Array),
                (H.Buf16 = Array),
                (H.Buf32 = Array),
                H.assign(H, T));
          };
          H.setTyped(v);
        },
        {},
      ],
      4: [
        function (v, D, H) {
          function A(m, h) {
            if (65537 > h && ((m.subarray && w) || (!m.subarray && ha)))
              return String.fromCharCode.apply(null, T.shrinkBuf(m, h));
            for (var q = '', v = 0; v < h; v++) q += String.fromCharCode(m[v]);
            return q;
          }
          var T = v('./common'),
            ha = !0,
            w = !0;
          try {
            String.fromCharCode.apply(null, [0]);
          } catch (m) {
            ha = !1;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (m) {
            w = !1;
          }
          var ea = new T.Buf8(256);
          for (v = 0; 256 > v; v++)
            ea[v] =
              252 <= v
                ? 6
                : 248 <= v
                  ? 5
                  : 240 <= v
                    ? 4
                    : 224 <= v
                      ? 3
                      : 192 <= v
                        ? 2
                        : 1;
          ea[254] = ea[254] = 1;
          H.string2buf = function (m) {
            var h,
              q,
              w,
              v = m.length,
              A = 0;
            for (q = 0; q < v; q++) {
              var D = m.charCodeAt(q);
              55296 === (64512 & D) &&
                q + 1 < v &&
                ((h = m.charCodeAt(q + 1)),
                56320 === (64512 & h) &&
                  ((D = 65536 + ((D - 55296) << 10) + (h - 56320)), q++));
              A += 128 > D ? 1 : 2048 > D ? 2 : 65536 > D ? 3 : 4;
            }
            var H = new T.Buf8(A);
            for (q = w = 0; w < A; q++)
              ((D = m.charCodeAt(q)),
                55296 === (64512 & D) &&
                  q + 1 < v &&
                  ((h = m.charCodeAt(q + 1)),
                  56320 === (64512 & h) &&
                    ((D = 65536 + ((D - 55296) << 10) + (h - 56320)), q++)),
                128 > D
                  ? (H[w++] = D)
                  : 2048 > D
                    ? ((H[w++] = 192 | (D >>> 6)), (H[w++] = 128 | (63 & D)))
                    : 65536 > D
                      ? ((H[w++] = 224 | (D >>> 12)),
                        (H[w++] = 128 | ((D >>> 6) & 63)),
                        (H[w++] = 128 | (63 & D)))
                      : ((H[w++] = 240 | (D >>> 18)),
                        (H[w++] = 128 | ((D >>> 12) & 63)),
                        (H[w++] = 128 | ((D >>> 6) & 63)),
                        (H[w++] = 128 | (63 & D))));
            return H;
          };
          H.buf2binstring = function (m) {
            return A(m, m.length);
          };
          H.binstring2buf = function (m) {
            for (var h = new T.Buf8(m.length), q = 0, w = h.length; q < w; q++)
              h[q] = m.charCodeAt(q);
            return h;
          };
          H.buf2string = function (m, h) {
            var q,
              w,
              v,
              D = h || m.length,
              H = Array(2 * D);
            for (h = q = 0; h < D; )
              if (((w = m[h++]), 128 > w)) H[q++] = w;
              else if (((v = ea[w]), 4 < v)) ((H[q++] = 65533), (h += v - 1));
              else {
                for (w &= 2 === v ? 31 : 3 === v ? 15 : 7; 1 < v && h < D; )
                  ((w = (w << 6) | (63 & m[h++])), v--);
                1 < v
                  ? (H[q++] = 65533)
                  : 65536 > w
                    ? (H[q++] = w)
                    : ((w -= 65536),
                      (H[q++] = 55296 | ((w >> 10) & 1023)),
                      (H[q++] = 56320 | (1023 & w)));
              }
            return A(H, q);
          };
          H.utf8border = function (m, h) {
            var q;
            h = h || m.length;
            h > m.length && (h = m.length);
            for (q = h - 1; 0 <= q && 128 === (192 & m[q]); ) q--;
            return 0 > q ? h : 0 === q ? h : q + ea[m[q]] > h ? q : h;
          };
        },
        { './common': 3 },
      ],
      5: [
        function (v, D, H) {
          D.exports = function (v, D, H, w) {
            var A = (65535 & v) | 0;
            v = ((v >>> 16) & 65535) | 0;
            for (var m; 0 !== H; ) {
              m = 2e3 < H ? 2e3 : H;
              H -= m;
              do ((A = (A + D[w++]) | 0), (v = (v + A) | 0));
              while (--m);
              A %= 65521;
              v %= 65521;
            }
            return A | (v << 16) | 0;
          };
        },
        {},
      ],
      6: [
        function (v, D, H) {
          D.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        },
        {},
      ],
      7: [
        function (v, D, H) {
          var A = (function () {
            for (var v, A = [], w = 0; 256 > w; w++) {
              v = w;
              for (var D = 0; 8 > D; D++)
                v = 1 & v ? 3988292384 ^ (v >>> 1) : v >>> 1;
              A[w] = v;
            }
            return A;
          })();
          D.exports = function (v, D, w, H) {
            w = H + w;
            for (v ^= -1; H < w; H++) v = (v >>> 8) ^ A[255 & (v ^ D[H])];
            return v ^ -1;
          };
        },
        {},
      ],
      8: [
        function (v, D, H) {
          function A(h, q) {
            return ((h.msg = Ob[q]), q);
          }
          function T(h) {
            for (var q = h.length; 0 <= --q; ) h[q] = 0;
          }
          function ha(h) {
            var q = h.state,
              m = q.pending;
            m > h.avail_out && (m = h.avail_out);
            0 !== m &&
              (Va.arraySet(
                h.output,
                q.pending_buf,
                q.pending_out,
                m,
                h.next_out,
              ),
              (h.next_out += m),
              (q.pending_out += m),
              (h.total_out += m),
              (h.avail_out -= m),
              (q.pending -= m),
              0 === q.pending && (q.pending_out = 0));
          }
          function w(h, q) {
            ka._tr_flush_block(
              h,
              0 <= h.block_start ? h.block_start : -1,
              h.strstart - h.block_start,
              q,
            );
            h.block_start = h.strstart;
            ha(h.strm);
          }
          function ea(h, q) {
            h.pending_buf[h.pending++] = q;
          }
          function m(h, q) {
            h.pending_buf[h.pending++] = (q >>> 8) & 255;
            h.pending_buf[h.pending++] = 255 & q;
          }
          function h(h, q) {
            var m,
              C,
              w = h.max_chain_length,
              v = h.strstart,
              A = h.prev_length,
              F = h.nice_match,
              D = h.strstart > h.w_size - ua ? h.strstart - (h.w_size - ua) : 0,
              G = h.window,
              H = h.w_mask,
              J = h.prev,
              ca = h.strstart + La,
              K = G[v + A - 1],
              M = G[v + A];
            h.prev_length >= h.good_match && (w >>= 2);
            F > h.lookahead && (F = h.lookahead);
            do
              if (
                ((m = q),
                G[m + A] === M &&
                  G[m + A - 1] === K &&
                  G[m] === G[v] &&
                  G[++m] === G[v + 1])
              ) {
                v += 2;
                for (
                  m++;
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  G[++v] === G[++m] &&
                  v < ca;

                );
                if (((C = La - (ca - v)), (v = ca - La), C > A)) {
                  if (((h.match_start = q), (A = C), C >= F)) break;
                  K = G[v + A - 1];
                  M = G[v + A];
                }
              }
            while ((q = J[q & H]) > D && 0 !== --w);
            return A <= h.lookahead ? A : h.lookahead;
          }
          function q(h) {
            var q,
              m,
              y = h.w_size;
            do {
              if (
                ((m = h.window_size - h.lookahead - h.strstart),
                h.strstart >= y + (y - ua))
              ) {
                Va.arraySet(h.window, h.window, y, y, 0);
                h.match_start -= y;
                h.strstart -= y;
                h.block_start -= y;
                var C = (q = h.hash_size);
                do {
                  var v = h.head[--C];
                  h.head[C] = v >= y ? v - y : 0;
                } while (--q);
                C = q = y;
                do ((v = h.prev[--C]), (h.prev[C] = v >= y ? v - y : 0));
                while (--q);
                m += y;
              }
              if (0 === h.strm.avail_in) break;
              C = h.strm;
              v = h.window;
              var w = h.strstart + h.lookahead,
                A = C.avail_in;
              if (
                ((q =
                  (A > m && (A = m),
                  0 === A
                    ? 0
                    : ((C.avail_in -= A),
                      Va.arraySet(v, C.input, C.next_in, A, w),
                      1 === C.state.wrap
                        ? (C.adler = va(C.adler, v, A, w))
                        : 2 === C.state.wrap &&
                          (C.adler = ra(C.adler, v, A, w)),
                      (C.next_in += A),
                      (C.total_in += A),
                      A))),
                (h.lookahead += q),
                h.lookahead + h.insert >= Da)
              )
                for (
                  m = h.strstart - h.insert,
                    h.ins_h = h.window[m],
                    h.ins_h =
                      ((h.ins_h << h.hash_shift) ^ h.window[m + 1]) &
                      h.hash_mask;
                  h.insert &&
                  ((h.ins_h =
                    ((h.ins_h << h.hash_shift) ^ h.window[m + Da - 1]) &
                    h.hash_mask),
                  (h.prev[m & h.w_mask] = h.head[h.ins_h]),
                  (h.head[h.ins_h] = m),
                  m++,
                  h.insert--,
                  !(h.lookahead + h.insert < Da));

                );
            } while (h.lookahead < ua && 0 !== h.strm.avail_in);
          }
          function K(m, v) {
            for (var z, y; ; ) {
              if (m.lookahead < ua) {
                if ((q(m), m.lookahead < ua && v === ca)) return N;
                if (0 === m.lookahead) break;
              }
              if (
                ((z = 0),
                m.lookahead >= Da &&
                  ((m.ins_h =
                    ((m.ins_h << m.hash_shift) ^
                      m.window[m.strstart + Da - 1]) &
                    m.hash_mask),
                  (z = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                  (m.head[m.ins_h] = m.strstart)),
                0 !== z &&
                  m.strstart - z <= m.w_size - ua &&
                  (m.match_length = h(m, z)),
                m.match_length >= Da)
              )
                if (
                  ((y = ka._tr_tally(
                    m,
                    m.strstart - m.match_start,
                    m.match_length - Da,
                  )),
                  (m.lookahead -= m.match_length),
                  m.match_length <= m.max_lazy_match && m.lookahead >= Da)
                ) {
                  m.match_length--;
                  do
                    (m.strstart++,
                      (m.ins_h =
                        ((m.ins_h << m.hash_shift) ^
                          m.window[m.strstart + Da - 1]) &
                        m.hash_mask),
                      (z = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                      (m.head[m.ins_h] = m.strstart));
                  while (0 !== --m.match_length);
                  m.strstart++;
                } else
                  ((m.strstart += m.match_length),
                    (m.match_length = 0),
                    (m.ins_h = m.window[m.strstart]),
                    (m.ins_h =
                      ((m.ins_h << m.hash_shift) ^ m.window[m.strstart + 1]) &
                      m.hash_mask));
              else
                ((y = ka._tr_tally(m, 0, m.window[m.strstart])),
                  m.lookahead--,
                  m.strstart++);
              if (y && (w(m, !1), 0 === m.strm.avail_out)) return N;
            }
            return (
              (m.insert = m.strstart < Da - 1 ? m.strstart : Da - 1),
              v === za
                ? (w(m, !0), 0 === m.strm.avail_out ? Jc : qb)
                : m.last_lit && (w(m, !1), 0 === m.strm.avail_out)
                  ? N
                  : G
            );
          }
          function J(m, v) {
            for (var z, y, C; ; ) {
              if (m.lookahead < ua) {
                if ((q(m), m.lookahead < ua && v === ca)) return N;
                if (0 === m.lookahead) break;
              }
              if (
                ((z = 0),
                m.lookahead >= Da &&
                  ((m.ins_h =
                    ((m.ins_h << m.hash_shift) ^
                      m.window[m.strstart + Da - 1]) &
                    m.hash_mask),
                  (z = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                  (m.head[m.ins_h] = m.strstart)),
                (m.prev_length = m.match_length),
                (m.prev_match = m.match_start),
                (m.match_length = Da - 1),
                0 !== z &&
                  m.prev_length < m.max_lazy_match &&
                  m.strstart - z <= m.w_size - ua &&
                  ((m.match_length = h(m, z)),
                  5 >= m.match_length &&
                    (m.strategy === hb ||
                      (m.match_length === Da &&
                        4096 < m.strstart - m.match_start)) &&
                    (m.match_length = Da - 1)),
                m.prev_length >= Da && m.match_length <= m.prev_length)
              ) {
                C = m.strstart + m.lookahead - Da;
                y = ka._tr_tally(
                  m,
                  m.strstart - 1 - m.prev_match,
                  m.prev_length - Da,
                );
                m.lookahead -= m.prev_length - 1;
                m.prev_length -= 2;
                do
                  ++m.strstart <= C &&
                    ((m.ins_h =
                      ((m.ins_h << m.hash_shift) ^
                        m.window[m.strstart + Da - 1]) &
                      m.hash_mask),
                    (z = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                    (m.head[m.ins_h] = m.strstart));
                while (0 !== --m.prev_length);
                if (
                  ((m.match_available = 0),
                  (m.match_length = Da - 1),
                  m.strstart++,
                  y && (w(m, !1), 0 === m.strm.avail_out))
                )
                  return N;
              } else if (m.match_available) {
                if (
                  ((y = ka._tr_tally(m, 0, m.window[m.strstart - 1])),
                  y && w(m, !1),
                  m.strstart++,
                  m.lookahead--,
                  0 === m.strm.avail_out)
                )
                  return N;
              } else ((m.match_available = 1), m.strstart++, m.lookahead--);
            }
            return (
              m.match_available &&
                (ka._tr_tally(m, 0, m.window[m.strstart - 1]),
                (m.match_available = 0)),
              (m.insert = m.strstart < Da - 1 ? m.strstart : Da - 1),
              v === za
                ? (w(m, !0), 0 === m.strm.avail_out ? Jc : qb)
                : m.last_lit && (w(m, !1), 0 === m.strm.avail_out)
                  ? N
                  : G
            );
          }
          function Ga(h, m, q, y, v) {
            this.good_length = h;
            this.max_lazy = m;
            this.nice_length = q;
            this.max_chain = y;
            this.func = v;
          }
          function pa() {
            this.strm = null;
            this.status = 0;
            this.pending_buf = null;
            this.wrap =
              this.pending =
              this.pending_out =
              this.pending_buf_size =
                0;
            this.gzhead = null;
            this.gzindex = 0;
            this.method = cc;
            this.last_flush = -1;
            this.w_mask = this.w_bits = this.w_size = 0;
            this.window = null;
            this.window_size = 0;
            this.head = this.prev = null;
            this.nice_match =
              this.good_match =
              this.strategy =
              this.level =
              this.max_lazy_match =
              this.max_chain_length =
              this.prev_length =
              this.lookahead =
              this.match_start =
              this.strstart =
              this.match_available =
              this.prev_match =
              this.match_length =
              this.block_start =
              this.hash_shift =
              this.hash_mask =
              this.hash_bits =
              this.hash_size =
              this.ins_h =
                0;
            this.dyn_ltree = new Va.Buf16(2 * bb);
            this.dyn_dtree = new Va.Buf16(2 * (2 * M + 1));
            this.bl_tree = new Va.Buf16(2 * (2 * F + 1));
            T(this.dyn_ltree);
            T(this.dyn_dtree);
            T(this.bl_tree);
            this.bl_desc = this.d_desc = this.l_desc = null;
            this.bl_count = new Va.Buf16(Bb + 1);
            this.heap = new Va.Buf16(2 * xa + 1);
            T(this.heap);
            this.heap_max = this.heap_len = 0;
            this.depth = new Va.Buf16(2 * xa + 1);
            T(this.depth);
            this.bi_valid =
              this.bi_buf =
              this.insert =
              this.matches =
              this.static_len =
              this.opt_len =
              this.d_buf =
              this.last_lit =
              this.lit_bufsize =
              this.l_buf =
                0;
          }
          function Fb(h) {
            var m;
            return h && h.state
              ? ((h.total_in = h.total_out = 0),
                (h.data_type = db),
                (m = h.state),
                (m.pending = 0),
                (m.pending_out = 0),
                0 > m.wrap && (m.wrap = -m.wrap),
                (m.status = m.wrap ? na : Y),
                (h.adler = 2 === m.wrap ? 0 : 1),
                (m.last_flush = ca),
                ka._tr_init(m),
                Ba)
              : A(h, da);
          }
          function Gb(h) {
            var m = Fb(h);
            m === Ba &&
              ((h = h.state),
              (h.window_size = 2 * h.w_size),
              T(h.head),
              (h.max_lazy_match = R[h.level].max_lazy),
              (h.good_match = R[h.level].good_length),
              (h.nice_match = R[h.level].nice_length),
              (h.max_chain_length = R[h.level].max_chain),
              (h.strstart = 0),
              (h.block_start = 0),
              (h.lookahead = 0),
              (h.insert = 0),
              (h.match_length = h.prev_length = Da - 1),
              (h.match_available = 0),
              (h.ins_h = 0));
            return m;
          }
          function Lb(h, m, q, y, v, w) {
            if (!h) return da;
            var z = 1;
            if (
              (m === wa && (m = 6),
              0 > y ? ((z = 0), (y = -y)) : 15 < y && ((z = 2), (y -= 16)),
              1 > v ||
                v > qc ||
                q !== cc ||
                8 > y ||
                15 < y ||
                0 > m ||
                9 < m ||
                0 > w ||
                w > ba)
            )
              return A(h, da);
            8 === y && (y = 9);
            var C = new pa();
            return (
              (h.state = C),
              (C.strm = h),
              (C.wrap = z),
              (C.gzhead = null),
              (C.w_bits = y),
              (C.w_size = 1 << C.w_bits),
              (C.w_mask = C.w_size - 1),
              (C.hash_bits = v + 7),
              (C.hash_size = 1 << C.hash_bits),
              (C.hash_mask = C.hash_size - 1),
              (C.hash_shift = ~~((C.hash_bits + Da - 1) / Da)),
              (C.window = new Va.Buf8(2 * C.w_size)),
              (C.head = new Va.Buf16(C.hash_size)),
              (C.prev = new Va.Buf16(C.w_size)),
              (C.lit_bufsize = 1 << (v + 6)),
              (C.pending_buf_size = 4 * C.lit_bufsize),
              (C.pending_buf = new Va.Buf8(C.pending_buf_size)),
              (C.d_buf = 1 * C.lit_bufsize),
              (C.l_buf = 3 * C.lit_bufsize),
              (C.level = m),
              (C.strategy = w),
              (C.method = q),
              Gb(h)
            );
          }
          var Va = v('../utils/common'),
            ka = v('./trees'),
            va = v('./adler32'),
            ra = v('./crc32'),
            Ob = v('./messages'),
            ca = 0,
            za = 4,
            Ba = 0,
            da = -2,
            wa = -1,
            hb = 1,
            ba = 4,
            db = 2,
            cc = 8,
            qc = 9,
            xa = 286,
            M = 30,
            F = 19,
            bb = 2 * xa + 1,
            Bb = 15,
            Da = 3,
            La = 258,
            ua = La + Da + 1,
            na = 42,
            Y = 113,
            N = 1,
            G = 2,
            Jc = 3,
            qb = 4;
          var R = [
            new Ga(0, 0, 0, 0, function (h, m) {
              var z = 65535;
              for (
                z > h.pending_buf_size - 5 && (z = h.pending_buf_size - 5);
                ;

              ) {
                if (1 >= h.lookahead) {
                  if ((q(h), 0 === h.lookahead && m === ca)) return N;
                  if (0 === h.lookahead) break;
                }
                h.strstart += h.lookahead;
                h.lookahead = 0;
                var y = h.block_start + z;
                if (
                  ((0 === h.strstart || h.strstart >= y) &&
                    ((h.lookahead = h.strstart - y),
                    (h.strstart = y),
                    w(h, !1),
                    0 === h.strm.avail_out)) ||
                  (h.strstart - h.block_start >= h.w_size - ua &&
                    (w(h, !1), 0 === h.strm.avail_out))
                )
                  return N;
              }
              return (
                (h.insert = 0),
                m === za
                  ? (w(h, !0), 0 === h.strm.avail_out ? Jc : qb)
                  : (h.strstart > h.block_start && w(h, !1), N)
              );
            }),
            new Ga(4, 4, 8, 4, K),
            new Ga(4, 5, 16, 8, K),
            new Ga(4, 6, 32, 32, K),
            new Ga(4, 4, 16, 16, J),
            new Ga(8, 16, 32, 32, J),
            new Ga(8, 16, 128, 128, J),
            new Ga(8, 32, 128, 256, J),
            new Ga(32, 128, 258, 1024, J),
            new Ga(32, 258, 258, 4096, J),
          ];
          H.deflateInit = function (h, m) {
            return Lb(h, m, cc, 15, 8, 0);
          };
          H.deflateInit2 = Lb;
          H.deflateReset = Gb;
          H.deflateResetKeep = Fb;
          H.deflateSetHeader = function (h, m) {
            return h && h.state
              ? 2 !== h.state.wrap
                ? da
                : ((h.state.gzhead = m), Ba)
              : da;
          };
          H.deflate = function (h, v) {
            var z, y;
            if (!h || !h.state || 5 < v || 0 > v) return h ? A(h, da) : da;
            if (
              ((y = h.state),
              !h.output ||
                (!h.input && 0 !== h.avail_in) ||
                (666 === y.status && v !== za))
            )
              return A(h, 0 === h.avail_out ? -5 : da);
            if (
              ((y.strm = h),
              (z = y.last_flush),
              (y.last_flush = v),
              y.status === na)
            )
              if (2 === y.wrap)
                ((h.adler = 0),
                  ea(y, 31),
                  ea(y, 139),
                  ea(y, 8),
                  y.gzhead
                    ? (ea(
                        y,
                        (y.gzhead.text ? 1 : 0) +
                          (y.gzhead.hcrc ? 2 : 0) +
                          (y.gzhead.extra ? 4 : 0) +
                          (y.gzhead.name ? 8 : 0) +
                          (y.gzhead.comment ? 16 : 0),
                      ),
                      ea(y, 255 & y.gzhead.time),
                      ea(y, (y.gzhead.time >> 8) & 255),
                      ea(y, (y.gzhead.time >> 16) & 255),
                      ea(y, (y.gzhead.time >> 24) & 255),
                      ea(
                        y,
                        9 === y.level
                          ? 2
                          : 2 <= y.strategy || 2 > y.level
                            ? 4
                            : 0,
                      ),
                      ea(y, 255 & y.gzhead.os),
                      y.gzhead.extra &&
                        y.gzhead.extra.length &&
                        (ea(y, 255 & y.gzhead.extra.length),
                        ea(y, (y.gzhead.extra.length >> 8) & 255)),
                      y.gzhead.hcrc &&
                        (h.adler = ra(h.adler, y.pending_buf, y.pending, 0)),
                      (y.gzindex = 0),
                      (y.status = 69))
                    : (ea(y, 0),
                      ea(y, 0),
                      ea(y, 0),
                      ea(y, 0),
                      ea(y, 0),
                      ea(
                        y,
                        9 === y.level
                          ? 2
                          : 2 <= y.strategy || 2 > y.level
                            ? 4
                            : 0,
                      ),
                      ea(y, 3),
                      (y.status = Y)));
              else {
                var C = (cc + ((y.w_bits - 8) << 4)) << 8;
                C |=
                  (2 <= y.strategy || 2 > y.level
                    ? 0
                    : 6 > y.level
                      ? 1
                      : 6 === y.level
                        ? 2
                        : 3) << 6;
                0 !== y.strstart && (C |= 32);
                y.status = Y;
                m(y, C + (31 - (C % 31)));
                0 !== y.strstart &&
                  (m(y, h.adler >>> 16), m(y, 65535 & h.adler));
                h.adler = 1;
              }
            if (69 === y.status)
              if (y.gzhead.extra) {
                for (
                  C = y.pending;
                  y.gzindex < (65535 & y.gzhead.extra.length) &&
                  (y.pending !== y.pending_buf_size ||
                    (y.gzhead.hcrc &&
                      y.pending > C &&
                      (h.adler = ra(h.adler, y.pending_buf, y.pending - C, C)),
                    ha(h),
                    (C = y.pending),
                    y.pending !== y.pending_buf_size));

                )
                  (ea(y, 255 & y.gzhead.extra[y.gzindex]), y.gzindex++);
                y.gzhead.hcrc &&
                  y.pending > C &&
                  (h.adler = ra(h.adler, y.pending_buf, y.pending - C, C));
                y.gzindex === y.gzhead.extra.length &&
                  ((y.gzindex = 0), (y.status = 73));
              } else y.status = 73;
            if (73 === y.status)
              if (y.gzhead.name) {
                C = y.pending;
                do {
                  if (
                    y.pending === y.pending_buf_size &&
                    (y.gzhead.hcrc &&
                      y.pending > C &&
                      (h.adler = ra(h.adler, y.pending_buf, y.pending - C, C)),
                    ha(h),
                    (C = y.pending),
                    y.pending === y.pending_buf_size)
                  ) {
                    var F = 1;
                    break;
                  }
                  F =
                    y.gzindex < y.gzhead.name.length
                      ? 255 & y.gzhead.name.charCodeAt(y.gzindex++)
                      : 0;
                  ea(y, F);
                } while (0 !== F);
                y.gzhead.hcrc &&
                  y.pending > C &&
                  (h.adler = ra(h.adler, y.pending_buf, y.pending - C, C));
                0 === F && ((y.gzindex = 0), (y.status = 91));
              } else y.status = 91;
            if (91 === y.status)
              if (y.gzhead.comment) {
                C = y.pending;
                do {
                  if (
                    y.pending === y.pending_buf_size &&
                    (y.gzhead.hcrc &&
                      y.pending > C &&
                      (h.adler = ra(h.adler, y.pending_buf, y.pending - C, C)),
                    ha(h),
                    (C = y.pending),
                    y.pending === y.pending_buf_size)
                  ) {
                    F = 1;
                    break;
                  }
                  F =
                    y.gzindex < y.gzhead.comment.length
                      ? 255 & y.gzhead.comment.charCodeAt(y.gzindex++)
                      : 0;
                  ea(y, F);
                } while (0 !== F);
                y.gzhead.hcrc &&
                  y.pending > C &&
                  (h.adler = ra(h.adler, y.pending_buf, y.pending - C, C));
                0 === F && (y.status = 103);
              } else y.status = 103;
            if (
              (103 === y.status &&
                (y.gzhead.hcrc
                  ? (y.pending + 2 > y.pending_buf_size && ha(h),
                    y.pending + 2 <= y.pending_buf_size &&
                      (ea(y, 255 & h.adler),
                      ea(y, (h.adler >> 8) & 255),
                      (h.adler = 0),
                      (y.status = Y)))
                  : (y.status = Y)),
              0 !== y.pending)
            ) {
              if ((ha(h), 0 === h.avail_out)) return ((y.last_flush = -1), Ba);
            } else if (
              0 === h.avail_in &&
              (v << 1) - (4 < v ? 9 : 0) <= (z << 1) - (4 < z ? 9 : 0) &&
              v !== za
            )
              return A(h, -5);
            if (666 === y.status && 0 !== h.avail_in) return A(h, -5);
            if (
              0 !== h.avail_in ||
              0 !== y.lookahead ||
              (v !== ca && 666 !== y.status)
            ) {
              if (2 === y.strategy)
                a: {
                  for (var D; ; ) {
                    if (0 === y.lookahead && (q(y), 0 === y.lookahead)) {
                      if (v === ca) {
                        var H = N;
                        break a;
                      }
                      break;
                    }
                    if (
                      ((y.match_length = 0),
                      (D = ka._tr_tally(y, 0, y.window[y.strstart])),
                      y.lookahead--,
                      y.strstart++,
                      D && (w(y, !1), 0 === y.strm.avail_out))
                    ) {
                      H = N;
                      break a;
                    }
                  }
                  H =
                    ((y.insert = 0),
                    v === za
                      ? (w(y, !0), 0 === y.strm.avail_out ? Jc : qb)
                      : y.last_lit && (w(y, !1), 0 === y.strm.avail_out)
                        ? N
                        : G);
                }
              else if (3 === y.strategy)
                a: {
                  var J, K;
                  for (D = y.window; ; ) {
                    if (y.lookahead <= La) {
                      if ((q(y), y.lookahead <= La && v === ca)) {
                        H = N;
                        break a;
                      }
                      if (0 === y.lookahead) break;
                    }
                    if (
                      ((y.match_length = 0),
                      y.lookahead >= Da &&
                        0 < y.strstart &&
                        ((K = y.strstart - 1),
                        (J = D[K]),
                        J === D[++K] && J === D[++K] && J === D[++K]))
                    ) {
                      for (
                        z = y.strstart + La;
                        J === D[++K] &&
                        J === D[++K] &&
                        J === D[++K] &&
                        J === D[++K] &&
                        J === D[++K] &&
                        J === D[++K] &&
                        J === D[++K] &&
                        J === D[++K] &&
                        K < z;

                      );
                      y.match_length = La - (z - K);
                      y.match_length > y.lookahead &&
                        (y.match_length = y.lookahead);
                    }
                    if (
                      (y.match_length >= Da
                        ? ((H = ka._tr_tally(y, 1, y.match_length - Da)),
                          (y.lookahead -= y.match_length),
                          (y.strstart += y.match_length),
                          (y.match_length = 0))
                        : ((H = ka._tr_tally(y, 0, y.window[y.strstart])),
                          y.lookahead--,
                          y.strstart++),
                      H && (w(y, !1), 0 === y.strm.avail_out))
                    ) {
                      H = N;
                      break a;
                    }
                  }
                  H =
                    ((y.insert = 0),
                    v === za
                      ? (w(y, !0), 0 === y.strm.avail_out ? Jc : qb)
                      : y.last_lit && (w(y, !1), 0 === y.strm.avail_out)
                        ? N
                        : G);
                }
              else H = R[y.level].func(y, v);
              if (
                ((H !== Jc && H !== qb) || (y.status = 666),
                H === N || H === Jc)
              )
                return (0 === h.avail_out && (y.last_flush = -1), Ba);
              if (
                H === G &&
                (1 === v
                  ? ka._tr_align(y)
                  : 5 !== v &&
                    (ka._tr_stored_block(y, 0, 0, !1),
                    3 === v &&
                      (T(y.head),
                      0 === y.lookahead &&
                        ((y.strstart = 0),
                        (y.block_start = 0),
                        (y.insert = 0)))),
                ha(h),
                0 === h.avail_out)
              )
                return ((y.last_flush = -1), Ba);
            }
            return v !== za
              ? Ba
              : 0 >= y.wrap
                ? 1
                : (2 === y.wrap
                    ? (ea(y, 255 & h.adler),
                      ea(y, (h.adler >> 8) & 255),
                      ea(y, (h.adler >> 16) & 255),
                      ea(y, (h.adler >> 24) & 255),
                      ea(y, 255 & h.total_in),
                      ea(y, (h.total_in >> 8) & 255),
                      ea(y, (h.total_in >> 16) & 255),
                      ea(y, (h.total_in >> 24) & 255))
                    : (m(y, h.adler >>> 16), m(y, 65535 & h.adler)),
                  ha(h),
                  0 < y.wrap && (y.wrap = -y.wrap),
                  0 !== y.pending ? Ba : 1);
          };
          H.deflateEnd = function (h) {
            var m;
            return h && h.state
              ? ((m = h.state.status),
                m !== na &&
                69 !== m &&
                73 !== m &&
                91 !== m &&
                103 !== m &&
                m !== Y &&
                666 !== m
                  ? A(h, da)
                  : ((h.state = null), m === Y ? A(h, -3) : Ba))
              : da;
          };
          H.deflateSetDictionary = function (h, m) {
            var z, y, v;
            var w = m.length;
            if (
              !h ||
              !h.state ||
              ((z = h.state),
              (y = z.wrap),
              2 === y || (1 === y && z.status !== na) || z.lookahead)
            )
              return da;
            1 === y && (h.adler = va(h.adler, m, w, 0));
            z.wrap = 0;
            w >= z.w_size &&
              (0 === y &&
                (T(z.head),
                (z.strstart = 0),
                (z.block_start = 0),
                (z.insert = 0)),
              (v = new Va.Buf8(z.w_size)),
              Va.arraySet(v, m, w - z.w_size, z.w_size, 0),
              (m = v),
              (w = z.w_size));
            v = h.avail_in;
            var C = h.next_in;
            var A = h.input;
            h.avail_in = w;
            h.next_in = 0;
            h.input = m;
            for (q(z); z.lookahead >= Da; ) {
              m = z.strstart;
              w = z.lookahead - (Da - 1);
              do
                ((z.ins_h =
                  ((z.ins_h << z.hash_shift) ^ z.window[m + Da - 1]) &
                  z.hash_mask),
                  (z.prev[m & z.w_mask] = z.head[z.ins_h]),
                  (z.head[z.ins_h] = m),
                  m++);
              while (--w);
              z.strstart = m;
              z.lookahead = Da - 1;
              q(z);
            }
            return (
              (z.strstart += z.lookahead),
              (z.block_start = z.strstart),
              (z.insert = z.lookahead),
              (z.lookahead = 0),
              (z.match_length = z.prev_length = Da - 1),
              (z.match_available = 0),
              (h.next_in = C),
              (h.input = A),
              (h.avail_in = v),
              (z.wrap = y),
              Ba
            );
          };
          H.deflateInfo = 'pako deflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './messages': 13,
          './trees': 14,
        },
      ],
      9: [
        function (v, D, H) {
          D.exports = function () {
            this.os = this.xflags = this.time = this.text = 0;
            this.extra = null;
            this.extra_len = 0;
            this.comment = this.name = '';
            this.hcrc = 0;
            this.done = !1;
          };
        },
        {},
      ],
      10: [
        function (v, D, H) {
          D.exports = function (v, D) {
            var A, w, H;
            var m = v.state;
            var h = v.next_in;
            var q = v.input;
            var K = h + (v.avail_in - 5);
            var J = v.next_out;
            var T = v.output;
            D = J - (D - v.avail_out);
            var pa = J + (v.avail_out - 257);
            var Fb = m.dmax;
            var Gb = m.wsize;
            var Lb = m.whave;
            var Va = m.wnext;
            var ka = m.window;
            var va = m.hold;
            var ra = m.bits;
            var Ob = m.lencode;
            var ca = m.distcode;
            var za = (1 << m.lenbits) - 1;
            var Ba = (1 << m.distbits) - 1;
            a: do {
              15 > ra &&
                ((va += q[h++] << ra),
                (ra += 8),
                (va += q[h++] << ra),
                (ra += 8));
              var da = Ob[va & za];
              b: for (;;) {
                if (
                  ((A = da >>> 24),
                  (va >>>= A),
                  (ra -= A),
                  (A = (da >>> 16) & 255),
                  0 === A)
                )
                  T[J++] = 65535 & da;
                else {
                  if (!(16 & A)) {
                    if (0 === (64 & A)) {
                      da = Ob[(65535 & da) + (va & ((1 << A) - 1))];
                      continue b;
                    }
                    if (32 & A) {
                      m.mode = 12;
                      break a;
                    }
                    v.msg = 'invalid literal/length code';
                    m.mode = 30;
                    break a;
                  }
                  var wa = 65535 & da;
                  (A &= 15) &&
                    (ra < A && ((va += q[h++] << ra), (ra += 8)),
                    (wa += va & ((1 << A) - 1)),
                    (va >>>= A),
                    (ra -= A));
                  15 > ra &&
                    ((va += q[h++] << ra),
                    (ra += 8),
                    (va += q[h++] << ra),
                    (ra += 8));
                  da = ca[va & Ba];
                  c: for (;;) {
                    if (
                      ((A = da >>> 24),
                      (va >>>= A),
                      (ra -= A),
                      (A = (da >>> 16) & 255),
                      !(16 & A))
                    ) {
                      if (0 === (64 & A)) {
                        da = ca[(65535 & da) + (va & ((1 << A) - 1))];
                        continue c;
                      }
                      v.msg = 'invalid distance code';
                      m.mode = 30;
                      break a;
                    }
                    if (
                      ((w = 65535 & da),
                      (A &= 15),
                      ra < A &&
                        ((va += q[h++] << ra),
                        (ra += 8),
                        ra < A && ((va += q[h++] << ra), (ra += 8))),
                      (w += va & ((1 << A) - 1)),
                      w > Fb)
                    ) {
                      v.msg = 'invalid distance too far back';
                      m.mode = 30;
                      break a;
                    }
                    if (((va >>>= A), (ra -= A), (A = J - D), w > A)) {
                      if (((A = w - A), A > Lb && m.sane)) {
                        v.msg = 'invalid distance too far back';
                        m.mode = 30;
                        break a;
                      }
                      if (((da = 0), (H = ka), 0 === Va)) {
                        if (((da += Gb - A), A < wa)) {
                          wa -= A;
                          do T[J++] = ka[da++];
                          while (--A);
                          da = J - w;
                          H = T;
                        }
                      } else if (Va < A) {
                        if (((da += Gb + Va - A), (A -= Va), A < wa)) {
                          wa -= A;
                          do T[J++] = ka[da++];
                          while (--A);
                          if (((da = 0), Va < wa)) {
                            A = Va;
                            wa -= A;
                            do T[J++] = ka[da++];
                            while (--A);
                            da = J - w;
                            H = T;
                          }
                        }
                      } else if (((da += Va - A), A < wa)) {
                        wa -= A;
                        do T[J++] = ka[da++];
                        while (--A);
                        da = J - w;
                        H = T;
                      }
                      for (; 2 < wa; )
                        ((T[J++] = H[da++]),
                          (T[J++] = H[da++]),
                          (T[J++] = H[da++]),
                          (wa -= 3));
                      wa && ((T[J++] = H[da++]), 1 < wa && (T[J++] = H[da++]));
                    } else {
                      da = J - w;
                      do
                        ((T[J++] = T[da++]),
                          (T[J++] = T[da++]),
                          (T[J++] = T[da++]),
                          (wa -= 3));
                      while (2 < wa);
                      wa && ((T[J++] = T[da++]), 1 < wa && (T[J++] = T[da++]));
                    }
                    break;
                  }
                }
                break;
              }
            } while (h < K && J < pa);
            wa = ra >> 3;
            h -= wa;
            ra -= wa << 3;
            v.next_in = h;
            v.next_out = J;
            v.avail_in = h < K ? 5 + (K - h) : 5 - (h - K);
            v.avail_out = J < pa ? 257 + (pa - J) : 257 - (J - pa);
            m.hold = va & ((1 << ra) - 1);
            m.bits = ra;
          };
        },
        {},
      ],
      11: [
        function (v, D, H) {
          function A(h) {
            return (
              ((h >>> 24) & 255) +
              ((h >>> 8) & 65280) +
              ((65280 & h) << 8) +
              ((255 & h) << 24)
            );
          }
          function T() {
            this.mode = 0;
            this.last = !1;
            this.wrap = 0;
            this.havedict = !1;
            this.total = this.check = this.dmax = this.flags = 0;
            this.head = null;
            this.wnext = this.whave = this.wsize = this.wbits = 0;
            this.window = null;
            this.extra = this.offset = this.length = this.bits = this.hold = 0;
            this.distcode = this.lencode = null;
            this.have =
              this.ndist =
              this.nlen =
              this.ncode =
              this.distbits =
              this.lenbits =
                0;
            this.next = null;
            this.lens = new J.Buf16(320);
            this.work = new J.Buf16(288);
            this.distdyn = this.lendyn = null;
            this.was = this.back = this.sane = 0;
          }
          function ha(h) {
            var m;
            return h && h.state
              ? ((m = h.state),
                (h.total_in = h.total_out = m.total = 0),
                (h.msg = ''),
                m.wrap && (h.adler = 1 & m.wrap),
                (m.mode = ka),
                (m.last = 0),
                (m.havedict = 0),
                (m.dmax = 32768),
                (m.head = null),
                (m.hold = 0),
                (m.bits = 0),
                (m.lencode = m.lendyn = new J.Buf32(va)),
                (m.distcode = m.distdyn = new J.Buf32(ra)),
                (m.sane = 1),
                (m.back = -1),
                Lb)
              : Va;
          }
          function w(h) {
            var m;
            return h && h.state
              ? ((m = h.state),
                (m.wsize = 0),
                (m.whave = 0),
                (m.wnext = 0),
                ha(h))
              : Va;
          }
          function ea(h, m) {
            var q, v;
            return h && h.state
              ? ((v = h.state),
                0 > m
                  ? ((q = 0), (m = -m))
                  : ((q = (m >> 4) + 1), 48 > m && (m &= 15)),
                m && (8 > m || 15 < m)
                  ? Va
                  : (null !== v.window && v.wbits !== m && (v.window = null),
                    (v.wrap = q),
                    (v.wbits = m),
                    w(h)))
              : Va;
          }
          function m(h, m) {
            var q, v;
            return h
              ? ((v = new T()),
                (h.state = v),
                (v.window = null),
                (q = ea(h, m)),
                q !== Lb && (h.state = null),
                q)
              : Va;
          }
          function h(h, m, q, v) {
            var w;
            h = h.state;
            return (
              null === h.window &&
                ((h.wsize = 1 << h.wbits),
                (h.wnext = 0),
                (h.whave = 0),
                (h.window = new J.Buf8(h.wsize))),
              v >= h.wsize
                ? (J.arraySet(h.window, m, q - h.wsize, h.wsize, 0),
                  (h.wnext = 0),
                  (h.whave = h.wsize))
                : ((w = h.wsize - h.wnext),
                  w > v && (w = v),
                  J.arraySet(h.window, m, q - v, w, h.wnext),
                  (v -= w),
                  v
                    ? (J.arraySet(h.window, m, q - v, v, 0),
                      (h.wnext = v),
                      (h.whave = h.wsize))
                    : ((h.wnext += w),
                      h.wnext === h.wsize && (h.wnext = 0),
                      h.whave < h.wsize && (h.whave += w))),
              0
            );
          }
          var q,
            K,
            J = v('../utils/common'),
            Ga = v('./adler32'),
            pa = v('./crc32'),
            Fb = v('./inffast'),
            Gb = v('./inftrees'),
            Lb = 0,
            Va = -2,
            ka = 1,
            va = 852,
            ra = 592,
            Ob = !0;
          H.inflateReset = w;
          H.inflateReset2 = ea;
          H.inflateResetKeep = ha;
          H.inflateInit = function (h) {
            return m(h, 15);
          };
          H.inflateInit2 = m;
          H.inflate = function (m, v) {
            var w,
              D,
              H,
              T,
              ba,
              ca,
              ha,
              ea = 0,
              xa = new J.Buf8(4),
              M = [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];
            if (!m || !m.state || !m.output || (!m.input && 0 !== m.avail_in))
              return Va;
            var F = m.state;
            12 === F.mode && (F.mode = 13);
            var ra = m.next_out;
            var za = m.output;
            var Da = m.avail_out;
            var La = m.next_in;
            var ua = m.input;
            var na = m.avail_in;
            var Y = F.hold;
            var N = F.bits;
            var G = na;
            var va = Da;
            var qb = Lb;
            a: for (;;)
              switch (F.mode) {
                case ka:
                  if (0 === F.wrap) {
                    F.mode = 13;
                    break;
                  }
                  for (; 16 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  if (2 & F.wrap && 35615 === Y) {
                    F.check = 0;
                    xa[0] = 255 & Y;
                    xa[1] = (Y >>> 8) & 255;
                    F.check = pa(F.check, xa, 2, 0);
                    N = Y = 0;
                    F.mode = 2;
                    break;
                  }
                  if (
                    ((F.flags = 0),
                    F.head && (F.head.done = !1),
                    !(1 & F.wrap) || (((255 & Y) << 8) + (Y >> 8)) % 31)
                  ) {
                    m.msg = 'incorrect header check';
                    F.mode = 30;
                    break;
                  }
                  if (8 !== (15 & Y)) {
                    m.msg = 'unknown compression method';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((Y >>>= 4), (N -= 4), (ca = (15 & Y) + 8), 0 === F.wbits)
                  )
                    F.wbits = ca;
                  else if (ca > F.wbits) {
                    m.msg = 'invalid window size';
                    F.mode = 30;
                    break;
                  }
                  F.dmax = 1 << ca;
                  m.adler = F.check = 1;
                  F.mode = 512 & Y ? 10 : 12;
                  N = Y = 0;
                  break;
                case 2:
                  for (; 16 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  if (((F.flags = Y), 8 !== (255 & F.flags))) {
                    m.msg = 'unknown compression method';
                    F.mode = 30;
                    break;
                  }
                  if (57344 & F.flags) {
                    m.msg = 'unknown header flags set';
                    F.mode = 30;
                    break;
                  }
                  F.head && (F.head.text = (Y >> 8) & 1);
                  512 & F.flags &&
                    ((xa[0] = 255 & Y),
                    (xa[1] = (Y >>> 8) & 255),
                    (F.check = pa(F.check, xa, 2, 0)));
                  N = Y = 0;
                  F.mode = 3;
                case 3:
                  for (; 32 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  F.head && (F.head.time = Y);
                  512 & F.flags &&
                    ((xa[0] = 255 & Y),
                    (xa[1] = (Y >>> 8) & 255),
                    (xa[2] = (Y >>> 16) & 255),
                    (xa[3] = (Y >>> 24) & 255),
                    (F.check = pa(F.check, xa, 4, 0)));
                  N = Y = 0;
                  F.mode = 4;
                case 4:
                  for (; 16 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  F.head && ((F.head.xflags = 255 & Y), (F.head.os = Y >> 8));
                  512 & F.flags &&
                    ((xa[0] = 255 & Y),
                    (xa[1] = (Y >>> 8) & 255),
                    (F.check = pa(F.check, xa, 2, 0)));
                  N = Y = 0;
                  F.mode = 5;
                case 5:
                  if (1024 & F.flags) {
                    for (; 16 > N; ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    F.length = Y;
                    F.head && (F.head.extra_len = Y);
                    512 & F.flags &&
                      ((xa[0] = 255 & Y),
                      (xa[1] = (Y >>> 8) & 255),
                      (F.check = pa(F.check, xa, 2, 0)));
                    N = Y = 0;
                  } else F.head && (F.head.extra = null);
                  F.mode = 6;
                case 6:
                  if (
                    1024 & F.flags &&
                    ((w = F.length),
                    w > na && (w = na),
                    w &&
                      (F.head &&
                        ((ca = F.head.extra_len - F.length),
                        F.head.extra ||
                          (F.head.extra = Array(F.head.extra_len)),
                        J.arraySet(F.head.extra, ua, La, w, ca)),
                      512 & F.flags && (F.check = pa(F.check, ua, w, La)),
                      (na -= w),
                      (La += w),
                      (F.length -= w)),
                    F.length)
                  )
                    break a;
                  F.length = 0;
                  F.mode = 7;
                case 7:
                  if (2048 & F.flags) {
                    if (0 === na) break a;
                    w = 0;
                    do
                      ((ca = ua[La + w++]),
                        F.head &&
                          ca &&
                          65536 > F.length &&
                          (F.head.name += String.fromCharCode(ca)));
                    while (ca && w < na);
                    if (
                      (512 & F.flags && (F.check = pa(F.check, ua, w, La)),
                      (na -= w),
                      (La += w),
                      ca)
                    )
                      break a;
                  } else F.head && (F.head.name = null);
                  F.length = 0;
                  F.mode = 8;
                case 8:
                  if (4096 & F.flags) {
                    if (0 === na) break a;
                    w = 0;
                    do
                      ((ca = ua[La + w++]),
                        F.head &&
                          ca &&
                          65536 > F.length &&
                          (F.head.comment += String.fromCharCode(ca)));
                    while (ca && w < na);
                    if (
                      (512 & F.flags && (F.check = pa(F.check, ua, w, La)),
                      (na -= w),
                      (La += w),
                      ca)
                    )
                      break a;
                  } else F.head && (F.head.comment = null);
                  F.mode = 9;
                case 9:
                  if (512 & F.flags) {
                    for (; 16 > N; ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    if (Y !== (65535 & F.check)) {
                      m.msg = 'header crc mismatch';
                      F.mode = 30;
                      break;
                    }
                    N = Y = 0;
                  }
                  F.head &&
                    ((F.head.hcrc = (F.flags >> 9) & 1), (F.head.done = !0));
                  m.adler = F.check = 0;
                  F.mode = 12;
                  break;
                case 10:
                  for (; 32 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  m.adler = F.check = A(Y);
                  N = Y = 0;
                  F.mode = 11;
                case 11:
                  if (0 === F.havedict)
                    return (
                      (m.next_out = ra),
                      (m.avail_out = Da),
                      (m.next_in = La),
                      (m.avail_in = na),
                      (F.hold = Y),
                      (F.bits = N),
                      2
                    );
                  m.adler = F.check = 1;
                  F.mode = 12;
                case 12:
                  if (5 === v || 6 === v) break a;
                case 13:
                  if (F.last) {
                    Y >>>= 7 & N;
                    N -= 7 & N;
                    F.mode = 27;
                    break;
                  }
                  for (; 3 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  switch (((F.last = 1 & Y), (Y >>>= 1), --N, 3 & Y)) {
                    case 0:
                      F.mode = 14;
                      break;
                    case 1:
                      var R = F;
                      if (Ob) {
                        q = new J.Buf32(512);
                        K = new J.Buf32(32);
                        for (H = 0; 144 > H; ) R.lens[H++] = 8;
                        for (; 256 > H; ) R.lens[H++] = 9;
                        for (; 280 > H; ) R.lens[H++] = 7;
                        for (; 288 > H; ) R.lens[H++] = 8;
                        Gb(1, R.lens, 0, 288, q, 0, R.work, { bits: 9 });
                        for (H = 0; 32 > H; ) R.lens[H++] = 5;
                        Gb(2, R.lens, 0, 32, K, 0, R.work, { bits: 5 });
                        Ob = !1;
                      }
                      R.lencode = q;
                      R.lenbits = 9;
                      R.distcode = K;
                      R.distbits = 5;
                      if (((F.mode = 20), 6 === v)) {
                        Y >>>= 2;
                        N -= 2;
                        break a;
                      }
                      break;
                    case 2:
                      F.mode = 17;
                      break;
                    case 3:
                      ((m.msg = 'invalid block type'), (F.mode = 30));
                  }
                  Y >>>= 2;
                  N -= 2;
                  break;
                case 14:
                  Y >>>= 7 & N;
                  for (N -= 7 & N; 32 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  if ((65535 & Y) !== ((Y >>> 16) ^ 65535)) {
                    m.msg = 'invalid stored block lengths';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((F.length = 65535 & Y),
                    (Y = 0),
                    (N = 0),
                    (F.mode = 15),
                    6 === v)
                  )
                    break a;
                case 15:
                  F.mode = 16;
                case 16:
                  if ((w = F.length)) {
                    if ((w > na && (w = na), w > Da && (w = Da), 0 === w))
                      break a;
                    J.arraySet(za, ua, La, w, ra);
                    na -= w;
                    La += w;
                    Da -= w;
                    ra += w;
                    F.length -= w;
                    break;
                  }
                  F.mode = 12;
                  break;
                case 17:
                  for (; 14 > N; ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  if (
                    ((F.nlen = (31 & Y) + 257),
                    (Y >>>= 5),
                    (N -= 5),
                    (F.ndist = (31 & Y) + 1),
                    (Y >>>= 5),
                    (N -= 5),
                    (F.ncode = (15 & Y) + 4),
                    (Y >>>= 4),
                    (N -= 4),
                    286 < F.nlen || 30 < F.ndist)
                  ) {
                    m.msg = 'too many length or distance symbols';
                    F.mode = 30;
                    break;
                  }
                  F.have = 0;
                  F.mode = 18;
                case 18:
                  for (; F.have < F.ncode; ) {
                    for (; 3 > N; ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    F.lens[M[F.have++]] = 7 & Y;
                    Y >>>= 3;
                    N -= 3;
                  }
                  for (; 19 > F.have; ) F.lens[M[F.have++]] = 0;
                  if (
                    ((F.lencode = F.lendyn),
                    (F.lenbits = 7),
                    (ha = { bits: F.lenbits }),
                    (qb = Gb(0, F.lens, 0, 19, F.lencode, 0, F.work, ha)),
                    (F.lenbits = ha.bits),
                    qb)
                  ) {
                    m.msg = 'invalid code lengths set';
                    F.mode = 30;
                    break;
                  }
                  F.have = 0;
                  F.mode = 19;
                case 19:
                  for (; F.have < F.nlen + F.ndist; ) {
                    for (
                      ;
                      (ea = F.lencode[Y & ((1 << F.lenbits) - 1)]),
                        (T = ea >>> 24),
                        (R = 65535 & ea),
                        !(T <= N);

                    ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    if (16 > R) ((Y >>>= T), (N -= T), (F.lens[F.have++] = R));
                    else {
                      if (16 === R) {
                        for (H = T + 2; N < H; ) {
                          if (0 === na) break a;
                          na--;
                          Y += ua[La++] << N;
                          N += 8;
                        }
                        if (((Y >>>= T), (N -= T), 0 === F.have)) {
                          m.msg = 'invalid bit length repeat';
                          F.mode = 30;
                          break;
                        }
                        ca = F.lens[F.have - 1];
                        w = 3 + (3 & Y);
                        Y >>>= 2;
                        N -= 2;
                      } else if (17 === R) {
                        for (H = T + 3; N < H; ) {
                          if (0 === na) break a;
                          na--;
                          Y += ua[La++] << N;
                          N += 8;
                        }
                        Y >>>= T;
                        N -= T;
                        ca = 0;
                        w = 3 + (7 & Y);
                        Y >>>= 3;
                        N -= 3;
                      } else {
                        for (H = T + 7; N < H; ) {
                          if (0 === na) break a;
                          na--;
                          Y += ua[La++] << N;
                          N += 8;
                        }
                        Y >>>= T;
                        N -= T;
                        ca = 0;
                        w = 11 + (127 & Y);
                        Y >>>= 7;
                        N -= 7;
                      }
                      if (F.have + w > F.nlen + F.ndist) {
                        m.msg = 'invalid bit length repeat';
                        F.mode = 30;
                        break;
                      }
                      for (; w--; ) F.lens[F.have++] = ca;
                    }
                  }
                  if (30 === F.mode) break;
                  if (0 === F.lens[256]) {
                    m.msg = 'invalid code -- missing end-of-block';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((F.lenbits = 9),
                    (ha = { bits: F.lenbits }),
                    (qb = Gb(1, F.lens, 0, F.nlen, F.lencode, 0, F.work, ha)),
                    (F.lenbits = ha.bits),
                    qb)
                  ) {
                    m.msg = 'invalid literal/lengths set';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((F.distbits = 6),
                    (F.distcode = F.distdyn),
                    (ha = { bits: F.distbits }),
                    (qb = Gb(
                      2,
                      F.lens,
                      F.nlen,
                      F.ndist,
                      F.distcode,
                      0,
                      F.work,
                      ha,
                    )),
                    (F.distbits = ha.bits),
                    qb)
                  ) {
                    m.msg = 'invalid distances set';
                    F.mode = 30;
                    break;
                  }
                  if (((F.mode = 20), 6 === v)) break a;
                case 20:
                  F.mode = 21;
                case 21:
                  if (6 <= na && 258 <= Da) {
                    m.next_out = ra;
                    m.avail_out = Da;
                    m.next_in = La;
                    m.avail_in = na;
                    F.hold = Y;
                    F.bits = N;
                    Fb(m, va);
                    ra = m.next_out;
                    za = m.output;
                    Da = m.avail_out;
                    La = m.next_in;
                    ua = m.input;
                    na = m.avail_in;
                    Y = F.hold;
                    N = F.bits;
                    12 === F.mode && (F.back = -1);
                    break;
                  }
                  for (
                    F.back = 0;
                    (ea = F.lencode[Y & ((1 << F.lenbits) - 1)]),
                      (T = ea >>> 24),
                      (H = (ea >>> 16) & 255),
                      (R = 65535 & ea),
                      !(T <= N);

                  ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  if (H && 0 === (240 & H)) {
                    var C = T;
                    var ib = H;
                    for (
                      ba = R;
                      (ea = F.lencode[ba + ((Y & ((1 << (C + ib)) - 1)) >> C)]),
                        (T = ea >>> 24),
                        (H = (ea >>> 16) & 255),
                        (R = 65535 & ea),
                        !(C + T <= N);

                    ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    Y >>>= C;
                    N -= C;
                    F.back += C;
                  }
                  if (
                    ((Y >>>= T),
                    (N -= T),
                    (F.back += T),
                    (F.length = R),
                    0 === H)
                  ) {
                    F.mode = 26;
                    break;
                  }
                  if (32 & H) {
                    F.back = -1;
                    F.mode = 12;
                    break;
                  }
                  if (64 & H) {
                    m.msg = 'invalid literal/length code';
                    F.mode = 30;
                    break;
                  }
                  F.extra = 15 & H;
                  F.mode = 22;
                case 22:
                  if (F.extra) {
                    for (H = F.extra; N < H; ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    F.length += Y & ((1 << F.extra) - 1);
                    Y >>>= F.extra;
                    N -= F.extra;
                    F.back += F.extra;
                  }
                  F.was = F.length;
                  F.mode = 23;
                case 23:
                  for (
                    ;
                    (ea = F.distcode[Y & ((1 << F.distbits) - 1)]),
                      (T = ea >>> 24),
                      (H = (ea >>> 16) & 255),
                      (R = 65535 & ea),
                      !(T <= N);

                  ) {
                    if (0 === na) break a;
                    na--;
                    Y += ua[La++] << N;
                    N += 8;
                  }
                  if (0 === (240 & H)) {
                    C = T;
                    ib = H;
                    for (
                      ba = R;
                      (ea =
                        F.distcode[ba + ((Y & ((1 << (C + ib)) - 1)) >> C)]),
                        (T = ea >>> 24),
                        (H = (ea >>> 16) & 255),
                        (R = 65535 & ea),
                        !(C + T <= N);

                    ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    Y >>>= C;
                    N -= C;
                    F.back += C;
                  }
                  if (((Y >>>= T), (N -= T), (F.back += T), 64 & H)) {
                    m.msg = 'invalid distance code';
                    F.mode = 30;
                    break;
                  }
                  F.offset = R;
                  F.extra = 15 & H;
                  F.mode = 24;
                case 24:
                  if (F.extra) {
                    for (H = F.extra; N < H; ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    F.offset += Y & ((1 << F.extra) - 1);
                    Y >>>= F.extra;
                    N -= F.extra;
                    F.back += F.extra;
                  }
                  if (F.offset > F.dmax) {
                    m.msg = 'invalid distance too far back';
                    F.mode = 30;
                    break;
                  }
                  F.mode = 25;
                case 25:
                  if (0 === Da) break a;
                  if (((w = va - Da), F.offset > w)) {
                    if (((w = F.offset - w), w > F.whave && F.sane)) {
                      m.msg = 'invalid distance too far back';
                      F.mode = 30;
                      break;
                    }
                    w > F.wnext
                      ? ((w -= F.wnext), (D = F.wsize - w))
                      : (D = F.wnext - w);
                    w > F.length && (w = F.length);
                    H = F.window;
                  } else ((H = za), (D = ra - F.offset), (w = F.length));
                  w > Da && (w = Da);
                  Da -= w;
                  F.length -= w;
                  do za[ra++] = H[D++];
                  while (--w);
                  0 === F.length && (F.mode = 21);
                  break;
                case 26:
                  if (0 === Da) break a;
                  za[ra++] = F.length;
                  Da--;
                  F.mode = 21;
                  break;
                case 27:
                  if (F.wrap) {
                    for (; 32 > N; ) {
                      if (0 === na) break a;
                      na--;
                      Y |= ua[La++] << N;
                      N += 8;
                    }
                    if (
                      ((va -= Da),
                      (m.total_out += va),
                      (F.total += va),
                      va &&
                        (m.adler = F.check =
                          F.flags
                            ? pa(F.check, za, va, ra - va)
                            : Ga(F.check, za, va, ra - va)),
                      (va = Da),
                      (F.flags ? Y : A(Y)) !== F.check)
                    ) {
                      m.msg = 'incorrect data check';
                      F.mode = 30;
                      break;
                    }
                    N = Y = 0;
                  }
                  F.mode = 28;
                case 28:
                  if (F.wrap && F.flags) {
                    for (; 32 > N; ) {
                      if (0 === na) break a;
                      na--;
                      Y += ua[La++] << N;
                      N += 8;
                    }
                    if (Y !== (4294967295 & F.total)) {
                      m.msg = 'incorrect length check';
                      F.mode = 30;
                      break;
                    }
                    N = Y = 0;
                  }
                  F.mode = 29;
                case 29:
                  qb = 1;
                  break a;
                case 30:
                  qb = -3;
                  break a;
                case 31:
                  return -4;
                default:
                  return Va;
              }
            return (
              (m.next_out = ra),
              (m.avail_out = Da),
              (m.next_in = La),
              (m.avail_in = na),
              (F.hold = Y),
              (F.bits = N),
              (F.wsize ||
                (va !== m.avail_out &&
                  30 > F.mode &&
                  (27 > F.mode || 4 !== v))) &&
              h(m, m.output, m.next_out, va - m.avail_out)
                ? ((F.mode = 31), -4)
                : ((G -= m.avail_in),
                  (va -= m.avail_out),
                  (m.total_in += G),
                  (m.total_out += va),
                  (F.total += va),
                  F.wrap &&
                    va &&
                    (m.adler = F.check =
                      F.flags
                        ? pa(F.check, za, va, m.next_out - va)
                        : Ga(F.check, za, va, m.next_out - va)),
                  (m.data_type =
                    F.bits +
                    (F.last ? 64 : 0) +
                    (12 === F.mode ? 128 : 0) +
                    (20 === F.mode || 15 === F.mode ? 256 : 0)),
                  ((0 === G && 0 === va) || 4 === v) && qb === Lb && (qb = -5),
                  qb)
            );
          };
          H.inflateEnd = function (h) {
            if (!h || !h.state) return Va;
            var m = h.state;
            return (m.window && (m.window = null), (h.state = null), Lb);
          };
          H.inflateGetHeader = function (h, m) {
            var q;
            return h && h.state
              ? ((q = h.state),
                0 === (2 & q.wrap) ? Va : ((q.head = m), (m.done = !1), Lb))
              : Va;
          };
          H.inflateSetDictionary = function (m, q) {
            var v,
              w,
              A = q.length;
            return m && m.state
              ? ((v = m.state),
                0 !== v.wrap && 11 !== v.mode
                  ? Va
                  : 11 === v.mode &&
                      ((w = 1), (w = Ga(w, q, A, 0)), w !== v.check)
                    ? -3
                    : h(m, q, A, A)
                      ? ((v.mode = 31), -4)
                      : ((v.havedict = 1), Lb))
              : Va;
          };
          H.inflateInfo = 'pako inflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './inffast': 10,
          './inftrees': 12,
        },
      ],
      12: [
        function (v, D, H) {
          var A = v('../utils/common'),
            T = [
              3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43,
              51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
            ],
            ha = [
              16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
              19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
            ],
            w = [
              1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257,
              385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289,
              16385, 24577, 0, 0,
            ],
            ea = [
              16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
              23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
            ];
          D.exports = function (m, h, q, v, D, H, pa, Fb) {
            var J,
              K,
              Va,
              ka,
              va,
              ra,
              Ga = Fb.bits,
              ca,
              za,
              Ba,
              da,
              wa,
              hb = 0,
              ba,
              db = null,
              cc = 0,
              qc = new A.Buf16(16);
            var xa = new A.Buf16(16);
            var M = null,
              F = 0;
            for (ca = 0; 15 >= ca; ca++) qc[ca] = 0;
            for (za = 0; za < v; za++) qc[h[q + za]]++;
            var bb = Ga;
            for (Ba = 15; 1 <= Ba && 0 === qc[Ba]; Ba--);
            if ((bb > Ba && (bb = Ba), 0 === Ba))
              return (
                (D[H++] = 20971520),
                (D[H++] = 20971520),
                (Fb.bits = 1),
                0
              );
            for (Ga = 1; Ga < Ba && 0 === qc[Ga]; Ga++);
            bb < Ga && (bb = Ga);
            for (ca = J = 1; 15 >= ca; ca++)
              if (((J <<= 1), (J -= qc[ca]), 0 > J)) return -1;
            if (0 < J && (0 === m || 1 !== Ba)) return -1;
            xa[1] = 0;
            for (ca = 1; 15 > ca; ca++) xa[ca + 1] = xa[ca] + qc[ca];
            for (za = 0; za < v; za++)
              0 !== h[q + za] && (pa[xa[h[q + za]]++] = za);
            if (
              (0 === m
                ? ((db = M = pa), (ka = 19))
                : 1 === m
                  ? ((db = T), (cc -= 257), (M = ha), (F -= 257), (ka = 256))
                  : ((db = w), (M = ea), (ka = -1)),
              (ba = 0),
              (za = 0),
              (ca = Ga),
              (xa = H),
              (da = bb),
              (wa = 0),
              (Va = -1),
              (hb = 1 << bb),
              (v = hb - 1),
              (1 === m && 852 < hb) || (2 === m && 592 < hb))
            )
              return 1;
            for (var Bb = 0; ; ) {
              Bb++;
              var Da = ca - wa;
              pa[za] < ka
                ? ((va = 0), (ra = pa[za]))
                : pa[za] > ka
                  ? ((va = M[F + pa[za]]), (ra = db[cc + pa[za]]))
                  : ((va = 96), (ra = 0));
              J = 1 << (ca - wa);
              Ga = K = 1 << da;
              do
                ((K -= J),
                  (D[xa + (ba >> wa) + K] = (Da << 24) | (va << 16) | ra | 0));
              while (0 !== K);
              for (J = 1 << (ca - 1); ba & J; ) J >>= 1;
              if (
                (0 !== J ? ((ba &= J - 1), (ba += J)) : (ba = 0),
                za++,
                0 === --qc[ca])
              ) {
                if (ca === Ba) break;
                ca = h[q + pa[za]];
              }
              if (ca > bb && (ba & v) !== Va) {
                0 === wa && (wa = bb);
                xa += Ga;
                da = ca - wa;
                for (
                  J = 1 << da;
                  da + wa < Ba && ((J -= qc[da + wa]), !(0 >= J));

                )
                  (da++, (J <<= 1));
                if (
                  ((hb += 1 << da),
                  (1 === m && 852 < hb) || (2 === m && 592 < hb))
                )
                  return 1;
                Va = ba & v;
                D[Va] = (bb << 24) | (da << 16) | (xa - H) | 0;
              }
            }
            return (
              0 !== ba && (D[xa + ba] = ((ca - wa) << 24) | 4194304),
              (Fb.bits = bb),
              0
            );
          };
        },
        { '../utils/common': 3 },
      ],
      13: [
        function (v, D, H) {
          D.exports = {
            2: 'need dictionary',
            1: 'stream end',
            0: '',
            '-1': 'file error',
            '-2': 'stream error',
            '-3': 'data error',
            '-4': 'insufficient memory',
            '-5': 'buffer error',
            '-6': 'incompatible version',
          };
        },
        {},
      ],
      14: [
        function (v, D, H) {
          function A(h) {
            for (var m = h.length; 0 <= --m; ) h[m] = 0;
          }
          function T(h, m, q, v, w) {
            this.static_tree = h;
            this.extra_bits = m;
            this.extra_base = q;
            this.elems = v;
            this.max_length = w;
            this.has_stree = h && h.length;
          }
          function ha(h, m) {
            this.dyn_tree = h;
            this.max_code = 0;
            this.stat_desc = m;
          }
          function w(h, m) {
            h.pending_buf[h.pending++] = 255 & m;
            h.pending_buf[h.pending++] = (m >>> 8) & 255;
          }
          function ea(h, m, q) {
            h.bi_valid > cc - q
              ? ((h.bi_buf |= (m << h.bi_valid) & 65535),
                w(h, h.bi_buf),
                (h.bi_buf = m >> (cc - h.bi_valid)),
                (h.bi_valid += q - cc))
              : ((h.bi_buf |= (m << h.bi_valid) & 65535), (h.bi_valid += q));
          }
          function m(h, m, q) {
            ea(h, q[2 * m], q[2 * m + 1]);
          }
          function h(h, m) {
            var q = 0;
            do ((q |= 1 & h), (h >>>= 1), (q <<= 1));
            while (0 < --m);
            return q >>> 1;
          }
          function q(m, q, v) {
            var w,
              y = Array(db + 1),
              z = 0;
            for (w = 1; w <= db; w++) y[w] = z = (z + v[w - 1]) << 1;
            for (v = 0; v <= q; v++)
              ((w = m[2 * v + 1]), 0 !== w && (m[2 * v] = h(y[w]++, w)));
          }
          function K(h) {
            var m;
            for (m = 0; m < da; m++) h.dyn_ltree[2 * m] = 0;
            for (m = 0; m < wa; m++) h.dyn_dtree[2 * m] = 0;
            for (m = 0; m < hb; m++) h.bl_tree[2 * m] = 0;
            h.dyn_ltree[2 * qc] = 1;
            h.opt_len = h.static_len = 0;
            h.last_lit = h.matches = 0;
          }
          function J(h) {
            8 < h.bi_valid
              ? w(h, h.bi_buf)
              : 0 < h.bi_valid && (h.pending_buf[h.pending++] = h.bi_buf);
            h.bi_buf = 0;
            h.bi_valid = 0;
          }
          function Ga(h, m, q, v) {
            var w = 2 * m,
              y = 2 * q;
            return h[w] < h[y] || (h[w] === h[y] && v[m] <= v[q]);
          }
          function pa(h, m, q) {
            for (
              var v = h.heap[q], w = q << 1;
              w <= h.heap_len &&
              (w < h.heap_len &&
                Ga(m, h.heap[w + 1], h.heap[w], h.depth) &&
                w++,
              !Ga(m, v, h.heap[w], h.depth));

            )
              ((h.heap[q] = h.heap[w]), (q = w), (w <<= 1));
            h.heap[q] = v;
          }
          function Fb(h, q, v) {
            var w,
              y,
              z = 0;
            if (0 !== h.last_lit) {
              do {
                var A =
                  (h.pending_buf[h.d_buf + 2 * z] << 8) |
                  h.pending_buf[h.d_buf + 2 * z + 1];
                var C = h.pending_buf[h.l_buf + z];
                z++;
                0 === A
                  ? m(h, C, q)
                  : ((w = N[C]),
                    m(h, w + Ba + 1, q),
                    (y = bb[w]),
                    0 !== y && ((C -= G[w]), ea(h, C, y)),
                    A--,
                    (w = 256 > A ? Y[A] : Y[256 + (A >>> 7)]),
                    m(h, w, v),
                    (y = Bb[w]),
                    0 !== y && ((A -= Jc[w]), ea(h, A, y)));
              } while (z < h.last_lit);
            }
            m(h, qc, q);
          }
          function Gb(h, m) {
            var v,
              w = m.dyn_tree;
            var y = m.stat_desc.static_tree;
            var z = m.stat_desc.has_stree,
              A = m.stat_desc.elems,
              C = -1;
            h.heap_len = 0;
            h.heap_max = ba;
            for (v = 0; v < A; v++)
              0 !== w[2 * v]
                ? ((h.heap[++h.heap_len] = C = v), (h.depth[v] = 0))
                : (w[2 * v + 1] = 0);
            for (; 2 > h.heap_len; ) {
              var D = (h.heap[++h.heap_len] = 2 > C ? ++C : 0);
              w[2 * D] = 1;
              h.depth[D] = 0;
              h.opt_len--;
              z && (h.static_len -= y[2 * D + 1]);
            }
            m.max_code = C;
            for (v = h.heap_len >> 1; 1 <= v; v--) pa(h, w, v);
            D = A;
            do
              ((v = h.heap[1]),
                (h.heap[1] = h.heap[h.heap_len--]),
                pa(h, w, 1),
                (y = h.heap[1]),
                (h.heap[--h.heap_max] = v),
                (h.heap[--h.heap_max] = y),
                (w[2 * D] = w[2 * v] + w[2 * y]),
                (h.depth[D] =
                  (h.depth[v] >= h.depth[y] ? h.depth[v] : h.depth[y]) + 1),
                (w[2 * v + 1] = w[2 * y + 1] = D),
                (h.heap[1] = D++),
                pa(h, w, 1));
            while (2 <= h.heap_len);
            h.heap[--h.heap_max] = h.heap[1];
            var F, G;
            v = m.dyn_tree;
            D = m.max_code;
            A = m.stat_desc.static_tree;
            var H = m.stat_desc.has_stree,
              J = m.stat_desc.extra_bits,
              K = m.stat_desc.extra_base,
              M = m.stat_desc.max_length,
              N = 0;
            for (z = 0; z <= db; z++) h.bl_count[z] = 0;
            v[2 * h.heap[h.heap_max] + 1] = 0;
            for (m = h.heap_max + 1; m < ba; m++)
              ((y = h.heap[m]),
                (z = v[2 * v[2 * y + 1] + 1] + 1),
                z > M && ((z = M), N++),
                (v[2 * y + 1] = z),
                y > D ||
                  (h.bl_count[z]++,
                  (F = 0),
                  y >= K && (F = J[y - K]),
                  (G = v[2 * y]),
                  (h.opt_len += G * (z + F)),
                  H && (h.static_len += G * (A[2 * y + 1] + F))));
            if (0 !== N) {
              do {
                for (z = M - 1; 0 === h.bl_count[z]; ) z--;
                h.bl_count[z]--;
                h.bl_count[z + 1] += 2;
                h.bl_count[M]--;
                N -= 2;
              } while (0 < N);
              for (z = M; 0 !== z; z--)
                for (y = h.bl_count[z]; 0 !== y; )
                  ((F = h.heap[--m]),
                    F > D ||
                      (v[2 * F + 1] !== z &&
                        ((h.opt_len += (z - v[2 * F + 1]) * v[2 * F]),
                        (v[2 * F + 1] = z)),
                      y--));
            }
            q(w, C, h.bl_count);
          }
          function Lb(h, m, q) {
            var v,
              w = -1,
              y = m[1],
              z = 0,
              A = 7,
              C = 4;
            0 === y && ((A = 138), (C = 3));
            m[2 * (q + 1) + 1] = 65535;
            for (v = 0; v <= q; v++) {
              var D = y;
              y = m[2 * (v + 1) + 1];
              (++z < A && D === y) ||
                (z < C
                  ? (h.bl_tree[2 * D] += z)
                  : 0 !== D
                    ? (D !== w && h.bl_tree[2 * D]++, h.bl_tree[2 * xa]++)
                    : 10 >= z
                      ? h.bl_tree[2 * M]++
                      : h.bl_tree[2 * F]++,
                (z = 0),
                (w = D),
                0 === y
                  ? ((A = 138), (C = 3))
                  : D === y
                    ? ((A = 6), (C = 3))
                    : ((A = 7), (C = 4)));
            }
          }
          function Va(h, q, v) {
            var w,
              y,
              z = -1,
              A = q[1],
              C = 0,
              D = 7,
              G = 4;
            0 === A && ((D = 138), (G = 3));
            for (w = 0; w <= v; w++)
              if (((y = A), (A = q[2 * (w + 1) + 1]), !(++C < D && y === A))) {
                if (C < G) {
                  do m(h, y, h.bl_tree);
                  while (0 !== --C);
                } else
                  0 !== y
                    ? (y !== z && (m(h, y, h.bl_tree), C--),
                      m(h, xa, h.bl_tree),
                      ea(h, C - 3, 2))
                    : 10 >= C
                      ? (m(h, M, h.bl_tree), ea(h, C - 3, 3))
                      : (m(h, F, h.bl_tree), ea(h, C - 11, 7));
                C = 0;
                z = y;
                0 === A
                  ? ((D = 138), (G = 3))
                  : y === A
                    ? ((D = 6), (G = 3))
                    : ((D = 7), (G = 4));
              }
          }
          function ka(h) {
            var m,
              q = 4093624447;
            for (m = 0; 31 >= m; m++, q >>>= 1)
              if (1 & q && 0 !== h.dyn_ltree[2 * m]) return Ob;
            if (
              0 !== h.dyn_ltree[18] ||
              0 !== h.dyn_ltree[20] ||
              0 !== h.dyn_ltree[26]
            )
              return ca;
            for (m = 32; m < Ba; m++) if (0 !== h.dyn_ltree[2 * m]) return ca;
            return Ob;
          }
          function va(h, m, q, v) {
            ea(h, (za << 1) + (v ? 1 : 0), 3);
            J(h);
            w(h, q);
            w(h, ~q);
            ra.arraySet(h.pending_buf, h.window, m, q, h.pending);
            h.pending += q;
          }
          var ra = v('../utils/common'),
            Ob = 0,
            ca = 1,
            za = 0,
            Ba = 256,
            da = Ba + 1 + 29,
            wa = 30,
            hb = 19,
            ba = 2 * da + 1,
            db = 15,
            cc = 16,
            qc = 256,
            xa = 16,
            M = 17,
            F = 18,
            bb = [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ],
            Bb = [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ],
            Da = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
            La = [
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ],
            ua = Array(2 * (da + 2));
          A(ua);
          var na = Array(2 * wa);
          A(na);
          var Y = Array(512);
          A(Y);
          var N = Array(256);
          A(N);
          var G = Array(29);
          A(G);
          var Jc = Array(wa);
          A(Jc);
          var qb,
            R,
            C,
            ib = !1;
          H._tr_init = function (m) {
            if (!ib) {
              var v,
                w,
                z,
                A = Array(db + 1);
              for (z = w = 0; 28 > z; z++)
                for (G[z] = w, v = 0; v < 1 << bb[z]; v++) N[w++] = z;
              N[w - 1] = z;
              for (z = w = 0; 16 > z; z++)
                for (Jc[z] = w, v = 0; v < 1 << Bb[z]; v++) Y[w++] = z;
              for (w >>= 7; z < wa; z++)
                for (Jc[z] = w << 7, v = 0; v < 1 << (Bb[z] - 7); v++)
                  Y[256 + w++] = z;
              for (v = 0; v <= db; v++) A[v] = 0;
              for (v = 0; 143 >= v; ) ((ua[2 * v + 1] = 8), v++, A[8]++);
              for (; 255 >= v; ) ((ua[2 * v + 1] = 9), v++, A[9]++);
              for (; 279 >= v; ) ((ua[2 * v + 1] = 7), v++, A[7]++);
              for (; 287 >= v; ) ((ua[2 * v + 1] = 8), v++, A[8]++);
              q(ua, da + 1, A);
              for (v = 0; v < wa; v++)
                ((na[2 * v + 1] = 5), (na[2 * v] = h(v, 5)));
              qb = new T(ua, bb, Ba + 1, da, db);
              R = new T(na, Bb, 0, wa, db);
              C = new T([], Da, 0, hb, 7);
              ib = !0;
            }
            m.l_desc = new ha(m.dyn_ltree, qb);
            m.d_desc = new ha(m.dyn_dtree, R);
            m.bl_desc = new ha(m.bl_tree, C);
            m.bi_buf = 0;
            m.bi_valid = 0;
            K(m);
          };
          H._tr_stored_block = va;
          H._tr_flush_block = function (h, m, q, v) {
            var w = 0;
            if (0 < h.level) {
              2 === h.strm.data_type && (h.strm.data_type = ka(h));
              Gb(h, h.l_desc);
              Gb(h, h.d_desc);
              Lb(h, h.dyn_ltree, h.l_desc.max_code);
              Lb(h, h.dyn_dtree, h.d_desc.max_code);
              Gb(h, h.bl_desc);
              for (w = hb - 1; 3 <= w && 0 === h.bl_tree[2 * La[w] + 1]; w--);
              w = ((h.opt_len += 3 * (w + 1) + 14), w);
              var y = (h.opt_len + 3 + 7) >>> 3;
              var A = (h.static_len + 3 + 7) >>> 3;
              A <= y && (y = A);
            } else y = A = q + 5;
            if (q + 4 <= y && -1 !== m) va(h, m, q, v);
            else if (4 === h.strategy || A === y)
              (ea(h, 2 + (v ? 1 : 0), 3), Fb(h, ua, na));
            else {
              ea(h, 4 + (v ? 1 : 0), 3);
              m = h.l_desc.max_code + 1;
              q = h.d_desc.max_code + 1;
              w += 1;
              ea(h, m - 257, 5);
              ea(h, q - 1, 5);
              ea(h, w - 4, 4);
              for (y = 0; y < w; y++) ea(h, h.bl_tree[2 * La[y] + 1], 3);
              Va(h, h.dyn_ltree, m - 1);
              Va(h, h.dyn_dtree, q - 1);
              Fb(h, h.dyn_ltree, h.dyn_dtree);
            }
            K(h);
            v && J(h);
          };
          H._tr_tally = function (h, m, q) {
            return (
              (h.pending_buf[h.d_buf + 2 * h.last_lit] = (m >>> 8) & 255),
              (h.pending_buf[h.d_buf + 2 * h.last_lit + 1] = 255 & m),
              (h.pending_buf[h.l_buf + h.last_lit] = 255 & q),
              h.last_lit++,
              0 === m
                ? h.dyn_ltree[2 * q]++
                : (h.matches++,
                  m--,
                  h.dyn_ltree[2 * (N[q] + Ba + 1)]++,
                  h.dyn_dtree[2 * (256 > m ? Y[m] : Y[256 + (m >>> 7)])]++),
              h.last_lit === h.lit_bufsize - 1
            );
          };
          H._tr_align = function (h) {
            ea(h, 2, 3);
            m(h, qc, ua);
            16 === h.bi_valid
              ? (w(h, h.bi_buf), (h.bi_buf = 0), (h.bi_valid = 0))
              : 8 <= h.bi_valid &&
                ((h.pending_buf[h.pending++] = 255 & h.bi_buf),
                (h.bi_buf >>= 8),
                (h.bi_valid -= 8));
          };
        },
        { '../utils/common': 3 },
      ],
      15: [
        function (v, D, H) {
          D.exports = function () {
            this.input = null;
            this.total_in = this.avail_in = this.next_in = 0;
            this.output = null;
            this.total_out = this.avail_out = this.next_out = 0;
            this.msg = '';
            this.state = null;
            this.data_type = 2;
            this.adler = 0;
          };
        },
        {},
      ],
      '/': [
        function (v, D, H) {
          H = v('./lib/utils/common').assign;
          var A = v('./lib/deflate'),
            T = v('./lib/inflate');
          v = v('./lib/zlib/constants');
          var ha = {};
          H(ha, A, T, v);
          D.exports = ha;
        },
        {
          './lib/deflate': 1,
          './lib/inflate': 2,
          './lib/utils/common': 3,
          './lib/zlib/constants': 6,
        },
      ],
    },
    {},
    [],
  )('/');
});
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var e = (function () {
    function O(h) {
      var r = [];
      return ((r[h - 1] = void 0), r);
    }
    function v(h, m) {
      return A(h[0] + m[0], h[1] + m[1]);
    }
    function D(h, m) {
      var r = ha(h) & ha(m),
        q,
        E;
      return (
        (q =
          (~~Math.max(Math.min(h[1] / uc, 2147483647), -2147483648) &
            ~~Math.max(Math.min(m[1] / uc, 2147483647), -2147483648)) *
          uc),
        (E = r),
        0 > r && (E += uc),
        [E, q]
      );
    }
    function H(h, m) {
      var r, q;
      return h[0] == m[0] && h[1] == m[1]
        ? 0
        : ((r = 0 > h[1]),
          (q = 0 > m[1]),
          r && !q
            ? -1
            : !r && q
              ? 1
              : 0 > A(h[0] - m[0], h[1] - m[1])[1]
                ? -1
                : 1);
    }
    function A(h, m) {
      m %= 1.8446744073709552e19;
      h %= 1.8446744073709552e19;
      var r = m % uc;
      var q = Math.floor(h / uc) * uc;
      m = m - r + q;
      for (h = h - q + r; 0 > h; ) ((h += uc), (m -= uc));
      for (; 4294967295 < h; ) ((h -= uc), (m += uc));
      for (m %= 1.8446744073709552e19; 0x7fffffff00000000 < m; )
        m -= 1.8446744073709552e19;
      for (; -9223372036854775808 > m; ) m += 1.8446744073709552e19;
      return [h, m];
    }
    function T(h) {
      return 0 <= h ? [h, 0] : [h + uc, -uc];
    }
    function ha(h) {
      return 2147483648 <= h[0]
        ? ~~Math.max(Math.min(h[0] - uc, 2147483647), -2147483648)
        : ~~Math.max(Math.min(h[0], 2147483647), -2147483648);
    }
    function w(h) {
      return 30 >= h ? 1 << h : w(30) * w(h - 30);
    }
    function ea(h, m) {
      var r, q, E, v;
      if (((m &= 63), h[0] == se[0] && h[1] == se[1])) return m ? Vc : h;
      if (0 > h[1]) throw Error('Neg');
      return (
        (v = w(m)),
        (q = (h[1] * v) % 1.8446744073709552e19),
        (E = h[0] * v),
        (r = E - (E % uc)),
        (q += r),
        (E -= r),
        0x7fffffffffffffff <= q && (q -= 1.8446744073709552e19),
        [E, q]
      );
    }
    function m(h, m) {
      var r;
      return ((m &= 63), (r = w(m)), A(Math.floor(h[0] / r), h[1] / r));
    }
    function h(h, m) {
      return ((h.Mc = m), (h.Lc = 0), (h.Yb = m.length), h);
    }
    function q(h) {
      return h.Lc >= h.Yb ? -1 : 255 & h.Mc[h.Lc++];
    }
    function K(h) {
      return ((h.Mc = O(32)), (h.Yb = 0), h);
    }
    function J(h) {
      var r = h.Mc;
      return ((r.length = h.Yb), r);
    }
    function Ga(h, m, q, v, w) {
      for (var r = 0; w > r; ++r) q[v + r] = h[m + r];
    }
    function pa(r, q, v) {
      r.Nb = K({});
      var E = h({}, q),
        w = r.Nb,
        y = T(q.length);
      if (0 > H(y, gb)) throw Error('invalid length ' + y);
      r.Tb = y;
      q = {};
      var P;
      q.v = O(4);
      q.a = [];
      q.d = {};
      q.C = O(192);
      q.bb = O(12);
      q.hb = O(12);
      q.Ub = O(12);
      q.vc = O(12);
      q._ = O(192);
      q.K = [];
      q.Sb = O(114);
      q.S = Jb({}, 4);
      q.$ = qb({});
      q.i = qb({});
      q.A = {};
      q.m = [];
      q.P = [];
      q.lb = [];
      q.nc = O(16);
      q.x = O(4);
      q.Q = O(4);
      q.Xb = [Vc];
      q.uc = [Vc];
      q.Kc = [0];
      q.fc = O(5);
      q.yc = O(128);
      q.vb = 0;
      q.X = 1;
      q.D = 0;
      q.Hb = -1;
      for (P = q.mb = 0; 4096 > P; ++P) q.a[P] = {};
      for (P = 0; 4 > P; ++P) q.K[P] = Jb({}, 6);
      P = 1 << v.s;
      q.ab = P;
      for (var A = 0; P > 1 << A; ++A);
      q.$b = 2 * A;
      q.n = v.f;
      P = q.X;
      q.X = v.m;
      q.b && P != q.X && ((q.wb = -1), (q.b = null));
      q.eb = 0;
      q.fb = 3;
      q.Y = 2;
      q.y = 3;
      q.Gc = void 0 === e.disableEndMark;
      q.fc[0] = ((9 * (5 * q.Y + q.eb) + q.fb) << 24) >> 24;
      for (v = 0; 4 > v; ++v) q.fc[1 + v] = ((q.ab >> (8 * v)) << 24) >> 24;
      Ga(q.fc, 0, w.Mc, w.Yb, 5);
      w.Yb += 5;
      for (v = 0; 64 > v; v += 8)
        ((P = 255 & ha(m(y, v))), (w.Mc[w.Yb++] = (P << 24) >> 24));
      q.W = 0;
      q.oc = E;
      q.pc = 0;
      q.b ||
        ((E = {}),
        (y = 4),
        q.X || (y = 2),
        (E.qb = 2 < y),
        E.qb
          ? ((E.w = 0), (E.xb = 4), (E.R = 66560))
          : ((E.w = 2), (E.xb = 3), (E.R = 0)),
        (q.b = E));
      E = q.A;
      y = q.eb;
      v = q.fb;
      if (null == E.V || E.u != v || E.I != y)
        for (
          E.I = y,
            E.qc = (1 << y) - 1,
            E.u = v,
            v = 1 << (E.u + E.I),
            E.V = O(v),
            y = 0;
          v > y;
          ++y
        ) {
          P = E.V;
          A = y;
          var C = {};
          C = ((C.tb = O(768)), C);
          P[A] = C;
        }
      if (q.ab != q.wb || q.Hb != q.n)
        ((E = q.b),
          (y = q.ab),
          (v = q.n),
          1073741567 > y &&
            ((E.Fc = 16 + (v >> 1)),
            (A = y + 4096),
            (P = v + 274),
            (E.Bc = A),
            (E._b = P),
            (A = A + P + (~~((y + 4096 + v + 274) / 2) + 256)),
            (null == E.c || E.Kb != A) &&
              ((E.c = null), (E.Kb = A), (E.c = O(E.Kb))),
            (E.H = E.Kb - P),
            (E.ob = v),
            (v = y + 1),
            E.p != v && (E.L = O(2 * (E.p = v))),
            (v = 65536),
            E.qb &&
              ((v = y - 1),
              (v |= v >> 1),
              (v |= v >> 2),
              (v |= v >> 4),
              (v |= v >> 8),
              (v >>= 1),
              (v |= 65535),
              16777216 < v && (v >>= 1),
              (E.Ec = v),
              ++v,
              (v += E.R)),
            v != E.rc && (E.ub = O((E.rc = v)))),
          (q.wb = q.ab),
          (q.Hb = q.n));
      q.d.Ab = w;
      q.l = 0;
      for (w = q.J = 0; 4 > w; ++w) q.v[w] = 0;
      w = q.d;
      w.mc = Vc;
      w.xc = Vc;
      w.E = -1;
      w.Jb = 1;
      w.Oc = 0;
      jb(q.C);
      jb(q._);
      jb(q.bb);
      jb(q.hb);
      jb(q.Ub);
      jb(q.vc);
      jb(q.Sb);
      w = q.A;
      y = 1 << (w.u + w.I);
      for (E = 0; y > E; ++E) jb(w.V[E].tb);
      for (w = 0; 4 > w; ++w) jb(q.K[w].G);
      N(q.$, 1 << q.Y);
      N(q.i, 1 << q.Y);
      jb(q.S.G);
      q.N = 0;
      q.jb = 0;
      q.q = 0;
      q.s = 0;
      F(q);
      M(q);
      q.$.rb = q.n + 1 - 2;
      R(q.$, 1 << q.Y);
      q.i.rb = q.n + 1 - 2;
      R(q.i, 1 << q.Y);
      void (q.g = Vc);
      w = {};
      q = ((w.cb = q), (w.Z = null), (w.zc = 1), w);
      r.yb = q;
      return r;
    }
    function Fb(r, m) {
      r.Nb = K({});
      var v = h({}, m),
        E = r.Nb,
        w,
        A,
        C,
        z = '',
        D = [];
      for (w = 0; 5 > w; ++w) {
        if (((A = q(v)), -1 == A)) throw Error('truncated input');
        D[w] = (A << 24) >> 24;
      }
      m = { B: {}, e: {} };
      m.Gb = O(192);
      m.Zb = O(12);
      m.Cb = O(12);
      m.Db = O(12);
      m.Eb = O(12);
      m.pb = O(192);
      m.kb = O(4);
      m.kc = O(114);
      m.Fb = y({}, 4);
      m.Rb = cc({});
      m.sb = cc({});
      m.gb = {};
      for (w = 0; 4 > w; ++w) m.kb[w] = y({}, 6);
      var F;
      if (5 > D.length) w = 0;
      else {
        w = 255 & D[0];
        var G = w % 9;
        w = ~~(w / 9);
        var H = w % 5;
        var J = ~~(w / 5);
        for (F = w = 0; 4 > F; ++F) w += (255 & D[1 + F]) << (8 * F);
        if (!(D = 99999999 < w)) {
          if (8 < G || 4 < H || 4 < J) J = 0;
          else {
            D = m.gb;
            if (null == D.V || D.u != G || D.I != H)
              for (
                D.I = H,
                  D.qc = (1 << H) - 1,
                  D.u = G,
                  H = 1 << (D.u + D.I),
                  D.V = O(H),
                  G = 0;
                H > G;
                ++G
              ) {
                F = D.V;
                var M = G;
                var N = {};
                N = ((N.Ib = O(768)), N);
                F[M] = N;
              }
            J = 1 << J;
            J = (ba(m.Rb, J), ba(m.sb, J), (m.Dc = J - 1), 1);
          }
          D = !J;
        }
        D
          ? (w = 0)
          : 0 > w
            ? (w = 0)
            : (m.Ob != w &&
                ((m.Ob = w),
                (m.nb = Math.max(m.Ob, 1)),
                (w = m.B),
                (J = Math.max(m.nb, 4096)),
                (null != w.Lb && w.M == J) || (w.Lb = O(J)),
                (w.M = J),
                (w.o = 0),
                (w.h = 0)),
              (w = 1));
      }
      if (!w) throw Error('corrupted input');
      for (w = 0; 64 > w; w += 8) {
        if (((A = q(v)), -1 == A)) throw Error('truncated input');
        A = A.toString(16);
        1 == A.length && (A = '0' + A);
        z = A + '' + z;
      }
      /^0+$|^f+$/i.test(z)
        ? (r.Tb = gb)
        : ((C = parseInt(z, 16)), (r.Tb = 4294967295 < C ? gb : T(C)));
      A = r.Tb;
      m.e.Ab = v;
      v = m.B;
      za(v);
      v.cc = null;
      m.B.cc = E;
      m.B.h = 0;
      m.B.o = 0;
      jb(m.Gb);
      jb(m.pb);
      jb(m.Zb);
      jb(m.Cb);
      jb(m.Db);
      jb(m.Eb);
      jb(m.kc);
      E = m.gb;
      C = 1 << (E.u + E.I);
      for (v = 0; C > v; ++v) jb(E.V[v].Ib);
      for (E = 0; 4 > E; ++E) jb(m.kb[E].G);
      qc(m.Rb);
      qc(m.sb);
      jb(m.Fb.G);
      E = m.e;
      E.Bb = 0;
      E.E = -1;
      for (v = 0; 5 > v; ++v) E.Bb = (E.Bb << 8) | q(E.Ab);
      m.U = 0;
      m.ib = 0;
      m.Jc = 0;
      m.Ic = 0;
      m.Qc = 0;
      m.Nc = A;
      m.g = Vc;
      m.jc = 0;
      E = {};
      m = ((E.Z = m), (E.cb = null), (E.zc = 1), E);
      r.yb = m;
      return r;
    }
    function Gb(h, m) {
      return h.c[h.f + h.o + m];
    }
    function Lb(h, m, q, v) {
      h.T && h.o + m + v > h.h && (v = h.h - (h.o + m));
      ++q;
      var r = h.f + h.o + m;
      for (m = 0; v > m && h.c[r + m] == h.c[r + m - q]; ++m);
      return m;
    }
    function Va(h) {
      return h.h - h.o;
    }
    function ka(h) {
      var r, m, q;
      if (!h.T)
        for (; (q = -h.f + h.Kb - h.h), q; ) {
          var v = h.cc,
            w = q;
          if (
            ((r =
              v.Lc >= v.Yb
                ? -1
                : ((w = Math.min(w, v.Yb - v.Lc)),
                  Ga(v.Mc, v.Lc, h.c, h.f + h.h, w),
                  (v.Lc += w),
                  w)),
            -1 == r)
          )
            return (
              (h.zb = h.h),
              (m = h.f + h.zb),
              m > h.H && (h.zb = h.H - h.f),
              void (h.T = 1)
            );
          h.h += r;
          h.h >= h.o + h._b && (h.zb = h.h - h._b);
        }
    }
    function va(h, m) {
      h.f += m;
      h.zb -= m;
      h.o -= m;
      h.h -= m;
    }
    function ra(h) {
      var r;
      ++h.k >= h.p && (h.k = 0);
      ++h.o;
      if (h.o > h.zb) {
        var m = h.f + h.o;
        if (m > h.H) {
          var q = h.f + h.o - h.Bc;
          0 < q && --q;
          var v = h.f + h.h - q;
          for (m = 0; v > m; ++m) h.c[m] = h.c[q + m];
          h.f -= q;
        }
        ka(h);
      }
      1073741823 == h.o &&
        ((r = h.o - h.p), Ob(h.L, 2 * h.p, r), Ob(h.ub, h.rc, r), va(h, r));
    }
    function Ob(h, m, q) {
      var r;
      for (r = 0; m > r; ++r) {
        var v = h[r] || 0;
        q >= v ? (v = 0) : (v -= q);
        h[r] = v;
      }
    }
    function ca(h, m) {
      var r, q, v, w, E, y, A, C, z, D;
      do {
        if (h.h >= h.o + h.ob) var F = h.ob;
        else if (((F = h.h - h.o), h.xb > F)) {
          ra(h);
          continue;
        }
        var G = h.o > h.p ? h.o - h.p : 0;
        var H = h.f + h.o;
        h.qb
          ? ((D = te[255 & h.c[H]] ^ (255 & h.c[H + 1])),
            (w = 1023 & D),
            (h.ub[w] = h.o),
            (D ^= (255 & h.c[H + 2]) << 8),
            (E = 65535 & D),
            (h.ub[1024 + E] = h.o),
            (y = (D ^ (te[255 & h.c[H + 3]] << 5)) & h.Ec))
          : (y = (255 & h.c[H]) ^ ((255 & h.c[H + 1]) << 8));
        var J = h.ub[h.R + y];
        h.ub[h.R + y] = h.o;
        var K = (h.k << 1) + 1;
        var M = h.k << 1;
        var N = (C = h.w);
        for (r = h.Fc; ; ) {
          if (G >= J || 0 == r--) {
            h.L[K] = h.L[M] = 0;
            break;
          }
          if (
            ((v = h.o - J),
            (q = (h.k >= v ? h.k - v : h.k - v + h.p) << 1),
            (z = h.f + J),
            (A = C > N ? N : C),
            h.c[z + A] == h.c[H + A])
          ) {
            for (; ++A != F && h.c[z + A] == h.c[H + A]; );
            if (A == F) {
              h.L[M] = h.L[q];
              h.L[K] = h.L[q + 1];
              break;
            }
          }
          (255 & h.c[H + A]) > (255 & h.c[z + A])
            ? ((h.L[M] = J), (M = q + 1), (J = h.L[M]), (C = A))
            : ((h.L[K] = J), (K = q), (J = h.L[K]), (N = A));
        }
        ra(h);
      } while (0 != --m);
    }
    function za(h) {
      var r = h.o - h.h;
      if (r) {
        var m = h.cc;
        Ga(h.Lb, h.h, m.Mc, m.Yb, r);
        m.Yb += r;
        h.o >= h.M && (h.o = 0);
        h.h = h.o;
      }
    }
    function Ba(h, m) {
      m = h.o - m - 1;
      return (0 > m && (m += h.M), h.Lb[m]);
    }
    function da(h) {
      return ((h -= 2), 4 > h ? h : 3);
    }
    function wa(h) {
      return 4 > h ? 0 : 10 > h ? h - 3 : h - 6;
    }
    function hb(h) {
      if (!h.zc) throw Error('bad state');
      if (h.cb) {
        a: {
          var m = h.cb,
            r = h.cb.Xb,
            w = h.cb.uc,
            y = h.cb.Kc,
            z,
            D;
          r[0] = Vc;
          w[0] = Vc;
          y[0] = 1;
          if (m.oc) {
            m.b.cc = m.oc;
            var G = m.b;
            G.f = 0;
            G.o = 0;
            G.h = 0;
            G.T = 0;
            ka(G);
            G.k = 0;
            va(G, -1);
            m.W = 1;
            m.oc = null;
          }
          if (!m.pc) {
            m.pc = 1;
            var J = (G = m.g);
            if (J[0] == Vc[0] && J[1] == Vc[1]) {
              if (!Va(m.b)) {
                bb(m, ha(m.g));
                break a;
              }
              ua(m);
              var K = ha(m.g) & m.y;
              $a(m.d, m.C, (m.l << 4) + K, 0);
              m.l = wa(m.l);
              J = Gb(m.b, -m.s);
              ib(C(m.A, ha(m.g), m.J), m.d, J);
              m.J = J;
              --m.s;
              m.g = v(m.g, Ne);
            }
            if (Va(m.b))
              for (;;) {
                if (
                  ((z = Bb(m, ha(m.g))),
                  (D = m.mb),
                  (K = ha(m.g) & m.y),
                  (J = (m.l << 4) + K),
                  1 == z && -1 == D)
                ) {
                  $a(m.d, m.C, J, 0);
                  J = Gb(m.b, -m.s);
                  var N = C(m.A, ha(m.g), m.J);
                  if (7 > m.l) ib(N, m.d, J);
                  else {
                    var O = Gb(m.b, -m.v[0] - 1 - m.s);
                    var R = void 0;
                    var ca;
                    var ba = m.d;
                    var ea = O,
                      pa = J,
                      ra = 1,
                      xa = 1;
                    for (ca = 7; 0 <= ca; --ca) {
                      var ta = (pa >> ca) & 1;
                      O = xa;
                      ra &&
                        ((R = (ea >> ca) & 1),
                        (O += (1 + R) << 8),
                        (ra = R == ta));
                      $a(ba, N.tb, O, ta);
                      xa = (xa << 1) | ta;
                    }
                  }
                  m.J = J;
                  m.l = wa(m.l);
                } else {
                  if (($a(m.d, m.C, J, 1), 4 > D)) {
                    if (
                      ($a(m.d, m.bb, m.l, 1),
                      D
                        ? ($a(m.d, m.hb, m.l, 1),
                          1 == D
                            ? $a(m.d, m.Ub, m.l, 0)
                            : ($a(m.d, m.Ub, m.l, 1),
                              $a(m.d, m.vc, m.l, D - 2)))
                        : ($a(m.d, m.hb, m.l, 0),
                          1 == z ? $a(m.d, m._, J, 0) : $a(m.d, m._, J, 1)),
                      1 == z
                        ? (m.l = 7 > m.l ? 9 : 11)
                        : (Jc(m.i, m.d, z - 2, K), (m.l = 7 > m.l ? 8 : 11)),
                      (J = m.v[D]),
                      0 != D)
                    ) {
                      for (R = D; 1 <= R; --R) m.v[R] = m.v[R - 1];
                      m.v[0] = J;
                    }
                  } else {
                    $a(m.d, m.bb, m.l, 0);
                    m.l = 7 > m.l ? 7 : 10;
                    Jc(m.$, m.d, z - 2, K);
                    D -= 4;
                    R = Y(D);
                    J = da(z);
                    W(m.K[J], m.d, R);
                    if (4 <= R)
                      if (
                        ((ba = (R >> 1) - 1),
                        (N = (2 | (1 & R)) << ba),
                        (O = D - N),
                        14 > R)
                      )
                        for (
                          J = m.Sb,
                            R = N - R - 1,
                            N = m.d,
                            ta = O,
                            ea = 1,
                            O = 0;
                          ba > O;
                          ++O
                        )
                          ((ca = 1 & ta),
                            $a(N, J, R + ea, ca),
                            (ea = (ea << 1) | ca),
                            (ta >>= 1));
                      else
                        (Ld(m.d, O >> 4, ba - 4), Uc(m.S, m.d, 15 & O), ++m.Qb);
                    J = D;
                    for (R = 3; 1 <= R; --R) m.v[R] = m.v[R - 1];
                    m.v[0] = J;
                    ++m.Mb;
                  }
                  m.J = Gb(m.b, z - 1 - m.s);
                }
                if (((m.s -= z), (m.g = v(m.g, T(z))), !m.s)) {
                  128 <= m.Mb && F(m);
                  16 <= m.Qb && M(m);
                  r[0] = m.g;
                  J = m.d;
                  J = v(v(T(J.Jb), J.mc), [4, 0]);
                  if (((w[0] = J), !Va(m.b))) {
                    bb(m, ha(m.g));
                    break a;
                  }
                  J = m.g;
                  J = A(J[0] - G[0], J[1] - G[1]);
                  if (0 <= H(J, [4096, 0])) {
                    m.pc = 0;
                    y[0] = 0;
                    break a;
                  }
                }
              }
            else bb(m, ha(m.g));
          }
        }
        h.Pb = h.cb.Xb[0];
        h.cb.Kc[0] && ((z = h.cb), na(z), (z.d.Ab = null), (h.zc = 0));
      } else {
        a: {
          z = h.Z;
          if (((R = ha(z.g) & z.Dc), Ab(z.e, z.Gb, (z.U << 4) + R))) {
            if (Ab(z.e, z.Zb, z.U))
              ((m = 0),
                Ab(z.e, z.Cb, z.U)
                  ? (Ab(z.e, z.Db, z.U)
                      ? (Ab(z.e, z.Eb, z.U)
                          ? ((J = z.Qc), (z.Qc = z.Ic))
                          : (J = z.Ic),
                        (z.Ic = z.Jc))
                      : (J = z.Jc),
                    (z.Jc = z.ib),
                    (z.ib = J))
                  : Ab(z.e, z.pb, (z.U << 4) + R) ||
                    ((z.U = 7 > z.U ? 9 : 11), (m = 1)),
                m || ((m = db(z.sb, z.e, R) + 2), (z.U = 7 > z.U ? 8 : 11)));
            else if (
              ((z.Qc = z.Ic),
              (z.Ic = z.Jc),
              (z.Jc = z.ib),
              (m = 2 + db(z.Rb, z.e, R)),
              (z.U = 7 > z.U ? 7 : 10),
              (G = S(z.kb[da(m)], z.e)),
              4 <= G)
            )
              if (((r = (G >> 1) - 1), (z.ib = (2 | (1 & G)) << r), 14 > G)) {
                D = z.ib;
                K = z.kc;
                w = z.ib - G - 1;
                y = z.e;
                R = 1;
                for (J = N = 0; r > J; ++J)
                  ((G = Ab(y, K, w + R)), (R <<= 1), (R += G), (N |= G << J));
                z.ib = D + N;
              } else {
                D = z.ib;
                K = z.e;
                w = 0;
                for (r -= 4; 0 != r; --r)
                  ((K.E >>>= 1),
                    (y = (K.Bb - K.E) >>> 31),
                    (K.Bb -= K.E & (y - 1)),
                    (w = (w << 1) | (1 - y)),
                    -16777216 & K.E ||
                      ((K.Bb = (K.Bb << 8) | q(K.Ab)), (K.E <<= 8)));
                z.ib = D + (w << 4);
                D = z.ib;
                K = z.Fb;
                r = z.e;
                G = 1;
                for (y = J = 0; K.F > y; ++y)
                  ((w = Ab(r, K.G, G)), (G <<= 1), (G += w), (J |= w << y));
                if (((z.ib = D + J), 0 > z.ib)) {
                  z = -1 == z.ib ? 1 : -1;
                  break a;
                }
              }
            else z.ib = G;
            if (0 <= H(T(z.ib), z.g) || z.ib >= z.nb) {
              z = -1;
              break a;
            }
            D = z.B;
            K = m;
            r = D.o - z.ib - 1;
            for (0 > r && (r += D.M); 0 != K; --K)
              (r >= D.M && (r = 0),
                (D.Lb[D.o++] = D.Lb[r++]),
                D.o >= D.M && za(D));
            z.g = v(z.g, T(m));
            z.jc = Ba(z.B, 0);
          } else {
            D = z.gb;
            K = ha(z.g);
            D = D.V[((K & D.qc) << D.u) + ((255 & z.jc) >>> (8 - D.u))];
            if (7 > z.U) {
              K = z.e;
              m = 1;
              do m = (m << 1) | Ab(K, D.Ib, m);
              while (256 > m);
              D = (m << 24) >> 24;
            } else {
              K = z.e;
              m = Ba(z.B, z.ib);
              r = 1;
              do
                if (
                  ((y = (m >> 7) & 1),
                  (m <<= 1),
                  (w = Ab(K, D.Ib, ((1 + y) << 8) + r)),
                  (r = (r << 1) | w),
                  y != w)
                ) {
                  for (; 256 > r; ) r = (r << 1) | Ab(K, D.Ib, r);
                  break;
                }
              while (256 > r);
              D = (r << 24) >> 24;
            }
            z.jc = D;
            D = z.B;
            K = z.jc;
            D.Lb[D.o++] = K;
            D.o >= D.M && za(D);
            z.U = wa(z.U);
            z.g = v(z.g, Ne);
          }
          z = 0;
        }
        if (-1 == z) throw Error('corrupted input');
        h.Pb = gb;
        h.Pc = h.Z.g;
        if (z || (0 <= H(h.Z.Nc, Vc) && 0 <= H(h.Z.g, h.Z.Nc)))
          (za(h.Z.B),
            (z = h.Z.B),
            za(z),
            (z.cc = null),
            (h.Z.e.Ab = null),
            (h.zc = 0));
      }
      return h.zc;
    }
    function ba(h, m) {
      for (; m > h.O; ++h.O) ((h.ec[h.O] = y({}, 3)), (h.hc[h.O] = y({}, 3)));
    }
    function db(h, m, q) {
      return Ab(m, h.wc, 0)
        ? 8 + (Ab(m, h.wc, 1) ? 8 + S(h.tc, m) : S(h.hc[q], m))
        : S(h.ec[q], m);
    }
    function cc(h) {
      return (
        (h.wc = O(2)),
        (h.ec = O(16)),
        (h.hc = O(16)),
        (h.tc = y({}, 8)),
        (h.O = 0),
        h
      );
    }
    function qc(h) {
      jb(h.wc);
      for (var m = 0; h.O > m; ++m) (jb(h.ec[m].G), jb(h.hc[m].G));
      jb(h.tc.G);
    }
    function xa(h, m) {
      h.jb = m;
      var r = h.a[m].r;
      var q = h.a[m].j;
      do {
        if (h.a[m].t) {
          var v = h.a[r];
          v.j = -1;
          v.t = 0;
          h.a[r].r = r - 1;
          h.a[m].Ac &&
            ((h.a[r - 1].t = 0),
            (h.a[r - 1].r = h.a[m].r2),
            (h.a[r - 1].j = h.a[m].j2));
        }
        var w = r;
        v = q;
        q = h.a[w].j;
        r = h.a[w].r;
        h.a[w].j = v;
        h.a[w].r = m;
        m = w;
      } while (0 < m);
      return ((h.mb = h.a[0].j), (h.q = h.a[0].r));
    }
    function M(h) {
      for (var m = 0; 16 > m; ++m) {
        var r = h.nc,
          q = m,
          v,
          w = h.S,
          y = m,
          z = 1,
          A = 0;
        for (v = w.F; 0 != v; --v) {
          var C = 1 & y;
          y >>>= 1;
          A += Md(w.G[z], C);
          z = (z << 1) | C;
        }
        r[q] = A;
      }
      h.Qb = 0;
    }
    function F(h) {
      var m;
      for (m = 4; 128 > m; ++m) {
        var r = Y(m);
        var q = (r >> 1) - 1;
        var v = (2 | (1 & r)) << q;
        var w = h.yc;
        for (var y = m, z, A = m - v, C = 1, D = 0; 0 != q; --q)
          ((z = 1 & A),
            (A >>>= 1),
            (D += Za[(2047 & ((h.Sb[v - r - 1 + C] - z) ^ -z)) >>> 2]),
            (C = (C << 1) | z));
        w[y] = D;
      }
      for (v = 0; 4 > v; ++v) {
        m = h.K[v];
        w = v << 6;
        for (r = 0; h.$b > r; ++r) h.P[w + r] = Tc(m, r);
        for (r = 14; h.$b > r; ++r) h.P[w + r] += ((r >> 1) - 1 - 4) << 6;
        r = 128 * v;
        for (m = 0; 4 > m; ++m) h.lb[r + m] = h.P[w + m];
        for (; 128 > m; ++m) h.lb[r + m] = h.P[w + Y(m)] + h.yc[m];
      }
      h.Mb = 0;
    }
    function bb(h, m) {
      na(h);
      m &= h.y;
      h.Gc &&
        ($a(h.d, h.C, (h.l << 4) + m, 1),
        $a(h.d, h.bb, h.l, 0),
        (h.l = 7 > h.l ? 7 : 10),
        Jc(h.$, h.d, 0, m),
        (m = da(2)),
        W(h.K[m], h.d, 63),
        Ld(h.d, 67108863, 26),
        Uc(h.S, h.d, 15));
      for (m = 0; 5 > m; ++m) Zc(h.d);
    }
    function Bb(h, m) {
      var r,
        q,
        v,
        w,
        y,
        E,
        A,
        D,
        F,
        G,
        H,
        J,
        K,
        M,
        N,
        O,
        S,
        T,
        R,
        W,
        ba,
        Y,
        da,
        ea,
        ha,
        ka,
        pa,
        ra;
      if (h.jb != h.q)
        return (
          (G = h.a[h.q].r - h.q),
          (h.mb = h.a[h.q].j),
          (h.q = h.a[h.q].r),
          G
        );
      if (
        ((h.q = h.jb = 0),
        h.N ? ((F = h.vb), (h.N = 0)) : (F = ua(h)),
        (G = h.D),
        (S = Va(h.b) + 1),
        2 > S)
      )
        return ((h.mb = -1), 1);
      273 < S && (S = 273);
      for (E = A = 0; 4 > E; ++E)
        ((h.x[E] = h.v[E]),
          (h.Q[E] = Lb(h.b, -1, h.x[E], 273)),
          h.Q[E] > h.Q[A] && (A = E));
      if (h.Q[A] >= h.n)
        return (
          (h.mb = A),
          (G = h.Q[A]),
          (m = G - 1),
          0 < m && (ca(h.b, m), (h.s += m)),
          G
        );
      if (F >= h.n)
        return (
          (h.mb = h.m[G - 1] + 4),
          (m = F - 1),
          0 < m && (ca(h.b, m), (h.s += m)),
          F
        );
      if (
        ((y = Gb(h.b, -1)),
        (M = Gb(h.b, -h.v[0] - 1 - 1)),
        2 > F && y != M && 2 > h.Q[A])
      )
        return ((h.mb = -1), 1);
      h.a[0].Hc = h.l;
      var na = m & h.y;
      h.a[1].z =
        Za[h.C[(h.l << 4) + na] >>> 2] + z(C(h.A, m, h.J), 7 <= h.l, M, y);
      var ta = h.a[1];
      ta.j = -1;
      ta.t = 0;
      ta = Za[(2048 - h.C[(h.l << 4) + na]) >>> 2];
      var za = ta + Za[(2048 - h.bb[h.l]) >>> 2];
      if (M == y) {
        var Ba = h.l;
        Ba = za + (Za[h.hb[Ba] >>> 2] + Za[h._[(Ba << 4) + na] >>> 2]);
        h.a[1].z > Ba && ((h.a[1].z = Ba), (E = h.a[1]), (E.j = 0), (E.t = 0));
      }
      if (((D = F >= h.Q[A] ? F : h.Q[A]), 2 > D))
        return ((h.mb = h.a[1].j), 1);
      h.a[1].r = 0;
      h.a[0].bc = h.x[0];
      h.a[0].ac = h.x[1];
      h.a[0].dc = h.x[2];
      h.a[0].lc = h.x[3];
      A = D;
      do h.a[A--].z = 268435455;
      while (2 <= A);
      for (E = 0; 4 > E; ++E)
        if (((K = h.Q[E]), !(2 > K))) {
          var Ga = za + La(h, E, h.l, na);
          do {
            var va = Ga + h.i.Cc[272 * na + (K - 2)];
            var Ea = h.a[K];
            Ea.z > va && ((Ea.z = va), (Ea.r = 0), (Ea.j = E), (Ea.t = 0));
          } while (2 <= --K);
        }
      if (
        ((K = ta + Za[h.bb[h.l] >>> 2]),
        (A = 2 <= h.Q[0] ? h.Q[0] + 1 : 2),
        F >= A)
      ) {
        for (F = 0; A > h.m[F]; ) F += 2;
        for (
          ;
          (r = h.m[F + 1]),
            (va = K + Da(h, r, A, na)),
            (Ea = h.a[A]),
            Ea.z > va && ((Ea.z = va), (Ea.r = 0), (Ea.j = r + 4), (Ea.t = 0)),
            A != h.m[F] || ((F += 2), F != G);
          ++A
        );
      }
      for (r = 0; ; ) {
        if ((++r, r == D)) return xa(h, r);
        if (((N = ua(h)), (G = h.D), N >= h.n))
          return ((h.vb = N), (h.N = 1), xa(h, r));
        if (
          (++m,
          (ba = h.a[r].r),
          h.a[r].t
            ? (--ba,
              h.a[r].Ac
                ? ((Y = h.a[h.a[r].r2].Hc),
                  (Y = 4 > h.a[r].j2 ? (7 > Y ? 8 : 11) : 7 > Y ? 7 : 10))
                : (Y = h.a[ba].Hc),
              (Y = wa(Y)))
            : (Y = h.a[ba].Hc),
          ba == r - 1
            ? (Y = h.a[r].j ? wa(Y) : 7 > Y ? 9 : 11)
            : (h.a[r].t && h.a[r].Ac
                ? ((ba = h.a[r].r2), (W = h.a[r].j2), (Y = 7 > Y ? 8 : 11))
                : ((W = h.a[r].j),
                  (Y = 4 > W ? (7 > Y ? 8 : 11) : 7 > Y ? 7 : 10)),
              (R = h.a[ba]),
              4 > W
                ? W
                  ? 1 == W
                    ? ((h.x[0] = R.ac),
                      (h.x[1] = R.bc),
                      (h.x[2] = R.dc),
                      (h.x[3] = R.lc))
                    : 2 == W
                      ? ((h.x[0] = R.dc),
                        (h.x[1] = R.bc),
                        (h.x[2] = R.ac),
                        (h.x[3] = R.lc))
                      : ((h.x[0] = R.lc),
                        (h.x[1] = R.bc),
                        (h.x[2] = R.ac),
                        (h.x[3] = R.dc))
                  : ((h.x[0] = R.bc),
                    (h.x[1] = R.ac),
                    (h.x[2] = R.dc),
                    (h.x[3] = R.lc))
                : ((h.x[0] = W - 4),
                  (h.x[1] = R.bc),
                  (h.x[2] = R.ac),
                  (h.x[3] = R.dc))),
          (h.a[r].Hc = Y),
          (h.a[r].bc = h.x[0]),
          (h.a[r].ac = h.x[1]),
          (h.a[r].dc = h.x[2]),
          (h.a[r].lc = h.x[3]),
          (w = h.a[r].z),
          (y = Gb(h.b, -1)),
          (M = Gb(h.b, -h.x[0] - 1 - 1)),
          (na = m & h.y),
          (q =
            w +
            Za[h.C[(Y << 4) + na] >>> 2] +
            z(C(h.A, m, Gb(h.b, -2)), 7 <= Y, M, y)),
          (O = h.a[r + 1]),
          (F = 0),
          O.z > q && ((O.z = q), (O.r = r), (O.j = -1), (O.t = 0), (F = 1)),
          (ta = w + Za[(2048 - h.C[(Y << 4) + na]) >>> 2]),
          (za = ta + Za[(2048 - h.bb[Y]) >>> 2]),
          M != y ||
            (r > O.r && !O.j) ||
            ((Ba = za + (Za[h.hb[Y] >>> 2] + Za[h._[(Y << 4) + na] >>> 2])),
            O.z >= Ba &&
              ((O.z = Ba), (O.r = r), (O.j = 0), (O.t = 0), (F = 1))),
          (T = Va(h.b) + 1),
          (T = T > 4095 - r ? 4095 - r : T),
          (S = T),
          !(2 > S))
        ) {
          if (
            (S > h.n && (S = h.n),
            !F &&
              M != y &&
              ((da = Math.min(T - 1, h.n)),
              (J = Lb(h.b, 0, h.x[0], da)),
              2 <= J))
          ) {
            E = wa(Y);
            Ea = (m + 1) & h.y;
            va =
              q +
              Za[(2048 - h.C[(E << 4) + Ea]) >>> 2] +
              Za[(2048 - h.bb[E]) >>> 2];
            for (Ga = r + 1 + J; Ga > D; ) h.a[++D].z = 268435455;
            va += ((ea = h.i.Cc[272 * Ea + (J - 2)]), ea + La(h, 0, E, Ea));
            Ea = h.a[Ga];
            Ea.z > va &&
              ((Ea.z = va),
              (Ea.r = r + 1),
              (Ea.j = 0),
              (Ea.t = 1),
              (Ea.Ac = 0));
          }
          A = 2;
          for (F = 0; 4 > F; ++F)
            if (((H = Lb(h.b, -1, h.x[F], S)), !(2 > H))) {
              K = H;
              do {
                for (; r + H > D; ) h.a[++D].z = 268435455;
                va =
                  za +
                  ((ha = h.i.Cc[272 * na + (H - 2)]), ha + La(h, F, Y, na));
                Ea = h.a[r + H];
                Ea.z > va && ((Ea.z = va), (Ea.r = r), (Ea.j = F), (Ea.t = 0));
              } while (2 <= --H);
              if (
                ((H = K),
                F || (A = H + 1),
                T > H &&
                  ((da = Math.min(T - 1 - H, h.n)),
                  (J = Lb(h.b, H, h.x[F], da)),
                  2 <= J))
              ) {
                E = 7 > Y ? 8 : 11;
                Ea = (m + H) & h.y;
                va =
                  za +
                  ((ka = h.i.Cc[272 * na + (H - 2)]), ka + La(h, F, Y, na)) +
                  Za[h.C[(E << 4) + Ea] >>> 2] +
                  z(
                    C(h.A, m + H, Gb(h.b, H - 1 - 1)),
                    1,
                    Gb(h.b, H - 1 - (h.x[F] + 1)),
                    Gb(h.b, H - 1),
                  );
                E = wa(E);
                Ea = (m + H + 1) & h.y;
                va += Za[(2048 - h.C[(E << 4) + Ea]) >>> 2];
                va += Za[(2048 - h.bb[E]) >>> 2];
                for (Ga = H + 1 + J; r + Ga > D; ) h.a[++D].z = 268435455;
                va += ((pa = h.i.Cc[272 * Ea + (J - 2)]), pa + La(h, 0, E, Ea));
                Ea = h.a[r + Ga];
                Ea.z > va &&
                  ((Ea.z = va),
                  (Ea.r = r + H + 1),
                  (Ea.j = 0),
                  (Ea.t = 1),
                  (Ea.Ac = 1),
                  (Ea.r2 = r),
                  (Ea.j2 = F));
              }
            }
          if (N > S) {
            N = S;
            for (G = 0; N > h.m[G]; G += 2);
            h.m[G] = N;
            G += 2;
          }
          if (N >= A) {
            for (K = ta + Za[h.bb[Y] >>> 2]; r + N > D; )
              h.a[++D].z = 268435455;
            for (F = 0; A > h.m[F]; ) F += 2;
            for (H = A; ; ++H)
              if (
                ((v = h.m[F + 1]),
                (va = K + Da(h, v, H, na)),
                (Ea = h.a[r + H]),
                Ea.z > va &&
                  ((Ea.z = va), (Ea.r = r), (Ea.j = v + 4), (Ea.t = 0)),
                H == h.m[F])
              ) {
                if (
                  T > H &&
                  ((da = Math.min(T - 1 - H, h.n)),
                  (J = Lb(h.b, H, v, da)),
                  2 <= J)
                ) {
                  E = 7 > Y ? 7 : 10;
                  Ea = (m + H) & h.y;
                  va =
                    va +
                    Za[h.C[(E << 4) + Ea] >>> 2] +
                    z(
                      C(h.A, m + H, Gb(h.b, H - 1 - 1)),
                      1,
                      Gb(h.b, H - (v + 1) - 1),
                      Gb(h.b, H - 1),
                    );
                  E = wa(E);
                  Ea = (m + H + 1) & h.y;
                  va += Za[(2048 - h.C[(E << 4) + Ea]) >>> 2];
                  va += Za[(2048 - h.bb[E]) >>> 2];
                  for (Ga = H + 1 + J; r + Ga > D; ) h.a[++D].z = 268435455;
                  va +=
                    ((ra = h.i.Cc[272 * Ea + (J - 2)]), ra + La(h, 0, E, Ea));
                  Ea = h.a[r + Ga];
                  Ea.z > va &&
                    ((Ea.z = va),
                    (Ea.r = r + H + 1),
                    (Ea.j = 0),
                    (Ea.t = 1),
                    (Ea.Ac = 1),
                    (Ea.r2 = r),
                    (Ea.j2 = v + 4));
                }
                if (((F += 2), F == G)) break;
              }
          }
        }
      }
    }
    function Da(h, m, q, v) {
      var r,
        w = da(q);
      return (
        (r =
          128 > m
            ? h.lb[128 * w + m]
            : h.P[
                (w << 6) +
                  (131072 > m
                    ? lc[m >> 6] + 12
                    : 134217728 > m
                      ? lc[m >> 16] + 32
                      : lc[m >> 26] + 52)
              ] + h.nc[15 & m]),
        r + h.$.Cc[272 * v + (q - 2)]
      );
    }
    function La(h, m, q, v) {
      var r;
      return (
        m
          ? ((r = Za[(2048 - h.hb[q]) >>> 2]),
            1 == m
              ? (r += Za[h.Ub[q] >>> 2])
              : ((r += Za[(2048 - h.Ub[q]) >>> 2]), (r += Md(h.vc[q], m - 2))))
          : ((r = Za[h.hb[q] >>> 2]),
            (r += Za[(2048 - h._[(q << 4) + v]) >>> 2])),
        r
      );
    }
    function ua(h) {
      var m = 0;
      a: {
        var r = h.b;
        var q = h.m,
          v,
          w,
          y,
          z,
          A,
          D,
          C,
          F;
        if (r.h >= r.o + r.ob) var G = r.ob;
        else if (((G = r.h - r.o), r.xb > G)) {
          r = (ra(r), 0);
          break a;
        }
        var H = 0;
        var J = r.o > r.p ? r.o - r.p : 0;
        var K = r.f + r.o;
        var M = 1;
        var N = (A = 0);
        r.qb
          ? ((w = te[255 & r.c[K]] ^ (255 & r.c[K + 1])),
            (A = 1023 & w),
            (w ^= (255 & r.c[K + 2]) << 8),
            (N = 65535 & w),
            (D = (w ^ (te[255 & r.c[K + 3]] << 5)) & r.Ec))
          : (D = (255 & r.c[K]) ^ ((255 & r.c[K + 1]) << 8));
        w = r.ub[r.R + D] || 0;
        r.qb &&
          ((v = r.ub[A] || 0),
          (y = r.ub[1024 + N] || 0),
          (r.ub[A] = r.o),
          (r.ub[1024 + N] = r.o),
          v > J &&
            r.c[r.f + v] == r.c[K] &&
            ((q[H++] = M = 2), (q[H++] = r.o - v - 1)),
          y > J &&
            r.c[r.f + y] == r.c[K] &&
            (y == v && (H -= 2),
            (q[H++] = M = 3),
            (q[H++] = r.o - y - 1),
            (v = y)),
          0 != H && v == w && ((H -= 2), (M = 1)));
        r.ub[r.R + D] = r.o;
        D = (r.k << 1) + 1;
        var O = r.k << 1;
        A = N = r.w;
        0 != r.w &&
          w > J &&
          r.c[r.f + w + r.w] != r.c[K + r.w] &&
          ((q[H++] = M = r.w), (q[H++] = r.o - w - 1));
        for (v = r.Fc; ; ) {
          if (J >= w || 0 == v--) {
            r.L[D] = r.L[O] = 0;
            break;
          }
          if (
            ((z = r.o - w),
            (y = (r.k >= z ? r.k - z : r.k - z + r.p) << 1),
            (F = r.f + w),
            (C = N > A ? A : N),
            r.c[F + C] == r.c[K + C])
          ) {
            for (; ++C != G && r.c[F + C] == r.c[K + C]; );
            if (C > M && ((q[H++] = M = C), (q[H++] = z - 1), C == G)) {
              r.L[O] = r.L[y];
              r.L[D] = r.L[y + 1];
              break;
            }
          }
          (255 & r.c[K + C]) > (255 & r.c[F + C])
            ? ((r.L[O] = w), (O = y + 1), (w = r.L[O]), (N = C))
            : ((r.L[D] = w), (D = y), (w = r.L[D]), (A = C));
        }
        r = (ra(r), H);
      }
      return (
        (h.D = r),
        0 < h.D &&
          ((m = h.m[h.D - 2]),
          m == h.n && (m += Lb(h.b, m - 1, h.m[h.D - 1], 273 - m))),
        ++h.s,
        m
      );
    }
    function na(h) {
      h.b && h.W && ((h.b.cc = null), (h.W = 0));
    }
    function Y(h) {
      return 2048 > h
        ? lc[h]
        : 2097152 > h
          ? lc[h >> 10] + 20
          : lc[h >> 20] + 40;
    }
    function N(h, m) {
      jb(h.db);
      for (var r = 0; m > r; ++r) (jb(h.Vb[r].G), jb(h.Wb[r].G));
      jb(h.ic.G);
    }
    function G(h, m, q, v, w) {
      var r;
      var y = Za[h.db[0] >>> 2];
      var E = Za[(2048 - h.db[0]) >>> 2];
      var z = E + Za[h.db[1] >>> 2];
      E += Za[(2048 - h.db[1]) >>> 2];
      for (r = 0; 8 > r; ++r) {
        if (r >= q) return;
        v[w + r] = y + Tc(h.Vb[m], r);
      }
      for (; 16 > r; ++r) {
        if (r >= q) return;
        v[w + r] = z + Tc(h.Wb[m], r - 8);
      }
      for (; q > r; ++r) v[w + r] = E + Tc(h.ic, r - 8 - 8);
    }
    function Jc(h, m, q, v) {
      8 > q
        ? ($a(m, h.db, 0, 0), W(h.Vb[v], m, q))
        : ((q -= 8),
          $a(m, h.db, 0, 1),
          8 > q
            ? ($a(m, h.db, 1, 0), W(h.Wb[v], m, q))
            : ($a(m, h.db, 1, 1), W(h.ic, m, q - 8)));
      0 == --h.sc[v] && (G(h, v, h.rb, h.Cc, 272 * v), (h.sc[v] = h.rb));
    }
    function qb(h) {
      h.db = O(2);
      h.Vb = O(16);
      h.Wb = O(16);
      h.ic = Jb({}, 8);
      for (var m = 0; 16 > m; ++m)
        ((h.Vb[m] = Jb({}, 3)), (h.Wb[m] = Jb({}, 3)));
      return ((h.Cc = []), (h.sc = []), h);
    }
    function R(h, m) {
      for (var r = 0; m > r; ++r)
        (G(h, r, h.rb, h.Cc, 272 * r), (h.sc[r] = h.rb));
    }
    function C(h, m, q) {
      return h.V[((m & h.qc) << h.u) + ((255 & q) >>> (8 - h.u))];
    }
    function ib(h, m, q) {
      var r,
        v = 1;
      for (r = 7; 0 <= r; --r) {
        var w = (q >> r) & 1;
        $a(m, h.tb, v, w);
        v = (v << 1) | w;
      }
    }
    function z(h, m, q, v) {
      var r,
        w,
        y = 1,
        E = 7,
        z = 0;
      if (m)
        for (; 0 <= E; --E)
          if (
            ((w = (q >> E) & 1),
            (r = (v >> E) & 1),
            (z += Md(h.tb[((1 + w) << 8) + y], r)),
            (y = (y << 1) | r),
            w != r)
          ) {
            --E;
            break;
          }
      for (; 0 <= E; --E)
        ((r = (v >> E) & 1), (z += Md(h.tb[y], r)), (y = (y << 1) | r));
      return z;
    }
    function y(h, m) {
      return ((h.F = m), (h.G = O(1 << m)), h);
    }
    function S(h, m) {
      var r,
        q = 1;
      for (r = h.F; 0 != r; --r) q = (q << 1) + Ab(m, h.G, q);
      return q - (1 << h.F);
    }
    function Jb(h, m) {
      return ((h.F = m), (h.G = O(1 << m)), h);
    }
    function W(h, m, q) {
      var r,
        v = 1;
      for (r = h.F; 0 != r; ) {
        --r;
        var w = (q >>> r) & 1;
        $a(m, h.G, v, w);
        v = (v << 1) | w;
      }
    }
    function Tc(h, m) {
      var r,
        q = 1,
        v = 0;
      for (r = h.F; 0 != r; ) {
        --r;
        var w = (m >>> r) & 1;
        v += Md(h.G[q], w);
        q = (q << 1) + w;
      }
      return v;
    }
    function Uc(h, m, q) {
      var r,
        v = 1;
      for (r = 0; h.F > r; ++r) {
        var w = 1 & q;
        $a(m, h.G, v, w);
        v = (v << 1) | w;
        q >>= 1;
      }
    }
    function Ab(h, m, v) {
      var r,
        w = m[v];
      return (
        (r = (h.E >>> 11) * w),
        (-2147483648 ^ r) > (-2147483648 ^ h.Bb)
          ? ((h.E = r),
            (m[v] = ((w + ((2048 - w) >>> 5)) << 16) >> 16),
            -16777216 & h.E || ((h.Bb = (h.Bb << 8) | q(h.Ab)), (h.E <<= 8)),
            0)
          : ((h.E -= r),
            (h.Bb -= r),
            (m[v] = ((w - (w >>> 5)) << 16) >> 16),
            -16777216 & h.E || ((h.Bb = (h.Bb << 8) | q(h.Ab)), (h.E <<= 8)),
            1)
      );
    }
    function jb(h) {
      for (var m = h.length - 1; 0 <= m; --m) h[m] = 1024;
    }
    function $a(h, m, q, w) {
      var r = m[q];
      var y = (h.E >>> 11) * r;
      w
        ? ((h.xc = v(h.xc, D(T(y), [4294967295, 0]))),
          (h.E -= y),
          (m[q] = ((r - (r >>> 5)) << 16) >> 16))
        : ((h.E = y), (m[q] = ((r + ((2048 - r) >>> 5)) << 16) >> 16));
      -16777216 & h.E || ((h.E <<= 8), Zc(h));
    }
    function Ld(h, m, q) {
      for (--q; 0 <= q; --q)
        ((h.E >>>= 1),
          1 == ((m >>> q) & 1) && (h.xc = v(h.xc, T(h.E))),
          -16777216 & h.E || ((h.E <<= 8), Zc(h)));
    }
    function Zc(h) {
      var q = h.xc;
      var r = 32,
        w;
      q =
        ((r &= 63),
        (w = m(q, r)),
        0 > q[1] && (w = v(w, ea([2, 0], 63 - r))),
        w);
      r = ha(q);
      if (0 != r || 0 > H(h.xc, [4278190080, 0])) {
        h.mc = v(h.mc, T(h.Jb));
        q = h.Oc;
        do ((w = h.Ab), (q += r), (w.Mc[w.Yb++] = (q << 24) >> 24), (q = 255));
        while (0 != --h.Jb);
        h.Oc = ha(h.xc) >>> 24;
      }
      ++h.Jb;
      h.xc = ea(D(h.xc, [16777215, 0]), 8);
    }
    function Md(h, m) {
      return Za[(2047 & ((h - m) ^ -m)) >>> 2];
    }
    function td(h) {
      for (
        var m, q, r, v = 0, w = 0, y = h.length, z = [], A = [];
        y > v;
        ++v, ++w
      ) {
        if (((m = 255 & h[v]), 128 & m))
          if (192 == (224 & m)) {
            if (v + 1 >= y || ((q = 255 & h[++v]), 128 != (192 & q))) return h;
            A[w] = ((31 & m) << 6) | (63 & q);
          } else {
            if (
              224 != (240 & m) ||
              v + 2 >= y ||
              ((q = 255 & h[++v]), 128 != (192 & q)) ||
              ((r = 255 & h[++v]), 128 != (192 & r))
            )
              return h;
            A[w] = ((15 & m) << 12) | ((63 & q) << 6) | (63 & r);
          }
        else {
          if (!m) return h;
          A[w] = m;
        }
        16383 == w && (z.push(String.fromCharCode.apply(String, A)), (w = -1));
      }
      return (
        0 < w && ((A.length = w), z.push(String.fromCharCode.apply(String, A))),
        z.join('')
      );
    }
    function kf(h) {
      var m,
        q,
        r = [],
        v = 0,
        w = h.length;
      if ('object' == typeof h) return h;
      for (q = m = 0; w > q; ++q) r[m++] = h.charCodeAt(q);
      for (q = 0; w > q; ++q)
        ((h = r[q]),
          1 <= h && 127 >= h
            ? ++v
            : (v += !h || (128 <= h && 2047 >= h) ? 2 : 3));
      m = [];
      for (q = v = 0; w > q; ++q)
        ((h = r[q]),
          1 <= h && 127 >= h
            ? (m[v++] = (h << 24) >> 24)
            : !h || (128 <= h && 2047 >= h)
              ? ((m[v++] = ((192 | ((h >> 6) & 31)) << 24) >> 24),
                (m[v++] = ((128 | (63 & h)) << 24) >> 24))
              : ((m[v++] = ((224 | ((h >> 12) & 15)) << 24) >> 24),
                (m[v++] = ((128 | ((h >> 6) & 63)) << 24) >> 24),
                (m[v++] = ((128 | (63 & h)) << 24) >> 24)));
      return m;
    }
    function Zb(h) {
      return h[1] + h[0];
    }
    var hc = 'function' == typeof setImmediate ? setImmediate : setTimeout,
      uc = 4294967296,
      gb = [4294967295, -uc],
      se = [0, -9223372036854775808],
      Vc = [0, 0],
      Ne = [1, 0],
      te = (function () {
        var h,
          m,
          q = [];
        for (h = 0; 256 > h; ++h) {
          var v = h;
          for (m = 0; 8 > m; ++m)
            0 != (1 & v) ? (v = (v >>> 1) ^ -306674912) : (v >>>= 1);
          q[h] = v;
        }
        return q;
      })(),
      lc = (function () {
        var h,
          m,
          q = 2,
          v = [0, 1];
        for (m = 2; 22 > m; ++m) {
          var w = 1 << ((m >> 1) - 1);
          for (h = 0; w > h; ++h, ++q) v[q] = (m << 24) >> 24;
        }
        return v;
      })(),
      Za = (function () {
        var h,
          m,
          q = [];
        for (m = 8; 0 <= m; --m) {
          var v = 1 << (9 - m - 1);
          for (h = 1 << (9 - m); h > v; ++v)
            q[v] = (m << 6) + (((h - v) << 6) >>> (9 - m - 1));
        }
        return q;
      })(),
      ta = (function () {
        var h = [
          { s: 16, f: 64, m: 0 },
          { s: 20, f: 64, m: 0 },
          { s: 19, f: 64, m: 1 },
          { s: 20, f: 64, m: 1 },
          { s: 21, f: 128, m: 1 },
          { s: 22, f: 128, m: 1 },
          { s: 23, f: 128, m: 1 },
          { s: 24, f: 255, m: 1 },
          { s: 25, f: 255, m: 1 },
        ];
        return function (m) {
          return h[m - 1] || h[6];
        };
      })();
    return (
      'undefined' == typeof onmessage ||
        ('undefined' != typeof window && void 0 !== window.document) ||
        !(function () {
          onmessage = function (h) {
            h &&
              h.gc &&
              (2 == h.gc.action
                ? e.decompress(h.gc.gc, h.gc.cbn)
                : 1 == h.gc.action && e.compress(h.gc.gc, h.gc.Rc, h.gc.cbn));
          };
        })(),
      {
        compress: function (h, m, q, v) {
          function r() {
            try {
              for (var h, m = new Date().getTime(); hb(z.c.yb); )
                if (
                  ((w = Zb(z.c.yb.Pb) / Zb(z.c.Tb)),
                  200 < new Date().getTime() - m)
                )
                  return (v(w), hc(r, 0), 0);
              v(1);
              h = J(z.c.Nb);
              hc(q.bind(null, h), 0);
            } catch (vc) {
              q(null, vc);
            }
          }
          var w,
            y,
            z = {},
            A = void 0 === q && void 0 === v;
          if (
            ('function' != typeof q && ((y = q), (q = v = 0)),
            (v =
              v ||
              function (h) {
                void 0 !== y && postMessage({ action: 3, cbn: y, result: h });
              }),
            (q =
              q ||
              function (h, m) {
                return void 0 !== y
                  ? postMessage({ action: 1, cbn: y, result: h, error: m })
                  : void 0;
              }),
            A)
          ) {
            for (z.c = pa({}, kf(h), ta(m)); hb(z.c.yb); );
            return J(z.c.Nb);
          }
          try {
            ((z.c = pa({}, kf(h), ta(m))), v(0));
          } catch (Nc) {
            return q(null, Nc);
          }
          hc(r, 0);
        },
        decompress: function (h, m, q) {
          function r() {
            try {
              for (var h, w = 0, z = new Date().getTime(); hb(y.d.yb); )
                if (0 == ++w % 1e3 && 200 < new Date().getTime() - z)
                  return (C && ((v = Zb(y.d.yb.Z.g) / A), q(v)), hc(r, 0), 0);
              q(1);
              h = td(J(y.d.Nb));
              hc(m.bind(null, h), 0);
            } catch (xb) {
              m(null, xb);
            }
          }
          var v,
            w,
            y = {},
            z = void 0 === m && void 0 === q;
          if (
            ('function' != typeof m && ((w = m), (m = q = 0)),
            (q =
              q ||
              function (h) {
                void 0 !== w &&
                  postMessage({ action: 3, cbn: w, result: C ? h : -1 });
              }),
            (m =
              m ||
              function (h, m) {
                return void 0 !== w
                  ? postMessage({ action: 2, cbn: w, result: h, error: m })
                  : void 0;
              }),
            z)
          ) {
            for (y.d = Fb({}, h); hb(y.d.yb); );
            return td(J(y.d.Nb));
          }
          try {
            y.d = Fb({}, h);
            var A = Zb(y.d.Tb);
            var C = -1 < A;
            q(0);
          } catch ($c) {
            return m(null, $c);
          }
          hc(r, 0);
        },
      }
    );
  })();
  this.LZMA = this.LZMA_WORKER = e;
}
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var saveAs =
    saveAs ||
    (function (O) {
      if (
        !(
          'undefined' === typeof O ||
          ('undefined' !== typeof navigator &&
            /MSIE [1-9]\./.test(navigator.userAgent))
        )
      ) {
        var v = O.document.createElementNS('http://www.w3.org/1999/xhtml', 'a'),
          D = 'download' in v,
          H = /constructor/i.test(O.HTMLElement) || O.safari,
          A = /CriOS\/[\d]+/.test(navigator.userAgent),
          T = function (h) {
            (O.setImmediate || O.setTimeout)(function () {
              throw h;
            }, 0);
          },
          ha = function (h) {
            setTimeout(function () {
              'string' === typeof h
                ? (O.URL || O.webkitURL || O).revokeObjectURL(h)
                : h.remove();
            }, 4e4);
          },
          w = function (h) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
              h.type,
            )
              ? new Blob([String.fromCharCode(65279), h], { type: h.type })
              : h;
          },
          ea = function (h, m, K) {
            K || (h = w(h));
            var q = this,
              ea = 'application/octet-stream' === h.type,
              pa = function () {
                var h = ['writestart', 'progress', 'write', 'writeend'];
                h = [].concat(h);
                for (var m = h.length; m--; ) {
                  var v = q['on' + h[m]];
                  if ('function' === typeof v)
                    try {
                      v.call(q, q);
                    } catch (ka) {
                      T(ka);
                    }
                }
              };
            q.readyState = q.INIT;
            if (D) {
              var Fb = (O.URL || O.webkitURL || O).createObjectURL(h);
              setTimeout(function () {
                v.href = Fb;
                v.download = m;
                var h = new MouseEvent('click');
                v.dispatchEvent(h);
                pa();
                ha(Fb);
                q.readyState = q.DONE;
              });
            } else
              (function () {
                if ((A || (ea && H)) && O.FileReader) {
                  var m = new FileReader();
                  m.onloadend = function () {
                    var h = A
                      ? m.result
                      : m.result.replace(
                          /^data:[^;]*;/,
                          'data:attachment/file;',
                        );
                    O.open(h, '_blank') || (O.location.href = h);
                    q.readyState = q.DONE;
                    pa();
                  };
                  m.readAsDataURL(h);
                  q.readyState = q.INIT;
                } else
                  (Fb || (Fb = (O.URL || O.webkitURL || O).createObjectURL(h)),
                    ea
                      ? (O.location.href = Fb)
                      : O.open(Fb, '_blank') || (O.location.href = Fb),
                    (q.readyState = q.DONE),
                    pa(),
                    ha(Fb));
              })();
          },
          m = ea.prototype;
        if ('undefined' !== typeof navigator && navigator.msSaveOrOpenBlob)
          return function (h, m, v) {
            m = m || h.name || 'download';
            v || (h = w(h));
            return navigator.msSaveOrOpenBlob(h, m);
          };
        m.abort = function () {};
        m.readyState = m.INIT = 0;
        m.WRITING = 1;
        m.DONE = 2;
        m.error =
          m.onwritestart =
          m.onprogress =
          m.onwrite =
          m.onabort =
          m.onerror =
          m.onwriteend =
            null;
        return function (h, m, v) {
          return new ea(h, m || h.name || 'download', v);
        };
      }
    })(
      ('undefined' !== typeof self && self) ||
        ('undefined' !== typeof window && window) ||
        this.content,
    );
  'undefined' !== typeof module && module.exports
    ? (module.exports.saveAs = saveAs)
    : 'undefined' !== typeof define &&
      null !== define &&
      null !== define.amd &&
      define('FileSaver.js', function () {
        return saveAs;
      });
}
'function' === typeof define &&
  define.__amd &&
  ((define.amd = define.__amd), delete define.__amd);
