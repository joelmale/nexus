/*
 howler.js v2.2.4 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function (A) {
  var r = 0;
  return function () {
    return r < A.length ? { done: !1, value: A[r++] } : { done: !0 };
  };
};
$jscomp.arrayIterator = function (A) {
  return { next: $jscomp.arrayIteratorImpl(A) };
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || 'function' == typeof Object.defineProperties
    ? Object.defineProperty
    : function (A, r, y) {
        A != Array.prototype && A != Object.prototype && (A[r] = y.value);
      };
$jscomp.getGlobal = function (A) {
  A = [
    'object' == typeof window && window,
    'object' == typeof self && self,
    'object' == typeof global && global,
    A,
  ];
  for (var r = 0; r < A.length; ++r) {
    var y = A[r];
    if (y && y.Math == Math) return y;
  }
  throw Error('Cannot find global object');
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.SymbolClass = function (A, r) {
  this.$jscomp$symbol$id_ = A;
  $jscomp.defineProperty(this, 'description', {
    configurable: !0,
    writable: !0,
    value: r,
  });
};
$jscomp.SymbolClass.prototype.toString = function () {
  return this.$jscomp$symbol$id_;
};
$jscomp.Symbol = (function () {
  function A(y) {
    if (this instanceof A) throw new TypeError('Symbol is not a constructor');
    return new $jscomp.SymbolClass(
      $jscomp.SYMBOL_PREFIX + (y || '') + '_' + r++,
      y,
    );
  }
  var r = 0;
  return A;
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var A = $jscomp.global.Symbol.iterator;
  A ||
    (A = $jscomp.global.Symbol.iterator =
      $jscomp.global.Symbol('Symbol.iterator'));
  'function' != typeof Array.prototype[A] &&
    $jscomp.defineProperty(Array.prototype, A, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.initSymbolAsyncIterator = function () {
  $jscomp.initSymbol();
  var A = $jscomp.global.Symbol.asyncIterator;
  A ||
    (A = $jscomp.global.Symbol.asyncIterator =
      $jscomp.global.Symbol('Symbol.asyncIterator'));
  $jscomp.initSymbolAsyncIterator = function () {};
};
$jscomp.iteratorPrototype = function (A) {
  $jscomp.initSymbolIterator();
  A = { next: A };
  A[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return A;
};
$jscomp.iteratorFromArray = function (A, r) {
  $jscomp.initSymbolIterator();
  A instanceof String && (A += '');
  var y = 0,
    E = {
      next: function () {
        if (y < A.length) {
          var J = y++;
          return { value: r(J, A[J]), done: !1 };
        }
        E.next = function () {
          return { done: !0, value: void 0 };
        };
        return E.next();
      },
    };
  E[Symbol.iterator] = function () {
    return E;
  };
  return E;
};
$jscomp.polyfill = function (A, r, y, E) {
  if (r) {
    y = $jscomp.global;
    A = A.split('.');
    for (E = 0; E < A.length - 1; E++) {
      var J = A[E];
      J in y || (y[J] = {});
      y = y[J];
    }
    A = A[A.length - 1];
    E = y[A];
    r = r(E);
    r != E &&
      null != r &&
      $jscomp.defineProperty(y, A, {
        configurable: !0,
        writable: !0,
        value: r,
      });
  }
};
$jscomp.polyfill(
  'Array.prototype.keys',
  function (A) {
    return A
      ? A
      : function () {
          return $jscomp.iteratorFromArray(this, function (r) {
            return r;
          });
        };
  },
  'es6',
  'es3',
);
$jscomp.checkStringArgs = function (A, r, y) {
  if (null == A)
    throw new TypeError(
      "The 'this' value for String.prototype." +
        y +
        ' must not be null or undefined',
    );
  if (r instanceof RegExp)
    throw new TypeError(
      'First argument to String.prototype.' +
        y +
        ' must not be a regular expression',
    );
  return A + '';
};
$jscomp.polyfill(
  'String.prototype.endsWith',
  function (A) {
    return A
      ? A
      : function (r, y) {
          var E = $jscomp.checkStringArgs(this, r, 'endsWith');
          r += '';
          void 0 === y && (y = E.length);
          y = Math.max(0, Math.min(y | 0, E.length));
          for (var J = r.length; 0 < J && 0 < y; )
            if (E[--y] != r[--J]) return !1;
          return 0 >= J;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.fromCodePoint',
  function (A) {
    return A
      ? A
      : function (r) {
          for (var y = '', E = 0; E < arguments.length; E++) {
            var J = Number(arguments[E]);
            if (0 > J || 1114111 < J || J !== Math.floor(J))
              throw new RangeError('invalid_code_point ' + J);
            65535 >= J
              ? (y += String.fromCharCode(J))
              : ((J -= 65536),
                (y += String.fromCharCode(((J >>> 10) & 1023) | 55296)),
                (y += String.fromCharCode((J & 1023) | 56320)));
          }
          return y;
        };
  },
  'es6',
  'es3',
);
$jscomp.findInternal = function (A, r, y) {
  A instanceof String && (A = String(A));
  for (var E = A.length, J = 0; J < E; J++) {
    var Q = A[J];
    if (r.call(y, Q, J, A)) return { i: J, v: Q };
  }
  return { i: -1, v: void 0 };
};
$jscomp.polyfill(
  'Array.prototype.find',
  function (A) {
    return A
      ? A
      : function (r, y) {
          return $jscomp.findInternal(this, r, y).v;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.fill',
  function (A) {
    return A
      ? A
      : function (r, y, E) {
          var J = this.length || 0;
          0 > y && (y = Math.max(0, J + y));
          if (null == E || E > J) E = J;
          E = Number(E);
          0 > E && (E = Math.max(0, J + E));
          for (y = Number(y || 0); y < E; y++) this[y] = r;
          return this;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.values',
  function (A) {
    return A
      ? A
      : function () {
          return $jscomp.iteratorFromArray(this, function (r, y) {
            return y;
          });
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.startsWith',
  function (A) {
    return A
      ? A
      : function (r, y) {
          var E = $jscomp.checkStringArgs(this, r, 'startsWith');
          r += '';
          var J = E.length,
            A = r.length;
          y = Math.max(0, Math.min(y | 0, E.length));
          for (var Z = 0; Z < A && y < J; ) if (E[y++] != r[Z++]) return !1;
          return Z >= A;
        };
  },
  'es6',
  'es3',
);
$jscomp.underscoreProtoCanBeSet = function () {
  var A = { a: !0 },
    r = {};
  try {
    return ((r.__proto__ = A), r.a);
  } catch (y) {}
  return !1;
};
$jscomp.setPrototypeOf =
  'function' == typeof Object.setPrototypeOf
    ? Object.setPrototypeOf
    : $jscomp.underscoreProtoCanBeSet()
      ? function (A, r) {
          A.__proto__ = r;
          if (A.__proto__ !== r) throw new TypeError(A + ' is not extensible');
          return A;
        }
      : null;
$jscomp.polyfill(
  'Object.setPrototypeOf',
  function (A) {
    return A || $jscomp.setPrototypeOf;
  },
  'es6',
  'es5',
);
$jscomp.owns = function (A, r) {
  return Object.prototype.hasOwnProperty.call(A, r);
};
$jscomp.polyfill(
  'Object.values',
  function (A) {
    return A
      ? A
      : function (r) {
          var y = [],
            E;
          for (E in r) $jscomp.owns(r, E) && y.push(r[E]);
          return y;
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'Object.is',
  function (A) {
    return A
      ? A
      : function (r, y) {
          return r === y ? 0 !== r || 1 / r === 1 / y : r !== r && y !== y;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.includes',
  function (A) {
    return A
      ? A
      : function (r, y) {
          var E = this;
          E instanceof String && (E = String(E));
          var J = E.length;
          y = y || 0;
          for (0 > y && (y = Math.max(y + J, 0)); y < J; y++) {
            var A = E[y];
            if (A === r || Object.is(A, r)) return !0;
          }
          return !1;
        };
  },
  'es7',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.includes',
  function (A) {
    return A
      ? A
      : function (r, y) {
          return (
            -1 !==
            $jscomp.checkStringArgs(this, r, 'includes').indexOf(r, y || 0)
          );
        };
  },
  'es6',
  'es3',
);
var $lime_init = function (A, r) {
  var y = function (r, y) {
    (function (r, y) {
      function u(a, b) {
        a = Object.create(a);
        for (var c in b) a[c] = b[c];
        b.toString !== Object.prototype.toString && (a.toString = b.toString);
        return a;
      }
      function J(a) {
        return a instanceof Array ? new Fe(a) : a.iterator();
      }
      function l(a, b) {
        if (null == b) return null;
        null == b.__id__ && (b.__id__ = y.$haxeUID++);
        var c;
        null == a.hx__closures__
          ? (a.hx__closures__ = {})
          : (c = a.hx__closures__[b.__id__]);
        null == c && ((c = b.bind(a)), (a.hx__closures__[b.__id__] = c));
        return c;
      }
      r.lime = r.lime || {};
      var g = {},
        q = function () {
          return Ua.__string_rec(this, '');
        },
        F = F || {},
        H,
        Ea = function () {};
      g['lime.app.IModule'] = Ea;
      Ea.__name__ = 'lime.app.IModule';
      Ea.__isInterface__ = !0;
      Ea.prototype = { __class__: Ea };
      var N = function () {
        this.onExit = new Ge();
      };
      g['lime.app.Module'] = N;
      N.__name__ = 'lime.app.Module';
      N.__interfaces__ = [Ea];
      N.prototype = {
        __registerLimeModule: function (a) {},
        __unregisterLimeModule: function (a) {},
        __class__: N,
      };
      var E = function (a) {
        this.gameDeviceCache = new ac();
        this.parent = a;
        this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
        this.framePeriod = -1;
        Ud.init();
        this.accelerometer = Vd.registerSensor(Uj.ACCELEROMETER, 0);
      };
      g['lime._internal.backend.html5.HTML5Application'] = E;
      E.__name__ = 'lime._internal.backend.html5.HTML5Application';
      E.prototype = {
        convertKeyCode: function (a) {
          if (65 <= a && 90 >= a) return a + 32;
          switch (a) {
            case 12:
              return 1073741980;
            case 16:
              return 1073742049;
            case 17:
              return 1073742048;
            case 18:
              return 1073742050;
            case 19:
              return 1073741896;
            case 20:
              return 1073741881;
            case 33:
              return 1073741899;
            case 34:
              return 1073741902;
            case 35:
              return 1073741901;
            case 36:
              return 1073741898;
            case 37:
              return 1073741904;
            case 38:
              return 1073741906;
            case 39:
              return 1073741903;
            case 40:
              return 1073741905;
            case 41:
              return 1073741943;
            case 43:
              return 1073741940;
            case 44:
              return 1073741894;
            case 45:
              return 1073741897;
            case 46:
              return 127;
            case 91:
              return 1073742051;
            case 92:
              return 1073742055;
            case 93:
              return 1073742055;
            case 95:
              return 1073742106;
            case 96:
              return 1073741922;
            case 97:
              return 1073741913;
            case 98:
              return 1073741914;
            case 99:
              return 1073741915;
            case 100:
              return 1073741916;
            case 101:
              return 1073741917;
            case 102:
              return 1073741918;
            case 103:
              return 1073741919;
            case 104:
              return 1073741920;
            case 105:
              return 1073741921;
            case 106:
              return 1073741909;
            case 107:
              return 1073741911;
            case 108:
              return 1073741923;
            case 109:
              return 1073741910;
            case 110:
              return 1073741923;
            case 111:
              return 1073741908;
            case 112:
              return 1073741882;
            case 113:
              return 1073741883;
            case 114:
              return 1073741884;
            case 115:
              return 1073741885;
            case 116:
              return 1073741886;
            case 117:
              return 1073741887;
            case 118:
              return 1073741888;
            case 119:
              return 1073741889;
            case 120:
              return 1073741890;
            case 121:
              return 1073741891;
            case 122:
              return 1073741892;
            case 123:
              return 1073741893;
            case 124:
              return 1073741928;
            case 125:
              return 1073741929;
            case 126:
              return 1073741930;
            case 127:
              return 1073741931;
            case 128:
              return 1073741932;
            case 129:
              return 1073741933;
            case 130:
              return 1073741934;
            case 131:
              return 1073741935;
            case 132:
              return 1073741936;
            case 133:
              return 1073741937;
            case 134:
              return 1073741938;
            case 135:
              return 1073741939;
            case 144:
              return 1073741907;
            case 145:
              return 1073741895;
            case 160:
              return 94;
            case 161:
              return 33;
            case 163:
              return 35;
            case 164:
              return 36;
            case 166:
              return 1073742094;
            case 167:
              return 1073742095;
            case 168:
              return 1073742097;
            case 169:
              return 41;
            case 170:
              return 42;
            case 171:
              return 96;
            case 172:
              return 1073741898;
            case 173:
              return 45;
            case 174:
              return 1073741953;
            case 175:
              return 1073741952;
            case 176:
              return 1073742082;
            case 177:
              return 1073742083;
            case 178:
              return 1073742084;
            case 179:
              return 1073742085;
            case 180:
              return 1073742089;
            case 181:
              return 1073742086;
            case 182:
              return 1073741953;
            case 183:
              return 1073741952;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 193:
              return 63;
            case 194:
              return 1073741923;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
            case 223:
              return 96;
            case 224:
              return 1073742051;
            case 226:
              return 92;
          }
          return a;
        },
        exec: function () {
          window.addEventListener('keydown', l(this, this.handleKeyEvent), !1);
          window.addEventListener('keyup', l(this, this.handleKeyEvent), !1);
          window.addEventListener('focus', l(this, this.handleWindowEvent), !1);
          window.addEventListener('blur', l(this, this.handleWindowEvent), !1);
          window.addEventListener(
            'resize',
            l(this, this.handleWindowEvent),
            !1,
          );
          window.addEventListener(
            'beforeunload',
            l(this, this.handleWindowEvent),
            !1,
          );
          Object.prototype.hasOwnProperty.call(window, 'Accelerometer') &&
            window.addEventListener(
              'devicemotion',
              l(this, this.handleSensorEvent),
              !1,
            );
          CanvasRenderingContext2D.prototype.isPointInStroke ||
            (CanvasRenderingContext2D.prototype.isPointInStroke = function (
              a,
              b,
              c,
            ) {
              return !1;
            });
          CanvasRenderingContext2D.prototype.isPointInPath ||
            (CanvasRenderingContext2D.prototype.isPointInPath = function (
              a,
              b,
              c,
            ) {
              return !1;
            });
          0 == 'performance' in window && (window.performance = {});
          if (0 == 'now' in window.performance) {
            var a = Date.now();
            performance.timing &&
              performance.timing.navigationStart &&
              (a = performance.timing.navigationStart);
            window.performance.now = function () {
              return Date.now() - a;
            };
          }
          for (
            var b = 0, c = ['ms', 'moz', 'webkit', 'o'], d = 0;
            d < c.length && !window.requestAnimationFrame;
            ++d
          )
            ((window.requestAnimationFrame =
              window[c[d] + 'RequestAnimationFrame']),
              (window.cancelAnimationFrame =
                window[c[d] + 'CancelAnimationFrame'] ||
                window[c[d] + 'CancelRequestAnimationFrame']));
          window.requestAnimationFrame ||
            (window.requestAnimationFrame = function (a, c) {
              var d = window.performance.now(),
                f = Math.max(0, 16 - (d - b));
              c = window.setTimeout(function () {
                a(d + f);
              }, f);
              b = d + f;
              return c;
            });
          window.cancelAnimationFrame ||
            (window.cancelAnimationFrame = function (a) {
              clearTimeout(a);
            });
          window.requestAnimFrame = window.requestAnimationFrame;
          this.lastUpdate = window.performance.now();
          this.handleApplicationEvent();
          return 0;
        },
        exit: function () {},
        handleApplicationEvent: function (a) {
          a = 0;
          for (var b = this.parent.__windows; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__backend.updateSize();
          }
          this.updateGameDevices();
          this.currentUpdate = window.performance.now();
          if (this.currentUpdate >= this.nextUpdate) {
            this.deltaTime = this.currentUpdate - this.lastUpdate;
            a = 0;
            for (b = this.parent.__windows; a < b.length; )
              ((c = b[a]),
                ++a,
                this.parent.onUpdate.dispatch(this.deltaTime | 0),
                null != c.context && c.onRender.dispatch(c.context));
            this.nextUpdate =
              0 > this.framePeriod
                ? this.currentUpdate
                : this.currentUpdate -
                  (this.currentUpdate % this.framePeriod) +
                  this.framePeriod;
            this.lastUpdate = this.currentUpdate;
          }
          window.requestAnimationFrame(l(this, this.handleApplicationEvent));
        },
        handleKeyEvent: function (a) {
          if (null != this.parent.__window) {
            var b = this.convertKeyCode(
                null != a.keyCode ? a.keyCode : a.which,
              ),
              c =
                (a.shiftKey ? 3 : 0) |
                (a.ctrlKey ? 192 : 0) |
                (a.altKey ? 768 : 0) |
                (a.metaKey ? 3072 : 0);
            'keydown' == a.type
              ? (this.parent.__window.onKeyDown.dispatch(b, c),
                this.parent.__window.onKeyDown.canceled &&
                  a.cancelable &&
                  a.preventDefault())
              : (this.parent.__window.onKeyUp.dispatch(b, c),
                this.parent.__window.onKeyUp.canceled &&
                  a.cancelable &&
                  a.preventDefault());
          }
        },
        handleSensorEvent: function (a) {
          this.accelerometer.onUpdate.dispatch(
            a.accelerationIncludingGravity.x,
            a.accelerationIncludingGravity.y,
            a.accelerationIncludingGravity.z,
          );
        },
        handleWindowEvent: function (a) {
          if (null != this.parent.__window)
            switch (a.type) {
              case 'blur':
                this.hidden ||
                  (this.parent.__window.onFocusOut.dispatch(),
                  this.parent.__window.onDeactivate.dispatch(),
                  (this.hidden = !0));
                break;
              case 'focus':
                this.hidden &&
                  (this.parent.__window.onFocusIn.dispatch(),
                  this.parent.__window.onActivate.dispatch(),
                  (this.hidden = !1));
                break;
              case 'resize':
                this.parent.__window.__backend.handleResizeEvent(a);
                break;
              case 'visibilitychange':
                window.document.hidden
                  ? this.hidden ||
                    (this.parent.__window.onFocusOut.dispatch(),
                    this.parent.__window.onDeactivate.dispatch(),
                    (this.hidden = !0))
                  : this.hidden &&
                    (this.parent.__window.onFocusIn.dispatch(),
                    this.parent.__window.onActivate.dispatch(),
                    (this.hidden = !1));
            }
        },
        updateGameDevices: function () {
          var a = bc.__getDeviceData();
          if (null != a)
            for (var b, c, d, f, h, k = 0, v = a.length; k < v; )
              if (((b = k++), (f = a[b]), null != f)) {
                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                  h = new wi();
                  h.id = b;
                  h.connected = f.connected;
                  c = 0;
                  for (d = f.buttons.length; c < d; ) {
                    var p = c++;
                    h.buttons.push(f.buttons[p].value);
                  }
                  c = 0;
                  for (d = f.axes.length; c < d; )
                    ((p = c++), h.axes.push(f.axes[p]));
                  'standard' == f.mapping && (h.isGamepad = !0);
                  this.gameDeviceCache.h[b] = h;
                  f.connected &&
                    (bc.__connect(b), h.isGamepad && fc.__connect(b));
                }
                h = this.gameDeviceCache.h[b];
                d = bc.devices.h[b];
                c = fc.devices.h[b];
                if (f.connected) {
                  for (var g = 0, t = f.buttons.length; g < t; ) {
                    var m = g++;
                    p = f.buttons[m].value;
                    if (p != h.buttons[m]) {
                      if (6 == m)
                        (d.onAxisMove.dispatch(f.axes.length, p),
                          null != c && c.onAxisMove.dispatch(4, p));
                      else if (7 == m)
                        (d.onAxisMove.dispatch(f.axes.length + 1, p),
                          null != c && c.onAxisMove.dispatch(5, p));
                      else if (
                        (0 < p
                          ? d.onButtonDown.dispatch(m)
                          : d.onButtonUp.dispatch(m),
                        null != c)
                      ) {
                        switch (m) {
                          case 0:
                            b = 0;
                            break;
                          case 1:
                            b = 1;
                            break;
                          case 2:
                            b = 2;
                            break;
                          case 3:
                            b = 3;
                            break;
                          case 4:
                            b = 9;
                            break;
                          case 5:
                            b = 10;
                            break;
                          case 8:
                            b = 4;
                            break;
                          case 9:
                            b = 6;
                            break;
                          case 10:
                            b = 7;
                            break;
                          case 11:
                            b = 8;
                            break;
                          case 12:
                            b = 11;
                            break;
                          case 13:
                            b = 12;
                            break;
                          case 14:
                            b = 13;
                            break;
                          case 15:
                            b = 14;
                            break;
                          case 16:
                            b = 5;
                            break;
                          default:
                            continue;
                        }
                        0 < p
                          ? c.onButtonDown.dispatch(b)
                          : c.onButtonUp.dispatch(b);
                      }
                      h.buttons[m] = p;
                    }
                  }
                  b = 0;
                  for (p = f.axes.length; b < p; )
                    ((g = b++),
                      f.axes[g] != h.axes[g] &&
                        (d.onAxisMove.dispatch(g, f.axes[g]),
                        null != c && c.onAxisMove.dispatch(g, f.axes[g]),
                        (h.axes[g] = f.axes[g])));
                } else
                  h.connected &&
                    ((h.connected = !1),
                    bc.__disconnect(b),
                    fc.__disconnect(b));
              }
        },
        __class__: E,
      };
      var A = function () {
        this.onCreateWindow = new xi();
        this.onUpdate = new Ge();
        this.onExit = new Ge();
        null == A.current && (A.current = this);
        this.meta = new Ia();
        this.modules = [];
        this.__windowByID = new ac();
        this.__windows = [];
        this.__backend = new E(this);
        this.__registerLimeModule(this);
        this.__preloader = new yi();
        this.__preloader.onProgress.add(l(this, this.onPreloadProgress));
        this.__preloader.onComplete.add(l(this, this.onPreloadComplete));
      };
      g['lime.app.Application'] = A;
      A.__name__ = 'lime.app.Application';
      A.__super__ = N;
      A.prototype = u(N.prototype, {
        addModule: function (a) {
          a.__registerLimeModule(this);
          this.modules.push(a);
        },
        exec: function () {
          A.current = this;
          return this.__backend.exec();
        },
        onGamepadAxisMove: function (a, b, c) {},
        onGamepadButtonDown: function (a, b) {},
        onGamepadButtonUp: function (a, b) {},
        onGamepadConnect: function (a) {},
        onGamepadDisconnect: function (a) {},
        onJoystickAxisMove: function (a, b, c) {},
        onJoystickButtonDown: function (a, b) {},
        onJoystickButtonUp: function (a, b) {},
        onJoystickConnect: function (a) {},
        onJoystickDisconnect: function (a) {},
        onJoystickHatMove: function (a, b, c) {},
        onKeyDown: function (a, b) {},
        onKeyUp: function (a, b) {},
        onModuleExit: function (a) {},
        onMouseDown: function (a, b, c) {},
        onMouseMove: function (a, b) {},
        onMouseMoveRelative: function (a, b) {},
        onMouseUp: function (a, b, c) {},
        onMouseWheel: function (a, b, c) {},
        onPreloadComplete: function () {},
        onPreloadProgress: function (a, b) {},
        onRenderContextLost: function () {},
        onRenderContextRestored: function (a) {},
        onTextEdit: function (a, b, c) {},
        onTextInput: function (a) {},
        onTouchCancel: function (a) {},
        onTouchEnd: function (a) {},
        onTouchMove: function (a) {},
        onTouchStart: function (a) {},
        onWindowActivate: function () {},
        onWindowClose: function () {},
        onWindowCreate: function () {},
        onWindowDeactivate: function () {},
        onWindowDropFile: function (a) {},
        onWindowEnter: function () {},
        onWindowExpose: function () {},
        onWindowFocusIn: function () {},
        onWindowFocusOut: function () {},
        onWindowFullscreen: function () {},
        onWindowLeave: function () {},
        onWindowMove: function (a, b) {},
        onWindowMinimize: function () {},
        onWindowResize: function (a, b) {},
        onWindowRestore: function () {},
        removeModule: function (a) {
          null != a &&
            (a.__unregisterLimeModule(this), O.remove(this.modules, a));
        },
        render: function (a) {},
        update: function (a) {},
        __registerLimeModule: function (a) {
          a.onUpdate.add(l(this, this.update));
          a.onExit.add(l(this, this.onModuleExit), !1, 0);
          a.onExit.add(l(this, this.__onModuleExit), !1, -1e3);
          for (a = fc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onGamepadConnect(b);
          }
          fc.onConnect.add(l(this, this.__onGamepadConnect));
          for (a = bc.devices.iterator(); a.hasNext(); )
            ((b = a.next()), this.__onJoystickConnect(b));
          bc.onConnect.add(l(this, this.__onJoystickConnect));
          Tb.onCancel.add(l(this, this.onTouchCancel));
          Tb.onStart.add(l(this, this.onTouchStart));
          Tb.onMove.add(l(this, this.onTouchMove));
          Tb.onEnd.add(l(this, this.onTouchEnd));
        },
        __removeWindow: function (a) {
          null != a &&
            this.__windowByID.h.hasOwnProperty(a.id) &&
            (this.__window == a && (this.__window = null),
            O.remove(this.__windows, a),
            this.__windowByID.remove(a.id),
            a.close(),
            this.__checkForAllWindowsClosed());
        },
        __checkForAllWindowsClosed: function () {
          0 == this.__windows.length && pc.exit(0);
        },
        __onGamepadConnect: function (a) {
          this.onGamepadConnect(a);
          var b = this,
            c = function (c, d) {
              b.onGamepadAxisMove(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = this;
          c = function (b) {
            d.onGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(c);
          var f = this;
          c = function (b) {
            f.onGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(c);
          var h = this;
          a.onDisconnect.add(function () {
            h.onGamepadDisconnect(a);
          });
        },
        __onJoystickConnect: function (a) {
          this.onJoystickConnect(a);
          var b = this,
            c = function (c, d) {
              b.onJoystickAxisMove(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = this;
          c = function (b) {
            d.onJoystickButtonDown(a, b);
          };
          a.onButtonDown.add(c);
          var f = this;
          c = function (b) {
            f.onJoystickButtonUp(a, b);
          };
          a.onButtonUp.add(c);
          var h = this;
          a.onDisconnect.add(function () {
            h.onJoystickDisconnect(a);
          });
          var k = this;
          c = function (b, c) {
            k.onJoystickHatMove(a, b, c);
          };
          a.onHatMove.add(c);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (this.__unregisterLimeModule(this),
            this.__backend.exit(),
            A.current == this && (A.current = null));
        },
        __onWindowClose: function (a) {
          if (this.__window == a) this.onWindowClose();
          this.__removeWindow(a);
        },
        __unregisterLimeModule: function (a) {
          a.onUpdate.remove(l(this, this.update));
          a.onExit.remove(l(this, this.__onModuleExit));
          a.onExit.remove(l(this, this.onModuleExit));
          fc.onConnect.remove(l(this, this.__onGamepadConnect));
          bc.onConnect.remove(l(this, this.__onJoystickConnect));
          Tb.onCancel.remove(l(this, this.onTouchCancel));
          Tb.onStart.remove(l(this, this.onTouchStart));
          Tb.onMove.remove(l(this, this.onTouchMove));
          Tb.onEnd.remove(l(this, this.onTouchEnd));
        },
        __class__: A,
      });
      var Z = function () {};
      g.ApplicationMain = Z;
      Z.__name__ = 'ApplicationMain';
      Z.main = function () {
        pc.__registerEntryPoint('Cave', Z.create);
      };
      Z.create = function (a) {
        var b = new Rf();
        jb.init(a);
        b.meta.h.build = '1180';
        b.meta.h.company = 'Retronic Games';
        b.meta.h.file = 'Cave';
        b.meta.h.name = 'Cave Generator';
        b.meta.h.packageName = 'com.watabou.cave';
        b.meta.h.version = '2.1.5';
        var c = {
          allowHighDPI: !0,
          alwaysOnTop: !1,
          borderless: !1,
          element: null,
          frameRate: 60,
          height: 0,
          hidden: !1,
          maximized: !1,
          minimized: !1,
          parameters: {},
          resizable: !0,
          title: 'Cave Generator',
          width: 0,
          x: null,
          y: null,
          context: {
            antialiasing: 4,
            background: 2236962,
            colorDepth: 32,
            depth: !0,
            hardware: !0,
            stencil: !0,
            type: null,
            vsync: !0,
          },
        };
        if (null == b.__window && null != a)
          for (var d = 0, f = ya.fields(a); d < f.length; ) {
            var h = f[d];
            ++d;
            Object.prototype.hasOwnProperty.call(c, h)
              ? (c[h] = ya.field(a, h))
              : Object.prototype.hasOwnProperty.call(c.context, h) &&
                (c.context[h] = ya.field(a, h));
          }
        b.createWindow(c);
        var k = new Ig(new Sf());
        b.__preloader.onProgress.add(function (a, b) {
          k.update(a, b);
        });
        b.__preloader.onComplete.add(function () {
          k.start();
        });
        var v = b.__window.stage;
        k.onComplete.add(function () {
          Z.start(v);
        });
        d = 0;
        for (f = jb.preloadLibraries; d < f.length; )
          ((a = f[d]), ++d, b.__preloader.addLibrary(a));
        d = 0;
        for (f = jb.preloadLibraryNames; d < f.length; )
          ((a = f[d]), ++d, b.__preloader.addLibraryName(a));
        b.__preloader.load();
        b.exec();
      };
      Z.start = function (a) {
        if (a.__uncaughtErrorEvents.__enabled)
          try {
            var b = a.getChildAt(0);
            (null != b && b instanceof hb) || ((b = new He()), a.addChild(b));
            new Gb(b);
            a.dispatchEvent(new va('resize', !1, !1));
            a.window.__fullscreen &&
              a.dispatchEvent(new ke('fullScreen', !1, !1, !0, !0));
          } catch (c) {
            ((Qa.lastError = c),
              (b = W.caught(c).unwrap()),
              a.__handleError(b));
          }
        else
          ((b = a.getChildAt(0)),
            (null != b && b instanceof hb) || ((b = new He()), a.addChild(b)),
            new Gb(b),
            a.dispatchEvent(new va('resize', !1, !1)),
            a.window.__fullscreen &&
              a.dispatchEvent(new ke('fullScreen', !1, !1, !0, !0)));
      };
      var Q = function () {};
      g['openfl.events.IEventDispatcher'] = Q;
      Q.__name__ = 'openfl.events.IEventDispatcher';
      Q.__isInterface__ = !0;
      var ma = function (a) {
        null != a && (this.__targetDispatcher = a);
      };
      g['openfl.events.EventDispatcher'] = ma;
      ma.__name__ = 'openfl.events.EventDispatcher';
      ma.__interfaces__ = [Q];
      ma.prototype = {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          if (null != b)
            if (
              (null == this.__eventMap &&
                ((this.__eventMap = new Ia()), (this.__iterators = new Ia())),
              Object.prototype.hasOwnProperty.call(this.__eventMap.h, a))
            ) {
              p = this.__eventMap.h[a];
              for (var h = 0, k = p.length; h < k; ) {
                var v = h++;
                if (p[v].match(b, c)) return;
              }
              a = this.__iterators.h[a];
              for (h = 0; h < a.length; )
                ((k = a[h]), ++h, k.active && k.copy());
              this.__addListenerByPriority(p, new Ie(b, c, d, f));
            } else {
              var p = [];
              p.push(new Ie(b, c, d, f));
              k = new Tf(p);
              this.__eventMap.h[a] = p;
              this.__iterators.h[a] = [k];
            }
        },
        dispatchEvent: function (a) {
          a.target =
            null != this.__targetDispatcher ? this.__targetDispatcher : this;
          return this.__dispatchEvent(a);
        },
        hasEventListener: function (a) {
          return null == this.__eventMap
            ? !1
            : Object.prototype.hasOwnProperty.call(this.__eventMap.h, a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          if (null != this.__eventMap && null != b) {
            var d = this.__eventMap.h[a];
            if (null != d) {
              for (
                var f = this.__iterators.h[a], h = 0, k = d.length;
                h < k;

              ) {
                var v = h++;
                if (d[v].match(b, c)) {
                  for (b = 0; b < f.length; )
                    ((c = f[b]), ++b, c.remove(d[v], v));
                  d.splice(v, 1);
                  break;
                }
              }
              0 == d.length &&
                ((d = this.__eventMap),
                (f = a),
                Object.prototype.hasOwnProperty.call(d.h, f) && delete d.h[f],
                (d = this.__iterators),
                (f = a),
                Object.prototype.hasOwnProperty.call(d.h, f) && delete d.h[f]);
              0 >= Object.keys(this.__eventMap.h).length &&
                (this.__iterators = this.__eventMap = null);
            }
          }
        },
        __dispatchEvent: function (a) {
          if (null == this.__eventMap || null == a) return !0;
          var b = a.type,
            c = this.__eventMap.h[b];
          if (null == c) return !0;
          null == a.target &&
            (a.target =
              null != this.__targetDispatcher ? this.__targetDispatcher : this);
          a.currentTarget = this;
          var d = 1 == a.eventPhase;
          b = this.__iterators.h[b];
          var f = b[0];
          f.active && ((f = new Tf(c)), b.push(f));
          f.start();
          for (var h = f; h.hasNext(); ) {
            var k = h.next();
            if (null != k && k.useCapture == d) {
              if (k.useWeakReference && null != k.weakRefCallback) {
                var v = k.weakRefCallback.deref();
                if (null == v)
                  ((v = f.index - 1), c.splice(v, 1), f.remove(k, v));
                else if (
                  null != Ja.get_current() &&
                  null != Ja.get_current().stage &&
                  Ja.get_current().stage.__uncaughtErrorEvents.__enabled
                )
                  try {
                    v(a);
                  } catch (p) {
                    ((Qa.lastError = p),
                      (k = W.caught(p).unwrap()),
                      a instanceof cf ||
                        Ja.get_current().stage.__handleError(k));
                  }
                else v(a);
              } else if (
                null != Ja.get_current() &&
                null != Ja.get_current().stage &&
                Ja.get_current().stage.__uncaughtErrorEvents.__enabled
              )
                try {
                  k.callback(a);
                } catch (p) {
                  ((Qa.lastError = p),
                    (k = W.caught(p).unwrap()),
                    a instanceof cf || Ja.get_current().stage.__handleError(k));
                }
              else k.callback(a);
              if (a.__isCanceledNow) break;
            }
          }
          f.stop();
          f != b[0] ? O.remove(b, f) : f.reset(c);
          return !a.isDefaultPrevented();
        },
        __addListenerByPriority: function (a, b) {
          for (var c = a.length, d = c, f = 0; f < c; ) {
            var h = f++;
            if (a[h].priority < b.priority) {
              d = h;
              break;
            }
          }
          a.splice(d, 0, b);
        },
        __class__: ma,
      };
      var $a = function () {};
      g['openfl.display.IBitmapDrawable'] = $a;
      $a.__name__ = 'openfl.display.IBitmapDrawable';
      $a.__isInterface__ = !0;
      $a.prototype = { __class__: $a };
      var X = {
          toIntVector: function (a, b, c, d) {
            return new Uf(b, c, d);
          },
          toFloatVector: function (a, b, c, d) {
            return new Wd(b, c, d, !0);
          },
          toObjectVector: function (a, b, c, d) {
            return new df(b, c, d, !0);
          },
        },
        pb = function (a, b, c) {
          this.__pool = new na();
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList = new Ya();
          null != a && (this.create = a);
          null != b && (this.clean = b);
          null != c && this.set_size(c);
        };
      g['lime.utils.ObjectPool'] = pb;
      pb.__name__ = 'lime.utils.ObjectPool';
      pb.prototype = {
        clean: function (a) {},
        create: function () {
          return null;
        },
        get: function () {
          var a = null;
          if (0 < this.inactiveObjects)
            (null != this.__inactiveObject0
              ? ((a = this.__inactiveObject0), (this.__inactiveObject0 = null))
              : null != this.__inactiveObject1
                ? ((a = this.__inactiveObject1),
                  (this.__inactiveObject1 = null))
                : ((a = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject1 = this.__inactiveObjectList.pop())),
              this.inactiveObjects--,
              this.activeObjects++);
          else if (null == this.__size || this.activeObjects < this.__size)
            ((a = this.create()),
              null != a && (this.__pool.set(a, !0), this.activeObjects++));
          return a;
        },
        release: function (a) {
          this.activeObjects--;
          null == this.__size ||
          this.activeObjects + this.inactiveObjects < this.__size
            ? (this.clean(a),
              null == this.__inactiveObject0
                ? (this.__inactiveObject0 = a)
                : null == this.__inactiveObject1
                  ? (this.__inactiveObject1 = a)
                  : this.__inactiveObjectList.add(a),
              this.inactiveObjects++)
            : this.__pool.remove(a);
        },
        __removeInactive: function (a) {
          if (
            !(0 >= a || 0 == this.inactiveObjects) &&
            (null != this.__inactiveObject0 &&
              (this.__pool.remove(this.__inactiveObject0),
              (this.__inactiveObject0 = null),
              this.inactiveObjects--,
              --a),
            0 != a &&
              0 != this.inactiveObjects &&
              (null != this.__inactiveObject1 &&
                (this.__pool.remove(this.__inactiveObject1),
                (this.__inactiveObject1 = null),
                this.inactiveObjects--,
                --a),
              0 != a && 0 != this.inactiveObjects))
          )
            for (var b = this.__inactiveObjectList.h; null != b; ) {
              var c = b.item;
              b = b.next;
              this.__pool.remove(c);
              this.__inactiveObjectList.remove(c);
              this.inactiveObjects--;
              --a;
              if (0 == a || 0 == this.inactiveObjects) break;
            }
        },
        set_size: function (a) {
          if (null == a) this.__size = null;
          else {
            var b = this.inactiveObjects + this.activeObjects;
            this.__size = a;
            if (b > a) this.__removeInactive(b - a);
            else if (a > b)
              for (var c = 0, d = a - b; c < d; )
                if ((c++, (b = this.create()), null != b))
                  (this.__pool.set(b, !1),
                    this.__inactiveObjectList.add(b),
                    this.inactiveObjects++);
                else break;
          }
          return a;
        },
        __class__: pb,
        __properties__: { set_size: 'set_size' },
      };
      var ka = function () {};
      g['haxe.IMap'] = ka;
      ka.__name__ = 'haxe.IMap';
      ka.__isInterface__ = !0;
      ka.prototype = { __class__: ka };
      var na = function () {
        this.h = { __keys__: {} };
      };
      g['haxe.ds.ObjectMap'] = na;
      na.__name__ = 'haxe.ds.ObjectMap';
      na.__interfaces__ = [ka];
      na.prototype = {
        set: function (a, b) {
          var c = a.__id__;
          null == c && (c = a.__id__ = y.$haxeUID++);
          this.h[c] = b;
          this.h.__keys__[c] = a;
        },
        get: function (a) {
          return this.h[a.__id__];
        },
        remove: function (a) {
          a = a.__id__;
          if (null == this.h.__keys__[a]) return !1;
          delete this.h[a];
          delete this.h.__keys__[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h.__keys__)
            this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
          return new Fe(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a.__id__];
            },
          };
        },
        copy: function () {
          for (var a = new na(), b = this.keys(); b.hasNext(); ) {
            var c = b.next();
            a.set(c, this.h[c.__id__]);
          }
          return a;
        },
        __class__: na,
      };
      var Ya = function () {
        this.length = 0;
      };
      g['haxe.ds.List'] = Ya;
      Ya.__name__ = 'haxe.ds.List';
      Ya.prototype = {
        add: function (a) {
          a = new Jg(a, null);
          null == this.h ? (this.h = a) : (this.q.next = a);
          this.q = a;
          this.length++;
        },
        push: function (a) {
          this.h = a = new Jg(a, this.h);
          null == this.q && (this.q = a);
          this.length++;
        },
        pop: function () {
          if (null == this.h) return null;
          var a = this.h.item;
          this.h = this.h.next;
          null == this.h && (this.q = null);
          this.length--;
          return a;
        },
        isEmpty: function () {
          return null == this.h;
        },
        clear: function () {
          this.q = this.h = null;
          this.length = 0;
        },
        remove: function (a) {
          for (var b = null, c = this.h; null != c; ) {
            if (c.item == a)
              return (
                null == b ? (this.h = c.next) : (b.next = c.next),
                this.q == c && (this.q = b),
                this.length--,
                !0
              );
            b = c;
            c = c.next;
          }
          return !1;
        },
        iterator: function () {
          return new zi(this.h);
        },
        __class__: Ya,
      };
      var S = function () {
        ma.call(this);
        this.__alpha = this.__drawableType = 1;
        this.__blendMode = 10;
        this.__cacheAsBitmap = !1;
        this.__transform = new wa();
        this.__visible = !0;
        this.__rotationSine = this.__rotation = 0;
        this.__worldAlpha =
          this.__scaleY =
          this.__scaleX =
          this.__rotationCosine =
            1;
        this.__worldBlendMode = 10;
        this.__worldTransform = new wa();
        this.__worldColorTransform = new Hb();
        this.__renderTransform = new wa();
        this.__worldVisible = !0;
        this.set_name('instance' + ++S.__instanceCount);
        null != S.__initStage &&
          ((this.stage = S.__initStage),
          (S.__initStage = null),
          this.stage.addChild(this));
      };
      g['openfl.display.DisplayObject'] = S;
      S.__name__ = 'openfl.display.DisplayObject';
      S.__interfaces__ = [$a];
      S.__super__ = ma;
      S.prototype = u(ma.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              Object.prototype.hasOwnProperty.call(S.__broadcastEvents.h, a) ||
                (S.__broadcastEvents.h[a] = []);
              var h = S.__broadcastEvents.h[a];
              -1 == h.indexOf(this) && h.push(this);
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              null == this.__customRenderEvent &&
                ((this.__customRenderEvent = new Kg(null)),
                (this.__customRenderEvent.objectColorTransform = new Hb()),
                (this.__customRenderEvent.objectMatrix = new wa()),
                (this.__customRenderClear = !0));
          }
          ma.prototype.addEventListener.call(this, a, b, c, d, f);
        },
        dispatchEvent: function (a) {
          if (a instanceof Cb) {
            var b = this.__getRenderTransform();
            a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
            b = this.__getRenderTransform();
            a.stageY = a.localX * b.b + a.localY * b.d + b.ty;
          } else
            a instanceof rd &&
              ((b = this.__getRenderTransform()),
              (a.stageX = a.localX * b.a + a.localY * b.c + b.tx),
              (b = this.__getRenderTransform()),
              (a.stageY = a.localX * b.b + a.localY * b.d + b.ty));
          a.target = this;
          return this.__dispatchWithCapture(a);
        },
        getBounds: function (a) {
          var b = wa.__pool.get();
          if (null != a && a != this) {
            b.copyFrom(this.__getWorldTransform());
            var c = wa.__pool.get();
            c.copyFrom(a.__getWorldTransform());
            c.invert();
            b.concat(c);
            wa.__pool.release(c);
          } else b.identity();
          a = new qa();
          this.__getBounds(a, b);
          wa.__pool.release(b);
          return a;
        },
        globalToLocal: function (a) {
          return this.__globalToLocal(a, new K());
        },
        hitTestPoint: function (a, b, c) {
          null == c && (c = !1);
          return null != this.stage
            ? this.__hitTest(a, b, c, null, !1, this)
            : !1;
        },
        localToGlobal: function (a) {
          return this.__getRenderTransform().transformPoint(a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          ma.prototype.removeEventListener.call(this, a, b, c);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              this.hasEventListener(a) ||
                (Object.prototype.hasOwnProperty.call(
                  S.__broadcastEvents.h,
                  a,
                ) &&
                  O.remove(S.__broadcastEvents.h[a], this));
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              this.hasEventListener('clearDOM') ||
                this.hasEventListener('renderCairo') ||
                this.hasEventListener('renderCanvas') ||
                this.hasEventListener('renderDOM') ||
                this.hasEventListener('renderOpenGL') ||
                (this.__customRenderEvent = null);
          }
        },
        __cleanup: function () {
          this.__context = this.__canvas = this.__cairo = null;
          null != this.__graphics && this.__graphics.__cleanup();
          null != this.__cacheBitmap &&
            (this.__cacheBitmap.__cleanup(), (this.__cacheBitmap = null));
          null != this.__cacheBitmapData &&
            (this.__cacheBitmapData.dispose(), (this.__cacheBitmapData = null));
        },
        __dispatch: function (a) {
          if (null != this.__eventMap && this.hasEventListener(a.type)) {
            var b = ma.prototype.__dispatchEvent.call(this, a);
            return a.__isCanceled ? !0 : b;
          }
          return !0;
        },
        __dispatchChildren: function (a) {},
        __dispatchEvent: function (a) {
          var b = a.bubbles ? this.parent : null,
            c = ma.prototype.__dispatchEvent.call(this, a);
          if (a.__isCanceled) return !0;
          null != b &&
            b != this &&
            ((a.eventPhase = 3),
            null == a.target && (a.target = this),
            b.__dispatchEvent(a));
          return c;
        },
        __dispatchWithCapture: function (a) {
          null == a.target && (a.target = this);
          if (null != this.parent)
            if (((a.eventPhase = 1), this.parent == this.stage))
              this.parent.__dispatch(a);
            else {
              for (
                var b = S.__tempStack.get(), c = this.parent, d = 0;
                null != c;

              )
                (b.set(d, c), (c = c.parent), ++d);
              c = 0;
              for (var f = d; c < f; ) {
                var h = c++;
                b.get(d - h - 1).__dispatch(a);
              }
              S.__tempStack.release(b);
            }
          a.eventPhase = 2;
          return this.__dispatchEvent(a);
        },
        __enterFrame: function (a) {},
        __getBounds: function (a, b) {
          null != this.__graphics && this.__graphics.__getBounds(a, b);
        },
        __getCursor: function () {
          return null;
        },
        __getFilterBounds: function (a, b) {
          this.__getRenderBounds(a, b);
          if (null != this.__filters) {
            b = qa.__pool.get();
            for (var c = 0, d = this.__filters; c < d.length; ) {
              var f = d[c];
              ++c;
              b.__expand(
                -f.__leftExtension,
                -f.__topExtension,
                f.__leftExtension + f.__rightExtension,
                f.__topExtension + f.__bottomExtension,
              );
            }
            a.width += b.width;
            a.height += b.height;
            a.x += b.x;
            a.y += b.y;
            qa.__pool.release(b);
          }
        },
        __getInteractive: function (a) {
          return !1;
        },
        __getLocalBounds: function (a) {
          this.__getBounds(a, this.__transform);
          a.x -= this.__transform.tx;
          a.y -= this.__transform.ty;
        },
        __getRenderBounds: function (a, b) {
          if (null == this.__scrollRect) this.__getBounds(a, b);
          else {
            var c = qa.__pool.get();
            c.copyFrom(this.__scrollRect);
            c.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            qa.__pool.release(c);
          }
        },
        __getRenderTransform: function () {
          this.__getWorldTransform();
          return this.__renderTransform;
        },
        __getWorldTransform: function () {
          if (this.__transformDirty || this.__worldTransformInvalid) {
            var a = [],
              b = this;
            if (null == this.parent) this.__update(!0, !1);
            else
              for (
                ;
                b != this.stage && (a.push(b), (b = b.parent), null != b);

              );
            for (var c = a.length; 0 <= --c; ) ((b = a[c]), b.__update(!0, !1));
          }
          return this.__worldTransform;
        },
        __globalToLocal: function (a, b) {
          this.__getRenderTransform();
          if (a == b) {
            var c = this.__renderTransform,
              d = c.a * c.d - c.b * c.c;
            if (0 == d) ((a.x = -c.tx), (a.y = -c.ty));
            else {
              var f = (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
              a.y = (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
              a.x = f;
            }
          } else
            ((c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.x =
                0 == d
                  ? -c.tx
                  : (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx))),
              (c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.y =
                0 == d
                  ? -c.ty
                  : (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x))));
          return b;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (null != this.__graphics) {
            if (
              !h.__visible ||
              this.__isMask ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
            )
              return !1;
            if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()))
              return (null == d || f || d.push(h), !0);
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          return null != this.__graphics &&
            this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform())
            ? !0
            : !1;
        },
        __readGraphicsData: function (a, b) {
          null != this.__graphics && this.__graphics.__readGraphicsData(a);
        },
        __setParentRenderDirty: function () {
          var a =
            null != this.__renderParent ? this.__renderParent : this.parent;
          null == a ||
            a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty());
        },
        __setStageReference: function (a) {
          this.stage = a;
        },
        __setTransformDirty: function () {
          this.__transformDirty ||
            ((this.__transformDirty = !0),
            this.__setWorldTransformInvalid(),
            this.__setParentRenderDirty());
        },
        __setWorldTransformInvalid: function () {
          this.__worldTransformInvalid = !0;
        },
        __update: function (a, b) {
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          this.__isMask && null == c && (c = this.__maskTarget);
          this.__renderable =
            this.__visible &&
            0 != this.__scaleX &&
            0 != this.__scaleY &&
            !this.__isMask &&
            (null == c || !c.__isMask);
          this.__updateTransforms();
          this.__worldTransformInvalid = this.__transformDirty = !1;
          if (!a)
            if (
              (S.__supportDOM &&
                ((this.__renderTransformChanged =
                  !this.__renderTransform.equals(this.__renderTransformCache)),
                null == this.__renderTransformCache
                  ? (this.__renderTransformCache =
                      this.__renderTransform.clone())
                  : this.__renderTransformCache.copyFrom(
                      this.__renderTransform,
                    )),
              null != c)
            ) {
              if (S.__supportDOM) {
                var d = c.__worldVisible && this.__visible;
                this.__worldVisibleChanged = this.__worldVisible != d;
                this.__worldVisible = d;
              }
              d = this.get_alpha() * c.__worldAlpha;
              this.__worldAlphaChanged = this.__worldAlpha != d;
              this.__worldAlpha = d;
              null != this.__objectTransform
                ? (this.__worldColorTransform.__copyFrom(
                    this.__objectTransform.__colorTransform,
                  ),
                  this.__worldColorTransform.__combine(c.__worldColorTransform))
                : this.__worldColorTransform.__copyFrom(
                    c.__worldColorTransform,
                  );
              this.__worldBlendMode =
                null == this.__blendMode || 10 == this.__blendMode
                  ? c.__worldBlendMode
                  : this.__blendMode;
              this.__worldShader =
                null == this.__shader ? c.__shader : this.__shader;
              this.__worldScale9Grid =
                null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid;
            } else
              ((this.__worldAlpha = this.get_alpha()),
                S.__supportDOM &&
                  ((this.__worldVisibleChanged =
                    this.__worldVisible != this.__visible),
                  (this.__worldVisible = this.__visible)),
                (this.__worldAlphaChanged =
                  this.__worldAlpha != this.get_alpha()),
                null != this.__objectTransform
                  ? this.__worldColorTransform.__copyFrom(
                      this.__objectTransform.__colorTransform,
                    )
                  : this.__worldColorTransform.__identity(),
                (this.__worldBlendMode = this.__blendMode),
                (this.__worldShader = this.__shader),
                (this.__worldScale9Grid = this.__scale9Grid));
          b && null != this.get_mask() && this.get_mask().__update(a, !0);
        },
        __updateTransforms: function (a) {
          var b = null != a;
          a = b ? a : this.__transform;
          null == this.__worldTransform && (this.__worldTransform = new wa());
          null == this.__renderTransform && (this.__renderTransform = new wa());
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          if (b || null == this.parent) this.__worldTransform.copyFrom(a);
          else {
            var d = this.parent.__worldTransform,
              f = this.__worldTransform;
            f.a = a.a * d.a + a.b * d.c;
            f.b = a.a * d.b + a.b * d.d;
            f.c = a.c * d.a + a.d * d.c;
            f.d = a.c * d.b + a.d * d.d;
            f.tx = a.tx * d.a + a.ty * d.c + d.tx;
            f.ty = a.tx * d.b + a.ty * d.d + d.ty;
          }
          b || null == c
            ? this.__renderTransform.copyFrom(a)
            : ((d = c.__renderTransform),
              (f = this.__renderTransform),
              (f.a = a.a * d.a + a.b * d.c),
              (f.b = a.a * d.b + a.b * d.d),
              (f.c = a.c * d.a + a.d * d.c),
              (f.d = a.c * d.b + a.d * d.d),
              (f.tx = a.tx * d.a + a.ty * d.c + d.tx),
              (f.ty = a.tx * d.b + a.ty * d.d + d.ty));
          null != this.__scrollRect &&
            ((b = this.__renderTransform),
            (a = -this.__scrollRect.x),
            (c = -this.__scrollRect.y),
            (b.tx = a * b.a + c * b.c + b.tx),
            (b.ty = a * b.b + c * b.d + b.ty));
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          1 < a && (a = 1);
          0 > a && (a = 0);
          a == this.__alpha ||
            this.get_cacheAsBitmap() ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__alpha = a);
        },
        get_blendMode: function () {
          return this.__blendMode;
        },
        set_blendMode: function (a) {
          null == a && (a = 10);
          a == this.__blendMode ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__blendMode = a);
        },
        get_cacheAsBitmap: function () {
          return null == this.__filters ? this.__cacheAsBitmap : !0;
        },
        get_filters: function () {
          return null == this.__filters ? [] : this.__filters.slice();
        },
        get_height: function () {
          var a = qa.__pool.get();
          this.__getLocalBounds(a);
          var b = a.height;
          qa.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = qa.__pool.get(),
            c = wa.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
          qa.__pool.release(b);
          wa.__pool.release(c);
          return a;
        },
        get_loaderInfo: function () {
          return null != this.stage ? qc.current.__loaderInfo : null;
        },
        get_mask: function () {
          return this.__mask;
        },
        set_mask: function (a) {
          if (a == this.__mask) return a;
          a != this.__mask &&
            (this.__setTransformDirty(),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          if (null != this.__mask) {
            this.__mask.__isMask = !1;
            this.__mask.__maskTarget = null;
            this.__mask.__setTransformDirty();
            var b = this.__mask;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          null != a &&
            ((a.__isMask = !0),
            (a.__maskTarget = this),
            a.__setWorldTransformInvalid());
          null != this.__cacheBitmap &&
            this.__cacheBitmap.get_mask() != a &&
            this.__cacheBitmap.set_mask(a);
          return (this.__mask = a);
        },
        get_mouseX: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : qc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : qc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.tx
            : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
        },
        get_mouseY: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : qc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : qc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.ty
            : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
        },
        get_name: function () {
          return this.__name;
        },
        set_name: function (a) {
          return (this.__name = a);
        },
        get_root: function () {
          return null != this.stage ? qc.current : null;
        },
        get_rotation: function () {
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            a %= 360;
            180 < a ? (a -= 360) : -180 > a && (a += 360);
            this.__rotation = a;
            var b = (Math.PI / 180) * this.__rotation;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            this.__transform.a = this.__rotationCosine * this.__scaleX;
            this.__transform.b = this.__rotationSine * this.__scaleX;
            this.__transform.c = -this.__rotationSine * this.__scaleY;
            this.__transform.d = this.__rotationCosine * this.__scaleY;
            this.__setTransformDirty();
          }
          return a;
        },
        get_scaleX: function () {
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX)
            if (((this.__scaleX = a), 0 == this.__transform.b))
              (a != this.__transform.a && this.__setTransformDirty(),
                (this.__transform.a = a));
            else {
              var b = this.__rotationCosine * a,
                c = this.__rotationSine * a;
              (this.__transform.a == b && this.__transform.b == c) ||
                this.__setTransformDirty();
              this.__transform.a = b;
              this.__transform.b = c;
            }
          return a;
        },
        get_scaleY: function () {
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY)
            if (((this.__scaleY = a), 0 == this.__transform.c))
              (a != this.__transform.d && this.__setTransformDirty(),
                (this.__transform.d = a));
            else {
              var b = -this.__rotationSine * a,
                c = this.__rotationCosine * a;
              (this.__transform.d == c && this.__transform.c == b) ||
                this.__setTransformDirty();
              this.__transform.c = b;
              this.__transform.d = c;
            }
          return a;
        },
        get_scrollRect: function () {
          return null == this.__scrollRect ? null : this.__scrollRect.clone();
        },
        get_transform: function () {
          null == this.__objectTransform &&
            (this.__objectTransform = new Lg(this));
          return this.__objectTransform;
        },
        set_transform: function (a) {
          if (null == a) throw new Je('Parameter transform must be non-null.');
          null == this.__objectTransform &&
            (this.__objectTransform = new Lg(this));
          this.__setTransformDirty();
          this.__objectTransform.set_matrix(a.get_matrix());
          if (
            !this.__objectTransform.__colorTransform.__equals(
              a.__colorTransform,
              !0,
            ) ||
            (!this.get_cacheAsBitmap() &&
              this.__objectTransform.__colorTransform.alphaMultiplier !=
                a.__colorTransform.alphaMultiplier)
          )
            (this.__objectTransform.__colorTransform.__copyFrom(
              a.get_colorTransform(),
            ),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__objectTransform;
        },
        get_visible: function () {
          return this.__visible;
        },
        set_visible: function (a) {
          a == this.__visible ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__visible = a);
        },
        get_width: function () {
          var a = qa.__pool.get();
          this.__getLocalBounds(a);
          var b = a.width;
          qa.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = qa.__pool.get(),
            c = wa.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
          qa.__pool.release(b);
          wa.__pool.release(c);
          return a;
        },
        get_x: function () {
          return this.__transform.tx;
        },
        set_x: function (a) {
          a != this.__transform.tx && this.__setTransformDirty();
          return (this.__transform.tx = a);
        },
        get_y: function () {
          return this.__transform.ty;
        },
        set_y: function (a) {
          a != this.__transform.ty && this.__setTransformDirty();
          return (this.__transform.ty = a);
        },
        __class__: S,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          set_visible: 'set_visible',
          get_visible: 'get_visible',
          set_transform: 'set_transform',
          get_transform: 'get_transform',
          get_scrollRect: 'get_scrollRect',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          get_root: 'get_root',
          set_name: 'set_name',
          get_name: 'get_name',
          get_mouseY: 'get_mouseY',
          get_mouseX: 'get_mouseX',
          set_mask: 'set_mask',
          get_mask: 'get_mask',
          get_loaderInfo: 'get_loaderInfo',
          set_height: 'set_height',
          get_height: 'get_height',
          get_filters: 'get_filters',
          get_cacheAsBitmap: 'get_cacheAsBitmap',
          set_blendMode: 'set_blendMode',
          get_blendMode: 'get_blendMode',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      });
      var sa = function () {
        S.call(this);
        this.doubleClickEnabled = !1;
        this.mouseEnabled = !0;
        this.needsSoftKeyboard = !1;
        this.__tabEnabled = null;
        this.__tabIndex = -1;
      };
      g['openfl.display.InteractiveObject'] = sa;
      sa.__name__ = 'openfl.display.InteractiveObject';
      sa.__super__ = S;
      sa.prototype = u(S.prototype, {
        __allowMouseFocus: function () {
          return this.mouseEnabled ? this.get_tabEnabled() : !1;
        },
        __getInteractive: function (a) {
          null != a &&
            (a.push(this),
            null != this.parent && this.parent.__getInteractive(a));
          return !0;
        },
        __hitTest: function (a, b, c, d, f, h) {
          return !h.get_visible() || this.__isMask || (f && !this.mouseEnabled)
            ? !1
            : S.prototype.__hitTest.call(this, a, b, c, d, f, h);
        },
        __tabTest: function (a) {
          this.get_tabEnabled() && a.push(this);
        },
        get_tabEnabled: function () {
          return 1 == this.__tabEnabled ? !0 : !1;
        },
        get_tabIndex: function () {
          return this.__tabIndex;
        },
        __class__: sa,
        __properties__: u(S.prototype.__properties__, {
          get_tabIndex: 'get_tabIndex',
          get_tabEnabled: 'get_tabEnabled',
        }),
      });
      var hb = function () {
        sa.call(this);
        this.__tabChildren = this.mouseChildren = !0;
        this.__children = [];
        this.__removedChildren = X.toObjectVector(null);
      };
      g['openfl.display.DisplayObjectContainer'] = hb;
      hb.__name__ = 'openfl.display.DisplayObjectContainer';
      hb.__super__ = sa;
      hb.prototype = u(sa.prototype, {
        addChild: function (a) {
          return this.addChildAt(a, this.get_numChildren());
        },
        addChildAt: function (a, b) {
          if (null == a)
            throw (
              (a = new Je('Error #2007: Parameter child must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (a == this)
            throw (
              (a = new ef(
                'Error #2024: An object cannot be added as a child of itself.',
              )),
              (a.errorID = 2024),
              a
            );
          if (a.stage == a)
            throw (
              (a = new ef(
                'Error #3783: A Stage object cannot be added as the child of another object.',
              )),
              (a.errorID = 3783),
              a
            );
          if (b > this.__children.length || 0 > b)
            throw W.thrown('Invalid index position ' + b);
          if (a.parent == this)
            this.__children[b] != a &&
              (O.remove(this.__children, a),
              this.__children.splice(b, 0, a),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else {
            null != a.parent && a.parent.removeChild(a);
            this.__children.splice(b, 0, a);
            a.parent = this;
            (b = null != this.stage && null == a.stage) &&
              a.__setStageReference(this.stage);
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var c = new va('added');
            c.bubbles = !0;
            c.target = a;
            a.__dispatchWithCapture(c);
            b &&
              ((c = new va('addedToStage', !1, !1)),
              a.__dispatchWithCapture(c),
              a.__dispatchChildren(c));
          }
          return a;
        },
        getChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.__children[a]
            : null;
        },
        getChildByName: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d.get_name() == a) return d;
          }
          return null;
        },
        getChildIndex: function (a) {
          for (var b = 0, c = this.__children.length; b < c; ) {
            var d = b++;
            if (this.__children[d] == a) return d;
          }
          return -1;
        },
        removeChild: function (a) {
          if (null != a && a.parent == this) {
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var b = new va('removed', !0);
            a.__dispatchWithCapture(b);
            null != this.stage &&
              (null != a.stage &&
                this.stage.get_focus() == a &&
                this.stage.set_focus(null),
              (b = new va('removedFromStage', !1, !1)),
              a.__dispatchWithCapture(b),
              a.__dispatchChildren(b),
              a.__setStageReference(null));
            a.parent = null;
            O.remove(this.__children, a);
            this.__removedChildren.push(a);
            a.__setTransformDirty();
          }
          return a;
        },
        removeChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.removeChild(this.__children[a])
            : null;
        },
        removeChildren: function (a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (2147483647 == b && ((b = this.__children.length - 1), 0 > b))
            return;
          if (!(a > this.__children.length - 1)) {
            if (b < a || 0 > a || b > this.__children.length)
              throw new Vf('The supplied index is out of bounds.');
            for (b -= a; 0 <= b; ) (this.removeChildAt(a), --b);
          }
        },
        __cleanup: function () {
          sa.prototype.__cleanup.call(this);
          for (var a = 0, b = this.__children; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__cleanup();
          }
          for (a = this.__removedChildren.iterator(); a.hasNext(); )
            ((b = a.next()), null == b.stage && b.__cleanup());
          this.__removedChildren.set_length(0);
        },
        __dispatchChildren: function (a) {
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              a.target = d;
              if (!d.__dispatchWithCapture(a)) break;
              d.__dispatchChildren(a);
            }
        },
        __enterFrame: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __getBounds: function (a, b) {
          sa.prototype.__getBounds.call(this, a, b);
          if (0 != this.__children.length) {
            for (
              var c = wa.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var h = f[d];
              ++d;
              if (0 != h.__scaleX && 0 != h.__scaleY) {
                var k = h.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                h.__getBounds(a, c);
              }
            }
            wa.__pool.release(c);
          }
        },
        __getFilterBounds: function (a, b) {
          sa.prototype.__getFilterBounds.call(this, a, b);
          if (null == this.__scrollRect && 0 != this.__children.length) {
            for (
              var c = wa.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var h = f[d];
              ++d;
              if (0 != h.__scaleX && 0 != h.__scaleY && !h.__isMask) {
                var k = h.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                k = qa.__pool.get();
                h.__getFilterBounds(k, c);
                a.__expand(k.x, k.y, k.width, k.height);
                qa.__pool.release(k);
              }
            }
            wa.__pool.release(c);
          }
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            sa.prototype.__getRenderBounds.call(this, a, b);
          else if (
            (sa.prototype.__getBounds.call(this, a, b),
            0 != this.__children.length)
          ) {
            for (
              var c = wa.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var h = f[d];
              ++d;
              if (0 != h.__scaleX && 0 != h.__scaleY && !h.__isMask) {
                var k = h.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                h.__getRenderBounds(a, c);
              }
            }
            wa.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (f && !this.mouseEnabled && !this.mouseChildren) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          if (null != this.__scrollRect) {
            var k = K.__pool.get();
            k.setTo(a, b);
            var v = this.__getRenderTransform(),
              p = v.a * v.d - v.b * v.c;
            if (0 == p) ((k.x = -v.tx), (k.y = -v.ty));
            else {
              var g = (1 / p) * (v.c * (v.ty - k.y) + v.d * (k.x - v.tx));
              k.y = (1 / p) * (v.a * (k.y - v.ty) + v.b * (v.tx - k.x));
              k.x = g;
            }
            if (!this.__scrollRect.containsPoint(k))
              return (K.__pool.release(k), !1);
            K.__pool.release(k);
          }
          k = this.__children.length;
          if (f)
            if (null == d || !this.mouseChildren)
              for (; 0 <= --k; ) {
                if (
                  this.__children[k].__hitTest(
                    a,
                    b,
                    c,
                    null,
                    !0,
                    this.__children[k],
                  )
                )
                  return (null != d && d.push(h), !0);
              }
            else {
              if (null != d) {
                f = d.length;
                for (
                  p = !1;
                  0 <= --k &&
                  !(
                    ((v = this.__children[k].__getInteractive(null)) ||
                      (this.mouseEnabled && !p)) &&
                    this.__children[k].__hitTest(
                      a,
                      b,
                      c,
                      d,
                      !0,
                      this.__children[k],
                    ) &&
                    ((p = !0), v && d.length > f)
                  );

                );
                if (p) return (d.splice(f, 0, h), !0);
              }
            }
          else {
            for (
              p = !1;
              0 <= --k &&
              (!this.__children[k].__hitTest(
                a,
                b,
                c,
                d,
                !1,
                this.__children[k],
              ) ||
                ((p = !0), null != d));

            );
            return p;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          for (var c = this.__children.length; 0 <= --c; )
            if (this.__children[c].__hitTestMask(a, b)) return !0;
          return !1;
        },
        __readGraphicsData: function (a, b) {
          sa.prototype.__readGraphicsData.call(this, a, b);
          if (b)
            for (var c = 0, d = this.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              f.__readGraphicsData(a, b);
            }
        },
        __setStageReference: function (a) {
          sa.prototype.__setStageReference.call(this, a);
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__setStageReference(a);
            }
        },
        __setWorldTransformInvalid: function () {
          if (
            !this.__worldTransformInvalid &&
            ((this.__worldTransformInvalid = !0), null != this.__children)
          )
            for (var a = 0, b = this.__children; a < b.length; ) {
              var c = b[a];
              ++a;
              c.__setWorldTransformInvalid();
            }
        },
        __tabTest: function (a) {
          sa.prototype.__tabTest.call(this, a);
          if (this.get_tabChildren())
            for (var b, c = 0, d = this.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              if ((b = f.__getInteractive(null))) ((b = f), b.__tabTest(a));
            }
        },
        __update: function (a, b) {
          sa.prototype.__update.call(this, a, b);
          if (b) {
            b = 0;
            for (var c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__update(a, !0);
            }
          }
        },
        get_numChildren: function () {
          return this.__children.length;
        },
        get_tabChildren: function () {
          return this.__tabChildren;
        },
        __class__: hb,
        __properties__: u(sa.prototype.__properties__, {
          get_tabChildren: 'get_tabChildren',
          get_numChildren: 'get_numChildren',
        }),
      });
      var fa = function () {
        hb.call(this);
        this.__drawableType = 4;
        this.__buttonMode = !1;
        this.useHandCursor = !0;
        if (null != this.__pendingBindLibrary) {
          var a = this.__pendingBindLibrary,
            b = this.__pendingBindClassName;
          this.__pendingBindClassName = this.__pendingBindLibrary = null;
          a.bind(b, this);
        } else
          null != fa.__constructor &&
            ((a = fa.__constructor), (fa.__constructor = null), a(this));
      };
      g['openfl.display.Sprite'] = fa;
      fa.__name__ = 'openfl.display.Sprite';
      fa.__super__ = hb;
      fa.prototype = u(hb.prototype, {
        stopDrag: function () {
          null != this.stage && this.stage.__stopDrag(this);
        },
        __setStageReference: function (a) {
          this.stage != a &&
            null != this.stage &&
            this.stage.__dragObject == this &&
            this.stopDrag();
          hb.prototype.__setStageReference.call(this, a);
        },
        __getCursor: function () {
          return this.__buttonMode && this.useHandCursor ? 'button' : null;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (f && !this.mouseEnabled && !this.mouseChildren) return !1;
          if (
            !h.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return this.__hitTestHitArea(a, b, c, d, f, h);
          if (null != this.__scrollRect) {
            var k = K.__pool.get();
            k.setTo(a, b);
            var v = this.__getRenderTransform(),
              p = v.a * v.d - v.b * v.c;
            if (0 == p) ((k.x = -v.tx), (k.y = -v.ty));
            else {
              var g = (1 / p) * (v.c * (v.ty - k.y) + v.d * (k.x - v.tx));
              k.y = (1 / p) * (v.a * (k.y - v.ty) + v.b * (v.tx - k.x));
              k.x = g;
            }
            if (!this.__scrollRect.containsPoint(k))
              return (
                K.__pool.release(k),
                this.__hitTestHitArea(a, b, c, d, !0, h)
              );
            K.__pool.release(k);
          }
          return hb.prototype.__hitTest.call(this, a, b, c, d, f, h)
            ? null != d
              ? f
              : !0
            : null == this.hitArea &&
                null != this.__graphics &&
                this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())
              ? (null == d || (f && !this.mouseEnabled) || d.push(h), !0)
              : this.__hitTestHitArea(a, b, c, d, f, h);
        },
        __hitTestHitArea: function (a, b, c, d, f, h) {
          return null == this.hitArea || this.hitArea.mouseEnabled
            ? !1
            : ((this.hitArea.mouseEnabled = !0),
              (a = this.hitArea.__hitTest(a, b, c, null, !0, h)),
              (this.hitArea.mouseEnabled = !1),
              null != d && a && (d[d.length] = h),
              a);
        },
        __hitTestMask: function (a, b) {
          return hb.prototype.__hitTestMask.call(this, a, b) ||
            (null != this.__graphics &&
              this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()))
            ? !0
            : !1;
        },
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new ed(this));
          return this.__graphics;
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? this.__buttonMode
            : this.__tabEnabled;
        },
        get_buttonMode: function () {
          return this.__buttonMode;
        },
        set_buttonMode: function (a) {
          return (this.__buttonMode = a);
        },
        __class__: fa,
        __properties__: u(hb.prototype.__properties__, {
          get_graphics: 'get_graphics',
          set_buttonMode: 'set_buttonMode',
          get_buttonMode: 'get_buttonMode',
        }),
      });
      var gb = function (a) {
        gb.instance = this;
        fa.call(this);
        this.prepareStage();
        Xa.useEnterFrame(this);
        gb.switchScene(a);
      };
      g['com.watabou.coogee.Game'] = gb;
      gb.__name__ = 'com.watabou.coogee.Game';
      gb.switchScene = function (a) {
        gb.instance.switchSceneImp(a);
      };
      gb.quit = function () {};
      gb.__super__ = fa;
      gb.prototype = u(fa.prototype, {
        prepareStage: function () {
          var a = this;
          this.stage.align = 6;
          this.stage.set_scaleMode(2);
          this.stage.addEventListener('resize', function (b) {
            a.layout();
          });
          this.stage.application.onExit.add(l(this, this.onExit));
          this.stage.application.__window.onActivate.add(
            l(this, this.onResume),
          );
          this.stage.application.__window.onDeactivate.add(
            l(this, this.onPause),
          );
        },
        onExit: function (a) {
          Xa.stop();
        },
        onResume: function () {},
        onPause: function () {},
        layout: function () {
          if (null != gb.scene) {
            var a = this.stage.stageWidth,
              b = this.stage.stageHeight,
              c = this.getScale(a, b);
            gb.scene.set_scaleX(gb.scene.set_scaleY(c));
            gb.scene.setSize(a / c, b / c);
          }
        },
        getScale: function (a, b) {
          return 1;
        },
        switchSceneImp: function (a) {
          null != gb.scene &&
            (gb.scene.deactivate(),
            this.removeChild(gb.scene),
            (gb.scene = null));
          null != a &&
            ((gb.scene = w.createInstance(a, [])),
            this.addChild(gb.scene),
            this.layout(),
            gb.scene.activate());
          this.stage.set_focus(this.stage);
        },
        __class__: gb,
      });
      var rc = function () {
        n.reset();
        ia.useDefault();
        this.stage.showDefaultContextMenu = !1;
        Ra.baseURL = 'https://watabou.github.io/cave-generator/';
        fb.showGlade = 0 != Ra.getInt('glade', 0);
        gb.call(this, fb.showGlade ? Wf : Xd);
      };
      g['com.watabou.cave.Main'] = rc;
      rc.__name__ = 'com.watabou.cave.Main';
      rc.__super__ = gb;
      rc.prototype = u(gb.prototype, {
        switchSceneImp: function (a) {
          null == Ka.layer && (Ka.layer = new ha());
          gb.prototype.switchSceneImp.call(this, a);
          this.addChild(Ka.layer);
          Ka.wipe();
        },
        layout: function () {
          gb.prototype.layout.call(this);
          var a = this.stage.stageWidth,
            b = this.stage.stageHeight;
          Ai.get_screenDPI();
          Ka.layer.set_scaleX(Ka.layer.set_scaleY(1));
          Ka.layer.setSize(a / 1, b / 1);
        },
        __class__: rc,
      });
      var Gb = function (a) {
        a.addChild(this);
        rc.call(this);
        this.dispatchEvent(new va('addedToStage', !1, !1));
      };
      g.DocumentClass = Gb;
      Gb.__name__ = 'DocumentClass';
      Gb.__super__ = rc;
      Gb.prototype = u(rc.prototype, { __class__: Gb });
      var xa = function (a, b) {
        this.r = new RegExp(a, b.split('u').join(''));
      };
      g.EReg = xa;
      xa.__name__ = 'EReg';
      xa.prototype = {
        match: function (a) {
          this.r.global && (this.r.lastIndex = 0);
          this.r.m = this.r.exec(a);
          this.r.s = a;
          return null != this.r.m;
        },
        matched: function (a) {
          if (null != this.r.m && 0 <= a && a < this.r.m.length)
            return this.r.m[a];
          throw W.thrown('EReg::matched');
        },
        matchedPos: function () {
          if (null == this.r.m) throw W.thrown('No string matched');
          return { pos: this.r.m.index, len: this.r.m[0].length };
        },
        matchSub: function (a, b, c) {
          null == c && (c = -1);
          if (this.r.global) {
            if (
              ((this.r.lastIndex = b),
              (this.r.m = this.r.exec(0 > c ? a : O.substr(a, 0, b + c))),
              (c = null != this.r.m))
            )
              this.r.s = a;
          } else if (
            (c = this.match(0 > c ? O.substr(a, b, null) : O.substr(a, b, c)))
          )
            ((this.r.s = a), (this.r.m.index += b));
          return c;
        },
        split: function (a) {
          return a.replace(this.r, '#__delim__#').split('#__delim__#');
        },
        map: function (a, b) {
          var c = 0,
            d = '';
          do {
            if (c >= a.length) break;
            else if (!this.matchSub(a, c)) {
              d += I.string(O.substr(a, c, null));
              break;
            }
            var f = this.matchedPos();
            d += I.string(O.substr(a, c, f.pos - c));
            d += I.string(b(this));
            0 == f.len
              ? ((d += I.string(O.substr(a, f.pos, 1))), (c = f.pos + 1))
              : (c = f.pos + f.len);
          } while (this.r.global);
          !this.r.global &&
            0 < c &&
            c < a.length &&
            (d += I.string(O.substr(a, c, null)));
          return d;
        },
        __class__: xa,
      };
      var O = function () {};
      g.HxOverrides = O;
      O.__name__ = 'HxOverrides';
      O.strDate = function (a) {
        switch (a.length) {
          case 8:
            a = a.split(':');
            var b = new Date();
            b.setTime(0);
            b.setUTCHours(a[0]);
            b.setUTCMinutes(a[1]);
            b.setUTCSeconds(a[2]);
            return b;
          case 10:
            return (
              (a = a.split('-')),
              new Date(a[0], a[1] - 1, a[2], 0, 0, 0)
            );
          case 19:
            return (
              (a = a.split(' ')),
              (b = a[0].split('-')),
              (a = a[1].split(':')),
              new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2])
            );
          default:
            throw W.thrown('Invalid date format : ' + a);
        }
      };
      O.cca = function (a, b) {
        a = a.charCodeAt(b);
        if (a == a) return a;
      };
      O.substr = function (a, b, c) {
        if (null == c) c = a.length;
        else if (0 > c)
          if (0 == b) c = a.length + c;
          else return '';
        return a.substr(b, c);
      };
      O.remove = function (a, b) {
        b = a.indexOf(b);
        if (-1 == b) return !1;
        a.splice(b, 1);
        return !0;
      };
      O.now = function () {
        return Date.now();
      };
      var C = function () {};
      g.Lambda = C;
      C.__name__ = 'Lambda';
      C.array = function (a) {
        var b = [];
        for (a = J(a); a.hasNext(); ) {
          var c = a.next();
          b.push(c);
        }
        return b;
      };
      var jb = function () {};
      g.ManifestResources = jb;
      jb.__name__ = 'ManifestResources';
      jb.init = function (a) {
        jb.preloadLibraries = [];
        jb.preloadLibraryNames = [];
        jb.rootPath = null;
        null != a &&
          Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          ((jb.rootPath = ya.field(a, 'rootPath')),
          M.endsWith(jb.rootPath, '/') || (jb.rootPath += '/'));
        null == jb.rootPath && (jb.rootPath = './');
        ea.registerFont(aa);
        ea.registerFont(U);
        ea.registerFont(Mc);
        a = Wc.parse(
          '{"name":null,"assets":"aoy4:sizei46596y4:typey4:FONTy9:classNamey37:__ASSET__assets_sharetech_regular_ttfy2:idy7:ui_fonty7:preloadtgoR0i42756R1R2R3y41:__ASSET__assets_sharetechmono_regular_ttfR5y12:ui_font_monoR7tgoR0i43988R1R2R3y37:__ASSET__assets_marcellus_regular_ttfR5y5:titleR7tgoy4:pathy23:Assets%2Fgiven_male.txtR0i808R1y4:TEXTR5y9:givenMaleR7tgoR12y25:Assets%2Fgiven_female.txtR0i665R1R14R5y11:givenFemaleR7tgoR12y20:Assets%2Fdemonic.txtR0i677R1R14R5y7:demonicR7tgoR12y21:Assets%2Fgrammar.jsonR0i2084R1R14R5y7:grammarR7tgoR12y28:Assets%2Fforest_grammar.jsonR0i2219R1R14R5y14:forest_grammarR7tgoR12y23:Assets%2Fparchment.jsonR0i380R1R14R5y9:parchmentR7tgoR12y23:Assets%2Fmoonlight.jsonR0i379R1R14R5y9:moonlightR7tgoR12y16:Assets%2Fbw.jsonR0i379R1R14R5y2:bwR7tgoR12y27:Assets%2Fglade_default.jsonR0i551R1R14R5y13:glade_defaultR7tgoR12y28:Assets%2Fglade_tropical.jsonR0i578R1R14R5y14:glade_tropicalR7tgoR12y26:Assets%2Fglade_autumn.jsonR0i580R1R14R5y12:glade_autumnR7tgoR12y27:Assets%2Fglade_outline.jsonR0i550R1R14R5y13:glade_outlineR7tgoR12y24:Assets%2Fglade_reef.jsonR0i563R1R14R5y10:glade_reefR7tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
          jb.rootPath,
        );
        a = Ib.fromManifest(a);
        Ca.registerLibrary('default', a);
        a = Ca.getLibrary('default');
        null != a
          ? jb.preloadLibraries.push(a)
          : jb.preloadLibraryNames.push('default');
      };
      var bb = function (a) {
        null != a && (this.name = a);
        this.__init ||
          (void 0 == this.ascender && (this.ascender = 0),
          void 0 == this.descender && (this.descender = 0),
          void 0 == this.height && (this.height = 0),
          void 0 == this.numGlyphs && (this.numGlyphs = 0),
          void 0 == this.underlinePosition && (this.underlinePosition = 0),
          void 0 == this.underlineThickness && (this.underlineThickness = 0),
          void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
          null != this.__fontID
            ? Ca.isLocal(this.__fontID) &&
              this.__fromBytes(Ca.getBytes(this.__fontID))
            : null != this.__fontPath && this.__fromFile(this.__fontPath));
      };
      g['lime.text.Font'] = bb;
      bb.__name__ = 'lime.text.Font';
      bb.fromFile = function (a) {
        if (null == a) return null;
        var b = new bb();
        b.__fromFile(a);
        return b;
      };
      bb.loadFromName = function (a) {
        return new bb().__loadFromName(a);
      };
      bb.__measureFontNode = function (a) {
        var b = window.document.createElement('span');
        b.setAttribute('aria-hidden', 'true');
        var c = window.document.createTextNode('BESbswy');
        b.appendChild(c);
        c = b.style;
        c.display = 'block';
        c.position = 'absolute';
        c.top = '-9999px';
        c.left = '-9999px';
        c.fontSize = '300px';
        c.width = 'auto';
        c.height = 'auto';
        c.lineHeight = 'normal';
        c.margin = '0';
        c.padding = '0';
        c.fontVariant = 'normal';
        c.whiteSpace = 'nowrap';
        c.fontFamily = a;
        window.document.body.appendChild(b);
        return b;
      };
      bb.prototype = {
        __copyFrom: function (a) {
          null != a &&
            ((this.ascender = a.ascender),
            (this.descender = a.descender),
            (this.height = a.height),
            (this.name = a.name),
            (this.numGlyphs = a.numGlyphs),
            (this.src = a.src),
            (this.underlinePosition = a.underlinePosition),
            (this.underlineThickness = a.underlineThickness),
            (this.unitsPerEM = a.unitsPerEM),
            (this.__fontID = a.__fontID),
            (this.__fontPath = a.__fontPath),
            (this.__init = !0));
        },
        __fromBytes: function (a) {
          this.__fontPath = null;
        },
        __fromFile: function (a) {
          this.__fontPath = a;
        },
        __loadFromName: function (a) {
          var b = this,
            c = new fd();
          this.name = a;
          var d = y.navigator.userAgent.toLowerCase(),
            f = 0 <= d.indexOf(' safari/') && 0 > d.indexOf(' chrome/');
          d = new xa('(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)', 'i').match(
            d,
          );
          if (
            !f &&
            !d &&
            window.document.fonts &&
            ((H = window.document.fonts), l(H, H.load))
          )
            window.document.fonts.load("1em '" + a + "'").then(
              function (a) {
                c.complete(b);
              },
              function (d) {
                Na.warn('Could not load web font "' + a + '"', {
                  fileName: 'lime/text/Font.hx',
                  lineNumber: 640,
                  className: 'lime.text.Font',
                  methodName: '__loadFromName',
                });
                c.complete(b);
              },
            );
          else {
            var h = bb.__measureFontNode("'" + a + "', sans-serif"),
              k = bb.__measureFontNode("'" + a + "', serif"),
              v = h.offsetWidth,
              p = k.offsetWidth,
              g = -1,
              t = 0,
              m,
              n;
            g = window.setInterval(function () {
              t += 1;
              m = h.offsetWidth != v || k.offsetWidth != p;
              n = 3e3 <= 50 * t;
              if (m || n)
                (window.clearInterval(g),
                  h.parentNode.removeChild(h),
                  k.parentNode.removeChild(k),
                  (k = h = null),
                  n &&
                    Na.warn('Could not load web font "' + a + '"', {
                      fileName: 'lime/text/Font.hx',
                      lineNumber: 675,
                      className: 'lime.text.Font',
                      methodName: '__loadFromName',
                    }),
                  c.complete(b));
            }, 50);
          }
          return c.future;
        },
        __class__: bb,
      };
      var Oa = (r.__ASSET__assets_sharetech_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 256;
        this.underlinePosition = -100;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Regular';
        bb.call(this);
      });
      g.__ASSET__assets_sharetech_regular_ttf = Oa;
      Oa.__name__ = '__ASSET__assets_sharetech_regular_ttf';
      Oa.__super__ = bb;
      Oa.prototype = u(bb.prototype, { __class__: Oa });
      var Fa = (r.__ASSET__assets_sharetechmono_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 268;
        this.underlinePosition = -135;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Mono';
        bb.call(this);
      });
      g.__ASSET__assets_sharetechmono_regular_ttf = Fa;
      Fa.__name__ = '__ASSET__assets_sharetechmono_regular_ttf';
      Fa.__super__ = bb;
      Fa.prototype = u(bb.prototype, { __class__: Fa });
      var Ga = (r.__ASSET__assets_marcellus_regular_ttf = function () {
        this.ascender = 1995;
        this.descender = -573;
        this.height = 2568;
        this.numGlyphs = 370;
        this.underlinePosition = -205;
        this.underlineThickness = 102;
        this.unitsPerEM = 2048;
        this.name = 'Marcellus';
        bb.call(this);
      });
      g.__ASSET__assets_marcellus_regular_ttf = Ga;
      Ga.__name__ = '__ASSET__assets_marcellus_regular_ttf';
      Ga.__super__ = bb;
      Ga.prototype = u(bb.prototype, { __class__: Ga });
      var ea = function (a) {
        bb.call(this, a);
      };
      g['openfl.text.Font'] = ea;
      ea.__name__ = 'openfl.text.Font';
      ea.fromFile = function (a) {
        if (null == a) return null;
        var b = new ea();
        b.__fromFile(a);
        return b;
      };
      ea.loadFromName = function (a) {
        return bb.loadFromName(a).then(function (a) {
          var b = new ea();
          b.__fromLimeFont(a);
          return dc.withValue(b);
        });
      };
      ea.registerFont = function (a) {
        a =
          null == Ua.getClass(a)
            ? Ua.__cast(w.createInstance(a, []), ea)
            : Ua.__cast(a, ea);
        null != a &&
          (ea.__registeredFonts.push(a), (ea.__fontByName.h[a.name] = a));
      };
      ea.__super__ = bb;
      ea.prototype = u(bb.prototype, {
        __fromLimeFont: function (a) {
          this.__copyFrom(a);
        },
        __class__: ea,
      });
      var aa = (r.__ASSET__OPENFL__assets_sharetech_regular_ttf = function () {
        this.__fromLimeFont(new Oa());
        bb.call(this, void 0);
      });
      g.__ASSET__OPENFL__assets_sharetech_regular_ttf = aa;
      aa.__name__ = '__ASSET__OPENFL__assets_sharetech_regular_ttf';
      aa.__super__ = ea;
      aa.prototype = u(ea.prototype, { __class__: aa });
      var U = (r.__ASSET__OPENFL__assets_sharetechmono_regular_ttf =
        function () {
          this.__fromLimeFont(new Fa());
          bb.call(this, void 0);
        });
      g.__ASSET__OPENFL__assets_sharetechmono_regular_ttf = U;
      U.__name__ = '__ASSET__OPENFL__assets_sharetechmono_regular_ttf';
      U.__super__ = ea;
      U.prototype = u(ea.prototype, { __class__: U });
      var Mc = (r.__ASSET__OPENFL__assets_marcellus_regular_ttf = function () {
        this.__fromLimeFont(new Ga());
        bb.call(this, void 0);
      });
      g.__ASSET__OPENFL__assets_marcellus_regular_ttf = Mc;
      Mc.__name__ = '__ASSET__OPENFL__assets_marcellus_regular_ttf';
      Mc.__super__ = ea;
      Mc.prototype = u(ea.prototype, { __class__: Mc });
      Math.__name__ = 'Math';
      var ya = function () {};
      g.Reflect = ya;
      ya.__name__ = 'Reflect';
      ya.field = function (a, b) {
        try {
          return a[b];
        } catch (c) {
          return ((Qa.lastError = c), null);
        }
      };
      ya.getProperty = function (a, b) {
        var c;
        if (null == a) return null;
        var d = a.__properties__ ? (c = a.__properties__['get_' + b]) : !1;
        return d ? a[c]() : a[b];
      };
      ya.fields = function (a) {
        var b = [];
        if (null != a) {
          var c = Object.prototype.hasOwnProperty,
            d;
          for (d in a)
            '__id__' != d && 'hx__closures__' != d && c.call(a, d) && b.push(d);
        }
        return b;
      };
      ya.isFunction = function (a) {
        return 'function' == typeof a ? !(a.__name__ || a.__ename__) : !1;
      };
      ya.compare = function (a, b) {
        return a == b ? 0 : a > b ? 1 : -1;
      };
      ya.deleteField = function (a, b) {
        if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
        delete a[b];
        return !0;
      };
      var I = function () {};
      g.Std = I;
      I.__name__ = 'Std';
      I.string = function (a) {
        return Ua.__string_rec(a, '');
      };
      I.parseInt = function (a) {
        a = parseInt(a);
        return isNaN(a) ? null : a;
      };
      var qb = function () {};
      g['_String.String_Impl_'] = qb;
      qb.__name__ = '_String.String_Impl_';
      qb.fromCharCode = function (a) {
        return String.fromCodePoint(a);
      };
      var z = function () {
        this.b = '';
      };
      g.StringBuf = z;
      z.__name__ = 'StringBuf';
      z.prototype = { __class__: z };
      var M = function () {};
      g.StringTools = M;
      M.__name__ = 'StringTools';
      M.htmlEscape = function (a, b) {
        for (var c = '', d = 0, f = a; d < f.length; ) {
          a = f;
          var h = d++,
            k = a.charCodeAt(h);
          55296 <= k &&
            56319 >= k &&
            (k = ((k - 55232) << 10) | (a.charCodeAt(h + 1) & 1023));
          a = k;
          65536 <= a && ++d;
          switch (a) {
            case 34:
              c = b ? c + '&quot;' : c + String.fromCodePoint(a);
              break;
            case 38:
              c += '&amp;';
              break;
            case 39:
              c = b ? c + '&#039;' : c + String.fromCodePoint(a);
              break;
            case 60:
              c += '&lt;';
              break;
            case 62:
              c += '&gt;';
              break;
            default:
              c += String.fromCodePoint(a);
          }
        }
        return c;
      };
      M.htmlUnescape = function (a) {
        return a
          .split('&gt;')
          .join('>')
          .split('&lt;')
          .join('<')
          .split('&quot;')
          .join('"')
          .split('&#039;')
          .join("'")
          .split('&amp;')
          .join('&');
      };
      M.startsWith = function (a, b) {
        return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1;
      };
      M.endsWith = function (a, b) {
        var c = b.length,
          d = a.length;
        return d >= c ? a.indexOf(b, d - c) == d - c : !1;
      };
      M.isSpace = function (a, b) {
        a = O.cca(a, b);
        return 8 < a && 14 > a ? !0 : 32 == a;
      };
      M.ltrim = function (a) {
        for (var b = a.length, c = 0; c < b && M.isSpace(a, c); ) ++c;
        return 0 < c ? O.substr(a, c, b - c) : a;
      };
      M.rtrim = function (a) {
        for (var b = a.length, c = 0; c < b && M.isSpace(a, b - c - 1); ) ++c;
        return 0 < c ? O.substr(a, 0, b - c) : a;
      };
      M.trim = function (a) {
        return M.ltrim(M.rtrim(a));
      };
      M.replace = function (a, b, c) {
        return a.split(b).join(c);
      };
      M.hex = function (a, b) {
        var c = '';
        do ((c = '0123456789ABCDEF'.charAt(a & 15) + c), (a >>>= 4));
        while (0 < a);
        if (null != b) for (; c.length < b; ) c = '0' + c;
        return c;
      };
      var D = (F.ValueType = {
        __ename__: 'ValueType',
        __constructs__: null,
        TNull: {
          _hx_name: 'TNull',
          _hx_index: 0,
          __enum__: 'ValueType',
          toString: q,
        },
        TInt: {
          _hx_name: 'TInt',
          _hx_index: 1,
          __enum__: 'ValueType',
          toString: q,
        },
        TFloat: {
          _hx_name: 'TFloat',
          _hx_index: 2,
          __enum__: 'ValueType',
          toString: q,
        },
        TBool: {
          _hx_name: 'TBool',
          _hx_index: 3,
          __enum__: 'ValueType',
          toString: q,
        },
        TObject: {
          _hx_name: 'TObject',
          _hx_index: 4,
          __enum__: 'ValueType',
          toString: q,
        },
        TFunction: {
          _hx_name: 'TFunction',
          _hx_index: 5,
          __enum__: 'ValueType',
          toString: q,
        },
        TClass:
          ((H = function (a) {
            return { _hx_index: 6, c: a, __enum__: 'ValueType', toString: q };
          }),
          (H._hx_name = 'TClass'),
          (H.__params__ = ['c']),
          H),
        TEnum:
          ((H = function (a) {
            return { _hx_index: 7, e: a, __enum__: 'ValueType', toString: q };
          }),
          (H._hx_name = 'TEnum'),
          (H.__params__ = ['e']),
          H),
        TUnknown: {
          _hx_name: 'TUnknown',
          _hx_index: 8,
          __enum__: 'ValueType',
          toString: q,
        },
      });
      D.__constructs__ = [
        D.TNull,
        D.TInt,
        D.TFloat,
        D.TBool,
        D.TObject,
        D.TFunction,
        D.TClass,
        D.TEnum,
        D.TUnknown,
      ];
      var w = function () {};
      g.Type = w;
      w.__name__ = 'Type';
      w.resolveEnum = function (a) {
        return F[a];
      };
      w.createInstance = function (a, b) {
        return new (Function.prototype.bind.apply(a, [null].concat(b)))();
      };
      w.createEnum = function (a, b, c) {
        var d = ya.field(a, b);
        if (null == d) throw W.thrown('No such constructor ' + b);
        if (ya.isFunction(d)) {
          if (null == c)
            throw W.thrown('Constructor ' + b + ' need parameters');
          return d.apply(a, c);
        }
        if (null != c && 0 != c.length)
          throw W.thrown('Constructor ' + b + ' does not need parameters');
        return d;
      };
      w.typeof = function (a) {
        switch (typeof a) {
          case 'boolean':
            return D.TBool;
          case 'function':
            return a.__name__ || a.__ename__ ? D.TObject : D.TFunction;
          case 'number':
            return Math.ceil(a) == a % 2147483648 ? D.TInt : D.TFloat;
          case 'object':
            if (null == a) return D.TNull;
            var b = a.__enum__;
            if (null != b) return D.TEnum(F[b]);
            a = Ua.getClass(a);
            return null != a ? D.TClass(a) : D.TObject;
          case 'string':
            return D.TClass(String);
          case 'undefined':
            return D.TNull;
          default:
            return D.TUnknown;
        }
      };
      w.enumParameters = function (a) {
        var b = F[a.__enum__].__constructs__[a._hx_index].__params__;
        if (null != b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            c.push(a[f]);
          }
          return c;
        }
        return [];
      };
      var oa = {
          gt: function (a, b) {
            var c = 0 > a;
            return c != 0 > b ? c : a > b;
          },
          toFloat: function (a) {
            return 0 > a ? 4294967296 + a : a + 0;
          },
        },
        ub = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'Element';
              case 1:
                return 'PCData';
              case 2:
                return 'CData';
              case 3:
                return 'Comment';
              case 4:
                return 'DocType';
              case 5:
                return 'ProcessingInstruction';
              case 6:
                return 'Document';
            }
          },
        },
        Y = function (a) {
          this.nodeType = a;
          this.children = [];
          this.attributeMap = new Ia();
        };
      g.Xml = Y;
      Y.__name__ = 'Xml';
      Y.parse = function (a) {
        return le.parse(a);
      };
      Y.createElement = function (a) {
        var b = new Y(Y.Element);
        if (b.nodeType != Y.Element)
          throw W.thrown(
            'Bad node type, expected Element but found ' +
              (null == b.nodeType ? 'null' : ub.toString(b.nodeType)),
          );
        b.nodeName = a;
        return b;
      };
      Y.createPCData = function (a) {
        var b = new Y(Y.PCData);
        if (b.nodeType == Y.Document || b.nodeType == Y.Element)
          throw W.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : ub.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      Y.createCData = function (a) {
        var b = new Y(Y.CData);
        if (b.nodeType == Y.Document || b.nodeType == Y.Element)
          throw W.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : ub.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      Y.createComment = function (a) {
        var b = new Y(Y.Comment);
        if (b.nodeType == Y.Document || b.nodeType == Y.Element)
          throw W.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : ub.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      Y.createDocType = function (a) {
        var b = new Y(Y.DocType);
        if (b.nodeType == Y.Document || b.nodeType == Y.Element)
          throw W.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : ub.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      Y.createProcessingInstruction = function (a) {
        var b = new Y(Y.ProcessingInstruction);
        if (b.nodeType == Y.Document || b.nodeType == Y.Element)
          throw W.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : ub.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      Y.createDocument = function () {
        return new Y(Y.Document);
      };
      Y.prototype = {
        get: function (a) {
          if (this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          return this.attributeMap.h[a];
        },
        set: function (a, b) {
          if (this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          this.attributeMap.h[a] = b;
        },
        exists: function (a) {
          if (this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a);
        },
        attributes: function () {
          if (this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          return new Mg(this.attributeMap.h);
        },
        firstElement: function () {
          if (this.nodeType != Y.Document && this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          for (var a = 0, b = this.children; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.nodeType == Y.Element) return c;
          }
          return null;
        },
        addChild: function (a) {
          if (this.nodeType != Y.Document && this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          null != a.parent && a.parent.removeChild(a);
          this.children.push(a);
          a.parent = this;
        },
        removeChild: function (a) {
          if (this.nodeType != Y.Document && this.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : ub.toString(this.nodeType)),
            );
          return O.remove(this.children, a) ? ((a.parent = null), !0) : !1;
        },
        toString: function () {
          return Ke.print(this);
        },
        __class__: Y,
      };
      var Jb = function () {};
      g['com.watabou.cave.PolyUtils'] = Jb;
      Jb.__name__ = 'com.watabou.cave.PolyUtils';
      Jb.wobbleFixed = function (a, b) {
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++,
            k = a[(h + 1) % c],
            v = a[(h + c - 1) % c],
            p = !0;
          null == p && (p = !1);
          k = new K(k.y - v.y, v.x - k.x);
          p && k.normalize(1);
          p = k;
          h = a[h];
          k =
            b *
            ((((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1);
          d.push(new K(h.x + p.x * k, h.y + p.y * k));
        }
        return d;
      };
      Jb.swing = function (a, b) {
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++,
            k = a[(h + 1) % c],
            v = a[(h + c - 1) % c],
            p = !0;
          null == p && (p = !1);
          k = new K(k.y - v.y, v.x - k.x);
          p && k.normalize(1);
          p = k;
          k = a[h];
          h =
            b *
            (0 == (h & 1) ? 1 : -1) *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            );
          d.push(new K(k.x + p.x * h, k.y + p.y * h));
        }
        return d;
      };
      Jb.resampleClosed = function (a, b) {
        var c = Hd.perimeter(a);
        b = c / Math.round(c / b);
        c = a[a.length - 1];
        for (var d = [c], f = b, h = 0, k = 0, v = a.length; k < v; ) {
          var p = k++,
            g = c;
          c = a[p];
          for (p = K.distance(g, c); h + p > f; )
            (d.push(cb.lerp(g, c, (f - h) / p)), (f += b));
          h += p;
        }
        return d;
      };
      Jb.resampleOpen = function (a, b) {
        var c = Hd.$length(a);
        b = c / Math.round(c / b);
        c = a[0];
        for (var d = [c], f = b, h = 0, k = 1, v = a.length; k < v; ) {
          var p = k++,
            g = c;
          c = a[p];
          for (p = K.distance(g, c); h + p > f; )
            (d.push(cb.lerp(g, c, (f - h) / p)), (f += b));
          h += p;
        }
        d.push(a[a.length - 1]);
        return d;
      };
      Jb.smoothClosed = function (a, b) {
        null == b && (b = 0.5);
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++;
          d.push(cb.lerp(a[h], cb.lerp(a[(h + c - 1) % c], a[(h + 1) % c]), b));
        }
        return d;
      };
      var Eb = function () {};
      g['com.watabou.cave.mapping.ArrowView'] = Eb;
      Eb.__name__ = 'com.watabou.cave.mapping.ArrowView';
      Eb.draw = function (a, b, c, d) {
        var f = Eb.wingSize;
        null == f && (f = 1);
        var h = c.clone();
        h.normalize(f);
        var k = h,
          v = Math.PI / 6;
        h = Math.sin(v);
        v = Math.cos(v);
        f = b.add(new K(k.x * v - k.y * h, k.y * v + k.x * h));
        v = -Math.PI / 6;
        h = Math.sin(v);
        v = Math.cos(v);
        k = [f, b, b.add(new K(k.x * v - k.y * h, k.y * v + k.x * h))];
        h = c.clone();
        h.normalize(1);
        v = d.clone();
        v.normalize(1);
        v = h.add(v);
        f = Eb.$length;
        null == f && (f = 1);
        h = c.clone();
        h.normalize(f);
        c = h;
        h = new K(b.x + 0.3 * c.x, b.y + 0.3 * c.y);
        f = Eb.$length;
        null == f && (f = 1);
        v = v.clone();
        v.normalize(f);
        c = v;
        v = new K(h.x + 0.4 * c.x, h.y + 0.4 * c.y);
        f = Eb.$length;
        null == f && (f = 1);
        d = d.clone();
        d.normalize(f);
        c = d;
        d = new K(v.x + 0.3 * c.x, v.y + 0.3 * c.y);
        b = Id.render([b, h, v, d], !1, 2);
        Eb.outline != Eb.color &&
          (a.lineStyle(3 * Eb.thickness, Eb.outline, null, null, null, 2, 1),
          yb.drawPolyline(a, k),
          a.lineStyle(3 * Eb.thickness, Eb.outline, null, null, null, 2),
          yb.drawPolyline(a, b));
        a.lineStyle(Eb.thickness, Eb.color, null, null, null, 2, 1);
        yb.drawPolyline(a, k);
        a.lineStyle(Eb.thickness, Eb.color, null, null, null, 2);
        yb.drawPolyline(a, b);
        a.endFill();
      };
      var Va = function (a) {
        fa.call(this);
        Va.gridMode = gc.get('grid', 1);
        this.model = a;
      };
      g['com.watabou.cave.mapping.MapView'] = Va;
      Va.__name__ = 'com.watabou.cave.mapping.MapView';
      Va.__super__ = fa;
      Va.prototype = u(fa.prototype, {
        updateWaterView: function () {},
        setGridMode: function (a) {
          switch (Va.gridMode) {
            case 1:
              this.gridSq.set_visible(!1);
              break;
            case 2:
              this.gridHex.set_visible(!1);
          }
          switch ((Va.gridMode = a)) {
            case 1:
              null == this.gridSq
                ? this.addGrid()
                : this.gridSq.set_visible(!0);
              break;
            case 2:
              null == this.gridHex
                ? this.addGrid()
                : this.gridHex.set_visible(!0);
          }
          gc.set('grid', a);
        },
        toggleGrid: function () {
          this.setGridMode((Va.gridMode + 1) % 3);
        },
        toggleWater: function () {
          Va.showWater = !Va.showWater;
        },
        custGrid: function () {
          this.setGridMode(1);
          lb.customize(this.model);
        },
        getTextColor: function () {
          return 0;
        },
        getGridColor: function () {
          return 0;
        },
        getGridStroke: function () {
          return 1;
        },
        addGrid: function () {
          var a = this.getGridColor(),
            b = this.getGridStroke();
          switch (Va.gridMode) {
            case 1:
              a = this.addChild((this.gridSq = new lb(this.model, a, b)));
              break;
            case 2:
              a = this.addChild((this.gridHex = new sd(this.model, a, b)));
              break;
            default:
              a = null;
          }
          return a;
        },
        __class__: Va,
      });
      var Za = function (a, b) {
        Va.call(this, a);
        Za.showShading && this.drawHatching(b);
        0 < wb.stones && this.drawBoulders();
        if (0 < ja.outShadeAlpha) {
          b = new fa();
          b.set_alpha(ja.outShadeAlpha);
          this.addChild(b);
          b = b.get_graphics();
          b.lineStyle(wb.distance + wb.clusterSize, ja.colorInk);
          for (var c = 0, d = a.curves; c < d.length; ) {
            var f = d[c];
            ++c;
            yb.drawPolygon(b, f);
          }
        }
        this.hollow = new fa();
        this.addChild(this.hollow);
        b = this.hollow.get_graphics();
        b.beginFill(ja.colorFloor);
        c = 0;
        for (d = a.curves; c < d.length; )
          ((f = d[c]), ++c, yb.drawPolygon(b, f));
        b.endFill();
        null != a.road && this.drawRoad();
        this.createMasked();
        this.addGrid();
        this.outline = new fa();
        this.addChild(this.outline);
        b = this.outline.get_graphics();
        b.lineStyle(
          ja.strokeWall,
          ja.colorInk,
          null,
          null,
          null,
          null,
          0 < za.wallsRoughness ? 1 : 2,
        );
        c = 0;
        for (d = a.curves; c < d.length; )
          ((f = d[c]), ++c, yb.drawPolygon(b, f));
        Va.showExits && this.drawExits();
        Va.showDoors && this.drawDoors();
      };
      g['com.watabou.cave.mapping.CaveView'] = Za;
      Za.__name__ = 'com.watabou.cave.mapping.CaveView';
      Za.__super__ = Va;
      Za.prototype = u(Va.prototype, {
        drawHatching: function (a) {
          if (a && Za.lastModel == this.model)
            ((this.hatching = Za.lastHatching),
              this.addChildAt(this.hatching, 0));
          else {
            this.hatching = new wb();
            this.addChildAt(this.hatching, 0);
            Za.lastHatching = this.hatching;
            Za.lastModel = this.model;
            a = [];
            for (var b = [], c = 0, d = this.model.outline; c < d.length; ) {
              var f = d[c];
              ++c;
              for (var h = 0; h < f.length; ) {
                var k = f[h];
                ++h;
                var v = k.face.data;
                if (-1 == b.indexOf(v) && !v.exit) {
                  b.push(v);
                  var p = 0,
                    g = 0;
                  for (k = k.face.getNeighbours(); g < k.length; ) {
                    var t = k[g];
                    ++g;
                    t.data.hollow ||
                      ((t = ua.count(t.getNeighbours(), function (a) {
                        return a.data.hollow;
                      })),
                      p < t && (p = t));
                  }
                  p =
                    1 +
                    0.2 * (p - 2) +
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    );
                  p *= la.hexRadius;
                  null != v.area && v.area.tunnel && (p *= 0.6666666666666666);
                  v = v.get_center();
                  a.push(new Ng(v.x, v.y, p));
                }
              }
            }
            this.hatching.draw(a);
          }
        },
        drawRoad: function () {
          for (
            var a = ja.strokeWall / 2,
              b = function (a) {
                for (
                  var b = new K(), c = 0, d = a.getNeighbours();
                  c < d.length;

                ) {
                  var f = d[c];
                  ++c;
                  f.data.hollow ||
                    ((f = f.data.get_center().subtract(a.data.get_center())),
                    (b.x += f.x),
                    (b.y += f.y));
                }
                a = a.data.get_center();
                c = la.hexInner;
                null == c && (c = 1);
                b = b.clone();
                b.normalize(c);
                return a.add(b);
              },
              c = [],
              d = 1,
              f = this.model.road.length;
            d < f;

          ) {
            var h = d++,
              k = this.model.road[h - 1];
            h = this.model.road[h];
            (k.data.isInner() && h.data.isInner()) ||
              ((k = k.findEdge(h)),
              c.push(cb.lerp(k.origin.point, k.next.origin.point, 0.5)));
          }
          d = c;
          d.unshift(b(this.model.road[0]));
          c = this.model.road;
          d.push(b(c[c.length - 1]));
          d = me.smoothOpen(d, 8);
          d = Jb.resampleOpen(d, la.hexRadius);
          d = Jb.swing(d, la.hexRadius / 2);
          d = Id.render(d, !1);
          d = Jb.resampleOpen(d, 2 <= a ? 4 * a : 8);
          b = this.hollow.get_graphics();
          b.beginFill(ja.colorInk);
          for (c = 0; c < d.length; )
            ((f = d[c]), ++c, b.drawCircle(f.x, f.y, a));
          b.endFill();
        },
        createMasked: function () {
          this.masked = new fa();
          this.addChild(this.masked);
          this.steps = new fa();
          this.steps.set_visible(Za.showSteps);
          this.masked.addChild(this.steps);
          this.drawSteps();
          this.water = new rb(this.model);
          this.water.set_visible(Va.showWater);
          this.masked.addChild(this.water);
          this.rubble = new fa();
          this.rubble.set_visible(Za.showRubble);
          this.masked.addChild(this.rubble);
          this.drawRubble();
          0 < ja.inShadeAlpha &&
            0 < ja.inShadeDist &&
            ((this.shadow = new fa()),
            this.masked.addChild(this.shadow),
            this.drawInnerShadow());
          var a = new fa();
          this.addChild(a);
          this.masked.set_mask(a);
          a = a.get_graphics();
          a.beginFill(16711680);
          for (var b = 0, c = this.model.curves; b < c.length; ) {
            var d = c[b];
            ++b;
            yb.drawPolygon(a, d);
          }
        },
        updateWaterView: function () {
          var a = this.masked.getChildIndex(this.water);
          this.masked.removeChild(this.water);
          this.water = new rb(this.model);
          this.water.set_visible((Va.showWater = !0));
          this.masked.addChildAt(this.water, a);
        },
        drawSteps: function () {
          for (
            var a = this.steps.get_graphics(), b = 0, c = this.model.steps;
            b < c.length;

          ) {
            var d = c[b];
            ++b;
            if (null != d.center)
              for (var f = 0; 5 > f; ) {
                var h = f++,
                  k = d.a0;
                h = (h + 0.5) / 5;
                null == h && (h = 0.5);
                h = k + (d.a1 - k) * h;
                k = K.polar(0.5 * la.hexRadius, h);
                h = K.polar(2.5 * la.hexRadius, h);
                if (d.a0 > d.a1) {
                  var v = k;
                  k = h;
                  h = v;
                }
                this.drawStep(a, d.center.add(k), d.center.add(h));
              }
            else
              for (
                f = d.p0,
                  d = d.p1,
                  k = new K(f.y - d.y, d.x - f.x),
                  h = la.hexRadius,
                  null == h && (h = 1),
                  k = k.clone(),
                  k.normalize(h),
                  h = 0;
                5 > h;

              )
                ((v = h++),
                  (v = cb.lerp(f, d, (v + 0.5) / 5)),
                  this.drawStep(a, v.add(k), v.subtract(k)));
          }
        },
        drawStep: function (a, b, c) {
          var d = new K(b.y - c.y, c.x - b.x),
            f = cb.lerp(b, c, 0.3),
            h = cb.lerp(b, c, 0.7),
            k = Math.round(1.5 * (1 - Math.sqrt(za.wallsRoughness)));
          b = new K(b.x + -0.125 * d.x, b.y + -0.125 * d.y);
          var v =
            0.25 *
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3);
          f = new K(f.x + d.x * v, f.y + d.y * v);
          v =
            0.25 *
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3);
          c = Id.render(
            [
              b,
              f,
              new K(h.x + d.x * v, h.y + d.y * v),
              new K(c.x + -0.125 * d.x, c.y + -0.125 * d.y),
            ],
            !1,
            k,
          );
          d = ja.strokeDetail;
          0 < ja.inShadeAlpha &&
            0 < ja.inShadeDist &&
            ((h = d / 2 + d * ja.inShadeDist),
            (k = ja.shadowDir),
            (f = h / 2),
            (k = new K(k.x * f, k.y * f)),
            a.lineStyle(h, ja.colorInk, ja.inShadeAlpha / 2),
            yb.drawPolylineAt(a, c, k.x, k.y));
          a.lineStyle(d, ja.colorInk);
          yb.drawPolyline(a, c);
        },
        drawBoulders: function () {
          this.boulders = new fa();
          this.addChild(this.boulders);
          var a = this.boulders.get_graphics();
          a.lineStyle(ja.strokeHatch, ja.colorInk);
          for (var b = 0, c = this.model.outline; b < c.length; ) {
            var d = c[b];
            ++b;
            for (var f = 0; f < d.length; ) {
              var h = d[f];
              ++f;
              if (null == h.twin || h.face.data.exit) var k = !1;
              else
                ((k = wb.stones),
                  null == k && (k = 0.5),
                  (k =
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 <
                    k));
              k &&
                ((k = h.twin.face),
                (h = K.polar(
                  la.hexRadius *
                    Math.sqrt(
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647,
                    ),
                  2 *
                    Math.PI *
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
                )),
                (k = k.data.get_center()),
                (h.x += k.x),
                (h.y += k.y),
                a.beginFill(ja.colorPage),
                yb.drawPolygonAt(a, Xb.getPebble(), h.x, h.y));
            }
          }
        },
        drawRubble: function () {
          var a = this.rubble.get_graphics();
          a.lineStyle(ja.strokeDetail, ja.colorInk);
          for (var b = 0, c = this.model.outline; b < c.length; ) {
            var d = c[b];
            ++b;
            for (var f = 0; f < d.length; ) {
              var h = d[f];
              ++f;
              if (null != h.twin) {
                var k = h.face.data,
                  v = k.water ? 0.05 : 0.1;
                if (!k.exit)
                  for (;;) {
                    k = v;
                    null == k && (k = 0.5);
                    if (
                      !(
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 <
                        k
                      )
                    )
                      break;
                    k = h.next.origin.point.subtract(h.origin.point);
                    var p = !0;
                    null == p && (p = !1);
                    k.setTo(-k.y, k.x);
                    p && k.normalize(1);
                    p =
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647;
                    null == p && (p = 0.5);
                    p = cb.lerp(h.origin.point, h.next.origin.point, p);
                    var g =
                      la.hexRadius *
                      (((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        3);
                    k = new K(k.x * g, k.y * g);
                    p.x += k.x;
                    p.y += k.y;
                    a.beginFill(ja.colorFloor);
                    yb.drawPolygonAt(a, Xb.getBoulder(), p.x, p.y);
                  }
              }
            }
          }
          b = 0;
          for (c = this.model.cells; b < c.length; )
            ((k = c[b]),
              ++b,
              k.hollow && !k.water
                ? ((v = 0.1),
                  null == v && (v = 0.5),
                  (d =
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 <
                    v))
                : (d = !1),
              d &&
                ((p = K.polar(
                  la.hexRadius *
                    ((((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1),
                  Math.PI *
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
                )),
                (k = k.get_center()),
                (p.x += k.x),
                (p.y += k.y),
                a.beginFill(ja.colorFloor),
                yb.drawPolygonAt(a, Xb.getPebble(), p.x, p.y)));
        },
        drawInnerShadow: function () {
          var a = this.shadow.get_graphics(),
            b = ja.strokeWall / 2 + ja.strokeWall * ja.inShadeDist;
          a.endFill();
          a.lineStyle(b, ja.colorInk, ja.inShadeAlpha);
          var c = ja.shadowDir;
          b /= 2;
          c = new K(c.x * b, c.y * b);
          b = 0;
          for (var d = this.model.curves; b < d.length; ) {
            var f = d[b];
            ++b;
            yb.drawPolygonAt(a, f, c.x, c.y);
          }
        },
        drawDoors: function () {
          this.doors = new fa();
          this.addChild(this.doors);
          var a = this.doors.get_graphics();
          a.beginFill(ja.colorInk);
          for (var b = 0, c = this.model.doors; b < c.length; ) {
            var d = c[b];
            ++b;
            d = d.get_center();
            a.drawCircle(d.x, d.y, 6);
          }
        },
        drawExits: function () {
          this.exits = new fa();
          this.addChild(this.exits);
          Eb.color = ja.colorInk;
          Eb.outline = ja.colorInk;
          Eb.thickness = 2 * ja.strokeDetail;
          Eb.wingSize = 0.6 * la.hexInner;
          Eb.$length = 2 * la.hexInner;
          for (
            var a = this.exits.get_graphics(), b = 0, c = this.model.exits;
            b < c.length;

          ) {
            var d = c[b];
            ++b;
            for (
              var f = d.get_center(),
                h = new K(),
                k = 0,
                v = (d = d.face.halfEdge),
                p = !0;
              p;

            ) {
              var g = v;
              v = v.next;
              p = v != d;
              null != g.twin &&
                g.twin.face.data.hollow &&
                ((g = f.subtract(
                  cb.lerp(g.origin.point, g.next.origin.point, 0.5),
                )),
                (h.x += g.x),
                (h.y += g.y),
                ++k);
            }
            k = 1 / k;
            h.x *= k;
            h.y *= k;
            k = new wa();
            d = 2 * la.hexInner;
            k.createGradientBox(2 * d, 2 * d, 0, f.x + h.x - d, f.y + h.y - d);
            a.beginGradientFill(
              1,
              [ja.colorPage, ja.colorPage],
              [1, 0],
              [128, 224],
              k,
            );
            a.drawCircle(f.x + h.x, f.y + h.y, d);
            a.endFill();
            d =
              (Math.PI / 2) *
              ((((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1);
            k = Math.sin(d);
            d = Math.cos(d);
            Eb.draw(a, f, h, new K(h.x * d - h.y * k, h.y * d + h.x * k));
          }
        },
        toggleRubble: function () {
          this.rubble.set_visible((Za.showRubble = !Za.showRubble));
        },
        toggleWater: function () {
          Va.prototype.toggleWater.call(this);
          this.water.set_visible(Va.showWater);
        },
        toggleShading: function () {
          (Za.showShading = !Za.showShading)
            ? null == this.hatching
              ? this.drawHatching(!1)
              : this.hatching.set_visible(!0)
            : this.hatching.set_visible(!1);
        },
        toggleExits: function () {
          (Va.showExits = !Va.showExits)
            ? null == this.exits
              ? this.drawExits()
              : this.exits.set_visible(!0)
            : this.exits.set_visible(!1);
        },
        toggleDoors: function () {
          (Va.showDoors = !Va.showDoors)
            ? null == this.doors
              ? this.drawDoors()
              : this.doors.set_visible(!0)
            : this.doors.set_visible(!1);
        },
        toggleSteps: function () {
          this.steps.set_visible((Za.showSteps = !Za.showSteps));
        },
        addGrid: function () {
          var a = Va.prototype.addGrid.call(this);
          null != a && this.masked.addChildAt(a, 2);
          return a;
        },
        getTextColor: function () {
          return ja.colorInk;
        },
        getGridColor: function () {
          return ja.colorInk;
        },
        getGridStroke: function () {
          return ja.strokeGrid;
        },
        __class__: Za,
      });
      var rb = function (a) {
        fa.call(this);
        var b = this.get_graphics(),
          c = (2 * la.hexInner) / 3;
        if (ja.colorInk == ja.colorWater) {
          b.lineStyle(c, ja.colorInk);
          b.beginFill(ja.colorInk);
          for (var d = 0, f = a.water.outlines; d < f.length; ) {
            var h = f[d];
            ++d;
            yb.drawPolygon(b, h);
          }
        } else {
          b.lineStyle(c, ja.colorInk);
          d = 0;
          for (f = a.water.outlines; d < f.length; )
            ((h = f[d]), ++d, yb.drawPolygon(b, h));
          b.lineStyle(c - 2 * ja.strokeDetail, ja.colorWater);
          b.beginFill(ja.colorWater);
          d = 0;
          for (f = a.water.outlines; d < f.length; )
            ((h = f[d]), ++d, yb.drawPolygon(b, h));
          b.endFill();
          b.lineStyle(ja.strokeHatch, ja.colorInk);
          d = 0;
          for (f = a.water.outlines; d < f.length; )
            ((h = f[d]),
              ++d,
              yb.dashedPolyline(b, h, !0, this.getRipplePattern()));
        }
      };
      g['com.watabou.cave.mapping.CaveWaterView'] = rb;
      rb.__name__ = 'com.watabou.cave.mapping.CaveWaterView';
      rb.__super__ = fa;
      rb.prototype = u(fa.prototype, {
        getRipplePattern: function () {
          for (var a = [], b = 0; 20 > b; ) {
            var c = b++;
            a.push(
              la.hexRadius *
                (0 == (c & 1)
                  ? (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647
                  : 0.5),
            );
          }
          return a;
        },
        __class__: rb,
      });
      var wb = function () {
        fa.call(this);
      };
      g['com.watabou.cave.mapping.Hatching'] = wb;
      wb.__name__ = 'com.watabou.cave.mapping.Hatching';
      wb.fillForm = function (a) {
        a.addInt('hatchingStrokes', 'Strokes', wb.nStrokes, 2, 5);
        a.addFloat(
          'hatchingSize',
          'Size',
          Math.round((wb.clusterSize / la.hexRadius) * 100) / 100,
          0.1,
          1,
        );
        a.addFloat(
          'hatchingDistance',
          'Distance',
          Math.round((wb.distance / la.hexRadius) * 100) / 100,
          0,
          1,
        );
        a.addFloat(
          'hatchingStones',
          'Stones',
          Math.round(100 * wb.stones) / 100,
          0,
          1,
        );
      };
      wb.fromPalette = function (a) {
        wb.nStrokes = a.getInt('hatchingStrokes', 5);
        wb.clusterSize = a.getFloat('hatchingSize', 0.6) * la.hexRadius;
        wb.distance = a.getFloat('hatchingDistance', 0.15) * la.hexRadius;
        wb.stones = a.getFloat('hatchingStones', 0.3);
      };
      wb.getPoisson = function (a) {
        a = new Og(a);
        for (a = new Bi(wb.clusterSize / wb.z, a); a.step(); );
        return a;
      };
      wb.__super__ = fa;
      wb.prototype = u(fa.prototype, {
        draw: function (a) {
          this.get_graphics().clear();
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            c.inflate(wb.distance);
          }
          this.doHatching(a);
        },
        doHatching: function (a) {
          ne.start();
          a = wb.getPoisson(a);
          var b = a.points;
          Yb.trace(ne.next(), {
            fileName: 'Source/com/watabou/cave/mapping/Hatching.hx',
            lineNumber: 79,
            className: 'com.watabou.cave.mapping.Hatching',
            methodName: 'doHatching',
            customParams: [b.length],
          });
          var c = wb.nStrokes,
            d = (c - 1) / 2,
            f = new na();
          this.get_graphics().lineStyle(ja.strokeHatch, ja.colorInk);
          for (var h = 0; h < b.length; ) {
            var k = [b[h]];
            ++h;
            var v = [];
            f.set(k[0], v);
            var p = a.getNeighbours(k[0]),
              g = ua.min(
                p,
                (function (a) {
                  return function (b) {
                    return b != a[0] ? K.distance(a[0], b) : Infinity;
                  };
                })(k),
              );
            g = Math.atan2(k[0].y - g.y, k[0].x - g.x);
            0 < g &&
              (g +=
                (Math.PI / 6) *
                (1 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647));
            var t = K.polar(0.5 * wb.clusterSize * wb.z, g);
            g = t.x;
            t = t.y;
            for (
              var m =
                  Math.pow(
                    2,
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
                  ) /
                  (Math.sqrt(3) / 2),
                x = 0,
                q = c;
              x < q;

            ) {
              var z = x++,
                l = (z - d) / d,
                w = ((z + 1) / c) * m;
              l = new K(k[0].x + -t * l, k[0].y + g * l);
              z = l.x;
              for (
                var G = l.y,
                  B = [],
                  D = -1 * g * w,
                  F = -1 * t * w,
                  r = 1,
                  u = 0;
                u < p.length;

              ) {
                var H = p[u];
                ++u;
                H = f.h[H.__id__];
                if (null != H)
                  for (var C = 0; C < H.length; ) {
                    var ba = H[C];
                    ++C;
                    var ta = ba[0];
                    ba = cb.intersectLines(
                      z,
                      G,
                      D,
                      F,
                      ta.x,
                      ta.y,
                      ba[1].x - ta.x,
                      ba[1].y - ta.y,
                    );
                    null != ba &&
                      0 < ba.x &&
                      ba.x < r &&
                      0 <= ba.y &&
                      1 >= ba.y &&
                      (r = ba.x);
                  }
              }
              B.push(new K(l.x + D * r, l.y + F * r));
              D = 1 * g * w;
              w *= 1 * t;
              F = 1;
              for (r = 0; r < p.length; )
                if (((u = p[r]), ++r, (u = f.h[u.__id__]), null != u))
                  for (H = 0; H < u.length; )
                    ((C = u[H]),
                      ++H,
                      (ba = C[0]),
                      (C = cb.intersectLines(
                        z,
                        G,
                        D,
                        w,
                        ba.x,
                        ba.y,
                        C[1].x - ba.x,
                        C[1].y - ba.y,
                      )),
                      null != C &&
                        0 < C.x &&
                        C.x < F &&
                        0 <= C.y &&
                        1 >= C.y &&
                        (F = C.x));
              B.push(new K(l.x + D * F, l.y + w * F));
              l = B;
              v.push(l);
              z = this.get_graphics();
              G = l[0];
              z.moveTo(G.x, G.y);
              z = this.get_graphics();
              l = l[1];
              z.lineTo(l.x, l.y);
            }
          }
          Yb.trace(ne.next(), {
            fileName: 'Source/com/watabou/cave/mapping/Hatching.hx',
            lineNumber: 142,
            className: 'com.watabou.cave.mapping.Hatching',
            methodName: 'doHatching',
          });
        },
        __class__: wb,
      });
      var la = function (a) {
        la.inst = this;
        this.bp = a;
        Yb.trace(a.seed, {
          fileName: 'Source/com/watabou/cave/model/Model.hx',
          lineNumber: 83,
          className: 'com.watabou.cave.model.Model',
          methodName: 'new',
        });
        Yb.trace(a.tags, {
          fileName: 'Source/com/watabou/cave/model/Model.hx',
          lineNumber: 84,
          className: 'com.watabou.cave.model.Model',
          methodName: 'new',
        });
        n.reset(a.seed);
        this.createMesh();
        this.spawnAreas();
        this.buildAdjacency();
        this.buildConnectivity();
        this.buildDoors();
        this.buildExits();
        this.adjustAreas();
        this.buildSteps();
        this.buildOutlines();
        this.buildGeometry();
        this.createWater();
        Kb.init(this);
        this.name = Le.capitalizeAll(Kb.get());
        null != a.name ? (this.name = a.name) : (a.name = this.name);
        a.updateURL();
      };
      g['com.watabou.cave.model.Model'] = la;
      la.__name__ = 'com.watabou.cave.model.Model';
      la.fill = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          d.data.hollow = b;
        }
      };
      la.prototype = {
        createMesh: function () {
          var a = Math.ceil((2560 * Math.sqrt(2)) / 2 / la.hexWidth2),
            b = Math.ceil((2560 * Math.sqrt(2)) / 2 / (0.75 * la.hexHeight2));
          n.seed = (48271 * n.seed) % 2147483647 | 0;
          var c = Math.PI / 6,
            d = Math.sin(c),
            f = Math.cos(c);
          if (null == la.dcel) {
            c = [];
            for (var h = 0, k = b + 1; h < k; ) {
              for (var v = h++, p = [], g = 0, t = 2 * a + 2; g < t; ) {
                var m = g++,
                  x = la.hexWidth2 * (m - a - 0.5),
                  q = la.hexHeight2 * (v - b / 2) * 1.5;
                q += (la.hexHeight2 / 4) * ((m & 1) == (v & 1) ? 1 : -1);
                m = new K(x, q);
                m.setTo(m.x * f - m.y * d, m.y * f + m.x * d);
                p.push(m);
              }
              c.push(p);
            }
            la.vertices = c;
            d = 1280 + la.hexRadius;
            f = 1280 + la.hexRadius;
            c = [];
            h = 0;
            for (k = a * b; h < k; )
              ((v = h++),
                (b = (v / a) | 0),
                (v = (v % a) * 2),
                0 != (b & 1) && ++v,
                cb
                  .lerp(la.vertices[b][v], la.vertices[b + 1][v + 2])
                  .get_length() <= Math.max(d, f) &&
                  c.push([
                    la.vertices[b][v],
                    la.vertices[b][v + 1],
                    la.vertices[b][v + 2],
                    la.vertices[b + 1][v + 2],
                    la.vertices[b + 1][v + 1],
                    la.vertices[b + 1][v],
                  ]));
            la.dcel = new yc(c);
          } else {
            c = 0;
            for (h = b + 1; c < h; )
              for (v = c++, k = 0, p = 2 * a + 2; k < p; )
                ((m = k++),
                  (x = la.hexWidth2 * (m - a - 0.5)),
                  (q = la.hexHeight2 * (v - b / 2) * 1.5),
                  (q += (la.hexHeight2 / 4) * ((m & 1) == (v & 1) ? 1 : -1)),
                  (m = la.vertices[v][m]),
                  m.setTo(x, q),
                  m.setTo(m.x * f - m.y * d, m.y * f + m.x * d));
            c = 0;
            for (h = la.dcel.edges; c < h.length; )
              ((a = h[c]), ++c, (a.data = null));
          }
          c = [];
          h = 0;
          for (k = la.dcel.faces; h < k.length; )
            ((a = k[h]), ++h, c.push(new jc(a)));
          this.cells = c;
          c = [];
          h = 0;
          for (k = la.dcel.edges; h < k.length; )
            ((a = k[h]), ++h, null == a.data && c.push(new Ec(a)));
          this.edges = c;
        },
        spawnAreas: function () {
          this.areas = [];
          for (
            var a = la.dcel.faces.slice();
            0 < a.length && this.areas.length < this.bp.nAreas;

          ) {
            var b = this.bp.chooseAreaSize(this.areas.length);
            if (0 == this.areas.length)
              var c = ua.min(a, function (a) {
                return a.data.get_center().get_length();
              });
            else {
              c = [];
              for (var d = 0, f = a; d < f.length; ) {
                var h = f[d];
                ++d;
                for (
                  var k = !1, v = !1, p = 0, g = h.getNeighbours();
                  p < g.length;

                ) {
                  var t = g[p];
                  ++p;
                  if (null != t.data.border2) {
                    v = !0;
                    break;
                  } else null != t.data.border1 && (k = !0);
                }
                k && !v && c.push(h);
              }
              d = [];
              for (f = 0; f < c.length; )
                ((h = c[f]),
                  ++f,
                  d.push(Math.pow(h.data.get_center().get_length(), -2)));
              c = ua.weighted(c, d);
            }
            d = this.bp.getGrowthWeight;
            d = null != d ? d : kc.varied();
            b = kc.growFrom(this, c, b, d);
            if (null == b) throw W.thrown('Bad area');
            ua.removeAll(a, b.faces);
            ua.removeAll(a, b.border);
            this.areas.push(b);
          }
          this.nAreas = this.areas.length;
          this.tails = [];
        },
        buildAdjacency: function () {
          for (var a = this.areas.length, b = [], c = 0, d = a; c < d; ) {
            c++;
            for (var f = [], h = 0, k = a; h < k; ) (h++, f.push(null));
            b.push(f);
          }
          this.adjacence = b;
          b = 0;
          for (c = a - 1; b < c; )
            for (h = b++, d = h + 1, f = a; d < f; )
              ((k = d++), (this.adjacence[h][k] = this.adjacence[k][h] = []));
          b = 0;
          for (c = la.dcel.faces; b < c.length; )
            ((a = c[b]),
              ++b,
              (a = a.data),
              (d = a.border1),
              (f = a.border2),
              null != d &&
                null != f &&
                this.adjacence[this.areas.indexOf(d)][
                  this.areas.indexOf(f)
                ].push(a));
        },
        buildConnectivity: function () {
          var a = this;
          if (-1 != this.bp.tags.indexOf('tree')) {
            for (var b = [0], c = [], d = 1, f = this.nAreas; d < f; ) {
              var h = d++;
              c.push(h);
            }
            var k = c;
            c = [];
            d = 0;
            for (f = this.nAreas; d < f; ) {
              d++;
              for (var v = [], p = 0, g = this.nAreas; p < g; )
                (p++, v.push(!1));
              c.push(v);
            }
            for (p = c; 0 < k.length; ) {
              g = Infinity;
              var t = (h = -1);
              for (c = 0; c < b.length; )
                for (v = b[c], ++c, d = 0; d < k.length; )
                  if (((f = k[d]), ++d, this.areAdjacent(v, f))) {
                    var m = this.areas[v],
                      n = this.areas[f],
                      x = this.getDistance(m, n);
                    x < g && ((h = v), (t = f), (g = x));
                  }
              b.push(t);
              O.remove(k, t);
              p[h][t] = p[t][h] = !0;
            }
            c = 0;
            for (d = this.nAreas - 1; c < d; )
              for (h = c++, f = h + 1, v = this.nAreas; f < v; )
                ((k = f++),
                  this.areAdjacent(h, k) &&
                    !p[h][k] &&
                    (this.adjacence[h][k] = this.adjacence[k][h] = []));
          } else {
            if (-1 != this.bp.tags.indexOf('string')) {
              c = [];
              d = 0;
              for (f = this.areas.length; d < f; ) ((h = d++), c.push(h));
              p = ua.shuffle(c);
              var q = null;
              q = function (b, c) {
                b.push(c);
                if (b.length == a.nAreas) return !0;
                for (var d = 0, f = a.nAreas; d < f; ) {
                  var h = d++;
                  if (a.areAdjacent(c, h) && -1 == b.indexOf(h) && q(b, h))
                    return !0;
                }
                b.pop();
                return !1;
              };
              b = [];
              c = 0;
              for (d = this.nAreas; c < d; )
                if (((h = c++), q(b, p[h]))) {
                  f = [];
                  v = 0;
                  for (p = this.nAreas; v < p; ) {
                    v++;
                    g = [];
                    c = 0;
                    for (d = this.nAreas; c < d; ) (c++, g.push(!1));
                    f.push(g);
                  }
                  p = f;
                  c = 1;
                  for (d = b.length; c < d; )
                    ((v = c++),
                      (m = b[v - 1]),
                      (n = b[v]),
                      (p[m][n] = p[n][m] = !0));
                  c = 0;
                  for (d = this.nAreas - 1; c < d; )
                    for (f = c++, m = f + 1, n = this.nAreas; m < n; )
                      ((k = m++),
                        this.areAdjacent(f, k) &&
                          !p[f][k] &&
                          (this.adjacence[f][k] = this.adjacence[k][f] = []));
                  this.tails = [
                    this.areas[b[0]],
                    this.areas[b[this.nAreas - 1]],
                  ];
                  return;
                }
              throw W.thrown('Failed to create a string!');
            }
            if (-1 == this.bp.tags.indexOf('connected'))
              for (c = 0, d = this.nAreas - 1; c < d; )
                for (h = c++, f = h + 1, v = this.nAreas; f < v; )
                  if (((k = f++), this.areAdjacent(h, k))) {
                    m = this.areas[h];
                    n = this.areas[k];
                    x = this.getDistance(m, n);
                    b = !0;
                    p = 0;
                    for (g = this.nAreas; p < g; )
                      if (
                        ((t = p++),
                        this.areAdjacent(h, t) && this.areAdjacent(t, k))
                      ) {
                        var z = this.areas[t];
                        t = this.getDistance(m, z);
                        z = this.getDistance(n, z);
                        if (t < x && z < x) {
                          b = !1;
                          break;
                        }
                      }
                    b || (this.adjacence[h][k] = this.adjacence[k][h] = []);
                  }
          }
        },
        buildDoors: function () {
          for (var a = this, b = 0; 100 > b; ) {
            b++;
            this.doors = [];
            for (var c = 0, d = this.nAreas - 1; c < d; )
              for (var f = c++, h = f + 1, k = this.nAreas; h < k; ) {
                var v = h++;
                v = this.adjacence[f][v];
                0 < v.length && this.doors.push(ua.random(v));
              }
            c = !0;
            d = 0;
            for (f = this.doors; d < f.length; )
              if (
                ((h = f[d]),
                ++d,
                ua.some(h.face.getNeighbours(), function (b) {
                  return -1 != a.doors.indexOf(b.data);
                }))
              ) {
                c = !1;
                break;
              }
            if (c) {
              b = 0;
              for (c = this.doors; b < c.length; )
                ((d = c[b]), ++b, (d.hollow = !0));
              return;
            }
          }
          throw W.thrown('Bad doors!');
        },
        buildExits: function () {
          for (var a = [], b = 0, c = this.areas; b < c.length; ) {
            var d = c[b];
            ++b;
            for (var f = [], h = 0, k = d.border; h < k.length; ) {
              var v = k[h];
              ++h;
              (function (a) {
                if (null != a.data.border2) return !1;
                var b = 0,
                  c = 0,
                  d = 0;
                for (a = a.getNeighbours(); d < a.length; ) {
                  var f = a[d];
                  ++d;
                  if (
                    (f.data.hollow && 2 < ++b) ||
                    (null != f.data.border1 && 2 < ++c)
                  )
                    return !1;
                }
                return !0;
              })(v) && f.push(v);
            }
            k = f;
            for (f = 0; f < k.length; ) {
              var p = k[f];
              ++f;
              a.push(p);
            }
          }
          b = 0;
          for (c = this.doors; b < c.length; )
            ((k = c[b]), ++b, ua.removeAll(a, k.face.getNeighbours()));
          this.exits = [];
          for (
            k = this.tails.slice();
            0 < a.length && this.exits.length < this.bp.nExits;

          ) {
            b = [];
            for (c = 0; c < a.length; ) {
              d = [a[c]];
              ++c;
              v = 1;
              f = 0;
              for (h = this.exits; f < h.length; ) {
                p = h[f];
                ++f;
                var g = d[0].data.get_center(),
                  t = p.get_center();
                p = g.x - t.x;
                g = g.y - t.y;
                v += p * p + g * g;
              }
              ua.isEmpty(k) ||
                ((d = ua.find(
                  this.areas,
                  (function (a) {
                    return function (b) {
                      return -1 != b.border.indexOf(a[0]);
                    };
                  })(d),
                )),
                -1 != k.indexOf(d) && (v *= 1e3));
              b.push(v);
            }
            b = [ua.weighted(a, b)];
            c = b[0].data;
            c.hollow = !0;
            c.exit = !0;
            this.exits.push(c);
            O.remove(a, b[0]);
            ua.removeAll(a, b[0].getNeighbours());
            ua.isEmpty(k) ||
              ((b = ua.find(
                this.areas,
                (function (a) {
                  return function (b) {
                    return -1 != b.border.indexOf(a[0]);
                  };
                })(b),
              )),
              O.remove(k, b));
          }
          this.nExits = this.exits.length;
        },
        buildRoad: function () {
          for (
            var a = null, b = null, c = 0, d = 0, f = this.nExits - 1;
            d < f;

          )
            for (var h = d++, k = h + 1, v = this.nExits; k < v; ) {
              var p = k++,
                g = this.exits[h];
              p = this.exits[p];
              var t = g.get_center(),
                m = p.get_center(),
                n = t.x - m.x;
              t = t.y - m.y;
              var x = n * n + t * t;
              c < x && ((c = x), (a = g.face), (b = p.face));
            }
          d = new na();
          f = 0;
          for (k = this.cells; f < k.length; )
            ((c = k[f]), ++f, c.hollow && d.set(c.face, Infinity));
          x = d;
          f = gd.fromArray([a]);
          for (x.set(a, 0); !gd.isEmpty(f); ) {
            d = new na();
            f = k = f;
            for (k = k.keys(); k.hasNext(); )
              for (
                c = k.next(),
                  f.get(c),
                  h = c,
                  c = x.h[h.__id__],
                  v = h = h.halfEdge,
                  g = !0;
                g;

              )
                if (
                  ((p = v),
                  (v = v.next),
                  (g = v != h),
                  null != p.twin &&
                    ((p = p.twin.face),
                    (n = c + (p.data.isInner() ? 1 : 10)),
                    x.h[p.__id__] > n))
                ) {
                  x.set(p, n);
                  if (p == b) {
                    f = b;
                    for (d = []; f != a; )
                      ((f = ua.min(f.getNeighbours(), function (a) {
                        return null != x.h.__keys__[a.__id__]
                          ? x.h[a.__id__]
                          : Infinity;
                      })),
                        d.push(f));
                    this.road = d;
                    this.road.unshift(b);
                    return;
                  }
                  d.set(p, !0);
                }
            f = d;
          }
        },
        adjustAreas: function () {
          for (var a = [], b = 0, c = this.areas; b < c.length; ) {
            var d = c[b];
            ++b;
            var f = d.faces.length,
              h = this.getDoors(d).length;
            1 < h
              ? ((f = this.bp.tunnelChance * Math.sqrt(h / f)),
                null == f && (f = 0.5),
                (f =
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 <
                  f))
              : (f = !1);
            f && a.push(d);
          }
          f = a;
          for (a = 0; a < f.length; ) {
            d = f[a];
            ++a;
            b = [];
            c = 0;
            for (h = this.getDoors(d); c < h.length; ) {
              var k = h[c];
              ++c;
              b.push(k.face);
            }
            d.shrink(b);
            d.tunnel = !0;
          }
          -1 != this.bp.tags.indexOf('road') && this.buildRoad();
        },
        buildSteps: function () {
          this.steps = [];
          for (var a = 0, b = this.areas; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.tunnel) {
              var d = Math.pow(
                  this.bp.stepsChance,
                  Math.pow(
                    2,
                    (((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1,
                  ),
                ),
                f = 0;
              for (
                d = ua.subset(c.faces, Math.round(c.faces.length * d));
                f < d.length;

              ) {
                c = d[f];
                ++f;
                for (var h = [], k = 0, v = c.getNeighbours(); k < v.length; ) {
                  var p = v[k];
                  ++k;
                  p.data.hollow && h.push(p);
                }
                2 == h.length && this.steps.push(new oe(this, c, h));
              }
            }
          }
          a = 0;
          for (b = this.doors; a < b.length; )
            if (
              ((f = b[a]),
              ++a,
              (d = this.bp.stepsChance),
              null == d && (d = 0.5),
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < d)
            ) {
              c = f.face;
              f = [];
              d = 0;
              for (h = c.getNeighbours(); d < h.length; )
                ((p = h[d]), ++d, p.data.hollow && f.push(p));
              h = f;
              2 == h.length && this.steps.push(new oe(this, c, h));
            }
        },
        buildOutlines: function () {
          for (var a = [], b = 0, c = la.dcel.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            d.data.hollow && a.push(d);
          }
          this.outline = yc.outline(a);
          a = [];
          b = 0;
          for (c = this.outline; b < c.length; )
            ((d = c[b]), ++b, a.push(Me.toPoly(d)));
          this.polies = a;
        },
        buildGeometry: function () {
          n.save();
          n.reset(this.bp.seed);
          this.wood = null;
          for (
            var a = Math.pow(4, za.wallsBumpiness - 1) - za.wallsDistortion,
              b = 2 * za.wallsDistortion,
              c = [],
              d = 0,
              f = this.outline.length;
            d < f;

          ) {
            var h = d++,
              k = this.outline[h];
            h = this.polies[h];
            for (var v = k.length, p = [], g = 0, t = v; g < t; ) {
              var m = g++,
                x = k[m].face.data,
                q = h[(m + v - 1) % v],
                z = h[m],
                l = h[(m + 1) % v];
              x.exit ||
                (z = cb.lerp(
                  cb.lerp(q, l),
                  z,
                  a +
                    b *
                      (((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        3),
                ));
              if (la.narrowTunnels && null != x.area && x.area.tunnel) {
                x = new K();
                l = q = 0;
                for (m = k[m].origin.edges; l < m.length; ) {
                  var w = m[l];
                  ++l;
                  w.face.data.hollow &&
                    ((w = w.face.data.get_center()),
                    (x.x += w.x),
                    (x.y += w.y),
                    ++q);
                }
                m = 1 / q;
                x.x *= m;
                x.y *= m;
                z = cb.lerp(x, z, 0.6666666666666666);
              }
              p.push(z);
            }
            c.push(p);
          }
          this.curves = this.simple = c;
          if (la.smoothHexes) {
            c = [];
            d = 0;
            for (f = this.curves; d < f.length; )
              ((a = f[d]), ++d, c.push(Id.render(a, !0, 2)));
            this.curves = c;
          }
          if (0 < za.wallsRoughness) {
            b = la.hexRadius;
            k =
              b * Math.sqrt(za.wallsRoughness * (1 - 0.3 * za.wallsBumpiness));
            c = [];
            d = 0;
            for (f = this.curves; d < f.length; )
              ((a = f[d]),
                ++d,
                c.push(Jb.wobbleFixed(Jb.resampleClosed(a, b / 2), k / 2)));
            this.curves = c;
            c = [];
            d = 0;
            for (f = this.curves; d < f.length; )
              ((a = f[d]),
                ++d,
                c.push(Jb.wobbleFixed(Jb.resampleClosed(a, b / 4), k / 8)));
            this.curves = c;
          }
          this.rect = Ne.rect(this.simple[0]);
          n.restore();
        },
        createWater: function () {
          n.save();
          n.reset(this.bp.waterSeed);
          this.water = new Ci(this);
          n.restore();
        },
        areAdjacent: function (a, b) {
          return a != b ? 0 < this.adjacence[a][b].length : !1;
        },
        getDistance: function (a, b) {
          return Math.sqrt(a.faces.length) + Math.sqrt(b.faces.length);
        },
        getDoors: function (a) {
          for (
            var b = [], c = 0, d = this.doors.concat(this.exits);
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            (f.border1 != a && f.border2 != a) || b.push(f);
          }
          return b;
        },
        getTags: function () {
          var a = this.bp.tags.slice();
          ua.removeAll(a, zb.SIZE);
          3 > this.nAreas
            ? a.push('small')
            : 9 > this.nAreas
              ? a.push('medium')
              : a.push('large');
          ua.removeAll(a, zb.EXITS);
          switch (this.nExits) {
            case 0:
              a.push('sealed');
              break;
            case 1:
              a.push('entrance');
              break;
            case 2:
              a.push('passage');
              break;
            default:
              a.push('junction');
          }
          return a;
        },
        getName: function () {
          Kb.init(this, !0);
          return Le.capitalizeAll(Kb.get());
        },
        setName: function (a) {
          this.bp.name = this.name = a;
          this.bp.updateURL();
        },
        rotate: function (a) {
          a *= Math.PI / 180;
          var b = Math.sin(a);
          a = Math.cos(a);
          for (var c = la.dcel.vertices, d = c.keys(); d.hasNext(); ) {
            var f = d.next();
            c.get(f);
            f.setTo(f.x * a - f.y * b, f.y * a + f.x * b);
          }
          b = 0;
          for (a = this.cells; b < a.length; )
            ((c = a[b]), ++b, (c._center = null));
          b = [];
          a = 0;
          for (c = this.steps; a < c.length; )
            ((d = c[a]), ++a, b.push(new oe(this, d.face, d.ways)));
          this.steps = b;
          this.buildGeometry();
        },
        __class__: la,
      };
      var sd = function (a, b, c) {
        fa.call(this);
        this.get_graphics().lineStyle(c, b);
        b = 0;
        for (a = a.edges; b < a.length; )
          ((c = a[b]),
            ++b,
            null != c.get_face1() &&
              c.get_face0().data.hollow &&
              c.get_face1().data.hollow &&
              yb.dashedLine(
                this.get_graphics(),
                c.get_p0(),
                c.get_p1(),
                sd.dashes,
              ));
      };
      g['com.watabou.cave.mapping.HexGrid'] = sd;
      sd.__name__ = 'com.watabou.cave.mapping.HexGrid';
      sd.__super__ = fa;
      sd.prototype = u(fa.prototype, { __class__: sd });
      var lb = function (a, b, c) {
        lb.inst = this;
        fa.call(this);
        this.color = b;
        this.stroke = c;
        this.draw(a);
      };
      g['com.watabou.cave.mapping.SquareGrid'] = lb;
      lb.__name__ = 'com.watabou.cave.mapping.SquareGrid';
      lb.getPattern = function () {
        return [
          lb.size *
            ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
            4,
          0.5 *
            lb.size *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
          lb.size *
            (1 + (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
            4,
          0.5 *
            lb.size *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
        ];
      };
      lb.customize = function (a) {
        null == Ka.findForm(Xf) &&
          Ka.showDialog(
            new Xf(function (b, c) {
              lb.onApply(a, b, c);
            }),
          );
      };
      lb.onApply = function (a, b, c) {
        lb.size = b;
        lb.broken = c;
        lb.inst.draw(a);
      };
      lb.__super__ = fa;
      lb.prototype = u(fa.prototype, {
        draw: function (a) {
          this.get_graphics().clear();
          this.get_graphics().lineStyle(this.stroke, this.color);
          var b = a.simple,
            c = new K(),
            d = new K();
          c.y = 0;
          d.y = 1;
          for (
            c.x = d.x = a.rect.get_left() - 0.1;
            c.x < a.rect.get_right();

          ) {
            for (var f = ff.pierceMulti(b, c, d); 2 <= f.length; ) {
              var h = f.shift(),
                k = f.shift();
              h.y += lb.offset;
              k.y -= lb.offset;
              k.y - h.y >= lb.minSegment && this.drawSegment(h, k);
            }
            c.x += lb.size;
            d.x += lb.size;
          }
          c.x = 0;
          d.x = 1;
          for (
            c.y = d.y = a.rect.get_top() - 0.1;
            c.y < a.rect.get_bottom();

          ) {
            for (f = ff.pierceMulti(b, c, d); 2 <= f.length; )
              ((h = f.shift()),
                (k = f.shift()),
                (h.x += lb.offset),
                (k.x -= lb.offset),
                k.x - h.x >= lb.minSegment && this.drawSegment(h, k));
            c.y += lb.size;
            d.y += lb.size;
          }
        },
        drawSegment: function (a, b) {
          if (lb.broken)
            ((a = Jb.resampleOpen([a, b], lb.wobbleStep)),
              (a = Jb.wobbleFixed(a, lb.wobbleDist)),
              yb.dashedPolyline(this.get_graphics(), a, null, lb.getPattern()));
          else {
            var c = this.get_graphics();
            c.moveTo(a.x, a.y);
            c.lineTo(b.x, b.y);
          }
        },
        __class__: lb,
      });
      var Xb = function () {};
      g['com.watabou.cave.mapping.Stone'] = Xb;
      Xb.__name__ = 'com.watabou.cave.mapping.Stone';
      Xb.getBoulder = function () {
        return Xb.get(Xb.minBoulder, Xb.maxBoulder, Xb.boulderCache);
      };
      Xb.getPebble = function () {
        return Xb.get(Xb.minPebble, Xb.maxPebble, Xb.pebbleCache);
      };
      Xb.get = function (a, b, c) {
        if (null != c && 40 <= c.length) return ua.random(c);
        a +=
          (b - a) *
          Math.pow(
            ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3,
            2,
          );
        a = Xb.getPoly(a);
        null != c && c.push(a);
        return a;
      };
      Xb.getPoly = function (a) {
        for (var b = [], c = 0; 6 > c; ) {
          var d = c++;
          b.push(
            K.polar(
              a,
              ((d + (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                6) *
                Math.PI *
                2,
            ),
          );
        }
        a = b;
        b = ua.subset(
          a,
          (6 *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            )) |
            0,
        );
        return (a = Id.render(a, !0, 2, b));
      };
      var K = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      g['openfl.geom.Point'] = K;
      K.__name__ = 'openfl.geom.Point';
      K.distance = function (a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(c * c + a * a);
      };
      K.polar = function (a, b) {
        return new K(a * Math.cos(b), a * Math.sin(b));
      };
      K.prototype = {
        add: function (a) {
          return new K(a.x + this.x, a.y + this.y);
        },
        clone: function () {
          return new K(this.x, this.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
        },
        normalize: function (a) {
          if (0 != this.x || 0 != this.y)
            ((a /= Math.sqrt(this.x * this.x + this.y * this.y)),
              (this.x *= a),
              (this.y *= a));
        },
        setTo: function (a, b) {
          this.x = a;
          this.y = b;
        },
        subtract: function (a) {
          return new K(this.x - a.x, this.y - a.y);
        },
        __toLimeVector2: function () {
          null == K.__limeVector2 && (K.__limeVector2 = new gf());
          var a = K.__limeVector2;
          a.x = this.x;
          a.y = this.y;
          return K.__limeVector2;
        },
        get_length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        __class__: K,
        __properties__: { get_length: 'get_length' },
      };
      var ja = function () {};
      g['com.watabou.cave.mapping.Style'] = ja;
      ja.__name__ = 'com.watabou.cave.mapping.Style';
      ja.applyPalette = function (a, b) {
        null == b && (b = !1);
        ja.colorPage = a.getColor('colorPage', 13417379);
        ja.colorFloor = a.getColor('colorFloor', 15459283);
        ja.colorWater = a.getColor('colorWater', 12365984);
        ja.colorInk = a.getColor('colorInk', 0);
        ja.outShadeAlpha = a.getFloat('shadeAlpha', 0.2);
        ja.inShadeAlpha = a.getFloat('shadowAlpha', 0.4);
        ja.inShadeDist = a.getFloat('shadowDist', 1);
        ja.strokeWall = a.getFloat('strokeWall', 3);
        ja.strokeDetail = a.getFloat('strokeDetail', 2);
        ja.strokeHatch = a.getFloat('strokeHatch', 1.2);
        ja.strokeGrid = a.getFloat('strokeGrid', 0.3);
        wb.fromPalette(a);
        b && gc.set('palette', a.data());
      };
      ja.restorePalette = function () {
        var a = gc.get('palette');
        null != a && ja.applyPalette(ec.fromData(a));
      };
      ja.fillForm = function (a) {
        a.addTab('Colors');
        a.addColor('colorPage', 'Page', ja.colorPage);
        a.addColor('colorFloor', 'Floor', ja.colorFloor);
        a.addColor('colorWater', 'Water', ja.colorWater);
        a.addColor('colorInk', 'Ink', ja.colorInk);
        a.addTab('Shadow');
        a.addFloat('shadeAlpha', 'Outer opacity', ja.outShadeAlpha, 0, 1);
        a.addFloat('shadowAlpha', 'Inner opacity', ja.inShadeAlpha, 0, 1);
        a.addFloat('shadowDist', 'Inner distance', ja.inShadeDist, 0, 5);
        a.addTab('Strokes');
        a.addFloat('strokeWall', 'Walls', ja.strokeWall, 0.1, 10);
        a.addFloat('strokeDetail', 'Details', ja.strokeDetail, 0.1, 10);
        a.addFloat('strokeHatch', 'Hatching', ja.strokeHatch, 0.1, 10);
        a.addFloat('strokeGrid', 'Grid', ja.strokeGrid, 0.1, 10);
        a.addTab('Hatching');
        wb.fillForm(a);
      };
      var sc = function (a) {
        fa.call(this);
        for (
          var b = function (a) {
              for (
                var b = new K(), c = 0, d = a.getNeighbours();
                c < d.length;

              ) {
                var f = d[c];
                ++c;
                f.data.hollow ||
                  ((f = f.data.get_center().subtract(a.data.get_center())),
                  (b.x += f.x),
                  (b.y += f.y));
              }
              a = a.data.get_center();
              c = la.hexInner;
              null == c && (c = 1);
              b = b.clone();
              b.normalize(c);
              return a.add(b);
            },
            c = [],
            d = 1,
            f = a.road.length;
          d < f;

        ) {
          var h = d++,
            k = a.road[h - 1];
          h = a.road[h];
          (k.data.isInner() && h.data.isInner()) ||
            ((k = k.findEdge(h)),
            c.push(cb.lerp(k.origin.point, k.next.origin.point, 0.5)));
        }
        d = b(a.road[0]);
        c.unshift(d);
        a = a.road;
        b = b(a[a.length - 1]);
        c.push(b);
        c = me.smoothOpen(c, 8);
        c = Jb.resampleOpen(c, la.hexRadius);
        c = Jb.swing(c, la.hexRadius * L.roadWiggle);
        c[0].copyFrom(d);
        c[c.length - 1].copyFrom(b);
        c = me.smoothOpen(c);
        a = Bj.stripe(c, L.roadWidth * la.hexRadius);
        c =
          L.colorRoadOutline != L.colorRoad &&
          L.colorRoadOutline != L.colorGround;
        b = this.get_graphics();
        b.beginFill(L.colorRoad);
        c && b.lineStyle(L.strokeNormal, L.colorRoadOutline);
        yb.drawPolygon(b, a);
        b.endFill();
        d = L.strokeNormal * (c ? 2 : 1.5);
        c = function () {
          for (var a = [], b = 0; 20 > b; ) {
            var c = b++;
            a.push(
              0 == (c & 1)
                ? 20 *
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647)
                : 20 /
                    (0.1 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647),
            );
          }
          return a;
        };
        L.colorRoadOutline != L.colorGround &&
          ((f = ff.enlarge(a, d)),
          b.lineStyle(L.strokeNormal, L.colorRoadOutline),
          yb.dashedPolyline(b, f, !0, c()));
        L.colorRoadOutline != L.colorRoad &&
          ((a = ff.enlarge(a, -d)),
          b.lineStyle(L.strokeNormal, L.colorRoadOutline),
          yb.dashedPolyline(b, a, !0, c()));
      };
      g['com.watabou.cave.mapping.forest.ForestRoadView'] = sc;
      sc.__name__ = 'com.watabou.cave.mapping.forest.ForestRoadView';
      sc.__super__ = fa;
      sc.prototype = u(fa.prototype, { __class__: sc });
      var L = function () {};
      g['com.watabou.cave.mapping.forest.GladeStyle'] = L;
      L.__name__ = 'com.watabou.cave.mapping.forest.GladeStyle';
      L.applyPalette = function (a, b) {
        null == b && (b = !1);
        L.colorGround = a.getColor('ground', 10269317);
        L.colorInk = a.getColor('ink', 66054);
        L.colorMarks = a.getColor('marks', L.colorInk);
        L.colorTree = a.getMulti('tree', 6258538);
        L.colorTreeDetails = a.getColor('treeDetails', L.colorInk);
        L.treeVariance = a.getFloat('treeVariance', 0.2);
        L.nBands = a.getInt('treeBands', 3);
        L.treeShape = a.getString('treeShape', 'Cotton');
        L.colorThicket = a.getColor('thicket', L.colorTree[0]);
        L.colorDeep = a.getColor('water', 4491468);
        L.colorShallow = a.getColor('shallow', L.colorDeep);
        L.colorSand = a.getColor('sand', L.colorInk);
        L.colorShadow = a.getColor('shadowColor', 9869742);
        L.shadowLength = a.getFloat('shadowLength', 1);
        L.shadowDir = (a.getInt('shadowAngle', 60) / 180) * Math.PI;
        L.strokeNormal = a.getFloat('strokeNormal', 1);
        L.strokeThin = a.getFloat('strokeThin', 0.5);
        L.strokeGrid = a.getFloat('strokeGrid', 0.3);
        L.grassLength = a.getInt('grassLength', 8);
        L.colorRoad = a.getColor('road', 13418915);
        L.colorRoadOutline = a.getColor('roadOutline', L.colorInk);
        L.roadWidth = a.getFloat('roadWidth', 0.5);
        L.roadWiggle = a.getFloat('roadWiggle', 0.5);
        L.shadowNorm = K.polar(1, L.shadowDir);
        L.shadowScaled = K.polar(L.shadowLength, L.shadowDir);
        ba.updateCache();
        b && gc.set('wood_palette', a.data());
      };
      L.restorePalette = function () {
        var a = gc.get('wood_palette');
        null != a && L.applyPalette(ec.fromData(a));
      };
      L.fillForm = function (a) {
        a.setMaxTabs(4);
        a.addTab('Basic');
        a.addColor('thicket', 'Thicket', L.colorThicket);
        a.addColor('ground', 'Ground', L.colorGround);
        a.addColor('ink', 'Ink', L.colorInk);
        a.addColor('marks', 'Marks', L.colorMarks);
        a.addTab('Trees');
        a.addMultiColor('tree', 'Foliage', L.colorTree);
        a.addColor('treeDetails', 'Crown details', L.colorTreeDetails);
        a.addFloat('treeVariance', 'Color variance', L.treeVariance, 0, 1);
        a.addInt('treeBands', 'Forest bands', L.nBands, 2, 5);
        a.addEnum('treeShape', 'Shape', L.TREE_SHAPE, L.treeShape);
        a.addTab('Water');
        a.addColor('water', 'Deep', L.colorDeep);
        a.addColor('shallow', 'Shallow', L.colorShallow);
        a.addColor('sand', 'Outline', L.colorSand);
        a.addTab('Shadow');
        a.addColor('shadowColor', 'Color', L.colorShadow);
        a.addFloat('shadowLength', 'Length', L.shadowLength, 0, 3);
        a.addInt(
          'shadowAngle',
          'Angle',
          Math.round((L.shadowDir / Math.PI) * 180),
          0,
          360,
        );
        a.addTab('Road');
        a.addColor('road', 'Color', L.colorRoad);
        a.addColor('roadOutline', 'Outline', L.colorRoadOutline);
        a.addFloat('roadWidth', 'Width', L.roadWidth, 0, 1);
        a.addFloat('roadWiggle', 'Wiggle', L.roadWiggle, 0, 1);
        a.addTab('Misc.');
        a.addFloat('strokeNormal', 'Normal stroke', L.strokeNormal, 0.1, 10);
        a.addFloat('strokeThin', 'Thin stroke', L.strokeThin, 0.1, 10);
        a.addFloat('strokeGrid', 'Grid stroke', L.strokeGrid, 0.1, 10);
        a.addInt('grassLength', 'Grass', L.grassLength, 0, la.hexRadius | 0);
      };
      L.getRandom = function () {
        var a = new ec(),
          b = Sa.hsl(
            80 +
              60 *
                ((((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1),
            0.2 +
              0.5 *
                Math.pow(
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    3,
                  2,
                ),
            0.9 -
              0.5 *
                Math.abs(
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
          );
        a.setColor('ground', b);
        var c = Sa.hsl(
          210 +
            180 *
              ((((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1),
          0.8 *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
          0.3 *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
        );
        a.setColor('ink', c);
        var d = Sa.hsl(
            135 +
              90 *
                ((((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1),
            0.3 +
              0.4 *
                (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            0.8 -
              0.6 *
                (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3),
          ),
          f = [d];
        if (0.5 > (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) {
          d = Sa.rgb2hsv(d);
          var h =
              60 *
              Math.pow(
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3,
                2,
              ),
            k = Math.pow(
              0.8,
              (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1,
            ),
            v = Math.pow(
              0.8,
              (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1,
            );
          f.push(Sa.hsv(d.x + h, d.y * k, d.z * v));
          0.5 > (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 &&
            f.push(Sa.hsv(d.x - h, d.y / k, d.z / v));
        }
        a.setMulti('tree', f);
        a.setFloat(
          'treeVariance',
          Math.round(
            ((0.6 *
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647)) /
              f.length) *
              10,
          ) / 10,
        );
        a.setInt('treeBands', ua.random([3, 3, 3, 2, 2, 4]));
        a.setString('treeShape', ua.random(L.TREE_SHAPE));
        d = 0.7;
        null == d && (d = 0.5);
        h =
          (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < d
            ? Sa.hsl(
                210 +
                  60 *
                    ((((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1),
                0.2 +
                  0.6 *
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
                0.1 +
                  0.3 *
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
              )
            : Sa.hsl(
                210 +
                  60 *
                    ((((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1),
                0.5 *
                  Math.abs(
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
                0.5 +
                  0.5 *
                    (((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3),
              );
        h = Sa.lerp(
          h,
          f[0],
          0.5 * ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
        );
        a.setColor('thicket', h);
        d = 0.05;
        null == d && (d = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < d
          ? a.setColor('treeDetails', f[0])
          : ((d = 0.8),
            null == d && (d = 0.5),
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < d
              ? a.setColor('treeDetails', c)
              : a.setColor(
                  'treeDetails',
                  Sa.lerpHSV(
                    c,
                    h,
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647,
                  ),
                ));
        f = Sa.brightness(h);
        0.5 < Math.abs(f - Sa.brightness(c))
          ? a.setColor('marks', c)
          : ((d = Sa.rgb2hsv(b)),
            a.setColor('marks', Sa.hsv(d.x, d.y, 0.5 > f ? f + 0.5 : f - 0.5)));
        d = 0.9;
        null == d && (d = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < d
          ? (a.setColor(
              'shadowColor',
              Sa.hsl(
                210 +
                  30 *
                    ((((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1),
                0.5 *
                  Math.abs(
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
                1 -
                  Math.abs(
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
              ),
            ),
            a.setFloat(
              'shadowLength',
              Math.pow(
                2,
                (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1,
              ),
            ),
            a.setInt(
              'shadowDir',
              Math.round(
                90 *
                  (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    3),
              ),
            ))
          : (a.setColor('shadowColor', 16777215),
            a.setFloat('shadowLength', 0),
            a.setInt('shadowDir', 0));
        d = Sa.rgb2hsv(b);
        d.x = Sa.lerpHue(
          d.x,
          220,
          (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647,
        );
        d.y *= Math.pow(
          2,
          (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
            3) *
            2 -
            1,
        );
        d.z *=
          1 -
          Math.abs(
            ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              2 -
              1,
          );
        a.setColor('water', Sa.hsv(d.x, d.y, d.z));
        b =
          d.x -
          30 *
            Math.abs(
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            );
        f =
          d.y *
          (1 -
            0.5 *
              Math.abs(
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ));
        d = d.z;
        h = Math.abs(
          ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
            2 -
            1,
        );
        null == h && (h = 0.5);
        b = Sa.hsv(b, f, d + (1 - d) * h);
        a.setColor('shallow', b);
        a.setColor(
          'sand',
          0.5 > (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647
            ? c
            : Sa.scale(
                b,
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3,
              ),
        );
        c = Math.pow(
          2,
          (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
            3) *
            2 -
            1,
        );
        b =
          0.2 +
          (c - 0.2) *
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3);
        f =
          0.2 +
          (b - 0.2) *
            ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647);
        a.setFloat('strokeNormal', Math.round(10 * c) / 10);
        a.setFloat('strokeThin', Math.round(10 * b) / 10);
        a.setFloat('strokeGrid', Math.round(10 * f) / 10);
        c = Math.round(
          la.hexRadius *
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3),
        );
        a.setInt('grassLength', c);
        return a;
      };
      var vb = function (a) {
        Va.call(this, a);
        null == a.wood && (a.wood = new ra(a));
        this.wood = a.wood;
        var b = new fa();
        this.addChild(b);
        b = b.get_graphics();
        this.drawGround(b);
        vb.showGrass && 16777215 != L.colorShadow && this.drawGrass();
        null != a.road && this.drawRoad();
        this.water = new Fc(a);
        this.water.set_visible(Va.showWater);
        this.addChild(this.water);
        this.addGrid();
        a = new Xc();
        this.addChild(a);
        Va.showDoors && this.drawDoors();
        a = new fa();
        this.addChild(a);
        var c = la.hexRadius / (vb.smallTrees ? 4 : 3);
        b = L.shadowScaled.x * c;
        c *= L.shadowScaled.y;
        this.drawTrees(a.get_graphics(), b, c);
        Va.showExits && this.drawExits();
      };
      g['com.watabou.cave.mapping.forest.GladeView'] = vb;
      vb.__name__ = 'com.watabou.cave.mapping.forest.GladeView';
      vb.__super__ = Va;
      vb.prototype = u(Va.prototype, {
        drawGround: function (a) {
          a.lineStyle(
            la.hexRadius + (la.hexRadius / (vb.smallTrees ? 4 : 3)) * 2,
            L.colorGround,
          );
          a.beginFill(L.colorGround);
          for (var b = 0, c = this.model.simple; b < c.length; ) {
            var d = c[b];
            ++b;
            yb.drawPolygon(a, d);
          }
          a.endFill();
        },
        drawGrass: function () {
          this.grass = new Jd(this.model);
          this.addChild(this.grass);
        },
        drawRoad: function () {
          var a = new sc(this.model);
          this.addChild(a);
        },
        updateWaterView: function () {
          var a = this.getChildIndex(this.water);
          this.removeChild(this.water);
          this.water = new Fc(this.model);
          this.water.set_visible((Va.showWater = !0));
          this.addChildAt(this.water, a);
          null != this.grass && this.grass.get_visible() && this.grass.update();
        },
        drawDoors: function () {
          this.doors = new fa();
          this.addChild(this.doors);
          var a = this.doors.get_graphics();
          a.beginFill(L.colorInk);
          for (var b = 0, c = this.model.doors; b < c.length; ) {
            var d = c[b];
            ++b;
            d = d.get_center();
            a.drawCircle(d.x, d.y, 6);
          }
        },
        drawTrees: function (a, b, c) {
          for (
            var d = this.wood.trees.copy(),
              f = gd.filter(this.wood.hollow, function (a) {
                for (var b = (a = a.halfEdge), c = !0; c; ) {
                  var d = b;
                  b = b.next;
                  c = b != a;
                  d = d.twin;
                  if (null != d && d.face.data.on) return !0;
                }
                return !1;
              }),
              h = la.hexRadius / (vb.smallTrees ? 4 : 3),
              k = 0,
              v = this.model.areas;
            k < v.length;

          ) {
            var p = v[k];
            ++k;
            if (vb.edgeTrees && !p.tunnel)
              for (var g = 0, t = p.faces; g < t.length; ) {
                var m = t[g];
                ++g;
                if (
                  !(
                    m.data.water ||
                    -1 != this.model.doors.indexOf(m.data) ||
                    (null != this.model.road &&
                      -1 != this.model.road.indexOf(m))
                  )
                ) {
                  var x = m.getNeighbours();
                  if (0 < x.length) {
                    var q = m.data.get_center();
                    p = new K();
                    var z = 0;
                    for (m = 0; m < x.length; ) {
                      var l = x[m];
                      ++m;
                      l.data.hollow ||
                        ((l = l.data.get_center().subtract(q)),
                        (p.x += l.x),
                        (p.y += l.y),
                        ++z);
                    }
                    x = z / 6;
                    null == x && (x = 0.5);
                    if (
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 <
                      x
                    ) {
                      x =
                        h *
                        Math.pow(
                          1.5,
                          (((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                            2147483647 +
                            (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                              2147483647 +
                            (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                              2147483647) /
                            3) *
                            2 -
                            1,
                        );
                      l =
                        (0.5 *
                          ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                            2147483647)) /
                        z;
                      q = new K(q.x + p.x * l, q.y + p.y * l);
                      var w = ec.weighted(L.colorTree);
                      l = L.treeVariance;
                      0 < l &&
                        (w = Sa.scale(
                          w,
                          Math.pow(
                            2,
                            l *
                              ((((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                                2147483647 +
                                (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                                  2147483647 +
                                (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                                  2147483647) /
                                3) *
                                2 -
                                1),
                          ),
                        ));
                      ba.drawTree(a, q, x, w, L.colorTreeDetails, b, c);
                    }
                  }
                }
              }
          }
          p = vb.shadeTrees && 16777215 != L.colorShadow;
          z = L.shadowLength / Math.sqrt(1 + L.shadowLength * L.shadowLength);
          k = 0;
          for (v = L.nBands; k < v; ) {
            h = k++;
            x = new na();
            g = t = f;
            for (t = t.keys(); t.hasNext(); ) {
              m = t.next();
              g.get(m);
              for (var G = (m = m.halfEdge), B = !0; B; ) {
                var D = G;
                G = G.next;
                B = G != m;
                D = D.twin;
                null != D &&
                  null != d.h.__keys__[D.face.__id__] &&
                  x.set(D.face, !0);
              }
            }
            m = Math.pow(h / L.nBands, 0.8);
            G = 0 < h;
            B = L.colorTreeDetails;
            B != L.colorTree[0] &&
              0 < m &&
              (B = Sa.lerp(B, L.colorThicket, m * m));
            D = h = x;
            for (var r = h.keys(); r.hasNext(); ) {
              h = r.next();
              D.get(h);
              w = ec.weighted(L.colorTree);
              l = L.treeVariance;
              0 < l &&
                (w = Sa.scale(
                  w,
                  Math.pow(
                    2,
                    l *
                      ((((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        3) *
                        2 -
                        1),
                  ),
                ));
              if (p) {
                var F = new K();
                g = q = 0;
                for (t = h.getNeighbours(); g < t.length; )
                  ((l = t[g]),
                    ++g,
                    null != f.h.__keys__[l.__id__] &&
                      ((l = l.data.c), (F.x += l.x), (F.y += l.y), ++q));
                0 < q &&
                  ((g = h.data.c),
                  (l = -q),
                  (F.x += g.x * l),
                  (F.y += g.y * l),
                  (g = L.shadowNorm),
                  (g = (F.x * g.x + F.y * g.y) / F.get_length()),
                  (t = Sa.multiply(w, L.colorShadow)),
                  (w = Sa.lerpf(t, w, 1 - z * g)));
              }
              0 < m && (w = Sa.lerp(w, L.colorThicket, m));
              q = h.data.c;
              h = h.data.r;
              G && (h *= 1.2);
              ba.drawTree(a, q, h, w, B, b, c, G);
            }
            gd.removeAll(d, x);
            f = x;
          }
          k = new na();
          g = t = f;
          for (t = t.keys(); t.hasNext(); )
            for (m = t.next(), g.get(m), G = m = m.halfEdge, B = !0; B; )
              ((D = G),
                (G = G.next),
                (B = G != m),
                null != D.twin &&
                  null != d.h.__keys__[D.twin.face.__id__] &&
                  k.set(D.twin.face, !0));
          a.beginFill(L.colorThicket);
          h = la.hexRadius / (vb.smallTrees ? 4 : 3);
          d = yc.outlineEx(gd.toArray(k), null);
          for (k = 0; k < d.length; )
            ((f = d[k]),
              ++k,
              (f = Me.toPoly(f)),
              (f = Jb.resampleClosed(f, h)),
              (f = ba.treeType.getThicket(f, 2 * h)),
              yb.drawPolygon(a, f));
          a.endFill();
        },
        drawExits: function () {
          Eb.color = L.colorMarks;
          Eb.outline = L.colorThicket;
          Eb.thickness = 2 * L.strokeNormal;
          Eb.wingSize = 0.5 * la.hexRadius;
          Eb.$length = Math.max(
            (la.hexRadius / (vb.smallTrees ? 4 : 3)) * (L.nBands + 0.5) * 2,
            2 * la.hexRadius,
          );
          this.exits = new fa();
          this.addChild(this.exits);
          var a = this.model.rect;
          a = new K(a.x + a.width / 2, a.y + a.height / 2);
          for (var b = 0, c = this.model.exits; b < c.length; ) {
            var d = c[b];
            ++b;
            for (
              var f = d.get_center(),
                h = new K(),
                k = (d = d.face.halfEdge),
                v = !0;
              v;

            ) {
              var p = k;
              k = k.next;
              v = k != d;
              var g = p.twin;
              null != g &&
                g.face.data.hollow &&
                ((p = f.subtract(
                  cb.lerp(p.origin.point, p.next.origin.point, 0.5),
                )),
                (h.x += p.x),
                (h.y += p.y));
            }
            d = h;
            k = 1.5 * la.hexRadius;
            null == k && (k = 1);
            d = d.clone();
            d.normalize(k);
            f = f.add(d);
            Eb.draw(this.exits.get_graphics(), f, h, f.subtract(a));
          }
        },
        toggleWater: function () {
          Va.prototype.toggleWater.call(this);
          this.water.set_visible(Va.showWater);
        },
        toggleGrass: function () {
          (vb.showGrass = !vb.showGrass)
            ? null == this.grass
              ? this.drawGrass()
              : this.grass.set_visible(!0)
            : this.grass.set_visible(!1);
        },
        toggleExits: function () {
          (Va.showExits = !Va.showExits)
            ? null == this.exits
              ? this.drawExits()
              : this.exits.set_visible(!0)
            : this.exits.set_visible(!1);
        },
        toggleSteps: function () {
          vb.showSteps = !vb.showSteps;
          null == this.grass ? this.drawGrass() : this.grass.update();
          this.grass.set_visible((vb.showGrass = vb.showGrass || vb.showSteps));
        },
        getTextColor: function () {
          return L.colorMarks;
        },
        getGridColor: function () {
          return L.colorInk;
        },
        getGridStroke: function () {
          return L.strokeGrid;
        },
        __class__: vb,
      });
      var Fc = function (a) {
        fa.call(this);
        var b = this.get_graphics(),
          c = (4 * la.hexInner) / 3;
        b.lineStyle(c, L.colorSand);
        for (var d = 0, f = a.water.outlines; d < f.length; ) {
          var h = f[d];
          ++d;
          yb.drawPolygon(b, h);
        }
        b.lineStyle(c - 2 * L.strokeNormal, L.colorShallow);
        b.beginFill(L.colorShallow);
        d = 0;
        for (f = a.water.outlines; d < f.length; )
          ((h = f[d]), ++d, yb.drawPolygon(b, h));
        b.endFill();
        if (L.colorDeep != L.colorShallow)
          for (
            b.beginFill(L.colorDeep), d = 0, f = a.water.deep;
            d < f.length;

          )
            ((h = f[d]), ++d, yb.drawPolygon(b, h));
      };
      g['com.watabou.cave.mapping.forest.GladeWaterView'] = Fc;
      Fc.__name__ = 'com.watabou.cave.mapping.forest.GladeWaterView';
      Fc.__super__ = fa;
      Fc.prototype = u(fa.prototype, { __class__: Fc });
      var Jd = function (a) {
        fa.call(this);
        this.model = a;
        this.update();
      };
      g['com.watabou.cave.mapping.forest.GrassView'] = Jd;
      Jd.__name__ = 'com.watabou.cave.mapping.forest.GrassView';
      Jd.__super__ = fa;
      Jd.prototype = u(fa.prototype, {
        update: function () {
          this.get_graphics().clear();
          var a = Sa.multiply(L.colorGround, L.colorShadow);
          this.get_graphics().lineStyle(L.strokeThin, a);
          a = 0;
          for (var b = this.model.areas; a < b.length; ) {
            var c = b[a];
            ++a;
            if (!c.tunnel) {
              var d = c.faces;
              null != this.model.road &&
                (d = ua.difference(d, this.model.road));
              c = [];
              for (var f = 0; f < d.length; ) {
                var h = d[f];
                ++f;
                h.data.water || c.push(h);
              }
              for (c = yc.shrink(c); !ua.isEmpty(c); ) {
                f = yc.outlineEx(c, null);
                for (d = 0; d < f.length; )
                  ((h = f[d]),
                    ++d,
                    (h = Me.toPoly(h)),
                    (h = Jb.wobbleFixed(h, la.hexInner)),
                    (h = Jb.smoothClosed(h, 0.4)),
                    (h = Id.render(h, !0, 2)),
                    0 < L.grassLength && (h = Jb.resampleClosed(h, Jd.STEP)),
                    h.push(h[0]),
                    this.shadeCurve(h));
                c = yc.shrink(c);
              }
            }
          }
          vb.showSteps && this.drawSteps();
        },
        drawSteps: function () {
          for (var a = 0, b = this.model.steps; a < b.length; ) {
            var c = b[a];
            ++a;
            if (null != c.center)
              for (var d = 0; 2 > d; ) {
                var f = d++,
                  h = c.a0;
                f = (f + 0.5) / 2;
                null == f && (f = 0.5);
                f = h + (c.a1 - h) * f;
                h = K.polar(0.5 * la.hexRadius, f);
                f = K.polar(2.5 * la.hexRadius, f);
                if (c.a0 > c.a1) {
                  var k = h;
                  h = f;
                  f = k;
                }
                this.drawStep(c.center.add(h), c.center.add(f));
              }
            else
              for (
                d = c.p0,
                  c = c.p1,
                  h = new K(d.y - c.y, c.x - d.x),
                  f = la.hexRadius,
                  null == f && (f = 1),
                  h = h.clone(),
                  h.normalize(f),
                  f = 0;
                2 > f;

              )
                ((k = f++),
                  (k = cb.lerp(d, c, (k + 0.5) / 2)),
                  this.drawStep(k.add(h), k.subtract(h)));
          }
        },
        drawStep: function (a, b) {
          var c = new K(a.y - b.y, b.x - a.x),
            d = cb.lerp(a, b, 0.3),
            f = cb.lerp(a, b, 0.7);
          a = new K(a.x + -0.125 * c.x, a.y + -0.125 * c.y);
          var h =
            0.25 *
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3);
          d = new K(d.x + c.x * h, d.y + c.y * h);
          h =
            0.25 *
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3);
          b = Id.render(
            [
              a,
              d,
              new K(f.x + c.x * h, f.y + c.y * h),
              new K(b.x + -0.125 * c.x, b.y + -0.125 * c.y),
            ],
            !1,
          );
          0 < L.grassLength && (b = Jb.resampleOpen(b, Jd.STEP));
          b.reverse();
          this.shadeCurve(b);
        },
        shadeCurve: function (a) {
          for (var b = this.get_graphics(), c = 1, d = a.length; c < d; ) {
            var f = c++,
              h = a[f - 1];
            f = a[f];
            var k = !0;
            null == k && (k = !1);
            var v = new K(f.y - h.y, h.x - f.x);
            k && v.normalize(1);
            k = v;
            v = L.shadowNorm;
            v = k.x * v.x + k.y * v.y;
            0 < L.grassLength
              ? ((v =
                  (v + 1) *
                  (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
                (v *= L.grassLength),
                v > L.strokeThin &&
                  ((h = cb.lerp(h, f)),
                  (f = new K(h.x + k.x * v, h.y + k.y * v)),
                  b.moveTo(h.x, h.y),
                  b.lineTo(f.x, f.y)))
              : -0.5 < v && (b.moveTo(h.x, h.y), b.lineTo(f.x, f.y));
          }
        },
        __class__: Jd,
      });
      var Xc = function () {
        fa.call(this);
        Xc.inst = this;
        this.set_blendMode(9);
      };
      g['com.watabou.cave.mapping.forest.ShadowLayer'] = Xc;
      Xc.__name__ = 'com.watabou.cave.mapping.forest.ShadowLayer';
      Xc.__super__ = fa;
      Xc.prototype = u(fa.prototype, {
        drawPoly: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          this.get_graphics().beginFill(L.colorShadow);
          yb.drawPolygonAt(this.get_graphics(), a, b, c);
        },
        __class__: Xc,
      });
      var n = function () {};
      g['com.watabou.utils.Random'] = n;
      n.__name__ = 'com.watabou.utils.Random';
      n.reset = function (a) {
        null == a && (a = -1);
        n.seed = -1 != a ? a : new Date().getTime() % 2147483647 | 0;
      };
      n.save = function () {
        return (n.saved = n.seed);
      };
      n.restore = function (a) {
        null == a && (a = -1);
        -1 != a
          ? (n.seed = a)
          : -1 != n.saved && ((n.seed = n.saved), (n.saved = -1));
      };
      n.float = function () {
        return (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647;
      };
      var mb = function () {};
      g['com.watabou.cave.utils.Bloater'] = mb;
      mb.__name__ = 'com.watabou.cave.utils.Bloater';
      mb.bloat = function (a, b) {
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++;
          h = mb.extrudeEx(a[h], a[(h + 1) % c], b);
          for (var k = 0; k < h.length; ) {
            var v = h[k];
            ++k;
            d.push(v);
          }
        }
        return d;
      };
      mb.extrude = function (a, b, c) {
        var d = a.subtract(b);
        c = d.get_length() / c;
        return 0.1 < c
          ? (d.setTo(-d.y, d.x),
            (c = 0.5 * (1 > c ? c : 1)),
            (d.x *= c),
            (d.y *= c),
            (a = cb.lerp(a, b)),
            (a.x += d.x),
            (a.y += d.y),
            a)
          : null;
      };
      mb.extrudeEx = function (a, b, c) {
        var d = mb.extrude(a, b, c);
        return null == d
          ? [a]
          : mb.extrudeEx(a, d, c).concat(mb.extrudeEx(d, b, c));
      };
      var cb = function () {};
      g['com.watabou.geom.GeomUtils'] = cb;
      cb.__name__ = 'com.watabou.geom.GeomUtils';
      cb.intersectLines = function (a, b, c, d, f, h, k, v) {
        var p = c * v - d * k;
        if (0 == p) return null;
        p = (d * (f - a) - c * (h - b)) / p;
        return new K(
          Math.abs(c) > Math.abs(d) ? (f - a + k * p) / c : (h - b + v * p) / d,
          p,
        );
      };
      cb.lerp = function (a, b, c) {
        null == c && (c = 0.5);
        var d = a.x,
          f = c;
        null == f && (f = 0.5);
        var h = a.y;
        a = c;
        null == a && (a = 0.5);
        return new K(d + (b.x - d) * f, h + (b.y - h) * a);
      };
      var t = function () {};
      g['com.watabou.geom.polygons.PolyTransform'] = t;
      t.__name__ = 'com.watabou.geom.polygons.PolyTransform';
      t.translate = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          d.push(new K(h.x + b, h.y + c));
        }
        return d;
      };
      t.asTranslate = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.x += b;
          f.y += c;
        }
      };
      t.scale = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          d.push(new K(h.x * b, h.y * c));
        }
        return d;
      };
      t.asScale = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.x *= b;
          f.y *= c;
        }
      };
      t.rotateYX = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          d.push(new K(h.x * c - h.y * b, h.y * c + h.x * b));
        }
        return d;
      };
      t.asRotateYX = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.setTo(f.x * c - f.y * b, f.y * c + f.x * b);
        }
      };
      var x = function () {};
      g['com.watabou.cave.utils.Spiker'] = x;
      x.__name__ = 'com.watabou.cave.utils.Spiker';
      x.simple = function (a, b) {
        for (var c = [], d = a[a.length - 1], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          var k = h.subtract(d),
            v = Math.sqrt(k.get_length() / b);
          k.x *= v;
          k.y *= v;
          k.setTo(k.y, -k.x);
          v = cb.lerp(d, h);
          k.x += v.x;
          k.y += v.y;
          c.push(d);
          c.push(k);
          d = h;
        }
        return c;
      };
      x.bent = function (a, b) {
        for (var c = [], d = a[a.length - 1], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          var k = h.subtract(d),
            v = Math.sqrt(k.get_length() / b);
          k.x *= v;
          k.y *= v;
          k.setTo(k.y, -k.x);
          v = 0.1 * -k.get_length();
          var p = cb.lerp(d, h);
          k.x += p.x;
          k.y += p.y;
          c.push(d);
          p = cb.lerp(d, k);
          d = new K(d.y - k.y, k.x - d.x);
          p.x += -0.1 * d.x;
          p.y += -0.1 * d.y;
          p.y += v;
          c.push(p);
          c.push(k);
          d = cb.lerp(k, h);
          k = new K(k.y - h.y, h.x - k.x);
          d.x += -0.1 * k.x;
          d.y += -0.1 * k.y;
          d.y += v;
          c.push(d);
          d = h;
        }
        return c;
      };
      var G = function (a, b, c, d) {
        this.getCrown = a;
        this.getThicket = b;
        this.shadeCrown = c;
        this.shadeThicket = d;
      };
      g['com.watabou.cave.mapping.forest.TreeType'] = G;
      G.__name__ = 'com.watabou.cave.mapping.forest.TreeType';
      G.getCloudCrown = function (a) {
        for (var b = [], c = 0, d = 12; c < d; ) {
          var f = c++;
          f =
            (2 *
              Math.PI *
              (f +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3)) /
            12;
          b.push(
            K.polar(
              a *
                (1 -
                  (4 / 12) *
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    )),
              f,
            ),
          );
        }
        var h = b,
          k = a * Math.sin((3 * Math.PI) / 12),
          v = mb.bloat(h, k),
          p = G.BALL_BANDS;
        b = new na();
        c = 0;
        for (d = p.length; c < d; ) {
          f = c++;
          var g = p[f],
            x = 3 * g * g,
            m = t.scale(h, g, g);
          t.asTranslate(m, 0, -(f + 1) * a * 0.15);
          b.set(mb.bloat(m, k / g), x);
        }
        return { outer: v, inner: b };
      };
      G.getPineCrown = function (a) {
        for (var b = [], c = 0, d = 16; c < d; ) {
          var f = c++;
          f =
            (2 *
              Math.PI *
              (f +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3)) /
            16;
          b.push(
            K.polar(
              a *
                (1 -
                  0.25 *
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    )),
              f,
            ),
          );
        }
        var h = b,
          k = a * Math.sin((3 * Math.PI) / 16),
          v = x.simple(h, k),
          p = G.CONE_BANDS;
        b = new na();
        c = 0;
        for (d = p.length; c < d; ) {
          f = c++;
          var g = p[f],
            q = t.scale(h, g, g);
          t.asTranslate(q, 0, -(f + 1) * a * 0.12);
          b.set(x.simple(q, k), 0.5 + g);
        }
        return { outer: v, inner: b };
      };
      G.getPalmCrown = function (a) {
        for (var b = [], c = 0, d = 12; c < d; ) {
          var f = c++;
          f =
            (2 *
              Math.PI *
              (f +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3)) /
            12;
          b.push(
            K.polar(
              a *
                (1 -
                  (4 / 12) *
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    )),
              f,
            ),
          );
        }
        var h = b,
          k = a * Math.sin((3 * Math.PI) / 12),
          v = x.bent(h, k),
          p = G.PALM_BANDS;
        b = new na();
        c = 0;
        for (d = p.length; c < d; ) {
          f = c++;
          var g = p[f],
            q = t.scale(h, g, g);
          t.asTranslate(q, 0, -(f + 1) * a * 0.1);
          b.set(x.bent(q, k), 3 * g);
        }
        return { outer: v, inner: b };
      };
      G.drawShaded1 = function (a, b, c, d) {
        for (var f = b.length, h = b[f - 1], k = 0; k < f; ) {
          var v = k++,
            p = h;
          h = b[v];
          v = h.subtract(p);
          v = (c.x * v.x + c.y * v.y) / v.get_length();
          v = d * (0.5 + 0.5 * v);
          null == v && (v = 0.5);
          (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < v &&
            (a.moveTo(p.x, p.y), a.lineTo(h.x, h.y));
        }
      };
      G.drawShaded2 = function (a, b, c, d) {
        for (var f = b.length, h = 0; h < f; ) {
          var k = b[h],
            v = b[(h + 1) % f],
            p = b[(h + 2) % f],
            g = p.subtract(k);
          g = (c.x * g.x + c.y * g.y) / g.get_length();
          0.5 < d * (0.5 + 0.5 * g) &&
            (a.moveTo(k.x, k.y), a.lineTo(v.x, v.y), a.lineTo(p.x, p.y));
          h += 2;
        }
      };
      G.drawShaded4 = function (a, b, c, d) {
        for (var f = 0, h = b.length; f < h; ) {
          var k = b[f],
            v = b[(f + 1) % h],
            p = b[(f + 2) % h],
            g = b[(f + 3) % h],
            t = b[(f + 4) % h],
            m = t.subtract(k);
          m = (c.x * m.x + c.y * m.y) / m.get_length();
          m = d * (0.5 + 0.5 * m);
          null == m && (m = 0.5);
          (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < m &&
            (a.moveTo(k.x, k.y),
            a.lineTo(v.x, v.y),
            a.lineTo(p.x, p.y),
            a.lineTo(g.x, g.y),
            a.lineTo(t.x, t.y));
          f += 4;
        }
      };
      G.prototype = { __class__: G };
      var ba = function () {};
      g['com.watabou.cave.mapping.forest.TreeView'] = ba;
      ba.__name__ = 'com.watabou.cave.mapping.forest.TreeView';
      ba.drawTree = function (a, b, c, d, f, h, k, v) {
        null == v && (v = !1);
        h = (10 * c) | 0;
        k = ba.crownCache.h[h];
        if (null == k) {
          k = ba.crownCache;
          var p = ba.treeType.getCrown(c);
          k = k.h[h] = p;
        }
        h = f != L.colorTree[0];
        v
          ? a.lineStyle(L.strokeThin, h ? f : d)
          : a.lineStyle(L.strokeNormal, L.colorInk);
        a.beginFill(d);
        yb.drawPolygonAt(a, k.outer, b.x, b.y);
        a.endFill();
        !v &&
          0 < L.shadowLength &&
          ((d =
            0.5 +
            ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
              3),
          ba.treeType == G.pine && 1 < 3 * d * L.shadowLength
            ? ba.drawConiferShadow(k.outer, b, c, d)
            : ba.treeType == G.cloud && 0.5 < d * L.shadowLength
              ? ba.drawLongShadow(k.outer, b, c, 1)
              : ba.drawSimpleShadow(k.outer, b, c, d));
        if (h) {
          c = L.shadowNorm;
          c = new K(-c.y, c.x);
          a.lineStyle(L.strokeThin, f);
          f = k.inner;
          for (d = f.keys(); d.hasNext(); )
            ((h = d.next()),
              (v = f.get(h)),
              (h = t.translate(h, b.x, b.y)),
              ba.treeType.shadeCrown(a, h, c, v));
          a.endFill();
        }
      };
      ba.drawConiferShadow = function (a, b, c, d) {
        var f = 3 * d * c * L.shadowScaled.x,
          h = 3 * d * c * L.shadowScaled.y;
        Xc.inst.drawPoly([
          new K(b.x + c * L.shadowNorm.y, b.y - c * L.shadowNorm.x),
          new K(b.x - c * L.shadowNorm.y, b.y + c * L.shadowNorm.x),
          new K(b.x + f, b.y + h),
        ]);
        c = Math.ceil(d * L.shadowLength * 3);
        for (d = 0; d < c; ) {
          var k = d++,
            v = 1 - k / c;
          k = (k + 1) / (c + 1);
          Xc.inst.drawPoly(t.scale(a, v, v), b.x + f * k, b.y + h * k);
        }
      };
      ba.drawLongShadow = function (a, b, c, d) {
        var f = ba.shadowCache.h[a.__id__];
        null == f &&
          ((d = 1 + 0.5 * L.shadowLength * d),
          (f = t.rotateYX(a, -L.shadowNorm.y, L.shadowNorm.x)),
          t.asTranslate(f, c, 0),
          t.asScale(f, d, 1),
          t.asTranslate(f, -c * (1 - L.shadowLength / 4), 0),
          t.asRotateYX(f, L.shadowNorm.y, L.shadowNorm.x),
          ba.shadowCache.set(a, f));
        Xc.inst.drawPoly(f, b.x, b.y);
      };
      ba.drawSimpleShadow = function (a, b, c, d) {
        var f = d * c * L.shadowScaled.x;
        c = d * c * L.shadowScaled.y;
        Xc.inst.drawPoly(a, b.x + f, b.y + c);
        2 <= d * L.shadowLength &&
          ((a = Xc.inst.get_graphics()),
          a.lineStyle(1.5, L.colorShadow),
          a.moveTo(b.x, b.y),
          (b = new K(b.x + f, b.y + c)),
          a.lineTo(b.x, b.y),
          a.endFill());
      };
      ba.updateCache = function () {
        switch (L.treeShape) {
          case 'Conifer':
            var a = G.pine;
            break;
          case 'Palm':
            a = G.palm;
            break;
          default:
            a = G.cloud;
        }
        if (
          a != ba.treeType ||
          (a == G.cloud &&
            (L.shadowLength != ba.cachedShadowLen ||
              L.shadowDir != ba.cachedShadowAng))
        )
          ((ba.treeType = a),
            (ba.cachedShadowLen = L.shadowLength),
            (ba.cachedShadowAng = L.shadowDir),
            (ba.crownCache.h = {}));
      };
      var ra = function (a) {
        var b = (la.hexRadius / (vb.smallTrees ? 4 : 3)) * 2,
          c = 6 * b,
          d = a.rect.clone();
        d.inflate(c, c);
        d = Yf.poisson(b, 10 * b, 10 * b).getRect(d.x, d.y, d.width, d.height);
        this.dcel = new yc(d);
        b = a.simple;
        d = a.rect.clone();
        d.inflate(la.hexRadius, la.hexRadius);
        this.trees = new na();
        this.hollow = new na();
        a = 0;
        for (c = this.dcel.faces; a < c.length; ) {
          var f = c[a];
          ++a;
          var h = (f.data = new ta(f)),
            k = h.c;
          if (d.containsPoint(k) && Ne.containsPoint(b[0], k)) {
            h.on = !1;
            for (var v = 1, p = b.length; v < p; ) {
              var g = v++;
              if (Ne.containsPoint(b[g], k)) {
                h.on = !0;
                break;
              }
            }
          }
          h.on ? this.trees.set(f, !0) : this.hollow.set(f, !0);
        }
      };
      g['com.watabou.cave.mapping.forest.Wood'] = ra;
      ra.__name__ = 'com.watabou.cave.mapping.forest.Wood';
      ra.prototype = { __class__: ra };
      var ta = function (a) {
        this.on = !0;
        this.face = a;
        this.poly = a.getPoly();
        this.c = Hd.center(this.poly);
        this.r = Infinity;
        a = 0;
        for (var b = this.poly; a < b.length; ) {
          var c = b[a];
          ++a;
          var d = c.x - this.c.x;
          c = c.y - this.c.y;
          d = d * d + c * c;
          this.r > d && (this.r = d);
        }
        this.r = Math.sqrt(this.r);
      };
      g['com.watabou.cave.mapping.forest.Tree'] = ta;
      ta.__name__ = 'com.watabou.cave.mapping.forest.Tree';
      ta.prototype = { __class__: ta };
      var kc = function (a, b) {
        this.tunnel = !1;
        this.model = a;
        this.faces = b;
        for (a = 0; a < b.length; ) {
          var c = b[a];
          ++a;
          c.data.area = this;
        }
        la.fill(b, !0);
        this.border = [];
        for (a = 0; a < b.length; )
          ((c = b[a]), ++a, ua.addAll(this.border, c.getNeighbours()));
        ua.removeAll(this.border, b);
        a = 0;
        for (b = this.border; a < b.length; )
          ((c = b[a]), ++a, c.data.border(this));
      };
      g['com.watabou.cave.model.Area'] = kc;
      kc.__name__ = 'com.watabou.cave.model.Area';
      kc.checkConnectivity = function (a, b) {
        var c = yc.floodFill(a[0], function (c) {
          return -1 == a.indexOf(c) ? -1 != b.indexOf(c) : !0;
        });
        return ua.every(b, function (a) {
          return -1 != c.indexOf(a);
        });
      };
      kc.growFrom = function (a, b, c, d) {
        var f = b.getNeighbours();
        if (
          ua.some(f, function (a) {
            return null != a.data.border2;
          })
        )
          return null;
        var h = -1 != a.bp.tags.indexOf('tight');
        b = [b];
        for (var k = 1; k < c; ) {
          k++;
          for (var v = [], p = [], g = 0; g < b.length; ) {
            f = b[g];
            ++g;
            for (var t = f.getNeighbours(), m = 0; m < t.length; ) {
              var n = t[m];
              ++m;
              -1 == b.indexOf(n) &&
                -1 == v.indexOf(n) &&
                null == n.data.border1 &&
                ((f = n.getNeighbours()),
                ua.some(f, function (a) {
                  return null != a.data.border2;
                }) ||
                  (v.push(n),
                  (n = h
                    ? Math.pow(
                        0.333 +
                          ua.count(f, function (a) {
                            return null != a.data.border1;
                          }),
                        2,
                      )
                    : 1),
                  (f = ua.intersect(f, b).length),
                  p.push(n * d(f))));
            }
          }
          if (0 < v.length) b.push(ua.weighted(v, p));
          else break;
        }
        return new kc(a, b);
      };
      kc.cavity = function (a) {
        return Math.pow(a, 6);
      };
      kc.chaotic = function (a) {
        return 3 > a ? Math.pow(a, 4) : 1e-4;
      };
      kc.varied = function () {
        var a = ua.fallOff(kc.queue);
        O.remove(kc.queue, a);
        kc.queue.push(a);
        switch (a) {
          case 0:
            return kc.cavity;
          case 1:
            return kc.chaotic;
          case 2:
            var b = (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647;
            return function (a) {
              return Math.pow(a, -1 - b);
            };
          default:
            var c =
              4 *
                Math.sqrt(
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    3,
                ) -
              1;
            return function (a) {
              return Math.pow(a, c);
            };
        }
      };
      kc.prototype = {
        shrink: function (a) {
          for (la.fill(this.faces, !1); ; ) {
            for (var b = null, c = this.faces.slice(); 0 < c.length; ) {
              var d = ua.pick(c),
                f = this.faces.concat(a);
              O.remove(f, d);
              if (kc.checkConnectivity(f, a)) {
                b = d;
                break;
              }
            }
            if (null != b) O.remove(this.faces, b);
            else {
              la.fill(this.faces, !0);
              break;
            }
          }
        },
        __class__: kc,
      };
      var za = function (a, b) {
        null == a && (a = 0);
        this.customWater = !1;
        this.seed = 0 != a ? a : (n.seed = (48271 * n.seed) % 2147483647 | 0);
        this.tags = null != b ? b : zb.randomTags();
        zb.resolve(this.tags);
        a = this.seed;
        b = this.tags;
        this.waterSeed = a;
        n.reset(a);
        switch (this.getTag(zb.SIZE)) {
          case 'large':
            a = Math.floor(
              9 +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
                  11,
            );
            break;
          case 'medium':
            a = Math.floor(
              3 +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) * 6,
            );
            break;
          case 'small':
            a = Math.floor(
              2 +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) * 2,
            );
            break;
          default:
            switch (
              Math.floor(
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
                  20,
              )
            ) {
              case 0:
                a = 2;
                break;
              case 1:
                a = 20;
                break;
              default:
                a = Math.round(
                  Math.pow(
                    4,
                    1 +
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        3,
                  ),
                );
            }
        }
        this.nAreas = a;
        switch (this.getTag(zb.WATER)) {
          case 'dry':
            a = 0;
            break;
          case 'flooded':
            a =
              0.7 +
              0.3 * ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647);
            break;
          case 'wet':
            a =
              0.2 +
              0.5 *
                (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  3);
            break;
          default:
            a =
              0.2 +
              0.6 *
                Math.abs(
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                );
        }
        this.water = Math.round(20 * a) / 20;
        switch (this.getTag(zb.EXITS)) {
          case 'entrance':
            a = 1;
            break;
          case 'junction':
            a = Math.floor(
              3 +
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
                  (this.nAreas + 1 - 3),
            );
            break;
          case 'passage':
            a = 2;
            break;
          case 'sealed':
            a = 0;
            break;
          default:
            a = 1;
            for (var c = 0, d = this.nAreas; c < d; ) {
              var f = c++;
              f = Math.pow(0.5, 2 + f);
              null == f && (f = 0.5);
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < f &&
                ++a;
            }
        }
        this.nExits = a;
        2 > this.nExits && -1 != this.tags.indexOf('road') && (this.nExits = 2);
        switch (this.getTag(zb.SHAPE)) {
          case 'cavities':
            a = kc.cavity;
            break;
          case 'chaotic':
            a = kc.chaotic;
            break;
          case 'coral':
            var h = (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647;
            a = function (a) {
              return Math.pow(a, -1 - h);
            };
            break;
          case 'varied':
            a = null;
            break;
          default:
            var k =
              4 *
                Math.sqrt(
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                    (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                    3,
                ) -
              1;
            a = function (a) {
              return Math.pow(a, k);
            };
        }
        this.getGrowthWeight = a;
        this.tunnelChance = -1 != b.indexOf('burrows') ? 5 : 0.5;
        this.stepsChance = Math.pow(
          ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
            3,
          2,
        );
        if (-1 != b.indexOf('hub'))
          ((this.chooseAreaSize = function (a) {
            return 0 == a
              ? Math.floor(
                  60 +
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647) *
                      20,
                )
              : Math.floor(
                  8 +
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647) *
                      5,
                );
          }),
            (this.tunnelChance = 0.2));
        else if (-1 != b.indexOf('chambers')) {
          var v = Math.floor(
            11 +
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) * 4,
          );
          this.chooseAreaSize = function (a) {
            return (
              v +
              Math.floor(
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) * 3,
              )
            );
          };
          this.tunnelChance = 0.1;
        } else
          this.chooseAreaSize = function (a) {
            return (
              (10 +
                80 *
                  Math.pow(
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                      (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647) /
                      3,
                    3,
                  )) |
              0
            );
          };
      };
      g['com.watabou.cave.model.Blueprint'] = za;
      za.__name__ = 'com.watabou.cave.model.Blueprint';
      za.random = function () {
        return new za();
      };
      za.fromTags = function (a) {
        return new za(null, a);
      };
      za.fromURL = function () {
        var a = Ra.getInt('seed', 0),
          b = Ra.get('tags', null),
          c = Ra.get('name', null);
        if (0 == a && null == b) return null;
        b = null == b ? null : b.split(',');
        a = new za(a, b);
        null != c && (a.name = decodeURIComponent(c.split('+').join(' ')));
        c = Ra.getFloat('water', NaN);
        isNaN(c) || ((a.customWater = !0), (a.water = c));
        a.waterSeed = Ra.getInt('waterSeed', a.waterSeed);
        za.wallsDistortion = Ra.getFloat(
          'wd',
          zc.gate(za.wallsDistortion, 0, 1),
        );
        za.wallsBumpiness = Ra.getFloat('wb', zc.gate(za.wallsBumpiness, 0, 1));
        za.wallsRoughness = Ra.getFloat('wr', zc.gate(za.wallsRoughness, 0, 1));
        return a;
      };
      za.prototype = {
        getTag: function (a) {
          a = ua.intersect(this.tags, a);
          return 0 == a.length ? null : a[0];
        },
        adjust: function () {
          n.reset(this.seed);
          this.seed = n.seed = (48271 * n.seed) % 2147483647 | 0;
        },
        updateURL: function () {
          Ra.reset();
          Ra.set('seed', this.seed);
          Ra.set('tags', this.tags.join(','));
          this.customWater && Ra.set('water', this.water);
          this.waterSeed != this.seed && Ra.set('waterSeed', this.waterSeed);
          null != this.name && Ra.set('name', encodeURIComponent(this.name));
          1 > za.wallsDistortion && Ra.set('wd', za.wallsDistortion);
          1 > za.wallsBumpiness && Ra.set('wb', za.wallsBumpiness);
          1 > za.wallsRoughness && Ra.set('wr', za.wallsRoughness);
          Ra.set('glade', fb.showGlade ? 1 : 0);
        },
        __class__: za,
      };
      var jc = function (a) {
        this.level = 0;
        this.hollow = this.exit = this.water = !1;
        this.face = a;
        a.data = this;
      };
      g['com.watabou.cave.model.Cell'] = jc;
      jc.__name__ = 'com.watabou.cave.model.Cell';
      jc.prototype = {
        get_poly: function () {
          return null != this._poly
            ? this._poly
            : (this._poly = this.face.getPoly());
        },
        get_center: function () {
          return null != this._center
            ? this._center
            : (this._center = Hd.centroid(this.get_poly()));
        },
        border: function (a) {
          null == this.border1
            ? (this.border1 = a)
            : null == this.border2
              ? (this.border2 = a)
              : (Yb.trace('Too many areas around!', {
                  fileName: 'Source/com/watabou/cave/model/Cell.hx',
                  lineNumber: 48,
                  className: 'com.watabou.cave.model.Cell',
                  methodName: 'border',
                }),
                (this.border1 = this.border2 = null));
        },
        isInner: function () {
          for (var a = this.face.halfEdge, b = a, c = !0; c; ) {
            var d = b;
            b = b.next;
            c = b != a;
            if (null == d.twin || !d.twin.face.data.hollow) return !1;
          }
          return !0;
        },
        __class__: jc,
        __properties__: { get_center: 'get_center', get_poly: 'get_poly' },
      };
      var Ec = function (a) {
        this.half0 = a;
        this.half0.data = this;
        null != (this.half1 = a.twin) && (this.half1.data = this);
      };
      g['com.watabou.cave.model.Edge'] = Ec;
      Ec.__name__ = 'com.watabou.cave.model.Edge';
      Ec.prototype = {
        get_p0: function () {
          return this.half0.origin.point;
        },
        get_p1: function () {
          return this.half0.next.origin.point;
        },
        get_face0: function () {
          return this.half0.face;
        },
        get_face1: function () {
          return null != this.half1 ? this.half1.face : null;
        },
        __class__: Ec,
        __properties__: {
          get_face1: 'get_face1',
          get_face0: 'get_face0',
          get_p1: 'get_p1',
          get_p0: 'get_p0',
        },
      };
      var Kb = function () {};
      g['com.watabou.cave.model.Namer'] = Kb;
      Kb.__name__ = 'com.watabou.cave.model.Namer';
      Kb.init = function (a, b) {
        null == b && (b = !1);
        var c = fb.showGlade ? 'forest_grammar' : 'grammar';
        Kb.grammar = Kb.cache.h[c];
        null == Kb.grammar &&
          ((Yd.rng = n.float),
          (Kb.grammar = new Di(JSON.parse(Zb.getText(c)))),
          (Kb.grammar.defaultSelector = Pg),
          Kb.grammar.addModifiers(db.get()),
          Kb.grammar.addExternal('proper', Kb.proper),
          Kb.grammar.addExternal('fantasy', Kb.fantasy),
          (Kb.cache.h[c] = Kb.grammar));
        b ? (Kb.grammar.flags = []) : Kb.grammar.clearState();
        b = 0;
        for (c = a.getTags(); b < c.length; ) {
          var d = c[b];
          ++b;
          var f = Kb.grammar;
          d = d.toUpperCase();
          ua.addAll(f.flags, new xa(', +', '').split(d));
        }
        0.5 < a.bp.water &&
          ((f = Kb.grammar),
          ua.addAll(f.flags, new xa(', +', '').split('WATER')));
      };
      Kb.get = function (a) {
        null == a && (a = 'name');
        return Kb.grammar.flatten('#' + a + '#');
      };
      Kb.proper = function () {
        var a = 0.6666666666666666;
        null == a && (a = 0.5);
        return lc.personFirst(
          (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < a,
        );
      };
      Kb.fantasy = function () {
        return lc.demonicName();
      };
      var lc = function () {};
      g['com.watabou.cave.model.Names'] = lc;
      lc.__name__ = 'com.watabou.cave.model.Names';
      lc.personFirst = function (a) {
        lc.init();
        var b = 0.3333333333333333;
        null == b && (b = 0.5);
        return Le.capitalize(
          (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b
            ? a
              ? lc.givenMale.generate(3)
              : lc.givenFemale.generate(3)
            : a
              ? ua.random(lc.givenMale.source)
              : ua.random(lc.givenFemale.source),
        );
      };
      lc.demonicName = function () {
        lc.init();
        return Le.capitalize(lc.demonic.generate(4));
      };
      lc.init = function () {
        if (null == lc.givenMale) {
          var a = Zb.getText('givenMale').split(' '),
            b = Zb.getText('givenFemale').split(' ');
          lc.givenMale = new vd(a);
          lc.givenFemale = new vd(b);
          lc.demonic = new vd(Zb.getText('demonic').split(' '));
        }
      };
      var oe = function (a, b, c) {
        this.face = b;
        this.ways = c;
        a = 0 < a.exits.length ? a.exits[0].get_center() : new K();
        if (
          K.distance(c[0].data.get_center(), a) >
          K.distance(c[1].data.get_center(), a)
        ) {
          var d = c[0];
          c[0] = c[1];
          c[1] = d;
        }
        d = b.findEdge(c[0]);
        a = d.next.origin.point.subtract(d.origin.point);
        this.p0 = cb.lerp(d.origin.point, d.next.origin.point, 0.5);
        c = b.findEdge(c[1]);
        b = c.next.origin.point.subtract(c.origin.point);
        this.p1 = cb.lerp(c.origin.point, c.next.origin.point, 0.5);
        c = cb.intersectLines(
          this.p0.x,
          this.p0.y,
          a.x,
          a.y,
          this.p1.x,
          this.p1.y,
          b.x,
          b.y,
        );
        if (null != c && 1e6 > Math.abs(c.x)) {
          var f = this.p0;
          d = c.x;
          this.center = new K(f.x + a.x * d, f.y + a.y * d);
          this.a0 = Math.atan2(a.y, a.x);
          0 < c.x && (this.a0 += Math.PI);
          this.a1 = Math.atan2(b.y, b.x);
          0 < c.y && (this.a1 += Math.PI);
          this.a0 - this.a1 > Math.PI
            ? (this.a0 -= 2 * Math.PI)
            : this.a1 - this.a0 > Math.PI && (this.a1 -= 2 * Math.PI);
        } else this.center = null;
      };
      g['com.watabou.cave.model.Steps'] = oe;
      oe.__name__ = 'com.watabou.cave.model.Steps';
      oe.prototype = { __class__: oe };
      var zb = function () {};
      g['com.watabou.cave.model.Tags'] = zb;
      zb.__name__ = 'com.watabou.cave.model.Tags';
      zb.randomTags = function () {
        var a = [];
        0.5 > (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 &&
          a.push(ua.random(zb.SIZE));
        var b = 0.1;
        null == b && (b = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b
          ? (a.push('junction'),
            (b = 0.2),
            null == b && (b = 0.5),
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
              a.push('road'))
          : ((b = 0.1),
            null == b && (b = 0.5),
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
              a.push('sealed'));
        b = 0.05;
        null == b && (b = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push(ua.random(zb.SHAPE));
        b = 0.1;
        null == b && (b = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push('tight');
        b = 0.05;
        null == b && (b = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push(ua.random(zb.GRAPH));
        b = 0.1;
        null == b && (b = 0.5);
        (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push(ua.random(['hub', 'chambers', 'burrows']));
        0.5 > (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647
          ? a.push('dry')
          : ((b = 0.1),
            null == b && (b = 0.5),
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < b &&
              a.push('flooded'));
        return a;
      };
      zb.resolve = function (a, b) {
        for (
          var c = [
              zb.SIZE,
              zb.EXITS,
              zb.SHAPE,
              zb.GRAPH,
              zb.WATER,
              ['burrows', 'hub', 'chambers'],
              ['sealed', 'road'],
              ['entrance', 'road'],
            ],
            d = 0;
          d < c.length;

        ) {
          var f = c[d];
          ++d;
          -1 != f.indexOf(b) && ua.removeAll(a, ua.difference(f, [b]));
        }
        null != b && a.push(b);
      };
      zb.getInfo = function (a) {
        switch (a) {
          case 'burrows':
            return 'Many tunnels.';
          case 'cavities':
            return 'Round-ish compact caves.';
          case 'chambers':
            return 'Several caverns of the same size and few tunnels.';
          case 'chaotic':
            return 'Irregular caves with column-like features.';
          case 'connected':
            return 'High number of loops including short ones.';
          case 'coral':
            return 'Coral-like branching caves.';
          case 'dry':
            return 'No water.';
          case 'entrance':
            return 'Single entrance.';
          case 'flooded':
            return 'Most of the floor is covered with water.';
          case 'hub':
            return 'One central cavern and several smaller ones.';
          case 'junction':
            return 'Many entrances.';
          case 'large':
            return 'Large cave system.';
          case 'medium':
            return 'Medium-sized cave system.';
          case 'passage':
            return 'Two entrances.';
          case 'road':
            return 'Road connect one of the entrances with another.';
          case 'sealed':
            return 'No entrances.';
          case 'small':
            return 'Single cave or small cave system.';
          case 'string':
            return 'Sequence of areas without branching.';
          case 'tight':
            return 'Caves are spawned without much space between them.';
          case 'tree':
            return 'Topological tree: no loops.';
          case 'varied':
            return 'Caves of very different shapes.';
          case 'wet':
            return 'Some water.';
          default:
            return 'Unknown tag';
        }
      };
      var Ci = function (a) {
        var b =
            2 +
            2 *
              Math.abs(
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 +
                  (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
          c = Zf.fractal(7, b),
          d = Infinity,
          f = -Infinity;
        b = 0;
        for (var h = a.cells; b < h.length; ) {
          var k = h[b];
          ++b;
          k.hollow &&
            ((k = k.level =
              c.get(
                k.get_center().x / 2560 + 0.5,
                k.get_center().y / 2560 + 0.5,
              )),
            d > k && (d = k),
            f < k && (f = k));
        }
        c = d + (f - d) * a.bp.water;
        this.core = [];
        b = 0;
        for (h = a.cells; b < h.length; )
          ((k = h[b]),
            ++b,
            k.hollow && k.level < c
              ? ((k.water = !0), this.core.push(k.face))
              : (k.water = !1));
        this.fringes = [];
        b = 0;
        for (h = this.core; b < h.length; )
          for (c = h[b], ++b, a = 0, c = c.getNeighbours(); a < c.length; )
            ((d = c[a]), ++a, d.data.hollow || ua.add(this.fringes, d));
      };
      g['com.watabou.cave.model.Water'] = Ci;
      Ci.__name__ = 'com.watabou.cave.model.Water';
      Ci.prototype = {
        update: function (a) {
          var b = this.core.slice();
          if (a) {
            a = 0;
            for (var c = this.fringes; a < c.length; ) {
              var d = c[a];
              ++a;
              d.data.water = !0;
              ua.add(b, d);
            }
          } else
            for (a = 0, c = this.fringes; a < c.length; )
              ((d = c[a]), ++a, (d.data.water = !1));
          for (this.patches = []; !ua.isEmpty(b); )
            ((d = yc.floodFill(ua.pick(b), function (a) {
              return a.data.water;
            })),
              this.patches.push(d),
              ua.removeAll(b, d));
          this.outlines = [];
          a = 0;
          for (c = this.patches; a < c.length; )
            for (d = c[a], ++a, b = yc.outline(d), d = 0; d < b.length; ) {
              var f = b[d];
              ++d;
              f = Me.toPoly(f);
              for (var h = f.length, k = [], v = 0, p = h; v < p; ) {
                var g = v++,
                  t = f[g],
                  m = f[(g + 1) % h];
                g = f[(g + 2) % h];
                k.push(
                  cb.lerp(
                    m,
                    cb.lerp(t, g),
                    Math.abs(
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ),
                  ),
                );
              }
              f = k;
              this.outlines.push(Id.render(f, !0, 2));
            }
          this.deep = [];
          a = 0;
          for (c = this.patches; a < c.length; )
            for (d = c[a], ++a, b = yc.outline(d), d = 0; d < b.length; ) {
              f = b[d];
              ++d;
              f = Me.toPoly(f);
              h = f.length;
              k = [];
              v = 0;
              for (p = h; v < p; )
                ((g = v++),
                  (t = f[g]),
                  (m = f[(g + 1) % h]),
                  (g = f[(g + 2) % h]),
                  k.push(
                    cb.lerp(
                      m,
                      cb.lerp(t, g),
                      ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                        2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647 +
                        (n.seed = (48271 * n.seed) % 2147483647 | 0) /
                          2147483647) /
                        3,
                    ),
                  ));
              f = k;
              this.deep.push(Id.render(f, !0, 2));
            }
        },
        __class__: Ci,
      };
      var Kd = function () {
        this.keyShift = this.keyCtrl = this.isSolid = !1;
        this.rWidth = this.rHeight = 0;
        this.update = new tc();
        this.keyEvent = new hf();
        fa.call(this);
      };
      g['com.watabou.coogee.Scene'] = Kd;
      Kd.__name__ = 'com.watabou.coogee.Scene';
      Kd.__super__ = fa;
      Kd.prototype = u(fa.prototype, {
        activate: function () {
          Xa.get_tick().add(l(this, this.onUpdate));
          this.stage.addEventListener('keyDown', l(this, this.onKeyDown));
          this.stage.addEventListener('keyUp', l(this, this.onKeyUp));
        },
        deactivate: function () {
          Xa.get_tick().remove(l(this, this.onUpdate));
          this.stage.removeEventListener('keyDown', l(this, this.onKeyDown));
          this.stage.removeEventListener('keyUp', l(this, this.onKeyUp));
        },
        onEsc: function () {
          gb.quit();
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !0;
              break;
            case 16:
              this.keyShift = !0;
              break;
            case 27:
              this.onEsc();
          }
          this.keyEvent.dispatch(a.keyCode, !0);
          null == this.stage ||
            this.stage.get_focus() instanceof Gc ||
            a.preventDefault();
        },
        onKeyUp: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !1;
              break;
            case 16:
              this.keyShift = !1;
          }
          this.keyEvent.dispatch(a.keyCode, !1);
          this.stage.get_focus() instanceof Gc || a.preventDefault();
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        get_width: function () {
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        layout: function () {},
        onUpdate: function (a) {
          this.update.dispatch(a);
        },
        __hitTest: function (a, b, c, d, f, h) {
          a = fa.prototype.__hitTest.call(this, a, b, c, d, f, h);
          return this.isSolid ? (a || d.push(h), !0) : a;
        },
        __class__: Kd,
      });
      var fb = function () {
        Kd.call(this);
        this.keyEvent.add(l(this, this.onKey));
        this.title = mc.get(null, mc.format('title', 48));
        this.model = la.inst;
        null == this.model
          ? this.restore()
          : (this.model.water.update(this instanceof Xd), this.resetView(!1));
      };
      g['com.watabou.cave.scenes.MapScene'] = fb;
      fb.__name__ = 'com.watabou.cave.scenes.MapScene';
      fb.fixFontNames = function (a) {
        if (!fb.embeddedScanned) {
          fb.embeddedScanned = !0;
          for (
            var b = new Ia(),
              c = fb.embedded.h,
              d = Object.keys(c),
              f = d.length,
              h = 0;
            h < f;

          ) {
            var k = d[h++],
              v = c[k];
            k = Zb.getFont(k).name;
            b.h[k] = { name: v.name, url: v.url };
          }
          fb.embedded = b;
        }
        v = fb.embedded.h[a];
        return null != v
          ? (Ma.addImport(v.url), v.name)
          : Ma.substituteGenerics(a);
      };
      fb.__super__ = Kd;
      fb.prototype = u(Kd.prototype, {
        layout: function () {
          if (null != this.view) {
            var a = this.model.rect,
              b = Math.min(this.rWidth / a.width, this.rHeight / a.height);
            1 < b && (b = Math.sqrt(b));
            b /= 1.1;
            this.view.set_scaleX(this.view.set_scaleY(b));
            this.view.set_x(
              this.rWidth / 2 - (b * (a.get_left() + a.get_right())) / 2,
            );
            this.view.set_y(
              this.rHeight / 2 - (b * (a.get_top() + a.get_bottom())) / 2,
            );
            this.layoutTitle();
          }
        },
        layoutTitle: function () {
          var a = this;
          this.title.set_scaleX(
            this.title.set_scaleY(Math.max(this.rWidth, this.rHeight) / 960),
          );
          var b = 24 * this.title.get_scaleX(),
            c = this.title.get_width(),
            d = this.title.get_height();
          b = [
            new K(b, b),
            new K(this.rWidth - b - c, b),
            new K(b, this.rHeight - b - d),
            new K(this.rWidth - b - c, this.rHeight - b - d),
          ];
          b = ua.min(b, function (b) {
            var f = a.view.globalToLocal(a.localToGlobal(b));
            b = a.view.globalToLocal(a.localToGlobal(new K(b.x + c, b.y + d)));
            f = new qa(f.x, f.y, b.x - f.x, b.y - f.y);
            f.inflate(f.height, f.height);
            for (var k = (b = 0), v = a.model.cells; k < v.length; ) {
              var p = v[k];
              ++k;
              p.hollow && f.containsPoint(p.get_center()) && ++b;
            }
            k = 0;
            for (v = a.model.exits; k < v.length; )
              ((p = v[k]), ++k, f.containsPoint(p.get_center()) && (b += 10));
            return b;
          });
          this.title.set_x(b.x);
          this.title.set_y(b.y);
        },
        activate: function () {
          Kd.prototype.activate.call(this);
          this.stage.set_color(this.getBgColor());
          this.addEventListener('touchTap', l(this, this.onTap));
          this.stage.addEventListener('rightClick', l(this, this.onRightClick));
          this.longPress = new $f(this.stage);
        },
        deactivate: function () {
          Kd.prototype.deactivate.call(this);
          this.removeEventListener('touchTap', l(this, this.onTap));
          this.stage.removeEventListener(
            'rightClick',
            l(this, this.onRightClick),
          );
          this.longPress.stop();
        },
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 9:
                this.showTagsForm();
                break;
              case 13:
                this.reset();
                break;
              case 69:
                this.toggleEven();
                break;
              case 70:
                this.toggleGlade();
                break;
              case 71:
                this.keyShift ? this.view.custGrid() : this.view.toggleGrid();
                break;
              case 77:
                this.toggleSmooth();
                break;
              case 78:
                this.toggleTunnels();
                break;
              case 82:
                this.showRotateForm();
                break;
              case 83:
                this.showStyle();
                break;
              case 84:
                this.toggleTitle();
                break;
              case 87:
                this.keyShift ? this.toggleGeo() : this.showGeoForm();
                break;
              case 219:
                this.lowerWater();
                break;
              case 221:
                this.riseWater();
            }
        },
        onTap: function (a) {
          this.longPress.activated || this.reset();
        },
        onRightClick: function (a) {
          var b = a.target;
          for (a = jd.__eq(a.target, this.title); null != b; ) {
            if (b == Ka.layer) return;
            b = b.parent;
          }
          this.showMenu(a);
        },
        reset: function (a) {
          for (;;)
            try {
              this.model = new la(null == a ? za.random() : a);
              break;
            } catch (c) {
              var b = W.caught(c);
              Yb.trace('' + I.string(b) + ' rerolling...', {
                fileName: 'Source/com/watabou/cave/scenes/MapScene.hx',
                lineNumber: 184,
                className: 'com.watabou.cave.scenes.MapScene',
                methodName: 'reset',
              });
              null != a && a.adjust();
            }
          this.model.water.update(this instanceof Xd);
          this.resetView(!1);
        },
        restore: function () {
          this.reset(za.fromURL());
        },
        resetView: function (a) {
          this.title.set_visible(fb.showTitle);
          this.title.set_text(this.model.name);
          this.title.set_textColor(this.view.getTextColor());
          this.addChild(this.title);
          this.layout();
        },
        showMenu: function (a) {
          null == a && (a = !1);
          var b = this,
            c = new Yc(),
            d = function (a, d) {
              c.addItem(a, function () {
                b.view.setGridMode(d);
              }).setCheck(Va.gridMode == d);
            };
          d('Square', 1);
          d('Hexagonal', 2);
          d('Hidden', 0);
          c.addSeparator();
          c.addItem(
            'Customize...',
            1 == Va.gridMode
              ? function () {
                  lb.customize(b.model);
                }
              : null,
          );
          d = new Yc();
          d.addItem('Narrow tunnels', l(this, this.toggleTunnels)).setCheck(
            la.narrowTunnels,
          );
          d.addItem('Geometry...', l(this, this.showGeoForm));
          d.addItem('Water...', l(this, this.showWaterForm));
          var f = this.getViewMenu(),
            h = new Yc();
          h.addItem('PNG', l(this, this.exportPNG));
          h.addItem('SVG', l(this, this.exportSVG));
          var k = new Yc();
          a &&
            (k.addItem('Rename...', l(this, this.editName)),
            k.addItem('Reroll', l(this, this.rerollName)),
            k.addSeparator());
          k.addItem('Procgen Aracana', l(this, this.callArcana));
          k.addSeparator();
          k.addItem('New map', function () {
            b.reset();
          });
          k.addItem('Rotate...', l(this, this.showRotateForm));
          k.addItem('Tags...', l(this, this.showTagsForm));
          k.addSeparator();
          k.addSubmenu('Grid', c);
          k.addSubmenu('Shape', d);
          null != f && k.addSubmenu('Display', f);
          k.addItem('Style...', l(this, this.showStyle));
          k.addSeparator();
          k.addSubmenu('Export as', h);
          Ka.showMenu(k);
        },
        editName: function () {
          var a = this;
          if (null == Ka.findForm(ag)) {
            var b = new ag(this.model.name, function (b) {
              a.model.setName(b);
              a.title.set_text(b);
              a.layoutTitle();
            });
            Ka.showDialog(b);
          }
        },
        rerollName: function () {
          this.model.setName(this.model.getName());
          this.title.set_text(this.model.name);
          this.layoutTitle();
        },
        showTagsForm: function () {
          var a = this;
          if (null == Ka.findForm(pe)) {
            wd.getTags = function () {
              return zb.all;
            };
            wd.resTags = zb.resolve;
            wd.getInfo = zb.getInfo;
            var b = new pe(this.model.bp.tags, function (b) {
              a.reset(za.fromTags(b));
              return a.model.bp.tags;
            });
            Ka.showDialog(b, 'Tags').minimizable = !0;
          }
        },
        toggleTunnels: function () {
          la.narrowTunnels = !la.narrowTunnels;
          this.model.buildGeometry();
          this.resetView(!0);
        },
        toggleSmooth: function () {
          za.wallsRoughness = 0 < za.wallsRoughness ? 0 : 1;
          this.model.buildGeometry();
          this.resetView(!0);
        },
        toggleEven: function () {
          za.wallsBumpiness = 0 < za.wallsBumpiness ? 0 : 1;
          this.model.buildGeometry();
          this.resetView(!0);
        },
        toggleTitle: function () {
          this.title.set_visible((fb.showTitle = !fb.showTitle));
        },
        toggleGeo: function () {
          1 == za.wallsDistortion
            ? ((za.wallsDistortion = 0),
              (za.wallsBumpiness = 0),
              (za.wallsRoughness = 0))
            : ((za.wallsDistortion = 1),
              (za.wallsBumpiness = 1),
              (za.wallsRoughness = 1));
          this.model.buildGeometry();
          this.model.bp.updateURL();
          this.resetView(!0);
        },
        setWater: function (a) {
          this.model.bp.water = zc.gate(a, 0, 1);
          this.model.bp.customWater = !0;
          a = Ka.findForm(jf);
          null != a && a.sync();
          this.updateWater();
        },
        lowerWater: function () {
          this.setWater(this.model.bp.water - 0.1);
        },
        riseWater: function () {
          this.setWater(this.model.bp.water + 0.1);
        },
        updateWater: function () {
          this.model.createWater();
          this.model.water.update(this instanceof Xd);
          this.model.bp.updateURL();
          this.view.updateWaterView();
        },
        showWaterForm: function () {
          if (null == Ka.findForm(jf)) {
            var a = new jf(this.model.bp, l(this, this.updateWater));
            Ka.showDialog(a);
          }
        },
        showRotateForm: function () {
          var a = this;
          if (null == Ka.findForm(bg)) {
            var b = new bg(this.model, this, function (b) {
              a.model.rotate(b);
              a.model.water.update(a instanceof Xd);
              a.resetView(!1);
            });
            Ka.showDialog(b);
          }
        },
        showGeoForm: function () {
          var a = this;
          if (null == Ka.findForm(cg)) {
            var b = new cg(
              [za.wallsDistortion, za.wallsBumpiness, za.wallsRoughness],
              function (b) {
                za.wallsDistortion = b[0];
                za.wallsBumpiness = b[1];
                za.wallsRoughness = b[2];
                a.model.buildGeometry();
                a.model.bp.updateURL();
                a.resetView(!0);
              },
            );
            Ka.showDialog(b);
          }
        },
        getViewMenu: function () {
          return null;
        },
        showStyle: function () {},
        getBgColor: function () {
          return 2236962;
        },
        callArcana: function () {
          var a = new Qg('https://watabou.github.io/');
          Ja.navigateToURL(a, 'arcana');
        },
        exportPNG: function () {
          var a = this.rWidth,
            b = this.rHeight,
            c = this.model.rect.width,
            d = this.model.rect.height,
            f = 0.2 * Math.max(c, d);
          c += f;
          d += f;
          this.setSize(c, d);
          var h = Math.sqrt(16777215 / (c * d));
          c = (c * h) | 0;
          d = (d * h) | 0;
          f = new wa();
          f.scale(h, h);
          h = new Wb(c, d, !1, this.getBgColor());
          h.draw(this, f);
          fb.showTitle &&
            (this.removeChild(this.title),
            this.addChild(
              (this.title = mc.get(this.model.name, mc.format('title', 48))),
            ),
            this.title.set_textColor(this.view.getTextColor()));
          this.setSize(a, b);
          Ld.savePNG(h, this.model.name);
          h.dispose();
        },
        exportSVG: function () {
          var a = this.rWidth,
            b = this.rHeight,
            c = this.model.rect.width,
            d = this.model.rect.height,
            f = 0.2 * Math.max(c, d);
          this.setSize(c + f, d + f);
          Ma.substituteFont = fb.fixFontNames;
          c = Ma.create(this.rWidth, this.rHeight, this.getBgColor());
          d = Ma.drawSprite(this);
          c.root.addChild(d);
          this.setSize(a, b);
          d = Ma.getImports();
          c.root.addChild(d);
          d = Ma.getGradients();
          c.root.addChild(d);
          Ld.saveText(
            '<?xml version="1.0" encoding="UTF-8" standalone="no"?>' +
              Ke.print(c.root),
            this.model.name + '.svg',
            'image/svg+xml',
          );
        },
        toggleGlade: function () {
          fb.showGlade = !fb.showGlade;
          gb.switchScene(fb.showGlade ? Wf : Xd);
          this.model.bp.updateURL();
        },
        __class__: fb,
      });
      var Xd = function () {
        ja.restorePalette();
        fb.call(this);
      };
      g['com.watabou.cave.scenes.CaveScene'] = Xd;
      Xd.__name__ = 'com.watabou.cave.scenes.CaveScene';
      Xd.__super__ = fb;
      Xd.prototype = u(fb.prototype, {
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 49:
                this.loadPalette('parchment');
                break;
              case 50:
                this.loadPalette('moonlight');
                break;
              case 51:
                this.loadPalette('bw');
                break;
              case 68:
                this.cave.toggleDoors();
                break;
              case 72:
                this.cave.toggleShading();
                break;
              case 88:
                this.cave.toggleExits();
                break;
              default:
                fb.prototype.onKey.call(this, a, b);
            }
        },
        getViewMenu: function () {
          var a = new Yc();
          a.addItem('Glade view', l(this, this.toggleGlade));
          a.addSeparator();
          a.addItem('Title', l(this, this.toggleTitle)).setCheck(fb.showTitle);
          a.addItem(
            'Hatching',
            ((H = this.cave), l(H, H.toggleShading)),
          ).setCheck(Za.showShading);
          a.addItem('Water', ((H = this.cave), l(H, H.toggleWater))).setCheck(
            Va.showWater,
          );
          a.addItem('Rubble', ((H = this.cave), l(H, H.toggleRubble))).setCheck(
            Za.showRubble,
          );
          a.addItem('Doors', ((H = this.cave), l(H, H.toggleDoors))).setCheck(
            Va.showDoors,
          );
          a.addItem('Steps', ((H = this.cave), l(H, H.toggleSteps))).setCheck(
            Za.showSteps,
          );
          a.addItem(
            'Entrances',
            ((H = this.cave), l(H, H.toggleExits)),
          ).setCheck(Va.showExits);
          return a;
        },
        resetView: function (a) {
          null != this.cave && this.removeChild(this.cave);
          n.save();
          n.reset(this.model.bp.seed);
          this.view = this.cave = new Za(this.model, a);
          this.addChild(this.cave);
          n.restore();
          fb.prototype.resetView.call(this, a);
        },
        showStyle: function () {
          var a = this;
          if (null == Ka.findForm($b)) {
            var b = new $b(function (b) {
              a.applyPalette(b);
            }, 'Parchment parchment Moonlight moonlight B&W bw'.split(' '));
            b.getName = $b.swatches('cave', ['colorPage', 'colorFloor']);
            ja.fillForm(b);
            Ka.showDialog(b, 'Style');
          }
        },
        applyPalette: function (a) {
          ja.applyPalette(a, !0);
          this.stage.set_color(ja.colorPage);
          this.resetView(!1);
        },
        loadPalette: function (a) {
          this.applyPalette(ec.fromJSON(Zb.getText(a)));
        },
        getBgColor: function () {
          return ja.colorPage;
        },
        __class__: Xd,
      });
      var Wf = function () {
        L.restorePalette();
        fb.call(this);
      };
      g['com.watabou.cave.scenes.GladeScene'] = Wf;
      Wf.__name__ = 'com.watabou.cave.scenes.GladeScene';
      Wf.__super__ = fb;
      Wf.prototype = u(fb.prototype, {
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 48:
                this.applyPalette(L.getRandom());
                break;
              case 49:
                this.loadPalette('glade_default');
                break;
              case 50:
                this.loadPalette('glade_tropical');
                break;
              case 51:
                this.loadPalette('glade_autumn');
                break;
              case 52:
                this.loadPalette('glade_outline');
                break;
              case 69:
                this.toggleEdge();
                break;
              case 88:
                this.glade.toggleExits();
                break;
              default:
                fb.prototype.onKey.call(this, a, b);
            }
        },
        resetView: function (a) {
          null != this.view && this.removeChild(this.view);
          n.save();
          n.reset(this.model.bp.seed);
          this.view = this.glade = new vb(this.model);
          this.addChild(this.view);
          n.restore();
          fb.prototype.resetView.call(this, a);
        },
        getViewMenu: function () {
          var a = new Yc();
          a.addItem('Glade view', l(this, this.toggleGlade)).setCheck(!0);
          a.addSeparator();
          a.addItem('Title', l(this, this.toggleTitle)).setCheck(fb.showTitle);
          a.addItem('Small trees', l(this, this.toggleTrees)).setCheck(
            vb.smallTrees,
          );
          a.addItem('Edge trees', l(this, this.toggleEdge)).setCheck(
            vb.edgeTrees,
          );
          a.addItem('Shading', l(this, this.toggleShade)).setCheck(
            vb.shadeTrees,
          );
          a.addItem('Water', ((H = this.glade), l(H, H.toggleWater))).setCheck(
            Va.showWater,
          );
          a.addItem('Grass', ((H = this.glade), l(H, H.toggleGrass))).setCheck(
            vb.showGrass,
          );
          a.addItem('Steps', ((H = this.glade), l(H, H.toggleSteps))).setCheck(
            vb.showSteps,
          );
          a.addItem(
            'Entrances',
            ((H = this.glade), l(H, H.toggleExits)),
          ).setCheck(Va.showExits);
          return a;
        },
        toggleTrees: function () {
          vb.smallTrees = !vb.smallTrees;
          this.model.buildGeometry();
          this.resetView(!0);
        },
        toggleEdge: function () {
          vb.edgeTrees = !vb.edgeTrees;
          this.resetView(!0);
        },
        toggleShade: function () {
          vb.shadeTrees = !vb.shadeTrees;
          this.resetView(!0);
        },
        showStyle: function () {
          var a = this;
          if (null == Ka.findForm($b)) {
            var b = new $b(function (b) {
              a.applyPalette(b);
            }, 'Default glade_default Jungle glade_tropical Mist glade_autumn B&W glade_outline Reef glade_reef Random glade_random'.split(' '));
            b.onNullAsset = function (a, b) {
              b.loadPalette(L.getRandom());
            };
            b.getName = $b.swatches('glade', ['ground', 'tree', 'thicket']);
            L.fillForm(b);
            Ka.showDialog(b, 'Style');
          }
        },
        applyPalette: function (a) {
          L.applyPalette(a, !0);
          this.stage.set_color(L.colorThicket);
          this.resetView(!1);
        },
        loadPalette: function (a) {
          this.applyPalette(ec.fromJSON(Zb.getText(a)));
        },
        getBgColor: function () {
          return L.colorThicket;
        },
        __class__: Wf,
      });
      var ha = function () {
        this.valign = 'top';
        this.halign = 'left';
        this.rWidth = this.rHeight = 0;
        fa.call(this);
      };
      g['com.watabou.coogee.ui.View'] = ha;
      ha.__name__ = 'com.watabou.coogee.ui.View';
      ha.__super__ = fa;
      ha.prototype = u(fa.prototype, {
        get_width: function () {
          return this.rWidth;
        },
        set_width: function (a) {
          this.setSize(a, this.rHeight);
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        set_height: function (a) {
          this.setSize(this.rWidth, a);
          return this.rHeight;
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        layout: function () {},
        add: function (a) {
          this.addChild(a);
        },
        set_enabled: function (a) {
          return (this.mouseEnabled = this.mouseChildren = a);
        },
        __class__: ha,
        __properties__: u(fa.prototype.__properties__, {
          set_enabled: 'set_enabled',
        }),
      });
      var Nc = function () {
        this.snap = !0;
        this.margin = this.gap = 10;
        ha.call(this);
      };
      g['com.watabou.coogee.ui.layouts.VBox'] = Nc;
      Nc.__name__ = 'com.watabou.coogee.ui.layouts.VBox';
      Nc.__super__ = ha;
      Nc.prototype = u(ha.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              c = !1,
              d = 0,
              f = this.get_numChildren();
            d < f;

          ) {
            var h = d++;
            h = this.getChildAt(h);
            'left' != h.halign && (c = !0);
            b < h.get_width() && (b = h.get_width());
            h.set_x(this.margin);
            h.set_y(a);
            a += h.get_height() + this.gap;
            this.snap && (a |= 0);
          }
          if (c)
            for (d = 0, f = this.get_numChildren(); d < f; )
              switch (((h = d++), (h = this.getChildAt(h)), h.halign)) {
                case 'center':
                  h.set_x(this.margin + (b - h.get_width()) / 2);
                  break;
                case 'fill':
                  h.set_width(b);
                  break;
                case 'right':
                  h.set_x(this.margin + (b - h.get_width()));
              }
          this.rHeight =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rWidth = b + 2 * this.margin;
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: Nc,
      });
      var Zc = function () {
        Nc.call(this);
        this.setMargins(0, 0);
        this.addEventListener('keyDown', l(this, this.onKeyDown));
        this.addEventListener('focusOut', l(this, this.onFocusOut));
      };
      g['com.watabou.coogee.ui.Form'] = Zc;
      Zc.__name__ = 'com.watabou.coogee.ui.Form';
      Zc.__super__ = Nc;
      Zc.prototype = u(Nc.prototype, {
        getTitle: function () {
          return null;
        },
        onShow: function () {},
        onHide: function () {},
        onKeyDown: function (a) {
          this.onKey(a.keyCode) && (a.stopPropagation(), a.preventDefault());
        },
        onKey: function (a) {
          switch (a) {
            case 13:
              this.onEnter();
              break;
            case 27:
              this.onEsc();
              break;
            default:
              return !1;
          }
          return !0;
        },
        onEsc: function () {
          this.dialog.hide();
        },
        onEnter: function () {},
        onFocusOut: function (a) {
          null == a.relatedObject && this.stage.set_focus(this);
        },
        __class__: Zc,
      });
      var nb = function (a) {
        Zc.call(this);
        this.buttons = new Rg(a);
        this.buttons.click.add(l(this, this.onButton));
        this.addChild(this.buttons);
      };
      g['com.watabou.coogee.ui.ButtonsForm'] = nb;
      nb.__name__ = 'com.watabou.coogee.ui.ButtonsForm';
      nb.__super__ = Zc;
      nb.prototype = u(Zc.prototype, {
        add: function (a) {
          this.addChild(a);
          this.addChild(this.buttons);
          this.layout();
        },
        layout: function () {
          Zc.prototype.layout.call(this);
          this.buttons.set_width(this.rWidth);
          Zc.prototype.layout.call(this);
        },
        onButton: function (a) {
          this.dialog.hide();
        },
        onEnter: function () {
          this.onButton('OK');
        },
        onEsc: function () {
          this.onButton('Cancel');
        },
        __class__: nb,
      });
      var cg = function (a, b) {
        var c = this;
        nb.call(this, ['Reset']);
        this.values = a;
        this.onSubmit = b;
        var d = new qe(3);
        b = function (a, b) {
          a = new Pb(a);
          d.add(a);
          a = new re(0, 1, 1);
          a.submit.add(function (a) {
            c.sumbit();
          });
          a.set_value(b);
          a.set_width(200);
          d.add(a);
          var f = new kf(b, 0, 1, 1);
          f.set_centered(!0);
          d.add(f);
          a.change.add(function (a) {
            f.set_value(a);
          });
          return a;
        };
        this.sliders = [
          b('Irregularity', a[0]),
          b('Bumpiness', a[1]),
          b('Roughness', a[2]),
        ];
        this.add(d);
      };
      g['com.watabou.cave.ui.GeoForm'] = cg;
      cg.__name__ = 'com.watabou.cave.ui.GeoForm';
      cg.__super__ = nb;
      cg.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Walls geometry';
        },
        onButton: function (a) {
          if ('Reset' == a) {
            a = 0;
            for (var b = this.sliders.length; a < b; ) {
              var c = a++;
              this.sliders[c].set_value(this.values[c]);
            }
            this.sumbit();
          } else nb.prototype.onButton.call(this, a);
        },
        sumbit: function () {
          for (
            var a = this.onSubmit, b = [], c = 0, d = this.sliders;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            b.push(f.get_value());
          }
          a(b);
        },
        __class__: cg,
      });
      var Xf = function (a) {
        var b = this;
        nb.call(this, ['Apply']);
        this.onApply = a;
        a = new qe(2);
        var c = new Pb('Size');
        c.valign = 'center';
        a.add(c);
        this.intSize = new se(
          lb.size | 0,
          (0.5 * la.hexRadius) | 0,
          (2 * la.hexRadius) | 0,
        );
        this.intSize.enter.add(function (a) {
          b.apply();
        });
        this.intSize.set_centered(!0);
        this.intSize.set_width(60);
        a.add(this.intSize);
        c = new Pb('Broken');
        c.valign = 'center';
        a.add(c);
        this.chkBroken = new lf();
        this.chkBroken.valign = 'center';
        a.add(this.chkBroken);
        this.add(a);
      };
      g['com.watabou.cave.ui.GridForm'] = Xf;
      Xf.__name__ = 'com.watabou.cave.ui.GridForm';
      Xf.__super__ = nb;
      Xf.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Square grid';
        },
        onShow: function () {
          this.intSize.selecteAll();
          this.stage.set_focus(this.intSize);
        },
        onEnter: function () {
          this.apply();
        },
        onButton: function (a) {
          'Apply' == a ? this.apply() : nb.prototype.onButton.call(this, a);
        },
        apply: function () {
          var a = 0.5 * la.hexRadius,
            b = 2 * la.hexRadius;
          a = zc.gate(this.intSize.get_value(), a, b);
          b = this.chkBroken.get_value();
          this.intSize.set_value(a | 0);
          this.onApply(a, b);
          this.onShow();
        },
        __class__: Xf,
      });
      var bg = function (a, b, c) {
        nb.call(this, ['Fit', 'Align', 'Apply']);
        this.model = a;
        this.scene = b;
        this.update = c;
        a = new Oc();
        a.setMargins(12, 10);
        c = new Pb('-180');
        a.add(c);
        this.slAngle = new re(-180, 180);
        this.slAngle.set_width(270);
        this.slAngle.valign = 'fill';
        this.slAngle.change.add(l(this, this.onChanged));
        a.add(this.slAngle);
        c = new Pb('+180');
        a.add(c);
        this.add(a);
        this.abris = new fa();
        b.addChild(this.abris);
        this.updateAbris();
      };
      g['com.watabou.cave.ui.RotateForm'] = bg;
      bg.__name__ = 'com.watabou.cave.ui.RotateForm';
      bg.__super__ = nb;
      bg.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Rotate';
        },
        onChanged: function (a) {
          var b = (a / 180) * Math.PI;
          b = t.rotateYX(this.model.simple[0], Math.sin(b), Math.cos(b));
          b = Ne.rect(b);
          var c = this.getScale(b);
          this.abris.set_scaleX(this.abris.set_scaleY(c));
          this.abris.set_x(
            this.scene.rWidth / 2 - (c * (b.get_left() + b.get_right())) / 2,
          );
          this.abris.set_y(
            this.scene.rHeight / 2 - (c * (b.get_top() + b.get_bottom())) / 2,
          );
          this.abris.set_rotation(a);
        },
        onButton: function (a) {
          switch (a) {
            case 'Align':
              this.align();
              break;
            case 'Apply':
              this.apply();
              break;
            case 'Fit':
              this.fit();
              break;
            default:
              nb.prototype.onButton.call(this, a);
          }
        },
        onHide: function () {
          nb.prototype.onHide.call(this);
          this.scene.removeChild(this.abris);
        },
        fit: function () {
          for (var a = 0, b = 0, c = -6; 6 > c; ) {
            var d = c++,
              f = (d / 12) * Math.PI;
            f = t.rotateYX(this.model.simple[0], Math.sin(f), Math.cos(f));
            f = Ne.rect(f);
            f = this.getScale(f);
            b < f && ((b = f), (a = 15 * d));
          }
          this.onChanged(this.slAngle.set_value(a));
        },
        align: function () {
          var a = this.model.cells[0].get_poly(),
            b = this.model.cells[0].get_center();
          a = ua
            .min(a, function (a) {
              a = a.subtract(b);
              return Math.abs(Math.atan2(a.y, a.x));
            })
            .subtract(b);
          this.onChanged(
            this.slAngle.set_value((-Math.atan2(a.y, a.x) / Math.PI) * 180),
          );
        },
        apply: function () {
          this.update(this.slAngle.get_value());
          this.scene.addChild(this.abris);
          this.updateAbris();
        },
        updateAbris: function () {
          var a = this.abris.get_graphics();
          a.clear();
          a.lineStyle(2, 16711680);
          for (var b = 0, c = this.model.simple; b < c.length; ) {
            var d = c[b];
            ++b;
            yb.drawPolygon(a, d);
          }
          this.onChanged(this.slAngle.set_value(0));
        },
        getScale: function (a) {
          a = Math.min(
            this.scene.rWidth / a.width,
            this.scene.rHeight / a.height,
          );
          1 < a && (a = Math.sqrt(a));
          return a / 1.1;
        },
        __class__: bg,
      });
      var ag = function (a, b) {
        var c = this;
        nb.call(this, ['OK', 'Cancel']);
        this.onOK = b;
        b = new Oc();
        this.input = new Hc(a);
        this.input.enter.add(function (a) {
          c.onButton('OK');
        });
        this.input.set_width(240);
        b.add(this.input);
        a = new Zd('Reroll', l(this, this.onReroll));
        a.valign = 'fill';
        b.add(a);
        this.add(b);
      };
      g['com.watabou.cave.ui.TitleForm'] = ag;
      ag.__name__ = 'com.watabou.cave.ui.TitleForm';
      ag.__super__ = nb;
      ag.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Map title';
        },
        onShow: function () {
          this.input.selecteAll();
          this.stage.set_focus(this.input);
        },
        onButton: function (a) {
          'OK' == a
            ? (this.onOK(this.input.get_text()), this.dialog.hide())
            : nb.prototype.onButton.call(this, a);
        },
        onReroll: function () {
          this.input.set_text(la.inst.getName());
        },
        __class__: ag,
      });
      var Ei = function (a) {
        var b = this;
        nb.call(this, ['Copy', 'Generate']);
        this.onGenerate = a;
        a = new mf();
        this.input = new Hc(Ra.getURL());
        this.input.enter.add(function (a) {
          b.onEnter();
        });
        this.input.set_width(400);
        a.add(this.input);
        this.add(a);
      };
      g['com.watabou.cave.ui.URLForm'] = Ei;
      Ei.__name__ = 'com.watabou.cave.ui.URLForm';
      Ei.__super__ = nb;
      Ei.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Permalink';
        },
        onShow: function () {
          this.highlight();
        },
        onEnter: function () {
          this.onButton('Generate');
        },
        onButton: function (a) {
          switch (a) {
            case 'Copy':
              Md.get_generalClipboard().setData(2, this.input.get_text());
              Ac.show('URL was copied to clipboard');
              this.highlight();
              break;
            case 'Generate':
              this.onGenerate(this.input.get_text());
              this.highlight();
              break;
            default:
              nb.prototype.onButton.call(this, a);
          }
        },
        highlight: function () {
          this.stage.set_focus(this.input);
          this.input.selecteAll();
        },
        __class__: Ei,
      });
      var jf = function (a, b) {
        nb.call(this, ['Reroll', 'Reset']);
        this.bp = a;
        this.prevSeed = a.waterSeed;
        this.prevLevel = a.water;
        this.update = b;
        b = new Oc();
        b.setMargins(12, 10);
        this.slLevel = new re(0, 1, 2);
        this.slLevel.set_width(240);
        this.slLevel.set_value(a.water);
        this.slLevel.valign = 'fill';
        this.slLevel.change.add(l(this, this.onChanged));
        b.add(this.slLevel);
        this.tiLevel = new kf(0.1, 0, 1, 2);
        this.tiLevel.set_centered(!0);
        this.tiLevel.set_readOnly(!0);
        b.add(this.tiLevel);
        this.tiLevel.set_text(null == a.water ? 'null' : '' + a.water);
        this.add(b);
      };
      g['com.watabou.cave.ui.WaterForm'] = jf;
      jf.__name__ = 'com.watabou.cave.ui.WaterForm';
      jf.__super__ = nb;
      jf.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Water level';
        },
        sync: function () {
          this.slLevel.set_value(this.tiLevel.set_value(this.bp.water));
        },
        onChanged: function (a) {
          this.bp.customWater = !0;
          this.bp.water = this.tiLevel.set_value(a);
          this.update();
        },
        onButton: function (a) {
          switch (a) {
            case 'Reroll':
              this.reroll();
              break;
            case 'Reset':
              this.reset();
              break;
            default:
              nb.prototype.onButton.call(this, a);
          }
        },
        reset: function () {
          var a = this.tiLevel,
            b = this.slLevel.set_value(this.prevLevel);
          this.bp.water = a.set_value(b);
          this.bp.waterSeed = this.prevSeed;
          this.update();
        },
        reroll: function () {
          this.bp.waterSeed = n.seed = (48271 * n.seed) % 2147483647 | 0;
          this.update();
        },
        __class__: jf,
      });
      var Od = function () {
        this.click = new Nd();
        ha.call(this);
        this.label = this.createLabel();
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.setSize(this.label.get_width() + 10, this.label.get_height() + 10);
      };
      g['com.watabou.coogee.ui.ButtonBase'] = Od;
      Od.__name__ = 'com.watabou.coogee.ui.ButtonBase';
      Od.__super__ = ha;
      Od.prototype = u(ha.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(ia.black);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            10,
          );
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        createLabel: function () {
          return null;
        },
        onClick: function (a) {
          this.click.dispatch();
          a.stopPropagation();
        },
        __class__: Od,
      });
      var Zd = function (a, b) {
        this.txtLabel = a;
        Od.call(this);
        null != b && this.click.add(b);
      };
      g['com.watabou.coogee.ui.Button'] = Zd;
      Zd.__name__ = 'com.watabou.coogee.ui.Button';
      Zd.__super__ = Od;
      Zd.prototype = u(Od.prototype, {
        createLabel: function () {
          return mc.get(
            this.txtLabel,
            ia.format(ia.uiFont, ia.smallSize, ia.white),
          );
        },
        __class__: Zd,
      });
      var lf = function (a) {
        this.changed = new tc();
        ha.call(this);
        this.border = sb.black();
        this.add(this.border);
        this.empty = sb.white();
        this.add(this.empty);
        this.filled = sb.black();
        this.add(this.filled);
        null != a
          ? ((this.label = new Pb(a)),
            (this.label.mouseEnabled = !0),
            (this.label.mouseChildren = !0),
            this.add(this.label),
            this.setSize(
              24 + this.label.get_width(),
              Math.max(20, this.label.get_height()),
            ))
          : this.setSize(20, 20);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
      };
      g['com.watabou.coogee.ui.CheckBox'] = lf;
      lf.__name__ = 'com.watabou.coogee.ui.CheckBox';
      lf.__super__ = ha;
      lf.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(20, 20);
          this.border.set_x(
            null != this.label
              ? 0
              : ((this.rWidth - this.border.get_width()) / 2) | 0,
          );
          this.border.set_y(
            ((this.rHeight - this.border.get_height()) / 2) | 0,
          );
          this.empty.setSize(
            this.border.get_width() - 4,
            this.border.get_height() - 4,
          );
          this.empty.set_x(this.border.get_x() + 2);
          this.empty.set_y(this.border.get_y() + 2);
          this.filled.setSize(
            this.empty.get_width() - 4,
            this.empty.get_height() - 4,
          );
          this.filled.set_x(this.empty.get_x() + 2);
          this.filled.set_y(this.empty.get_y() + 2);
          null != this.label && this.label.set_x(this.border.get_width() + 4);
        },
        get_value: function () {
          return this.filled.get_visible();
        },
        set_value: function (a) {
          this.filled.set_visible(a);
          return a;
        },
        onClick: function (a) {
          this.set_value(!this.get_value());
          this.changed.dispatch(this.get_value());
        },
        set_enabled: function (a) {
          ha.prototype.set_enabled.call(this, a);
          var b = a ? ia.black : ia.light;
          this.border.bmp.get_bitmapData().setPixel(0, 0, b);
          this.filled.bmp.get_bitmapData().setPixel(0, 0, b);
          null != this.label && this.label.set_color(b);
          return a;
        },
        __class__: lf,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var td = function (a, b) {
        this.onMinimize = new tc();
        this.onMove = new tc();
        this.onHide = new tc();
        this.minimized = this.minimizable = !1;
        ha.call(this);
        this.bg1 = sb.black();
        this.addChild(this.bg1);
        this.bg2 = sb.white();
        this.addChild(this.bg2);
        this.addEventListener('mouseDown', l(this, this.onBringUp));
        this.header = new Sg(b);
        this.header.addEventListener('mouseDown', l(this, this.onStartDrag));
        this.header.addEventListener('click', l(this, this.onClick));
        this.addChild(this.header);
        this.content = a;
        this.addChild(a);
        this.resize();
      };
      g['com.watabou.coogee.ui.Window'] = td;
      td.__name__ = 'com.watabou.coogee.ui.Window';
      td.show = function (a, b, c, d) {
        c = null == d ? new td(b, c) : w.createInstance(d, [b, c]);
        c.set_x(((a.get_width() - c.get_width()) / 2) | 0);
        c.set_y(((a.get_height() - c.get_height()) / 2) | 0);
        a.addChild(c);
        null != b.stage && b.stage.set_focus(b);
        return c;
      };
      td.__super__ = ha;
      td.prototype = u(ha.prototype, {
        resize: function (a) {
          null == a && (a = !1);
          var b = this.content.get_width() + 4,
            c = this.header.get_height() + this.content.get_height() + 2,
            d = a ? ((this.rWidth - b) / 2) | 0 : 0;
          a = a ? ((this.rHeight - c) / 2) | 0 : 0;
          this.setSize(b, c);
          this.set_x(this.get_x() + d);
          this.set_y(this.get_y() + a);
        },
        layout: function () {
          this.header.set_width(this.rWidth);
          this.minimized
            ? (this.bg1.setSize(this.rWidth, this.header.get_height()),
              this.content.set_visible(!1),
              this.bg2.set_visible(!1))
            : (this.bg1.setSize(this.rWidth, this.rHeight),
              this.content.set_visible(!0),
              this.bg2.set_visible(!0),
              this.bg2.setSize(
                this.rWidth - 4,
                this.rHeight - this.header.get_height() - 2,
              ),
              this.content.set_x(this.bg2.set_x(2)),
              this.content.set_y(this.bg2.set_y(this.header.get_height())));
        },
        hide: function () {
          null != this.parent &&
            (this.stage.set_focus(this.stage),
            this.parent.removeChild(this),
            this.onHide.dispatch(this));
        },
        onBringUp: function (a) {
          this.parent.addChild(this);
        },
        onStartDrag: function (a) {
          this.clicked = !0;
          this.stage.addEventListener('mouseMove', l(this, this.onDrag));
          this.stage.addEventListener('mouseUp', l(this, this.onEndDrag));
          this.grabX = this.get_mouseX();
          this.grabY = this.get_mouseY();
        },
        onDrag: function (a) {
          this.clicked = !1;
          this.set_x(this.parent.get_mouseX() - this.grabX);
          this.set_y(this.parent.get_mouseY() - this.grabY);
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', l(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', l(this, this.onEndDrag));
          this.clicked || this.onMove.dispatch(this);
        },
        onClick: function (a) {
          this.clicked &&
            this.minimizable &&
            ((this.minimized = !this.minimized),
            this.layout(),
            this.onMinimize.dispatch(this));
        },
        setTitle: function (a) {
          this.header.setText(a);
        },
        __class__: td,
      });
      var nf = function (a, b) {
        a.dialog = this;
        td.call(this, a, b);
        this.header.close.add(function () {
          a.onEsc();
        });
      };
      g['com.watabou.coogee.ui.Dialog'] = nf;
      nf.__name__ = 'com.watabou.coogee.ui.Dialog';
      nf.show = function (a, b, c) {
        null == c && (c = b.getTitle());
        a = td.show(a, b, c, nf);
        b.onShow();
        return a;
      };
      nf.__super__ = td;
      nf.prototype = u(td.prototype, {
        hide: function () {
          if (null != this.parent) Ua.__cast(this.content, Zc).onHide();
          td.prototype.hide.call(this);
        },
        __class__: nf,
      });
      var te = function (a, b) {
        this.update = new tc();
        var c = this;
        this.values = b;
        this.labels = a;
        ha.call(this);
        this.border = sb.black();
        this.add(this.border);
        this.bg = sb.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = mc.get('', ia.format(ia.uiFont, ia.normalSize, ia.black));
        this.addChild(this.tf);
        this.btn = new of();
        this.btn.set_width(ia.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        for (var d = 0, f = 0, h = 0; h < a.length; ) {
          var k = a[h];
          ++h;
          this.tf.set_text(k);
          d = Math.max(d, this.tf.get_width());
          f = Math.max(f, this.tf.get_height());
        }
        this.tf.set_autoSize(2);
        this.menu = new Yc();
        h = [];
        k = 0;
        for (var v = a.length; k < v; ) {
          var p = [k++];
          h.push(
            this.menu.addItem(
              a[p[0]],
              (function (d) {
                return function () {
                  c.onSelect(a[d[0]], b[d[0]]);
                };
              })(p),
            ),
          );
        }
        this.items = h;
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.addEventListener('mouseWheel', l(this, this.onWheel));
        0 < a.length && this.set_text(a[0]);
        this.setSize(Math.ceil(d + this.btn.get_width()), Math.ceil(f));
      };
      g['com.watabou.coogee.ui.DropDown'] = te;
      te.__name__ = 'com.watabou.coogee.ui.DropDown';
      te.ofStrings = function (a) {
        return new te(a, a);
      };
      te.__super__ = ha;
      te.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        set_text: function (a) {
          this.tf.set_text(a);
          return a;
        },
        get_value: function () {
          var a = this.labels.indexOf(this.tf.get_text());
          return -1 == a ? null : this.values[a];
        },
        set_value: function (a) {
          for (var b = 0, c = this.values.length; b < c; ) {
            var d = b++;
            if (this.values[d] == a)
              return (this.tf.set_text(this.labels[d]), a);
          }
          return this.get_value();
        },
        onClick: function (a) {
          a = this.labels.indexOf(this.tf.get_text());
          for (var b = 0, c = this.items.length; b < c; ) {
            var d = b++;
            this.items[d].setCheck(d == a);
          }
          a = Ka.getRect(this);
          Ka.showMenuAt(this.menu, Math.ceil(a.get_left()), a.get_bottom() - 2);
        },
        onWheel: function (a) {
          Ka.hideMenu();
          var b = this.values.indexOf(this.get_value());
          if (
            -1 != b &&
            ((a = a.delta),
            (b += 0 == a ? 0 : 0 > a ? -1 : 1),
            0 <= b && b < this.values.length)
          )
            this.onSelect(this.labels[b], this.values[b]);
        },
        onSelect: function (a, b) {
          this.stage.set_focus(this);
          this.tf.set_text(a);
          this.update.dispatch(b);
        },
        __class__: te,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
          set_text: 'set_text',
        }),
      });
      var Tg = function (a) {
        ha.call(this);
        this.tf = mc.get(a, ia.format(ia.uiFont, ia.smallSize, ia.black));
        this.tf.set_wordWrap(!0);
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      g['com.watabou.coogee.ui.InfoLabel'] = Tg;
      Tg.__name__ = 'com.watabou.coogee.ui.InfoLabel';
      Tg.__super__ = ha;
      Tg.prototype = u(ha.prototype, {
        set_width: function (a) {
          this.tf.set_autoSize(1);
          this.tf.set_width(a + 4);
          var b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(a + 4);
          this.tf.set_height(Math.ceil(b));
          this.rWidth = a;
          this.rHeight = this.tf.get_height() - 4;
          return a;
        },
        set_color: function (a) {
          return this.tf.set_textColor(a);
        },
        __class__: Tg,
        __properties__: u(ha.prototype.__properties__, {
          set_color: 'set_color',
        }),
      });
      var Pb = function (a, b) {
        null == b && (b = !1);
        ha.call(this);
        this.tf = mc.get(
          a,
          ia.format(ia.uiFont, b ? ia.smallSize : ia.normalSize, ia.black),
        );
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      g['com.watabou.coogee.ui.Label'] = Pb;
      Pb.__name__ = 'com.watabou.coogee.ui.Label';
      Pb.__super__ = ha;
      Pb.prototype = u(ha.prototype, {
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(this.tf.get_width(), this.tf.get_height());
          return a;
        },
        set_color: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.color = a;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        __class__: Pb,
        __properties__: u(ha.prototype.__properties__, {
          set_color: 'set_color',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var Yc = function () {
        ha.call(this);
        this.bg = sb.black();
        this.addChild(this.bg);
        this.items = [];
        this.addEventListener('addedToStage', l(this, this.onAdded));
        this.addEventListener('removedFromStage', l(this, this.onRemoved));
      };
      g['com.watabou.coogee.ui.Menu'] = Yc;
      Yc.__name__ = 'com.watabou.coogee.ui.Menu';
      Yc.__super__ = ha;
      Yc.prototype = u(ha.prototype, {
        layout: function () {
          for (
            var a = (this.rHeight = this.rWidth = 0), b = this.items;
            a < b.length;

          ) {
            var c = b[a];
            ++a;
            this.rWidth = Math.max(this.rWidth, c.get_width());
            this.rHeight += c.get_height();
          }
          var d = 2;
          a = 0;
          for (b = this.items; a < b.length; )
            ((c = b[a]),
              ++a,
              c.set_width(this.rWidth),
              c.set_x(2),
              c.set_y(d),
              (d += c.get_height()));
          this.rWidth += 4;
          this.rHeight += 4;
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        add: function (a) {
          this.items.push(a);
          this.addChild(a);
          this.layout();
        },
        remove: function (a) {
          O.remove(this.items, a);
          this.removeChild(a);
          this.layout();
        },
        addItem: function (a, b, c) {
          null == c && (c = !1);
          a = new dg(a, null, b);
          a.setCheck(c);
          this.add(a);
          return a;
        },
        addSubmenu: function (a, b) {
          a = new dg(a, b);
          this.add(a);
          return a;
        },
        addSeparator: function () {
          0 < this.items.length &&
            !(this.items[this.items.length - 1] instanceof pf) &&
            this.add(new pf());
        },
        hide: function () {
          null != this.submenu && (this.submenu.hide(), (this.submenu = null));
          null != this.parent &&
            (null != this.stage && this.stage.set_focus(this.stage),
            this.parent.removeChild(this));
        },
        getRoot: function () {
          return null != this.parentMenu ? this.parentMenu.getRoot() : this;
        },
        onMouseDown: function (a) {
          this.hitTestPoint(this.stage.get_mouseX(), this.stage.get_mouseY()) ||
            this.hide();
        },
        onAdded: function (a) {
          this.stage.addEventListener('mouseDown', l(this, this.onMouseDown));
          this.stage.addEventListener(
            'rightMouseDown',
            l(this, this.onMouseDown),
          );
        },
        onRemoved: function (a) {
          this.stage.removeEventListener(
            'mouseDown',
            l(this, this.onMouseDown),
          );
          this.stage.removeEventListener(
            'rightMouseDown',
            l(this, this.onMouseDown),
          );
        },
        cancel: function () {
          null != this.submenu &&
            (this.submenu.cancel(),
            this.parent.removeChild(this.submenu),
            (this.submenu = null));
        },
        hover: function (a, b) {
          this.cancel();
          if (null != b) {
            b.parentMenu = this;
            this.submenu = b;
            var c = a.get_x() + a.rWidth,
              d = a.get_y() - 2,
              f = new K(c, d);
            f = this.parent.globalToLocal(this.localToGlobal(f));
            if (this.parent == Ka.layer) {
              var h = !1;
              f.x + b.get_width() > this.parent.get_width() &&
                ((c = a.get_x() - b.get_width()), (h = !0));
              f.y + b.get_height() > this.parent.get_height() &&
                ((d = a.get_y() + a.rHeight - b.get_height() + 2), (h = !0));
              h &&
                ((f.x = c),
                (f.y = d),
                (f = this.parent.globalToLocal(this.localToGlobal(f))));
            }
            b.set_x(f.x);
            b.set_y(f.y);
            this.parent.addChild(b);
          }
        },
        __class__: Yc,
      });
      var dg = function (a, b, c) {
        var d = this;
        ha.call(this);
        this.submenu = b;
        this.callback = c;
        this.bg = sb.white();
        this.addChild(this.bg);
        this.bullet = sb.black();
        this.bullet.set_visible(!1);
        this.bullet.setSize(8, 8);
        this.addChild(this.bullet);
        c = null == c && null == b;
        this.formatNormal = ia.format(
          ia.uiFont,
          ia.smallSize,
          c ? ia.medium : ia.black,
        );
        this.formatHover = ia.format(ia.uiFont, ia.smallSize, ia.white);
        this.tf = mc.get(a, this.formatNormal);
        this.addChild(this.tf);
        null != b &&
          ((this.sub = mc.get(' >', this.formatNormal)),
          this.addChild(this.sub));
        this.addEventListener('mouseDown', function (a) {
          a.stopPropagation();
        });
        c ||
          (this.set_buttonMode(!0),
          this.addEventListener('rollOver', function (a) {
            d.hover(!0);
          }),
          this.addEventListener('rollOut', function (a) {
            d.hover(!1);
          }),
          this.addEventListener('click', l(this, this.onClick)));
        a = Math.round(ia.normalSize / 4);
        this.bullet.set_x(a);
        this.tf.set_x(a + this.bullet.get_width() + a - 2);
        null != b
          ? (this.sub.set_x(this.tf.get_x() + this.tf.get_width() - 4),
            (this.rWidth = this.sub.get_x() + (this.sub.get_width() - 4) + a))
          : (this.rWidth =
              a + this.bullet.get_width() + a + (this.tf.get_width() - 4) + a);
        this.rHeight = 1.5 * ia.normalSize;
        this.rWidth = Math.ceil(this.rWidth);
        this.rHeight = Math.ceil(this.rHeight);
        this.layout();
      };
      g['com.watabou.coogee.ui.MenuItem'] = dg;
      dg.__name__ = 'com.watabou.coogee.ui.MenuItem';
      dg.__super__ = ha;
      dg.prototype = u(ha.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.bullet.set_y((this.rHeight - this.bullet.get_height()) / 2);
          this.tf.set_y((this.rHeight - this.tf.get_height()) / 2);
          null != this.sub &&
            (this.sub.set_y(this.tf.get_y()),
            this.sub.set_x(
              this.rWidth - this.bullet.get_x() - this.sub.get_width() + 2,
            ));
        },
        hover: function (a) {
          null != this.get_root() &&
            (this.highlight(a),
            Ua.__cast(this.parent, Yc).hover(this, this.submenu));
        },
        highlight: function (a) {
          var b = a ? this.formatHover : this.formatNormal;
          this.tf.set_defaultTextFormat(b);
          var c = a ? ia.black : ia.white;
          this.bg.bmp.get_bitmapData().setPixel(0, 0, c);
          c = a ? ia.white : ia.black;
          this.bullet.bmp.get_bitmapData().setPixel(0, 0, c);
          null != this.submenu && this.sub.set_defaultTextFormat(b);
        },
        onClick: function (a) {
          null == this.submenu
            ? (a.stopPropagation(),
              this.highlight(!1),
              Ua.__cast(this.parent, Yc).getRoot().hide(),
              null != this.callback && this.callback())
            : Ua.__cast(this.parent, Yc).hover(
                this,
                null == this.submenu.parent ? this.submenu : null,
              );
        },
        setCheck: function (a) {
          this.bullet.set_visible(a);
          return this;
        },
        __class__: dg,
      });
      var sb = function (a, b) {
        null == b && (b = 1);
        ha.call(this);
        this.set_alpha(b);
        this.bmp = new eg(new Wb(1, 1, !1, a));
        this.addChild(this.bmp);
      };
      g['com.watabou.coogee.ui.SolidRect'] = sb;
      sb.__name__ = 'com.watabou.coogee.ui.SolidRect';
      sb.black = function () {
        return new sb(ia.black);
      };
      sb.light = function () {
        return new sb(ia.light);
      };
      sb.white = function () {
        return new sb(ia.white);
      };
      sb.__super__ = ha;
      sb.prototype = u(ha.prototype, {
        layout: function () {
          this.bmp.set_width(this.rWidth);
          this.bmp.set_height(this.rHeight);
        },
        __class__: sb,
      });
      var pf = function () {
        sb.call(this, ia.black);
        this.setSize(2, 2);
      };
      g['com.watabou.coogee.ui.MenuSeparator'] = pf;
      pf.__name__ = 'com.watabou.coogee.ui.MenuSeparator';
      pf.__super__ = sb;
      pf.prototype = u(sb.prototype, { __class__: pf });
      var fg = function (a, b, c) {
        this.action = new tc();
        var d = this;
        this.txtLabel = a;
        Od.call(this);
        this.menu = new Yc();
        a = 0;
        for (var f = b.length; a < f; ) {
          var h = a++,
            k = b[h];
          this.menu.addItem(
            k,
            (function (a) {
              return function () {
                d.action.dispatch(a[0]);
              };
            })([null != c ? c[h] : k]),
          );
        }
      };
      g['com.watabou.coogee.ui.MultiAction'] = fg;
      fg.__name__ = 'com.watabou.coogee.ui.MultiAction';
      fg.__super__ = Od;
      fg.prototype = u(Od.prototype, {
        createLabel: function () {
          var a = new Oc();
          a.setMargins(2, 4);
          var b = new Pb(this.txtLabel, !0);
          b.set_color(ia.white);
          a.add(b);
          b = new of(ia.white);
          b.mouseEnabled = !1;
          b.mouseChildren = !1;
          b.valign = 'fill';
          a.add(b);
          return a;
        },
        onClick: function (a) {
          Od.prototype.onClick.call(this, a);
          a = Ka.getRect(this);
          Ka.showMenuAt(this.menu, a.get_left(), a.get_bottom());
        },
        __class__: fg,
      });
      var re = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 100);
        null == a && (a = 0);
        this.submit = new tc();
        this.change = new tc();
        this.cycled = !1;
        ha.call(this);
        this.min = a;
        this.max = b;
        this.rounding = Math.pow(10, c);
        this.bg = new fa();
        this.bg.addEventListener('mouseDown', l(this, this.onPage));
        this.addChild(this.bg);
        this.scale = sb.black();
        this.scale.mouseEnabled = !1;
        this.add(this.scale);
        this.thumb = sb.black();
        this.thumb.set_buttonMode(!0);
        this.thumb.addEventListener('mouseDown', l(this, this.onStartDrag));
        this.add(this.thumb);
        this.addEventListener('mouseWheel', l(this, this.onWheel));
        this._value = a;
        this._prev = NaN;
        this.setSize(200, 20);
      };
      g['com.watabou.coogee.ui.Slider'] = re;
      re.__name__ = 'com.watabou.coogee.ui.Slider';
      re.__super__ = ha;
      re.prototype = u(ha.prototype, {
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = this.cycled
            ? zc.cycle(a, this.min, this.max)
            : zc.gate(a, this.min, this.max);
          this._value = Math.round(this._value * this.rounding) / this.rounding;
          this._prev != this._value &&
            ((this._prev = this._value),
            this.placeThumb(),
            this.change.dispatch(this._value));
          return a;
        },
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(16711680, 0);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.scale.setSize(this.rWidth, 2);
          this.scale.set_y(((this.rHeight - this.scale.get_height()) / 2) | 0);
          this.thumb.setSize(10, this.rHeight);
          this.thumb.set_y(((this.rHeight - this.thumb.get_height()) / 2) | 0);
          this.placeThumb();
        },
        placeThumb: function () {
          this.thumb.set_x(
            ((this.rWidth - this.thumb.get_width()) *
              (this.get_value() - this.min)) /
              (this.max - this.min),
          );
        },
        onStartDrag: function (a) {
          this.stage.addEventListener('mouseMove', l(this, this.onDrag));
          this.stage.addEventListener('mouseUp', l(this, this.onEndDrag));
          this.grabX = this.thumb.get_mouseX();
        },
        onDrag: function (a) {
          this.set_value(
            ((this.get_mouseX() - this.grabX) /
              (this.rWidth - this.thumb.get_width())) *
              (this.max - this.min) +
              this.min,
          );
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', l(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', l(this, this.onEndDrag));
          this.submit.dispatch(this.get_value());
        },
        onPage: function (a) {
          a = this.get_value();
          this.get_mouseX() < this.thumb.get_x()
            ? this.set_value(this.get_value() - 0.1 * (this.max - this.min))
            : this.get_mouseX() > this.thumb.get_x() + this.thumb.get_width() &&
              this.set_value(this.get_value() + 0.1 * (this.max - this.min));
          a != this.get_value() && this.submit.dispatch(this.get_value());
        },
        onWheel: function (a) {
          var b = this.get_value(),
            c = this.get_value();
          a = a.delta;
          this.set_value(c + (0 == a ? 0 : 0 > a ? -1 : 1) / this.rounding);
          b != this.get_value() && this.submit.dispatch(this.get_value());
        },
        __class__: re,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Ug = function (a) {
        this.enter = new tc();
        this.update = new tc();
        ha.call(this);
        this.tf = mc.input(
          a,
          ia.format(ia.uiFont, ia.normalSize, ia.black),
          l(this, this.onUpdate),
        );
        this.tf.set_backgroundColor(ia.white);
        this.tf.set_borderColor(ia.black);
        this.tf.set_autoSize(2);
        this.tf.set_wordWrap(!0);
        this.addChild(this.tf);
        this.addEventListener('focusIn', l(this, this.onFocusIn));
        this.tf.addEventListener('keyDown', l(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      g['com.watabou.coogee.ui.TextArea'] = Ug;
      Ug.__name__ = 'com.watabou.coogee.ui.TextArea';
      Ug.__super__ = ha;
      Ug.prototype = u(ha.prototype, {
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
          this.tf.setSelection(
            this.tf.get_text().length,
            this.tf.get_text().length,
          );
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onUpdate: function () {
          this.update.dispatch(this.tf.get_text());
        },
        __class__: Ug,
      });
      var Hc = function (a, b) {
        null == b && (b = !1);
        null == a && (a = '');
        this.leave = new Nd();
        this.enter = new tc();
        this.update = new tc();
        ha.call(this);
        this.tf = mc.input(
          a,
          ia.format(b ? ia.uiFontMono : ia.uiFont, ia.normalSize, ia.black),
          l(this, this.onUpdate),
        );
        this.tf.set_backgroundColor(ia.white);
        this.tf.set_borderColor(ia.black);
        this.addChild(this.tf);
        this.addEventListener('focusIn', l(this, this.onFocusIn));
        this.addEventListener('focusOut', l(this, this.onFocusOut));
        this.addEventListener('keyDown', l(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      g['com.watabou.coogee.ui.TextInput'] = Hc;
      Hc.__name__ = 'com.watabou.coogee.ui.TextInput';
      Hc.__super__ = ha;
      Hc.prototype = u(ha.prototype, {
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
        },
        onFocusOut: function (a) {
          this.leave.dispatch();
        },
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
          this.layoutPrompt();
        },
        layoutPrompt: function () {
          if (null != this.label) {
            var a = this.get_centered();
            this.label.set_x(
              a ? (this.rWidth - this.label.get_width()) / 2 : 2,
            );
            this.label.set_y(
              a ? (this.rHeight - this.label.get_height()) / 2 : 2,
            );
          }
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.updatePrompt();
          return a;
        },
        get_centered: function () {
          return 0 == this.tf.get_defaultTextFormat().align;
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          this.layoutPrompt();
          return a;
        },
        set_readOnly: function (a) {
          this.tf.set_type(a ? 0 : 1);
          return a;
        },
        set_restrict: function (a) {
          return this.tf.set_restrict(a);
        },
        onUpdate: function () {
          this.updatePrompt();
          this.update.dispatch(this.tf.get_text());
        },
        updatePrompt: function () {
          null != this.label &&
            (this.layoutPrompt(),
            this.label.set_visible('' == this.tf.get_text()));
        },
        set_prompt: function (a) {
          null == this.label &&
            ((this.label = new Pb(a)),
            this.label.set_enabled(!1),
            this.label.set_color(ia.medium),
            this.add(this.label),
            this.updatePrompt());
          this.label.set_text(a);
          return a;
        },
        selecteAll: function () {
          this.tf.setSelection(0, this.tf.get_length());
        },
        set_enabled: function (a) {
          ha.prototype.set_enabled.call(this, a);
          this.tf.set_alpha(a ? 1 : 0.6);
          return (this.tf.mouseEnabled = a);
        },
        __class__: Hc,
        __properties__: u(ha.prototype.__properties__, {
          set_prompt: 'set_prompt',
          set_restrict: 'set_restrict',
          set_readOnly: 'set_readOnly',
          set_centered: 'set_centered',
          get_centered: 'get_centered',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var Ac = function (a) {
        var b = this;
        ha.call(this);
        a = mc.get(a, ia.format(ia.uiFont, ia.normalSize, ia.white));
        a.set_x(10);
        a.set_y(10);
        this.addChild(a);
        this.rWidth = 10 + a.get_width() + 10;
        this.rHeight = 10 + a.get_height() + 10;
        this.get_graphics().beginFill(ia.black);
        this.get_graphics().drawRoundRect(0, 0, this.rWidth, this.rHeight, 10);
        ue.run(Ac.delay, function (a) {
          b.set_alpha(Ac.delay * (1 - a));
        }).onComplete(function () {
          null != b.parent && b.parent.removeChild(b);
        });
      };
      g['com.watabou.coogee.ui.Toast'] = Ac;
      Ac.__name__ = 'com.watabou.coogee.ui.Toast';
      Ac.show = function (a) {
        Ac.hide();
        var b = Ka.layer;
        a = Ac.instance = new Ac(a);
        a.set_x(((b.get_width() - a.get_width()) / 2) | 0);
        a.set_y((b.get_height() - a.get_height() - Ac.offset) | 0);
        b.addChild(a);
        return a;
      };
      Ac.hide = function () {
        null != Ac.instance &&
          null != Ac.instance.parent &&
          Ac.instance.parent.removeChild(Ac.instance);
      };
      Ac.__super__ = ha;
      Ac.prototype = u(ha.prototype, { __class__: Ac });
      var Ka = function () {};
      g['com.watabou.coogee.ui.UI'] = Ka;
      Ka.__name__ = 'com.watabou.coogee.ui.UI';
      Ka.showMenu = function (a) {
        Ka.showMenuAt(a, Ka.layer.get_mouseX(), Ka.layer.get_mouseY());
      };
      Ka.showMenuAt = function (a, b, c) {
        var d = a.items;
        0 < d.length &&
          d[d.length - 1] instanceof pf &&
          a.remove(d[d.length - 1]);
        Ka.menu = a;
        a.set_x(
          (b + a.get_width() <= Ka.layer.get_width() ? b : b - a.get_width()) |
            0,
        );
        a.set_y(
          (c + a.get_height() <= Ka.layer.get_height()
            ? c
            : c - a.get_height()) | 0,
        );
        0 > a.get_x() && a.set_x(0);
        0 > a.get_y() && a.set_y(0);
        Ka.layer.addChild(a);
      };
      Ka.hideMenu = function () {
        return null != Ka.menu && null != Ka.menu.stage
          ? (Ka.menu.hide(), (Ka.menu = null), !0)
          : !1;
      };
      Ka.showDialog = function (a, b) {
        a = nf.show(Ka.layer, a, b);
        a.onHide.add(function (a) {
          O.remove(Ka.windows, a);
        });
        Ka.windows.push(a);
        return a;
      };
      Ka.wipe = function () {
        Ka.hideMenu();
        for (var a = 0, b = Ka.windows.slice(); a < b.length; ) {
          var c = b[a];
          ++a;
          c.hide();
        }
        Ka.windows = [];
      };
      Ka.findForm = function (a) {
        for (var b = 0, c = Ka.windows; b < c.length; ) {
          var d = c[b];
          ++b;
          if (Ua.__instanceof(d.content, a)) return d.content;
        }
        return null;
      };
      Ka.getRect = function (a) {
        var b = new K(a.get_x(), a.get_y()),
          c = new K(a.get_x() + a.rWidth, a.get_y() + a.rHeight);
        b = Ka.layer.globalToLocal(a.parent.localToGlobal(b));
        c = Ka.layer.globalToLocal(a.parent.localToGlobal(c));
        return new qa(b.x, b.y, c.x - b.x, c.y - b.y);
      };
      Ka.showToast = function (a) {
        Ac.show(a);
      };
      var ia = function () {};
      g['com.watabou.coogee.ui.UIStyle'] = ia;
      ia.__name__ = 'com.watabou.coogee.ui.UIStyle';
      ia.format = function (a, b, c) {
        null == c && (c = 0);
        return new $d('_' == a.charAt(0) ? a : Zb.getFont(a).name, b, c);
      };
      ia.useDefault = function () {
        ia.black = 4012352;
        ia.dark = 5725031;
        ia.medium = 7569526;
        ia.light = 10064002;
        ia.white = 14276035;
        ia.smallSize = 18;
        ia.normalSize = 20;
        ia.uiFont = 'ui_font';
        ia.uiFontMono = 'ui_font_mono';
      };
      var Vg = function () {
        this.click = new Nd();
        ha.call(this);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.setSize(12, 12);
      };
      g['com.watabou.coogee.ui.elements.CloseButton'] = Vg;
      Vg.__name__ = 'com.watabou.coogee.ui.elements.CloseButton';
      Vg.__super__ = ha;
      Vg.prototype = u(ha.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(ia.white);
          this.get_graphics().drawCircle(this.rWidth / 2, this.rHeight / 2, 6);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: Vg,
      });
      var of = function (a) {
        null == a && (a = 0);
        this.click = new Nd();
        ha.call(this);
        this.bg = new sb(0, 0);
        this.addChild(this.bg);
        0 == a && (a = ia.black);
        var b = ia.smallSize / 4;
        this.image = new fa();
        var c = this.image.get_graphics();
        c.beginFill(a);
        c.moveTo(-b, -b);
        c.lineTo(b, -b);
        c.lineTo(0, b);
        this.addChild(this.image);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.setSize(2 * b, 2 * b);
      };
      g['com.watabou.coogee.ui.elements.DropDownButton'] = of;
      of.__name__ = 'com.watabou.coogee.ui.elements.DropDownButton';
      of.__super__ = ha;
      of.prototype = u(ha.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.image.set_x(this.rWidth / 2);
          this.image.set_y(this.rHeight / 2);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: of,
      });
      var kf = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1e3);
        null == b && (b = 0);
        var f = this;
        if (0 == d) Hc.call(this, null == c ? 'null' : '' + c, !0);
        else {
          for (var h = '0.', k = 0, v = d; k < v; ) (k++, (h += '0'));
          Hc.call(this, h, !0);
        }
        this.min = b;
        this.max = c;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('-0-9.');
        var p = Math.pow(10, Math.floor(Math.log(c - b) / Math.log(10)) - 1),
          g = 0 < d ? Math.pow(10, d) : 0;
        this.addEventListener('mouseWheel', function (a) {
          var d = parseFloat(f.get_text());
          d = zc.gate(d + (0 < a.delta ? 1 : -1) * p, b, c);
          0 < g && (d = Math.round(d * g) / g);
          f.set_text(null == d ? 'null' : '' + d);
        });
      };
      g['com.watabou.coogee.ui.elements.FloatInput'] = kf;
      kf.__name__ = 'com.watabou.coogee.ui.elements.FloatInput';
      kf.__super__ = Hc;
      kf.prototype = u(Hc.prototype, {
        set_value: function (a) {
          a = zc.gate(a, this.min, this.max);
          this.tf.set_text(null == a ? 'null' : '' + a);
          return a;
        },
        __class__: kf,
        __properties__: u(Hc.prototype.__properties__, {
          set_value: 'set_value',
        }),
      });
      var Rg = function (a) {
        this.click = new tc();
        var b = this;
        ha.call(this);
        this.bg = sb.light();
        this.add(this.bg);
        this.hbox = new Oc();
        this.add(this.hbox);
        for (var c = 0; c < a.length; ) {
          var d = [a[c]];
          ++c;
          var f = new Zd(d[0]);
          f.click.add(
            (function (a) {
              return function () {
                b.click.dispatch(a[0]);
              };
            })(d),
          );
          f.set_width(100);
          this.hbox.add(f);
        }
        this.setSize(this.hbox.get_width(), this.hbox.get_height());
      };
      g['com.watabou.coogee.ui.elements.FormButtons'] = Rg;
      Rg.__name__ = 'com.watabou.coogee.ui.elements.FormButtons';
      Rg.__super__ = ha;
      Rg.prototype = u(ha.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.hbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.hbox.set_x(this.rWidth - this.hbox.get_width());
          this.hbox.set_y(((this.rHeight - this.hbox.get_height()) / 2) | 0);
        },
        __class__: Rg,
      });
      var se = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1e3);
        null == b && (b = 0);
        var f = this,
          h = '0';
        if (0 == d) for (var k = c; 10 <= k; ) ((h += '0'), (k = (k / 10) | 0));
        else for (k = 1; k < d; ) (k++, (h += '0'));
        Hc.call(this, h, !0);
        this.min = b;
        this.max = c;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('0-9');
        this.addEventListener('mouseWheel', function (a) {
          a = 0 < a.delta ? 1 : -1;
          f.update.dispatch(I.string(f.set_value(f.get_value() + a)));
        });
      };
      g['com.watabou.coogee.ui.elements.IntInput'] = se;
      se.__name__ = 'com.watabou.coogee.ui.elements.IntInput';
      se.__super__ = Hc;
      se.prototype = u(Hc.prototype, {
        get_value: function () {
          return zc.gatei(I.parseInt(this.get_text()), this.min, this.max);
        },
        set_value: function (a) {
          a = zc.gatei(a, this.min, this.max);
          this.tf.set_text(null == a ? 'null' : '' + a);
          return a;
        },
        __class__: se,
        __properties__: u(Hc.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Wg = function (a, b) {
        ha.call(this);
        this.border2 = sb.black();
        this.add(this.border2);
        this.paint2 = sb.white();
        this.add(this.paint2);
        this.border = sb.black();
        this.add(this.border);
        this.paint = sb.white();
        this.add(this.paint);
        this.colors = a;
        a = this.colors[0];
        this.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        a = 1 < this.colors.length ? this.colors[1] : ia.white;
        this.paint2.bmp.get_bitmapData().setPixel(0, 0, a);
        this.setSize(b, b);
        this.addEventListener('click', l(this, this.onClickEvent));
      };
      g['com.watabou.coogee.ui.elements.MultiSwatch'] = Wg;
      Wg.__name__ = 'com.watabou.coogee.ui.elements.MultiSwatch';
      Wg.__super__ = ha;
      Wg.prototype = u(ha.prototype, {
        layout: function () {
          var a = this.rWidth - 4 - 1,
            b = this.rHeight - 4 - 1;
          this.border.setSize(a, b);
          this.paint.setSize(a - 2, b - 2);
          this.paint.set_x(this.paint.set_y(1));
          this.border2.setSize(a, b);
          this.border2.set_x(this.border2.set_y(5));
          this.paint2.setSize(a - 2, b - 2);
          this.paint2.set_x(this.border2.get_x() + 1);
          this.paint2.set_y(this.border2.get_y() + 1);
        },
        onClick: function (a) {
          this.callback = a;
          this.set_buttonMode(null != a);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: Wg,
      });
      var qf = function (a, b) {
        ha.call(this);
        this.border = sb.black();
        this.add(this.border);
        this.paint = new sb(a);
        this.add(this.paint);
        this.setSize(b, b);
        this.addEventListener('click', l(this, this.onClickEvent));
      };
      g['com.watabou.coogee.ui.elements.Swatch'] = qf;
      qf.__name__ = 'com.watabou.coogee.ui.elements.Swatch';
      qf.__super__ = ha;
      qf.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.paint.setSize(this.rWidth - 2, this.rHeight - 2);
          this.paint.set_x(this.paint.set_y(1));
        },
        onClick: function (a) {
          this.callback = a;
          this.set_buttonMode(null != a);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: qf,
      });
      var wd = function () {
        this.update = new hf();
        ha.call(this);
        this.selected = gc.get('tags', []);
        this.active = [];
        this.tagViews = new Ia();
        for (var a = 0, b = wd.getTags(); a < b.length; ) {
          var c = b[a];
          ++a;
          var d = new Xg(c, wd.getInfo(c), l(this, this.onClick));
          this.tagViews.h[c] = d;
          this.add(d);
          -1 != this.selected.indexOf(c) && d.setColor(ia.black);
        }
      };
      g['com.watabou.coogee.ui.elements.TagsView'] = wd;
      wd.__name__ = 'com.watabou.coogee.ui.elements.TagsView';
      wd.__super__ = ha;
      wd.prototype = u(ha.prototype, {
        set: function (a) {
          this.active = a.slice();
          this.layout();
        },
        select: function (a, b) {
          null == b && (b = !0);
          if ((-1 != this.selected.indexOf(a)) != b) {
            b
              ? wd.resTags(this.selected, a)
              : (O.remove(this.selected, a), wd.resTags(this.selected, null));
            for (
              var c = this.tagViews.h, d = Object.keys(c), f = d.length, h = 0;
              h < f;

            ) {
              var k = d[h++];
              c[k].setColor(
                -1 != this.selected.indexOf(k) ? ia.black : ia.dark,
              );
            }
            this.update.dispatch(a, b);
          }
        },
        layout: function () {
          for (
            var a = [],
              b = [],
              c = this.tagViews.h,
              d = Object.keys(c),
              f = d.length,
              h = 0;
            h < f;

          ) {
            var k = d[h++],
              v = k;
            k = c[k];
            -1 != this.active.indexOf(v) ? a.push(k) : b.push(k);
          }
          v = function (a, b) {
            return a.tag < b.tag ? -1 : a.tag > b.tag ? 1 : 0;
          };
          a.sort(v);
          b.sort(v);
          d = c = 8;
          for (h = f = 0; h < a.length; )
            ((v = a[h]),
              ++h,
              c + v.get_width() > this.rWidth - 8 &&
                ((c = 8), (d += f + 4), (f = 0)),
              v.set_x(c),
              v.set_y(d),
              f < v.get_height() && (f = v.get_height()),
              (c += v.get_width() + 4));
          d += f;
          8 == d && (d = 24);
          this.get_graphics().clear();
          this.get_graphics().beginFill(ia.light);
          this.get_graphics().drawRoundRect(0, 0, this.rWidth, d + 8, 32);
          c = 0;
          d += 16;
          for (h = f = 0; h < b.length; )
            ((v = b[h]),
              ++h,
              c + v.get_width() > this.rWidth &&
                ((c = 0), (d += f + 4), (f = 0)),
              v.set_x(c),
              v.set_y(d),
              f < v.get_height() && (f = v.get_height()),
              (c += v.get_width() + 4));
          this.rHeight = d + f;
        },
        onClick: function (a) {
          this.select(a, -1 == this.selected.indexOf(a));
        },
        __class__: wd,
      });
      var Xg = function (a, b, c) {
        this.color = ia.dark;
        ha.call(this);
        this.tag = a;
        this.label = mc.get(a, ia.format(ia.uiFont, ia.smallSize, ia.white));
        this.label.mouseEnabled = !1;
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', function (d) {
          d.stopPropagation();
          d.shiftKey ? null != b && Ka.showToast(b) : c(a);
        });
        this.setSize(this.label.get_width() + 8, this.label.get_height() + 8);
      };
      g['com.watabou.coogee.ui.elements.TagView'] = Xg;
      Xg.__name__ = 'com.watabou.coogee.ui.elements.TagView';
      Xg.__super__ = ha;
      Xg.prototype = u(ha.prototype, {
        layout: function () {
          this.updateBg();
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        updateBg: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(this.color);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            16,
          );
        },
        setColor: function (a) {
          this.color = a;
          this.updateBg();
        },
        __class__: Xg,
      });
      var Fi = function (a, b, c, d) {
        null == c && (c = !1);
        this.edit = function (a) {
          Yb.trace(a.get_value(), {
            fileName: 'com/watabou/coogee/ui/elements/TextView.hx',
            lineNumber: 22,
            className: 'com.watabou.coogee.ui.elements.TextView',
            methodName: 'edit',
          });
        };
        this.data2text = function (a) {
          return I.string(a);
        };
        this._value = null;
        var f = this;
        null != b && (this.data2text = b);
        null != d && (this.edit = d);
        this._value = a;
        ha.call(this);
        this.border = sb.black();
        this.add(this.border);
        this.bg = sb.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = mc.get(
          this.data2text(a),
          ia.format(ia.uiFont, c ? ia.smallSize : ia.normalSize, ia.black),
        );
        this.addChild(this.tf);
        this.btn = new of();
        this.btn.set_width(ia.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        this.tf.mouseEnabled = !1;
        this.set_buttonMode(!0);
        this.addEventListener('click', function (a) {
          f.edit(f);
        });
        this.setSize(
          Math.ceil(this.tf.get_width() + this.btn.get_width()),
          Math.ceil(this.tf.get_height()),
        );
      };
      g['com.watabou.coogee.ui.elements.TextView'] = Fi;
      Fi.__name__ = 'com.watabou.coogee.ui.elements.TextView';
      Fi.__super__ = ha;
      Fi.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_autoSize(2);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.tf.set_scrollH(0);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = a;
          this.tf.set_text(this.data2text(a));
          return a;
        },
        __class__: Fi,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Pc = function (a) {
        nb.call(this, null != a ? a.concat(Pc.okCancel) : Pc.okCancel);
      };
      g['com.watabou.coogee.ui.elements.EditForm'] = Pc;
      Pc.__name__ = 'com.watabou.coogee.ui.elements.EditForm';
      Pc.__super__ = nb;
      Pc.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Edit';
        },
        onButton: function (a) {
          if ('OK' == a) {
            if (null != this.onOK) this.onOK(this.get());
            this.dialog.hide();
          } else nb.prototype.onButton.call(this, a);
        },
        set: function (a) {},
        get: function () {
          return null;
        },
        link: function (a, b, c, d) {
          null != a && this.dialog.setTitle(a);
          this.set(b);
          this.onOK = c;
          null != this.host &&
            this.host.dialog.onHide.remove(l(this, this.onHostHidden));
          this.host = d;
          null != d && d.dialog.onHide.add(l(this, this.onHostHidden));
        },
        onHostHidden: function (a) {
          this.dialog.hide();
        },
        __class__: Pc,
      });
      var Sg = function (a) {
        this.close = new Nd();
        var b = this;
        ha.call(this);
        this.bg = sb.black();
        this.add(this.bg);
        this.btn = new Vg();
        this.btn.click.add(function () {
          b.close.dispatch();
        });
        this.add(this.btn);
        this.tf = mc.get(a, ia.format(ia.uiFont, ia.smallSize, ia.white));
        this.tf.mouseEnabled = !1;
        this.addChild(this.tf);
        this.setSize(this.tf.get_width(), 36);
      };
      g['com.watabou.coogee.ui.elements.WindowHeader'] = Sg;
      Sg.__name__ = 'com.watabou.coogee.ui.elements.WindowHeader';
      Sg.__super__ = ha;
      Sg.prototype = u(ha.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.btn.setSize(this.rHeight, this.rHeight);
          this.btn.set_x(this.rWidth - this.rHeight);
          this.tf.set_x(
            this.tf.set_y(((this.rHeight - this.tf.get_height()) / 2) | 0),
          );
        },
        setText: function (a) {
          this.tf.set_text(a);
        },
        __class__: Sg,
      });
      var gg = function () {
        var a = this;
        Pc.call(this);
        var b = new Oc();
        this.swatch = new qf(0, 60);
        this.swatch.valign = 'fill';
        b.add(this.swatch);
        var c = new qe(3);
        c.setMargins(0, 10);
        var d = function (b, d) {
          b = new Pb(b);
          b.valign = 'center';
          c.add(b);
          var f = new re(0, d);
          f.valign = 'center';
          c.add(f);
          var h = new se(0, 0, d, 3);
          c.add(h);
          h.update.add(function (a) {
            f.set_value(h.get_value());
          });
          f.change.add(function (b) {
            h.set_value(Math.round(b));
            a.updateSwatch();
          });
          return f;
        };
        this.hue = d('Hue', 359);
        this.hue.cycled = !0;
        this.sat = d('Sat', 100);
        this.val = d('Val', 100);
        b.add(c);
        this.add(b);
      };
      g['com.watabou.coogee.ui.forms.ColorForm'] = gg;
      gg.__name__ = 'com.watabou.coogee.ui.forms.ColorForm';
      gg.__super__ = Pc;
      gg.prototype = u(Pc.prototype, {
        set: function (a) {
          this.setColor(a);
        },
        get: function () {
          return this.color;
        },
        setColor: function (a) {
          a = Sa.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
        },
        updateSwatch: function () {
          var a = (this.color = Sa.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        },
        __class__: gg,
      });
      var Gi = function () {
        var a = this;
        Pc.call(this);
        var b = new Nc(),
          c = new Oc();
        c.setMargins(0, 10);
        this.face = new Hc('');
        this.face.set_width(300);
        this.face.set_prompt('Font name');
        this.face.update.add(function (b) {
          a.updatePreview();
        });
        c.add(this.face);
        this.size = new se(18, 8, 96);
        this.size.set_restrict('0-9');
        this.size.update.add(function (b) {
          a.updatePreview();
        });
        c.add(this.size);
        var d = new Oc();
        d.setMargins(0, 10);
        this.bold = new lf('Bold');
        this.bold.changed.add(function (b) {
          a.updatePreview();
        });
        d.add(this.bold);
        this.italic = new lf('Italic');
        this.italic.changed.add(function (b) {
          a.updatePreview();
        });
        d.add(this.italic);
        this.preview = new Yg();
        this.preview.halign = 'fill';
        this.preview.set_height(100);
        b.add(c);
        b.add(d);
        b.add(this.preview);
        this.add(b);
      };
      g['com.watabou.coogee.ui.forms.FontForm'] = Gi;
      Gi.__name__ = 'com.watabou.coogee.ui.forms.FontForm';
      Gi.__super__ = Pc;
      Gi.prototype = u(Pc.prototype, {
        set: function (a) {
          this.face.set_text(null != a.face ? a.face : '');
          this.size.set_value(a.size);
          this.bold.set_value(a.bold);
          this.italic.set_value(a.italic);
          this.embedded = a.embedded;
          this.face.set_prompt(
            null != this.embedded && Zb.exists(this.embedded)
              ? Zb.getFont(this.embedded).name
              : 'Font name',
          );
          this.preview.setFont(a);
          this.face.selecteAll();
          null != this.stage && this.stage.set_focus(this.face);
        },
        get: function () {
          return {
            face: '' == this.face.get_text() ? null : this.face.get_text(),
            embedded: this.embedded,
            size: this.size.get_value(),
            bold: this.bold.get_value(),
            italic: this.italic.get_value(),
          };
        },
        updatePreview: function () {
          this.preview.setFont(this.get());
        },
        __class__: Gi,
      });
      var Yg = function (a) {
        null == a && (a = 'Sample Text');
        ha.call(this);
        this.border = sb.black();
        this.addChild(this.border);
        this.bg = sb.white();
        this.bg.set_x(this.bg.set_y(1));
        this.addChild(this.bg);
        this.tf = new Gc();
        this.tf.set_text(a);
        this.fixText();
        this.addChild(this.tf);
        this.maskRect = new ve();
        this.addChild(this.maskRect);
        this.tf.set_mask(this.maskRect);
      };
      g['com.watabou.coogee.ui.forms._FontForm.FontPreview'] = Yg;
      Yg.__name__ = 'com.watabou.coogee.ui.forms._FontForm.FontPreview';
      Yg.__super__ = ha;
      Yg.prototype = u(ha.prototype, {
        layout: function () {
          var a = this.maskRect.get_graphics();
          a.clear();
          a.beginFill(16711680);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.border.set_width(this.rWidth);
          this.border.set_height(this.rHeight);
          this.bg.set_width(this.rWidth - 2);
          this.bg.set_height(this.rHeight - 2);
          this.tf.set_x(Math.max((this.rWidth - this.tf.get_width()) / 2, 0));
          this.tf.set_y(Math.max((this.rHeight - this.tf.get_height()) / 2, 0));
        },
        setFont: function (a) {
          a = ec.font2format(a);
          null == a && (a = new $d());
          a.color = ia.black;
          this.tf.setTextFormat(a);
          this.fixText();
          this.layout();
        },
        fixText: function () {
          this.tf.set_autoSize(1);
          var a = this.tf.get_width(),
            b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(Math.ceil(a));
          this.tf.set_height(Math.ceil(b));
        },
        __class__: Yg,
      });
      var Hi = function (a) {
        nb.call(this, ['OK']);
        var b = new mf();
        a = new Ug(a);
        a.mouseEnabled = !1;
        a.mouseChildren = !1;
        a.set_width(360);
        b.add(a);
        this.add(b);
      };
      g['com.watabou.coogee.ui.forms.Message'] = Hi;
      Hi.__name__ = 'com.watabou.coogee.ui.forms.Message';
      Hi.__super__ = nb;
      Hi.prototype = u(nb.prototype, {
        getTitle: function () {
          return 'Message';
        },
        __class__: Hi,
      });
      var hg = function () {
        Pc.call(this);
        this.content = new Nc();
        this.content.setMargins(12, 12);
        this.add(this.content);
      };
      g['com.watabou.coogee.ui.forms.MultiColorForm'] = hg;
      hg.__name__ = 'com.watabou.coogee.ui.forms.MultiColorForm';
      hg.__super__ = Pc;
      hg.prototype = u(Pc.prototype, {
        onButton: function (a) {
          'Add' == a
            ? ((a = this.get()), a.push(a[a.length - 1]), this.set(a))
            : Pc.prototype.onButton.call(this, a);
        },
        set: function (a) {
          this.content.removeChildren();
          for (var b = [], c = 0, d = a.length; c < d; ) {
            var f = c++,
              h = a[f];
            if (0 < f) {
              var k = new sb(ia.black);
              k.halign = 'fill';
              k.setSize(2, 2);
              this.content.add(k);
            }
            f = new Ii(this.content, h, 0 == f, f == a.length - 1);
            f.action.add(l(this, this.onItemAction));
            b.push(f);
          }
          this.items = b;
          this.add(this.content);
          Ua.__cast(this.parent, td).resize(!0);
        },
        get: function () {
          for (var a = [], b = 0, c = this.items; b < c.length; ) {
            var d = c[b];
            ++b;
            a.push(d.color);
          }
          return a;
        },
        onItemAction: function (a, b) {
          var c = this.items.indexOf(a),
            d = this.get();
          d.splice(c, 1);
          switch (b) {
            case 'Duplicate':
              d.splice(c, 0, a.color);
              d.splice(c, 0, a.color);
              break;
            case 'Move down':
              d.splice(c + 1, 0, a.color);
              break;
            case 'Move up':
              d.splice(c - 1, 0, a.color);
          }
          this.set(d);
        },
        __class__: hg,
      });
      var Ii = function (a, b, c, d) {
        this.action = new hf();
        var f = this;
        this.color = b;
        var h = new Oc();
        h.setMargins(0, 10);
        var k = new Nc();
        k.setMargins(0, 10);
        this.hex = new Hc('#000000', !0);
        this.hex.set_text(M.hex(b, 6));
        this.hex.set_restrict('#0-9a-fA-F');
        this.hex.update.add(l(this, this.onHex));
        k.add(this.hex);
        this.swatch = new qf(b, 10 + 2 * this.hex.get_height());
        this.swatch.halign = 'fill';
        k.add(this.swatch);
        h.add(k);
        k = new qe(4);
        k.setMargins(0, 10);
        var v = ['Duplicate'];
        c || v.push('Move up');
        d || v.push('Move down');
        (c && d) || v.push('Delete');
        c = new fg('...', v);
        c.action.add(function (a) {
          f.action.dispatch(f, a);
        });
        c.valign = 'fill';
        b = Sa.rgb2hsv(b);
        this.hue = this.addRow(k, 'Hue', 359, b.x, c);
        this.sat = this.addRow(k, 'Sat', 100, 100 * b.y);
        this.val = this.addRow(k, 'Val', 100, 100 * b.z);
        h.add(k);
        a.add(h);
      };
      g['com.watabou.coogee.ui.forms.ColorItem'] = Ii;
      Ii.__name__ = 'com.watabou.coogee.ui.forms.ColorItem';
      Ii.prototype = {
        addRow: function (a, b, c, d, f) {
          var h = this;
          c |= 0;
          d |= 0;
          b = new Pb(b);
          b.valign = 'center';
          a.add(b);
          var k = new re(0, c);
          k.set_value(d);
          k.valign = 'center';
          a.add(k);
          var v = new se(d, 0, c, 3);
          a.add(v);
          v.update.add(function (a) {
            k.set_value(v.get_value());
          });
          k.change.add(function (a) {
            v.set_value(Math.round(a));
            h.updateSwatch();
          });
          null != f ? a.add(f) : a.addEmpty();
          return k;
        },
        onHex: function (a) {
          '#' == a.charAt(0) && (a = O.substr(a, 1, null));
          if (3 == a.length) {
            var b = [];
            b.push(a.charAt(0) + a.charAt(0));
            b.push(a.charAt(1) + a.charAt(1));
            b.push(a.charAt(2) + a.charAt(2));
            a = b.join('');
          }
          6 < a.length && (a = O.substr(a, 0, 6));
          a = I.parseInt('0x' + a);
          a = Sa.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
          this.updateSwatch();
        },
        updateSwatch: function () {
          var a = (this.color = Sa.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          this.hex.set_text(M.hex(this.color, 6));
        },
        __class__: Ii,
      };
      var $b = function (a, b) {
        this.onNullAsset = function (a, b) {
          Yb.trace('No ' + a + ' palette!', {
            fileName: 'com/watabou/coogee/ui/forms/PaletteForm.hx',
            lineNumber: 38,
            className: 'com.watabou.coogee.ui.forms.PaletteForm',
            methodName: 'onNullAsset',
          });
        };
        this.getName = function (a) {
          return 'palette';
        };
        var c = this;
        Zc.call(this);
        this.form = new Oc();
        this.form.setMargins(0, 0);
        this.add(this.form);
        this.tabs = new Zg();
        this.form.add(this.tabs);
        var d = [
          new Zd('Load', l(this, this.onLoad)),
          new Zd('Apply', function () {
            a(c.getPalette());
          }),
          new Zd('Save', function () {
            c.onSave(c.getPalette());
          }),
        ];
        if (null != b) {
          for (var f = [], h = []; 0 < b.length; )
            (f.push(b.shift()), h.push(b.shift()));
          b = new fg('Preset', f, h);
          b.action.add(function (a) {
            c.loadPreset(a);
          });
          d.unshift(b);
        }
        this.buttons = new $g(d);
        this.form.add(this.buttons);
        this.onApply = a;
        this.values = [];
      };
      g['com.watabou.coogee.ui.forms.PaletteForm'] = $b;
      $b.__name__ = 'com.watabou.coogee.ui.forms.PaletteForm';
      $b.txt2color = function (a) {
        '#' == a.charAt(0) && (a = O.substr(a, 1, null));
        if (3 == a.length) {
          var b = [];
          b.push(a.charAt(0) + a.charAt(0));
          b.push(a.charAt(1) + a.charAt(1));
          b.push(a.charAt(2) + a.charAt(2));
          a = b.join('');
        }
        6 < a.length && (a = O.substr(a, 0, 6));
        return I.parseInt('0x' + a);
      };
      $b.txt2float = function (a, b, c) {
        return zc.gate(parseFloat(a), b, c);
      };
      $b.txt2int = function (a, b, c) {
        return zc.gatei(I.parseInt(a), b | 0, c | 0);
      };
      $b.swatches = function (a, b) {
        return function (c) {
          for (
            var d = null != a ? a + '_' : '', f = [], h = 0;
            h < b.length;

          ) {
            var k = b[h];
            ++h;
            f.push(ah.get(c.getColor(k)));
          }
          return d + f.join('_');
        };
      };
      $b.__super__ = Zc;
      $b.prototype = u(Zc.prototype, {
        onShow: function () {
          Zc.prototype.onShow.call(this);
          this.tabs.onTab($b.lastTab);
          this.tabs.change.add(function (a) {
            $b.lastTab = a;
          });
        },
        onEnter: function () {
          this.onApply(this.getPalette());
        },
        layout: function () {
          null != this.tabs && this.tabs.layout();
          this.form.layout();
          Zc.prototype.layout.call(this);
        },
        onKey: function (a) {
          var b = this.tabs.getTab();
          switch (a) {
            case 33:
              if (b < this.tabs.getTabCount() - 1) this.tabs.onTab(b + 1);
              break;
            case 34:
              if (0 < b) this.tabs.onTab(this.tabs.getTab() - 1);
              break;
            default:
              return Zc.prototype.onKey.call(this, a);
          }
          return !0;
        },
        setMaxTabs: function (a) {
          this.tabs.set_rowSize(a);
        },
        addTab: function (a) {
          this.grid = new qe(2);
          this.tabs.addTab(a, this.grid);
        },
        addColor: function (a, b, c) {
          var d = this;
          null == this.grid && this.addTab(null);
          var f = new Pb(b);
          this.grid.add(f);
          b = new Oc();
          b.setMargins(0, 10);
          var h = new Hc('#000000', !0);
          h.set_text(M.hex(c, 6));
          h.set_restrict('#0-9a-fA-F');
          b.add(h);
          var k = new qf(c, h.get_height());
          b.add(k);
          h.update.add(function (a) {
            a = $b.txt2color(a);
            k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          });
          k.onClick(function () {
            d.onColor(f.get_text(), k, function (a) {
              h.set_text(M.hex(a, 6));
              k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
            });
          });
          this.grid.add(b);
          this.values.push({ id: a, type: Ub.COLOR, view: h, swatch: k });
          this.layout();
        },
        addMultiColor: function (a, b, c) {
          var d = this;
          null == this.grid && this.addTab(null);
          var f = new Pb(b);
          this.grid.add(f);
          b = new Oc();
          b.setMargins(0, 10);
          var h = new Hc('#000000', !0);
          h.set_text(M.hex(c[0], 6));
          h.set_restrict('#0-9a-fA-F');
          b.add(h);
          var k = new Wg(c, h.get_height());
          b.add(k);
          h.update.add(function (a) {
            a = $b.txt2color(a);
            var b = k.colors;
            b[0] = a;
            k.colors = b;
            a = k.colors[0];
            k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
            a = 1 < k.colors.length ? k.colors[1] : ia.white;
            k.paint2.bmp.get_bitmapData().setPixel(0, 0, a);
          });
          k.onClick(function () {
            d.onMultiColor(f.get_text(), k, function (a) {
              h.set_text(M.hex(a[0], 6));
              k.colors = a;
              a = k.colors[0];
              k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
              a = 1 < k.colors.length ? k.colors[1] : ia.white;
              k.paint2.bmp.get_bitmapData().setPixel(0, 0, a);
            });
          });
          this.grid.add(b);
          this.values.push({ id: a, type: Ub.MULTI, view: h, multi: k });
          this.layout();
        },
        addFloat: function (a, b, c, d, f) {
          null == this.grid && this.addTab(null);
          b = new Pb(b);
          this.grid.add(b);
          c = new kf(c, d, f, 5);
          this.grid.add(c);
          this.values.push({ id: a, type: Ub.FLOAT, view: c, min: d, max: f });
          this.layout();
        },
        addInt: function (a, b, c, d, f) {
          null == this.grid && this.addTab(null);
          b = new Pb(b);
          this.grid.add(b);
          c = new se(c, d, f, 7);
          this.grid.add(c);
          this.values.push({ id: a, type: Ub.INT, view: c, min: d, max: f });
          this.layout();
        },
        addEnum: function (a, b, c, d) {
          null == this.grid && this.addTab(null);
          b = new Pb(b);
          this.grid.add(b);
          c = te.ofStrings(c);
          c.set_text(d);
          c.halign = 'fill';
          this.grid.add(c);
          this.values.push({ id: a, type: Ub.STRING, view: c });
          this.layout();
        },
        onColor: function (a, b, c) {
          var d = Ka.findForm(gg);
          null == d && ((d = new gg()), Ka.showDialog(d));
          d.link(a, b.paint.bmp.get_bitmapData().getPixel(0, 0), c, this);
        },
        onMultiColor: function (a, b, c) {
          var d = Ka.findForm(hg);
          null == d && ((d = new hg()), Ka.showDialog(d));
          d.link(a, b.colors, c, this);
        },
        onLoad: function () {
          var a = this,
            b = new ig();
          b.addEventListener('select', function (c) {
            b.addEventListener('complete', l(a, a.onPaletteLoaded));
            b.load();
          });
          var c = [new Ji('Palette', '*.json')];
          b.browse(c);
        },
        loadPreset: function (a) {
          if (Zb.exists(a)) this.loadPalette(ec.fromJSON(Zb.getText(a)));
          else this.onNullAsset(a, this);
        },
        onPaletteLoaded: function (a) {
          try {
            this.loadPalette(
              ec.fromJSON(Ua.__cast(a.target, ig).data.toString()),
            );
          } catch (b) {
            Ac.show('Invalid palette file');
          }
        },
        loadPalette: function (a) {
          for (var b = 0, c = this.values; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                var f = d.view,
                  h = a.getColor(d.id, $b.txt2color(f.get_text()));
                d.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, h);
                f.set_text(M.hex(h, 6));
                break;
              case 1:
                f = d.view;
                h = a.getMulti(d.id, $b.txt2color(f.get_text()));
                d = d.multi;
                d.colors = h;
                var k = d.colors[0];
                d.paint.bmp.get_bitmapData().setPixel(0, 0, k);
                k = 1 < d.colors.length ? d.colors[1] : ia.white;
                d.paint2.bmp.get_bitmapData().setPixel(0, 0, k);
                f.set_text(M.hex(h[0], 6));
                break;
              case 2:
                f = d.view;
                d = a.getFont(d.id, f.get_value());
                f.set_value(d);
                break;
              case 3:
                f = d.view;
                d = a.getFloat(d.id, $b.txt2float(f.get_text(), d.min, d.max));
                f.set_text(null == d ? 'null' : '' + d);
                break;
              case 4:
                f = d.view;
                d = a.getInt(d.id, $b.txt2int(f.get_text(), d.min, d.max));
                f.set_text(null == d ? 'null' : '' + d);
                break;
              case 5:
                d.view instanceof te
                  ? ((f = d.view),
                    (d = a.getString(d.id, f.get_value())),
                    f.set_value(d))
                  : ((f = d.view),
                    (d = a.getString(d.id, f.get_text())),
                    f.set_text(d));
                break;
              case 6:
                ((f = d.view), f.set_value(a.getBool(d.id, f.get_value())));
            }
          }
        },
        getPalette: function () {
          for (var a = new ec(), b = 0, c = this.values; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                var f = d.view,
                  h = $b.txt2color(f.get_text());
                a.setColor(d.id, h);
                f.set_text(M.hex(h, 6));
                break;
              case 1:
                f = d.view;
                h = d.multi.colors;
                a.setMulti(d.id, h);
                f.set_text(M.hex(h[0], 6));
                break;
              case 2:
                f = d.view.get_value();
                a.setFont(d.id, f);
                break;
              case 3:
                f = d.view;
                h = $b.txt2float(f.get_text(), d.min, d.max);
                a.setFloat(d.id, h);
                f.set_text(null == h ? 'null' : '' + h);
                break;
              case 4:
                f = d.view;
                h = $b.txt2int(f.get_text(), d.min, d.max);
                a.setInt(d.id, h);
                f.set_text(null == h ? 'null' : '' + h);
                break;
              case 5:
                d.view instanceof te
                  ? a.setString(d.id, d.view.get_value())
                  : a.setString(d.id, d.view.get_text());
                break;
              case 6:
                a.setBool(d.id, d.view.get_value());
            }
          }
          return a;
        },
        onSave: function (a) {
          Ld.saveText(a.json(), this.getName(a) + '.json', 'application/json');
        },
        __class__: $b,
      });
      var $g = function (a) {
        ha.call(this);
        this.bg = sb.light();
        this.add(this.bg);
        this.vbox = new Nc();
        this.add(this.vbox);
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          c.set_width(100);
          this.vbox.add(c);
        }
        this.setSize(this.vbox.get_width(), this.vbox.get_height());
        this.valign = 'fill';
      };
      g['com.watabou.coogee.ui.forms.ButtonColumn'] = $g;
      $g.__name__ = 'com.watabou.coogee.ui.forms.ButtonColumn';
      $g.__super__ = ha;
      $g.prototype = u(ha.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.vbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.vbox.set_x(((this.rWidth - this.vbox.get_width()) / 2) | 0);
          this.vbox.set_y(0);
        },
        __class__: $g,
      });
      var pe = function (a, b) {
        nb.call(this, ['Generate', 'Random']);
        this.generate = b;
        this.content = new Nc();
        this.addAbove();
        this.tags = new wd();
        this.tags.setSize(300, 0);
        this.tags.set(a);
        this.content.add(this.tags);
        null != pe.hintText &&
          ((a = new Tg(pe.hintText)),
          a.set_color(ia.dark),
          a.set_width(300),
          this.content.add(a));
        this.add(this.content);
      };
      g['com.watabou.coogee.ui.forms.TagsForm'] = pe;
      pe.__name__ = 'com.watabou.coogee.ui.forms.TagsForm';
      pe.__super__ = nb;
      pe.prototype = u(nb.prototype, {
        onButton: function (a) {
          switch (a) {
            case 'Generate':
              gc.set('tags', this.tags.selected);
              this.tags.set(this.generate(this.tags.selected));
              this.relayout();
              break;
            case 'Random':
              this.tags.set(this.generate(null));
              this.relayout();
              break;
            default:
              nb.prototype.onButton.call(this, a);
          }
        },
        relayout: function () {
          this.content.layout();
          var a = this.buttons.get_y();
          this.layout();
          a > this.buttons.get_y() &&
            (this.buttons.set_y(a),
            (a = this.buttons),
            (this.rHeight = a.get_y() + a.rHeight + this.margin));
          Ua.__cast(this.parent, td).resize();
        },
        onEnter: function () {
          this.onButton('Generate');
        },
        onKey: function (a) {
          return 9 == a ? (this.onEsc(), !0) : nb.prototype.onKey.call(this, a);
        },
        addAbove: function () {},
        __class__: pe,
      });
      var qe = function (a) {
        null == a && (a = 2);
        this.margin = this.gap = 10;
        ha.call(this);
        this.cols = a;
      };
      g['com.watabou.coogee.ui.layouts.Grid'] = qe;
      qe.__name__ = 'com.watabou.coogee.ui.layouts.Grid';
      qe.__super__ = ha;
      qe.prototype = u(ha.prototype, {
        layout: function () {
          for (var a = [], b = 0, c = this.cols; b < c; ) (b++, a.push(0));
          c = a;
          var d = [];
          a = 0;
          for (b = this.get_numChildren(); a < b; ) {
            var f = a++;
            var h = f % this.cols,
              k = (f / this.cols) | 0;
            d.length <= k && d.push(0);
            f = this.getChildAt(f);
            var v = f.get_width();
            c[h] < v && (c[h] = v);
            h = f.get_height();
            d[k] < h && (d[k] = h);
          }
          var p = (v = this.margin);
          a = k = h = 0;
          for (b = this.get_numChildren(); a < b; ) {
            f = a++;
            f = this.getChildAt(f);
            var g = v,
              t = p;
            if (f instanceof ha) {
              var m = Ua.__cast(f, ha);
              switch (m.halign) {
                case 'center':
                  g += (c[h] - m.get_width()) / 2;
                  break;
                case 'fill':
                  m.set_width(c[h]);
                  break;
                case 'right':
                  g += c[h] - m.get_width();
              }
              switch (m.valign) {
                case 'bottom':
                  t += d[k] - m.get_height();
                  break;
                case 'center':
                  t += (d[k] - m.get_height()) / 2;
                  break;
                case 'fill':
                  m.set_height(d[k]);
              }
            }
            f.set_x(g);
            f.set_y(t);
            v += c[h] + this.gap;
            ++h;
            h == this.cols &&
              ((v = this.margin), (p += d[k] + this.gap), ++k, (h = 0));
          }
          this.rHeight = 2 * this.margin + (d.length - 1) * this.gap;
          for (a = 0; a < d.length; ) ((h = d[a]), ++a, (this.rHeight += h));
          this.rWidth = 2 * this.margin + (c.length - 1) * this.gap;
          for (a = 0; a < c.length; ) ((v = c[a]), ++a, (this.rWidth += v));
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        addEmpty: function () {
          this.add(new sb(0, 0));
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: qe,
      });
      var Oc = function () {
        this.margin = this.gap = 10;
        ha.call(this);
      };
      g['com.watabou.coogee.ui.layouts.HBox'] = Oc;
      Oc.__name__ = 'com.watabou.coogee.ui.layouts.HBox';
      Oc.__super__ = ha;
      Oc.prototype = u(ha.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              c = !1,
              d = 0,
              f = this.get_numChildren();
            d < f;

          ) {
            var h = d++;
            h = this.getChildAt(h);
            'top' != h.valign && (c = !0);
            'fill' != h.valign && b < h.get_height() && (b = h.get_height());
            h.set_x(a);
            h.set_y(this.margin);
            a += h.get_width() + this.gap;
          }
          if (c)
            for (d = 0, f = this.get_numChildren(); d < f; )
              switch (((h = d++), (h = this.getChildAt(h)), h.valign)) {
                case 'bottom':
                  h.set_y(this.margin + (b - h.get_height()));
                  break;
                case 'center':
                  h.set_y(this.margin + (b - h.get_height()) / 2);
                  break;
                case 'fill':
                  h.set_height(b);
              }
          this.rWidth =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: Oc,
      });
      var mf = function () {
        this.margin = 10;
        ha.call(this);
      };
      g['com.watabou.coogee.ui.layouts.SimpleBox'] = mf;
      mf.__name__ = 'com.watabou.coogee.ui.layouts.SimpleBox';
      mf.__super__ = ha;
      mf.prototype = u(ha.prototype, {
        layout: function () {
          for (var a = 0, b = 0, c = 0, d = this.get_numChildren(); c < d; ) {
            var f = c++;
            f = this.getChildAt(f);
            a < f.get_width() && (a = f.get_width());
            b < f.get_height() && (b = f.get_height());
            f.set_x(this.margin);
            f.set_y(this.margin);
          }
          this.rWidth = a + 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a) {
          this.margin = a;
        },
        __class__: mf,
      });
      var Zg = function () {
        this.change = new tc();
        Nc.call(this);
        this.setMargins(0, 0);
        this.tabRow = new bh();
        this.tabRow.click.add(l(this, this.onTab));
        this.tabRow.halign = 'fill';
        this.add(this.tabRow);
        this.stack = new mf();
        this.stack.setMargins(0);
        this.add(this.stack);
      };
      g['com.watabou.coogee.ui.layouts.Tabs'] = Zg;
      Zg.__name__ = 'com.watabou.coogee.ui.layouts.Tabs';
      Zg.__super__ = Nc;
      Zg.prototype = u(Nc.prototype, {
        layout: function () {
          null != this.stack && this.stack.layout();
          Nc.prototype.layout.call(this);
        },
        addTab: function (a, b) {
          null != a && this.tabRow.addTab(a);
          this.stack.add(b);
          this.tabRow.get_selected() != this.stack.get_numChildren() - 1 &&
            null != a &&
            b.set_visible(!1);
          this.layout();
        },
        onTab: function (a) {
          var b = this.tabRow.get_selected();
          -1 != b && this.stack.getChildAt(b).set_visible(!1);
          this.stack.getChildAt(a).set_visible(!0);
          this.tabRow.set_selected(a);
          this.change.dispatch(a);
        },
        getTab: function () {
          return this.tabRow.get_selected();
        },
        getTabCount: function () {
          return this.tabRow.get_size();
        },
        set_rowSize: function (a) {
          return (this.tabRow.rowSize = a);
        },
        __class__: Zg,
        __properties__: u(Nc.prototype.__properties__, {
          set_rowSize: 'set_rowSize',
        }),
      });
      var ud = function () {
        this._selected = -1;
        this.tabs = [];
        this.rowSize = 256;
        this.click = new tc();
        ha.call(this);
        this.bg = sb.light();
        this.add(this.bg);
      };
      g['com.watabou.coogee.ui.layouts._Tabs.TabButtons'] = ud;
      ud.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabButtons';
      ud.__super__ = ha;
      ud.prototype = u(ha.prototype, {
        get_selected: function () {
          return this._selected;
        },
        set_selected: function (a) {
          return (this._selected = a);
        },
        get_size: function () {
          return this.tabs.length;
        },
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        addTab: function (a) {
          a = new ch(a);
          a.click.add(l(this, this.onTab));
          this.tabs.push(a);
          return a;
        },
        onTab: function (a) {
          this.click.dispatch(this.tabs.indexOf(a));
        },
        __class__: ud,
        __properties__: u(ha.prototype.__properties__, {
          get_size: 'get_size',
          set_selected: 'set_selected',
          get_selected: 'get_selected',
        }),
      });
      var Ki = function () {
        this.first = 0;
        ud.call(this);
        this.stripe = new Oc();
        this.stripe.setMargins(0, 0);
        this.add(this.stripe);
        this.more = new Zd('...');
        this.more.click.add(l(this, this.showList));
        this.more.set_visible(!1);
        this.add(this.more);
      };
      g['com.watabou.coogee.ui.layouts._Tabs.TabRow'] = Ki;
      Ki.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabRow';
      Ki.__super__ = ud;
      Ki.prototype = u(ud.prototype, {
        layout: function () {
          ud.prototype.layout.call(this);
          this.more.set_height(this.rHeight - 8);
          this.more.set_x(this.rWidth - this.more.get_width());
          this.more.set_y(4);
        },
        addTab: function (a) {
          a = ud.prototype.addTab.call(this, a);
          this.stripe.add(a);
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (this.tabs.length > this.rowSize) {
            this.first > a
              ? (this.first = a)
              : a >= this.first + this.rowSize &&
                (this.first = a - this.rowSize + 1);
            for (var b = 0, c = this.tabs.length; b < c; )
              ((a = b++),
                this.tabs[a].set_visible(
                  a >= this.first && a < this.first + this.rowSize,
                ));
            this.stripe.set_x(-this.tabs[this.first].get_x());
          }
          -1 != this._selected && this.tabs[this._selected].set_selected(!0);
          return this.get_selected();
        },
        updateSize: function () {
          if (this.tabs.length <= this.rowSize)
            (this.more.set_visible(!1),
              (this.rWidth = this.stripe.get_width()));
          else {
            this.more.set_visible(!0);
            for (
              var a = (this.rWidth = 0),
                b = this.tabs.length - this.rowSize + 1;
              a < b;

            ) {
              for (var c = a++, d = 0, f = 0, h = this.rowSize; f < h; ) {
                var k = f++;
                d += this.tabs[c + k].get_width();
              }
              this.rWidth < d && (this.rWidth = d);
            }
            this.rWidth += 4 + this.more.get_width();
          }
          this.rHeight = this.stripe.get_height();
        },
        showList: function () {
          for (
            var a = this, b = new Yc(), c = 0, d = this.tabs.length;
            c < d;

          ) {
            var f = [c++];
            b.addItem(
              this.tabs[f[0]].get_text(),
              (function (b) {
                return function () {
                  a.click.dispatch(b[0]);
                };
              })(f),
              this.get_selected() == f[0],
            );
          }
          c = Ka.getRect(this.more);
          Ka.showMenuAt(b, Math.ceil(c.x), c.get_bottom());
        },
        __class__: Ki,
      });
      var bh = function () {
        ud.call(this);
        this.stripes = new Nc();
        this.stripes.setMargins(0, 0);
        this.add(this.stripes);
      };
      g['com.watabou.coogee.ui.layouts._Tabs.TabMultiRow'] = bh;
      bh.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabMultiRow';
      bh.__super__ = ud;
      bh.prototype = u(ud.prototype, {
        addTab: function (a) {
          a = ud.prototype.addTab.call(this, a);
          null == this.lastRow &&
            ((this.lastRow = new Oc()),
            this.lastRow.setMargins(0, 0),
            this.stripes.add(this.lastRow));
          this.lastRow.add(a);
          this.lastRow.get_numChildren() >= this.rowSize &&
            (this.lastRow = null);
          this.stripes.layout();
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (-1 != this._selected) {
            a = this.tabs[this._selected];
            a.set_selected(!0);
            for (
              var b = this.stripes.getChildAt(
                this.stripes.get_numChildren() - 1,
              );
              -1 == b.getChildIndex(a);

            )
              ((b = this.stripes.removeChildAt(0)), this.stripes.add(b));
          }
          return this.get_selected();
        },
        updateSize: function () {
          this.rWidth = this.stripes.get_width();
          this.rHeight = this.stripes.get_height();
        },
        __class__: bh,
      });
      var ch = function (a) {
        this.click = new tc();
        ha.call(this);
        this.bg = new fa();
        this.addChild(this.bg);
        this.tf = mc.get('', ia.format(ia.uiFont, ia.smallSize, ia.black));
        this.tf.set_x(4);
        this.tf.set_y(8);
        this.addChild(this.tf);
        this.set_text(a);
        this.set_selected(!1);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
      };
      g['com.watabou.coogee.ui.layouts.Tab'] = ch;
      ch.__name__ = 'com.watabou.coogee.ui.layouts.Tab';
      ch.__super__ = ha;
      ch.prototype = u(ha.prototype, {
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(ia.white);
          a.drawRoundRectComplex(
            0,
            4,
            this.rWidth,
            this.rHeight - 4,
            4,
            4,
            0,
            0,
          );
        },
        onClick: function (a) {
          this.click.dispatch(this);
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(
            this.tf.get_width() + 8,
            Math.ceil(this.tf.get_height() + 8),
          );
          return a;
        },
        set_selected: function (a) {
          this.mouseEnabled = !a;
          this.bg.set_alpha(a ? 1 : 0);
          return a;
        },
        __class__: ch,
        __properties__: u(ha.prototype.__properties__, {
          set_selected: 'set_selected',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var mc = function () {};
      g['com.watabou.coogee.ui.utils.Text'] = mc;
      mc.__name__ = 'com.watabou.coogee.ui.utils.Text';
      mc.get = function (a, b, c, d) {
        null == a && (a = '');
        var f = new Gc();
        null != c || null != d ? mc.activate(f, c, d) : f.set_selectable(!1);
        f.set_autoSize(1);
        null != b && f.set_defaultTextFormat(b);
        f.set_htmlText(a);
        return f;
      };
      mc.input = function (a, b, c) {
        null == a && (a = '');
        var d = new Gc();
        d.set_type(1);
        d.set_borderColor(d.get_defaultTextFormat().color);
        d.set_background(!0);
        d.set_border(!0);
        d.addEventListener('change', function (a) {
          null != c && c();
        });
        d.set_defaultTextFormat(b);
        d.set_text('' != a ? a : ' ');
        d.set_autoSize(1);
        d.set_height(d.get_height());
        d.set_autoSize(2);
        d.set_text(a);
        return d;
      };
      mc.format = function (a, b, c) {
        null == c && (c = 0);
        return new $d(Zb.exists(a) ? Zb.getFont(a).name : a, b, c);
      };
      mc.activate = function (a, b, c) {
        a.set_type(1);
        a.addEventListener('focusIn', function (b) {
          a.set_borderColor(a.get_defaultTextFormat().color);
          a.set_border(!0);
        });
        a.addEventListener('focusOut', function (b) {
          a.set_border(!1);
          null != c && c();
        });
        a.addEventListener('keyDown', function (b) {
          if (13 == b.keyCode || 27 == b.keyCode)
            (a.stage.set_focus(a.stage), b.stopPropagation());
        });
        a.addEventListener('change', function (a) {
          null != b && b();
        });
      };
      var La = function (a, b) {
        this.width = a;
        this.height = b;
        this.root = Y.createElement('svg');
        this.root.set('width', I.string(Math.round(1e3 * a) / 1e3));
        this.root.set('height', I.string(Math.round(1e3 * b) / 1e3));
        this.root.set('xmlns', 'http://www.w3.org/2000/svg');
      };
      g['com.watabou.formats.SVG'] = La;
      La.__name__ = 'com.watabou.formats.SVG';
      La.setOpacity = function (a, b) {
        a.set('opacity', null == b ? 'null' : '' + b);
        return a;
      };
      La.setFill = function (a, b, c) {
        null == c && (c = 1);
        a.set('fill', '#' + M.hex(b, 6));
        1 > c && a.set('fill-opacity', null == c ? 'null' : '' + c);
        return a;
      };
      La.noFill = function (a) {
        a.set('fill', 'none');
        return a;
      };
      La.fillRule = function (a, b) {
        a.set('fill-rule', b);
        return a;
      };
      La.setStroke = function (a, b, c, d, f) {
        null == c && (c = 0);
        a.set('stroke', '#' + M.hex(b, 6));
        0 != c && a.set('stroke-width', I.string(Math.round(1e3 * c) / 1e3));
        La.joinNcap(a, d, f);
        return a;
      };
      La.strokeOpacity = function (a, b) {
        a.set('stroke-opacity', null == b ? 'null' : '' + b);
        return a;
      };
      La.joinNcap = function (a, b, c) {
        null != b && a.set('stroke-linejoin', b);
        null != c && a.set('stroke-linecap', c);
        return a;
      };
      La.style = function (a, b) {
        a.set('style', b);
        return a;
      };
      La.addTransform = function (a, b) {
        var c = a.get('transform');
        a.set('transform', null == c ? b : '' + b + ' ' + c);
        return a;
      };
      La.translate = function (a, b, c) {
        return La.addTransform(
          a,
          'translate(' +
            I.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * c) / 1e3) +
            ')',
        );
      };
      La.scale = function (a, b, c) {
        return La.addTransform(
          a,
          'scale(' +
            I.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * c) / 1e3) +
            ')',
        );
      };
      La.rotate = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        return La.addTransform(
          a,
          'rotate(' +
            I.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * c) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * d) / 1e3) +
            ')',
        );
      };
      La.x = function (a, b) {
        a.set('x', I.string(Math.round(1e3 * b) / 1e3));
      };
      La.y = function (a, b) {
        a.set('y', I.string(Math.round(1e3 * b) / 1e3));
      };
      La.linearGradient = function (a, b, c) {
        null == b && (b = 'userSpaceOnUse');
        var d = Y.createElement('linearGradient');
        d.set('id', a);
        d.set('gradientUnits', b);
        null != c &&
          ((a = c.transformPoint(La._p0)),
          (c = c.transformPoint(La._p1)),
          d.set('x1', I.string(Math.round(1e3 * a.x) / 1e3)),
          d.set('y1', I.string(Math.round(1e3 * a.y) / 1e3)),
          d.set('x2', I.string(Math.round(1e3 * c.x) / 1e3)),
          d.set('y2', I.string(Math.round(1e3 * c.y) / 1e3)));
        return d;
      };
      La.radialGradient = function (a, b, c) {
        null == b && (b = 'userSpaceOnUse');
        var d = Y.createElement('radialGradient');
        d.set('id', a);
        d.set('gradientUnits', b);
        null != c &&
          (d.set('cx', I.string(Math.round(1e3 * c.tx) / 1e3)),
          d.set('cy', I.string(Math.round(1e3 * c.ty) / 1e3)),
          d.set('r', I.string(Math.round(819200 * c.a) / 1e3)));
        return d;
      };
      La.stop = function (a, b, c) {
        null == c && (c = 1);
        var d = Y.createElement('stop');
        d.set('offset', Math.round(100 * a) + '%');
        d.set('stop-color', '#' + M.hex(b, 6));
        1 > c && d.set('stop-opacity', null == c ? 'null' : '' + c);
        return d;
      };
      La.group = function (a) {
        var b = Y.createElement('g');
        null != a && b.set('id', a);
        return b;
      };
      La.clipPath = function (a) {
        var b = Y.createElement('clipPath');
        b.set('id', a);
        La.setFill(b, 16777215);
        return b;
      };
      La.text = function (a, b, c) {
        var d = Y.createElement('text');
        a = Y.createPCData(a);
        d.addChild(a);
        null != b && d.set('text-anchor', b);
        null != c && d.set('dominant-baseline', c);
        return d;
      };
      La.tspan = function (a) {
        var b = Y.createElement('tspan');
        a = Y.createPCData(a);
        b.addChild(a);
        return b;
      };
      La.rect = function (a, b, c, d) {
        var f = Y.createElement('rect');
        f.set('x', I.string(Math.round(1e3 * a) / 1e3));
        f.set('y', I.string(Math.round(1e3 * b) / 1e3));
        f.set('width', I.string(Math.round(1e3 * c) / 1e3));
        f.set('height', I.string(Math.round(1e3 * d) / 1e3));
        return f;
      };
      La.prototype = { __class__: La };
      var Vb = function () {
        this.buff = new z();
      };
      g['com.watabou.formats.SVGPath'] = Vb;
      Vb.__name__ = 'com.watabou.formats.SVGPath';
      Vb.prototype = {
        xml: function () {
          var a = Y.createElement('path');
          a.set('d', this.buff.b);
          return a;
        },
        __class__: Vb,
      };
      var Ma = function () {};
      g['com.watabou.formats.Sprite2SVG'] = Ma;
      Ma.__name__ = 'com.watabou.formats.Sprite2SVG';
      Ma.create = function (a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = -1);
        d && (Ma.resetGradients(), Ma.resetImports());
        d = new La(a, b);
        Ma.defaultAttributes(d.root);
        -1 != c &&
          ((a = La.rect(0, 0, a, b)), La.setFill(a, c), d.root.addChild(a));
        return d;
      };
      Ma.defaultAttributes = function (a) {
        La.joinNcap(a, 'round', 'round');
        La.fillRule(a, 'evenodd');
        La.noFill(a);
      };
      Ma.drawSprite = function (a) {
        var b = a.__isMask ? La.clipPath(a.get_name()) : La.group();
        Ma.copyAttributes(a, b);
        Ma.drawGraphics(a.get_graphics(), b);
        Ma.drawChildren(a, b);
        return b;
      };
      Ma.drawShape = function (a) {
        var b = a.__isMask ? La.clipPath(a.get_name()) : La.group();
        Ma.copyAttributes(a, b);
        Ma.drawGraphics(a.get_graphics(), b);
        return b;
      };
      Ma.copyAttributes = function (a, b) {
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          La.scale(b, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && La.rotate(b, a.get_rotation());
        (0 == a.get_x() && 0 == a.get_y()) ||
          La.translate(b, a.get_x(), a.get_y());
        1 > a.get_alpha() && La.setOpacity(b, a.get_alpha());
        if (10 != a.get_blendMode()) {
          var c = Ma.BLEND_MODES,
            d = a.get_blendMode();
          La.style(b, 'mix-blend-mode: ' + c.h[d]);
        }
        null != a.get_mask() &&
          b.set('clip-path', 'url(#' + a.get_mask().get_name() + ')');
      };
      Ma.drawGraphics = function (a, b) {
        var c = !1,
          d = 0,
          f = 1,
          h = 1,
          k = 2,
          v = 1,
          p = !1,
          g = 0,
          t = 1,
          m = null;
        for (a = a.readGraphicsData(!1).iterator(); a.hasNext(); ) {
          var n = a.next();
          switch (n.__graphicsDataType) {
            case 0:
              c = n;
              f = c.thickness;
              h = c.fill;
              d = h.color;
              h = h.alpha;
              k = c.joints;
              v = c.caps;
              c = !0;
              break;
            case 1:
              m = null;
              p = n;
              g = p.color;
              t = p.alpha;
              p = !0;
              break;
            case 2:
              m = n;
              Ma.gradients.push(m);
              p = !0;
              break;
            case 3:
              n = Ma.drawPath(n.commands, n.data, n.winding);
              p &&
                (null == m
                  ? La.setFill(n, g, t)
                  : n.set('fill', 'url(#grad' + Ma.gradients.length + ')'));
              c &&
                (La.setStroke(n, d, f),
                (2 == k && 1 == v) ||
                  La.joinNcap(n, Ma.JOINTS.h[k], Ma.CAPS.h[v]),
                1 > h && La.strokeOpacity(n, h));
              b.addChild(n);
              break;
            case 5:
              ((p = c = !1), (m = null));
          }
        }
      };
      Ma.drawPath = function (a, b, c) {
        c = new Vb();
        var d = 0;
        a = a.iterator();
        a: for (; a.hasNext(); )
          switch (a.next()) {
            case 1:
              var f = b.get(d),
                h = (Vb.ly = b.get(d + 1));
              c.buff.b += I.string(
                ' M ' +
                  (I.string(Math.round(1e3 * (Vb.lx = f)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * h) / 1e3)),
              );
              d += 2;
              break;
            case 2:
              f = b.get(d);
              h = b.get(d + 1);
              if (0 == c.buff.b.length) {
                var k = (Vb.ly = Vb.ly);
                c.buff.b += I.string(
                  ' M ' +
                    (I.string(Math.round(1e3 * (Vb.lx = Vb.lx)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * k) / 1e3)),
                );
              }
              h = Vb.ly = h;
              c.buff.b += I.string(
                ' L ' +
                  (I.string(Math.round(1e3 * (Vb.lx = f)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * h) / 1e3)),
              );
              d += 2;
              break;
            case 3:
              k = b.get(d);
              var v = b.get(d + 1);
              f = b.get(d + 2);
              h = b.get(d + 3);
              if (0 == c.buff.b.length) {
                var p = (Vb.ly = Vb.ly);
                c.buff.b += I.string(
                  ' M ' +
                    (I.string(Math.round(1e3 * (Vb.lx = Vb.lx)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * p) / 1e3)),
                );
              }
              k =
                'Q ' +
                (I.string(Math.round(1e3 * k) / 1e3) +
                  ',' +
                  I.string(Math.round(1e3 * v) / 1e3)) +
                ' ';
              h = Vb.ly = h;
              c.buff.b += I.string(
                ' ' +
                  (k +
                    (I.string(Math.round(1e3 * (Vb.lx = f)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * h) / 1e3))),
              );
              d += 4;
              break;
            case 4:
              a = b.get(d + 2);
              b = Vb.ly = b.get(d + 3);
              c.buff.b += I.string(
                ' M ' +
                  (I.string(Math.round(1e3 * (Vb.lx = a)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 5:
              a = b.get(d + 2);
              b = b.get(d + 3);
              0 == c.buff.b.length &&
                ((d = Vb.ly = Vb.ly),
                (c.buff.b += I.string(
                  ' M ' +
                    (I.string(Math.round(1e3 * (Vb.lx = Vb.lx)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * d) / 1e3)),
                )));
              b = Vb.ly = b;
              c.buff.b += I.string(
                ' L ' +
                  (I.string(Math.round(1e3 * (Vb.lx = a)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 6:
              f = b.get(d);
              h = b.get(d + 1);
              k = b.get(d + 2);
              v = b.get(d + 3);
              p = b.get(d + 4);
              var g = b.get(d + 5);
              c.buff.b += I.string(
                ' C ' + (f + ',' + h + ' ' + k + ',' + v + ' ' + p + ',' + g),
              );
              d += 6;
          }
        return c.xml();
      };
      Ma.drawChildren = function (a, b) {
        for (var c = 0, d = a.get_numChildren(); c < d; ) {
          var f = c++;
          f = a.getChildAt(f);
          if (f.get_visible()) {
            var h = null;
            null != Ma.handleObject && (h = Ma.handleObject(f));
            null == h &&
              (f instanceof fa
                ? (h = Ma.drawSprite(f))
                : f instanceof ve
                  ? (h = Ma.drawShape(f))
                  : f instanceof Gc && (h = Ma.drawText(f)));
            if (null != h) {
              for (var k = 0, v = f.get_filters(); k < v.length; ) {
                var p = v[k];
                ++k;
                Ma.handleFilter(f, p, h, b);
              }
              b.addChild(h);
            }
          }
        }
      };
      Ma.drawText = function (a) {
        var b = a.get_defaultTextFormat(),
          c = 1 < a.get_numLines(),
          d = La.text(c ? '' : a.get_text(), null, 'text-before-edge');
        La.style(d, Ma.svgFont(b));
        La.setFill(d, b.color);
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          La.scale(d, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && La.rotate(d, a.get_rotation());
        1 > a.get_alpha() && La.setOpacity(d, a.get_alpha());
        if (c)
          for (
            La.translate(d, a.get_x(), a.get_y()), b = 0, c = a.get_numLines();
            b < c;

          ) {
            var f = b++,
              h = La.tspan(a.getLineText(f));
            f = a.getCharBoundaries(a.getLineOffset(f));
            La.x(h, f.x);
            La.y(h, f.y);
            d.addChild(h);
          }
        else
          ((f = a.getCharBoundaries(a.getLineOffset(0))),
            La.translate(
              d,
              a.get_x() + f.x * a.get_scaleX(),
              a.get_y() + f.y * a.get_scaleY(),
            ));
        return d;
      };
      Ma.substituteGenerics = function (a) {
        switch (a) {
          case '_sans':
            return 'sans-serif';
          case '_serif':
            return 'serif';
          case '_typewriter':
            return 'monospace';
          default:
            return a;
        }
      };
      Ma.svgFont = function (a) {
        var b = Ma.substituteFont(a.font),
          c = 'font: ';
        a.bold && (c += 'bold ');
        a.italic && (c += 'italic ');
        c += '' + a.size + 'px ' + b;
        0 != a.letterSpacing &&
          (c += '; letter-spacing: ' + a.letterSpacing + 'px');
        return c;
      };
      Ma.resetGradients = function () {
        Ma.gradients = [];
      };
      Ma.getGradients = function () {
        for (
          var a = Y.createElement('defs'), b = 0, c = Ma.gradients.length;
          b < c;

        ) {
          var d = b++,
            f = 'grad' + (d + 1);
          d = Ma.gradients[d];
          if (0 == d.type) {
            f = La.linearGradient(f, null, d.matrix);
            for (var h = 0, k = d.colors.length; h < k; ) {
              var v = h++;
              f.addChild(La.stop(d.ratios[v] / 255, d.colors[v], d.alphas[v]));
            }
            a.addChild(f);
          } else {
            f = La.radialGradient(f, null, d.matrix);
            h = 0;
            for (k = d.colors.length; h < k; )
              ((v = h++),
                f.addChild(
                  La.stop(d.ratios[v] / 255, d.colors[v], d.alphas[v]),
                ));
            a.addChild(f);
          }
        }
        return a;
      };
      Ma.resetImports = function () {
        Ma.imports = [];
      };
      Ma.addImport = function (a) {
        -1 == Ma.imports.indexOf(a) && Ma.imports.push(a);
      };
      Ma.getImports = function () {
        for (
          var a = Y.createElement('style'), b = '', c = 0, d = Ma.imports;
          c < d.length;

        ) {
          var f = d[c];
          ++c;
          b += I.string('@import url("' + f + '");');
        }
        a.addChild(Y.createCData(b));
        return a;
      };
      Ma.handleFilter = function (a, b, c, d) {
        if (b instanceof Qc) {
          for (var f = 1; null != a.parent; )
            ((f *= a.get_scaleX()), (a = a.parent));
          f = a.get_scaleX();
          a = Y.parse(Ke.print(c)).firstElement();
          La.setStroke(a, b.get_color(), (2 * b.get_blurX()) / f);
          1 > b.get_alpha() && La.strokeOpacity(a, b.get_alpha());
          d.addChild(a);
        }
      };
      var Id = function () {};
      g['com.watabou.geom.Chaikin'] = Id;
      Id.__name__ = 'com.watabou.geom.Chaikin';
      Id.render = function (a, b, c, d) {
        null == c && (c = 1);
        for (var f = 0; f < c; ) {
          f++;
          for (var h = [], k = a.length, v = 1, p = k - 1; v < p; ) {
            var g = v++,
              t = a[g];
            null == d || -1 == d.indexOf(t)
              ? (h.push(cb.lerp(t, a[g - 1], 0.25)),
                h.push(cb.lerp(t, a[g + 1], 0.25)))
              : h.push(t);
          }
          b
            ? ((v = a[k - 1]),
              null == d || -1 == d.indexOf(v)
                ? (h.push(cb.lerp(v, a[k - 2], 0.25)),
                  h.push(cb.lerp(v, a[0], 0.25)))
                : h.push(v),
              (v = a[0]),
              null == d || -1 == d.indexOf(v)
                ? (h.push(cb.lerp(v, a[k - 1], 0.25)),
                  h.push(cb.lerp(v, a[1], 0.25)))
                : h.push(v))
            : (h.unshift(a[0]), h.push(a[k - 1]));
          a = h;
        }
        return a;
      };
      var Sa = function () {};
      g['com.watabou.geom.Color'] = Sa;
      Sa.__name__ = 'com.watabou.geom.Color';
      Sa.rgbf = function (a, b, c) {
        return (((255 * a) | 0) << 16) | (((255 * b) | 0) << 8) | (255 * c) | 0;
      };
      Sa.rgbfSafe = function (a, b, c) {
        return (
          ((zc.gate(255 * a, 0, 255) | 0) << 16) |
          ((zc.gate(255 * b, 0, 255) | 0) << 8) |
          zc.gate(255 * c, 0, 255) |
          0
        );
      };
      Sa.lerp = function (a, b, c) {
        null == c && (c = 0.5);
        var d = (a >>> 8) & 255,
          f = a & 255,
          h = b >>> 16,
          k = (b >>> 8) & 255;
        b &= 255;
        var v = 1 - c;
        return (
          (((oa.toFloat(a >>> 16) * v + oa.toFloat(h) * c) | 0) << 16) |
          (((oa.toFloat(d) * v + oa.toFloat(k) * c) | 0) << 8) |
          (oa.toFloat(f) * v + oa.toFloat(b) * c) |
          0
        );
      };
      Sa.lerpf = function (a, b, c) {
        null == c && (c = 0.5);
        var d = (a >>> 8) & 255,
          f = a & 255,
          h = b >>> 16,
          k = (b >>> 8) & 255;
        b &= 255;
        c /= 255;
        var v = 0.00392156862745098 - c;
        return Sa.rgbfSafe(
          oa.toFloat(a >>> 16) * v + oa.toFloat(h) * c,
          oa.toFloat(d) * v + oa.toFloat(k) * c,
          oa.toFloat(f) * v + oa.toFloat(b) * c,
        );
      };
      Sa.lerpHSV = function (a, b, c) {
        null == c && (c = 0.5);
        a = Sa.rgb2hsv(a);
        b = Sa.rgb2hsv(b);
        var d = 0 == a.y ? b.x : 0 == b.y ? a.x : Sa.lerpHue(a.x, b.x, c),
          f = 1 - c;
        return Sa.hsv(d, a.y * f + b.y * c, a.z * f + b.z * c);
      };
      Sa.lerpHue = function (a, b, c) {
        null == c && (c = 0.5);
        a -= 360 * Math.floor(a / 360);
        b -= 360 * Math.floor(a / 360);
        if (a > b) {
          var d = a;
          a = b;
          b = d;
          c = 1 - c;
        }
        180 < b - a && (b -= 360);
        return a * (1 - c) + b * c;
      };
      Sa.scale = function (a, b) {
        return Sa.rgbfSafe(
          (oa.toFloat(a >>> 16) / oa.toFloat(255)) * b,
          (oa.toFloat((a >>> 8) & 255) / oa.toFloat(255)) * b,
          (oa.toFloat(a & 255) / oa.toFloat(255)) * b,
        );
      };
      Sa.multiply = function (a, b) {
        return Sa.rgbf(
          (oa.toFloat(a >>> 16) / oa.toFloat(255)) *
            (oa.toFloat(b >>> 16) / oa.toFloat(255)),
          (oa.toFloat((a >>> 8) & 255) / oa.toFloat(255)) *
            (oa.toFloat((b >>> 8) & 255) / oa.toFloat(255)),
          (oa.toFloat(a & 255) / oa.toFloat(255)) *
            (oa.toFloat(b & 255) / oa.toFloat(255)),
        );
      };
      Sa.hsv = function (a, b, c) {
        var d = function (a) {
            a -= 360 * Math.floor(a / 360);
            return zc.gate(Math.abs(a / 60 - 3) - 1, 0, 1);
          },
          f = d(a),
          h = d(a - 120);
        a = d(a + 120);
        return Sa.rgbfSafe(
          (f * b + 1 - b) * c,
          (h * b + 1 - b) * c,
          (a * b + 1 - b) * c,
        );
      };
      Sa.hsl = function (a, b, c) {
        a *= Math.PI / 180;
        return Sa.rgbfSafe(
          ((Math.cos(a) / 2 + 0.5) * b + 1 - b) * c,
          ((Math.cos(a - (2 * Math.PI) / 3) / 2 + 0.5) * b + 1 - b) * c,
          ((Math.cos(a + (2 * Math.PI) / 3) / 2 + 0.5) * b + 1 - b) * c,
        );
      };
      Sa.rgb2hsv = function (a) {
        var b = oa.toFloat(a >>> 16) / oa.toFloat(255),
          c = oa.toFloat((a >>> 8) & 255) / oa.toFloat(255);
        a = oa.toFloat(a & 255) / oa.toFloat(255);
        var d = Math.min(b, Math.min(c, a)),
          f = Math.max(b, Math.max(c, a));
        return d == f
          ? new dh(0, 0, d)
          : new dh(
              60 *
                ((b == d ? 3 : a == d ? 1 : 5) -
                  (b == d ? c - a : a == d ? b - c : a - b) / (f - d)),
              (f - d) / f,
              f,
            );
      };
      Sa.brightness = function (a) {
        var b = oa.toFloat(a >>> 16) / oa.toFloat(255),
          c = oa.toFloat((a >>> 8) & 255) / oa.toFloat(255);
        a = oa.toFloat(a & 255) / oa.toFloat(255);
        return Math.sqrt(0.299 * b * b + 0.587 * c * c + 0.114 * a * a);
      };
      var me = function () {};
      g['com.watabou.geom.Cubic'] = me;
      me.__name__ = 'com.watabou.geom.Cubic';
      me.smoothOpen = function (a, b) {
        null == b && (b = 4);
        var c = function (a, b, c) {
            a = b.subtract(a);
            b = c.subtract(b);
            var d = a.get_length() * b.get_length(),
              f = (a.x * b.y - a.y * b.x) / d;
            a = (a.x * b.x + a.y * b.y) / d;
            return c.add(new K(b.x * a - b.y * f, b.y * a + b.x * f));
          },
          d = a.length;
        if (2 >= d) return a;
        var f = c(a[2], a[1], a[0]);
        c = c(a[d - 3], a[d - 2], a[d - 1]);
        a = a.slice();
        a.unshift(f);
        a.push(c);
        f = [];
        c = 1;
        for (var h = a.length - 2; c < h; ) {
          var k = c++,
            v = a[k],
            p = a[k + 1],
            g = a[k + 2],
            t = v,
            m = p;
          k = v.subtract(a[k - 1]);
          k.normalize(1);
          v = p.subtract(v);
          v.normalize(1);
          p = g.subtract(p);
          p.normalize(1);
          g = k.add(v);
          g.normalize(1);
          p = v.add(p);
          p.normalize(1);
          k = K.distance(t, m);
          v = 1 / (1 + (g.x * v.x + g.y * v.y) + (p.x * v.x + p.y * v.y));
          var n = k * v;
          g = new K(t.x + g.x * n, t.y + g.y * n);
          v *= -k;
          v = new K(m.x + p.x * v, m.y + p.y * v);
          f.push(t);
          f.push(g);
          f.push(v);
          f.push(m);
        }
        b = me.build(f, b);
        b.push(a[d].clone());
        return b;
      };
      me.build = function (a, b) {
        null == b && (b = 4);
        var c = a.length,
          d = [],
          f = 0;
        do {
          var h = a[f++],
            k = a[f++],
            v = a[f++],
            p = a[f++];
          d.push(h.clone());
          for (var g = 1, t = b; g < t; ) {
            var m = g++;
            d.push(me.cubic(h, k, v, p, m / b));
          }
        } while (f < c);
        return d;
      };
      me.cubic = function (a, b, c, d, f) {
        var h = 1 - f,
          k = h * h * h;
        a = new K(a.x * k, a.y * k);
        k = 3 * h * h * f;
        a.x += b.x * k;
        a.y += b.y * k;
        k = 3 * h * f * f;
        a.x += c.x * k;
        a.y += c.y * k;
        k = f * f * f;
        a.x += d.x * k;
        a.y += d.y * k;
        return a;
      };
      var yc = function (a, b) {
        this.vertices = new na();
        this.edges = [];
        this.faces = [];
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          for (var f = [], h = 0; h < d.length; ) {
            var k = d[h];
            ++h;
            k = new Li(this.addVertex(k));
            this.edges.push(k);
            f.push(k);
          }
          h = new Mi(f[0]);
          this.faces.push(h);
          var v = d.length;
          d = 0;
          for (var p = v; d < p; ) {
            k = d++;
            var g = f[k];
            g.next = f[(k + 1) % v];
            g.face = h;
          }
        }
        c = 0;
        for (h = this.edges; c < h.length; )
          if (((a = h[c]), ++c, null == a.twin))
            for (f = a.origin, k = a.next.origin.edges, d = 0; d < k.length; )
              if (((v = k[d]), ++d, v.next.origin == f)) {
                a.twin = v;
                v.twin = a;
                break;
              }
        if (null != b)
          for (c = 0, h = this.faces.length; c < h; )
            ((k = c++), (this.faces[k].data = b[k]));
      };
      g['com.watabou.geom.DCEL'] = yc;
      yc.__name__ = 'com.watabou.geom.DCEL';
      yc.floodFill = function (a, b) {
        var c = [];
        a = [a];
        var d = new na();
        for (
          null == b &&
          (b = function (a) {
            return !0;
          });
          0 < a.length;

        ) {
          var f = a.pop();
          if (b(f)) {
            c.push(f);
            for (var h = f.halfEdge, k = h, v = !0; v; ) {
              var p = k;
              k = k.next;
              v = k != h;
              null != p.twin &&
                ((p = p.twin.face),
                null == d.h.__keys__[p.__id__] && ua.add(a, p));
            }
          }
          d.set(f, !0);
        }
        return c;
      };
      yc.shrink = function (a) {
        for (var b = [], c = gd.fromArray(a), d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          var h = !0,
            k = f.halfEdge;
          do {
            if (null == k.twin || null == c.h.__keys__[k.twin.face.__id__]) {
              h = !1;
              break;
            }
            k = k.next;
          } while (k != f.halfEdge);
          h && b.push(f);
        }
        return b;
      };
      yc.circumference = function (a, b) {
        var c = gd.fromArray(b);
        if (null == a)
          for (var d = Infinity, f = 0; f < b.length; ) {
            var h = b[f];
            ++f;
            for (var k = (h = h.halfEdge), v = !0; v; ) {
              var p = k;
              k = k.next;
              v = k != h;
              var g = p;
              if (null == g.twin || null == c.h.__keys__[g.twin.face.__id__])
                ((p = g.origin.point.x), d > p && ((d = p), (a = g)));
            }
          }
        p = [];
        g = a;
        do
          for (
            p.push(g), g = g.next;
            null != g.twin && null != c.h.__keys__[g.twin.face.__id__];

          )
            g = g.twin.next;
        while (g != a);
        return p;
      };
      yc.outline = function (a) {
        for (var b = gd.fromArray(a), c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          for (var h = (f = f.halfEdge), k = !0; k; ) {
            var v = h;
            h = h.next;
            k = h != f;
            (null != v.twin && null != b.h.__keys__[v.twin.face.__id__]) ||
              c.push(v);
          }
        }
        b = null;
        for (d = []; !ua.isEmpty(c); )
          ((f = yc.circumference(c[0], a)),
            ua.removeAll(c, f),
            0 < Hd.area(Me.toPoly(f)) ? (b = f) : d.push(f));
        d.unshift(b);
        return d;
      };
      yc.outlineEx = function (a, b) {
        for (var c = [], d = gd.fromArray(a), f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          for (var k = h.halfEdge, v = k, p = !0; p; )
            ((h = v),
              (v = v.next),
              (p = v != k),
              (null == h.twin ||
                null == d.h.__keys__[h.twin.face.__id__] ||
                (null != b && !b(h))) &&
                c.push(h));
        }
        for (a = []; !ua.isEmpty(c); ) {
          b = [];
          h = d = c[0];
          do for (b.push(h), h = h.next; -1 == c.indexOf(h); ) h = h.twin.next;
          while (h != d);
          ua.removeAll(c, b);
          a.push(b);
        }
        return a;
      };
      yc.prototype = {
        addVertex: function (a) {
          var b = this.vertices.h[a.__id__];
          if (null == b) {
            b = this.vertices;
            var c = new Ni(a);
            b.set(a, c);
            return c;
          }
          return b;
        },
        __class__: yc,
      };
      var Li = function (a) {
        this.origin = a;
        a.edges.push(this);
      };
      g['com.watabou.geom.HalfEdge'] = Li;
      Li.__name__ = 'com.watabou.geom.HalfEdge';
      Li.prototype = { __class__: Li };
      var Ni = function (a) {
        this.edges = [];
        this.point = a;
      };
      g['com.watabou.geom.Vertex'] = Ni;
      Ni.__name__ = 'com.watabou.geom.Vertex';
      Ni.prototype = { __class__: Ni };
      var Mi = function (a) {
        this.halfEdge = a;
      };
      g['com.watabou.geom.Face'] = Mi;
      Mi.__name__ = 'com.watabou.geom.Face';
      Mi.prototype = {
        getNeighbours: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            null != f.twin && a.push(f.twin.face);
          }
          return a;
        },
        getPoly: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            a.push(f.origin.point);
          }
          return a;
        },
        findEdge: function (a) {
          for (var b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            if (null != f.twin && f.twin.face == a) return f;
          }
          return null;
        },
        __class__: Mi,
      };
      var Fb = function (a) {
        this.points = a;
        a = a.length;
        var b = 2 * a - 5,
          c = 3 * b,
          d = null,
          f = null,
          h = null,
          k = null,
          v = null;
        this.triangles = c =
          null != c
            ? new Uint32Array(c)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == v
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, v)
                    : null;
        c = 3 * b;
        v = k = h = f = d = null;
        this.halfedges = c =
          null != c
            ? new Int32Array(c)
            : null != d
              ? new Int32Array(d)
              : null != f
                ? new Int32Array(f.__array)
                : null != h
                  ? new Int32Array(h)
                  : null != k
                    ? null == v
                      ? new Int32Array(k, 0)
                      : new Int32Array(k, 0, v)
                    : null;
        this.hashSize = Math.ceil(Math.sqrt(a));
        v = k = h = f = d = null;
        this.hullPrev = c =
          null != a
            ? new Uint32Array(a)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == v
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, v)
                    : null;
        v = k = h = f = d = null;
        this.hullNext = c =
          null != a
            ? new Uint32Array(a)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == v
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, v)
                    : null;
        v = k = h = f = d = null;
        this.hullTri = c =
          null != a
            ? new Uint32Array(a)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == v
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, v)
                    : null;
        c = this.hashSize;
        v = k = h = f = d = null;
        this.hullHash = c =
          null != c
            ? new Int32Array(c)
            : null != d
              ? new Int32Array(d)
              : null != f
                ? new Int32Array(f.__array)
                : null != h
                  ? new Int32Array(h)
                  : null != k
                    ? null == v
                      ? new Int32Array(k, 0)
                      : new Int32Array(k, 0, v)
                    : null;
        this.update();
      };
      g['com.watabou.geom.Delaunator'] = Fb;
      Fb.__name__ = 'com.watabou.geom.Delaunator';
      Fb.pseudoAngle = function (a, b) {
        a /= Math.abs(a) + Math.abs(b);
        return (0 < b ? 3 - a : 1 + a) / 4;
      };
      Fb.dist = function (a, b, c, d) {
        a -= c;
        b -= d;
        return a * a + b * b;
      };
      Fb.orientIfSure = function (a, b, c, d, f, h) {
        d = (d - b) * (f - a);
        a = (c - a) * (h - b);
        return Math.abs(d - a) >= 3.3306690738754716e-16 * Math.abs(d + a)
          ? d - a
          : 0;
      };
      Fb.orient = function (a, b, c, d, f, h) {
        var k = Fb.orientIfSure(a, b, c, d, f, h);
        if (0 != k) return 0 > k;
        k = Fb.orientIfSure(c, d, f, h, a, b);
        if (0 != k) return 0 > k;
        k = Fb.orientIfSure(f, h, a, b, c, d);
        return 0 != k ? 0 > k : !1;
      };
      Fb.inCircle = function (a, b, c, d, f, h, k, v) {
        a -= k;
        b -= v;
        c -= k;
        d -= v;
        f -= k;
        h -= v;
        v = c * c + d * d;
        k = f * f + h * h;
        return (
          0 >
          a * (d * k - v * h) -
            b * (c * k - v * f) +
            (a * a + b * b) * (c * h - d * f)
        );
      };
      Fb.circumradius2 = function (a, b, c, d, f, h) {
        c -= a;
        d -= b;
        a = f - a;
        var k = h - b;
        b = c * c + d * d;
        h = a * a + k * k;
        f = 0.5 / (c * k - d * a);
        d = (k * b - d * h) * f;
        c = (c * h - a * b) * f;
        return d * d + c * c;
      };
      Fb.circumcenter = function (a, b, c, d, f, h) {
        c -= a;
        d -= b;
        f -= a;
        h -= b;
        var k = c * c + d * d,
          v = f * f + h * h,
          p = 0.5 / (c * h - d * f);
        return new K(a + (h * k - d * v) * p, b + (c * v - f * k) * p);
      };
      Fb.triCircumcenter = function (a, b, c) {
        var d = a.x * a.x + a.y * a.y,
          f = b.x * b.x + b.y * b.y,
          h = c.x * c.x + c.y * c.y,
          k = 2 * (a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y));
        return new K(
          (1 / k) * (d * (b.y - c.y) + f * (c.y - a.y) + h * (a.y - b.y)),
          (1 / k) * (d * (c.x - b.x) + f * (a.x - c.x) + h * (b.x - a.x)),
        );
      };
      Fb.prototype = {
        update: function () {
          for (
            var a = Infinity,
              b = Infinity,
              c = -Infinity,
              d = -Infinity,
              f = 0,
              h = this.points;
            f < h.length;

          ) {
            var k = h[f];
            ++f;
            k.x < a && (a = k.x);
            k.y < b && (b = k.y);
            k.x > c && (c = k.x);
            k.y > d && (d = k.y);
          }
          c = (a + c) / 2;
          var v = (b + d) / 2;
          a = d = b = null;
          var p = Infinity;
          f = 0;
          for (h = this.points; f < h.length; ) {
            k = h[f];
            ++f;
            var g = Fb.dist(k.x, k.y, c, v);
            p > g && ((p = g), (b = k));
          }
          p = Infinity;
          f = 0;
          for (h = this.points; f < h.length; )
            ((k = h[f]),
              ++f,
              k != b &&
                ((g = Fb.dist(k.x, k.y, b.x, b.y)),
                p > g && ((p = g), (d = k))));
          c = Infinity;
          f = 0;
          for (h = this.points; f < h.length; )
            ((k = h[f]),
              ++f,
              k != b &&
                k != d &&
                ((v = Fb.circumradius2(b.x, b.y, d.x, d.y, k.x, k.y)),
                c > v && ((c = v), (a = k))));
          if (Fb.orient(b.x, b.y, d.x, d.y, a.x, a.y)) {
            var t = d;
            d = a;
            a = t;
          }
          this.center = Fb.circumcenter(b.x, b.y, d.x, d.y, a.x, a.y);
          f = [];
          h = 0;
          for (g = this.points.length; h < g; ) ((c = h++), f.push(c));
          v = f;
          f = [];
          h = 0;
          for (g = this.points; h < g.length; )
            ((k = g[h]), ++h, f.push(K.distance(k, this.center)));
          var m = f;
          v.sort(function (a, b) {
            a = m[a] - m[b];
            return 0 == a ? 0 : 0 > a ? -1 : 1;
          });
          f = [];
          h = 0;
          for (g = this.points.length; h < g; )
            ((c = h++), f.push(this.points[v[c]]));
          this.points = f;
          k = this.points.indexOf(b);
          p = this.points.indexOf(d);
          g = this.points.indexOf(a);
          this.hullStart = k;
          v = this.hullPrev[g] = p;
          this.hullNext[k] = v;
          v = this.hullPrev[k] = g;
          this.hullNext[p] = v;
          v = this.hullPrev[p] = k;
          this.hullNext[g] = v;
          this.hullTri[k] = 0;
          this.hullTri[p] = 1;
          this.hullTri[g] = 2;
          f = 0;
          for (h = this.hashSize; f < h; ) ((c = f++), (this.hullHash[c] = -1));
          this.hullHash[this.hashKey(b)] = k;
          this.hullHash[this.hashKey(d)] = p;
          this.hullHash[this.hashKey(a)] = g;
          this.trianglesLen = 0;
          this.addTriangle(k, p, g, -1, -1, -1);
          f = 0;
          for (h = this.points; f < h.length; )
            if (
              ((k = h[f]),
              ++f,
              k != b &&
                k != d &&
                k != a &&
                ((v = k.x),
                (p = k.y),
                !(
                  Math.abs(v - Infinity) <= Fb.EPSILON &&
                  Math.abs(p - -Infinity) <= Fb.EPSILON
                )))
            ) {
              c = this.points.indexOf(k);
              var n = -1;
              k = this.hashKey(k);
              g = 0;
              for (
                t = this.hashSize;
                g < t &&
                ((n = g++),
                (n = this.hullHash[(k + n) % this.hashSize]),
                -1 == n || n == this.hullNext[n]);

              );
              var x = this.hullPrev[n];
              g = x;
              for (
                n = this.hullNext[g];
                !Fb.orient(
                  v,
                  p,
                  this.points[g].x,
                  this.points[g].y,
                  this.points[n].x,
                  this.points[n].y,
                );

              ) {
                g = n;
                if (g == x) {
                  g = -1;
                  break;
                }
                n = this.hullNext[g];
              }
              if (-1 != g) {
                t = this.addTriangle(
                  g,
                  c,
                  this.hullNext[g],
                  -1,
                  -1,
                  this.hullTri[g],
                );
                this.hullTri[c] = this.legalize(t + 2);
                this.hullTri[g] = t;
                n = this.hullNext[g];
                for (
                  var q = this.hullNext[n];
                  Fb.orient(
                    v,
                    p,
                    this.points[n].x,
                    this.points[n].y,
                    this.points[q].x,
                    this.points[q].y,
                  );

                )
                  ((t = this.addTriangle(
                    n,
                    c,
                    q,
                    this.hullTri[c],
                    -1,
                    this.hullTri[n],
                  )),
                    (this.hullTri[c] = this.legalize(t + 2)),
                    (this.hullNext[n] = n),
                    (n = q),
                    (q = this.hullNext[n]));
                if (g == x)
                  for (
                    x = this.hullPrev[g];
                    Fb.orient(
                      v,
                      p,
                      this.points[x].x,
                      this.points[x].y,
                      this.points[g].x,
                      this.points[g].y,
                    );

                  )
                    ((t = this.addTriangle(
                      x,
                      c,
                      g,
                      -1,
                      this.hullTri[g],
                      this.hullTri[x],
                    )),
                      this.legalize(t + 2),
                      (this.hullTri[x] = t),
                      (this.hullNext[g] = g),
                      (g = x),
                      (x = this.hullPrev[g]));
                this.hullStart = this.hullPrev[c] = g;
                v = this.hullPrev[n] = c;
                this.hullNext[g] = v;
                this.hullNext[c] = n;
                this.hullHash[k] = c;
                this.hullHash[this.hashKey(this.points[g])] = g;
              }
            }
          this.triangles = this.triangles.subarray(0, this.trianglesLen);
          this.halfedges = this.halfedges.subarray(0, this.trianglesLen);
        },
        hashKey: function (a) {
          return (
            Math.floor(
              Fb.pseudoAngle(a.x - this.center.x, a.y - this.center.y) *
                this.hashSize,
            ) % this.hashSize
          );
        },
        legalize: function (a) {
          for (var b = 0, c; ; ) {
            var d = this.halfedges[a],
              f = a - (a % 3);
            c = f + ((a + 2) % 3);
            if (-1 == d) {
              if (0 == b) break;
              a = Fb.EDGE_STACK[--b];
            } else {
              var h = d - (d % 3),
                k = h + ((d + 2) % 3),
                v = this.triangles[c],
                p = this.triangles[a];
              f = this.triangles[f + ((a + 1) % 3)];
              var g = this.triangles[k];
              if (
                Fb.inCircle(
                  this.points[v].x,
                  this.points[v].y,
                  this.points[p].x,
                  this.points[p].y,
                  this.points[f].x,
                  this.points[f].y,
                  this.points[g].x,
                  this.points[g].y,
                )
              ) {
                this.triangles[a] = g;
                this.triangles[d] = v;
                v = this.halfedges[k];
                if (-1 == v) {
                  p = this.hullStart;
                  do {
                    if (this.hullTri[p] == k) {
                      this.hullTri[p] = a;
                      break;
                    }
                    p = this.hullPrev[p];
                  } while (p != this.hullStart);
                }
                this.link(a, v);
                this.link(d, this.halfedges[c]);
                this.link(c, k);
                c = h + ((d + 1) % 3);
                b < Fb.EDGE_STACK.length && (Fb.EDGE_STACK[b++] = c);
              } else {
                if (0 == b) break;
                a = Fb.EDGE_STACK[--b];
              }
            }
          }
          return c;
        },
        addTriangle: function (a, b, c, d, f, h) {
          var k = this.trianglesLen;
          this.triangles[k] = a;
          this.triangles[k + 1] = b;
          this.triangles[k + 2] = c;
          this.link(k, d);
          this.link(k + 1, f);
          this.link(k + 2, h);
          this.trianglesLen += 3;
          return k;
        },
        link: function (a, b) {
          this.halfedges[a] = b;
          -1 != b && (this.halfedges[b] = a);
        },
        getVoronoi: function () {
          for (
            var a = new na(),
              b = this.triangles.length,
              c = [],
              d = 0,
              f = (b / 3) | 0;
            d < f;

          )
            (d++, c.push(null));
          var h = c;
          c = [];
          d = 0;
          for (f = this.points.length; d < f; ) (d++, c.push(!1));
          var k = c;
          c = 0;
          for (d = b; c < d; ) {
            var v = c++;
            b = this.triangles[2 == v % 3 ? v - 2 : v + 1];
            if (!k[b]) {
              k[b] = !0;
              f = [];
              var p = 0;
              for (v = this.edgesAroundPoint(v); p < v.length; ) {
                var g = v[p];
                ++p;
                g = (g / 3) | 0;
                var t = h[g];
                null == t && (t = h[g] = this.triangleCenter(g));
                f.push(t);
              }
              a.set(this.points[b], f);
            }
          }
          return a;
        },
        triangleCenter: function (a) {
          return Fb.triCircumcenter(
            this.points[this.triangles[3 * a]],
            this.points[this.triangles[3 * a + 1]],
            this.points[this.triangles[3 * a + 2]],
          );
        },
        edgesAroundPoint: function (a) {
          var b = [],
            c = a;
          do (b.push(c), (c = this.halfedges[2 == c % 3 ? c - 2 : c + 1]));
          while (-1 != c && c != a);
          return b;
        },
        __class__: Fb,
      };
      var Me = function () {};
      g['com.watabou.geom.EdgeChain'] = Me;
      Me.__name__ = 'com.watabou.geom.EdgeChain';
      Me.toPoly = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(d.origin.point);
        }
        return b;
      };
      var Bi = function (a, b) {
        this.r = a;
        this.shape = b;
        this.points = [];
        this.cellSize = a / Math.sqrt(2);
        this.setBounds(b.getBounds(this));
        this.queue = [];
        this.emit(b.getFirst());
      };
      g['com.watabou.geom.PoissonDisk'] = Bi;
      Bi.__name__ = 'com.watabou.geom.PoissonDisk';
      Bi.prototype = {
        setBounds: function (a) {
          this.xmin = a.get_left();
          this.ymin = a.get_top();
          this.xmax = a.get_right();
          this.ymax = a.get_bottom();
          this.gridWidth = Math.ceil((this.xmax - this.xmin) / this.cellSize);
          this.gridHeight = Math.ceil((this.ymax - this.ymin) / this.cellSize);
          a = [];
          for (var b = 0, c = this.gridWidth * this.gridHeight; b < c; )
            (b++, a.push(null));
          this.grid = a;
        },
        step: function () {
          if (0 == this.queue.length) return !1;
          for (var a = ua.random(this.queue), b = !1, c = 0; 30 > c; ) {
            c++;
            var d = K.polar(
              this.r +
                this.r *
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
              2 *
                Math.PI *
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
            );
            d.x += a.x;
            d.y += a.y;
            this.shape.validate(d) &&
              this.validate(d) &&
              ((b = !0), this.emit(d));
          }
          b || O.remove(this.queue, a);
          return 0 < this.queue.length;
        },
        validate: function (a) {
          var b = Math.floor((a.x - this.xmin) / this.cellSize),
            c = Math.floor((a.y - this.ymin) / this.cellSize);
          if (0 > b || 0 > c || b >= this.gridWidth || c >= this.gridHeight)
            return !1;
          for (
            var d = 0 < b - 2 ? b - 2 : 0,
              f = b + 2 + 1 < this.gridWidth ? b + 2 + 1 : this.gridWidth,
              h = 0 < c - 2 ? c - 2 : 0,
              k = c + 2 + 1 < this.gridHeight ? c + 2 + 1 : this.gridHeight;
            h < k;

          ) {
            c = h++;
            c *= this.gridWidth;
            for (var v = d, p = f; v < p; )
              if (
                ((b = v++),
                (b = this.grid[c + b]),
                null != b && K.distance(a, b) < this.r)
              )
                return !1;
          }
          return !0;
        },
        emit: function (a) {
          this.points.push(a);
          this.queue.push(a);
          this.grid[
            Math.floor((a.y - this.ymin) / this.cellSize) * this.gridWidth +
              Math.floor((a.x - this.xmin) / this.cellSize)
          ] = a;
        },
        getNeighbours: function (a) {
          var b = [],
            c = Math.floor((a.x - this.xmin) / this.cellSize),
            d = Math.floor((a.y - this.ymin) / this.cellSize);
          a = 0 < c - 2 ? c - 2 : 0;
          for (
            var f = c + 2 + 1 < this.gridWidth ? c + 2 + 1 : this.gridWidth,
              h = 0 < d - 2 ? d - 2 : 0,
              k = d + 2 + 1 < this.gridHeight ? d + 2 + 1 : this.gridHeight;
            h < k;

          ) {
            d = h++;
            d *= this.gridWidth;
            for (var v = a, p = f; v < p; )
              ((c = v++), (c = this.grid[d + c]), null != c && b.push(c));
          }
          return b;
        },
        __class__: Bi,
      };
      var jg = function () {};
      g['com.watabou.geom.IPoissonDiskShape'] = jg;
      jg.__name__ = 'com.watabou.geom.IPoissonDiskShape';
      jg.__isInterface__ = !0;
      jg.prototype = { __class__: jg };
      var Ng = function (a, b, c) {
        this.x = a;
        this.y = b;
        this.r = c;
        this.r2 = c * c;
      };
      g['com.watabou.geom.PoissonDiskCircle'] = Ng;
      Ng.__name__ = 'com.watabou.geom.PoissonDiskCircle';
      Ng.__interfaces__ = [jg];
      Ng.prototype = {
        getBounds: function (a) {
          return new qa(
            this.x - this.r,
            this.y - this.r,
            2 * this.r,
            2 * this.r,
          );
        },
        getFirst: function () {
          var a = K.polar(
            this.r *
              Math.sqrt(
                (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647,
              ),
            2 *
              Math.PI *
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
          );
          a.x += this.x;
          a.y += this.y;
          return a;
        },
        validate: function (a) {
          var b = this.x - a.x;
          a = this.y - a.y;
          return b * b + a * a <= this.r2;
        },
        inflate: function (a) {
          this.r += a;
          this.r2 = this.r * this.r;
        },
        __class__: Ng,
      };
      var Og = function (a) {
        this.shapes = a;
      };
      g['com.watabou.geom.PoissonDiskShapeCollection'] = Og;
      Og.__name__ = 'com.watabou.geom.PoissonDiskShapeCollection';
      Og.__interfaces__ = [jg];
      Og.prototype = {
        getBounds: function (a) {
          for (
            var b = this.shapes[0].getBounds(a), c = 1, d = this.shapes.length;
            c < d;

          ) {
            var f = c++;
            b = b.union(this.shapes[f].getBounds(a));
          }
          return b;
        },
        getFirst: function () {
          return ua.random(this.shapes).getFirst();
        },
        validate: function (a) {
          for (var b = 0, c = this.shapes; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d.validate(a)) return !0;
          }
          return !1;
        },
        inflate: function (a) {
          for (var b = 0, c = this.shapes; b < c.length; ) {
            var d = c[b];
            ++b;
            d.inflate(a);
          }
        },
        __class__: Og,
      };
      var Oi = function (a, b, c, d) {
        null == d && (d = 0);
        this.width = a;
        this.height = b;
        this.dist = c;
        this.dist2 = c * c;
        this.cellSize = c / Math.sqrt(2);
        this.gridWidth = Math.ceil(this.width / this.cellSize);
        this.gridHeight = Math.ceil(this.height / this.cellSize);
        c = [];
        for (var f = 0, h = this.gridWidth * this.gridHeight; f < h; )
          (f++, c.push(null));
        this.grid = c;
        this.points = [];
        this.queue = [];
        for (
          this.emit(
            new K(
              a * ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
              b * ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
            ),
          );
          this.step();

        );
        0 < d && this.uneven(d);
      };
      g['com.watabou.geom.PoissonPattern'] = Oi;
      Oi.__name__ = 'com.watabou.geom.PoissonPattern';
      Oi.prototype = {
        emit: function (a) {
          this.points.push(a);
          this.queue.push(a);
          this.grid[
            Math.floor(a.y / this.cellSize) * this.gridWidth +
              Math.floor(a.x / this.cellSize)
          ] = a;
        },
        step: function () {
          if (0 == this.queue.length) return !1;
          for (var a = ua.random(this.queue), b = !1, c = 0; 50 > c; ) {
            c++;
            var d = K.polar(
              this.dist *
                (1 +
                  0.1 *
                    ((n.seed = (48271 * n.seed) % 2147483647 | 0) /
                      2147483647)),
              6.28318530718 *
                ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
            );
            d.x += a.x;
            d.y += a.y;
            this.warp(d);
            this.validate(d) && ((b = !0), this.emit(d));
          }
          b || O.remove(this.queue, a);
          return 0 < this.queue.length;
        },
        warp: function (a) {
          0 > a.x
            ? (a.x += this.width)
            : a.x >= this.width && (a.x -= this.width);
          0 > a.y
            ? (a.y += this.height)
            : a.y >= this.height && (a.y -= this.height);
        },
        validate: function (a) {
          var b = a.x;
          a = a.y;
          for (
            var c = Math.floor(b / this.cellSize),
              d = Math.floor(a / this.cellSize),
              f = c - 2,
              h = c + 2 + 1,
              k = d - 2,
              v = d + 2 + 1;
            k < v;

          ) {
            d = k++;
            d = ((d + this.gridHeight) % this.gridHeight) * this.gridWidth;
            for (var p = f, g = h; p < g; ) {
              c = p++;
              var t = this.grid[d + ((c + this.gridWidth) % this.gridWidth)];
              if (
                null != t &&
                ((c = Math.abs(t.x - b)),
                (t = Math.abs(t.y - a)),
                c > this.width - c && (c = this.width - c),
                t > this.height - t && (t = this.height - t),
                c * c + t * t < this.dist2)
              )
                return !1;
            }
          }
          return !0;
        },
        uneven: function (a) {
          if (0 != a)
            for (var b = 0, c = this.points; b < c.length; ) {
              var d = c[b];
              ++b;
              var f = K.polar(
                this.dist *
                  a *
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
                6.28318530718 *
                  ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647),
              );
              d.x += f.x;
              d.y += f.y;
              this.warp(d);
            }
        },
        __class__: Oi,
      };
      var Yf = function (a, b, c) {
        this.seeds = a;
        this.patW = b;
        this.patH = c;
        for (var d = [], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          d.push(new K(h.x + -1 * b, h.y + -1 * c));
        }
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + 0 * b, h.y + -1 * c)));
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + b, h.y + -1 * c)));
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + -1 * b, h.y + 0 * c)));
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + b, h.y + 0 * c)));
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + -1 * b, h.y + c)));
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + 0 * b, h.y + c)));
        for (f = 0; f < a.length; )
          ((h = a[f]), ++f, d.push(new K(h.x + b, h.y + c)));
        d = new Fb(a.concat(d));
        f = new na();
        var k = d.getVoronoi();
        d = k;
        for (k = k.keys(); k.hasNext(); ) {
          var v = k.next();
          h = d.get(v);
          var p = v;
          v = h;
          -1 != a.indexOf(p) && f.set(p, v);
        }
        this.pattern = f;
        this.inner = [];
        this.outer = new na();
        d = k = this.pattern;
        for (k = k.keys(); k.hasNext(); )
          for (v = k.next(), v = h = d.get(v), f = 0; f < v.length; ) {
            h = v[f];
            ++f;
            p = h.x;
            var g = h.y;
            0 <= p && p < b && 0 <= g && g < c
              ? ua.add(this.inner, h)
              : null == this.outer.h.__keys__[h.__id__] &&
                (0 > p && (p += b),
                p >= b && (p -= b),
                0 > g && (g += c),
                g >= c && (g -= c),
                (a = this.outer),
                (p = new K(p, g)),
                a.set(h, p));
          }
        d = k = this.outer;
        for (k = k.keys(); k.hasNext(); ) {
          v = k.next();
          h = d.get(v);
          b = v;
          f = h;
          c = f.x;
          a = f.y;
          h = null;
          v = Infinity;
          f = 0;
          for (p = this.inner; f < p.length; ) {
            g = p[f];
            ++f;
            var t = c - g.x,
              m = a - g.y;
            t = t * t + m * m;
            if (t < v) {
              h = g;
              if (1e-10 > t) break;
              v = t;
            }
          }
          this.outer.set(b, h);
        }
      };
      g['com.watabou.geom.VoronoiPattern'] = Yf;
      Yf.__name__ = 'com.watabou.geom.VoronoiPattern';
      Yf.poisson = function (a, b, c) {
        a = new Oi(b, c, a).points;
        return new Yf(a, b, c);
      };
      Yf.prototype = {
        getRect: function (a, b, c, d) {
          c = a + c;
          d = b + d;
          for (
            var f = Math.floor(b / this.patH),
              h = Math.ceil(d / this.patH),
              k = Math.floor(a / this.patW),
              v = Math.ceil(c / this.patW),
              p = [],
              g = f,
              t = h;
            g < t;

          ) {
            for (var m = g++, n = [], x = k, q = v; x < q; ) {
              var z = x++;
              z *= this.patW;
              for (
                var l = m * this.patH, w = [], G = 0, B = this.inner;
                G < B.length;

              ) {
                var D = B[G];
                ++G;
                w.push(new K(D.x + z, D.y + l));
              }
              n.push(w);
            }
            p.push(n);
          }
          x = p;
          q = [];
          p = f;
          for (g = h; p < g; )
            for (m = p++, t = k, n = v; t < n; )
              for (z = t++, l = w = this.pattern, w = w.keys(); w.hasNext(); )
                if (
                  ((G = w.next()),
                  (B = l.get(G)),
                  (D = G.x + z * this.patW),
                  (G = G.y + m * this.patH),
                  D > a && D < c && G > b && G < d)
                ) {
                  G = B;
                  B = z;
                  D = m;
                  for (
                    var F = x[D - f][B - k], r = q, u = [], C = 0;
                    C < G.length;

                  ) {
                    var H = G[C];
                    ++C;
                    var ba = this.inner.indexOf(H);
                    if (-1 != ba) u.push(F[ba]);
                    else {
                      ba = 0 > H.y ? D - 1 : H.y >= this.patH ? D + 1 : D;
                      var ta = 0 > H.x ? B - 1 : H.x >= this.patW ? B + 1 : B;
                      ba >= f && ba < h && ta >= k && ta < v
                        ? ((ba = x[ba - f][ta - k]),
                          (H = this.inner.indexOf(this.outer.h[H.__id__])),
                          u.push(ba[H]))
                        : u.push(
                            new K(H.x + B * this.patW, H.y + D * this.patH),
                          );
                    }
                  }
                  r.push(u);
                }
          return q;
        },
        __class__: Yf,
      };
      var Ne = function () {};
      g['com.watabou.geom.polygons.PolyBounds'] = Ne;
      Ne.__name__ = 'com.watabou.geom.polygons.PolyBounds';
      Ne.rect = function (a) {
        for (
          var b = Infinity, c = Infinity, d = -Infinity, f = -Infinity, h = 0;
          h < a.length;

        ) {
          var k = a[h];
          ++h;
          var v = k.x;
          k = k.y;
          v < b && (b = v);
          k < c && (c = k);
          v > d && (d = v);
          k > f && (f = k);
        }
        return new qa(b, c, d - b, f - c);
      };
      Ne.containsPoint = function (a, b, c) {
        null == c && (c = !1);
        var d = b.x;
        b = b.y;
        for (var f = a.length, h = a[f - 1], k = 0; k < f; ) {
          var v = k++,
            p = h;
          h = a[v];
          v = p.x;
          p = p.y;
          var g = h.x - v,
            t = h.y - p;
          if (0 != t) {
            var m = (t * (d - v) - g * (b - p)) / t;
            0 >= m &&
              ((v = Math.abs(g) > Math.abs(t) ? (d - v - m) / g : (b - p) / t),
              0 <= v && 1 >= v && (c = !c));
          }
        }
        return c;
      };
      var Hd = function () {};
      g['com.watabou.geom.polygons.PolyCore'] = Hd;
      Hd.__name__ = 'com.watabou.geom.polygons.PolyCore';
      Hd.area = function (a) {
        for (
          var b = a.length,
            c = a[b - 1],
            d = a[0],
            f = c.x * d.y - d.x * c.y,
            h = 1;
          h < b;

        ) {
          var k = h++;
          c = d;
          d = a[k];
          f += c.x * d.y - d.x * c.y;
        }
        return 0.5 * f;
      };
      Hd.perimeter = function (a) {
        for (
          var b = a.length, c = a[b - 1], d = a[0], f = K.distance(c, d), h = 1;
          h < b;

        ) {
          var k = h++;
          c = d;
          d = a[k];
          f += K.distance(c, d);
        }
        return f;
      };
      Hd.$length = function (a) {
        for (var b = 0, c = 1, d = a.length; c < d; ) {
          var f = c++;
          b += K.distance(a[f - 1], a[f]);
        }
        return b;
      };
      Hd.center = function (a) {
        for (var b = a.length, c = a[0].clone(), d = 1; d < b; ) {
          var f = d++;
          f = a[f];
          c.x += f.x;
          c.y += f.y;
        }
        a = 1 / b;
        c.x *= a;
        c.y *= a;
        return c;
      };
      Hd.centroid = function (a) {
        if (1 == a.length) return a[0];
        for (
          var b = 0, c = 0, d = 0, f = a[a.length - 1], h = 0, k = a.length;
          h < k;

        ) {
          var v = h++,
            p = f;
          f = a[v];
          v = p.x * f.y - p.y * f.x;
          d += v;
          b += (p.x + f.x) * v;
          c += (p.y + f.y) * v;
        }
        a = 1 / (3 * d);
        return new K(a * b, a * c);
      };
      var Bj = function () {};
      g['com.watabou.geom.polygons.PolyCreate'] = Bj;
      Bj.__name__ = 'com.watabou.geom.polygons.PolyCreate';
      Bj.stripe = function (a, b, c) {
        null == c && (c = 1);
        var d = b / 2,
          f = a.length;
        b = [];
        var h = [],
          k = a[0],
          v = a[1],
          p = v.subtract(k);
        p.normalize(1);
        if (0 < c) {
          var g = new K(p.x * d, p.y * d),
            t = new K(-g.y, g.x);
          k = k.subtract(new K(g.x * c, g.y * c));
          b.unshift(k.subtract(t));
          h.unshift(k.add(t));
        } else {
          var m = new K(p.x * d, p.y * d);
          t = new K(-m.y, m.x);
          b.unshift(k.subtract(t));
          h.unshift(k.add(t));
        }
        t = 1;
        for (--f; t < f; )
          ((g = t++),
            (k = v),
            (v = a[g + 1]),
            (m = p),
            (p = v.subtract(k)),
            p.normalize(1),
            (g = m.x * p.x + m.y * p.y),
            (m = m.add(p)),
            (m = new K(-m.y, m.x)),
            m.normalize(d * Math.sqrt(2 / (1 + g))),
            b.push(k.subtract(m)),
            h.push(k.add(m)));
        0 < c
          ? ((g = new K(p.x * d, p.y * d)),
            (t = new K(-g.y, g.x)),
            (a = v.add(new K(g.x * c, g.y * c))),
            b.push(a.subtract(t)),
            h.push(a.add(t)))
          : ((m = new K(p.x * d, p.y * d)),
            (t = new K(-m.y, m.x)),
            b.push(v.subtract(t)),
            h.push(v.add(t)));
        return b.concat(ua.revert(h));
      };
      var ff = function () {};
      g['com.watabou.geom.polygons.PolyCut'] = ff;
      ff.__name__ = 'com.watabou.geom.polygons.PolyCut';
      ff.pierceMulti = function (a, b, c) {
        for (
          var d = b.x, f = b.y, h = c.x - d, k = c.y - f, v = [], p = 0;
          p < a.length;

        ) {
          var g = a[p];
          ++p;
          for (var t = g.length, m = 0, n = t; m < n; ) {
            var x = m++,
              q = g[x];
            x = g[(x + 1) % t];
            var z = q.x;
            q = q.y;
            q = cb.intersectLines(d, f, h, k, z, q, x.x - z, x.y - q);
            null != q && 0 <= q.y && 1 >= q.y && v.push(q.x);
          }
        }
        v.sort(function (a, b) {
          a -= b;
          return 0 == a ? 0 : 0 > a ? -1 : 1;
        });
        p = [];
        for (m = 0; m < v.length; ) ((q = v[m]), ++m, p.push(cb.lerp(b, c, q)));
        return p;
      };
      ff.enlarge = function (a, b) {
        for (var c = [], d = a.length, f = 0, h = a.length; f < h; ) {
          var k = f++,
            v = a[k];
          k = a[(k + 1) % d];
          var p = k.subtract(v);
          p = new K(-p.y, p.x);
          p.normalize(-b);
          c.push(v.add(p));
          c.push(k.add(p));
        }
        return c;
      };
      var vd = function (a) {
        this.map = new Ia();
        null == vd.phonemes &&
          ((vd.phonemes = kd.VOWELS.concat(kd.CONSONANTS)),
          vd.phonemes.sort(function (a, b) {
            return b.length - a.length;
          }));
        this.source = a;
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          if ('' != c) {
            c = vd.split(c.toLowerCase());
            for (var d = [], f = 0; f < c.length; ) {
              var h = c[f];
              ++f;
              var k = d.join('');
              Object.prototype.hasOwnProperty.call(this.map.h, k)
                ? this.map.h[k].push(h)
                : (this.map.h[k] = [h]);
              d.push(h);
              2 < d.length && d.shift();
            }
            c = d.join('');
            Object.prototype.hasOwnProperty.call(this.map.h, c)
              ? this.map.h[c].push('')
              : (this.map.h[c] = ['']);
          }
        }
      };
      g['com.watabou.nlp.Markov'] = vd;
      vd.__name__ = 'com.watabou.nlp.Markov';
      vd.split = function (a) {
        for (var b = []; '' != a; ) {
          for (var c = !1, d = 0, f = vd.phonemes; d < f.length; ) {
            var h = f[d];
            ++d;
            if (O.substr(a, -h.length, null) == h) {
              b.unshift(h);
              a = O.substr(a, 0, a.length - h.length);
              c = !0;
              break;
            }
          }
          c || (a = O.substr(a, 0, a.length - 1));
        }
        return b;
      };
      vd.prototype = {
        generate: function (a) {
          for (null == a && (a = -1); ; ) {
            for (var b = '', c = [], d = ua.random(this.map.h['']); '' != d; ) {
              b += d;
              c.push(d);
              2 < c.length && c.shift();
              d = this.map;
              var f = c.join('');
              d = ua.random(d.h[f]);
            }
            if (-1 == a || kd.splitWord(b).length <= a) return b;
          }
        },
        __class__: vd,
      };
      var kd = function () {};
      g['com.watabou.nlp.Syllables'] = kd;
      kd.__name__ = 'com.watabou.nlp.Syllables';
      kd.splitWord = function (a) {
        for (var b = []; 0 < a.length; ) {
          var c =
            0 == b.length && 'e' == O.substr(a, -1, null)
              ? kd.pinch(O.substr(a, 0, a.length - 1)) + 'e'
              : kd.pinch(a);
          b.unshift(c);
          a = O.substr(a, 0, a.length - c.length);
          ua.every(kd.VOWELS, function (b) {
            return -1 == a.indexOf(b);
          }) && ((b[0] = a + b[0]), (a = ''));
        }
        return b;
      };
      kd.pinch = function (a) {
        for (
          var b = a.length - 1;
          0 <= b && -1 == kd.VOWELS.indexOf(a.charAt(b));

        )
          --b;
        if (0 > b) return a;
        for (var c = 0, d = kd.VOWELS; c < d.length; ) {
          var f = d[c];
          ++c;
          if (O.substr(a, b - (f.length - 1), f.length) == f) {
            b -= f.length;
            break;
          }
        }
        if (0 > b) return a;
        c = 0;
        for (d = kd.CONSONANTS; c < d.length; )
          if (((f = d[c]), ++c, O.substr(a, b - (f.length - 1), f.length) == f))
            return O.substr(a, b - (f.length - 1), null);
        return O.substr(a, b + 1, null);
      };
      var eh = function () {
        this.complete = new Nd();
      };
      g['com.watabou.processes.Process'] = eh;
      eh.__name__ = 'com.watabou.processes.Process';
      eh.prototype = {
        onComplete: function (a) {
          null != a && this.complete.add(a);
          return this;
        },
        __class__: eh,
      };
      var ue = function () {
        this.complete = new Nd();
      };
      g['com.watabou.processes.Tweener'] = ue;
      ue.__name__ = 'com.watabou.processes.Tweener';
      ue.create = function (a, b) {
        var c = new ue();
        c.time = a;
        c.updateCallback = b;
        return c;
      };
      ue.run = function (a, b) {
        a = ue.create(a, b);
        a.start();
        return a;
      };
      ue.__super__ = eh;
      ue.prototype = u(eh.prototype, {
        start: function () {
          this.passed = 0;
          this.paused = !1;
          this.updateCallback(0);
          return this.resume();
        },
        stop: function () {
          return this.pause();
        },
        resume: function () {
          Xa.get_tick().add(l(this, this.update));
          this.paused = !1;
          return this;
        },
        pause: function () {
          Xa.get_tick().remove(l(this, this.update));
          this.paused = !0;
          return this;
        },
        update: function (a) {
          this.paused ||
            ((this.passed += a) < this.time
              ? this.updateCallback(this.passed / this.time)
              : (this.updateCallback(1),
                this.stop(),
                this.complete.dispatch()));
        },
        __class__: ue,
      });
      var Ld = function () {};
      g['com.watabou.system.Exporter'] = Ld;
      Ld.__name__ = 'com.watabou.system.Exporter';
      Ld.saveBinary = function (a, b, c) {
        b = Ld.fixName(b);
        a = ld.toArrayBuffer(a);
        window.saveAs(new Blob([a], { type: c }), b, !0);
      };
      Ld.saveText = function (a, b, c) {
        b = Ld.fixName(b);
        window.saveAs(new Blob([a], { type: c }), b, !0);
      };
      Ld.savePNG = function (a, b) {
        a = a.encode(a.rect, new fh());
        Ld.saveBinary(a, b + '.png', 'image/png');
      };
      Ld.fixName = function (a) {
        return new xa("[ ']", 'g').split(a.toLowerCase()).join('_');
      };
      var gc = function () {};
      g['com.watabou.system.State'] = gc;
      gc.__name__ = 'com.watabou.system.State';
      gc.init = function (a, b) {
        null == gc.so &&
          (null == a && (a = A.current.meta.h.packageName),
          (gc.so = Ic.getLocal(a)),
          (gc.data = gc.so.data),
          null != b && 0 == ya.fields(gc.data).length && b(gc.data));
      };
      gc.get = function (a, b) {
        gc.init();
        return Object.prototype.hasOwnProperty.call(gc.data, a)
          ? gc.data[a]
          : b;
      };
      gc.set = function (a, b) {
        gc.init();
        gc.data[a] = b;
        gc.so.flush();
      };
      var Ra = function () {};
      g['com.watabou.system.URLState'] = Ra;
      Ra.__name__ = 'com.watabou.system.URLState';
      Ra.init = function () {
        if (null == Ra.data) {
          Ra.data = {};
          var a = new URLSearchParams(y.location.search);
          null != a &&
            a.forEach(function (a, c) {
              return (Ra.data[c] = a);
            });
        }
      };
      Ra.reset = function () {
        Ra.data = {};
        Ra.update();
      };
      Ra.get = function (a, b) {
        Ra.init();
        return Object.prototype.hasOwnProperty.call(Ra.data, a)
          ? Ra.data[a]
          : b;
      };
      Ra.getInt = function (a, b) {
        null == b && (b = 0);
        Ra.init();
        return Object.prototype.hasOwnProperty.call(Ra.data, a)
          ? I.parseInt(Ra.data[a])
          : b;
      };
      Ra.getFloat = function (a, b) {
        null == b && (b = 0);
        Ra.init();
        return Object.prototype.hasOwnProperty.call(Ra.data, a)
          ? parseFloat(Ra.data[a])
          : b;
      };
      Ra.set = function (a, b) {
        Ra.init();
        Ra.data[a] = b;
        Ra.update();
      };
      Ra.getParams = function () {
        for (var a = '', b = Ra.data, c = ya.fields(b), d = 0; d < c.length; ) {
          var f = c[d++];
          a += ('' == a ? '?' : '&') + ('' + f + '=' + I.string(b[f]));
        }
        return a;
      };
      Ra.getURL = function () {
        return Ra.baseURL + Ra.getParams();
      };
      Ra.update = function () {
        window.history.replaceState(Ra.data, '', Ra.getParams());
      };
      var rf = function (a) {
        this.ruleSet = a;
        this.clearState();
      };
      g['com.watabou.tracery.RuleSelector'] = rf;
      rf.__name__ = 'com.watabou.tracery.RuleSelector';
      rf.prototype = {
        select: function () {
          var a = this.ruleSet.defaultRules,
            b = (Yd.rng() * a.length) | 0;
          return a[b];
        },
        clearState: function () {},
        __class__: rf,
      };
      var Pg = function (a) {
        rf.call(this, a);
      };
      g['com.watabou.tracery.DeckRuleSelector'] = Pg;
      Pg.__name__ = 'com.watabou.tracery.DeckRuleSelector';
      Pg.__super__ = rf;
      Pg.prototype = u(rf.prototype, {
        select: function () {
          0 == this.deck.length && this.clearState();
          var a = (Yd.rng() * this.deck.length) | 0,
            b = this.deck[a];
          this.deck.splice(a, 1);
          return b;
        },
        clearState: function () {
          this.deck = this.ruleSet.defaultRules.slice();
        },
        __class__: Pg,
      });
      var Oe = function (a, b, c) {
        this.grammar = a;
        this.key = b;
        this.baseRules = c;
        this.clearState();
      };
      g['com.watabou.tracery.Symbol'] = Oe;
      Oe.__name__ = 'com.watabou.tracery.Symbol';
      Oe.prototype = {
        clearState: function () {
          this.stack = [this.baseRules];
          this.baseRules.clearState();
        },
        pushRules: function (a) {
          this.pushRuleSet(new sf(this.grammar, a));
        },
        pushRuleSet: function (a) {
          this.stack.push(a);
        },
        popRules: function () {
          this.stack.pop();
        },
        selectRule: function () {
          return 0 == this.stack.length
            ? (Yb.trace(
                'The rule stack for ' + this.key + ' is empty, too many pops?',
                {
                  fileName: 'com/watabou/tracery/Symbol.hx',
                  lineNumber: 37,
                  className: 'com.watabou.tracery.Symbol',
                  methodName: 'selectRule',
                },
              ),
              '((' + this.key + '))')
            : this.top().selectRule();
        },
        top: function () {
          return this.stack[this.stack.length - 1];
        },
        __class__: Oe,
      };
      var gh = function (a, b, c) {
        Oe.call(this, a, b, new sf(a, []));
        this.generator = c;
      };
      g['com.watabou.tracery.ExtSymbol'] = gh;
      gh.__name__ = 'com.watabou.tracery.ExtSymbol';
      gh.__super__ = Oe;
      gh.prototype = u(Oe.prototype, {
        selectRule: function () {
          return this.generator();
        },
        __class__: gh,
      });
      var Di = function (a) {
        this.autoID = 0;
        this.defaultSelector = rf;
        this.modifiers = new Ia();
        this.flags = [];
        this.loadFromRawObj(a);
      };
      g['com.watabou.tracery.Grammar'] = Di;
      Di.__name__ = 'com.watabou.tracery.Grammar';
      Di.prototype = {
        clearState: function () {
          for (
            var a = this.symbols.h, b = Object.keys(a), c = b.length, d = 0;
            d < c;

          )
            a[b[d++]].clearState();
          this.flags = [];
        },
        addModifiers: function (a) {
          for (var b = Object.keys(a.h), c = b.length, d = 0; d < c; ) {
            var f = b[d++];
            this.modifiers.h[f] = a.h[f];
          }
        },
        loadFromRawObj: function (a) {
          this.raw = a;
          this.symbols = new Ia();
          this.subgrammars = [];
          if (null != a)
            for (var b = ya.fields(a), c = 0; c < b.length; ) {
              var d = b[c++],
                f = d;
              d = a[d];
              var h = 'string' == typeof d ? [d] : d;
              null == h &&
                (Yb.trace(a, {
                  fileName: 'com/watabou/tracery/Grammar.hx',
                  lineNumber: 55,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'loadFromRawObj',
                }),
                Yb.trace(f, {
                  fileName: 'com/watabou/tracery/Grammar.hx',
                  lineNumber: 56,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'loadFromRawObj',
                }));
              d = this.symbols;
              h = new Oe(this, f, new sf(this, this.unwrap(a, h)));
              d.h[f] = h;
            }
        },
        unwrap: function (a, b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            if ('@' == O.substr(f, 0, 1)) {
              var h = O.substr(f, 1, null);
              f = null;
              var k = h.indexOf('?-');
              -1 != k &&
                ((f = O.substr(h, 0, k)), (h = O.substr(h, k + 2, null)));
              k = a[h];
              h = 0;
              for (
                k = this.unwrap(a, 'string' == typeof k ? [k] : k);
                h < k.length;

              ) {
                var v = k[h];
                ++h;
                c.push(null == f ? v : '' + f + '?-' + v);
              }
            } else c.push(f);
          }
          return c;
        },
        createRoot: function (a) {
          return new kg(this, null, 0, { type: -1, raw: a });
        },
        expand: function (a, b) {
          null == b && (b = !1);
          a = this.createRoot(a);
          a.expand();
          b || a.clearEscapeChars();
          return a;
        },
        flatten: function (a, b) {
          null == b && (b = !1);
          return this.expand(a, b).finishedText;
        },
        execute: function (a) {
          'set ' == O.substr(a, 0, 4)
            ? ((a = O.substr(a, 4, null)),
              ua.addAll(this.flags, new xa(', +', '').split(a)))
            : 'clear ' == O.substr(a, 0, 6)
              ? ((a = O.substr(a, 6, null)),
                ua.addAll(this.flags, new xa(', +', '').split(a)))
              : Yb.trace('Unknown function "' + a + '" is called', {
                  fileName: 'com/watabou/tracery/Grammar.hx',
                  lineNumber: 113,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'execute',
                });
        },
        pushRules: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.symbols.h, a))
            this.symbols.h[a].pushRules(b);
          else {
            var c = this.symbols;
            b = new Oe(this, a, new sf(this, b));
            c.h[a] = b;
          }
        },
        popRules: function (a) {
          Object.prototype.hasOwnProperty.call(this.symbols.h, a)
            ? this.symbols.h[a].popRules()
            : Yb.trace("Can't pop: no symbol for key " + a, {
                fileName: 'com/watabou/tracery/Grammar.hx',
                lineNumber: 142,
                className: 'com.watabou.tracery.Grammar',
                methodName: 'popRules',
              });
        },
        addAutoRules: function (a) {
          var b = '_auto' + this.autoID++;
          this.pushRules(b, a);
          return b;
        },
        selectRule: function (a) {
          for (
            var b = this.symbols.h[a], c = 0, d = this.flags;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f = this.symbols.h['' + f + '?-' + a];
            if (null != f) {
              b = f;
              break;
            }
          }
          if (null != b && ((c = b.selectRule()), null != c)) return c;
          c = 0;
          for (d = this.subgrammars; c < d.length; )
            if (
              ((b = d[c]),
              ++c,
              Object.prototype.hasOwnProperty.call(b.symbols.h, a))
            )
              return b.symbols.h[a].selectRule();
          Yb.trace('No symbol for "' + a + '"', {
            fileName: 'com/watabou/tracery/Grammar.hx',
            lineNumber: 177,
            className: 'com.watabou.tracery.Grammar',
            methodName: 'selectRule',
          });
          return '((' + a + '))';
        },
        validateRule: function (a) {
          var b = a.indexOf('?-');
          if (-1 == b) return a;
          var c = O.substr(a, 0, b);
          return this.eval(c) ? O.substr(a, b + 2, null) : null;
        },
        eval: function (a) {
          var b = parseFloat(a);
          if (!isNaN(b))
            return (
              (a = b),
              null == a && (a = 0.5),
              (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647 < a
            );
          b = a.split('&');
          if (1 < b.length) {
            for (a = 0; a < b.length; ) {
              var c = b[a];
              ++a;
              if (!this.eval(c)) return !1;
            }
            return !0;
          }
          a = (b = '!' == a.charAt(0)) ? O.substr(a, 1, null) : a;
          return (-1 != this.flags.indexOf(a)) != b;
        },
        addExternal: function (a, b) {
          var c = this.symbols;
          b = new gh(this, a, b);
          c.h[a] = b;
        },
        __class__: Di,
      };
      var db = function () {};
      g['com.watabou.tracery.ModsEngBasic'] = db;
      db.__name__ = 'com.watabou.tracery.ModsEngBasic';
      db.isVowel = function (a) {
        return -1 != 'ieaou'.indexOf(a.toLowerCase());
      };
      db.isAlphaNum = function (a) {
        return ('a' <= a && 'z' >= a) || ('A' <= a && 'Z' >= a)
          ? !0
          : '0' <= a
            ? '9' >= a
            : !1;
      };
      db.isPlural = function (a) {
        a = a.toLowerCase();
        return 's' == O.substr(a, -1, null)
          ? 'ss' != O.substr(a, -2, null)
          : !1;
      };
      db.escapeRegExp = function (a) {
        return a.replace(/([.*+?^=!:${}()|\[\]/\\])/g, '\\$1');
      };
      db.replace = function (a, b) {
        var c = new RegExp(db.escapeRegExp(b[0]), 'g');
        return a.replace(c, b[1]);
      };
      db.capitalizeAll = function (a, b) {
        b = '';
        for (var c = !0, d = 0, f = a.length; d < f; ) {
          var h = d++;
          h = a.charAt(h);
          db.isAlphaNum(h) || "'" == h
            ? c
              ? ((b += h.toUpperCase()), (c = !1))
              : (b += h)
            : ((c = !0), (b += h));
        }
        return b;
      };
      db.capitalize = function (a, b) {
        return a.charAt(0).toUpperCase() + O.substr(a, 1, null);
      };
      db.caps = function (a, b) {
        return a.toUpperCase();
      };
      db.a = function (a, b) {
        if (0 < a.length) {
          if (
            'u' == a.charAt(0).toLowerCase() &&
            2 < a.length &&
            'i' == a.charAt(2).toLowerCase()
          )
            return 'a ' + a;
          if (db.isVowel(a.charAt(0))) return 'an ' + a;
        }
        return 'a ' + a;
      };
      db.firstS = function (a, b) {
        a = a.split(' ');
        return 1 == a.length
          ? db.s(a[0], null)
          : db.s(a[0], null) + ' ' + a.slice(1).join(' ');
      };
      db.s = function (a, b) {
        b = db.plurals.h;
        for (var c = Object.keys(b), d = c.length, f = 0; f < d; ) {
          var h = c[f++],
            k = h;
          h = b[h];
          if (O.substr(a, -k.length, null) == k)
            return O.substr(a, 0, a.length - k.length) + h;
        }
        b = O.substr(a, -1, null);
        if ('s' == b || 'x' == b || 'z' == b) return a + 'es';
        if ('y' == b && -1 == 'ieaou'.indexOf(O.substr(a, -2, 1)))
          return O.substr(a, 0, -1) + 'ies';
        b = O.substr(a, -2, null);
        return 'ch' == b || 'sh' == b ? a + 'es' : a + 's';
      };
      db.possessive = function (a, b) {
        return 's' == O.substr(a, -1, null) ? a + "'" : a + "'s";
      };
      db.ed = function (a, b) {
        switch (O.substr(a, -1, null)) {
          case 'e':
            return a + 'd';
          case 'h':
            return a + 'ed';
          case 's':
            return a + 'ed';
          case 'x':
            return a + 'ed';
          case 'y':
            return db.isVowel(a.charAt(a.length - 2))
              ? a + 'd'
              : a.substring(0, a.length - 1) + 'ied';
          default:
            return a + 'ed';
        }
      };
      db.ing = function (a, b) {
        return 'e' == O.substr(a, -1, null)
          ? a.substring(0, a.length - 1) + 'ing'
          : a + 'ing';
      };
      db.thiss = function (a, b) {
        return db.isPlural(a) ? 'these' : 'this';
      };
      db.they = function (a, b) {
        return db.isPlural(a) ? 'they' : 'it';
      };
      db.them = function (a, b) {
        return db.isPlural(a) ? 'them' : 'it';
      };
      db.is = function (a, b) {
        return db.isPlural(a) ? 'are' : 'is';
      };
      db.was = function (a, b) {
        return db.isPlural(a) ? 'were' : 'was';
      };
      db.get = function () {
        var a = new Ia();
        a.h.replace = db.replace;
        a.h.possessive = db.possessive;
        a.h.capitalize = db.capitalize;
        a.h.capitalizeAll = db.capitalizeAll;
        a.h.caps = db.caps;
        a.h.firstS = db.firstS;
        a.h.s = db.s;
        a.h.a = db.a;
        a.h.ed = db.ed;
        a.h.ing = db.ing;
        a.h['this'] = db.thiss;
        a.h.they = db.they;
        a.h.them = db.them;
        a.h.is = db.is;
        a.h.was = db.was;
        return a;
      };
      var lg = function (a, b) {
        this.node = a;
        a = b.split(':');
        this.target = a[0];
        1 == a.length
          ? (this.type = 2)
          : ((this.rule = a[1]), (this.type = 'POP' == this.rule ? 1 : 0));
      };
      g['com.watabou.tracery.NodeAction'] = lg;
      lg.__name__ = 'com.watabou.tracery.NodeAction';
      lg.prototype = {
        createUndo: function () {
          return 0 == this.type
            ? new lg(this.node, this.target + ':POP')
            : null;
        },
        activate: function () {
          var a = this.node.grammar;
          switch (this.type) {
            case 0:
              for (
                var b = this.rule.split(','), c = [], d = 0;
                d < b.length;

              ) {
                var f = b[d];
                ++d;
                f = new kg(a, null, 0, { type: -1, raw: f });
                f.expand();
                c.push(f.finishedText);
              }
              a.pushRules(this.target, c);
              break;
            case 1:
              a.popRules(this.target);
              break;
            case 2:
              a.execute(this.target);
          }
        },
        __class__: lg,
      };
      var sf = function (a, b) {
        this.grammar = a;
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          a.push(this.process(d));
        }
        this.defaultRules = this.raw = a;
      };
      g['com.watabou.tracery.RuleSet'] = sf;
      sf.__name__ = 'com.watabou.tracery.RuleSet';
      sf.prototype = {
        process: function (a) {
          var b = a.indexOf('{');
          if (-1 == b) return a;
          for (
            var c = -1, d = 1, f = [], h = b + 1, k = b + 1, v = a.length;
            k < v;

          ) {
            var p = k++,
              g = a.charAt(p);
            if ('|' == g && 1 == d) (f.push(a.substring(h, p)), (h = p + 1));
            else if ('{' == g) ++d;
            else if ('}' == g && 0 == --d) {
              f.push(a.substring(h, p));
              c = p;
              break;
            }
          }
          return -1 != c
            ? ((b = O.substr(a, 0, b)),
              (a = O.substr(a, c + 1, null)),
              (f = this.grammar.addAutoRules(1 == f.length ? [f[0], ''] : f)),
              '' + b + '#' + f + '#' + this.process(a))
            : a;
        },
        selectRule: function () {
          null == this.selector &&
            (this.selector = w.createInstance(this.grammar.defaultSelector, [
              this,
            ]));
          for (;;) {
            var a = this.grammar.validateRule(this.selector.select());
            if (null != a) return a;
          }
        },
        clearState: function () {
          null != this.selector && this.selector.clearState();
        },
        __class__: sf,
      };
      var Yd = function () {};
      g['com.watabou.tracery.Tracery'] = Yd;
      Yd.__name__ = 'com.watabou.tracery.Tracery';
      Yd.parseTag = function (a) {
        for (
          var b = {
              symbol: null,
              preactions: [],
              postactions: [],
              modifiers: [],
            },
            c = Yd.parse(a),
            d = null,
            f = 0;
          f < c.length;

        ) {
          var h = c[f];
          ++f;
          if (0 == h.type)
            if (null == d) d = h.raw;
            else throw W.thrown('multiple main sections in ' + a);
          else b.preactions.push(h.raw);
        }
        null != d &&
          ((a = d.split('.')), (b.symbol = a[0]), (b.modifiers = a.slice(1)));
        return b;
      };
      Yd.parse = function (a) {
        var b = 0,
          c = !1,
          d = [],
          f = !1,
          h = 0,
          k = '',
          v = -1;
        if (null == a) return [];
        for (
          var p = function (b, c, f) {
              1 > c - b &&
                (1 == f &&
                  Yb.trace('' + b + ': empty tag', {
                    fileName: 'com/watabou/tracery/Tracery.hx',
                    lineNumber: 63,
                    className: 'com.watabou.tracery.Tracery',
                    methodName: 'parse',
                  }),
                2 == f &&
                  Yb.trace('' + b + ': empty action', {
                    fileName: 'com/watabou/tracery/Tracery.hx',
                    lineNumber: 65,
                    className: 'com.watabou.tracery.Tracery',
                    methodName: 'parse',
                  }));
              b =
                -1 != v ? k + '\\' + a.substring(v + 1, c) : a.substring(b, c);
              d.push({ type: f, raw: b });
              v = -1;
              k = '';
            },
            g = 0,
            t = a.length;
          g < t;

        ) {
          var m = g++;
          if (f) f = !f;
          else
            switch (a.charAt(m)) {
              case '#':
                0 == b &&
                  (c ? p(h, m, 1) : h < m && p(h, m, 0), (h = m + 1), (c = !c));
                break;
              case '[':
                0 != b || c || (h < m && p(h, m, 0), (h = m + 1));
                ++b;
                break;
              case '\\':
                f = !0;
                k += a.substring(h, m);
                h = m + 1;
                v = m;
                break;
              case ']':
                (--b, 0 != b || c || (p(h, m, 2), (h = m + 1)));
            }
        }
        h < a.length && p(h, a.length, 0);
        c &&
          Yb.trace('Unclosed tag', {
            fileName: 'com/watabou/tracery/Tracery.hx',
            lineNumber: 130,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        0 < b &&
          Yb.trace('Too many [', {
            fileName: 'com/watabou/tracery/Tracery.hx',
            lineNumber: 132,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        0 > b &&
          Yb.trace('Too many ]', {
            fileName: 'com/watabou/tracery/Tracery.hx',
            lineNumber: 134,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        g = [];
        t = 0;
        for (b = d; t < b.length; )
          ((c = b[t]), ++t, (0 != c.type || 0 < c.raw.length) && g.push(c));
        return (d = g);
      };
      var kg = function (a, b, c, d) {
        null == d.raw &&
          (Yb.trace('Empty input for node', {
            fileName: 'com/watabou/tracery/TraceryNode.hx',
            lineNumber: 35,
            className: 'com.watabou.tracery.TraceryNode',
            methodName: 'new',
          }),
          (d.raw = ''));
        this.grammar = a;
        this.parent = b;
        this.depth = null != b ? b.depth + 1 : 0;
        this.childIndex = c;
        this.raw = d.raw;
        this.type = d.type;
        this.isExpanded = !1;
      };
      g['com.watabou.tracery.TraceryNode'] = kg;
      kg.__name__ = 'com.watabou.tracery.TraceryNode';
      kg.prototype = {
        expandChildren: function (a, b) {
          this.children = [];
          this.finishedText = '';
          this.childRule = a;
          if (null != a) {
            a = Yd.parse(a);
            for (var c = 0, d = a.length; c < d; ) {
              var f = c++,
                h = new kg(this.grammar, this, f, a[f]);
              this.children[f] = h;
              b || h.expand(!1);
              this.finishedText += h.finishedText;
            }
          } else
            Yb.trace("No child rule provided, can't expand children", {
              fileName: 'com/watabou/tracery/TraceryNode.hx',
              lineNumber: 72,
              className: 'com.watabou.tracery.TraceryNode',
              methodName: 'expandChildren',
            });
        },
        expand: function (a) {
          null == a && (a = !1);
          if (!this.isExpanded)
            switch (((this.isExpanded = !0), this.type)) {
              case 0:
                this.finishedText = this.raw;
                break;
              case 1:
                var b = Yd.parseTag(this.raw);
                this.symbol = b.symbol;
                this.modifiers = b.modifiers;
                var c = [],
                  d = 0;
                for (b = b.preactions; d < b.length; ) {
                  var f = b[d];
                  ++d;
                  c.push(new lg(this, f));
                }
                this.preactions = c;
                this.postaction = [];
                c = 0;
                for (d = this.preactions; c < d.length; )
                  ((f = d[c]),
                    ++c,
                    0 == f.type && this.postaction.push(f.createUndo()));
                c = 0;
                for (d = this.preactions; c < d.length; )
                  ((f = d[c]), ++c, f.activate());
                this.finishedText = this.raw;
                c = this.grammar.selectRule(this.symbol);
                this.expandChildren(c, a);
                c = 0;
                for (d = this.modifiers; c < d.length; )
                  ((a = d[c]),
                    ++c,
                    (b = []),
                    (f = a.indexOf('(')),
                    -1 != f &&
                      ((b = a.substring(f + 1, a.indexOf(')')).split(',')),
                      (a = a.substring(0, f))),
                    (f = this.grammar.modifiers.h[a]),
                    null == f
                      ? (Yb.trace('Missing modifier ' + a, {
                          fileName: 'com/watabou/tracery/TraceryNode.hx',
                          lineNumber: 114,
                          className: 'com.watabou.tracery.TraceryNode',
                          methodName: 'expand',
                        }),
                        (this.finishedText += '((.' + a + '))'))
                      : (this.finishedText = f(this.finishedText, b)));
                c = 0;
                for (d = this.postaction; c < d.length; )
                  ((a = d[c]), ++c, a.activate());
                break;
              case 2:
                this.action = new lg(this, this.raw);
                this.action.activate();
                this.finishedText = '';
                break;
              default:
                this.expandChildren(this.raw, a);
            }
        },
        clearEscapeChars: function () {},
        __class__: kg,
      };
      var ua = function () {};
      g['com.watabou.utils.ArrayExtender'] = ua;
      ua.__name__ = 'com.watabou.utils.ArrayExtender';
      ua.revert = function (a) {
        a = a.slice();
        a.reverse();
        return a;
      };
      ua.shuffle = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.splice(
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
              (b.length + 1)) |
              0,
            0,
            d,
          );
        }
        return b;
      };
      ua.random = function (a) {
        return a[
          (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
            a.length) |
            0
        ];
      };
      ua.pick = function (a) {
        var b =
            (((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
              a.length) |
            0,
          c = a[b];
        a.splice(b, 1);
        return c;
      };
      ua.fallOff = function (a, b) {
        null == b && (b = 2);
        return a[
          (Math.pow(
            (n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647,
            b,
          ) *
            a.length) |
            0
        ];
      };
      ua.subset = function (a, b) {
        return ua.shuffle(a).slice(0, b);
      };
      ua.weighted = function (a, b) {
        for (
          var c =
              ((n.seed = (48271 * n.seed) % 2147483647 | 0) / 2147483647) *
              ua.sum(b),
            d = 0,
            f = 0,
            h = a.length;
          f < h;

        ) {
          var k = f++;
          if (c <= (d += b[k])) return a[k];
        }
        return a[0];
      };
      ua.isEmpty = function (a) {
        return 0 == a.length;
      };
      ua.min = function (a, b) {
        for (var c = a[0], d = b(c), f = 1, h = a.length; f < h; ) {
          var k = f++;
          k = a[k];
          var v = b(k);
          v < d && ((c = k), (d = v));
        }
        return c;
      };
      ua.every = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (!b(d)) return !1;
        }
        return !0;
      };
      ua.some = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (b(d)) return !0;
        }
        return !1;
      };
      ua.count = function (a, b) {
        for (var c = 0, d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          b(f) && ++c;
        }
        return c;
      };
      ua.find = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (b(d)) return d;
        }
        return null;
      };
      ua.sum = function (a) {
        for (var b = 0, c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b += d;
        }
        return b;
      };
      ua.add = function (a, b) {
        return -1 == a.indexOf(b) ? (a.push(b), !0) : !1;
      };
      ua.intersect = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          -1 != b.indexOf(f) && c.push(f);
        }
        return c;
      };
      ua.addAll = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          -1 == a.indexOf(d) && a.push(d);
        }
      };
      ua.removeAll = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          O.remove(a, d);
        }
      };
      ua.difference = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          -1 == b.indexOf(f) && c.push(f);
        }
        return c;
      };
      var ah = function () {};
      g['com.watabou.utils.ColorNames'] = ah;
      ah.__name__ = 'com.watabou.utils.ColorNames';
      ah.get = function (a) {
        for (
          var b = a >>> 16,
            c = (a >>> 8) & 255,
            d = a & 255,
            f = '',
            h = 1e10,
            k = ah.values.h,
            v = Object.keys(k),
            p = v.length,
            g = 0;
          g < p;

        ) {
          var t = v[g++],
            m = t;
          a = k[t];
          t = a >> 16;
          var n = (a >> 8) & 255;
          a &= 255;
          t = (b - t) * (b - t) + (c - n) * (c - n) + (d - a) * (d - a);
          h > oa.toFloat(t) && ((h = oa.toFloat(t)), (f = m));
        }
        return f;
      };
      var yb = function () {};
      g['com.watabou.utils.GraphicsExtender'] = yb;
      yb.__name__ = 'com.watabou.utils.GraphicsExtender';
      yb.drawPolygon = function (a, b) {
        var c = b[b.length - 1];
        a.moveTo(c.x, c.y);
        for (var d = 0; d < b.length; ) ((c = b[d]), ++d, a.lineTo(c.x, c.y));
      };
      yb.drawPolygonAt = function (a, b, c, d) {
        var f = b[b.length - 1];
        a.moveTo(f.x + c, f.y + d);
        for (var h = 0; h < b.length; )
          ((f = b[h]), ++h, a.lineTo(f.x + c, f.y + d));
      };
      yb.drawPolyline = function (a, b) {
        var c = b[0];
        a.moveTo(c.x, c.y);
        for (var d = 1, f = b.length; d < f; )
          ((c = d++), (c = b[c]), a.lineTo(c.x, c.y));
      };
      yb.drawPolylineAt = function (a, b, c, d) {
        a.moveTo(b[0].x + c, b[0].y + d);
        for (var f = 1, h = b.length; f < h; ) {
          var k = f++;
          k = b[k];
          a.lineTo(k.x + c, k.y + d);
        }
      };
      yb.dashedLine = function (a, b, c, d) {
        var f = !0,
          h = 0;
        for (a.moveTo(b.x, b.y); ; ) {
          var k = K.distance(b, c),
            v = d[h];
          if (0 < v) {
            if (k < v) {
              f && a.lineTo(c.x, c.y);
              break;
            }
            b = cb.lerp(b, c, v / k);
            f ? a.lineTo(b.x, b.y) : a.moveTo(b.x, b.y);
          }
          ++h >= d.length && (h = 0);
          f = !f;
        }
      };
      yb.dashedPolyline = function (a, b, c, d) {
        null == c && (c = !1);
        if (!(2 > b.length)) {
          var f = !0,
            h = 0,
            k = 0,
            v = d[0],
            p = c ? -1 : 0,
            g = b[c ? b.length - 1 : 0];
          c = b[c ? 0 : 1];
          for (a.moveTo(g.x, g.y); ; ) {
            var t = K.distance(g, c);
            if (k + t < v) {
              f && a.lineTo(c.x, c.y);
              if (++p >= b.length) break;
              g = c;
              c = b[p];
              k += t;
            } else
              (0 < v &&
                ((g = cb.lerp(g, c, (v - k) / t)),
                f ? a.lineTo(g.x, g.y) : a.moveTo(g.x, g.y)),
                ++h >= d.length && (h = 0),
                (v = d[h]),
                (k = 0),
                (f = !f));
          }
        }
      };
      var $f = function (a) {
        this.activated = !1;
        this.target = a;
        a.addEventListener('mouseDown', l(this, this.onMouseDown));
        a.addEventListener('mouseUp', l(this, this.onMouseUp));
      };
      g['com.watabou.utils.LongPresser'] = $f;
      $f.__name__ = 'com.watabou.utils.LongPresser';
      $f.prototype = {
        stop: function () {
          this.target.removeEventListener(
            'mouseDown',
            l(this, this.onMouseDown),
          );
          this.target.removeEventListener('mouseUp', l(this, this.onMouseUp));
          Xa.cancel(this.waiting);
        },
        onMouseDown: function (a) {
          this.source = a.target;
          this.waiting = Xa.wait($f.DELAY, l(this, this.onLongClick));
          this.activated = !1;
        },
        onMouseUp: function (a) {
          Xa.cancel(this.waiting);
        },
        onLongClick: function () {
          this.activated = !0;
          this.source.dispatchEvent(new Cb('rightClick'));
        },
        __class__: $f,
      };
      var zc = function () {};
      g['com.watabou.utils.MathUtils'] = zc;
      zc.__name__ = 'com.watabou.utils.MathUtils';
      zc.gate = function (a, b, c) {
        return a < b ? b : a < c ? a : c;
      };
      zc.cycle = function (a, b, c) {
        for (; a < b; ) a += c - b;
        for (; a > c; ) a -= c - b;
        return a;
      };
      zc.gatei = function (a, b, c) {
        return a < b ? b : a < c ? a : c;
      };
      var Zf = function () {
        this.components = [];
      };
      g['com.watabou.utils.Noise'] = Zf;
      Zf.__name__ = 'com.watabou.utils.Noise';
      Zf.fractal = function (a, b, c) {
        null == c && (c = 0.5);
        null == b && (b = 1);
        null == a && (a = 1);
        for (var d = new Zf(), f = 1, h = 0; h < a; ) {
          h++;
          var k = new ae((n.seed = (48271 * n.seed) % 2147483647 | 0));
          k.gridSize = b;
          k.amplitude = f;
          d.components.push(k);
          b *= 2;
          f *= c;
        }
        return d;
      };
      Zf.prototype = {
        get: function (a, b) {
          for (var c = 0, d = 0, f = this.components; d < f.length; ) {
            var h = f[d];
            ++d;
            c += h.get(a, b);
          }
          return c;
        },
        __class__: Zf,
      };
      var ae = function (a) {
        this.offsetX = this.offsetY = 0;
        this.gridSize = this.amplitude = 1;
        for (var b = [], c = 0; 256 > c; ) {
          var d = c++;
          b.push(ae.permutation[(d + a) % 256]);
        }
        this.p = b;
        this.p = this.p.concat(this.p);
        if (null == ae.smooth) {
          b = [];
          for (c = 0; 4096 > c; )
            ((d = c++),
              (a = d / 4096),
              b.push(a * a * a * (a * (6 * a - 15) + 10)));
          ae.smooth = b;
        }
      };
      g['com.watabou.utils.Perlin'] = ae;
      ae.__name__ = 'com.watabou.utils.Perlin';
      ae.prototype = {
        get: function (a, b) {
          a = a * this.gridSize + this.offsetX;
          0 > a && (a += 256);
          b = b * this.gridSize + this.offsetY;
          0 > b && (b += 256);
          var c = Math.floor(a),
            d = c + 1,
            f = a - c,
            h = ae.smooth[(4096 * f) | 0];
          a = Math.floor(b);
          var k = a + 1,
            v = b - a,
            p = ae.smooth[(4096 * v) | 0];
          b = this.p[this.p[d] + a];
          var g = this.p[this.p[c] + k];
          d = this.p[this.p[d] + k];
          switch (this.p[this.p[c] + a] & 3) {
            case 0:
              c = f + v;
              break;
            case 1:
              c = f - v;
              break;
            case 2:
              c = -f + v;
              break;
            case 3:
              c = -f - v;
              break;
            default:
              c = 0;
          }
          a = f - 1;
          switch (b & 3) {
            case 0:
              b = a + v;
              break;
            case 1:
              b = a - v;
              break;
            case 2:
              b = -a + v;
              break;
            case 3:
              b = -a - v;
              break;
            default:
              b = 0;
          }
          k = c + (b - c) * h;
          b = v - 1;
          switch (g & 3) {
            case 0:
              c = f + b;
              break;
            case 1:
              c = f - b;
              break;
            case 2:
              c = -f + b;
              break;
            case 3:
              c = -f - b;
              break;
            default:
              c = 0;
          }
          a = f - 1;
          b = v - 1;
          switch (d & 3) {
            case 0:
              b = a + b;
              break;
            case 1:
              b = a - b;
              break;
            case 2:
              b = -a + b;
              break;
            case 3:
              b = -a - b;
              break;
            default:
              b = 0;
          }
          return this.amplitude * (k + (c + (b - c) * h - k) * p);
        },
        __class__: ae,
      };
      var Ub = (F['com.watabou.utils.ParamType'] = {
        __ename__: 'com.watabou.utils.ParamType',
        __constructs__: null,
        COLOR: {
          _hx_name: 'COLOR',
          _hx_index: 0,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        MULTI: {
          _hx_name: 'MULTI',
          _hx_index: 1,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        FONT: {
          _hx_name: 'FONT',
          _hx_index: 2,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        FLOAT: {
          _hx_name: 'FLOAT',
          _hx_index: 3,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        INT: {
          _hx_name: 'INT',
          _hx_index: 4,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        STRING: {
          _hx_name: 'STRING',
          _hx_index: 5,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
        BOOL: {
          _hx_name: 'BOOL',
          _hx_index: 6,
          __enum__: 'com.watabou.utils.ParamType',
          toString: q,
        },
      });
      Ub.__constructs__ = [
        Ub.COLOR,
        Ub.MULTI,
        Ub.FONT,
        Ub.FLOAT,
        Ub.INT,
        Ub.STRING,
        Ub.BOOL,
      ];
      var ec = function () {
        this.params = [];
      };
      g['com.watabou.utils.Palette'] = ec;
      ec.__name__ = 'com.watabou.utils.Palette';
      ec.float2str = function (a) {
        a = null == a ? 'null' : '' + a;
        -1 == a.indexOf('.') && (a += '.0');
        return a;
      };
      ec.font2format = function (a) {
        if (null == a) return null;
        if (null != a.face) var b = a.face;
        else
          null != a.embedded && Zb.exists(a.embedded)
            ? ((b = Zb.getFont(a.embedded)), (b = null != b ? b.name : null))
            : (b = '_serif');
        return new $d(b, a.size, 0, a.bold, a.italic);
      };
      ec.fromData = function (a) {
        for (var b = new ec(), c = ya.fields(a), d = 0; d < c.length; ) {
          var f = c[d++],
            h = f;
          f = a[f];
          if ('number' == typeof f && (f | 0) === f) b.setInt(h, f);
          else if ('number' == typeof f) b.setFloat(h, f);
          else if ('boolean' == typeof f) b.setBool(h, f);
          else if ('string' == typeof f) {
            if (7 == f.length && '#' == f.charAt(0)) {
              var k = I.parseInt('0x' + O.substr(f, 1, null));
              if (null != k) {
                b.setColor(h, k);
                continue;
              }
            }
            k = parseFloat(f);
            if (isNaN(k))
              switch (f) {
                case 'false':
                  b.setBool(h, !1);
                  break;
                case 'true':
                  b.setBool(h, !0);
                  break;
                default:
                  b.setString(h, f);
              }
            else -1 == f.indexOf('.') ? b.setInt(h, k | 0) : b.setFloat(h, k);
          } else if (f instanceof Array) {
            k = [];
            for (var v = 0; v < f.length; ) {
              var p = f[v];
              ++v;
              p = I.parseInt('0x' + O.substr(p, 1, null));
              null != p && k.push(p);
            }
            b.setMulti(h, k);
          } else null != f && b.setFont(h, f);
        }
        return b;
      };
      ec.fromJSON = function (a) {
        a = JSON.parse(a);
        return ec.fromData(a);
      };
      ec.weighted = function (a, b) {
        null == b && (b = 2);
        var c = a.length;
        if (1 == c) return a[0];
        var d = null == b ? 'null' : '' + b,
          f = ec.weights.h[d];
        null == f && ((f = []), (ec.weights.h[d] = f));
        if (f.length >= c) return ua.weighted(a, f[c - 1]);
        for (d = f.length; d < c; ) {
          var h = d++;
          0 == h
            ? f.push([1])
            : ((h = f[h - 1]), (h = [h[0] * b].concat(h)), f.push(h));
        }
        return ua.weighted(a, f[c - 1]);
      };
      ec.prototype = {
        getColor: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a) {
              if (f.type == Ub.COLOR) return f.color;
              if (f.type == Ub.MULTI) return f.multi[0];
              break;
            }
          }
          return b;
        },
        getMulti: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a) {
              if (f.type == Ub.MULTI) return f.multi;
              if (f.type == Ub.COLOR) return [f.color];
              break;
            }
          }
          return [b];
        },
        getFont: function (a, b) {
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Ub.FONT) return f.font;
          }
          return b;
        },
        getFloat: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Ub.FLOAT) return f.float;
          }
          return b;
        },
        getInt: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Ub.INT) return f.int;
          }
          return b;
        },
        getString: function (a, b) {
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Ub.STRING) return f.string;
          }
          return b;
        },
        getBool: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Ub.BOOL) return f.bool;
          }
          return b;
        },
        setColor: function (a, b) {
          this.params.push({ id: a, type: Ub.COLOR, color: b });
        },
        setMulti: function (a, b) {
          this.params.push({ id: a, type: Ub.MULTI, multi: b });
        },
        setFont: function (a, b) {
          this.params.push({ id: a, type: Ub.FONT, font: b });
        },
        setFloat: function (a, b) {
          this.params.push({ id: a, type: Ub.FLOAT, float: b });
        },
        setInt: function (a, b) {
          this.params.push({ id: a, type: Ub.INT, int: b });
        },
        setString: function (a, b) {
          this.params.push({ id: a, type: Ub.STRING, string: b });
        },
        setBool: function (a, b) {
          this.params.push({ id: a, type: Ub.BOOL, bool: b });
        },
        data: function () {
          for (var a = {}, b = 0, c = this.params; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                a[d.id] = '#' + M.hex(d.color, 6);
                break;
              case 1:
                var f = d.id,
                  h = [],
                  k = 0;
                for (d = d.multi; k < d.length; ) {
                  var v = d[k];
                  ++k;
                  h.push('#' + M.hex(v, 6));
                }
                a[f] = h;
                break;
              case 2:
                a[d.id] = d.font;
                break;
              case 3:
                a[d.id] = ec.float2str(d.float);
                break;
              case 4:
                a[d.id] = null == d.int ? 'null' : '' + d.int;
                break;
              case 5:
                a[d.id] = d.string;
                break;
              case 6:
                a[d.id] = null == d.bool ? 'null' : '' + d.bool;
            }
          }
          return a;
        },
        json: function () {
          return JSON.stringify(this.data(), null, '  ');
        },
        __class__: ec,
      };
      var gd = function () {};
      g['com.watabou.utils.SetUtils'] = gd;
      gd.__name__ = 'com.watabou.utils.SetUtils';
      gd.fromArray = function (a) {
        for (var b = new na(), c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.set(d, !0);
        }
        return b;
      };
      gd.toArray = function (a) {
        for (var b = [], c = a.keys(); c.hasNext(); ) {
          var d = c.next();
          a.get(d);
          b.push(d);
        }
        return b;
      };
      gd.removeAll = function (a, b) {
        for (var c = b.keys(); c.hasNext(); ) {
          var d = c.next();
          b.get(d);
          a.remove(d);
        }
      };
      gd.isEmpty = function (a) {
        for (a = a.iterator(); a.hasNext(); ) return (a.next(), !1);
        return !0;
      };
      gd.filter = function (a, b) {
        for (var c = new na(), d = a.keys(); d.hasNext(); ) {
          var f = d.next();
          a.get(f);
          b(f) && c.set(f, !0);
        }
        return c;
      };
      var ne = function () {};
      g['com.watabou.utils.Stopwatch'] = ne;
      ne.__name__ = 'com.watabou.utils.Stopwatch';
      ne.start = function () {
        ne.startTime = Ja.getTimer();
      };
      ne.next = function () {
        var a = Ja.getTimer(),
          b = a - ne.startTime;
        ne.startTime = a;
        return b;
      };
      var Le = function () {};
      g['com.watabou.utils.StringUtils'] = Le;
      Le.__name__ = 'com.watabou.utils.StringUtils';
      Le.capitalize = function (a) {
        return O.substr(a, 0, 1).toUpperCase() + O.substr(a, 1, null);
      };
      Le.capitalizeAll = function (a) {
        var b = [],
          c = 0;
        for (a = a.split(' '); c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(Le.capitalize(d));
        }
        return b.join(' ');
      };
      var xd = function (a) {
        null == a && (a = []);
        this.valueClasses = a;
        this.slots = $c.NIL;
        this.priorityBased = !1;
      };
      g['msignal.Signal'] = xd;
      xd.__name__ = 'msignal.Signal';
      xd.prototype = {
        add: function (a) {
          return this.registerListener(a);
        },
        addOnce: function (a) {
          return this.registerListener(a, !0);
        },
        addWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !1, b);
        },
        addOnceWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !0, b);
        },
        remove: function (a) {
          var b = this.slots.find(a);
          if (null == b) return null;
          this.slots = this.slots.filterNot(a);
          return b;
        },
        removeAll: function () {
          this.slots = $c.NIL;
        },
        registerListener: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return this.registrationPossible(a, b)
            ? ((a = this.createSlot(a, b, c)),
              this.priorityBased || 0 == c || (this.priorityBased = !0),
              (this.slots =
                this.priorityBased || 0 != c
                  ? this.slots.insertWithPriority(a)
                  : this.slots.prepend(a)),
              a)
            : this.slots.find(a);
        },
        registrationPossible: function (a, b) {
          return this.slots.nonEmpty && null != this.slots.find(a) ? !1 : !0;
        },
        createSlot: function (a, b, c) {
          return null;
        },
        get_numListeners: function () {
          return this.slots.get_length();
        },
        __class__: xd,
        __properties__: { get_numListeners: 'get_numListeners' },
      };
      var tc = function (a) {
        xd.call(this, [a]);
      };
      g['msignal.Signal1'] = tc;
      tc.__name__ = 'msignal.Signal1';
      tc.__super__ = xd;
      tc.prototype = u(xd.prototype, {
        dispatch: function (a) {
          for (var b = this.slots; b.nonEmpty; )
            (b.head.execute(a), (b = b.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new hh(this, a, b, c);
        },
        __class__: tc,
      });
      var $c = function (a, b) {
        this.nonEmpty = !1;
        null == a && null == b
          ? (this.nonEmpty = !1)
          : null != a &&
            ((this.head = a),
            (this.tail = null == b ? $c.NIL : b),
            (this.nonEmpty = !0));
      };
      g['msignal.SlotList'] = $c;
      $c.__name__ = 'msignal.SlotList';
      $c.prototype = {
        get_length: function () {
          if (!this.nonEmpty) return 0;
          if (this.tail == $c.NIL) return 1;
          for (var a = 0, b = this; b.nonEmpty; ) (++a, (b = b.tail));
          return a;
        },
        prepend: function (a) {
          return new $c(a, this);
        },
        insertWithPriority: function (a) {
          if (!this.nonEmpty) return new $c(a);
          var b = a.priority;
          if (b >= this.head.priority) return this.prepend(a);
          for (var c = new $c(this.head), d = c, f = this.tail; f.nonEmpty; ) {
            if (b > f.head.priority) return ((d.tail = f.prepend(a)), c);
            d = d.tail = new $c(f.head);
            f = f.tail;
          }
          d.tail = new $c(a);
          return c;
        },
        filterNot: function (a) {
          if (!this.nonEmpty || null == a) return this;
          if (this.head.listener == a) return this.tail;
          for (var b = new $c(this.head), c = b, d = this.tail; d.nonEmpty; ) {
            if (d.head.listener == a) return ((c.tail = d.tail), b);
            c = c.tail = new $c(d.head);
            d = d.tail;
          }
          return this;
        },
        find: function (a) {
          if (!this.nonEmpty) return null;
          for (var b = this; b.nonEmpty; ) {
            if (b.head.listener == a) return b.head;
            b = b.tail;
          }
          return null;
        },
        __class__: $c,
        __properties__: { get_length: 'get_length' },
      };
      var Xa = function () {};
      g['com.watabou.utils.Updater'] = Xa;
      Xa.__name__ = 'com.watabou.utils.Updater';
      Xa.__properties__ = { get_tick: 'get_tick' };
      Xa.get_tick = function () {
        null == Xa.source && Xa.useTimer(60);
        return Xa._tick;
      };
      Xa.fire = function () {
        var a = Ja.getTimer();
        0 == Xa.lastTime
          ? Xa._tick.dispatch(0)
          : Xa._tick.dispatch(((a - Xa.lastTime) / 1e3) * Xa.timeScale);
        Xa.lastTime = a;
      };
      Xa.useTimer = function (a) {
        null != Xa.source && Xa.source.stop();
        Xa.source = new ih(a);
      };
      Xa.useEnterFrame = function (a) {
        null != Xa.source && Xa.source.stop();
        Xa.source = new jh(a);
      };
      Xa.wait = function (a, b) {
        var c = 0,
          d = null;
        d = function (f) {
          (c += f) >= a && (Xa.get_tick().remove(d), b());
        };
        Xa.get_tick().add(d);
        return d;
      };
      Xa.cancel = function (a) {
        Xa.get_tick().remove(a);
      };
      Xa.stop = function () {
        null != Xa.source && (Xa.source.stop(), (Xa.source = null));
      };
      var tf = function () {};
      g['com.watabou.utils.RecurringEventDispatcher'] = tf;
      tf.__name__ = 'com.watabou.utils.RecurringEventDispatcher';
      tf.prototype = { stop: function () {}, __class__: tf };
      var ih = function (a) {
        this.timer = new kh(a);
        this.timer.addEventListener('timer', l(this, this.onTimer));
        this.timer.start();
      };
      g['com.watabou.utils._Updater.TimerEventDispatcher'] = ih;
      ih.__name__ = 'com.watabou.utils._Updater.TimerEventDispatcher';
      ih.__super__ = tf;
      ih.prototype = u(tf.prototype, {
        onTimer: function (a) {
          Xa.fire();
          a.updateAfterEvent();
        },
        stop: function () {
          this.timer.stop();
        },
        __class__: ih,
      });
      var jh = function (a) {
        this.dispObj = a;
        a.addEventListener('enterFrame', l(this, this.onEnterFrame));
      };
      g['com.watabou.utils._Updater.FrameEventDispatcher'] = jh;
      jh.__name__ = 'com.watabou.utils._Updater.FrameEventDispatcher';
      jh.__super__ = tf;
      jh.prototype = u(tf.prototype, {
        onEnterFrame: function (a) {
          Xa.fire();
        },
        stop: function () {
          this.dispObj.removeEventListener(
            'enterFrame',
            l(this, this.onEnterFrame),
          );
        },
        __class__: jh,
      });
      var yd = (F['haxe.StackItem'] = {
        __ename__: 'haxe.StackItem',
        __constructs__: null,
        CFunction: {
          _hx_name: 'CFunction',
          _hx_index: 0,
          __enum__: 'haxe.StackItem',
          toString: q,
        },
        Module:
          ((H = function (a) {
            return {
              _hx_index: 1,
              m: a,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (H._hx_name = 'Module'),
          (H.__params__ = ['m']),
          H),
        FilePos:
          ((H = function (a, b, c, d) {
            return {
              _hx_index: 2,
              s: a,
              file: b,
              line: c,
              column: d,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (H._hx_name = 'FilePos'),
          (H.__params__ = ['s', 'file', 'line', 'column']),
          H),
        Method:
          ((H = function (a, b) {
            return {
              _hx_index: 3,
              classname: a,
              method: b,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (H._hx_name = 'Method'),
          (H.__params__ = ['classname', 'method']),
          H),
        LocalFunction:
          ((H = function (a) {
            return {
              _hx_index: 4,
              v: a,
              __enum__: 'haxe.StackItem',
              toString: q,
            };
          }),
          (H._hx_name = 'LocalFunction'),
          (H.__params__ = ['v']),
          H),
      });
      yd.__constructs__ = [
        yd.CFunction,
        yd.Module,
        yd.FilePos,
        yd.Method,
        yd.LocalFunction,
      ];
      var we = {
          callStack: function () {
            return Qa.toHaxe(Qa.callStack());
          },
          exceptionStack: function (a) {
            null == a && (a = !1);
            var b = Qa.toHaxe(Qa.exceptionStack());
            return a ? b : we.subtract(b, we.callStack());
          },
          toString: function (a) {
            for (var b = new z(), c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              b.b += '\nCalled from ';
              we.itemToString(b, d);
            }
            return b.b;
          },
          subtract: function (a, b) {
            for (var c = -1, d = -1; ++d < a.length; ) {
              for (var f = 0, h = b.length; f < h; ) {
                var k = f++;
                if (we.equalItems(a[d], b[k])) {
                  if ((0 > c && (c = d), ++d, d >= a.length)) break;
                } else c = -1;
              }
              if (0 <= c) break;
            }
            return 0 <= c ? a.slice(0, c) : a;
          },
          equalItems: function (a, b) {
            if (null == a) return null == b ? !0 : !1;
            switch (a._hx_index) {
              case 0:
                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
              case 1:
                return null == b ? !1 : 1 == b._hx_index ? a.m == b.m : !1;
              case 2:
                if (null == b) return !1;
                if (2 == b._hx_index) {
                  var c = b.s,
                    d = b.line,
                    f = b.column,
                    h = a.column,
                    k = a.line,
                    v = a.s;
                  return a.file == b.file && k == d && h == f
                    ? we.equalItems(v, c)
                    : !1;
                }
                return !1;
              case 3:
                return null == b
                  ? !1
                  : 3 == b._hx_index
                    ? ((c = b.method),
                      (d = a.method),
                      a.classname == b.classname ? d == c : !1)
                    : !1;
              case 4:
                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1;
            }
          },
          itemToString: function (a, b) {
            switch (b._hx_index) {
              case 0:
                a.b += 'a C function';
                break;
              case 1:
                b = b.m;
                a.b += 'module ';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 2:
                var c = b.s,
                  d = b.file,
                  f = b.line;
                b = b.column;
                null != c && (we.itemToString(a, c), (a.b += ' ('));
                a.b += null == d ? 'null' : '' + d;
                a.b += ' line ';
                a.b += null == f ? 'null' : '' + f;
                null != b &&
                  ((a.b += ' column '), (a.b += null == b ? 'null' : '' + b));
                null != c && (a.b += ')');
                break;
              case 3:
                c = b.classname;
                b = b.method;
                a.b += I.string(null == c ? '<unknown>' : c);
                a.b += '.';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 4:
                ((b = b.v),
                  (a.b += 'local function #'),
                  (a.b += null == b ? 'null' : '' + b));
            }
          },
        },
        W = function (a, b, c) {
          Error.call(this, a);
          this.message = a;
          this.__previousException = b;
          this.__nativeException = null != c ? c : this;
          this.__skipStack = 0;
          a = Error.prepareStackTrace;
          Error.prepareStackTrace = function (a) {
            return a.stack;
          };
          if (c instanceof Error) this.stack = c.stack;
          else {
            c = null;
            if (Error.captureStackTrace)
              (Error.captureStackTrace(this, W), (c = this));
            else if (((c = Error()), 'undefined' == typeof c.stack)) {
              try {
                throw c;
              } catch (d) {}
              this.__skipStack++;
            }
            this.stack = c.stack;
          }
          Error.prepareStackTrace = a;
        };
      g['haxe.Exception'] = W;
      W.__name__ = 'haxe.Exception';
      W.caught = function (a) {
        return a instanceof W
          ? a
          : a instanceof Error
            ? new W(a.message, null, a)
            : new mg(a, null, a);
      };
      W.thrown = function (a) {
        if (a instanceof W) return a.get_native();
        if (a instanceof Error) return a;
        a = new mg(a);
        a.__skipStack++;
        return a;
      };
      W.__super__ = Error;
      W.prototype = u(Error.prototype, {
        unwrap: function () {
          return this.__nativeException;
        },
        toString: function () {
          return this.get_message();
        },
        __shiftStack: function () {
          this.__skipStack++;
        },
        get_message: function () {
          return this.message;
        },
        get_native: function () {
          return this.__nativeException;
        },
        get_stack: function () {
          var a = this.__exceptionStack;
          null == a &&
            ((a = Qa.toHaxe(Qa.normalize(this.stack), this.__skipStack)),
            this.setProperty('__exceptionStack', a));
          return a;
        },
        setProperty: function (a, b) {
          try {
            Object.defineProperty(this, a, { value: b });
          } catch (c) {
            this[a] = b;
          }
        },
        __class__: W,
        __properties__: {
          get_native: 'get_native',
          get_stack: 'get_stack',
          get_message: 'get_message',
        },
      });
      var ab = function (a, b) {
        this.high = a;
        this.low = b;
      };
      g['haxe._Int64.___Int64'] = ab;
      ab.__name__ = 'haxe._Int64.___Int64';
      ab.prototype = { __class__: ab };
      var Yb = function () {};
      g['haxe.Log'] = Yb;
      Yb.__name__ = 'haxe.Log';
      Yb.formatOutput = function (a, b) {
        var c = I.string(a);
        if (null == b) return c;
        var d = b.fileName + ':' + b.lineNumber;
        if (null != b.customParams) {
          var f = 0;
          for (b = b.customParams; f < b.length; )
            ((a = b[f]), ++f, (c += ', ' + I.string(a)));
        }
        return d + ': ' + c;
      };
      Yb.trace = function (a, b) {
        a = Yb.formatOutput(a, b);
        'undefined' != typeof console && null != console.log && console.log(a);
      };
      var Qa = function () {};
      g['haxe.NativeStackTrace'] = Qa;
      Qa.__name__ = 'haxe.NativeStackTrace';
      Qa.saveStack = function (a) {
        Qa.lastError = a;
      };
      Qa.callStack = function () {
        var a = Error(''),
          b = Qa.tryHaxeStack(a);
        if ('undefined' == typeof b) {
          try {
            throw a;
          } catch (c) {}
          b = a.stack;
        }
        return Qa.normalize(b, 2);
      };
      Qa.exceptionStack = function () {
        return Qa.normalize(Qa.tryHaxeStack(Qa.lastError));
      };
      Qa.toHaxe = function (a, b) {
        null == b && (b = 0);
        if (null == a) return [];
        if ('string' == typeof a) {
          a = a.split('\n');
          'Error' == a[0] && a.shift();
          for (var c = [], d = 0, f = a.length; d < f; ) {
            var h = d++;
            if (!(b > h)) {
              var k = a[h];
              h = k.match(
                /^    at ([$A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/,
              );
              if (null != h) {
                k = h[1].split('.');
                '$hxClasses' == k[0] && k.shift();
                var v = k.pop(),
                  p = h[2],
                  g = I.parseInt(h[3]);
                h = I.parseInt(h[4]);
                c.push(
                  yd.FilePos(
                    'Anonymous function' == v
                      ? yd.LocalFunction()
                      : 'Global code' == v
                        ? null
                        : yd.Method(k.join('.'), v),
                    p,
                    g,
                    h,
                  ),
                );
              } else c.push(yd.Module(M.trim(k)));
            }
          }
          return c;
        }
        return 0 < b && Array.isArray(a) ? a.slice(b) : a;
      };
      Qa.tryHaxeStack = function (a) {
        if (null == a) return [];
        var b = Error.prepareStackTrace;
        Error.prepareStackTrace = Qa.prepareHxStackTrace;
        a = a.stack;
        Error.prepareStackTrace = b;
        return a;
      };
      Qa.prepareHxStackTrace = function (a, b) {
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          null != Qa.wrapCallSite && (d = Qa.wrapCallSite(d));
          var f = null,
            h = d.getFunctionName();
          if (null != h) {
            var k = h.lastIndexOf('.');
            0 <= k
              ? ((f = h.substring(0, k)),
                (h = h.substring(k + 1)),
                (f = yd.Method(f, h)))
              : (f = yd.Method(null, h));
          }
          h = d.getFileName();
          k = null == h ? -1 : h.indexOf('file:');
          null != Qa.wrapCallSite && 0 < k && (h = h.substring(k + 6));
          a.push(yd.FilePos(f, h, d.getLineNumber(), d.getColumnNumber()));
        }
        return a;
      };
      Qa.normalize = function (a, b) {
        null == b && (b = 0);
        if (Array.isArray(a) && 0 < b) return a.slice(b);
        if ('string' == typeof a) {
          switch (a.substring(0, 6)) {
            case 'Error\n':
            case 'Error:':
              ++b;
          }
          return Qa.skipLines(a, b);
        }
        return a;
      };
      Qa.skipLines = function (a, b, c) {
        null == c && (c = 0);
        return 0 < b
          ? ((c = a.indexOf('\n', c)), 0 > c ? '' : Qa.skipLines(a, --b, c + 1))
          : a.substring(c);
      };
      var ad = function () {
        this.buf = new z();
        this.cache = [];
        this.useCache = ad.USE_CACHE;
        this.useEnumIndex = ad.USE_ENUM_INDEX;
        this.shash = new Ia();
        this.scount = 0;
      };
      g['haxe.Serializer'] = ad;
      ad.__name__ = 'haxe.Serializer';
      ad.run = function (a) {
        var b = new ad();
        b.serialize(a);
        return b.toString();
      };
      ad.prototype = {
        toString: function () {
          return this.buf.b;
        },
        serializeString: function (a) {
          var b = this.shash.h[a];
          null != b
            ? ((this.buf.b += 'R'), (this.buf.b += null == b ? 'null' : '' + b))
            : ((this.shash.h[a] = this.scount++),
              (this.buf.b += 'y'),
              (a = encodeURIComponent(a)),
              (this.buf.b += I.string(a.length)),
              (this.buf.b += ':'),
              (this.buf.b += null == a ? 'null' : '' + a));
        },
        serializeRef: function (a) {
          for (var b = typeof a, c = 0, d = this.cache.length; c < d; ) {
            var f = c++,
              h = this.cache[f];
            if (typeof h == b && h == a)
              return (
                (this.buf.b += 'r'),
                (this.buf.b += null == f ? 'null' : '' + f),
                !0
              );
          }
          this.cache.push(a);
          return !1;
        },
        serializeFields: function (a) {
          for (var b = 0, c = ya.fields(a); b < c.length; ) {
            var d = c[b];
            ++b;
            this.serializeString(d);
            this.serialize(ya.field(a, d));
          }
          this.buf.b += 'g';
        },
        serialize: function (a) {
          var b = w.typeof(a);
          switch (b._hx_index) {
            case 0:
              this.buf.b += 'n';
              break;
            case 1:
              if (0 == a) {
                this.buf.b += 'z';
                break;
              }
              this.buf.b += 'i';
              this.buf.b += null == a ? 'null' : '' + a;
              break;
            case 2:
              isNaN(a)
                ? (this.buf.b += 'k')
                : isFinite(a)
                  ? ((this.buf.b += 'd'),
                    (this.buf.b += null == a ? 'null' : '' + a))
                  : (this.buf.b += 0 > a ? 'm' : 'p');
              break;
            case 3:
              this.buf.b += a ? 't' : 'f';
              break;
            case 4:
              Ua.__instanceof(a, Yj)
                ? ((a = a.__name__),
                  (this.buf.b += 'A'),
                  this.serializeString(a))
                : Ua.__instanceof(a, Zj)
                  ? ((this.buf.b += 'B'), this.serializeString(a.__ename__))
                  : (this.useCache && this.serializeRef(a)) ||
                    ((this.buf.b += 'o'), this.serializeFields(a));
              break;
            case 5:
              throw W.thrown('Cannot serialize function');
            case 6:
              b = b.c;
              if (b == String) {
                this.serializeString(a);
                break;
              }
              if (this.useCache && this.serializeRef(a)) break;
              switch (b) {
                case Array:
                  var c = 0;
                  this.buf.b += 'a';
                  for (var d = 0, f = a.length; d < f; )
                    ((b = d++),
                      null == a[b]
                        ? ++c
                        : (0 < c &&
                            (1 == c
                              ? (this.buf.b += 'n')
                              : ((this.buf.b += 'u'),
                                (this.buf.b += null == c ? 'null' : '' + c)),
                            (c = 0)),
                          this.serialize(a[b])));
                  0 < c &&
                    (1 == c
                      ? (this.buf.b += 'n')
                      : ((this.buf.b += 'u'),
                        (this.buf.b += null == c ? 'null' : '' + c)));
                  this.buf.b += 'h';
                  break;
                case Date:
                  this.buf.b += 'v';
                  this.buf.b += I.string(a.getTime());
                  break;
                case ac:
                  this.buf.b += 'q';
                  for (b = a.keys(); b.hasNext(); )
                    ((c = b.next()),
                      (this.buf.b += ':'),
                      (this.buf.b += null == c ? 'null' : '' + c),
                      this.serialize(a.h[c]));
                  this.buf.b += 'h';
                  break;
                case Ya:
                  this.buf.b += 'l';
                  for (a = a.h; null != a; )
                    ((b = a.item), (a = a.next), this.serialize(b));
                  this.buf.b += 'h';
                  break;
                case na:
                  this.buf.b += 'M';
                  for (b = a.keys(); b.hasNext(); ) {
                    c = b.next();
                    var h = ya.field(c, '__id__');
                    ya.deleteField(c, '__id__');
                    this.serialize(c);
                    c.__id__ = h;
                    this.serialize(a.h[c.__id__]);
                  }
                  this.buf.b += 'h';
                  break;
                case Ia:
                  this.buf.b += 'b';
                  c = Object.keys(a.h);
                  h = c.length;
                  for (d = 0; d < h; )
                    ((b = c[d++]),
                      this.serializeString(b),
                      this.serialize(a.h[b]));
                  this.buf.b += 'h';
                  break;
                case tb:
                  this.buf.b += 's';
                  this.buf.b += I.string(Math.ceil((8 * a.length) / 6));
                  this.buf.b += ':';
                  b = 0;
                  c = a.length - 2;
                  h = ad.BASE64_CODES;
                  if (null == h) {
                    h = Array(ad.BASE64.length);
                    d = 0;
                    for (f = ad.BASE64.length; d < f; ) {
                      var k = d++;
                      h[k] = O.cca(ad.BASE64, k);
                    }
                    ad.BASE64_CODES = h;
                  }
                  for (; b < c; )
                    ((d = a.b[b++]),
                      (f = a.b[b++]),
                      (k = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(h[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        h[((d << 4) | (f >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(
                        h[((f << 2) | (k >> 6)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(h[k & 63])));
                  b == c
                    ? ((d = a.b[b++]),
                      (f = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(h[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        h[((d << 4) | (f >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(h[(f << 2) & 63])))
                    : b == c + 1 &&
                      ((d = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(h[d >> 2])),
                      (this.buf.b += String.fromCodePoint(h[(d << 4) & 63])));
                  break;
                default:
                  (this.useCache && this.cache.pop(),
                    null != a.hxSerialize
                      ? ((this.buf.b += 'C'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        a.hxSerialize(this),
                        (this.buf.b += 'g'))
                      : ((this.buf.b += 'c'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        this.serializeFields(a)));
              }
              break;
            case 7:
              b = b.e;
              if (this.useCache) {
                if (this.serializeRef(a)) break;
                this.cache.pop();
              }
              this.buf.b += I.string(this.useEnumIndex ? 'j' : 'w');
              this.serializeString(b.__ename__);
              this.useEnumIndex
                ? ((this.buf.b += ':'), (this.buf.b += I.string(a._hx_index)))
                : ((b = a),
                  this.serializeString(
                    F[b.__enum__].__constructs__[b._hx_index]._hx_name,
                  ));
              this.buf.b += ':';
              c = w.enumParameters(a);
              this.buf.b += I.string(c.length);
              for (b = 0; b < c.length; ) ((h = c[b]), ++b, this.serialize(h));
              this.useCache && this.cache.push(a);
              break;
            default:
              throw W.thrown('Cannot serialize ' + I.string(a));
          }
        },
        __class__: ad,
      };
      var Pe = function (a) {
        var b = this;
        this.id = setInterval(function () {
          b.run();
        }, a);
      };
      g['haxe.Timer'] = Pe;
      Pe.__name__ = 'haxe.Timer';
      Pe.delay = function (a, b) {
        var c = new Pe(b);
        c.run = function () {
          c.stop();
          a();
        };
        return c;
      };
      Pe.prototype = {
        stop: function () {
          null != this.id && (clearInterval(this.id), (this.id = null));
        },
        run: function () {},
        __class__: Pe,
      };
      var lh = function () {};
      g['haxe._Unserializer.DefaultResolver'] = lh;
      lh.__name__ = 'haxe._Unserializer.DefaultResolver';
      lh.prototype = {
        resolveClass: function (a) {
          return g[a];
        },
        resolveEnum: function (a) {
          return F[a];
        },
        __class__: lh,
      };
      var Rc = function (a) {
        this.buf = a;
        this.length = this.buf.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = Rc.DEFAULT_RESOLVER;
        null == a && ((a = new lh()), (Rc.DEFAULT_RESOLVER = a));
        this.resolver = a;
      };
      g['haxe.Unserializer'] = Rc;
      Rc.__name__ = 'haxe.Unserializer';
      Rc.initCodes = function () {
        for (var a = [], b = 0, c = Rc.BASE64.length; b < c; ) {
          var d = b++;
          a[Rc.BASE64.charCodeAt(d)] = d;
        }
        return a;
      };
      Rc.run = function (a) {
        return new Rc(a).unserialize();
      };
      Rc.prototype = {
        setResolver: function (a) {
          null == a
            ? (null == uf.instance && (uf.instance = new uf()),
              (this.resolver = uf.instance))
            : (this.resolver = a);
        },
        readDigits: function () {
          for (var a = 0, b = !1, c = this.pos; ; ) {
            var d = this.buf.charCodeAt(this.pos);
            if (d != d) break;
            if (45 == d) {
              if (this.pos != c) break;
              b = !0;
            } else {
              if (48 > d || 57 < d) break;
              a = 10 * a + (d - 48);
            }
            this.pos++;
          }
          b && (a *= -1);
          return a;
        },
        readFloat: function () {
          for (var a = this.pos; ; ) {
            var b = this.buf.charCodeAt(this.pos);
            if (b != b) break;
            if ((43 <= b && 58 > b) || 101 == b || 69 == b) this.pos++;
            else break;
          }
          return parseFloat(O.substr(this.buf, a, this.pos - a));
        },
        unserializeObject: function (a) {
          for (;;) {
            if (this.pos >= this.length) throw W.thrown('Invalid object');
            if (103 == this.buf.charCodeAt(this.pos)) break;
            var b = this.unserialize();
            if ('string' != typeof b) throw W.thrown('Invalid object key');
            var c = this.unserialize();
            a[b] = c;
          }
          this.pos++;
        },
        unserializeEnum: function (a, b) {
          if (58 != this.buf.charCodeAt(this.pos++))
            throw W.thrown('Invalid enum format');
          var c = this.readDigits();
          if (0 == c) return w.createEnum(a, b);
          for (var d = []; 0 < c--; ) d.push(this.unserialize());
          return w.createEnum(a, b, d);
        },
        unserialize: function () {
          switch (this.buf.charCodeAt(this.pos++)) {
            case 65:
              var a = this.unserialize(),
                b = this.resolver.resolveClass(a);
              if (null == b) throw W.thrown('Class not found ' + a);
              return b;
            case 66:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw W.thrown('Enum not found ' + a);
              return b;
            case 67:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw W.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              b.hxUnserialize(this);
              if (103 != this.buf.charCodeAt(this.pos++))
                throw W.thrown('Invalid custom data');
              return b;
            case 77:
              a = new na();
              this.cache.push(a);
              for (var c; 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()), a.set(b, this.unserialize()));
              this.pos++;
              return a;
            case 82:
              a = this.readDigits();
              if (0 > a || a >= this.scache.length)
                throw W.thrown('Invalid string reference');
              return this.scache[a];
            case 97:
              b = [];
              for (this.cache.push(b); ; ) {
                c = this.buf.charCodeAt(this.pos);
                if (104 == c) {
                  this.pos++;
                  break;
                }
                117 == c
                  ? (this.pos++,
                    (a = this.readDigits()),
                    (b[b.length + a - 1] = null))
                  : b.push(this.unserialize());
              }
              return b;
            case 98:
              a = new Ia();
              for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()),
                  (c = this.unserialize()),
                  (a.h[b] = c));
              this.pos++;
              return a;
            case 99:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw W.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              this.unserializeObject(b);
              return b;
            case 100:
              return this.readFloat();
            case 102:
              return !1;
            case 105:
              return this.readDigits();
            case 106:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw W.thrown('Enum not found ' + a);
              this.pos++;
              for (
                var d = this.readDigits(),
                  f = c.__constructs__,
                  h = Array(f.length),
                  k = 0,
                  v = f.length;
                k < v;

              )
                ((b = k++), (h[b] = f[b]._hx_name));
              b = h[d];
              if (null == b)
                throw W.thrown('Unknown enum index ' + a + '@' + d);
              b = this.unserializeEnum(c, b);
              this.cache.push(b);
              return b;
            case 107:
              return NaN;
            case 108:
              b = new Ya();
              for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos); )
                b.add(this.unserialize());
              this.pos++;
              return b;
            case 109:
              return -Infinity;
            case 110:
              return null;
            case 111:
              return (
                (b = {}),
                this.cache.push(b),
                this.unserializeObject(b),
                b
              );
            case 112:
              return Infinity;
            case 113:
              a = new ac();
              this.cache.push(a);
              for (c = this.buf.charCodeAt(this.pos++); 58 == c; )
                ((b = this.readDigits()),
                  (c = this.unserialize()),
                  (a.h[b] = c),
                  (c = this.buf.charCodeAt(this.pos++)));
              if (104 != c) throw W.thrown('Invalid IntMap format');
              return a;
            case 114:
              a = this.readDigits();
              if (0 > a || a >= this.cache.length)
                throw W.thrown('Invalid reference');
              return this.cache[a];
            case 115:
              a = this.readDigits();
              c = this.buf;
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw W.thrown('Invalid bytes length');
              d = Rc.CODES;
              null == d && ((d = Rc.initCodes()), (Rc.CODES = d));
              b = this.pos;
              f = a & 3;
              h = b + (a - f);
              k = new tb(new ArrayBuffer(3 * (a >> 2) + (2 <= f ? f - 1 : 0)));
              for (v = 0; b < h; ) {
                var p = d[c.charCodeAt(b++)],
                  g = d[c.charCodeAt(b++)];
                k.b[v++] = ((p << 2) | (g >> 4)) & 255;
                p = d[c.charCodeAt(b++)];
                k.b[v++] = ((g << 4) | (p >> 2)) & 255;
                g = d[c.charCodeAt(b++)];
                k.b[v++] = ((p << 6) | g) & 255;
              }
              2 <= f &&
                ((p = d[c.charCodeAt(b++)]),
                (g = d[c.charCodeAt(b++)]),
                (k.b[v++] = ((p << 2) | (g >> 4)) & 255),
                3 == f &&
                  ((p = d[c.charCodeAt(b++)]),
                  (k.b[v++] = ((g << 4) | (p >> 2)) & 255)));
              this.pos += a;
              this.cache.push(k);
              return k;
            case 116:
              return !0;
            case 118:
              return (
                48 <= this.buf.charCodeAt(this.pos) &&
                57 >= this.buf.charCodeAt(this.pos) &&
                48 <= this.buf.charCodeAt(this.pos + 1) &&
                57 >= this.buf.charCodeAt(this.pos + 1) &&
                48 <= this.buf.charCodeAt(this.pos + 2) &&
                57 >= this.buf.charCodeAt(this.pos + 2) &&
                48 <= this.buf.charCodeAt(this.pos + 3) &&
                57 >= this.buf.charCodeAt(this.pos + 3) &&
                45 == this.buf.charCodeAt(this.pos + 4)
                  ? ((b = O.strDate(O.substr(this.buf, this.pos, 19))),
                    (this.pos += 19))
                  : (b = new Date(this.readFloat())),
                this.cache.push(b),
                b
              );
            case 119:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw W.thrown('Enum not found ' + a);
              b = this.unserializeEnum(c, this.unserialize());
              this.cache.push(b);
              return b;
            case 120:
              throw W.thrown(this.unserialize());
            case 121:
              a = this.readDigits();
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw W.thrown('Invalid string length');
              b = O.substr(this.buf, this.pos, a);
              this.pos += a;
              b = decodeURIComponent(b.split('+').join(' '));
              this.scache.push(b);
              return b;
            case 122:
              return 0;
          }
          this.pos--;
          throw W.thrown(
            'Invalid char ' +
              this.buf.charAt(this.pos) +
              ' at position ' +
              this.pos,
          );
        },
        __class__: Rc,
      };
      var uf = function () {};
      g['haxe._Unserializer.NullResolver'] = uf;
      uf.__name__ = 'haxe._Unserializer.NullResolver';
      uf.prototype = {
        resolveClass: function (a) {
          return null;
        },
        resolveEnum: function (a) {
          return null;
        },
        __class__: uf,
      };
      var mg = function (a, b, c) {
        W.call(this, String(a), b, c);
        this.value = a;
        this.__skipStack++;
      };
      g['haxe.ValueException'] = mg;
      mg.__name__ = 'haxe.ValueException';
      mg.__super__ = W;
      mg.prototype = u(W.prototype, {
        unwrap: function () {
          return this.value;
        },
        __class__: mg,
      });
      var vf = function () {
        this.a1 = 1;
        this.a2 = 0;
      };
      g['haxe.crypto.Adler32'] = vf;
      vf.__name__ = 'haxe.crypto.Adler32';
      vf.read = function (a) {
        var b = new vf(),
          c = a.readByte(),
          d = a.readByte(),
          f = a.readByte();
        a = a.readByte();
        b.a1 = (f << 8) | a;
        b.a2 = (c << 8) | d;
        return b;
      };
      vf.prototype = {
        update: function (a, b, c) {
          var d = this.a1,
            f = this.a2,
            h = b;
          for (b += c; h < b; )
            ((c = h++), (d = (d + a.b[c]) % 65521), (f = (f + d) % 65521));
          this.a1 = d;
          this.a2 = f;
        },
        equals: function (a) {
          return a.a1 == this.a1 ? a.a2 == this.a2 : !1;
        },
        __class__: vf,
      };
      var tb = function (a) {
        this.length = a.byteLength;
        this.b = new Uint8Array(a);
        this.b.bufferValue = a;
        a.hxBytes = this;
        a.bytes = this.b;
      };
      g['haxe.io.Bytes'] = tb;
      tb.__name__ = 'haxe.io.Bytes';
      tb.ofString = function (a, b) {
        b = [];
        for (var c = 0; c < a.length; ) {
          var d = a.charCodeAt(c++);
          55296 <= d &&
            56319 >= d &&
            (d = ((d - 55232) << 10) | (a.charCodeAt(c++) & 1023));
          127 >= d
            ? b.push(d)
            : (2047 >= d
                ? b.push(192 | (d >> 6))
                : (65535 >= d
                    ? b.push(224 | (d >> 12))
                    : (b.push(240 | (d >> 18)), b.push(128 | ((d >> 12) & 63))),
                  b.push(128 | ((d >> 6) & 63))),
              b.push(128 | (d & 63)));
        }
        return new tb(new Uint8Array(b).buffer);
      };
      tb.ofData = function (a) {
        var b = a.hxBytes;
        return null != b ? b : new tb(a);
      };
      tb.prototype = {
        blit: function (a, b, c, d) {
          if (
            0 > a ||
            0 > c ||
            0 > d ||
            a + d > this.length ||
            c + d > b.length
          )
            throw W.thrown(zd.OutsideBounds);
          0 == c && d == b.b.byteLength
            ? this.b.set(b.b, a)
            : this.b.set(b.b.subarray(c, c + d), a);
        },
        setUInt16: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setUint16(a, b, !0);
        },
        setInt32: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setInt32(a, b, !0);
        },
        getString: function (a, b, c) {
          if (0 > a || 0 > b || a + b > this.length)
            throw W.thrown(zd.OutsideBounds);
          c = '';
          var d = this.b,
            f = qb.fromCharCode,
            h = a;
          for (a += b; h < a; )
            if (((b = d[h++]), 128 > b)) {
              if (0 == b) break;
              c += f(b);
            } else if (224 > b) c += f(((b & 63) << 6) | (d[h++] & 127));
            else if (240 > b) {
              var k = d[h++];
              c += f(((b & 31) << 12) | ((k & 127) << 6) | (d[h++] & 127));
            } else {
              k = d[h++];
              var v = d[h++];
              b =
                ((b & 15) << 18) |
                ((k & 127) << 12) |
                ((v & 127) << 6) |
                (d[h++] & 127);
              c += f((b >> 10) + 55232);
              c += f((b & 1023) | 56320);
            }
          return c;
        },
        toString: function () {
          return this.getString(0, this.length);
        },
        __class__: tb,
      };
      var uc = function () {};
      g['haxe.ds.ArraySort'] = uc;
      uc.__name__ = 'haxe.ds.ArraySort';
      uc.sort = function (a, b) {
        uc.rec(a, b, 0, a.length);
      };
      uc.rec = function (a, b, c, d) {
        var f = (c + d) >> 1;
        if (12 > d - c) {
          if (!(d <= c))
            for (f = c + 1; f < d; )
              for (var h = f++; h > c; ) {
                if (0 > b(a[h], a[h - 1])) uc.swap(a, h - 1, h);
                else break;
                --h;
              }
        } else
          (uc.rec(a, b, c, f),
            uc.rec(a, b, f, d),
            uc.doMerge(a, b, c, f, d, f - c, d - f));
      };
      uc.doMerge = function (a, b, c, d, f, h, k) {
        if (0 != h && 0 != k)
          if (2 == h + k) 0 > b(a[d], a[c]) && uc.swap(a, d, c);
          else {
            if (h > k) {
              var v = h >> 1;
              var p = c + v;
              var g = uc.lower(a, b, d, f, p);
              var t = g - d;
            } else
              ((t = k >> 1),
                (g = d + t),
                (p = uc.upper(a, b, c, d, g)),
                (v = p - c));
            uc.rotate(a, b, p, d, g);
            d = p + t;
            uc.doMerge(a, b, c, p, d, v, t);
            uc.doMerge(a, b, d, g, f, h - v, k - t);
          }
      };
      uc.rotate = function (a, b, c, d, f) {
        if (c != d && d != f)
          for (b = uc.gcd(f - c, d - c); 0 != b--; ) {
            for (
              var h = a[c + b], k = d - c, v = c + b, p = c + b + k;
              p != c + b;

            )
              ((a[v] = a[p]),
                (v = p),
                (p = f - p > k ? p + k : c + (k - (f - p))));
            a[v] = h;
          }
      };
      uc.gcd = function (a, b) {
        for (; 0 != b; ) {
          var c = a % b;
          a = b;
          b = c;
        }
        return a;
      };
      uc.upper = function (a, b, c, d, f) {
        d -= c;
        for (var h, k; 0 < d; )
          ((h = d >> 1),
            (k = c + h),
            0 > b(a[f], a[k]) ? (d = h) : ((c = k + 1), (d = d - h - 1)));
        return c;
      };
      uc.lower = function (a, b, c, d, f) {
        d -= c;
        for (var h, k; 0 < d; )
          ((h = d >> 1),
            (k = c + h),
            0 > b(a[k], a[f]) ? ((c = k + 1), (d = d - h - 1)) : (d = h));
        return c;
      };
      uc.swap = function (a, b, c) {
        var d = a[b];
        a[b] = a[c];
        a[c] = d;
      };
      var ac = function () {
        this.h = {};
      };
      g['haxe.ds.IntMap'] = ac;
      ac.__name__ = 'haxe.ds.IntMap';
      ac.__interfaces__ = [ka];
      ac.prototype = {
        set: function (a, b) {
          this.h[a] = b;
        },
        get: function (a) {
          return this.h[a];
        },
        remove: function (a) {
          if (!this.h.hasOwnProperty(a)) return !1;
          delete this.h[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h) this.h.hasOwnProperty(b) && a.push(+b);
          return new Fe(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a];
            },
          };
        },
        __class__: ac,
      };
      var Jg = function (a, b) {
        this.item = a;
        this.next = b;
      };
      g['haxe.ds._List.ListNode'] = Jg;
      Jg.__name__ = 'haxe.ds._List.ListNode';
      Jg.prototype = { __class__: Jg };
      var zi = function (a) {
        this.head = a;
      };
      g['haxe.ds._List.ListIterator'] = zi;
      zi.__name__ = 'haxe.ds._List.ListIterator';
      zi.prototype = {
        hasNext: function () {
          return null != this.head;
        },
        next: function () {
          var a = this.head.item;
          this.head = this.head.next;
          return a;
        },
        __class__: zi,
      };
      var Ia = function () {
        this.h = Object.create(null);
      };
      g['haxe.ds.StringMap'] = Ia;
      Ia.__name__ = 'haxe.ds.StringMap';
      Ia.__interfaces__ = [ka];
      Ia.prototype = {
        get: function (a) {
          return this.h[a];
        },
        set: function (a, b) {
          this.h[a] = b;
        },
        remove: function (a) {
          return Object.prototype.hasOwnProperty.call(this.h, a)
            ? (delete this.h[a], !0)
            : !1;
        },
        keys: function () {
          return new Mg(this.h);
        },
        __class__: Ia,
      };
      var Mg = function (a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0;
      };
      g['haxe.ds._StringMap.StringMapKeyIterator'] = Mg;
      Mg.__name__ = 'haxe.ds._StringMap.StringMapKeyIterator';
      Mg.prototype = {
        hasNext: function () {
          return this.current < this.length;
        },
        next: function () {
          return this.keys[this.current++];
        },
        __class__: Mg,
      };
      var wf = function (a, b, c) {
        W.call(this, a, b);
        this.posInfos =
          null == c
            ? {
                fileName: '(unknown)',
                lineNumber: 0,
                className: '(unknown)',
                methodName: '(unknown)',
              }
            : c;
        this.__skipStack++;
      };
      g['haxe.exceptions.PosException'] = wf;
      wf.__name__ = 'haxe.exceptions.PosException';
      wf.__super__ = W;
      wf.prototype = u(W.prototype, {
        toString: function () {
          return (
            '' +
            W.prototype.toString.call(this) +
            ' in ' +
            this.posInfos.className +
            '.' +
            this.posInfos.methodName +
            ' at ' +
            this.posInfos.fileName +
            ':' +
            this.posInfos.lineNumber
          );
        },
        __class__: wf,
      });
      var mh = function (a, b, c) {
        null == a && (a = 'Not implemented');
        wf.call(this, a, b, c);
        this.__skipStack++;
      };
      g['haxe.exceptions.NotImplementedException'] = mh;
      mh.__name__ = 'haxe.exceptions.NotImplementedException';
      mh.__super__ = wf;
      mh.prototype = u(wf.prototype, { __class__: mh });
      var nh = function () {
        this.size = this.pos = 0;
      };
      g['haxe.io.BytesBuffer'] = nh;
      nh.__name__ = 'haxe.io.BytesBuffer';
      nh.prototype = {
        addByte: function (a) {
          this.pos == this.size && this.grow(1);
          this.view.setUint8(this.pos++, a);
        },
        add: function (a) {
          this.pos + a.length > this.size && this.grow(a.length);
          if (0 != this.size) {
            var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
            this.u8.set(b, this.pos);
            this.pos += a.length;
          }
        },
        addBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw W.thrown(zd.OutsideBounds);
          this.pos + c > this.size && this.grow(c);
          0 != this.size &&
            ((a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, c)),
            this.u8.set(a, this.pos),
            (this.pos += c));
        },
        grow: function (a) {
          var b = this.pos + a;
          for (a = 0 == this.size ? 16 : this.size; a < b; ) a = (3 * a) >> 1;
          b = new ArrayBuffer(a);
          var c = new Uint8Array(b);
          0 < this.size && c.set(this.u8);
          this.size = a;
          this.buffer = b;
          this.u8 = c;
          this.view = new DataView(this.buffer);
        },
        getBytes: function () {
          if (0 == this.size) return new tb(new ArrayBuffer(0));
          var a = new tb(this.buffer);
          a.length = this.pos;
          return a;
        },
        __class__: nh,
      };
      var oh = function () {};
      g['haxe.io.Input'] = oh;
      oh.__name__ = 'haxe.io.Input';
      oh.prototype = {
        readByte: function () {
          throw new mh(null, null, {
            fileName: 'haxe/io/Input.hx',
            lineNumber: 53,
            className: 'haxe.io.Input',
            methodName: 'readByte',
          });
        },
        readBytes: function (a, b, c) {
          var d = c,
            f = a.b;
          if (0 > b || 0 > c || b + c > a.length)
            throw W.thrown(zd.OutsideBounds);
          try {
            for (; 0 < d; ) ((f[b] = this.readByte()), ++b, --d);
          } catch (h) {
            if (((Qa.lastError = h), !(W.caught(h).unwrap() instanceof ng)))
              throw h;
          }
          return c - d;
        },
        readFullBytes: function (a, b, c) {
          for (; 0 < c; ) {
            var d = this.readBytes(a, b, c);
            if (0 == d) throw W.thrown(zd.Blocked);
            b += d;
            c -= d;
          }
        },
        read: function (a) {
          for (var b = new tb(new ArrayBuffer(a)), c = 0; 0 < a; ) {
            var d = this.readBytes(b, c, a);
            if (0 == d) throw W.thrown(zd.Blocked);
            c += d;
            a -= d;
          }
          return b;
        },
        readInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          a = this.bigEndian ? b | (a << 8) : a | (b << 8);
          return 0 != (a & 32768) ? a - 65536 : a;
        },
        readUInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          return this.bigEndian ? b | (a << 8) : a | (b << 8);
        },
        readInt32: function () {
          var a = this.readByte(),
            b = this.readByte(),
            c = this.readByte(),
            d = this.readByte();
          return this.bigEndian
            ? d | (c << 8) | (b << 16) | (a << 24)
            : a | (b << 8) | (c << 16) | (d << 24);
        },
        readString: function (a, b) {
          var c = new tb(new ArrayBuffer(a));
          this.readFullBytes(c, 0, a);
          return c.getString(0, a, b);
        },
        __class__: oh,
      };
      var ph = function (a, b, c) {
        null == b && (b = 0);
        null == c && (c = a.length - b);
        if (0 > b || 0 > c || b + c > a.length)
          throw W.thrown(zd.OutsideBounds);
        this.b = a.b;
        this.pos = b;
        this.totlen = this.len = c;
      };
      g['haxe.io.BytesInput'] = ph;
      ph.__name__ = 'haxe.io.BytesInput';
      ph.__super__ = oh;
      ph.prototype = u(oh.prototype, {
        readByte: function () {
          if (0 == this.len) throw W.thrown(new ng());
          this.len--;
          return this.b[this.pos++];
        },
        readBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw W.thrown(zd.OutsideBounds);
          if (0 == this.len && 0 < c) throw W.thrown(new ng());
          this.len < c && (c = this.len);
          var d = this.b;
          a = a.b;
          for (var f = 0, h = c; f < h; ) {
            var k = f++;
            a[b + k] = d[this.pos + k];
          }
          this.pos += c;
          this.len -= c;
          return c;
        },
        __class__: ph,
      });
      var Vj = (F['haxe.io.Encoding'] = {
        __ename__: 'haxe.io.Encoding',
        __constructs__: null,
        UTF8: {
          _hx_name: 'UTF8',
          _hx_index: 0,
          __enum__: 'haxe.io.Encoding',
          toString: q,
        },
        RawNative: {
          _hx_name: 'RawNative',
          _hx_index: 1,
          __enum__: 'haxe.io.Encoding',
          toString: q,
        },
      });
      Vj.__constructs__ = [Vj.UTF8, Vj.RawNative];
      var ng = function () {};
      g['haxe.io.Eof'] = ng;
      ng.__name__ = 'haxe.io.Eof';
      ng.prototype = {
        toString: function () {
          return 'Eof';
        },
        __class__: ng,
      };
      var zd = (F['haxe.io.Error'] = {
        __ename__: 'haxe.io.Error',
        __constructs__: null,
        Blocked: {
          _hx_name: 'Blocked',
          _hx_index: 0,
          __enum__: 'haxe.io.Error',
          toString: q,
        },
        Overflow: {
          _hx_name: 'Overflow',
          _hx_index: 1,
          __enum__: 'haxe.io.Error',
          toString: q,
        },
        OutsideBounds: {
          _hx_name: 'OutsideBounds',
          _hx_index: 2,
          __enum__: 'haxe.io.Error',
          toString: q,
        },
        Custom:
          ((H = function (a) {
            return {
              _hx_index: 3,
              e: a,
              __enum__: 'haxe.io.Error',
              toString: q,
            };
          }),
          (H._hx_name = 'Custom'),
          (H.__params__ = ['e']),
          H),
      });
      zd.__constructs__ = [
        zd.Blocked,
        zd.Overflow,
        zd.OutsideBounds,
        zd.Custom,
      ];
      var fk = {
          fromBytes: function (a, b, c) {
            null == b && (b = 0);
            null == c && (c = (a.length - b) >> 2);
            return new Float32Array(a.b.bufferValue, b, c);
          },
        },
        md = function (a) {
          switch (a) {
            case '.':
            case '..':
              this.dir = a;
              this.file = '';
              return;
          }
          var b = a.lastIndexOf('/'),
            c = a.lastIndexOf('\\');
          b < c
            ? ((this.dir = O.substr(a, 0, c)),
              (a = O.substr(a, c + 1, null)),
              (this.backslash = !0))
            : c < b
              ? ((this.dir = O.substr(a, 0, b)), (a = O.substr(a, b + 1, null)))
              : (this.dir = null);
          b = a.lastIndexOf('.');
          -1 != b
            ? ((this.ext = O.substr(a, b + 1, null)),
              (this.file = O.substr(a, 0, b)))
            : ((this.ext = null), (this.file = a));
        };
      g['haxe.io.Path'] = md;
      md.__name__ = 'haxe.io.Path';
      md.withoutDirectory = function (a) {
        a = new md(a);
        a.dir = null;
        return a.toString();
      };
      md.directory = function (a) {
        a = new md(a);
        return null == a.dir ? '' : a.dir;
      };
      md.extension = function (a) {
        a = new md(a);
        return null == a.ext ? '' : a.ext;
      };
      md.prototype = {
        toString: function () {
          return (
            (null == this.dir ? '' : this.dir + (this.backslash ? '\\' : '/')) +
            this.file +
            (null == this.ext ? '' : '.' + this.ext)
          );
        },
        __class__: md,
      };
      var Fe = function (a) {
        this.current = 0;
        this.array = a;
      };
      g['haxe.iterators.ArrayIterator'] = Fe;
      Fe.__name__ = 'haxe.iterators.ArrayIterator';
      Fe.prototype = {
        hasNext: function () {
          return this.current < this.array.length;
        },
        next: function () {
          return this.array[this.current++];
        },
        __class__: Fe,
      };
      var vc = function (a, b, c) {
        this.xml = b;
        this.message = a;
        this.position = c;
        this.lineNumber = 1;
        for (a = this.positionAtLine = 0; a < c; ) {
          var d = a++;
          d = b.charCodeAt(d);
          10 == d
            ? (this.lineNumber++, (this.positionAtLine = 0))
            : 13 != d && this.positionAtLine++;
        }
      };
      g['haxe.xml.XmlParserException'] = vc;
      vc.__name__ = 'haxe.xml.XmlParserException';
      vc.prototype = {
        toString: function () {
          return (
            Ua.getClass(this).__name__ +
            ': ' +
            this.message +
            ' at line ' +
            this.lineNumber +
            ' char ' +
            this.positionAtLine
          );
        },
        __class__: vc,
      };
      var le = function () {};
      g['haxe.xml.Parser'] = le;
      le.__name__ = 'haxe.xml.Parser';
      le.parse = function (a, b) {
        null == b && (b = !1);
        var c = Y.createDocument();
        le.doParse(a, b, 0, c);
        return c;
      };
      le.doParse = function (a, b, c, d) {
        null == c && (c = 0);
        for (
          var f = null,
            h = 1,
            k = 1,
            v = null,
            p = 0,
            g = 0,
            t = 0,
            m = new z(),
            n = 1,
            x = -1;
          c < a.length;

        ) {
          var q = a.charCodeAt(c);
          switch (h) {
            case 0:
              switch (q) {
                case 9:
                case 10:
                case 13:
                case 32:
                  break;
                default:
                  h = k;
                  continue;
              }
              break;
            case 1:
              if (60 == q) ((h = 0), (k = 2));
              else {
                p = c;
                h = 13;
                continue;
              }
              break;
            case 2:
              switch (q) {
                case 33:
                  if (91 == a.charCodeAt(c + 1)) {
                    c += 2;
                    if ('CDATA[' != O.substr(a, c, 6).toUpperCase())
                      throw W.thrown(new vc('Expected <![CDATA[', a, c));
                    c += 5;
                    h = 17;
                  } else if (
                    68 == a.charCodeAt(c + 1) ||
                    100 == a.charCodeAt(c + 1)
                  ) {
                    if ('OCTYPE' != O.substr(a, c + 2, 6).toUpperCase())
                      throw W.thrown(new vc('Expected <!DOCTYPE', a, c));
                    c += 8;
                    h = 16;
                  } else {
                    if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2))
                      throw W.thrown(new vc('Expected \x3c!--', a, c));
                    c += 2;
                    h = 15;
                  }
                  p = c + 1;
                  break;
                case 47:
                  if (null == d)
                    throw W.thrown(new vc('Expected node name', a, c));
                  p = c + 1;
                  h = 0;
                  k = 10;
                  break;
                case 63:
                  h = 14;
                  p = c;
                  break;
                default:
                  h = 3;
                  p = c;
                  continue;
              }
              break;
            case 3:
              if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                )
              ) {
                if (c == p) throw W.thrown(new vc('Expected node name', a, c));
                f = Y.createElement(O.substr(a, p, c - p));
                d.addChild(f);
                ++g;
                h = 0;
                k = 4;
                continue;
              }
              break;
            case 4:
              switch (q) {
                case 47:
                  h = 11;
                  break;
                case 62:
                  h = 9;
                  break;
                default:
                  h = 5;
                  p = c;
                  continue;
              }
              break;
            case 5:
              if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                )
              ) {
                if (p == c)
                  throw W.thrown(new vc('Expected attribute name', a, c));
                v = O.substr(a, p, c - p);
                if (f.exists(v))
                  throw W.thrown(
                    new vc('Duplicate attribute [' + v + ']', a, c),
                  );
                h = 0;
                k = 6;
                continue;
              }
              break;
            case 6:
              if (61 == q) ((h = 0), (k = 7));
              else throw W.thrown(new vc('Expected =', a, c));
              break;
            case 7:
              switch (q) {
                case 34:
                case 39:
                  m = new z();
                  h = 8;
                  p = c + 1;
                  x = q;
                  break;
                default:
                  throw W.thrown(new vc('Expected "', a, c));
              }
              break;
            case 8:
              switch (q) {
                case 38:
                  n = c - p;
                  m.b += null == n ? O.substr(a, p, null) : O.substr(a, p, n);
                  h = 18;
                  n = 8;
                  p = c + 1;
                  break;
                case 60:
                case 62:
                  if (b)
                    throw W.thrown(
                      new vc(
                        'Invalid unescaped ' +
                          String.fromCodePoint(q) +
                          ' in attribute value',
                        a,
                        c,
                      ),
                    );
                  q == x &&
                    ((k = c - p),
                    (m.b +=
                      null == k ? O.substr(a, p, null) : O.substr(a, p, k)),
                    (k = m.b),
                    (m = new z()),
                    f.set(v, k),
                    (h = 0),
                    (k = 4));
                  break;
                default:
                  q == x &&
                    ((k = c - p),
                    (m.b +=
                      null == k ? O.substr(a, p, null) : O.substr(a, p, k)),
                    (k = m.b),
                    (m = new z()),
                    f.set(v, k),
                    (h = 0),
                    (k = 4));
              }
              break;
            case 9:
              p = c = le.doParse(a, b, c, f);
              h = 1;
              break;
            case 10:
              if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                )
              ) {
                if (p == c) throw W.thrown(new vc('Expected node name', a, c));
                k = O.substr(a, p, c - p);
                if (null == d || 0 != d.nodeType)
                  throw W.thrown(
                    new vc('Unexpected </' + k + '>, tag is not open', a, c),
                  );
                if (d.nodeType != Y.Element)
                  throw W.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == d.nodeType ? 'null' : ub.toString(d.nodeType)),
                  );
                if (k != d.nodeName) {
                  if (d.nodeType != Y.Element)
                    throw W.thrown(
                      'Bad node type, expected Element but found ' +
                        (null == d.nodeType ? 'null' : ub.toString(d.nodeType)),
                    );
                  throw W.thrown(
                    new vc('Expected </' + d.nodeName + '>', a, c),
                  );
                }
                h = 0;
                k = 12;
                continue;
              }
              break;
            case 11:
              if (62 == q) h = 1;
              else throw W.thrown(new vc('Expected >', a, c));
              break;
            case 12:
              if (62 == q) return (0 == g && d.addChild(Y.createPCData('')), c);
              throw W.thrown(new vc('Expected >', a, c));
            case 13:
              60 == q
                ? ((k = c - p),
                  (m.b += null == k ? O.substr(a, p, null) : O.substr(a, p, k)),
                  (k = Y.createPCData(m.b)),
                  (m = new z()),
                  d.addChild(k),
                  ++g,
                  (h = 0),
                  (k = 2))
                : 38 == q &&
                  ((n = c - p),
                  (m.b += null == n ? O.substr(a, p, null) : O.substr(a, p, n)),
                  (h = 18),
                  (n = 13),
                  (p = c + 1));
              break;
            case 14:
              63 == q &&
                62 == a.charCodeAt(c + 1) &&
                (++c,
                (h = O.substr(a, p + 1, c - p - 2)),
                d.addChild(Y.createProcessingInstruction(h)),
                ++g,
                (h = 1));
              break;
            case 15:
              45 == q &&
                45 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                (d.addChild(Y.createComment(O.substr(a, p, c - p))),
                ++g,
                (c += 2),
                (h = 1));
              break;
            case 16:
              91 == q
                ? ++t
                : 93 == q
                  ? --t
                  : 62 == q &&
                    0 == t &&
                    (d.addChild(Y.createDocType(O.substr(a, p, c - p))),
                    ++g,
                    (h = 1));
              break;
            case 17:
              93 == q &&
                93 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                ((h = Y.createCData(O.substr(a, p, c - p))),
                d.addChild(h),
                ++g,
                (c += 2),
                (h = 1));
              break;
            case 18:
              if (59 == q) {
                p = O.substr(a, p, c - p);
                if (35 == p.charCodeAt(0))
                  ((p =
                    120 == p.charCodeAt(1)
                      ? I.parseInt('0' + O.substr(p, 1, p.length - 1))
                      : I.parseInt(O.substr(p, 1, p.length - 1))),
                    (m.b += String.fromCodePoint(p)));
                else if (Object.prototype.hasOwnProperty.call(le.escapes.h, p))
                  m.b += I.string(le.escapes.h[p]);
                else {
                  if (b) throw W.thrown(new vc('Undefined entity: ' + p, a, c));
                  m.b += I.string('&' + p + ';');
                }
                p = c + 1;
                h = n;
              } else if (
                !(
                  (97 <= q && 122 >= q) ||
                  (65 <= q && 90 >= q) ||
                  (48 <= q && 57 >= q) ||
                  58 == q ||
                  46 == q ||
                  95 == q ||
                  45 == q
                ) &&
                35 != q
              ) {
                if (b)
                  throw W.thrown(
                    new vc(
                      'Invalid character in entity: ' + String.fromCodePoint(q),
                      a,
                      c,
                    ),
                  );
                m.b += String.fromCodePoint(38);
                h = c - p;
                m.b += null == h ? O.substr(a, p, null) : O.substr(a, p, h);
                --c;
                p = c + 1;
                h = n;
              }
          }
          ++c;
        }
        1 == h && ((p = c), (h = 13));
        if (13 == h) {
          if (0 == d.nodeType) {
            if (d.nodeType != Y.Element)
              throw W.thrown(
                'Bad node type, expected Element but found ' +
                  (null == d.nodeType ? 'null' : ub.toString(d.nodeType)),
              );
            throw W.thrown(new vc('Unclosed node <' + d.nodeName + '>', a, c));
          }
          if (c != p || 0 == g)
            ((n = c - p),
              (m.b += null == n ? O.substr(a, p, null) : O.substr(a, p, n)),
              d.addChild(Y.createPCData(m.b)));
          return c;
        }
        if (!b && 18 == h && 13 == n)
          return (
            (m.b += String.fromCodePoint(38)),
            (n = c - p),
            (m.b += null == n ? O.substr(a, p, null) : O.substr(a, p, n)),
            d.addChild(Y.createPCData(m.b)),
            c
          );
        throw W.thrown(new vc('Unexpected end', a, c));
      };
      var Ke = function (a) {
        this.output = new z();
        this.pretty = a;
      };
      g['haxe.xml.Printer'] = Ke;
      Ke.__name__ = 'haxe.xml.Printer';
      Ke.print = function (a, b) {
        null == b && (b = !1);
        b = new Ke(b);
        b.writeNode(a, '');
        return b.output.b;
      };
      Ke.prototype = {
        writeNode: function (a, b) {
          switch (a.nodeType) {
            case 0:
              this.output.b += I.string(b + '<');
              if (a.nodeType != Y.Element)
                throw W.thrown(
                  'Bad node type, expected Element but found ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              this.output.b += I.string(a.nodeName);
              for (var c = a.attributes(); c.hasNext(); ) {
                var d = c.next();
                this.output.b += I.string(' ' + d + '="');
                d = M.htmlEscape(a.get(d), !0);
                this.output.b += I.string(d);
                this.output.b += '"';
              }
              if (this.hasChildren(a)) {
                this.output.b += '>';
                this.pretty && (this.output.b += '\n');
                if (a.nodeType != Y.Document && a.nodeType != Y.Element)
                  throw W.thrown(
                    'Bad node type, expected Element or Document but found ' +
                      (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                  );
                c = 0;
                for (d = a.children; c < d.length; ) {
                  var f = d[c++];
                  this.writeNode(f, this.pretty ? b + '\t' : b);
                }
                this.output.b += I.string(b + '</');
                if (a.nodeType != Y.Element)
                  throw W.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                  );
                this.output.b += I.string(a.nodeName);
                this.output.b += '>';
              } else this.output.b += '/>';
              this.pretty && (this.output.b += '\n');
              break;
            case 1:
              if (a.nodeType == Y.Document || a.nodeType == Y.Element)
                throw W.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              a = a.nodeValue;
              0 != a.length &&
                ((d = b + M.htmlEscape(a)),
                (this.output.b += I.string(d)),
                this.pretty && (this.output.b += '\n'));
              break;
            case 2:
              this.output.b += I.string(b + '<![CDATA[');
              if (a.nodeType == Y.Document || a.nodeType == Y.Element)
                throw W.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              this.output.b += I.string(a.nodeValue);
              this.output.b += ']]\x3e';
              this.pretty && (this.output.b += '\n');
              break;
            case 3:
              if (a.nodeType == Y.Document || a.nodeType == Y.Element)
                throw W.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              a = a.nodeValue;
              a = a.replace(/[\n\r\t]+/g, '');
              this.output.b += null == b ? 'null' : '' + b;
              d = M.trim('\x3c!--' + a + '--\x3e');
              this.output.b += I.string(d);
              this.pretty && (this.output.b += '\n');
              break;
            case 4:
              if (a.nodeType == Y.Document || a.nodeType == Y.Element)
                throw W.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              this.output.b += I.string('<!DOCTYPE ' + a.nodeValue + '>');
              this.pretty && (this.output.b += '\n');
              break;
            case 5:
              if (a.nodeType == Y.Document || a.nodeType == Y.Element)
                throw W.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              this.output.b += I.string('<?' + a.nodeValue + '?>');
              this.pretty && (this.output.b += '\n');
              break;
            case 6:
              if (a.nodeType != Y.Document && a.nodeType != Y.Element)
                throw W.thrown(
                  'Bad node type, expected Element or Document but found ' +
                    (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
                );
              c = 0;
              for (d = a.children; c < d.length; )
                ((f = d[c++]), this.writeNode(f, b));
          }
        },
        hasChildren: function (a) {
          if (a.nodeType != Y.Document && a.nodeType != Y.Element)
            throw W.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == a.nodeType ? 'null' : ub.toString(a.nodeType)),
            );
          var b = 0;
          for (a = a.children; b < a.length; ) {
            var c = a[b++];
            switch (c.nodeType) {
              case 0:
              case 1:
                return !0;
              case 2:
              case 3:
                if (c.nodeType == Y.Document || c.nodeType == Y.Element)
                  throw W.thrown(
                    'Bad node type, unexpected ' +
                      (null == c.nodeType ? 'null' : ub.toString(c.nodeType)),
                  );
                if (0 != M.ltrim(c.nodeValue).length) return !0;
            }
          }
          return !1;
        },
        __class__: Ke,
      };
      var xf = (F['haxe.zip.ExtraField'] = {
        __ename__: 'haxe.zip.ExtraField',
        __constructs__: null,
        FUnknown:
          ((H = function (a, b) {
            return {
              _hx_index: 0,
              tag: a,
              bytes: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: q,
            };
          }),
          (H._hx_name = 'FUnknown'),
          (H.__params__ = ['tag', 'bytes']),
          H),
        FInfoZipUnicodePath:
          ((H = function (a, b) {
            return {
              _hx_index: 1,
              name: a,
              crc: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: q,
            };
          }),
          (H._hx_name = 'FInfoZipUnicodePath'),
          (H.__params__ = ['name', 'crc']),
          H),
        FUtf8: {
          _hx_name: 'FUtf8',
          _hx_index: 2,
          __enum__: 'haxe.zip.ExtraField',
          toString: q,
        },
      });
      xf.__constructs__ = [xf.FUnknown, xf.FInfoZipUnicodePath, xf.FUtf8];
      var Ad = (F['haxe.zip.Huffman'] = {
        __ename__: 'haxe.zip.Huffman',
        __constructs__: null,
        Found:
          ((H = function (a) {
            return {
              _hx_index: 0,
              i: a,
              __enum__: 'haxe.zip.Huffman',
              toString: q,
            };
          }),
          (H._hx_name = 'Found'),
          (H.__params__ = ['i']),
          H),
        NeedBit:
          ((H = function (a, b) {
            return {
              _hx_index: 1,
              left: a,
              right: b,
              __enum__: 'haxe.zip.Huffman',
              toString: q,
            };
          }),
          (H._hx_name = 'NeedBit'),
          (H.__params__ = ['left', 'right']),
          H),
        NeedBits:
          ((H = function (a, b) {
            return {
              _hx_index: 2,
              n: a,
              table: b,
              __enum__: 'haxe.zip.Huffman',
              toString: q,
            };
          }),
          (H._hx_name = 'NeedBits'),
          (H.__params__ = ['n', 'table']),
          H),
      });
      Ad.__constructs__ = [Ad.Found, Ad.NeedBit, Ad.NeedBits];
      var Pi = function () {};
      g['haxe.zip.HuffTools'] = Pi;
      Pi.__name__ = 'haxe.zip.HuffTools';
      Pi.prototype = {
        treeDepth: function (a) {
          switch (a._hx_index) {
            case 0:
              return 0;
            case 1:
              var b = a.right;
              a = this.treeDepth(a.left);
              b = this.treeDepth(b);
              return 1 + (a < b ? a : b);
            case 2:
              throw W.thrown('assert');
          }
        },
        treeCompress: function (a) {
          var b = this.treeDepth(a);
          if (0 == b) return a;
          if (1 == b) {
            if (1 == a._hx_index)
              return (
                (b = a.right),
                Ad.NeedBit(this.treeCompress(a.left), this.treeCompress(b))
              );
            throw W.thrown('assert');
          }
          for (var c = [], d = 0, f = 1 << b; d < f; )
            (d++, c.push(Ad.Found(-1)));
          this.treeWalk(c, 0, 0, b, a);
          return Ad.NeedBits(b, c);
        },
        treeWalk: function (a, b, c, d, f) {
          if (1 == f._hx_index) {
            var h = f.left,
              k = f.right;
            0 < d
              ? (this.treeWalk(a, b, c + 1, d - 1, h),
                this.treeWalk(a, b | (1 << c), c + 1, d - 1, k))
              : (a[b] = this.treeCompress(f));
          } else a[b] = this.treeCompress(f);
        },
        treeMake: function (a, b, c, d) {
          if (d > b) throw W.thrown('Invalid huffman');
          var f = (c << 5) | d;
          if (a.h.hasOwnProperty(f)) return Ad.Found(a.h[f]);
          c <<= 1;
          ++d;
          return Ad.NeedBit(
            this.treeMake(a, b, c, d),
            this.treeMake(a, b, c | 1, d),
          );
        },
        make: function (a, b, c, d) {
          if (1 == c) return Ad.NeedBit(Ad.Found(0), Ad.Found(0));
          var f = [],
            h = [];
          if (32 < d) throw W.thrown('Invalid huffman');
          for (var k = 0, v = d; k < v; ) (k++, f.push(0), h.push(0));
          k = 0;
          for (v = c; k < v; ) {
            var p = k++;
            p = a[p + b];
            if (p >= d) throw W.thrown('Invalid huffman');
            f[p]++;
          }
          var g = 0;
          k = 1;
          for (v = d - 1; k < v; )
            ((p = k++), (g = (g + f[p]) << 1), (h[p] = g));
          f = new ac();
          k = 0;
          for (v = c; k < v; )
            ((p = k++),
              (c = a[p + b]),
              0 != c &&
                ((g = h[c - 1]), (h[c - 1] = g + 1), (f.h[(g << 5) | c] = p)));
          return this.treeCompress(
            Ad.NeedBit(this.treeMake(f, d, 0, 1), this.treeMake(f, d, 1, 1)),
          );
        },
        __class__: Pi,
      };
      var Qi = function (a) {
        this.buffer = new tb(new ArrayBuffer(65536));
        this.pos = 0;
        a && (this.crc = new vf());
      };
      g['haxe.zip._InflateImpl.Window'] = Qi;
      Qi.__name__ = 'haxe.zip._InflateImpl.Window';
      Qi.prototype = {
        slide: function () {
          null != this.crc && this.crc.update(this.buffer, 0, 32768);
          var a = new tb(new ArrayBuffer(65536));
          this.pos -= 32768;
          a.blit(0, this.buffer, 32768, this.pos);
          this.buffer = a;
        },
        addBytes: function (a, b, c) {
          65536 < this.pos + c && this.slide();
          this.buffer.blit(this.pos, a, b, c);
          this.pos += c;
        },
        addByte: function (a) {
          65536 == this.pos && this.slide();
          this.buffer.b[this.pos] = a & 255;
          this.pos++;
        },
        getLastChar: function () {
          return this.buffer.b[this.pos - 1];
        },
        available: function () {
          return this.pos;
        },
        checksum: function () {
          null != this.crc && this.crc.update(this.buffer, 0, this.pos);
          return this.crc;
        },
        __class__: Qi,
      };
      var hc = (F['haxe.zip._InflateImpl.State'] = {
        __ename__: 'haxe.zip._InflateImpl.State',
        __constructs__: null,
        Head: {
          _hx_name: 'Head',
          _hx_index: 0,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Block: {
          _hx_name: 'Block',
          _hx_index: 1,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        CData: {
          _hx_name: 'CData',
          _hx_index: 2,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Flat: {
          _hx_name: 'Flat',
          _hx_index: 3,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Crc: {
          _hx_name: 'Crc',
          _hx_index: 4,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Dist: {
          _hx_name: 'Dist',
          _hx_index: 5,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        DistOne: {
          _hx_name: 'DistOne',
          _hx_index: 6,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
        Done: {
          _hx_name: 'Done',
          _hx_index: 7,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: q,
        },
      });
      hc.__constructs__ = [
        hc.Head,
        hc.Block,
        hc.CData,
        hc.Flat,
        hc.Crc,
        hc.Dist,
        hc.DistOne,
        hc.Done,
      ];
      var Jc = function (a, b, c) {
        null == c && (c = !0);
        null == b && (b = !0);
        this.isFinal = !1;
        this.htools = new Pi();
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.dist = this.len = 0;
        this.state = b ? hc.Head : hc.Block;
        this.input = a;
        this.needed = this.nbits = this.bits = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.window = new Qi(c);
      };
      g['haxe.zip.InflateImpl'] = Jc;
      Jc.__name__ = 'haxe.zip.InflateImpl';
      Jc.prototype = {
        buildFixedHuffman: function () {
          if (null != Jc.FIXED_HUFFMAN) return Jc.FIXED_HUFFMAN;
          for (var a = [], b = 0; 288 > b; ) {
            var c = b++;
            a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8);
          }
          Jc.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
          return Jc.FIXED_HUFFMAN;
        },
        readBytes: function (a, b, c) {
          this.needed = c;
          this.outpos = b;
          this.output = a;
          if (0 < c) for (; this.inflateLoop(); );
          return c - this.needed;
        },
        getBits: function (a) {
          for (; this.nbits < a; )
            ((this.bits |= this.input.readByte() << this.nbits),
              (this.nbits += 8));
          var b = this.bits & ((1 << a) - 1);
          this.nbits -= a;
          this.bits >>= a;
          return b;
        },
        getBit: function () {
          0 == this.nbits &&
            ((this.nbits = 8), (this.bits = this.input.readByte()));
          var a = 1 == (this.bits & 1);
          this.nbits--;
          this.bits >>= 1;
          return a;
        },
        getRevBits: function (a) {
          return 0 == a
            ? 0
            : this.getBit()
              ? (1 << (a - 1)) | this.getRevBits(a - 1)
              : this.getRevBits(a - 1);
        },
        resetBits: function () {
          this.nbits = this.bits = 0;
        },
        addBytes: function (a, b, c) {
          this.window.addBytes(a, b, c);
          this.output.blit(this.outpos, a, b, c);
          this.needed -= c;
          this.outpos += c;
        },
        addByte: function (a) {
          this.window.addByte(a);
          this.output.b[this.outpos] = a & 255;
          this.needed--;
          this.outpos++;
        },
        addDistOne: function (a) {
          for (var b = this.window.getLastChar(), c = 0; c < a; )
            (c++, this.addByte(b));
        },
        addDist: function (a, b) {
          this.addBytes(this.window.buffer, this.window.pos - a, b);
        },
        applyHuffman: function (a) {
          switch (a._hx_index) {
            case 0:
              var b = a.i;
              return b;
            case 1:
              return (
                (b = a.left),
                (a = a.right),
                this.applyHuffman(this.getBit() ? a : b)
              );
            case 2:
              return ((b = a.n), this.applyHuffman(a.table[this.getBits(b)]));
          }
        },
        inflateLengths: function (a, b) {
          for (var c = 0, d = 0; c < b; ) {
            var f = this.applyHuffman(this.huffman);
            switch (f) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                d = f;
                a[c] = f;
                ++c;
                break;
              case 16:
                f = c + 3 + this.getBits(2);
                if (f > b) throw W.thrown('Invalid data');
                for (; c < f; ) ((a[c] = d), ++c);
                break;
              case 17:
                c += 3 + this.getBits(3);
                if (c > b) throw W.thrown('Invalid data');
                break;
              case 18:
                c += 11 + this.getBits(7);
                if (c > b) throw W.thrown('Invalid data');
                break;
              default:
                throw W.thrown('Invalid data');
            }
          }
        },
        inflateLoop: function () {
          switch (this.state._hx_index) {
            case 0:
              var a = this.input.readByte();
              if (8 != (a & 15)) throw W.thrown('Invalid data');
              var b = this.input.readByte(),
                c = 0 != (b & 32);
              if (0 != ((a << 8) + b) % 31) throw W.thrown('Invalid data');
              if (c) throw W.thrown('Unsupported dictionary');
              this.state = hc.Block;
              return !0;
            case 1:
              switch (((this.isFinal = this.getBit()), this.getBits(2))) {
                case 0:
                  this.len = this.input.readUInt16();
                  if (this.input.readUInt16() != 65535 - this.len)
                    throw W.thrown('Invalid data');
                  this.state = hc.Flat;
                  a = this.inflateLoop();
                  this.resetBits();
                  return a;
                case 1:
                  return (
                    (this.huffman = this.buildFixedHuffman()),
                    (this.huffdist = null),
                    (this.state = hc.CData),
                    !0
                  );
                case 2:
                  a = this.getBits(5) + 257;
                  b = this.getBits(5) + 1;
                  var d = this.getBits(4) + 4;
                  c = 0;
                  for (var f = d; c < f; ) {
                    var h = c++;
                    this.lengths[Jc.CODE_LENGTHS_POS[h]] = this.getBits(3);
                  }
                  c = d;
                  for (f = 19; c < f; )
                    ((h = c++), (this.lengths[Jc.CODE_LENGTHS_POS[h]] = 0));
                  this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                  d = [];
                  c = 0;
                  for (f = a + b; c < f; ) (c++, d.push(0));
                  this.inflateLengths(d, a + b);
                  this.huffdist = this.htools.make(d, a, b, 16);
                  this.huffman = this.htools.make(d, 0, a, 16);
                  this.state = hc.CData;
                  return !0;
                default:
                  throw W.thrown('Invalid data');
              }
            case 2:
              b = this.applyHuffman(this.huffman);
              if (256 > b) return (this.addByte(b), 0 < this.needed);
              if (256 == b) this.state = this.isFinal ? hc.Crc : hc.Block;
              else {
                b -= 257;
                a = Jc.LEN_EXTRA_BITS_TBL[b];
                if (-1 == a) throw W.thrown('Invalid data');
                this.len = Jc.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                b =
                  null == this.huffdist
                    ? this.getRevBits(5)
                    : this.applyHuffman(this.huffdist);
                a = Jc.DIST_EXTRA_BITS_TBL[b];
                if (-1 == a) throw W.thrown('Invalid data');
                this.dist = Jc.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                if (this.dist > this.window.available())
                  throw W.thrown('Invalid data');
                this.state = 1 == this.dist ? hc.DistOne : hc.Dist;
              }
              return !0;
            case 3:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                (b = this.input.read(a)),
                (this.len -= a),
                this.addBytes(b, 0, a),
                0 == this.len &&
                  (this.state = this.isFinal ? hc.Crc : hc.Block),
                0 < this.needed
              );
            case 4:
              a = this.window.checksum();
              if (null == a) return ((this.state = hc.Done), !0);
              b = vf.read(this.input);
              if (!a.equals(b)) throw W.thrown('Invalid CRC');
              this.state = hc.Done;
              return !0;
            case 5:
              for (; 0 < this.len && 0 < this.needed; )
                ((a = this.len < this.dist ? this.len : this.dist),
                  (a = this.needed < a ? this.needed : a),
                  this.addDist(this.dist, a),
                  (this.len -= a));
              0 == this.len && (this.state = hc.CData);
              return 0 < this.needed;
            case 6:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                this.addDistOne(a),
                (this.len -= a),
                0 == this.len && (this.state = hc.CData),
                0 < this.needed
              );
            case 7:
              return !1;
          }
        },
        __class__: Jc,
      };
      var og = function (a) {
        this.i = a;
      };
      g['haxe.zip.Reader'] = og;
      og.__name__ = 'haxe.zip.Reader';
      og.readZip = function (a) {
        return new og(a).read();
      };
      og.prototype = {
        readZipDate: function () {
          var a = this.i.readUInt16(),
            b = (a >> 11) & 31,
            c = (a >> 5) & 63;
          a &= 31;
          var d = this.i.readUInt16();
          return new Date(
            (d >> 9) + 1980,
            ((d >> 5) & 15) - 1,
            d & 31,
            b,
            c,
            a << 1,
          );
        },
        readExtraFields: function (a) {
          for (var b = new Ya(); 0 < a; ) {
            if (4 > a) throw W.thrown('Invalid extra fields data');
            var c = this.i.readUInt16(),
              d = this.i.readUInt16();
            if (a < d) throw W.thrown('Invalid extra fields data');
            if (28789 == c) {
              var f = this.i.readByte();
              if (1 != f) {
                var h = new nh();
                h.addByte(f);
                h.add(this.i.read(d - 1));
                b.add(xf.FUnknown(c, h.getBytes()));
              } else
                ((c = this.i.readInt32()),
                  (f = this.i.read(d - 5).toString()),
                  b.add(xf.FInfoZipUnicodePath(f, c)));
            } else b.add(xf.FUnknown(c, this.i.read(d)));
            a -= 4 + d;
          }
          return b;
        },
        readEntryHeader: function () {
          var a = this.i,
            b = a.readInt32();
          if (33639248 == b || 101010256 == b) return null;
          if (67324752 != b) throw W.thrown('Invalid Zip Data');
          a.readUInt16();
          b = a.readUInt16();
          var c = 0 != (b & 2048);
          if (0 != (b & 63473)) throw W.thrown('Unsupported flags ' + b);
          var d = a.readUInt16(),
            f = 0 != d;
          if (f && 8 != d) throw W.thrown('Unsupported compression ' + d);
          d = this.readZipDate();
          var h = a.readInt32(),
            k = a.readInt32(),
            v = a.readInt32(),
            p = a.readInt16(),
            g = a.readInt16();
          a = a.readString(p);
          g = this.readExtraFields(g);
          c && g.push(xf.FUtf8);
          0 != (b & 8) && (h = null);
          return {
            fileName: a,
            fileSize: v,
            fileTime: d,
            compressed: f,
            dataSize: k,
            data: null,
            crc32: h,
            extraFields: g,
          };
        },
        read: function () {
          for (var a = new Ya(), b = null; ; ) {
            var c = this.readEntryHeader();
            if (null == c) break;
            if (null == c.crc32) {
              if (c.compressed) {
                null == b && (b = new tb(new ArrayBuffer(65536)));
                for (var d = new nh(), f = new Jc(this.i, !1, !1); ; ) {
                  var h = f.readBytes(b, 0, 65536);
                  d.addBytes(b, 0, h);
                  if (65536 > h) break;
                }
                c.data = d.getBytes();
              } else c.data = this.i.read(c.dataSize);
              c.crc32 = this.i.readInt32();
              134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
              c.dataSize = this.i.readInt32();
              c.fileSize = this.i.readInt32();
              c.dataSize = c.fileSize;
              c.compressed = !1;
            } else c.data = this.i.read(c.dataSize);
            a.add(c);
          }
          return a;
        },
        __class__: og,
      };
      var Ua = function () {};
      g['js.Boot'] = Ua;
      Ua.__name__ = 'js.Boot';
      Ua.getClass = function (a) {
        if (null == a) return null;
        if (a instanceof Array) return Array;
        var b = a.__class__;
        if (null != b) return b;
        a = Ua.__nativeClassName(a);
        return null != a ? Ua.__resolveNativeClass(a) : null;
      };
      Ua.__string_rec = function (a, b) {
        if (null == a) return 'null';
        if (5 <= b.length) return '<...>';
        var c = typeof a;
        'function' == c && (a.__name__ || a.__ename__) && (c = 'object');
        switch (c) {
          case 'function':
            return '<function>';
          case 'object':
            if (a.__enum__) {
              var d = F[a.__enum__].__constructs__[a._hx_index];
              c = d._hx_name;
              if (d.__params__) {
                b += '\t';
                var f = [],
                  h = 0;
                for (d = d.__params__; h < d.length; ) {
                  var k = d[h];
                  h += 1;
                  f.push(Ua.__string_rec(a[k], b));
                }
                return c + '(' + f.join(',') + ')';
              }
              return c;
            }
            if (a instanceof Array) {
              c = '[';
              b += '\t';
              f = 0;
              for (h = a.length; f < h; )
                ((d = f++),
                  (c += (0 < d ? ',' : '') + Ua.__string_rec(a[d], b)));
              return c + ']';
            }
            try {
              f = a.toString;
            } catch (v) {
              return ((Qa.lastError = v), '???');
            }
            if (
              null != f &&
              f != Object.toString &&
              'function' == typeof f &&
              ((c = a.toString()), '[object Object]' != c)
            )
              return c;
            c = '{\n';
            b += '\t';
            f = null != a.hasOwnProperty;
            h = null;
            for (h in a)
              (f && !a.hasOwnProperty(h)) ||
                'prototype' == h ||
                '__class__' == h ||
                '__super__' == h ||
                '__interfaces__' == h ||
                '__properties__' == h ||
                (2 != c.length && (c += ', \n'),
                (c += b + h + ' : ' + Ua.__string_rec(a[h], b)));
            b = b.substring(1);
            return c + ('\n' + b + '}');
          case 'string':
            return a;
          default:
            return String(a);
        }
      };
      Ua.__interfLoop = function (a, b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var c = a.__interfaces__;
        if (null != c)
          for (var d = 0, f = c.length; d < f; ) {
            var h = d++;
            h = c[h];
            if (h == b || Ua.__interfLoop(h, b)) return !0;
          }
        return Ua.__interfLoop(a.__super__, b);
      };
      Ua.__instanceof = function (a, b) {
        if (null == b) return !1;
        switch (b) {
          case Array:
            return a instanceof Array;
          case gk:
            return 'boolean' == typeof a;
          case hk:
            return null != a;
          case ik:
            return 'number' == typeof a;
          case Wj:
            return 'number' == typeof a ? (a | 0) === a : !1;
          case String:
            return 'string' == typeof a;
          default:
            if (null != a)
              if ('function' == typeof b) {
                if (Ua.__downcastCheck(a, b)) return !0;
              } else {
                if (
                  'object' == typeof b &&
                  Ua.__isNativeObj(b) &&
                  a instanceof b
                )
                  return !0;
              }
            else return !1;
            return (b == Yj && null != a.__name__) ||
              (b == Zj && null != a.__ename__)
              ? !0
              : null != a.__enum__
                ? F[a.__enum__] == b
                : !1;
        }
      };
      Ua.__downcastCheck = function (a, b) {
        return a instanceof b
          ? !0
          : b.__isInterface__
            ? Ua.__interfLoop(Ua.getClass(a), b)
            : !1;
      };
      Ua.__cast = function (a, b) {
        if (null == a || Ua.__instanceof(a, b)) return a;
        throw W.thrown('Cannot cast ' + I.string(a) + ' to ' + I.string(b));
      };
      Ua.__nativeClassName = function (a) {
        a = Ua.__toStr.call(a).slice(8, -1);
        return 'Object' == a || 'Function' == a || 'Math' == a || 'JSON' == a
          ? null
          : a;
      };
      Ua.__isNativeObj = function (a) {
        return null != Ua.__nativeClassName(a);
      };
      Ua.__resolveNativeClass = function (a) {
        return y[a];
      };
      var xe = function () {};
      g['js.Browser'] = xe;
      xe.__name__ = 'js.Browser';
      xe.__properties__ = { get_supported: 'get_supported' };
      xe.get_supported = function () {
        return 'undefined' != typeof window &&
          'undefined' != typeof window.location
          ? 'string' == typeof window.location.protocol
          : !1;
      };
      xe.getLocalStorage = function () {
        try {
          var a = window.localStorage;
          a.getItem('');
          if (0 == a.length) {
            var b = '_hx_' + Math.random();
            a.setItem(b, b);
            a.removeItem(b);
          }
          return a;
        } catch (c) {
          return ((Qa.lastError = c), null);
        }
      };
      var Cj = function () {};
      g['js.html._CanvasElement.CanvasUtil'] = Cj;
      Cj.__name__ = 'js.html._CanvasElement.CanvasUtil';
      Cj.getContextWebGL = function (a, b) {
        var c = a.getContext('webgl', b);
        if (null != c) return c;
        c = a.getContext('experimental-webgl', b);
        return null != c ? c : null;
      };
      var wi = function () {
        this.connected = !0;
        this.buttons = [];
        this.axes = [];
      };
      g['lime._internal.backend.html5.GameDeviceData'] = wi;
      wi.__name__ = 'lime._internal.backend.html5.GameDeviceData';
      wi.prototype = { __class__: wi };
      var Si = function (a) {
        this.parent = a;
        this.id = -1;
        this.gain = 1;
        this.position = new Ri();
      };
      g['lime._internal.backend.html5.HTML5AudioSource'] = Si;
      Si.__name__ = 'lime._internal.backend.html5.HTML5AudioSource';
      Si.prototype = {
        dispose: function () {},
        init: function () {},
        play: function () {
          if (
            !this.playing &&
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            this.playing = !0;
            var a = this.getCurrentTime();
            this.completed = !1;
            var b = this.parent.buffer.__srcHowl._volume;
            this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
            this.id = this.parent.buffer.__srcHowl.play();
            this.parent.buffer.__srcHowl._volume = b;
            this.setPosition(this.parent.get_position());
            this.parent.buffer.__srcHowl.on(
              'end',
              l(this, this.howl_onEnd),
              this.id,
            );
            this.setCurrentTime(a);
          }
        },
        stop: function () {
          this.playing = !1;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            (this.parent.buffer.__srcHowl.stop(this.id),
            this.parent.buffer.__srcHowl.off(
              'end',
              l(this, this.howl_onEnd),
              this.id,
            ));
        },
        howl_onEnd: function () {
          this.playing = !1;
          0 < this.loops
            ? (this.loops--, this.stop(), this.play())
            : (null != this.parent.buffer &&
                null != this.parent.buffer.__srcHowl &&
                (this.parent.buffer.__srcHowl.stop(this.id),
                this.parent.buffer.__srcHowl.off(
                  'end',
                  l(this, this.howl_onEnd),
                  this.id,
                )),
              (this.completed = !0),
              this.parent.onComplete.dispatch());
        },
        getCurrentTime: function () {
          if (-1 == this.id) return 0;
          if (this.completed) return this.getLength();
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var a =
              ((1e3 * this.parent.buffer.__srcHowl.seek(this.id)) | 0) -
              this.parent.offset;
            return 0 > a ? 0 : a;
          }
          return 0;
        },
        setCurrentTime: function (a) {
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var b = (a + this.parent.offset) / 1e3;
            0 > b && (b = 0);
            this.parent.buffer.__srcHowl.seek(b, this.id);
          }
          return a;
        },
        getGain: function () {
          return this.gain;
        },
        setGain: function (a) {
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            -1 != this.id &&
            this.parent.buffer.__srcHowl.volume(a, this.id);
          return (this.gain = a);
        },
        getLength: function () {
          return 0 != this.length
            ? this.length
            : null != this.parent.buffer && null != this.parent.buffer.__srcHowl
              ? (1e3 * this.parent.buffer.__srcHowl.duration()) | 0
              : 0;
        },
        setLength: function (a) {
          return (this.length = a);
        },
        setLoops: function (a) {
          return (this.loops = a);
        },
        getPosition: function () {
          return this.position;
        },
        setPosition: function (a) {
          this.position.x = a.x;
          this.position.y = a.y;
          this.position.z = a.z;
          this.position.w = a.w;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            null != this.parent.buffer.__srcHowl.pos &&
            this.parent.buffer.__srcHowl.pos(
              this.position.x,
              this.position.y,
              this.position.z,
              this.id,
            );
          return this.position;
        },
        __class__: Si,
      };
      var Aa = function () {
        this.validStatus0 = new xa('Tizen', 'gi').match(
          window.navigator.userAgent,
        );
      };
      g['lime._internal.backend.html5.HTML5HTTPRequest'] = Aa;
      Aa.__name__ = 'lime._internal.backend.html5.HTML5HTTPRequest';
      Aa.loadImage = function (a) {
        var b = new fd();
        Aa.activeRequests < Aa.requestLimit
          ? (Aa.activeRequests++, Aa.__loadImage(a, b, 0))
          : Aa.requestQueue.add({
              instance: null,
              uri: a,
              promise: b,
              type: 'IMAGE',
              options: 0,
            });
        return b.future;
      };
      Aa.loadImageFromBytes = function (a, b) {
        var c = URL.createObjectURL(new Blob([a.b.bufferValue], { type: b }));
        return null != c
          ? ((a = new fd()),
            Aa.activeRequests < Aa.requestLimit
              ? (Aa.activeRequests++, Aa.__loadImage(c, a, 1))
              : Aa.requestQueue.add({
                  instance: null,
                  uri: c,
                  promise: a,
                  type: 'IMAGE',
                  options: 1,
                }),
            a.future)
          : Aa.loadImage('data:' + b + ';base64,' + Pd.encode(a));
      };
      Aa.processQueue = function () {
        if (Aa.activeRequests < Aa.requestLimit && 0 < Aa.requestQueue.length) {
          Aa.activeRequests++;
          var a = Aa.requestQueue.pop();
          switch (a.type) {
            case 'BINARY':
              a.instance.__loadData(a.uri, a.promise);
              break;
            case 'IMAGE':
              Aa.__loadImage(a.uri, a.promise, a.options);
              break;
            case 'TEXT':
              a.instance.__loadText(a.uri, a.promise);
              break;
            default:
              Aa.activeRequests--;
          }
        }
      };
      Aa.__fixHostname = function (a) {
        return null == a ? '' : a;
      };
      Aa.__fixPort = function (a, b) {
        if (null == a || '' == a)
          switch (b) {
            case 'ftp:':
              return '21';
            case 'gopher:':
              return '70';
            case 'http:':
              return '80';
            case 'https:':
              return '443';
            case 'ws:':
              return '80';
            case 'wss:':
              return '443';
            default:
              return '';
          }
        return a;
      };
      Aa.__fixProtocol = function (a) {
        return null == a || '' == a ? 'http:' : a;
      };
      Aa.__isInMemoryURI = function (a) {
        return M.startsWith(a, 'data:') ? !0 : M.startsWith(a, 'blob:');
      };
      Aa.__isSameOrigin = function (a) {
        if (null == a || '' == a || Aa.__isInMemoryURI(a)) return !0;
        null == Aa.originElement &&
          ((Aa.originElement = window.document.createElement('a')),
          (Aa.originHostname = Aa.__fixHostname(y.location.hostname)),
          (Aa.originProtocol = Aa.__fixProtocol(y.location.protocol)),
          (Aa.originPort = Aa.__fixPort(y.location.port, Aa.originProtocol)));
        var b = Aa.originElement;
        b.href = a;
        '' == b.hostname && (b.href = b.href);
        var c = Aa.__fixHostname(b.hostname);
        a = Aa.__fixProtocol(b.protocol);
        b = Aa.__fixPort(b.port, a);
        c = '' == c || c == Aa.originHostname;
        b = '' == b || b == Aa.originPort;
        return 'file:' != a && c ? b : !1;
      };
      Aa.__loadImage = function (a, b, c) {
        var d = new window.Image();
        Aa.__isSameOrigin(a) || (d.crossOrigin = 'Anonymous');
        null == Aa.supportsImageProgress &&
          (Aa.supportsImageProgress = 'onprogress' in d);
        if (Aa.supportsImageProgress || Aa.__isInMemoryURI(a))
          (d.addEventListener(
            'load',
            function (f) {
              Aa.__revokeBlobURI(a, c);
              f = new be(null, d.width, d.height);
              f.__srcImage = d;
              Aa.activeRequests--;
              Aa.processQueue();
              b.complete(new Mb(f));
            },
            !1,
          ),
            d.addEventListener(
              'progress',
              function (a) {
                b.progress(a.loaded, a.total);
              },
              !1,
            ),
            d.addEventListener(
              'error',
              function (d) {
                Aa.__revokeBlobURI(a, c);
                Aa.activeRequests--;
                Aa.processQueue();
                b.error(new yf(d.detail, null));
              },
              !1,
            ),
            (d.src = a));
        else {
          var f = new XMLHttpRequest();
          f.onload = function (a) {
            Aa.activeRequests--;
            Aa.processQueue();
            new Mb().__fromBytes(tb.ofData(f.response), function (a) {
              b.complete(a);
            });
          };
          f.onerror = function (a) {
            b.error(new yf(a.message, null));
          };
          f.onprogress = function (a) {
            a.lengthComputable && b.progress(a.loaded, a.total);
          };
          f.open('GET', a, !0);
          f.responseType = 'arraybuffer';
          f.overrideMimeType('text/plain; charset=x-user-defined');
          f.send(null);
        }
      };
      Aa.__revokeBlobURI = function (a, b) {
        0 != (b & 1) && URL.revokeObjectURL(a);
      };
      Aa.prototype = {
        init: function (a) {
          this.parent = a;
        },
        load: function (a, b, c) {
          this.request = new XMLHttpRequest();
          'POST' == this.parent.method
            ? this.request.upload.addEventListener('progress', b, !1)
            : this.request.addEventListener('progress', b, !1);
          this.request.onreadystatechange = c;
          b = '';
          if (null == this.parent.data) {
            c = Object.keys(this.parent.formData.h);
            for (var d = c.length, f = 0; f < d; ) {
              var h = c[f++];
              0 < b.length && (b += '&');
              var k = this.parent.formData.h[h];
              if (-1 < h.indexOf('[]') && k instanceof Array) {
                var v = [];
                for (k = J(k); k.hasNext(); ) {
                  var p = k.next();
                  v.push(encodeURIComponent(p));
                }
                v = v.join('&amp;' + h + '=');
                b += encodeURIComponent(h) + '=' + v;
              } else
                ((v = encodeURIComponent(h) + '='),
                  (h = I.string(k)),
                  (b += v + encodeURIComponent(h)));
            }
            'GET' == this.parent.method &&
              '' != b &&
              ((a = -1 < a.indexOf('?') ? a + ('&' + b) : a + ('?' + b)),
              (b = ''));
          }
          this.request.open(I.string(this.parent.method), a, !0);
          0 < this.parent.timeout &&
            (this.request.timeout = this.parent.timeout);
          this.binary && (this.request.responseType = 'arraybuffer');
          a = null;
          v = 0;
          for (c = this.parent.headers; v < c.length; )
            ((d = c[v]),
              ++v,
              'Content-Type' == d.name
                ? (a = d.value)
                : this.request.setRequestHeader(d.name, d.value));
          null != this.parent.contentType && (a = this.parent.contentType);
          null == a &&
            (null != this.parent.data
              ? (a = 'application/octet-stream')
              : '' != b && (a = 'application/x-www-form-urlencoded'));
          null != a && this.request.setRequestHeader('Content-Type', a);
          this.parent.withCredentials && (this.request.withCredentials = !0);
          null != this.parent.data
            ? this.request.send(this.parent.data.b.bufferValue)
            : this.request.send(b);
        },
        loadData: function (a) {
          var b = new fd();
          Aa.activeRequests < Aa.requestLimit
            ? (Aa.activeRequests++, this.__loadData(a, b))
            : Aa.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'BINARY',
                options: 0,
              });
          return b.future;
        },
        loadText: function (a) {
          var b = new fd();
          Aa.activeRequests < Aa.requestLimit
            ? (Aa.activeRequests++, this.__loadText(a, b))
            : Aa.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'TEXT',
                options: 0,
              });
          return b.future;
        },
        processResponse: function () {
          if (this.parent.enableResponseHeaders) {
            this.parent.responseHeaders = [];
            for (
              var a,
                b,
                c = 0,
                d = this.request.getAllResponseHeaders().split('\n');
              c < d.length;

            )
              ((b = d[c]),
                ++c,
                (a = M.trim(O.substr(b, 0, b.indexOf(':')))),
                (b = M.trim(O.substr(b, b.indexOf(':') + 1, null))),
                '' != a && this.parent.responseHeaders.push(new qh(a, b)));
          }
          this.parent.responseStatus = this.request.status;
        },
        __loadData: function (a, b) {
          var c = this;
          this.binary = !0;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                ((a = null),
                '' == c.request.responseType
                  ? null != c.request.responseText &&
                    (a = tb.ofString(c.request.responseText))
                  : null != c.request.response &&
                    (a = tb.ofData(c.request.response)),
                null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(a))
                  : (c.processResponse(), b.error(new yf(c.request.status, a))),
                (c.request = null),
                Aa.activeRequests--,
                Aa.processQueue());
            },
          );
        },
        __loadText: function (a, b) {
          var c = this;
          this.binary = !1;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                (null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(c.request.responseText))
                  : (c.processResponse(),
                    b.error(new yf(c.request.status, c.request.responseText))),
                (c.request = null),
                Aa.activeRequests--,
                Aa.processQueue());
            },
          );
        },
        __class__: Aa,
      };
      var Ti = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Dynamic_Void'] = Ti;
      Ti.__name__ = 'lime.app._Event_Dynamic_Void';
      Ti.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Ti,
      };
      var Xj = {
          disablePreserveClasses: function (a) {
            null != a &&
              a instanceof Object &&
              1 != ya.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              (a.__skipPrototype__ = !0);
          },
          restoreClasses: function (a, b) {
            null == b &&
              ((b = (2147483647 * Math.random()) | 0),
              ya.field(a, '__restoreFlag__') == b && ++b);
            if (
              null != a &&
              a instanceof Object &&
              1 != ya.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              ya.field(a, '__restoreFlag__') != b
            ) {
              try {
                a.__restoreFlag__ = b;
              } catch (f) {
                Qa.lastError = f;
                return;
              }
              if (null != ya.field(a, '__prototype__'))
                try {
                  Object.setPrototypeOf(
                    a,
                    g[ya.field(a, '__prototype__')].prototype,
                  );
                } catch (f) {
                  Qa.lastError = f;
                }
              var c = 0;
              for (a = Object.values(a); c < a.length; ) {
                var d = a[c];
                ++c;
                Xj.restoreClasses(d, b);
              }
            }
          },
        },
        jk = {
          toFunction: function (a) {
            if (null != a.func) return a.func;
            if (null != a.classPath && null != a.functionName)
              return ((a.func = g[a.classPath][a.functionName]), a.func);
            if (null != a.sourceCode)
              return (
                (a.func = new Function('return ' + a.sourceCode)()),
                a.func
              );
            throw W.thrown(
              'Object is not a valid WorkFunction: ' + I.string(a),
            );
          },
        },
        bd = function (a, b) {
          this.__href = a;
          null != b &&
            ((this.__worker = b),
            (this.__worker.onmessage = l(this, this.dispatchMessage)),
            (this.onMessage = new Ti()));
          Xj.disablePreserveClasses(this);
        };
      g['lime._internal.backend.html5.HTML5Thread'] = bd;
      bd.__name__ = 'lime._internal.backend.html5.HTML5Thread';
      bd.prototype = {
        dispatchMessage: function (a) {
          a = a.data;
          Xj.restoreClasses(a);
          null != this.onMessage && this.onMessage.dispatch(a);
          bd.__resolveMethods.isEmpty()
            ? bd.__messages.add(a)
            : bd.__resolveMethods.pop()(a);
        },
        destroy: function () {
          if (null != this.__worker) this.__worker.terminate();
          else if (bd.__isWorker)
            try {
              y.close();
            } catch (a) {
              Qa.lastError = a;
            }
        },
        __class__: bd,
      };
      var Pa = function (a) {
        this.imeCompositionActive = !1;
        this.unusedTouchesPool = new Ya();
        this.scale = 1;
        this.currentTouches = new ac();
        this.parent = a;
        this.cursor = Qb.DEFAULT;
        this.cacheMouseY = this.cacheMouseX = 0;
        var b = a.__attributes;
        Object.prototype.hasOwnProperty.call(b, 'context') || (b.context = {});
        this.renderType = b.context.type;
        Object.prototype.hasOwnProperty.call(b, 'element') &&
          (a.element = b.element);
        var c = a.element;
        Object.prototype.hasOwnProperty.call(b, 'allowHighDPI') &&
          b.allowHighDPI &&
          'dom' != this.renderType &&
          (this.scale = window.devicePixelRatio);
        a.__scale = this.scale;
        this.setWidth = Object.prototype.hasOwnProperty.call(b, 'width')
          ? b.width
          : 0;
        this.setHeight = Object.prototype.hasOwnProperty.call(b, 'height')
          ? b.height
          : 0;
        a.__width = this.setWidth;
        a.__height = this.setHeight;
        a.id = Pa.windowID++;
        c instanceof HTMLCanvasElement
          ? (this.canvas = c)
          : 'dom' == this.renderType
            ? (this.div = window.document.createElement('div'))
            : (this.canvas = window.document.createElement('canvas'));
        if (null != this.canvas) {
          var d = this.canvas.style;
          d.setProperty('-webkit-transform', 'translateZ(0)', null);
          d.setProperty('transform', 'translateZ(0)', null);
        } else
          null != this.div &&
            ((d = this.div.style),
            d.setProperty('-webkit-transform', 'translate3D(0,0,0)', null),
            d.setProperty('transform', 'translate3D(0,0,0)', null),
            (d.position = 'relative'),
            (d.overflow = 'hidden'),
            d.setProperty('-webkit-user-select', 'none', null),
            d.setProperty('-moz-user-select', 'none', null),
            d.setProperty('-ms-user-select', 'none', null),
            d.setProperty('-o-user-select', 'none', null));
        0 == a.__width &&
          0 == a.__height &&
          (null != c
            ? ((a.__width = c.clientWidth), (a.__height = c.clientHeight))
            : ((a.__width = window.innerWidth),
              (a.__height = window.innerHeight)),
          (this.cacheElementWidth = a.__width),
          (this.cacheElementHeight = a.__height),
          (this.resizeElement = !0));
        null != this.canvas
          ? ((this.canvas.width = Math.round(a.__width * this.scale)),
            (this.canvas.height = Math.round(a.__height * this.scale)),
            (this.canvas.style.width = a.__width + 'px'),
            (this.canvas.style.height = a.__height + 'px'))
          : ((this.div.style.width = a.__width + 'px'),
            (this.div.style.height = a.__height + 'px'));
        if (
          (Object.prototype.hasOwnProperty.call(b, 'resizable') &&
            b.resizable) ||
          (!Object.prototype.hasOwnProperty.call(b, 'width') &&
            0 == this.setWidth &&
            0 == this.setHeight)
        )
          a.__resizable = !0;
        this.updateSize();
        if (null != c) {
          null != this.canvas
            ? c != this.canvas && c.appendChild(this.canvas)
            : c.appendChild(this.div);
          b = 'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
            ' ',
          );
          for (d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            c.addEventListener(f, l(this, this.handleMouseEvent), !0);
          }
          c.addEventListener(
            'contextmenu',
            l(this, this.handleContextMenuEvent),
            !0,
          );
          c.addEventListener('dragstart', l(this, this.handleDragEvent), !0);
          c.addEventListener('dragover', l(this, this.handleDragEvent), !0);
          c.addEventListener('drop', l(this, this.handleDragEvent), !0);
          c.addEventListener('touchstart', l(this, this.handleTouchEvent), !0);
          c.addEventListener('touchmove', l(this, this.handleTouchEvent), !0);
          c.addEventListener('touchend', l(this, this.handleTouchEvent), !0);
          c.addEventListener('touchcancel', l(this, this.handleTouchEvent), !0);
          c.addEventListener(
            'gamepadconnected',
            l(this, this.handleGamepadEvent),
            !0,
          );
          c.addEventListener(
            'gamepaddisconnected',
            l(this, this.handleGamepadEvent),
            !0,
          );
        }
        this.createContext();
        'webgl' == a.context.type &&
          (this.canvas.addEventListener(
            'webglcontextlost',
            l(this, this.handleContextEvent),
            !1,
          ),
          this.canvas.addEventListener(
            'webglcontextrestored',
            l(this, this.handleContextEvent),
            !1,
          ));
      };
      g['lime._internal.backend.html5.HTML5Window'] = Pa;
      Pa.__name__ = 'lime._internal.backend.html5.HTML5Window';
      Pa.prototype = {
        close: function () {
          var a = this.parent.element;
          if (null != a) {
            null != this.canvas
              ? (a != this.canvas && a.removeChild(this.canvas),
                (this.canvas = null))
              : null != this.div &&
                (a.removeChild(this.div), (this.div = null));
            for (
              var b =
                  'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
                    ' ',
                  ),
                c = 0;
              c < b.length;

            ) {
              var d = b[c];
              ++c;
              a.removeEventListener(d, l(this, this.handleMouseEvent), !0);
            }
            a.removeEventListener(
              'contextmenu',
              l(this, this.handleContextMenuEvent),
              !0,
            );
            a.removeEventListener(
              'dragstart',
              l(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener(
              'dragover',
              l(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener('drop', l(this, this.handleDragEvent), !0);
            a.removeEventListener(
              'touchstart',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchmove',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchend',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchcancel',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'gamepadconnected',
              l(this, this.handleGamepadEvent),
              !0,
            );
            a.removeEventListener(
              'gamepaddisconnected',
              l(this, this.handleGamepadEvent),
              !0,
            );
          }
          this.parent.application.__removeWindow(this.parent);
        },
        createContext: function () {
          var a = new Ui(),
            b = this.parent.__attributes.context;
          a.window = this.parent;
          a.attributes = b;
          if (null != this.div)
            ((a.dom = this.div), (a.type = 'dom'), (a.version = ''));
          else if (null != this.canvas) {
            var c = null,
              d = 'canvas' == this.renderType,
              f =
                'opengl' == this.renderType ||
                'opengles' == this.renderType ||
                'webgl' == this.renderType,
              h =
                !Object.prototype.hasOwnProperty.call(b, 'version') ||
                '1' != b.version,
              k = !1;
            if (
              f ||
              (!d &&
                (!Object.prototype.hasOwnProperty.call(b, 'hardware') ||
                  b.hardware))
            ) {
              d =
                Object.prototype.hasOwnProperty.call(b, 'background') &&
                null == b.background;
              f = Object.prototype.hasOwnProperty.call(b, 'colorDepth')
                ? b.colorDepth
                : 16;
              var v =
                  Object.prototype.hasOwnProperty.call(b, 'antialiasing') &&
                  0 < b.antialiasing,
                p = Object.prototype.hasOwnProperty.call(b, 'depth')
                  ? b.depth
                  : !0,
                g =
                  Object.prototype.hasOwnProperty.call(b, 'stencil') &&
                  b.stencil;
              b =
                Object.prototype.hasOwnProperty.call(
                  b,
                  'preserveDrawingBuffer',
                ) && b.preserveDrawingBuffer;
              b = {
                alpha: d || 16 < f,
                antialias: v,
                depth: p,
                premultipliedAlpha: !0,
                stencil: g,
                preserveDrawingBuffer: b,
                failIfMajorPerformanceCaveat: !1,
              };
              d = ['webgl', 'experimental-webgl'];
              h && d.unshift('webgl2');
              for (
                h = 0;
                h < d.length &&
                ((f = d[h]),
                ++h,
                (c = this.canvas.getContext(f, b)),
                null != c && 'webgl2' == f && (k = !0),
                null == c);

              );
            }
            null == c
              ? ((a.canvas2D = this.canvas.getContext('2d')),
                (a.type = 'canvas'),
                (a.version = ''))
              : ((a.webgl = wc.fromWebGL2RenderContext(c)),
                k && (a.webgl2 = c),
                null == ce.context &&
                  ((ce.context = c),
                  (ce.type = 'webgl'),
                  (ce.version = k ? 2 : 1)),
                (a.type = 'webgl'),
                (a.version = k ? '2' : '1'));
          }
          this.parent.context = a;
        },
        focusTextInput: function () {
          var a = this;
          this.__focusPending ||
            ((this.__focusPending = !0),
            Pe.delay(function () {
              a.__focusPending = !1;
              a.textInputEnabled && Pa.textInput.focus();
            }, 20));
        },
        getFrameRate: function () {
          return null == this.parent.application
            ? 0
            : 0 > this.parent.application.__backend.framePeriod
              ? 60
              : 1e3 == this.parent.application.__backend.framePeriod
                ? 0
                : 1e3 / this.parent.application.__backend.framePeriod;
        },
        handleContextEvent: function (a) {
          switch (a.type) {
            case 'webglcontextlost':
              a.cancelable && a.preventDefault();
              this.parent.context = null;
              this.parent.onRenderContextLost.dispatch();
              break;
            case 'webglcontextrestored':
              (this.createContext(),
                this.parent.onRenderContextRestored.dispatch(
                  this.parent.context,
                ));
          }
        },
        handleContextMenuEvent: function (a) {
          (this.parent.onMouseUp.canceled ||
            this.parent.onMouseDown.canceled) &&
            a.cancelable &&
            a.preventDefault();
        },
        handleCutOrCopyEvent: function (a) {
          var b = ic.get_text();
          null == b && (b = '');
          a.clipboardData.setData('text/plain', b);
          a.cancelable && a.preventDefault();
        },
        handleDragEvent: function (a) {
          switch (a.type) {
            case 'dragover':
              return (a.preventDefault(), !1);
            case 'dragstart':
              if (
                'img' ==
                  Ua.__cast(a.target, HTMLElement).nodeName.toLowerCase() &&
                a.cancelable
              )
                return (a.preventDefault(), !1);
              break;
            case 'drop':
              if (null != a.dataTransfer && 0 < a.dataTransfer.files.length)
                return (
                  this.parent.onDropFile.dispatch(a.dataTransfer.files),
                  a.preventDefault(),
                  !1
                );
          }
          return !0;
        },
        handleFocusEvent: function (a) {
          this.textInputEnabled &&
            (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) &&
            this.focusTextInput();
        },
        handleGamepadEvent: function (a) {
          switch (a.type) {
            case 'gamepadconnected':
              bc.__connect(a.gamepad.index);
              'standard' == a.gamepad.mapping && fc.__connect(a.gamepad.index);
              break;
            case 'gamepaddisconnected':
              (bc.__disconnect(a.gamepad.index),
                fc.__disconnect(a.gamepad.index));
          }
        },
        handleInputEvent: function (a) {
          this.imeCompositionActive ||
            Pa.textInput.value == Pa.dummyCharacter ||
            ((a = M.replace(Pa.textInput.value, Pa.dummyCharacter, '')),
            0 < a.length && this.parent.onTextInput.dispatch(a),
            (Pa.textInput.value = Pa.dummyCharacter));
        },
        handleMouseEvent: function (a) {
          if ('wheel' != a.type) {
            if (null != this.parent.element)
              if (null != this.canvas) {
                var b = this.canvas.getBoundingClientRect();
                var c = (this.parent.__width / b.width) * (a.clientX - b.left);
                b = (this.parent.__height / b.height) * (a.clientY - b.top);
              } else
                null != this.div
                  ? ((b = this.div.getBoundingClientRect()),
                    (c = a.clientX - b.left),
                    (b = a.clientY - b.top))
                  : ((b = this.parent.element.getBoundingClientRect()),
                    (c =
                      (this.parent.__width / b.width) * (a.clientX - b.left)),
                    (b =
                      (this.parent.__height / b.height) * (a.clientY - b.top)));
            else ((c = a.clientX), (b = a.clientY));
            switch (a.type) {
              case 'mousedown':
                a.currentTarget == this.parent.element &&
                  window.addEventListener(
                    'mouseup',
                    l(this, this.handleMouseEvent),
                  );
                this.parent.clickCount = a.detail;
                this.parent.onMouseDown.dispatch(c, b, a.button);
                this.parent.clickCount = 0;
                this.parent.onMouseDown.canceled &&
                  a.cancelable &&
                  a.preventDefault();
                break;
              case 'mouseenter':
                a.target == this.parent.element &&
                  (this.parent.onEnter.dispatch(),
                  this.parent.onEnter.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mouseleave':
                a.target == this.parent.element &&
                  (this.parent.onLeave.dispatch(),
                  this.parent.onLeave.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mousemove':
                if (c != this.cacheMouseX || b != this.cacheMouseY)
                  (this.parent.onMouseMove.dispatch(c, b),
                    this.parent.onMouseMoveRelative.dispatch(
                      c - this.cacheMouseX,
                      b - this.cacheMouseY,
                    ),
                    (this.parent.onMouseMove.canceled ||
                      this.parent.onMouseMoveRelative.canceled) &&
                      a.cancelable &&
                      a.preventDefault());
                break;
              case 'mouseup':
                (window.removeEventListener(
                  'mouseup',
                  l(this, this.handleMouseEvent),
                ),
                  a.currentTarget == this.parent.element && a.stopPropagation(),
                  (this.parent.clickCount = a.detail),
                  this.parent.onMouseUp.dispatch(c, b, a.button),
                  (this.parent.clickCount = 0),
                  this.parent.onMouseUp.canceled &&
                    a.cancelable &&
                    a.preventDefault());
            }
            this.cacheMouseX = c;
            this.cacheMouseY = b;
          } else {
            switch (a.deltaMode) {
              case 0:
                c = ye.PIXELS;
                break;
              case 1:
                c = ye.LINES;
                break;
              case 2:
                c = ye.PAGES;
                break;
              default:
                c = ye.UNKNOWN;
            }
            this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
            this.parent.onMouseWheel.canceled &&
              a.cancelable &&
              a.preventDefault();
          }
        },
        handlePasteEvent: function (a) {
          if (-1 < a.clipboardData.types.indexOf('text/plain')) {
            var b = a.clipboardData.getData('text/plain');
            ic.set_text(b);
            this.textInputEnabled && this.parent.onTextInput.dispatch(b);
            a.cancelable && a.preventDefault();
          }
        },
        handleResizeEvent: function (a) {
          this.primaryTouch = null;
          this.updateSize();
        },
        handleTouchEvent: function (a) {
          a.cancelable && a.preventDefault();
          var b = null;
          null != this.parent.element &&
            (b =
              null != this.canvas
                ? this.canvas.getBoundingClientRect()
                : null != this.div
                  ? this.div.getBoundingClientRect()
                  : this.parent.element.getBoundingClientRect());
          var c = this.setWidth,
            d = this.setHeight;
          if (0 == c || 0 == d)
            null != b ? ((c = b.width), (d = b.height)) : (d = c = 1);
          for (var f, h, k, v, p, g = 0, t = a.changedTouches; g < t.length; ) {
            var m = t[g];
            ++g;
            null != b
              ? ((h = (c / b.width) * (m.clientX - b.left)),
                (k = (d / b.height) * (m.clientY - b.top)))
              : ((h = m.clientX), (k = m.clientY));
            if ('touchstart' == a.type)
              ((f = this.unusedTouchesPool.pop()),
                null == f
                  ? (f = new Tb(
                      h / c,
                      k / d,
                      m.identifier,
                      0,
                      0,
                      m.force,
                      this.parent.id,
                    ))
                  : ((f.x = h / c),
                    (f.y = k / d),
                    (f.id = m.identifier),
                    (f.dx = 0),
                    (f.dy = 0),
                    (f.pressure = m.force),
                    (f.device = this.parent.id)),
                (this.currentTouches.h[m.identifier] = f),
                Tb.onStart.dispatch(f),
                null == this.primaryTouch && (this.primaryTouch = f),
                f == this.primaryTouch &&
                  this.parent.onMouseDown.dispatch(h, k, 0));
            else if (((f = this.currentTouches.h[m.identifier]), null != f))
              switch (
                ((v = f.x),
                (p = f.y),
                (f.x = h / c),
                (f.y = k / d),
                (f.dx = f.x - v),
                (f.dy = f.y - p),
                (f.pressure = m.force),
                a.type)
              ) {
                case 'touchcancel':
                  Tb.onCancel.dispatch(f);
                  this.currentTouches.remove(m.identifier);
                  this.unusedTouchesPool.add(f);
                  f == this.primaryTouch && (this.primaryTouch = null);
                  break;
                case 'touchend':
                  Tb.onEnd.dispatch(f);
                  this.currentTouches.remove(m.identifier);
                  this.unusedTouchesPool.add(f);
                  f == this.primaryTouch &&
                    (this.parent.onMouseUp.dispatch(h, k, 0),
                    (this.primaryTouch = null));
                  break;
                case 'touchmove':
                  (Tb.onMove.dispatch(f),
                    f == this.primaryTouch &&
                      this.parent.onMouseMove.dispatch(h, k));
              }
          }
        },
        isDescendent: function (a) {
          if (a == this.parent.element) return !0;
          for (; null != a; ) {
            if (a.parentNode == this.parent.element) return !0;
            a = a.parentNode;
          }
          return !1;
        },
        setClipboard: function (a) {
          null == Pa.textArea &&
            ((Pa.textArea = window.document.createElement('textarea')),
            (Pa.textArea.style.height = '0px'),
            (Pa.textArea.style.left = '-100px'),
            (Pa.textArea.style.opacity = '0'),
            (Pa.textArea.style.position = 'fixed'),
            (Pa.textArea.style.top = '-100px'),
            (Pa.textArea.style.width = '0px'),
            window.document.body.appendChild(Pa.textArea));
          Pa.textArea.value = a;
          Pa.textArea.focus();
          Pa.textArea.select();
          window.document.queryCommandEnabled('copy') &&
            window.document.execCommand('copy');
          this.textInputEnabled && this.focusTextInput();
        },
        setCursor: function (a) {
          if (this.cursor != a) {
            if (null == a) this.parent.element.style.cursor = 'none';
            else {
              switch (a._hx_index) {
                case 0:
                  var b = 'default';
                  break;
                case 1:
                  b = 'crosshair';
                  break;
                case 3:
                  b = 'move';
                  break;
                case 4:
                  b = 'pointer';
                  break;
                case 5:
                  b = 'nesw-resize';
                  break;
                case 6:
                  b = 'ns-resize';
                  break;
                case 7:
                  b = 'nwse-resize';
                  break;
                case 8:
                  b = 'ew-resize';
                  break;
                case 9:
                  b = 'text';
                  break;
                case 10:
                  b = 'wait';
                  break;
                case 11:
                  b = 'wait';
                  break;
                default:
                  b = 'auto';
              }
              this.parent.element.style.cursor = b;
            }
            this.cursor = a;
          }
          return this.cursor;
        },
        setTextInputEnabled: function (a) {
          if (a) {
            if (null == Pa.textInput) {
              Pa.textInput = window.document.createElement('input');
              var b =
                0 <= y.navigator.userAgent.indexOf('Android')
                  ? 'password'
                  : 'text';
              Pa.textInput.type = b;
              Pa.textInput.style.position = 'absolute';
              Pa.textInput.style.opacity = '0';
              Pa.textInput.style.color = 'transparent';
              Pa.textInput.value = Pa.dummyCharacter;
              Pa.textInput.autocapitalize = 'off';
              Pa.textInput.autocorrect = 'off';
              Pa.textInput.autocomplete = 'off';
              Pa.textInput.style.left = '0px';
              Pa.textInput.style.top = '50%';
              new xa('(iPad|iPhone|iPod).*OS 8_', 'gi').match(
                window.navigator.userAgent,
              )
                ? ((Pa.textInput.style.fontSize = '0px'),
                  (Pa.textInput.style.width = '0px'),
                  (Pa.textInput.style.height = '0px'))
                : ((Pa.textInput.style.width = '1px'),
                  (Pa.textInput.style.height = '1px'));
              Pa.textInput.style.pointerEvents = 'none';
              Pa.textInput.style.zIndex = '-10000000';
            }
            null == Pa.textInput.parentNode &&
              this.parent.element.appendChild(Pa.textInput);
            this.textInputEnabled ||
              (Pa.textInput.addEventListener(
                'input',
                l(this, this.handleInputEvent),
                !0,
              ),
              Pa.textInput.addEventListener(
                'blur',
                l(this, this.handleFocusEvent),
                !0,
              ),
              Pa.textInput.addEventListener(
                'cut',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Pa.textInput.addEventListener(
                'copy',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Pa.textInput.addEventListener(
                'paste',
                l(this, this.handlePasteEvent),
                !0,
              ),
              Pa.textInput.addEventListener(
                'compositionstart',
                l(this, this.handleCompositionstartEvent),
                !0,
              ),
              Pa.textInput.addEventListener(
                'compositionend',
                l(this, this.handleCompositionendEvent),
                !0,
              ));
            Pa.textInput.focus();
            Pa.textInput.select();
          } else
            null != Pa.textInput &&
              (Pa.textInput.blur(),
              Pa.textInput.removeEventListener(
                'input',
                l(this, this.handleInputEvent),
                !0,
              ),
              Pa.textInput.removeEventListener(
                'blur',
                l(this, this.handleFocusEvent),
                !0,
              ),
              Pa.textInput.removeEventListener(
                'cut',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Pa.textInput.removeEventListener(
                'copy',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Pa.textInput.removeEventListener(
                'paste',
                l(this, this.handlePasteEvent),
                !0,
              ),
              Pa.textInput.removeEventListener(
                'compositionstart',
                l(this, this.handleCompositionstartEvent),
                !0,
              ),
              Pa.textInput.removeEventListener(
                'compositionend',
                l(this, this.handleCompositionendEvent),
                !0,
              ));
          return (this.textInputEnabled = a);
        },
        setTextInputRect: function (a) {
          return (this.textInputRect = a);
        },
        handleCompositionstartEvent: function (a) {
          this.imeCompositionActive = !0;
        },
        handleCompositionendEvent: function (a) {
          this.imeCompositionActive = !1;
          this.handleInputEvent(a);
        },
        updateSize: function () {
          if (this.parent.__resizable) {
            if (null != this.parent.element) {
              var a = this.parent.element.clientWidth;
              var b = this.parent.element.clientHeight;
            } else ((a = window.innerWidth), (b = window.innerHeight));
            if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
              this.cacheElementWidth = a;
              this.cacheElementHeight = b;
              var c =
                this.resizeElement ||
                (0 == this.setWidth && 0 == this.setHeight);
              if (
                null != this.parent.element &&
                (null == this.div || (null != this.div && c))
              )
                if (c) {
                  if (this.parent.__width != a || this.parent.__height != b)
                    ((this.parent.__width = a),
                      (this.parent.__height = b),
                      null != this.canvas
                        ? this.parent.element != this.canvas &&
                          ((this.canvas.width = Math.round(a * this.scale)),
                          (this.canvas.height = Math.round(b * this.scale)),
                          (this.canvas.style.width = a + 'px'),
                          (this.canvas.style.height = b + 'px'))
                        : ((this.div.style.width = a + 'px'),
                          (this.div.style.height = b + 'px')),
                      this.parent.onResize.dispatch(a, b));
                } else {
                  c = 0 != this.setWidth ? a / this.setWidth : 1;
                  var d = 0 != this.setHeight ? b / this.setHeight : 1,
                    f = a,
                    h = b,
                    k = 0,
                    v = 0;
                  c < d
                    ? ((h = Math.floor(this.setHeight * c)),
                      (v = Math.floor((b - h) / 2)))
                    : ((f = Math.floor(this.setWidth * d)),
                      (k = Math.floor((a - f) / 2)));
                  null != this.canvas
                    ? this.parent.element != this.canvas &&
                      ((this.canvas.style.width = f + 'px'),
                      (this.canvas.style.height = h + 'px'),
                      (this.canvas.style.marginLeft = k + 'px'),
                      (this.canvas.style.marginTop = v + 'px'))
                    : ((this.div.style.width = f + 'px'),
                      (this.div.style.height = h + 'px'),
                      (this.div.style.marginLeft = k + 'px'),
                      (this.div.style.marginTop = v + 'px'));
                }
            }
          }
        },
        __class__: Pa,
      };
      var Dj = function () {};
      g['lime._internal.format.BMP'] = Dj;
      Dj.__name__ = 'lime._internal.format.BMP';
      Dj.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        null == b && (b = Qe.RGB);
        var c = 14,
          d = 40,
          f = a.width * a.height * 4;
        if (null != b)
          switch (b._hx_index) {
            case 0:
              f = (3 * a.width + ((3 * a.width) % 4)) * a.height;
              break;
            case 1:
              d = 108;
              break;
            case 2:
              ((c = 0), (f += a.width * a.height));
          }
        var h = new tb(new ArrayBuffer(c + d + f)),
          k = 0;
        0 < c &&
          ((h.b[k++] = 66),
          (h.b[k++] = 77),
          h.setInt32(k, h.length),
          (k += 4),
          h.setUInt16(k, 0),
          (k += 2),
          h.setUInt16(k, 0),
          (k += 2),
          h.setInt32(k, c + d),
          (k += 4));
        h.setInt32(k, d);
        k += 4;
        h.setInt32(k, a.width);
        k += 4;
        h.setInt32(k, b == Qe.ICO ? 2 * a.height : a.height);
        k += 4;
        h.setUInt16(k, 1);
        k += 2;
        h.setUInt16(k, b == Qe.RGB ? 24 : 32);
        k += 2;
        h.setInt32(k, b == Qe.BITFIELD ? 3 : 0);
        k += 4;
        h.setInt32(k, f);
        k += 4;
        h.setInt32(k, 11824);
        k += 4;
        h.setInt32(k, 11824);
        k += 4;
        h.setInt32(k, 0);
        k += 4;
        h.setInt32(k, 0);
        k += 4;
        if (b == Qe.BITFIELD)
          for (
            h.setInt32(k, 16711680),
              k += 4,
              h.setInt32(k, 65280),
              k += 4,
              h.setInt32(k, 255),
              k += 4,
              h.setInt32(k, -16777216),
              k += 4,
              h.b[k++] = 32,
              h.b[k++] = 110,
              h.b[k++] = 105,
              h.b[k++] = 87,
              c = 0;
            48 > c;

          )
            (c++, (h.b[k++] = 0));
        d = a.getPixels(new hd(0, 0, a.width, a.height), 1);
        if (null != b)
          switch (b._hx_index) {
            case 0:
              c = 0;
              for (b = a.height; c < b; ) {
                var v = c++;
                v = 4 * (a.height - 1 - v) * a.width;
                for (var p = 0, g = a.width; p < g; ) {
                  p++;
                  v++;
                  var t = d.b[v++];
                  var m = d.b[v++];
                  var n = d.b[v++];
                  h.b[k++] = n & 255;
                  h.b[k++] = m & 255;
                  h.b[k++] = t & 255;
                }
                f = 0;
                for (var x = (3 * a.width) % 4; f < x; ) (f++, (h.b[k++] = 0));
              }
              break;
            case 1:
              c = 0;
              for (b = a.height; c < b; )
                for (
                  v = c++,
                    v = 4 * (a.height - 1 - v) * a.width,
                    p = 0,
                    g = a.width;
                  p < g;

                ) {
                  p++;
                  var q = d.b[v++];
                  t = d.b[v++];
                  m = d.b[v++];
                  n = d.b[v++];
                  h.b[k++] = n & 255;
                  h.b[k++] = m & 255;
                  h.b[k++] = t & 255;
                  h.b[k++] = q & 255;
                }
              break;
            case 2:
              f = new tb(new ArrayBuffer(a.width * a.height));
              c = x = 0;
              for (b = a.height; c < b; )
                for (
                  v = c++,
                    v = 4 * (a.height - 1 - v) * a.width,
                    p = 0,
                    g = a.width;
                  p < g;

                )
                  (p++,
                    (q = d.b[v++]),
                    (t = d.b[v++]),
                    (m = d.b[v++]),
                    (n = d.b[v++]),
                    (h.b[k++] = n & 255),
                    (h.b[k++] = m & 255),
                    (h.b[k++] = t & 255),
                    (h.b[k++] = q & 255),
                    (f.b[x++] = 0));
              h.blit(k, f, 0, a.width * a.height);
          }
        return h;
      };
      var Qe = (F['lime._internal.format.BMPType'] = {
        __ename__: 'lime._internal.format.BMPType',
        __constructs__: null,
        RGB: {
          _hx_name: 'RGB',
          _hx_index: 0,
          __enum__: 'lime._internal.format.BMPType',
          toString: q,
        },
        BITFIELD: {
          _hx_name: 'BITFIELD',
          _hx_index: 1,
          __enum__: 'lime._internal.format.BMPType',
          toString: q,
        },
        ICO: {
          _hx_name: 'ICO',
          _hx_index: 2,
          __enum__: 'lime._internal.format.BMPType',
          toString: q,
        },
      });
      Qe.__constructs__ = [Qe.RGB, Qe.BITFIELD, Qe.ICO];
      var Pd = function () {};
      g['lime._internal.format.Base64'] = Pd;
      Pd.__name__ = 'lime._internal.format.Base64';
      Pd.encode = function (a) {
        var b = [],
          c = Pd.DICTIONARY,
          d = Pd.EXTENDED_DICTIONARY,
          f = a.length,
          h = Math.floor(f / 3),
          k = 2 * h;
        b.length = 2 * Math.ceil(f / 3);
        for (var v = 0, p = 0, g; p < k; )
          ((g = (a.b[v] << 16) | (a.b[v + 1] << 8) | a.b[v + 2]),
            (b[p] = d[(g >> 12) & 4095]),
            (b[p + 1] = d[g & 4095]),
            (v += 3),
            (p += 2));
        switch (f - 3 * h) {
          case 1:
            g = a.b[v] << 16;
            b[p] = d[(g >> 12) & 4095];
            b[p + 1] = '==';
            break;
          case 2:
            ((g = (a.b[v] << 16) | (a.b[v + 1] << 8)),
              (b[p] = d[(g >> 12) & 4095]),
              (b[p + 1] = c[(g >> 6) & 63] + '='));
        }
        return b.join('');
      };
      var Ej = function () {};
      g['lime._internal.format.Deflate'] = Ej;
      Ej.__name__ = 'lime._internal.format.Deflate';
      Ej.decompress = function (a) {
        a = pako.inflateRaw(a.b.bufferValue);
        return tb.ofData(a);
      };
      var Fj = function () {};
      g['lime._internal.format.GZip'] = Fj;
      Fj.__name__ = 'lime._internal.format.GZip';
      Fj.decompress = function (a) {
        a = pako.ungzip(a.b.bufferValue);
        return tb.ofData(a);
      };
      var Gj = function () {};
      g['lime._internal.format.JPEG'] = Gj;
      Gj.__name__ = 'lime._internal.format.JPEG';
      Gj.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Ha.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/jpeg', b / 100);
          a = window.atob(a.split(';base64,')[1]);
          b = new tb(new ArrayBuffer(a.length));
          for (var c = 0, d = a.length; c < d; ) {
            var f = c++;
            b.b[f] = O.cca(a, f) & 255;
          }
          return b;
        }
        return null;
      };
      var Hj = function () {};
      g['lime._internal.format.LZMA'] = Hj;
      Hj.__name__ = 'lime._internal.format.LZMA';
      Hj.decompress = function (a) {
        var b = LZMA.decompress;
        a = a.b.bufferValue;
        a = null != a ? new Uint8Array(a, 0) : null;
        b = b(a);
        return 'string' == typeof b ? tb.ofString(b) : tb.ofData(b);
      };
      var Vi = function () {};
      g['lime._internal.format.PNG'] = Vi;
      Vi.__name__ = 'lime._internal.format.PNG';
      Vi.encode = function (a) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Ha.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/png');
          a = window.atob(a.split(';base64,')[1]);
          for (
            var b = new tb(new ArrayBuffer(a.length)), c = 0, d = a.length;
            c < d;

          ) {
            var f = c++;
            b.b[f] = O.cca(a, f) & 255;
          }
          return b;
        }
        return null;
      };
      var Ij = function () {};
      g['lime._internal.format.Zlib'] = Ij;
      Ij.__name__ = 'lime._internal.format.Zlib';
      Ij.decompress = function (a) {
        a = pako.inflate(a.b.bufferValue);
        return tb.ofData(a);
      };
      var Ha = function () {};
      g['lime._internal.graphics.ImageCanvasUtil'] = Ha;
      Ha.__name__ = 'lime._internal.graphics.ImageCanvasUtil';
      Ha.colorTransform = function (a, b, c) {
        Ha.convertToData(a);
        Rb.colorTransform(a, b, c);
      };
      Ha.convertToCanvas = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage
          ? (null == c.__srcCanvas &&
              (Ha.createCanvas(a, c.__srcImage.width, c.__srcImage.height),
              c.__srcContext.drawImage(c.__srcImage, 0, 0)),
            (c.__srcImage = null))
          : null == c.__srcCanvas && null != c.data
            ? (a.set_transparent(!0),
              Ha.createCanvas(a, c.width, c.height),
              Ha.createImageData(a),
              c.__srcContext.putImageData(c.__srcImageData, 0, 0))
            : a.type == Kc.DATA &&
              null != c.__srcImageData &&
              a.dirty &&
              (c.__srcContext.putImageData(c.__srcImageData, 0, 0),
              (a.dirty = !1));
        b
          ? ((c.data = null), (c.__srcImageData = null))
          : null == c.data &&
            null != c.__srcImageData &&
            (c.data = c.__srcImageData.data);
        a.type = Kc.CANVAS;
      };
      Ha.convertToData = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage && Ha.convertToCanvas(a);
        if (null != c.__srcCanvas && null == c.data)
          (Ha.createImageData(a), a.type == Kc.CANVAS && (a.dirty = !1));
        else if (a.type == Kc.CANVAS && null != c.__srcCanvas && a.dirty) {
          if (null == c.__srcImageData) Ha.createImageData(a);
          else {
            c.__srcImageData = c.__srcContext.getImageData(
              0,
              0,
              c.width,
              c.height,
            );
            var d = c.__srcImageData.data.buffer;
            d = null != d ? new Uint8Array(d) : null;
            c.data = d;
          }
          a.dirty = !1;
        }
        b && ((a.buffer.__srcCanvas = null), (a.buffer.__srcContext = null));
        a.type = Kc.DATA;
      };
      Ha.copyChannel = function (a, b, c, d, f, h) {
        Ha.convertToData(b);
        Ha.convertToData(a);
        Rb.copyChannel(a, b, c, d, f, h);
      };
      Ha.copyPixels = function (a, b, c, d, f, h, k) {
        null == k && (k = !1);
        null == d ||
          d.x >= a.width ||
          d.y >= a.height ||
          null == c ||
          1 > c.width ||
          1 > c.height ||
          (null != f &&
            f.get_transparent() &&
            (null == h && (h = new gf()),
            (b = b.clone()),
            b.copyChannel(
              f,
              new hd(c.x + h.x, c.y + h.y, c.width, c.height),
              new gf(c.x, c.y),
              zf.ALPHA,
              zf.ALPHA,
            )),
          Ha.convertToCanvas(a, !0),
          k ||
            (a.get_transparent() &&
              b.get_transparent() &&
              a.buffer.__srcContext.clearRect(
                d.x + a.offsetX,
                d.y + a.offsetY,
                c.width + a.offsetX,
                c.height + a.offsetY,
              )),
          Ha.convertToCanvas(b),
          null != b.buffer.get_src() &&
            ((a.buffer.__srcContext.globalCompositeOperation = 'source-over'),
            a.buffer.__srcContext.drawImage(
              b.buffer.get_src(),
              (c.x + b.offsetX) | 0,
              (c.y + b.offsetY) | 0,
              c.width | 0,
              c.height | 0,
              (d.x + a.offsetX) | 0,
              (d.y + a.offsetY) | 0,
              c.width | 0,
              c.height | 0,
            )),
          (a.dirty = !0),
          a.version++);
      };
      Ha.createCanvas = function (a, b, c) {
        var d = a.buffer;
        null == d.__srcCanvas &&
          ((d.__srcCanvas = window.document.createElement('canvas')),
          (d.__srcCanvas.width = b),
          (d.__srcCanvas.height = c),
          a.get_transparent()
            ? (d.__srcContext = d.__srcCanvas.getContext('2d'))
            : (a.get_transparent() ||
                d.__srcCanvas.setAttribute('moz-opaque', 'true'),
              (d.__srcContext = d.__srcCanvas.getContext('2d', {
                alpha: !1,
              }))));
      };
      Ha.createImageData = function (a) {
        a = a.buffer;
        if (null == a.__srcImageData) {
          null == a.data
            ? (a.__srcImageData = a.__srcContext.getImageData(
                0,
                0,
                a.width,
                a.height,
              ))
            : ((a.__srcImageData = a.__srcContext.createImageData(
                a.width,
                a.height,
              )),
              a.__srcImageData.data.set(a.data));
          var b = a.__srcImageData.data.buffer;
          b = null != b ? new Uint8Array(b) : null;
          a.data = b;
        }
      };
      Ha.fillRect = function (a, b, c, d) {
        Ha.convertToCanvas(a);
        if (1 == d) {
          d = (c >> 16) & 255;
          var f = (c >> 8) & 255;
          var h = c & 255;
          c = a.get_transparent() ? (c >> 24) & 255 : 255;
        } else
          ((d = (c >> 24) & 255),
            (f = (c >> 16) & 255),
            (h = (c >> 8) & 255),
            (c = a.get_transparent() ? c & 255 : 255));
        0 == b.x &&
        0 == b.y &&
        b.width == a.width &&
        b.height == a.height &&
        a.get_transparent() &&
        0 == c
          ? (a.buffer.__srcCanvas.width = a.buffer.width)
          : (255 > c &&
              a.buffer.__srcContext.clearRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              ),
            0 < c &&
              ((a.buffer.__srcContext.fillStyle =
                'rgba(' + d + ', ' + f + ', ' + h + ', ' + c / 255 + ')'),
              a.buffer.__srcContext.fillRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              )),
            (a.dirty = !0),
            a.version++);
      };
      Ha.getPixel = function (a, b, c, d) {
        Ha.convertToData(a);
        return Rb.getPixel(a, b, c, d);
      };
      Ha.getPixels = function (a, b, c) {
        Ha.convertToData(a);
        return Rb.getPixels(a, b, c);
      };
      Ha.setPixel = function (a, b, c, d, f) {
        Ha.convertToData(a);
        Rb.setPixel(a, b, c, d, f);
      };
      Ha.sync = function (a, b) {
        null != a &&
          (a.type != Kc.CANVAS ||
          (null == a.buffer.__srcCanvas && null == a.buffer.data)
            ? a.type == Kc.DATA && Ha.convertToData(a, b)
            : Ha.convertToCanvas(a, b));
      };
      var Rb = function () {};
      g['lime._internal.graphics.ImageDataUtil'] = Rb;
      Rb.__name__ = 'lime._internal.graphics.ImageDataUtil';
      Rb.colorTransform = function (a, b, c) {
        var d = a.buffer.data;
        if (null != d) {
          var f = a.buffer.format,
            h = a.buffer.premultiplied;
          b = new Qd(a, b);
          var k = Bc.getAlphaTable(c),
            v = Bc.getRedTable(c),
            p = Bc.getGreenTable(c);
          c = Bc.getBlueTable(c);
          for (var g, t, m = 0, n = 0, x = b.height; n < x; ) {
            g = n++;
            g = b.byteOffset + b.stride * g;
            for (var q = 0, z = b.width; q < z; ) {
              t = q++;
              t = g + 4 * t;
              var l = f,
                w = h;
              null == w && (w = !1);
              null == l && (l = 0);
              switch (l) {
                case 0:
                  m =
                    ((d[t] & 255) << 24) |
                    ((d[t + 1] & 255) << 16) |
                    ((d[t + 2] & 255) << 8) |
                    (d[t + 3] & 255);
                  break;
                case 1:
                  m =
                    ((d[t + 1] & 255) << 24) |
                    ((d[t + 2] & 255) << 16) |
                    ((d[t + 3] & 255) << 8) |
                    (d[t] & 255);
                  break;
                case 2:
                  m =
                    ((d[t + 2] & 255) << 24) |
                    ((d[t + 1] & 255) << 16) |
                    ((d[t] & 255) << 8) |
                    (d[t + 3] & 255);
              }
              w &&
                0 != (m & 255) &&
                255 != (m & 255) &&
                ((R.unmult = 255 / (m & 255)),
                (m =
                  ((R.__clamp[Math.round(((m >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((m >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((m >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (m & 255)));
              m =
                ((v[(m >>> 24) & 255] & 255) << 24) |
                ((p[(m >>> 16) & 255] & 255) << 16) |
                ((c[(m >>> 8) & 255] & 255) << 8) |
                (k[m & 255] & 255);
              l = f;
              w = h;
              null == w && (w = !1);
              null == l && (l = 0);
              w &&
                (0 == (m & 255)
                  ? 0 != m && (m = 0)
                  : 255 != (m & 255) &&
                    ((R.a16 = R.__alpha16[m & 255]),
                    (m =
                      ((((((m >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((m >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((m >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (m & 255))));
              switch (l) {
                case 0:
                  d[t] = (m >>> 24) & 255;
                  d[t + 1] = (m >>> 16) & 255;
                  d[t + 2] = (m >>> 8) & 255;
                  d[t + 3] = m & 255;
                  break;
                case 1:
                  d[t] = m & 255;
                  d[t + 1] = (m >>> 24) & 255;
                  d[t + 2] = (m >>> 16) & 255;
                  d[t + 3] = (m >>> 8) & 255;
                  break;
                case 2:
                  ((d[t] = (m >>> 8) & 255),
                    (d[t + 1] = (m >>> 16) & 255),
                    (d[t + 2] = (m >>> 24) & 255),
                    (d[t + 3] = m & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Rb.copyChannel = function (a, b, c, d, f, h) {
        switch (h._hx_index) {
          case 0:
            var k = 0;
            break;
          case 1:
            k = 1;
            break;
          case 2:
            k = 2;
            break;
          case 3:
            k = 3;
        }
        switch (f._hx_index) {
          case 0:
            var v = 0;
            break;
          case 1:
            v = 1;
            break;
          case 2:
            v = 2;
            break;
          case 3:
            v = 3;
        }
        f = b.buffer.data;
        h = a.buffer.data;
        if (null != f && null != h) {
          c = new Qd(b, c);
          d = new Qd(a, new hd(d.x, d.y, c.width, c.height));
          var p = b.buffer.format,
            g = a.buffer.format;
          b = b.buffer.premultiplied;
          for (
            var t = a.buffer.premultiplied,
              m,
              n,
              x = 0,
              q = 0,
              z = 0,
              l = 0,
              w = d.height;
            l < w;

          ) {
            n = l++;
            m = c.byteOffset + c.stride * n;
            n = d.byteOffset + d.stride * n;
            for (var G = 0, B = d.width; G < B; ) {
              G++;
              var D = p,
                F = b;
              null == F && (F = !1);
              null == D && (D = 0);
              switch (D) {
                case 0:
                  x =
                    ((f[m] & 255) << 24) |
                    ((f[m + 1] & 255) << 16) |
                    ((f[m + 2] & 255) << 8) |
                    (f[m + 3] & 255);
                  break;
                case 1:
                  x =
                    ((f[m + 1] & 255) << 24) |
                    ((f[m + 2] & 255) << 16) |
                    ((f[m + 3] & 255) << 8) |
                    (f[m] & 255);
                  break;
                case 2:
                  x =
                    ((f[m + 2] & 255) << 24) |
                    ((f[m + 1] & 255) << 16) |
                    ((f[m] & 255) << 8) |
                    (f[m + 3] & 255);
              }
              F &&
                0 != (x & 255) &&
                255 != (x & 255) &&
                ((R.unmult = 255 / (x & 255)),
                (x =
                  ((R.__clamp[Math.round(((x >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((x >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((x >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (x & 255)));
              D = g;
              F = t;
              null == F && (F = !1);
              null == D && (D = 0);
              switch (D) {
                case 0:
                  q =
                    ((h[n] & 255) << 24) |
                    ((h[n + 1] & 255) << 16) |
                    ((h[n + 2] & 255) << 8) |
                    (h[n + 3] & 255);
                  break;
                case 1:
                  q =
                    ((h[n + 1] & 255) << 24) |
                    ((h[n + 2] & 255) << 16) |
                    ((h[n + 3] & 255) << 8) |
                    (h[n] & 255);
                  break;
                case 2:
                  q =
                    ((h[n + 2] & 255) << 24) |
                    ((h[n + 1] & 255) << 16) |
                    ((h[n] & 255) << 8) |
                    (h[n + 3] & 255);
              }
              F &&
                0 != (q & 255) &&
                255 != (q & 255) &&
                ((R.unmult = 255 / (q & 255)),
                (q =
                  ((R.__clamp[Math.round(((q >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((q >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((q >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (q & 255)));
              switch (v) {
                case 0:
                  z = (x >>> 24) & 255;
                  break;
                case 1:
                  z = (x >>> 16) & 255;
                  break;
                case 2:
                  z = (x >>> 8) & 255;
                  break;
                case 3:
                  z = x & 255;
              }
              switch (k) {
                case 0:
                  q =
                    ((z & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  break;
                case 1:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    ((z & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (q & 255);
                  break;
                case 2:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    ((z & 255) << 8) |
                    (q & 255);
                  break;
                case 3:
                  q =
                    (((q >>> 24) & 255) << 24) |
                    (((q >>> 16) & 255) << 16) |
                    (((q >>> 8) & 255) << 8) |
                    (z & 255);
              }
              D = g;
              F = t;
              null == F && (F = !1);
              null == D && (D = 0);
              F &&
                (0 == (q & 255)
                  ? 0 != q && (q = 0)
                  : 255 != (q & 255) &&
                    ((R.a16 = R.__alpha16[q & 255]),
                    (q =
                      ((((((q >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((q >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((q >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (q & 255))));
              switch (D) {
                case 0:
                  h[n] = (q >>> 24) & 255;
                  h[n + 1] = (q >>> 16) & 255;
                  h[n + 2] = (q >>> 8) & 255;
                  h[n + 3] = q & 255;
                  break;
                case 1:
                  h[n] = q & 255;
                  h[n + 1] = (q >>> 24) & 255;
                  h[n + 2] = (q >>> 16) & 255;
                  h[n + 3] = (q >>> 8) & 255;
                  break;
                case 2:
                  ((h[n] = (q >>> 8) & 255),
                    (h[n + 1] = (q >>> 16) & 255),
                    (h[n + 2] = (q >>> 24) & 255),
                    (h[n + 3] = q & 255));
              }
              m += 4;
              n += 4;
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Rb.copyPixels = function (a, b, c, d, f, h, k) {
        null == k && (k = !1);
        if (
          a.width == b.width &&
          a.height == b.height &&
          c.width == b.width &&
          c.height == b.height &&
          0 == c.x &&
          0 == c.y &&
          0 == d.x &&
          0 == d.y &&
          null == f &&
          null == h &&
          0 == k &&
          a.get_format() == b.get_format()
        )
          a.buffer.data.set(b.buffer.data);
        else {
          var v = b.buffer.data,
            p = a.buffer.data;
          if (null == v || null == p) return;
          c = new Qd(b, c);
          var g = new hd(d.x, d.y, c.width, c.height);
          g = new Qd(a, g);
          var t = b.buffer.format,
            m = a.buffer.format,
            n = 0,
            x = 0,
            q = b.buffer.premultiplied,
            z = a.buffer.premultiplied,
            l = (b.buffer.bitsPerPixel / 8) | 0,
            w = (a.buffer.bitsPerPixel / 8) | 0,
            G = null != f && f.get_transparent(),
            B =
              k ||
              (G && !a.get_transparent()) ||
              (!k && !a.get_transparent() && b.get_transparent());
          if (G)
            if (
              ((w = f.buffer.data),
              (b = f.buffer.format),
              (k = 0),
              (f = new Qd(
                f,
                new hd(
                  c.x + (null == h ? 0 : h.x),
                  c.y + (null == h ? 0 : h.y),
                  c.width,
                  c.height,
                ),
              )),
              g.clip(d.x | 0, d.y | 0, f.width, f.height),
              B)
            )
              for (B = 0, l = g.height; B < l; )
                for (
                  G = B++,
                    d = c.byteOffset + c.stride * G,
                    h = g.byteOffset + g.stride * G,
                    G = f.byteOffset + f.stride * G,
                    H = 0,
                    C = g.width;
                  H < C;

                ) {
                  H++;
                  var D = t;
                  var F = q;
                  null == F && (F = !1);
                  null == D && (D = 0);
                  switch (D) {
                    case 0:
                      n =
                        ((v[d] & 255) << 24) |
                        ((v[d + 1] & 255) << 16) |
                        ((v[d + 2] & 255) << 8) |
                        (v[d + 3] & 255);
                      break;
                    case 1:
                      n =
                        ((v[d + 1] & 255) << 24) |
                        ((v[d + 2] & 255) << 16) |
                        ((v[d + 3] & 255) << 8) |
                        (v[d] & 255);
                      break;
                    case 2:
                      n =
                        ((v[d + 2] & 255) << 24) |
                        ((v[d + 1] & 255) << 16) |
                        ((v[d] & 255) << 8) |
                        (v[d + 3] & 255);
                  }
                  F &&
                    0 != (n & 255) &&
                    255 != (n & 255) &&
                    ((R.unmult = 255 / (n & 255)),
                    (n =
                      ((R.__clamp[Math.round(((n >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((n >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((n >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (n & 255)));
                  D = m;
                  F = z;
                  null == F && (F = !1);
                  null == D && (D = 0);
                  switch (D) {
                    case 0:
                      x =
                        ((p[h] & 255) << 24) |
                        ((p[h + 1] & 255) << 16) |
                        ((p[h + 2] & 255) << 8) |
                        (p[h + 3] & 255);
                      break;
                    case 1:
                      x =
                        ((p[h + 1] & 255) << 24) |
                        ((p[h + 2] & 255) << 16) |
                        ((p[h + 3] & 255) << 8) |
                        (p[h] & 255);
                      break;
                    case 2:
                      x =
                        ((p[h + 2] & 255) << 24) |
                        ((p[h + 1] & 255) << 16) |
                        ((p[h] & 255) << 8) |
                        (p[h + 3] & 255);
                  }
                  F &&
                    0 != (x & 255) &&
                    255 != (x & 255) &&
                    ((R.unmult = 255 / (x & 255)),
                    (x =
                      ((R.__clamp[Math.round(((x >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((x >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((x >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (x & 255)));
                  D = b;
                  F = !1;
                  null == F && (F = !1);
                  null == D && (D = 0);
                  switch (D) {
                    case 0:
                      k =
                        ((w[G] & 255) << 24) |
                        ((w[G + 1] & 255) << 16) |
                        ((w[G + 2] & 255) << 8) |
                        (w[G + 3] & 255);
                      break;
                    case 1:
                      k =
                        ((w[G + 1] & 255) << 24) |
                        ((w[G + 2] & 255) << 16) |
                        ((w[G + 3] & 255) << 8) |
                        (w[G] & 255);
                      break;
                    case 2:
                      k =
                        ((w[G + 2] & 255) << 24) |
                        ((w[G + 1] & 255) << 16) |
                        ((w[G] & 255) << 8) |
                        (w[G + 3] & 255);
                  }
                  F &&
                    0 != (k & 255) &&
                    255 != (k & 255) &&
                    ((R.unmult = 255 / (k & 255)),
                    (k =
                      ((R.__clamp[Math.round(((k >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((k >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((k >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (k & 255)));
                  F = ((k & 255) / 255) * ((n & 255) / 255);
                  if (0 < F) {
                    var r = (x & 255) / 255;
                    var u = 1 - F;
                    D = F + r * u;
                    ba =
                      R.__clamp[
                        Math.round(
                          (((n >>> 24) & 255) * F +
                            ((x >>> 24) & 255) * r * u) /
                            D,
                        )
                      ];
                    x =
                      ((ba & 255) << 24) |
                      (((x >>> 16) & 255) << 16) |
                      (((x >>> 8) & 255) << 8) |
                      (x & 255);
                    ba =
                      R.__clamp[
                        Math.round(
                          (((n >>> 16) & 255) * F +
                            ((x >>> 16) & 255) * r * u) /
                            D,
                        )
                      ];
                    x =
                      (((x >>> 24) & 255) << 24) |
                      ((ba & 255) << 16) |
                      (((x >>> 8) & 255) << 8) |
                      (x & 255);
                    F =
                      R.__clamp[
                        Math.round(
                          (((n >>> 8) & 255) * F + ((x >>> 8) & 255) * r * u) /
                            D,
                        )
                      ];
                    x =
                      (((x >>> 24) & 255) << 24) |
                      (((x >>> 16) & 255) << 16) |
                      ((F & 255) << 8) |
                      (x & 255);
                    D = R.__clamp[Math.round(255 * D)];
                    x =
                      (((x >>> 24) & 255) << 24) |
                      (((x >>> 16) & 255) << 16) |
                      (((x >>> 8) & 255) << 8) |
                      (D & 255);
                    D = m;
                    F = z;
                    null == F && (F = !1);
                    null == D && (D = 0);
                    F &&
                      (0 == (x & 255)
                        ? 0 != x && (x = 0)
                        : 255 != (x & 255) &&
                          ((R.a16 = R.__alpha16[x & 255]),
                          (x =
                            ((((((x >>> 24) & 255) * R.a16) >> 16) & 255) <<
                              24) |
                            ((((((x >>> 16) & 255) * R.a16) >> 16) & 255) <<
                              16) |
                            ((((((x >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                            (x & 255))));
                    switch (D) {
                      case 0:
                        p[h] = (x >>> 24) & 255;
                        p[h + 1] = (x >>> 16) & 255;
                        p[h + 2] = (x >>> 8) & 255;
                        p[h + 3] = x & 255;
                        break;
                      case 1:
                        p[h] = x & 255;
                        p[h + 1] = (x >>> 24) & 255;
                        p[h + 2] = (x >>> 16) & 255;
                        p[h + 3] = (x >>> 8) & 255;
                        break;
                      case 2:
                        ((p[h] = (x >>> 8) & 255),
                          (p[h + 1] = (x >>> 16) & 255),
                          (p[h + 2] = (x >>> 24) & 255),
                          (p[h + 3] = x & 255));
                    }
                  }
                  d += 4;
                  h += 4;
                  G += 4;
                }
            else
              for (B = 0, l = g.height; B < l; )
                for (
                  G = B++,
                    d = c.byteOffset + c.stride * G,
                    h = g.byteOffset + g.stride * G,
                    G = f.byteOffset + f.stride * G,
                    H = 0,
                    C = g.width;
                  H < C;

                ) {
                  H++;
                  D = t;
                  F = q;
                  null == F && (F = !1);
                  null == D && (D = 0);
                  switch (D) {
                    case 0:
                      n =
                        ((v[d] & 255) << 24) |
                        ((v[d + 1] & 255) << 16) |
                        ((v[d + 2] & 255) << 8) |
                        (v[d + 3] & 255);
                      break;
                    case 1:
                      n =
                        ((v[d + 1] & 255) << 24) |
                        ((v[d + 2] & 255) << 16) |
                        ((v[d + 3] & 255) << 8) |
                        (v[d] & 255);
                      break;
                    case 2:
                      n =
                        ((v[d + 2] & 255) << 24) |
                        ((v[d + 1] & 255) << 16) |
                        ((v[d] & 255) << 8) |
                        (v[d + 3] & 255);
                  }
                  F &&
                    0 != (n & 255) &&
                    255 != (n & 255) &&
                    ((R.unmult = 255 / (n & 255)),
                    (n =
                      ((R.__clamp[Math.round(((n >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((n >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((n >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (n & 255)));
                  D = b;
                  F = !1;
                  null == F && (F = !1);
                  null == D && (D = 0);
                  switch (D) {
                    case 0:
                      k =
                        ((w[G] & 255) << 24) |
                        ((w[G + 1] & 255) << 16) |
                        ((w[G + 2] & 255) << 8) |
                        (w[G + 3] & 255);
                      break;
                    case 1:
                      k =
                        ((w[G + 1] & 255) << 24) |
                        ((w[G + 2] & 255) << 16) |
                        ((w[G + 3] & 255) << 8) |
                        (w[G] & 255);
                      break;
                    case 2:
                      k =
                        ((w[G + 2] & 255) << 24) |
                        ((w[G + 1] & 255) << 16) |
                        ((w[G] & 255) << 8) |
                        (w[G + 3] & 255);
                  }
                  F &&
                    0 != (k & 255) &&
                    255 != (k & 255) &&
                    ((R.unmult = 255 / (k & 255)),
                    (k =
                      ((R.__clamp[Math.round(((k >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((k >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((k >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (k & 255)));
                  ba = Math.round(((k & 255) / 255) * (n & 255));
                  n =
                    (((n >>> 24) & 255) << 24) |
                    (((n >>> 16) & 255) << 16) |
                    (((n >>> 8) & 255) << 8) |
                    (ba & 255);
                  D = m;
                  F = z;
                  null == F && (F = !1);
                  null == D && (D = 0);
                  F &&
                    (0 == (n & 255)
                      ? 0 != n && (n = 0)
                      : 255 != (n & 255) &&
                        ((R.a16 = R.__alpha16[n & 255]),
                        (n =
                          ((((((n >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                          ((((((n >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                          ((((((n >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                          (n & 255))));
                  switch (D) {
                    case 0:
                      p[h] = (n >>> 24) & 255;
                      p[h + 1] = (n >>> 16) & 255;
                      p[h + 2] = (n >>> 8) & 255;
                      p[h + 3] = n & 255;
                      break;
                    case 1:
                      p[h] = n & 255;
                      p[h + 1] = (n >>> 24) & 255;
                      p[h + 2] = (n >>> 16) & 255;
                      p[h + 3] = (n >>> 8) & 255;
                      break;
                    case 2:
                      ((p[h] = (n >>> 8) & 255),
                        (p[h + 1] = (n >>> 16) & 255),
                        (p[h + 2] = (n >>> 24) & 255),
                        (p[h + 3] = n & 255));
                  }
                  d += 4;
                  h += 4;
                  G += 4;
                }
          else if (B)
            for (B = 0, l = g.height; B < l; ) {
              G = B++;
              d = c.byteOffset + c.stride * G;
              h = g.byteOffset + g.stride * G;
              for (var H = 0, C = g.width; H < C; ) {
                H++;
                D = t;
                F = q;
                null == F && (F = !1);
                null == D && (D = 0);
                switch (D) {
                  case 0:
                    n =
                      ((v[d] & 255) << 24) |
                      ((v[d + 1] & 255) << 16) |
                      ((v[d + 2] & 255) << 8) |
                      (v[d + 3] & 255);
                    break;
                  case 1:
                    n =
                      ((v[d + 1] & 255) << 24) |
                      ((v[d + 2] & 255) << 16) |
                      ((v[d + 3] & 255) << 8) |
                      (v[d] & 255);
                    break;
                  case 2:
                    n =
                      ((v[d + 2] & 255) << 24) |
                      ((v[d + 1] & 255) << 16) |
                      ((v[d] & 255) << 8) |
                      (v[d + 3] & 255);
                }
                F &&
                  0 != (n & 255) &&
                  255 != (n & 255) &&
                  ((R.unmult = 255 / (n & 255)),
                  (n =
                    ((R.__clamp[Math.round(((n >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((n >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((n >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (n & 255)));
                D = m;
                F = z;
                null == F && (F = !1);
                null == D && (D = 0);
                switch (D) {
                  case 0:
                    x =
                      ((p[h] & 255) << 24) |
                      ((p[h + 1] & 255) << 16) |
                      ((p[h + 2] & 255) << 8) |
                      (p[h + 3] & 255);
                    break;
                  case 1:
                    x =
                      ((p[h + 1] & 255) << 24) |
                      ((p[h + 2] & 255) << 16) |
                      ((p[h + 3] & 255) << 8) |
                      (p[h] & 255);
                    break;
                  case 2:
                    x =
                      ((p[h + 2] & 255) << 24) |
                      ((p[h + 1] & 255) << 16) |
                      ((p[h] & 255) << 8) |
                      (p[h + 3] & 255);
                }
                F &&
                  0 != (x & 255) &&
                  255 != (x & 255) &&
                  ((R.unmult = 255 / (x & 255)),
                  (x =
                    ((R.__clamp[Math.round(((x >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((x >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((x >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (x & 255)));
                F = (n & 255) / 255;
                r = (x & 255) / 255;
                u = 1 - F;
                D = F + r * u;
                if (0 == D) x = 0;
                else {
                  var ba =
                    R.__clamp[
                      Math.round(
                        (((n >>> 24) & 255) * F + ((x >>> 24) & 255) * r * u) /
                          D,
                      )
                    ];
                  x =
                    ((ba & 255) << 24) |
                    (((x >>> 16) & 255) << 16) |
                    (((x >>> 8) & 255) << 8) |
                    (x & 255);
                  ba =
                    R.__clamp[
                      Math.round(
                        (((n >>> 16) & 255) * F + ((x >>> 16) & 255) * r * u) /
                          D,
                      )
                    ];
                  x =
                    (((x >>> 24) & 255) << 24) |
                    ((ba & 255) << 16) |
                    (((x >>> 8) & 255) << 8) |
                    (x & 255);
                  F =
                    R.__clamp[
                      Math.round(
                        (((n >>> 8) & 255) * F + ((x >>> 8) & 255) * r * u) / D,
                      )
                    ];
                  x =
                    (((x >>> 24) & 255) << 24) |
                    (((x >>> 16) & 255) << 16) |
                    ((F & 255) << 8) |
                    (x & 255);
                  D = R.__clamp[Math.round(255 * D)];
                  x =
                    (((x >>> 24) & 255) << 24) |
                    (((x >>> 16) & 255) << 16) |
                    (((x >>> 8) & 255) << 8) |
                    (D & 255);
                }
                D = m;
                F = z;
                null == F && (F = !1);
                null == D && (D = 0);
                F &&
                  (0 == (x & 255)
                    ? 0 != x && (x = 0)
                    : 255 != (x & 255) &&
                      ((R.a16 = R.__alpha16[x & 255]),
                      (x =
                        ((((((x >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                        ((((((x >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                        ((((((x >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                        (x & 255))));
                switch (D) {
                  case 0:
                    p[h] = (x >>> 24) & 255;
                    p[h + 1] = (x >>> 16) & 255;
                    p[h + 2] = (x >>> 8) & 255;
                    p[h + 3] = x & 255;
                    break;
                  case 1:
                    p[h] = x & 255;
                    p[h + 1] = (x >>> 24) & 255;
                    p[h + 2] = (x >>> 16) & 255;
                    p[h + 3] = (x >>> 8) & 255;
                    break;
                  case 2:
                    ((p[h] = (x >>> 8) & 255),
                      (p[h + 1] = (x >>> 16) & 255),
                      (p[h + 2] = (x >>> 24) & 255),
                      (p[h + 3] = x & 255));
                }
                d += 4;
                h += 4;
              }
            }
          else if (t == m && q == z && l == w)
            for (B = 0, l = g.height; B < l; )
              ((G = B++),
                (d = c.byteOffset + c.stride * G),
                (h = g.byteOffset + g.stride * G),
                p.set(v.subarray(d, d + g.width * w), h));
          else
            for (B = 0, l = g.height; B < l; )
              for (
                G = B++,
                  d = c.byteOffset + c.stride * G,
                  h = g.byteOffset + g.stride * G,
                  H = 0,
                  C = g.width;
                H < C;

              ) {
                H++;
                D = t;
                F = q;
                null == F && (F = !1);
                null == D && (D = 0);
                switch (D) {
                  case 0:
                    n =
                      ((v[d] & 255) << 24) |
                      ((v[d + 1] & 255) << 16) |
                      ((v[d + 2] & 255) << 8) |
                      (v[d + 3] & 255);
                    break;
                  case 1:
                    n =
                      ((v[d + 1] & 255) << 24) |
                      ((v[d + 2] & 255) << 16) |
                      ((v[d + 3] & 255) << 8) |
                      (v[d] & 255);
                    break;
                  case 2:
                    n =
                      ((v[d + 2] & 255) << 24) |
                      ((v[d + 1] & 255) << 16) |
                      ((v[d] & 255) << 8) |
                      (v[d + 3] & 255);
                }
                F &&
                  0 != (n & 255) &&
                  255 != (n & 255) &&
                  ((R.unmult = 255 / (n & 255)),
                  (n =
                    ((R.__clamp[Math.round(((n >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((n >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((n >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (n & 255)));
                D = m;
                F = z;
                null == F && (F = !1);
                null == D && (D = 0);
                F &&
                  (0 == (n & 255)
                    ? 0 != n && (n = 0)
                    : 255 != (n & 255) &&
                      ((R.a16 = R.__alpha16[n & 255]),
                      (n =
                        ((((((n >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                        ((((((n >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                        ((((((n >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                        (n & 255))));
                switch (D) {
                  case 0:
                    p[h] = (n >>> 24) & 255;
                    p[h + 1] = (n >>> 16) & 255;
                    p[h + 2] = (n >>> 8) & 255;
                    p[h + 3] = n & 255;
                    break;
                  case 1:
                    p[h] = n & 255;
                    p[h + 1] = (n >>> 24) & 255;
                    p[h + 2] = (n >>> 16) & 255;
                    p[h + 3] = (n >>> 8) & 255;
                    break;
                  case 2:
                    ((p[h] = (n >>> 8) & 255),
                      (p[h + 1] = (n >>> 16) & 255),
                      (p[h + 2] = (n >>> 24) & 255),
                      (p[h + 3] = n & 255));
                }
                d += 4;
                h += 4;
              }
        }
        a.dirty = !0;
        a.version++;
      };
      Rb.fillRect = function (a, b, c, d) {
        switch (d) {
          case 1:
            c =
              (((c >>> 16) & 255) << 24) |
              (((c >>> 8) & 255) << 16) |
              ((c & 255) << 8) |
              ((c >>> 24) & 255);
            break;
          case 2:
            c =
              (((c >>> 8) & 255) << 24) |
              (((c >>> 16) & 255) << 16) |
              (((c >>> 24) & 255) << 8) |
              (c & 255);
        }
        a.get_transparent() ||
          (c =
            (((c >>> 24) & 255) << 24) |
            (((c >>> 16) & 255) << 16) |
            (((c >>> 8) & 255) << 8) |
            255);
        var f = a.buffer.data;
        if (null != f) {
          d = a.buffer.format;
          var h = a.buffer.premultiplied;
          h &&
            (0 == (c & 255)
              ? 0 != c && (c = 0)
              : 255 != (c & 255) &&
                ((R.a16 = R.__alpha16[c & 255]),
                (c =
                  ((((((c >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                  ((((((c >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                  ((((((c >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                  (c & 255))));
          b = new Qd(a, b);
          for (var k, v = 0, p = b.height; v < p; ) {
            h = v++;
            k = b.byteOffset + b.stride * h;
            for (var g = 0, t = b.width; g < t; ) {
              h = g++;
              var m = k + 4 * h,
                n = d;
              h = !1;
              null == h && (h = !1);
              null == n && (n = 0);
              h &&
                (0 == (c & 255)
                  ? 0 != c && (c = 0)
                  : 255 != (c & 255) &&
                    ((R.a16 = R.__alpha16[c & 255]),
                    (c =
                      ((((((c >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((c >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((c >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (c & 255))));
              switch (n) {
                case 0:
                  f[m] = (c >>> 24) & 255;
                  f[m + 1] = (c >>> 16) & 255;
                  f[m + 2] = (c >>> 8) & 255;
                  f[m + 3] = c & 255;
                  break;
                case 1:
                  f[m] = c & 255;
                  f[m + 1] = (c >>> 24) & 255;
                  f[m + 2] = (c >>> 16) & 255;
                  f[m + 3] = (c >>> 8) & 255;
                  break;
                case 2:
                  ((f[m] = (c >>> 8) & 255),
                    (f[m + 1] = (c >>> 16) & 255),
                    (f[m + 2] = (c >>> 24) & 255),
                    (f[m + 3] = c & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      Rb.gaussianBlur = function (a, b, c, d, f, h, k, v, p) {
        null == k && (k = 1);
        null == h && (h = 4);
        null == f && (f = 4);
        (v = a.get_premultiplied()) && a.set_premultiplied(!1);
        cd.blur(a, b, c, d, f, h, k);
        a.dirty = !0;
        a.version++;
        v && a.set_premultiplied(!0);
        return a;
      };
      Rb.getPixel = function (a, b, c, d) {
        var f = 0,
          h = a.buffer.data;
        b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        c = a.buffer.format;
        a = a.buffer.premultiplied;
        null == a && (a = !1);
        null == c && (c = 0);
        switch (c) {
          case 0:
            f =
              ((h[b] & 255) << 24) |
              ((h[b + 1] & 255) << 16) |
              ((h[b + 2] & 255) << 8) |
              (h[b + 3] & 255);
            break;
          case 1:
            f =
              ((h[b + 1] & 255) << 24) |
              ((h[b + 2] & 255) << 16) |
              ((h[b + 3] & 255) << 8) |
              (h[b] & 255);
            break;
          case 2:
            f =
              ((h[b + 2] & 255) << 24) |
              ((h[b + 1] & 255) << 16) |
              ((h[b] & 255) << 8) |
              (h[b + 3] & 255);
        }
        a &&
          0 != (f & 255) &&
          255 != (f & 255) &&
          ((R.unmult = 255 / (f & 255)),
          (f =
            ((R.__clamp[Math.round(((f >>> 24) & 255) * R.unmult)] & 255) <<
              24) |
            ((R.__clamp[Math.round(((f >>> 16) & 255) * R.unmult)] & 255) <<
              16) |
            ((R.__clamp[Math.round(((f >>> 8) & 255) * R.unmult)] & 255) << 8) |
            (f & 255)));
        f =
          (((f >>> 24) & 255) << 24) |
          (((f >>> 16) & 255) << 16) |
          (((f >>> 8) & 255) << 8) |
          0;
        switch (d) {
          case 1:
            return (
              ((f & 255) << 24) |
              (((f >>> 24) & 255) << 16) |
              (((f >>> 16) & 255) << 8) |
              ((f >>> 8) & 255)
            );
          case 2:
            return (
              (((f >>> 8) & 255) << 24) |
              (((f >>> 16) & 255) << 16) |
              (((f >>> 24) & 255) << 8) |
              (f & 255)
            );
          default:
            return f;
        }
      };
      Rb.getPixels = function (a, b, c) {
        if (null == a.buffer.data) return null;
        var d = new tb(new ArrayBuffer(4 * ((b.width * b.height) | 0))),
          f = a.buffer.data,
          h = a.buffer.format,
          k = a.buffer.premultiplied;
        a = new Qd(a, b);
        for (var v, p, g = (b = p = 0), t = a.height; g < t; ) {
          v = g++;
          v = a.byteOffset + a.stride * v;
          for (var m = 0, n = a.width; m < n; ) {
            m++;
            var x = h,
              q = k;
            null == q && (q = !1);
            null == x && (x = 0);
            switch (x) {
              case 0:
                p =
                  ((f[v] & 255) << 24) |
                  ((f[v + 1] & 255) << 16) |
                  ((f[v + 2] & 255) << 8) |
                  (f[v + 3] & 255);
                break;
              case 1:
                p =
                  ((f[v + 1] & 255) << 24) |
                  ((f[v + 2] & 255) << 16) |
                  ((f[v + 3] & 255) << 8) |
                  (f[v] & 255);
                break;
              case 2:
                p =
                  ((f[v + 2] & 255) << 24) |
                  ((f[v + 1] & 255) << 16) |
                  ((f[v] & 255) << 8) |
                  (f[v + 3] & 255);
            }
            q &&
              0 != (p & 255) &&
              255 != (p & 255) &&
              ((R.unmult = 255 / (p & 255)),
              (p =
                ((R.__clamp[Math.round(((p >>> 24) & 255) * R.unmult)] & 255) <<
                  24) |
                ((R.__clamp[Math.round(((p >>> 16) & 255) * R.unmult)] & 255) <<
                  16) |
                ((R.__clamp[Math.round(((p >>> 8) & 255) * R.unmult)] & 255) <<
                  8) |
                (p & 255)));
            switch (c) {
              case 1:
                p =
                  ((p & 255) << 24) |
                  (((p >>> 24) & 255) << 16) |
                  (((p >>> 16) & 255) << 8) |
                  ((p >>> 8) & 255);
                break;
              case 2:
                p =
                  (((p >>> 8) & 255) << 24) |
                  (((p >>> 16) & 255) << 16) |
                  (((p >>> 24) & 255) << 8) |
                  (p & 255);
            }
            d.b[b++] = (p >>> 24) & 255;
            d.b[b++] = (p >>> 16) & 255;
            d.b[b++] = (p >>> 8) & 255;
            d.b[b++] = p & 255;
            v += 4;
          }
        }
        return d;
      };
      Rb.multiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b && a.buffer.transparent) {
          for (
            var c = a.buffer.format, d = 0, f = 0, h = (b.length / 4) | 0;
            f < h;

          ) {
            var k = f++,
              v = 4 * k,
              p = c,
              g = !1;
            null == g && (g = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                d =
                  ((b[v] & 255) << 24) |
                  ((b[v + 1] & 255) << 16) |
                  ((b[v + 2] & 255) << 8) |
                  (b[v + 3] & 255);
                break;
              case 1:
                d =
                  ((b[v + 1] & 255) << 24) |
                  ((b[v + 2] & 255) << 16) |
                  ((b[v + 3] & 255) << 8) |
                  (b[v] & 255);
                break;
              case 2:
                d =
                  ((b[v + 2] & 255) << 24) |
                  ((b[v + 1] & 255) << 16) |
                  ((b[v] & 255) << 8) |
                  (b[v + 3] & 255);
            }
            g &&
              0 != (d & 255) &&
              255 != (d & 255) &&
              ((R.unmult = 255 / (d & 255)),
              (d =
                ((R.__clamp[Math.round(((d >>> 24) & 255) * R.unmult)] & 255) <<
                  24) |
                ((R.__clamp[Math.round(((d >>> 16) & 255) * R.unmult)] & 255) <<
                  16) |
                ((R.__clamp[Math.round(((d >>> 8) & 255) * R.unmult)] & 255) <<
                  8) |
                (d & 255)));
            k *= 4;
            v = c;
            p = !0;
            null == p && (p = !1);
            null == v && (v = 0);
            p &&
              (0 == (d & 255)
                ? 0 != d && (d = 0)
                : 255 != (d & 255) &&
                  ((R.a16 = R.__alpha16[d & 255]),
                  (d =
                    ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                    ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                    ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                    (d & 255))));
            switch (v) {
              case 0:
                b[k] = (d >>> 24) & 255;
                b[k + 1] = (d >>> 16) & 255;
                b[k + 2] = (d >>> 8) & 255;
                b[k + 3] = d & 255;
                break;
              case 1:
                b[k] = d & 255;
                b[k + 1] = (d >>> 24) & 255;
                b[k + 2] = (d >>> 16) & 255;
                b[k + 3] = (d >>> 8) & 255;
                break;
              case 2:
                ((b[k] = (d >>> 8) & 255),
                  (b[k + 1] = (d >>> 16) & 255),
                  (b[k + 2] = (d >>> 24) & 255),
                  (b[k + 3] = d & 255));
            }
          }
          a.buffer.premultiplied = !0;
          a.dirty = !0;
          a.version++;
        }
      };
      Rb.setFormat = function (a, b) {
        var c = a.buffer.data;
        if (null != c) {
          var d = (c.length / 4) | 0;
          switch (a.get_format()) {
            case 0:
              var f = 0;
              var h = 1;
              var k = 2;
              var v = 3;
              break;
            case 1:
              f = 1;
              h = 2;
              k = 3;
              v = 0;
              break;
            case 2:
              ((f = 2), (h = 1), (k = 0), (v = 3));
          }
          switch (b) {
            case 0:
              var p = 0;
              var g = 1;
              var t = 2;
              var m = 3;
              break;
            case 1:
              p = 1;
              g = 2;
              t = 3;
              m = 0;
              break;
            case 2:
              ((p = 2), (g = 1), (t = 0), (m = 3));
          }
          for (var n = 0; n < d; ) {
            var x = 4 * n++;
            var q = c[x + f];
            var z = c[x + h];
            var G = c[x + k];
            var l = c[x + v];
            c[x + p] = q;
            c[x + g] = z;
            c[x + t] = G;
            c[x + m] = l;
          }
          a.buffer.format = b;
          a.dirty = !0;
          a.version++;
        }
      };
      Rb.setPixel = function (a, b, c, d, f) {
        switch (f) {
          case 1:
            d =
              (((d >>> 16) & 255) << 24) |
              (((d >>> 8) & 255) << 16) |
              ((d & 255) << 8) |
              ((d >>> 24) & 255);
            break;
          case 2:
            d =
              (((d >>> 8) & 255) << 24) |
              (((d >>> 16) & 255) << 16) |
              (((d >>> 24) & 255) << 8) |
              (d & 255);
        }
        var h = 0,
          k = a.buffer.data,
          v = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        f = a.buffer.format;
        var p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == f && (f = 0);
        switch (f) {
          case 0:
            h =
              ((k[v] & 255) << 24) |
              ((k[v + 1] & 255) << 16) |
              ((k[v + 2] & 255) << 8) |
              (k[v + 3] & 255);
            break;
          case 1:
            h =
              ((k[v + 1] & 255) << 24) |
              ((k[v + 2] & 255) << 16) |
              ((k[v + 3] & 255) << 8) |
              (k[v] & 255);
            break;
          case 2:
            h =
              ((k[v + 2] & 255) << 24) |
              ((k[v + 1] & 255) << 16) |
              ((k[v] & 255) << 8) |
              (k[v + 3] & 255);
        }
        p &&
          0 != (h & 255) &&
          255 != (h & 255) &&
          ((R.unmult = 255 / (h & 255)),
          (h =
            ((R.__clamp[Math.round(((h >>> 24) & 255) * R.unmult)] & 255) <<
              24) |
            ((R.__clamp[Math.round(((h >>> 16) & 255) * R.unmult)] & 255) <<
              16) |
            ((R.__clamp[Math.round(((h >>> 8) & 255) * R.unmult)] & 255) << 8) |
            (h & 255)));
        d =
          (((d >>> 24) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 8) & 255) << 8) |
          (h & 255);
        k = a.buffer.data;
        v = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        f = a.buffer.format;
        p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == f && (f = 0);
        p &&
          (0 == (d & 255)
            ? 0 != d && (d = 0)
            : 255 != (d & 255) &&
              ((R.a16 = R.__alpha16[d & 255]),
              (d =
                ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                (d & 255))));
        switch (f) {
          case 0:
            k[v] = (d >>> 24) & 255;
            k[v + 1] = (d >>> 16) & 255;
            k[v + 2] = (d >>> 8) & 255;
            k[v + 3] = d & 255;
            break;
          case 1:
            k[v] = d & 255;
            k[v + 1] = (d >>> 24) & 255;
            k[v + 2] = (d >>> 16) & 255;
            k[v + 3] = (d >>> 8) & 255;
            break;
          case 2:
            ((k[v] = (d >>> 8) & 255),
              (k[v + 1] = (d >>> 16) & 255),
              (k[v + 2] = (d >>> 24) & 255),
              (k[v + 3] = d & 255));
        }
        a.dirty = !0;
        a.version++;
      };
      Rb.unmultiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b) {
          for (
            var c = a.buffer.format, d = 0, f = 0, h = (b.length / 4) | 0;
            f < h;

          ) {
            var k = f++,
              v = 4 * k,
              p = c,
              g = !0;
            null == g && (g = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                d =
                  ((b[v] & 255) << 24) |
                  ((b[v + 1] & 255) << 16) |
                  ((b[v + 2] & 255) << 8) |
                  (b[v + 3] & 255);
                break;
              case 1:
                d =
                  ((b[v + 1] & 255) << 24) |
                  ((b[v + 2] & 255) << 16) |
                  ((b[v + 3] & 255) << 8) |
                  (b[v] & 255);
                break;
              case 2:
                d =
                  ((b[v + 2] & 255) << 24) |
                  ((b[v + 1] & 255) << 16) |
                  ((b[v] & 255) << 8) |
                  (b[v + 3] & 255);
            }
            g &&
              0 != (d & 255) &&
              255 != (d & 255) &&
              ((R.unmult = 255 / (d & 255)),
              (d =
                ((R.__clamp[Math.round(((d >>> 24) & 255) * R.unmult)] & 255) <<
                  24) |
                ((R.__clamp[Math.round(((d >>> 16) & 255) * R.unmult)] & 255) <<
                  16) |
                ((R.__clamp[Math.round(((d >>> 8) & 255) * R.unmult)] & 255) <<
                  8) |
                (d & 255)));
            k *= 4;
            v = c;
            p = !1;
            null == p && (p = !1);
            null == v && (v = 0);
            p &&
              (0 == (d & 255)
                ? 0 != d && (d = 0)
                : 255 != (d & 255) &&
                  ((R.a16 = R.__alpha16[d & 255]),
                  (d =
                    ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                    ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                    ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                    (d & 255))));
            switch (v) {
              case 0:
                b[k] = (d >>> 24) & 255;
                b[k + 1] = (d >>> 16) & 255;
                b[k + 2] = (d >>> 8) & 255;
                b[k + 3] = d & 255;
                break;
              case 1:
                b[k] = d & 255;
                b[k + 1] = (d >>> 24) & 255;
                b[k + 2] = (d >>> 16) & 255;
                b[k + 3] = (d >>> 8) & 255;
                break;
              case 2:
                ((b[k] = (d >>> 8) & 255),
                  (b[k + 1] = (d >>> 16) & 255),
                  (b[k + 2] = (d >>> 24) & 255),
                  (b[k + 3] = d & 255));
            }
          }
          a.buffer.premultiplied = !1;
          a.dirty = !0;
          a.version++;
        }
      };
      var Qd = function (a, b) {
        this.image = a;
        null == b
          ? (this.rect = a.get_rect())
          : (0 > b.x && (b.x = 0),
            0 > b.y && (b.y = 0),
            b.x + b.width > a.width && (b.width = a.width - b.x),
            b.y + b.height > a.height && (b.height = a.height - b.y),
            0 > b.width && (b.width = 0),
            0 > b.height && (b.height = 0),
            (this.rect = b));
        this.stride = a.buffer.get_stride();
        this.__update();
      };
      g['lime._internal.graphics._ImageDataUtil.ImageDataView'] = Qd;
      Qd.__name__ = 'lime._internal.graphics._ImageDataUtil.ImageDataView';
      Qd.prototype = {
        clip: function (a, b, c, d) {
          null == this.tempRect && (this.tempRect = new hd());
          this.tempRect.setTo(a, b, c, d);
          this.rect.intersection(this.tempRect, this.rect);
          this.__update();
        },
        __update: function () {
          this.x = Math.ceil(this.rect.x);
          this.y = Math.ceil(this.rect.y);
          this.width = Math.floor(this.rect.width);
          this.height = Math.floor(this.rect.height);
          this.byteOffset =
            this.stride * (this.y + this.image.offsetY) +
            4 * (this.x + this.image.offsetX);
        },
        __class__: Qd,
      };
      var cd = function () {};
      g['lime._internal.graphics.StackBlur'] = cd;
      cd.__name__ = 'lime._internal.graphics.StackBlur';
      cd.blur = function (a, b, c, d, f, h, k) {
        a.copyPixels(b, c, d);
        cd.__stackBlurCanvasRGBA(a, c.width | 0, c.height | 0, f, h, k);
      };
      cd.__stackBlurCanvasRGBA = function (a, b, c, d, f, h) {
        d = Math.round(d) >> 1;
        f = Math.round(f) >> 1;
        if (
          null != cd.MUL_TABLE &&
          (d >= cd.MUL_TABLE.length && (d = cd.MUL_TABLE.length - 1),
          f >= cd.MUL_TABLE.length && (f = cd.MUL_TABLE.length - 1),
          !(0 > d || 0 > f))
        ) {
          1 > h && (h = 1);
          3 < h && (h = 3);
          a = a.get_data();
          var k,
            v = d + d + 1;
          var p = f + f + 1;
          var g = b - 1,
            t = c - 1,
            m = d + 1,
            n = f + 1,
            x = new Af(),
            q = x;
          var z = 1;
          for (var G = v; z < G; ) (z++, (q = q.n = new Af()));
          q.n = x;
          var l = (v = new Af());
          z = 1;
          for (G = p; z < G; ) (z++, (l = l.n = new Af()));
          l.n = v;
          for (
            var w = cd.MUL_TABLE[d],
              D = cd.SHG_TABLE[d],
              B = cd.MUL_TABLE[f],
              F = cd.SHG_TABLE[f];
            0 < h;

          ) {
            --h;
            var r = (k = 0);
            var H = w,
              u = D;
            var C = c;
            do {
              var ba = a[k];
              p = m * ba;
              var ta = a[k + 1];
              var M = m * ta;
              var I = a[k + 2];
              var ra = m * I;
              z = a[k + 3];
              var y = m * z;
              q = x;
              l = m;
              do ((q.r = ba), (q.g = ta), (q.b = I), (q.a = z), (q = q.n));
              while (-1 < --l);
              z = 1;
              for (G = m; z < G; )
                ((l = z++),
                  (l = k + ((g < l ? g : l) << 2)),
                  (p += q.r = a[l]),
                  (M += q.g = a[l + 1]),
                  (ra += q.b = a[l + 2]),
                  (y += q.a = a[l + 3]),
                  (q = q.n));
              G = x;
              q = 0;
              for (z = b; q < z; )
                ((l = q++),
                  (a[k++] = (p * H) >>> u),
                  (a[k++] = (M * H) >>> u),
                  (a[k++] = (ra * H) >>> u),
                  (a[k++] = (y * H) >>> u),
                  (l = l + d + 1),
                  (l = (r + (l < g ? l : g)) << 2),
                  (p -= G.r - (G.r = a[l])),
                  (M -= G.g - (G.g = a[l + 1])),
                  (ra -= G.b - (G.b = a[l + 2])),
                  (y -= G.a - (G.a = a[l + 3])),
                  (G = G.n));
              r += b;
            } while (0 < --C);
            H = B;
            u = F;
            C = 0;
            for (r = b; C < r; ) {
              q = C++;
              k = q << 2;
              ba = a[k];
              p = n * ba;
              ta = a[k + 1];
              M = n * ta;
              I = a[k + 2];
              ra = n * I;
              z = a[k + 3];
              y = n * z;
              l = v;
              k = 0;
              for (G = n; k < G; )
                (k++, (l.r = ba), (l.g = ta), (l.b = I), (l.a = z), (l = l.n));
              z = b;
              G = 1;
              for (ba = f + 1; G < ba; )
                ((ta = G++),
                  (k = (z + q) << 2),
                  (p += l.r = a[k]),
                  (M += l.g = a[k + 1]),
                  (ra += l.b = a[k + 2]),
                  (y += l.a = a[k + 3]),
                  (l = l.n),
                  ta < t && (z += b));
              k = q;
              G = v;
              if (0 < h)
                for (ba = 0, ta = c; ba < ta; )
                  ((I = ba++),
                    (l = k << 2),
                    (z = (y * H) >>> u),
                    (a[l + 3] = z),
                    0 < z
                      ? ((a[l] = (p * H) >>> u),
                        (a[l + 1] = (M * H) >>> u),
                        (a[l + 2] = (ra * H) >>> u))
                      : (a[l] = a[l + 1] = a[l + 2] = 0),
                    (l = I + n),
                    (l = (q + (l < t ? l : t) * b) << 2),
                    (p -= G.r - (G.r = a[l])),
                    (M -= G.g - (G.g = a[l + 1])),
                    (ra -= G.b - (G.b = a[l + 2])),
                    (y -= G.a - (G.a = a[l + 3])),
                    (G = G.n),
                    (k += b));
              else
                for (var N = 0, ka = c; N < ka; ) {
                  var oa = N++;
                  l = k << 2;
                  z = (y * H) >>> u;
                  a[l + 3] = z;
                  0 < z
                    ? ((z = 255 / z),
                      (ba = (((p * H) >>> u) * z) | 0),
                      (ta = (((M * H) >>> u) * z) | 0),
                      (I = (((ra * H) >>> u) * z) | 0),
                      (a[l] = 255 < ba ? 255 : ba),
                      (a[l + 1] = 255 < ta ? 255 : ta),
                      (a[l + 2] = 255 < I ? 255 : I))
                    : (a[l] = a[l + 1] = a[l + 2] = 0);
                  l = oa + n;
                  l = (q + (l < t ? l : t) * b) << 2;
                  p -= G.r - (G.r = a[l]);
                  M -= G.g - (G.g = a[l + 1]);
                  ra -= G.b - (G.b = a[l + 2]);
                  y -= G.a - (G.a = a[l + 3]);
                  G = G.n;
                  k += b;
                }
            }
          }
        }
      };
      var Af = function () {
        this.a = this.b = this.g = this.r = 0;
        this.n = null;
      };
      g['lime._internal.graphics.BlurStack'] = Af;
      Af.__name__ = 'lime._internal.graphics.BlurStack';
      Af.prototype = { __class__: Af };
      var dc = function (a, b) {
        if (null != a)
          try {
            ((this.value = a()), (this.isComplete = !0));
          } catch (c) {
            ((Qa.lastError = c),
              (this.error = W.caught(c).unwrap()),
              (this.isError = !0));
          }
      };
      g['lime.app.Future'] = dc;
      dc.__name__ = 'lime.app.Future';
      dc.withValue = function (a) {
        var b = new dc();
        b.isComplete = !0;
        b.value = a;
        return b;
      };
      dc.prototype = {
        onComplete: function (a) {
          null != a &&
            (this.isComplete
              ? a(this.value)
              : this.isError ||
                (null == this.__completeListeners &&
                  (this.__completeListeners = []),
                this.__completeListeners.push(a)));
          return this;
        },
        onError: function (a) {
          null != a &&
            (this.isError
              ? a(this.error)
              : this.isComplete ||
                (null == this.__errorListeners && (this.__errorListeners = []),
                this.__errorListeners.push(a)));
          return this;
        },
        onProgress: function (a) {
          null != a &&
            (null == this.__progressListeners &&
              (this.__progressListeners = []),
            this.__progressListeners.push(a));
          return this;
        },
        then: function (a) {
          if (this.isComplete) return a(this.value);
          if (this.isError) {
            var b = new dc();
            b.isError = !0;
            b.error = this.error;
            return b;
          }
          var c = new fd();
          this.onError(l(c, c.error));
          this.onProgress(l(c, c.progress));
          this.onComplete(function (b) {
            b = a(b);
            b.onError(l(c, c.error));
            b.onComplete(l(c, c.complete));
          });
          return c.future;
        },
        __class__: dc,
      };
      var fd = function () {
        this.future = new dc();
      };
      g['lime.app.Promise'] = fd;
      fd.__name__ = 'lime.app.Promise';
      fd.prototype = {
        complete: function (a) {
          if (
            !this.future.isError &&
            ((this.future.isComplete = !0),
            (this.future.value = a),
            null != this.future.__completeListeners)
          ) {
            for (
              var b = 0, c = this.future.__completeListeners;
              b < c.length;

            ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__completeListeners = null;
          }
          return this;
        },
        completeWith: function (a) {
          a.onComplete(l(this, this.complete));
          a.onError(l(this, this.error));
          a.onProgress(l(this, this.progress));
          return this;
        },
        error: function (a) {
          if (
            !this.future.isComplete &&
            ((this.future.isError = !0),
            (this.future.error = a),
            null != this.future.__errorListeners)
          ) {
            for (var b = 0, c = this.future.__errorListeners; b < c.length; ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__errorListeners = null;
          }
          return this;
        },
        progress: function (a, b) {
          if (
            !this.future.isError &&
            !this.future.isComplete &&
            null != this.future.__progressListeners
          )
            for (
              var c = 0, d = this.future.__progressListeners;
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              f(a, b);
            }
          return this;
        },
        __class__: fd,
      };
      var Wi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_Float_Void'] = Wi;
      Wi.__name__ = 'lime.app._Event_Float_Float_Float_Void';
      Wi.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: Wi,
      };
      var Xi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_Int_Void'] = Xi;
      Xi.__name__ = 'lime.app._Event_Float_Float_Int_Void';
      Xi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: Xi,
      };
      var pg = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_Void'] = pg;
      pg.__name__ = 'lime.app._Event_Float_Float_Void';
      pg.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: pg,
      };
      var Yi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_lime_ui_MouseButton_Void'] = Yi;
      Yi.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseButton_Void';
      Yi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: Yi,
      };
      var Zi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void'] = Zi;
      Zi.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void';
      Zi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: Zi,
      };
      var $i = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_Float_Void'] = $i;
      $i.__name__ = 'lime.app._Event_Int_Float_Void';
      $i.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: $i,
      };
      var rh = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_Int_Void'] = rh;
      rh.__name__ = 'lime.app._Event_Int_Int_Void';
      rh.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: rh,
      };
      var Ge = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_Void'] = Ge;
      Ge.__name__ = 'lime.app._Event_Int_Void';
      Ge.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Ge,
      };
      var aj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_lime_ui_JoystickHatPosition_Void'] = aj;
      aj.__name__ = 'lime.app._Event_Int_lime_ui_JoystickHatPosition_Void';
      aj.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: aj,
      };
      var bj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_String_Int_Int_Void'] = bj;
      bj.__name__ = 'lime.app._Event_String_Int_Int_Void';
      bj.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: bj,
      };
      var sh = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_String_Void'] = sh;
      sh.__name__ = 'lime.app._Event_String_Void';
      sh.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        has: function (a) {
          for (var b = 0, c = this.__listeners; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d == a) return !0;
          }
          return !1;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: sh,
      };
      var nc = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Void_Void'] = nc;
      nc.__name__ = 'lime.app._Event_Void_Void';
      nc.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function () {
          this.canceled = !1;
          for (
            var a = this.__listeners, b = this.__repeat, c = 0;
            c < a.length &&
            (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled);

          );
        },
        __class__: nc,
      };
      var th = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_graphics_RenderContext_Void'] = th;
      th.__name__ = 'lime.app._Event_lime_graphics_RenderContext_Void';
      th.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: th,
      };
      var cj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_GamepadAxis_Float_Void'] = cj;
      cj.__name__ = 'lime.app._Event_lime_ui_GamepadAxis_Float_Void';
      cj.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: cj,
      };
      var uh = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_GamepadButton_Void'] = uh;
      uh.__name__ = 'lime.app._Event_lime_ui_GamepadButton_Void';
      uh.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: uh,
      };
      var dj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Gamepad_Void'] = dj;
      dj.__name__ = 'lime.app._Event_lime_ui_Gamepad_Void';
      dj.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: dj,
      };
      var ej = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Joystick_Void'] = ej;
      ej.__name__ = 'lime.app._Event_lime_ui_Joystick_Void';
      ej.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: ej,
      };
      var vh = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void'] = vh;
      vh.__name__ = 'lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void';
      vh.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: vh,
      };
      var Bf = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Touch_Void'] = Bf;
      Bf.__name__ = 'lime.app._Event_lime_ui_Touch_Void';
      Bf.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Bf,
      };
      var xi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Window_Void'] = xi;
      xi.__name__ = 'lime.app._Event_lime_ui_Window_Void';
      xi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: xi,
      };
      var Mb = function (a, b, c, d, f, h, k) {
        null == f && (f = -1);
        null == d && (d = -1);
        null == c && (c = 0);
        null == b && (b = 0);
        this.offsetX = b;
        this.offsetY = c;
        this.width = d;
        this.height = f;
        this.version = 0;
        null == k &&
          ((k = Kc.CANVAS), null != bd.__current.__worker || bd.__isWorker) &&
          (k = Kc.DATA);
        this.type = k;
        if (null == a) {
          if (0 < d && 0 < f)
            switch (this.type._hx_index) {
              case 0:
                this.buffer = new be(null, d, f);
                Ha.createCanvas(this, d, f);
                null != h && 0 != h && this.fillRect(new hd(0, 0, d, f), h);
                break;
              case 1:
                ((a = d * f * 4),
                  (a = null != a ? new Uint8Array(a) : null),
                  (this.buffer = new be(a, d, f)),
                  null != h && 0 != h && this.fillRect(new hd(0, 0, d, f), h));
            }
        } else this.__fromImageBuffer(a);
      };
      g['lime.graphics.Image'] = Mb;
      Mb.__name__ = 'lime.graphics.Image';
      Mb.fromCanvas = function (a) {
        if (null == a) return null;
        var b = new be(null, a.width, a.height);
        b.set_src(a);
        a = new Mb(b);
        a.type = Kc.CANVAS;
        return a;
      };
      Mb.fromFile = function (a) {
        if (null == a) return null;
        var b = new Mb();
        return b.__fromFile(a) ? b : null;
      };
      Mb.loadFromBytes = function (a) {
        if (null == a) return dc.withValue(null);
        if (Mb.__isPNG(a)) var b = 'image/png';
        else if (Mb.__isJPG(a)) b = 'image/jpeg';
        else if (Mb.__isGIF(a)) b = 'image/gif';
        else if (Mb.__isWebP(a)) b = 'image/webp';
        else return dc.withValue(null);
        return Aa.loadImageFromBytes(a, b);
      };
      Mb.loadFromFile = function (a) {
        return null == a ? dc.withValue(null) : Aa.loadImage(a);
      };
      Mb.__isGIF = function (a) {
        if (null == a || 6 > a.length) return !1;
        a = a.getString(0, 6);
        return 'GIF87a' != a ? 'GIF89a' == a : !0;
      };
      Mb.__isJPG = function (a) {
        return null == a || 4 > a.length
          ? !1
          : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2]
            ? 217 == a.b[a.length - 1]
            : !1;
      };
      Mb.__isPNG = function (a) {
        return null == a || 8 > a.length
          ? !1
          : 137 == a.b[0] &&
              80 == a.b[1] &&
              78 == a.b[2] &&
              71 == a.b[3] &&
              13 == a.b[4] &&
              10 == a.b[5] &&
              26 == a.b[6]
            ? 10 == a.b[7]
            : !1;
      };
      Mb.__isWebP = function (a) {
        return null == a || 16 > a.length
          ? !1
          : 'RIFF' == a.getString(0, 4)
            ? 'WEBP' == a.getString(8, 4)
            : !1;
      };
      Mb.prototype = {
        clone: function () {
          if (null != this.buffer) {
            this.type == Kc.CANVAS
              ? Ha.convertToCanvas(this)
              : Ha.convertToData(this);
            var a = new Mb(
              this.buffer.clone(),
              this.offsetX,
              this.offsetY,
              this.width,
              this.height,
              null,
              this.type,
            );
            a.version = this.version;
            return a;
          }
          return new Mb(
            null,
            this.offsetX,
            this.offsetY,
            this.width,
            this.height,
            null,
            this.type,
          );
        },
        colorTransform: function (a, b) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Ha.colorTransform(this, a, b);
                break;
              case 1:
                Ha.convertToData(this);
                Rb.colorTransform(this, a, b);
                break;
              case 2:
                (a.offset(this.offsetX, this.offsetY),
                  this.buffer.__srcBitmapData.colorTransform(
                    a.__toFlashRectangle(),
                    Bc.__toFlashColorTransform(b),
                  ));
            }
        },
        copyChannel: function (a, b, c, d, f) {
          b = this.__clipRect(b);
          if (
            null != this.buffer &&
            null != b &&
            !(
              (f == zf.ALPHA && !this.get_transparent()) ||
              0 >= b.width ||
              0 >= b.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              this.type._hx_index)
            ) {
              case 0:
                Ha.copyChannel(this, a, b, c, d, f);
                break;
              case 1:
                Ha.convertToData(this);
                Ha.convertToData(a);
                Rb.copyChannel(this, a, b, c, d, f);
                break;
              case 2:
                switch (d._hx_index) {
                  case 0:
                    var h = 1;
                    break;
                  case 1:
                    h = 2;
                    break;
                  case 2:
                    h = 4;
                    break;
                  case 3:
                    h = 8;
                }
                switch (f._hx_index) {
                  case 0:
                    var k = 1;
                    break;
                  case 1:
                    k = 2;
                    break;
                  case 2:
                    k = 4;
                    break;
                  case 3:
                    k = 8;
                }
                b.offset(a.offsetX, a.offsetY);
                c.offset(this.offsetX, this.offsetY);
                this.buffer.__srcBitmapData.copyChannel(
                  a.buffer.get_src(),
                  b.__toFlashRectangle(),
                  c.__toFlashPoint(),
                  h,
                  k,
                );
            }
        },
        copyPixels: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          if (
            null != this.buffer &&
            null != a &&
            !(
              0 >= b.width ||
              0 >= b.height ||
              0 >= this.width ||
              0 >= this.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              0 > b.x && ((b.width += b.x), (b.x = 0)),
              0 > b.y && ((b.height += b.y), (b.y = 0)),
              c.x + b.width > this.width && (b.width = this.width - c.x),
              c.y + b.height > this.height && (b.height = this.height - c.y),
              0 > c.x && ((b.width += c.x), (b.x -= c.x), (c.x = 0)),
              0 > c.y && ((b.height += c.y), (b.y -= c.y), (c.y = 0)),
              a == this &&
                c.x < b.get_right() &&
                c.y < b.get_bottom() &&
                (a = this.clone()),
              d == a && (null == f || (0 == f.x && 0 == f.y)) && (f = d = null),
              this.type._hx_index)
            ) {
              case 0:
                null != d
                  ? (Ha.convertToData(this),
                    Ha.convertToData(a),
                    null != d && Ha.convertToData(d),
                    Rb.copyPixels(this, a, b, c, d, f, h))
                  : (Ha.convertToCanvas(this),
                    Ha.convertToCanvas(a),
                    Ha.copyPixels(this, a, b, c, d, f, h));
                break;
              case 1:
                Ha.convertToData(this);
                Ha.convertToData(a);
                null != d && Ha.convertToData(d);
                Rb.copyPixels(this, a, b, c, d, f, h);
                break;
              case 2:
                (b.offset(a.offsetX, a.offsetY),
                  c.offset(this.offsetX, this.offsetY),
                  null != d && null != f && f.offset(d.offsetX, d.offsetY),
                  this.buffer.__srcBitmapData.copyPixels(
                    a.buffer.__srcBitmapData,
                    b.__toFlashRectangle(),
                    c.__toFlashPoint(),
                    null != d ? d.buffer.get_src() : null,
                    null != f ? f.__toFlashPoint() : null,
                    h,
                  ));
            }
        },
        encode: function (a, b) {
          null == b && (b = 90);
          if (null == a) return Vi.encode(this);
          switch (a._hx_index) {
            case 0:
              return Dj.encode(this);
            case 1:
              return Gj.encode(this, b);
            case 2:
              return Vi.encode(this);
          }
        },
        fillRect: function (a, b, c) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Ha.fillRect(this, a, b, c);
                break;
              case 1:
                Ha.convertToData(this);
                if (0 == this.buffer.data.length) break;
                Rb.fillRect(this, a, b, c);
                break;
              case 2:
                a.offset(this.offsetX, this.offsetY);
                if (null == c)
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 24) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 8) & 255);
                else
                  switch (c) {
                    case 1:
                      break;
                    case 2:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 8) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 24) & 255);
                      break;
                    default:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 24) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b);
            }
        },
        getPixel: function (a, b, c) {
          if (
            null == this.buffer ||
            0 > a ||
            0 > b ||
            a >= this.width ||
            b >= this.height
          )
            return 0;
          switch (this.type._hx_index) {
            case 0:
              return Ha.getPixel(this, a, b, c);
            case 1:
              return (Ha.convertToData(this), Rb.getPixel(this, a, b, c));
            case 2:
              a = this.buffer.__srcBitmapData.getPixel(
                a + this.offsetX,
                b + this.offsetY,
              );
              if (null == c)
                return (
                  (((a >>> 16) & 255) << 24) |
                  (((a >>> 8) & 255) << 16) |
                  ((a & 255) << 8) |
                  ((a >>> 24) & 255)
                );
              switch (c) {
                case 1:
                  return a;
                case 2:
                  return (
                    ((a & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    (((a >>> 16) & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
                default:
                  return (
                    (((a >>> 16) & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    ((a & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
              }
            default:
              return 0;
          }
        },
        getPixels: function (a, b) {
          if (null == this.buffer) return null;
          switch (this.type._hx_index) {
            case 0:
              return Ha.getPixels(this, a, b);
            case 1:
              return (Ha.convertToData(this), Rb.getPixels(this, a, b));
            case 2:
              return null;
            default:
              return null;
          }
        },
        setPixel: function (a, b, c, d) {
          if (
            !(
              null == this.buffer ||
              0 > a ||
              0 > b ||
              a >= this.width ||
              b >= this.height
            )
          )
            switch (this.type._hx_index) {
              case 0:
                Ha.setPixel(this, a, b, c, d);
                break;
              case 1:
                Ha.convertToData(this);
                Rb.setPixel(this, a, b, c, d);
                break;
              case 2:
                if (null == d)
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
                else
                  switch (d) {
                    case 1:
                      break;
                    case 2:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 8) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 24) & 255);
                      break;
                    default:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 24) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.setPixel(
                  a + this.offsetX,
                  b + this.offsetX,
                  c,
                );
            }
        },
        __clipRect: function (a) {
          return null == a ||
            (0 > a.x && ((a.width -= -a.x), (a.x = 0), 0 >= a.x + a.width)) ||
            (0 > a.y && ((a.height -= -a.y), (a.y = 0), 0 >= a.y + a.height)) ||
            (a.x + a.width >= this.width &&
              ((a.width -= a.x + a.width - this.width), 0 >= a.width)) ||
            (a.y + a.height >= this.height &&
              ((a.height -= a.y + a.height - this.height), 0 >= a.height))
            ? null
            : a;
        },
        __fromBase64: function (a, b, c) {
          var d = this,
            f = new window.Image();
          f.addEventListener(
            'load',
            function (a) {
              d.buffer = new be(null, f.width, f.height);
              d.buffer.__srcImage = f;
              d.offsetX = 0;
              d.offsetY = 0;
              d.width = d.buffer.width;
              d.height = d.buffer.height;
              null != c && c(d);
            },
            !1,
          );
          f.src = 'data:' + b + ';base64,' + a;
        },
        __fromBytes: function (a, b) {
          if (Mb.__isPNG(a)) var c = 'image/png';
          else if (Mb.__isJPG(a)) c = 'image/jpeg';
          else if (Mb.__isGIF(a)) c = 'image/gif';
          else return !1;
          this.__fromBase64(Pd.encode(a), c, b);
          return !0;
        },
        __fromFile: function (a, b, c) {
          var d = this,
            f = new window.Image();
          Aa.__isSameOrigin(a) || (f.crossOrigin = 'Anonymous');
          f.onload = function (a) {
            d.buffer = new be(null, f.width, f.height);
            d.buffer.__srcImage = f;
            d.width = f.width;
            d.height = f.height;
            null != b && b(d);
          };
          f.onerror = function (a) {
            null != c && c();
          };
          f.src = a;
          return !0;
        },
        __fromImageBuffer: function (a) {
          this.buffer = a;
          null != a &&
            (-1 == this.width && (this.width = a.width),
            -1 == this.height && (this.height = a.height));
        },
        get_data: function () {
          null == this.buffer.data &&
            0 < this.buffer.width &&
            0 < this.buffer.height &&
            Ha.convertToData(this);
          return this.buffer.data;
        },
        get_format: function () {
          return this.buffer.format;
        },
        set_format: function (a) {
          this.buffer.format != a &&
            1 == this.type._hx_index &&
            Rb.setFormat(this, a);
          return (this.buffer.format = a);
        },
        get_premultiplied: function () {
          return this.buffer.premultiplied;
        },
        set_premultiplied: function (a) {
          if (a && !this.buffer.premultiplied)
            switch (this.type._hx_index) {
              case 0:
              case 1:
                (Ha.convertToData(this), Rb.multiplyAlpha(this));
            }
          else
            !a &&
              this.buffer.premultiplied &&
              1 == this.type._hx_index &&
              (Ha.convertToData(this), Rb.unmultiplyAlpha(this));
          return a;
        },
        get_rect: function () {
          return new hd(0, 0, this.width, this.height);
        },
        get_src: function () {
          null != this.buffer.__srcCanvas ||
            (null == this.buffer.data && this.type != Kc.DATA) ||
            Ha.convertToCanvas(this);
          return this.buffer.get_src();
        },
        get_transparent: function () {
          return null == this.buffer ? !1 : this.buffer.transparent;
        },
        set_transparent: function (a) {
          return null == this.buffer ? !1 : (this.buffer.transparent = a);
        },
        __class__: Mb,
        __properties__: {
          set_transparent: 'set_transparent',
          get_transparent: 'get_transparent',
          get_src: 'get_src',
          get_rect: 'get_rect',
          set_premultiplied: 'set_premultiplied',
          get_premultiplied: 'get_premultiplied',
          set_format: 'set_format',
          get_format: 'get_format',
          get_data: 'get_data',
        },
      };
      var be = function (a, b, c, d, f) {
        null == d && (d = 32);
        null == c && (c = 0);
        null == b && (b = 0);
        this.data = a;
        this.width = b;
        this.height = c;
        this.bitsPerPixel = d;
        this.format = null == f ? 0 : f;
        this.premultiplied = !1;
        this.transparent = !0;
      };
      g['lime.graphics.ImageBuffer'] = be;
      be.__name__ = 'lime.graphics.ImageBuffer';
      be.prototype = {
        clone: function () {
          var a = new be(this.data, this.width, this.height, this.bitsPerPixel);
          if (null != this.data) {
            var b = this.data.byteLength,
              c = null,
              d = null,
              f = null,
              h = null,
              k = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != h
                        ? null == k
                          ? new Uint8Array(h, 0)
                          : new Uint8Array(h, 0, k)
                        : null;
            a.data = b;
            d = c = b = null;
            f = this.data;
            k = h = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != h
                        ? null == k
                          ? new Uint8Array(h, 0)
                          : new Uint8Array(h, 0, k)
                        : null;
            a.data.set(b);
          } else
            null != this.__srcImageData
              ? ((a.__srcCanvas = window.document.createElement('canvas')),
                (a.__srcContext = a.__srcCanvas.getContext('2d')),
                (a.__srcCanvas.width = this.__srcImageData.width),
                (a.__srcCanvas.height = this.__srcImageData.height),
                (a.__srcImageData = a.__srcContext.createImageData(
                  this.__srcImageData.width,
                  this.__srcImageData.height,
                )),
                (b = new Uint8ClampedArray(this.__srcImageData.data)),
                a.__srcImageData.data.set(b))
              : null != this.__srcCanvas
                ? ((a.__srcCanvas = window.document.createElement('canvas')),
                  (a.__srcContext = a.__srcCanvas.getContext('2d')),
                  (a.__srcCanvas.width = this.__srcCanvas.width),
                  (a.__srcCanvas.height = this.__srcCanvas.height),
                  a.__srcContext.drawImage(this.__srcCanvas, 0, 0))
                : (a.__srcImage = this.__srcImage);
          a.bitsPerPixel = this.bitsPerPixel;
          a.format = this.format;
          a.premultiplied = this.premultiplied;
          a.transparent = this.transparent;
          return a;
        },
        get_src: function () {
          return null != this.__srcImage ? this.__srcImage : this.__srcCanvas;
        },
        set_src: function (a) {
          a instanceof Image
            ? (this.__srcImage = a)
            : a instanceof HTMLCanvasElement &&
              ((this.__srcCanvas = a),
              (this.__srcContext = this.__srcCanvas.getContext('2d')));
          return a;
        },
        get_stride: function () {
          return this.width * ((this.bitsPerPixel / 8) | 0);
        },
        __class__: be,
        __properties__: {
          get_stride: 'get_stride',
          set_src: 'set_src',
          get_src: 'get_src',
        },
      };
      var zf = (F['lime.graphics.ImageChannel'] = {
        __ename__: 'lime.graphics.ImageChannel',
        __constructs__: null,
        RED: {
          _hx_name: 'RED',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
        GREEN: {
          _hx_name: 'GREEN',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
        BLUE: {
          _hx_name: 'BLUE',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
        ALPHA: {
          _hx_name: 'ALPHA',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageChannel',
          toString: q,
        },
      });
      zf.__constructs__ = [zf.RED, zf.GREEN, zf.BLUE, zf.ALPHA];
      var wh = (F['lime.graphics.ImageFileFormat'] = {
        __ename__: 'lime.graphics.ImageFileFormat',
        __constructs__: null,
        BMP: {
          _hx_name: 'BMP',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: q,
        },
        JPEG: {
          _hx_name: 'JPEG',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: q,
        },
        PNG: {
          _hx_name: 'PNG',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: q,
        },
      });
      wh.__constructs__ = [wh.BMP, wh.JPEG, wh.PNG];
      var Kc = (F['lime.graphics.ImageType'] = {
        __ename__: 'lime.graphics.ImageType',
        __constructs__: null,
        CANVAS: {
          _hx_name: 'CANVAS',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
        DATA: {
          _hx_name: 'DATA',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
        FLASH: {
          _hx_name: 'FLASH',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
        CUSTOM: {
          _hx_name: 'CUSTOM',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageType',
          toString: q,
        },
      });
      Kc.__constructs__ = [Kc.CANVAS, Kc.DATA, Kc.FLASH, Kc.CUSTOM];
      var Ui = function () {};
      g['lime.graphics.RenderContext'] = Ui;
      Ui.__name__ = 'lime.graphics.RenderContext';
      Ui.prototype = { __class__: Ui };
      var kk = {
          uniform2fv: function (a, b, c, d, f) {
            null != d ? a.uniform2fv(b, c, d, f) : a.uniform2fv(b, c);
          },
        },
        wc = {
          bufferData: function (a, b, c, d) {
            a.bufferData(b, c, d);
          },
          texImage2D: function (a, b, c, d, f, h, k, v, p, g) {
            null != v
              ? a.texImage2D(b, c, d, f, h, k, v, p, g)
              : a.texImage2D(b, c, d, f, h, k);
          },
          uniformMatrix2fv: function (a, b, c, d) {
            a.uniformMatrix2fv(b, c, d);
          },
          uniformMatrix3fv: function (a, b, c, d) {
            a.uniformMatrix3fv(b, c, d);
          },
          uniformMatrix4fv: function (a, b, c, d) {
            a.uniformMatrix4fv(b, c, d);
          },
          fromWebGL2RenderContext: function (a) {
            return a;
          },
        },
        Jj = function (a) {};
      g['lime.graphics.cairo.Cairo'] = Jj;
      Jj.__name__ = 'lime.graphics.cairo.Cairo';
      Jj.prototype = {
        clip: function () {},
        identityMatrix: function () {},
        newPath: function () {},
        paint: function () {},
        rectangle: function (a, b, c, d) {},
        restore: function () {},
        save: function () {},
        setOperator: function (a) {
          return a;
        },
        setSourceRGB: function (a, b, c) {},
        set_matrix: function (a) {
          return a;
        },
        __class__: Jj,
        __properties__: { set_matrix: 'set_matrix' },
      };
      var lk = { flush: function (a) {} },
        ce = function () {};
      g['lime.graphics.opengl.GL'] = ce;
      ce.__name__ = 'lime.graphics.opengl.GL';
      var Kj = function () {
        this.STACK_UNDERFLOW = 1284;
        this.STACK_OVERFLOW = 1283;
        this.CONTEXT_FLAG_DEBUG_BIT = 2;
        this.DEBUG_OUTPUT = 37600;
        this.DEBUG_SEVERITY_LOW = 37192;
        this.DEBUG_SEVERITY_MEDIUM = 37191;
        this.DEBUG_SEVERITY_HIGH = 37190;
        this.DEBUG_LOGGED_MESSAGES = 37189;
        this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
        this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
        this.MAX_LABEL_LENGTH = 33512;
        this.SAMPLER = 33510;
        this.QUERY = 33507;
        this.PROGRAM = 33506;
        this.SHADER = 33505;
        this.BUFFER = 33504;
        this.DEBUG_GROUP_STACK_DEPTH = 33389;
        this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
        this.DEBUG_SEVERITY_NOTIFICATION = 33387;
        this.DEBUG_TYPE_POP_GROUP = 33386;
        this.DEBUG_TYPE_PUSH_GROUP = 33385;
        this.DEBUG_TYPE_MARKER = 33384;
        this.DEBUG_TYPE_OTHER = 33361;
        this.DEBUG_TYPE_PERFORMANCE = 33360;
        this.DEBUG_TYPE_PORTABILITY = 33359;
        this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
        this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
        this.DEBUG_TYPE_ERROR = 33356;
        this.DEBUG_SOURCE_OTHER = 33355;
        this.DEBUG_SOURCE_APPLICATION = 33354;
        this.DEBUG_SOURCE_THIRD_PARTY = 33353;
        this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
        this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
        this.DEBUG_SOURCE_API = 33350;
        this.DEBUG_CALLBACK_USER_PARAM = 33349;
        this.DEBUG_CALLBACK_FUNCTION = 33348;
        this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
        this.DEBUG_OUTPUT_SYNCHRONOUS = 33346;
      };
      g['lime.graphics.opengl.ext.KHR_debug'] = Kj;
      Kj.__name__ = 'lime.graphics.opengl.ext.KHR_debug';
      Kj.prototype = { __class__: Kj };
      var Bc = {
          getAlphaTable: function (a) {
            null == Bc.__alphaTable && (Bc.__alphaTable = new Uint8Array(256));
            Bc.__alphaTable[0] = 0;
            for (var b = 1; 256 > b; ) {
              var c = b++;
              var d = Math.floor(c * a[18] + 255 * a[19]);
              255 < d && (d = 255);
              0 > d && (d = 0);
              Bc.__alphaTable[c] = d;
            }
            return Bc.__alphaTable;
          },
          getBlueTable: function (a) {
            null == Bc.__blueTable && (Bc.__blueTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[12] + 255 * a[14]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Bc.__blueTable[d] = b;
            }
            return Bc.__blueTable;
          },
          getGreenTable: function (a) {
            null == Bc.__greenTable && (Bc.__greenTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[6] + 255 * a[9]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Bc.__greenTable[d] = b;
            }
            return Bc.__greenTable;
          },
          getRedTable: function (a) {
            null == Bc.__redTable && (Bc.__redTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[0] + 255 * a[4]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Bc.__redTable[d] = b;
            }
            return Bc.__redTable;
          },
          __toFlashColorTransform: function (a) {
            return null;
          },
        },
        ib = {
          _new: function (a) {
            if (null == a || 16 != a.length)
              ((a = ib.__identity),
                (a = null != a ? new Float32Array(a) : null));
            return a;
          },
          append: function (a, b) {
            var c = a[0],
              d = a[4],
              f = a[8],
              h = a[12],
              k = a[1],
              v = a[5],
              p = a[9],
              g = a[13],
              t = a[2],
              m = a[6],
              n = a[10],
              x = a[14],
              q = a[3],
              l = a[7],
              G = a[11],
              z = a[15],
              w = ib.get(b, 0),
              D = ib.get(b, 4),
              B = ib.get(b, 8),
              F = ib.get(b, 12),
              r = ib.get(b, 1),
              H = ib.get(b, 5),
              u = ib.get(b, 9),
              C = ib.get(b, 13),
              ba = ib.get(b, 2),
              ta = ib.get(b, 6),
              M = ib.get(b, 10),
              I = ib.get(b, 14),
              ra = ib.get(b, 3),
              y = ib.get(b, 7),
              N = ib.get(b, 11);
            b = ib.get(b, 15);
            a[0] = c * w + k * D + t * B + q * F;
            a[1] = c * r + k * H + t * u + q * C;
            a[2] = c * ba + k * ta + t * M + q * I;
            a[3] = c * ra + k * y + t * N + q * b;
            a[4] = d * w + v * D + m * B + l * F;
            a[5] = d * r + v * H + m * u + l * C;
            a[6] = d * ba + v * ta + m * M + l * I;
            a[7] = d * ra + v * y + m * N + l * b;
            a[8] = f * w + p * D + n * B + G * F;
            a[9] = f * r + p * H + n * u + G * C;
            a[10] = f * ba + p * ta + n * M + G * I;
            a[11] = f * ra + p * y + n * N + G * b;
            a[12] = h * w + g * D + x * B + z * F;
            a[13] = h * r + g * H + x * u + z * C;
            a[14] = h * ba + g * ta + x * M + z * I;
            a[15] = h * ra + g * y + x * N + z * b;
          },
          createOrtho: function (a, b, c, d, f, h, k) {
            var v = 1 / (c - b),
              p = 1 / (f - d),
              g = 1 / (k - h);
            a[0] = 2 * v;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 2 * p;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = -2 * g;
            a[11] = 0;
            a[12] = -(b + c) * v;
            a[13] = -(d + f) * p;
            a[14] = -(h + k) * g;
            a[15] = 1;
          },
          identity: function (a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 1;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = 0;
            a[13] = 0;
            a[14] = 0;
            a[15] = 1;
          },
          get: function (a, b) {
            return a[b];
          },
          set: function (a, b, c) {
            return (a[b] = c);
          },
        },
        R = {},
        hd = function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        };
      g['lime.math.Rectangle'] = hd;
      hd.__name__ = 'lime.math.Rectangle';
      hd.prototype = {
        intersection: function (a, b) {
          null == b && (b = new hd());
          var c = this.x < a.x ? a.x : this.x,
            d =
              this.get_right() > a.get_right()
                ? a.get_right()
                : this.get_right();
          if (d <= c) return (b.setEmpty(), b);
          var f = this.y < a.y ? a.y : this.y;
          a =
            this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          if (a <= f) return (b.setEmpty(), b);
          b.x = c;
          b.y = f;
          b.width = d - c;
          b.height = a - f;
          return b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setEmpty: function () {
          this.x = this.y = this.width = this.height = 0;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        __toFlashRectangle: function () {
          return null;
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_right: function () {
          return this.x + this.width;
        },
        __class__: hd,
        __properties__: { get_right: 'get_right', get_bottom: 'get_bottom' },
      };
      var gf = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      g['lime.math.Vector2'] = gf;
      gf.__name__ = 'lime.math.Vector2';
      gf.prototype = {
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        __toFlashPoint: function () {
          return null;
        },
        __class__: gf,
      };
      var Ri = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c;
      };
      g['lime.math.Vector4'] = Ri;
      Ri.__name__ = 'lime.math.Vector4';
      Ri.prototype = { __class__: Ri };
      var oc = function () {};
      g['lime.media.AudioBuffer'] = oc;
      oc.__name__ = 'lime.media.AudioBuffer';
      oc.fromBytes = function (a) {
        if (null == a) return null;
        var b = new oc();
        b.set_src(
          new Howl({
            src: ['data:' + oc.__getCodec(a) + ';base64,' + Pd.encode(a)],
            html5: !0,
            preload: !1,
          }),
        );
        return b;
      };
      oc.fromFile = function (a) {
        if (null == a) return null;
        var b = new oc();
        b.__srcHowl = new Howl({ src: [a], preload: !1 });
        return b;
      };
      oc.fromFiles = function (a) {
        var b = new oc();
        b.__srcHowl = new Howl({ src: a, preload: !1 });
        return b;
      };
      oc.loadFromFile = function (a) {
        var b = new fd(),
          c = oc.fromFile(a);
        null != c
          ? null != c &&
            (c.__srcHowl.on('load', function () {
              b.complete(c);
            }),
            c.__srcHowl.on('loaderror', function (a, c) {
              b.error(c);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      oc.loadFromFiles = function (a) {
        var b = new fd(),
          c = oc.fromFiles(a);
        null != c
          ? (c.__srcHowl.on('load', function () {
              b.complete(c);
            }),
            c.__srcHowl.on('loaderror', function () {
              b.error(null);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      oc.__getCodec = function (a) {
        switch (a.getString(0, 4)) {
          case 'OggS':
            return 'audio/ogg';
          case 'RIFF':
            if ('WAVE' == a.getString(8, 4)) return 'audio/wav';
            var b = a.b[1],
              c = a.b[2];
            switch (a.b[0]) {
              case 73:
                if (68 == b && 51 == c) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
            break;
          case 'fLaC':
            return 'audio/flac';
          default:
            switch (((b = a.b[1]), (c = a.b[2]), a.b[0])) {
              case 73:
                if (68 == b && 51 == c) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
        }
        Na.error('Unsupported sound format', {
          fileName: 'lime/media/AudioBuffer.hx',
          lineNumber: 440,
          className: 'lime.media.AudioBuffer',
          methodName: '__getCodec',
        });
        return null;
      };
      oc.prototype = {
        set_src: function (a) {
          return (this.__srcHowl = a);
        },
        __class__: oc,
        __properties__: { set_src: 'set_src' },
      };
      var gj = function (a) {
        if ('custom' != a) {
          if (null == a || 'web' == a)
            try {
              ((window.AudioContext =
                window.AudioContext || window.webkitAudioContext),
                (this.web = new window.AudioContext()),
                (this.type = 'web'));
            } catch (b) {
              Qa.lastError = b;
            }
          null == this.web &&
            'web' != a &&
            ((this.html5 = new fj()), (this.type = 'html5'));
        } else this.type = 'custom';
      };
      g['lime.media.AudioContext'] = gj;
      gj.__name__ = 'lime.media.AudioContext';
      gj.prototype = { __class__: gj };
      var Ud = function () {};
      g['lime.media.AudioManager'] = Ud;
      Ud.__name__ = 'lime.media.AudioManager';
      Ud.init = function (a) {
        if (null == Ud.context) {
          if (
            null == a &&
            ((Ud.context = new gj()), (a = Ud.context), 'openal' == a.type)
          ) {
            var b = a.openal,
              c = b.openDevice();
            c = b.createContext(c);
            b.makeContextCurrent(c);
            b.processContext(c);
          }
          Ud.context = a;
        }
      };
      var Lj = function (a, b, c, d) {
        null == d && (d = 0);
        null == b && (b = 0);
        this.onComplete = new nc();
        this.buffer = a;
        this.offset = b;
        this.__backend = new Si(this);
        null != c && 0 != c && this.set_length(c);
        this.set_loops(d);
        null != a && this.init();
      };
      g['lime.media.AudioSource'] = Lj;
      Lj.__name__ = 'lime.media.AudioSource';
      Lj.prototype = {
        dispose: function () {
          this.__backend.dispose();
        },
        init: function () {
          this.__backend.init();
        },
        play: function () {
          this.__backend.play();
        },
        stop: function () {
          this.__backend.stop();
        },
        get_currentTime: function () {
          return this.__backend.getCurrentTime();
        },
        set_currentTime: function (a) {
          return this.__backend.setCurrentTime(a);
        },
        get_gain: function () {
          return this.__backend.getGain();
        },
        set_gain: function (a) {
          return this.__backend.setGain(a);
        },
        set_length: function (a) {
          return this.__backend.setLength(a);
        },
        set_loops: function (a) {
          return this.__backend.setLoops(a);
        },
        get_position: function () {
          return this.__backend.getPosition();
        },
        set_position: function (a) {
          return this.__backend.setPosition(a);
        },
        __class__: Lj,
        __properties__: {
          set_loops: 'set_loops',
          set_length: 'set_length',
          set_position: 'set_position',
          get_position: 'get_position',
          set_gain: 'set_gain',
          get_gain: 'get_gain',
          set_currentTime: 'set_currentTime',
          get_currentTime: 'get_currentTime',
        },
      };
      var fj = function () {};
      g['lime.media.HTML5AudioContext'] = fj;
      fj.__name__ = 'lime.media.HTML5AudioContext';
      fj.prototype = { __class__: fj };
      var Mj = function () {};
      g['lime.media.OpenALAudioContext'] = Mj;
      Mj.__name__ = 'lime.media.OpenALAudioContext';
      Mj.prototype = {
        createContext: function (a, b) {
          return ze.createContext(a, b);
        },
        makeContextCurrent: function (a) {
          return ze.makeContextCurrent(a);
        },
        openDevice: function (a) {
          return ze.openDevice(a);
        },
        processContext: function (a) {
          ze.processContext(a);
        },
        __class__: Mj,
      };
      var ze = function () {};
      g['lime.media.openal.ALC'] = ze;
      ze.__name__ = 'lime.media.openal.ALC';
      ze.createContext = function (a, b) {
        return null;
      };
      ze.makeContextCurrent = function (a) {
        return !1;
      };
      ze.openDevice = function (a) {
        return null;
      };
      ze.processContext = function (a) {};
      var xh = function () {};
      g['lime.net._IHTTPRequest'] = xh;
      xh.__name__ = 'lime.net._IHTTPRequest';
      xh.__isInterface__ = !0;
      xh.prototype = { __class__: xh };
      var Bd = function (a) {
        this.uri = a;
        this.contentType = 'application/x-www-form-urlencoded';
        this.followRedirects = !0;
        this.enableResponseHeaders = !1;
        this.formData = new Ia();
        this.headers = [];
        this.method = 'GET';
        this.timeout = 3e4;
        this.withCredentials = !1;
        this.manageCookies = !0;
        this.__backend = new Aa();
        this.__backend.init(this);
      };
      g['lime.net._HTTPRequest.AbstractHTTPRequest'] = Bd;
      Bd.__name__ = 'lime.net._HTTPRequest.AbstractHTTPRequest';
      Bd.__interfaces__ = [xh];
      Bd.prototype = { __class__: Bd };
      var Ae = function (a) {
        Bd.call(this, a);
      };
      g['lime.net._HTTPRequest_Bytes'] = Ae;
      Ae.__name__ = 'lime.net._HTTPRequest_Bytes';
      Ae.__super__ = Bd;
      Ae.prototype = u(Bd.prototype, {
        fromBytes: function (a) {
          return a;
        },
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new fd();
          a = this.__backend.loadData(this.uri);
          a.onProgress(l(c, c.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            c.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = b.fromBytes(a);
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: Ae,
      });
      var Cf = function (a) {
        Bd.call(this, a);
      };
      g['lime.net._HTTPRequest_String'] = Cf;
      Cf.__name__ = 'lime.net._HTTPRequest_String';
      Cf.__super__ = Bd;
      Cf.prototype = u(Bd.prototype, {
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new fd();
          a = this.__backend.loadText(this.uri);
          a.onProgress(l(c, c.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            c.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = a;
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: Cf,
      });
      var yf = function (a, b) {
        this.error = a;
        this.responseData = b;
      };
      g['lime.net._HTTPRequestErrorResponse'] = yf;
      yf.__name__ = 'lime.net._HTTPRequestErrorResponse';
      yf.prototype = { __class__: yf };
      var qh = function (a, b) {
        null == b && (b = '');
        this.name = a;
        this.value = b;
      };
      g['lime.net.HTTPRequestHeader'] = qh;
      qh.__name__ = 'lime.net.HTTPRequestHeader';
      qh.prototype = { __class__: qh };
      var yh = function (a) {
        Bd.call(this, a);
      };
      g['lime.net._HTTPRequest_lime_utils_Bytes'] = yh;
      yh.__name__ = 'lime.net._HTTPRequest_lime_utils_Bytes';
      yh.__super__ = Ae;
      yh.prototype = u(Ae.prototype, {
        fromBytes: function (a) {
          return Re.fromBytes(a);
        },
        __class__: yh,
      });
      var zh = function (a) {
        Bd.call(this, a);
      };
      g['lime.net._HTTPRequest_openfl_utils_ByteArray'] = zh;
      zh.__name__ = 'lime.net._HTTPRequest_openfl_utils_ByteArray';
      zh.__super__ = Ae;
      zh.prototype = u(Ae.prototype, {
        fromBytes: function (a) {
          return ld.fromBytes(a);
        },
        __class__: zh,
      });
      var ic = function () {};
      g['lime.system.Clipboard'] = ic;
      ic.__name__ = 'lime.system.Clipboard';
      ic.__properties__ = { set_text: 'set_text', get_text: 'get_text' };
      ic.__update = function () {
        var a = ic._text;
        ic._text = a;
        ic.__updated = !0;
        ic._text != a && ic.onUpdate.dispatch();
      };
      ic.get_text = function () {
        ic.__update();
        return ic._text;
      };
      ic.set_text = function (a) {
        var b = ic._text;
        ic._text = a;
        var c = A.current.__window;
        null != c && c.__backend.setClipboard(a);
        ic._text != b && ic.onUpdate.dispatch();
        return a;
      };
      var Ah = (F['lime.system.Endian'] = {
        __ename__: 'lime.system.Endian',
        __constructs__: null,
        LITTLE_ENDIAN: {
          _hx_name: 'LITTLE_ENDIAN',
          _hx_index: 0,
          __enum__: 'lime.system.Endian',
          toString: q,
        },
        BIG_ENDIAN: {
          _hx_name: 'BIG_ENDIAN',
          _hx_index: 1,
          __enum__: 'lime.system.Endian',
          toString: q,
        },
      });
      Ah.__constructs__ = [Ah.LITTLE_ENDIAN, Ah.BIG_ENDIAN];
      var Vd = function (a, b) {
        this.onUpdate = new Wi();
        this.type = a;
        this.id = b;
      };
      g['lime.system.Sensor'] = Vd;
      Vd.__name__ = 'lime.system.Sensor';
      Vd.registerSensor = function (a, b) {
        a = new Vd(a, b);
        Vd.sensors.push(a);
        return (Vd.sensorByID.h[b] = a);
      };
      Vd.prototype = { __class__: Vd };
      var Uj = (F['lime.system.SensorType'] = {
        __ename__: 'lime.system.SensorType',
        __constructs__: null,
        ACCELEROMETER: {
          _hx_name: 'ACCELEROMETER',
          _hx_index: 0,
          __enum__: 'lime.system.SensorType',
          toString: q,
        },
      });
      Uj.__constructs__ = [Uj.ACCELEROMETER];
      var pc = function () {};
      g['lime.system.System'] = pc;
      pc.__name__ = 'lime.system.System';
      pc.__properties__ = { get_endianness: 'get_endianness' };
      pc.embed = r.lime.embed = function (a, b, c, d, f) {
        if (
          null != pc.__applicationEntryPoint &&
          Object.prototype.hasOwnProperty.call(pc.__applicationEntryPoint.h, a)
        ) {
          var h =
            'string' == typeof b
              ? window.document.getElementById(b)
              : null == b
                ? window.document.createElement('div')
                : b;
          null == h
            ? window.console.log(
                '[lime.embed] ERROR: Cannot find target element: ' +
                  I.string(b),
              )
            : (null == c && (c = 0),
              null == d && (d = 0),
              null == f && (f = {}),
              Object.prototype.hasOwnProperty.call(f, 'background') &&
                'string' == typeof f.background &&
                ((b = M.replace(I.string(f.background), '#', '')),
                -1 < b.indexOf('0x')
                  ? (f.background = I.parseInt(b))
                  : (f.background = I.parseInt('0x' + b))),
              (f.element = h),
              (f.width = c),
              (f.height = d),
              pc.__applicationEntryPoint.h[a](f));
        }
      };
      pc.exit = function (a) {
        var b = A.current;
        if (null != b && (b.onExit.dispatch(a), b.onExit.canceled)) return;
        null != b && null != b.__window && b.__window.close();
      };
      pc.getTimer = function () {
        return window.performance.now() | 0;
      };
      pc.openURL = function (a, b) {
        null == b && (b = '_blank');
        null != a && window.open(a, b);
      };
      pc.__registerEntryPoint = function (a, b) {
        null == pc.__applicationEntryPoint &&
          (pc.__applicationEntryPoint = new Ia());
        pc.__applicationEntryPoint.h[a] = b;
      };
      pc.get_endianness = function () {
        if (null == pc.__endianness) {
          var a = new ArrayBuffer(2),
            b = null,
            c = null,
            d = null,
            f = null,
            h = null,
            k = (b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != a
                        ? null == h
                          ? new Uint8Array(a, 0)
                          : new Uint8Array(a, 0, h)
                        : null);
          h = f = d = c = b = null;
          b =
            null != b
              ? new Uint16Array(b)
              : null != c
                ? new Uint16Array(c)
                : null != d
                  ? new Uint16Array(d.__array)
                  : null != f
                    ? new Uint16Array(f)
                    : null != a
                      ? null == h
                        ? new Uint16Array(a, 0)
                        : new Uint16Array(a, 0, h)
                      : null;
          k[0] = 170;
          k[1] = 187;
          pc.__endianness = 43707 == b[0] ? Ah.BIG_ENDIAN : Ah.LITTLE_ENDIAN;
        }
        return pc.__endianness;
      };
      var fc = function (a) {
        this.onDisconnect = new nc();
        this.onButtonUp = new uh();
        this.onButtonDown = new uh();
        this.onAxisMove = new cj();
        this.id = a;
        this.connected = !0;
      };
      g['lime.ui.Gamepad'] = fc;
      fc.__name__ = 'lime.ui.Gamepad';
      fc.__connect = function (a) {
        if (!fc.devices.h.hasOwnProperty(a)) {
          var b = new fc(a);
          fc.devices.h[a] = b;
          fc.onConnect.dispatch(b);
        }
      };
      fc.__disconnect = function (a) {
        var b = fc.devices.h[a];
        null != b && (b.connected = !1);
        fc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      fc.prototype = { __class__: fc };
      var bc = function (a) {
        this.onHatMove = new aj();
        this.onDisconnect = new nc();
        this.onButtonUp = new Ge();
        this.onButtonDown = new Ge();
        this.onAxisMove = new $i();
        this.id = a;
        this.connected = !0;
      };
      g['lime.ui.Joystick'] = bc;
      bc.__name__ = 'lime.ui.Joystick';
      bc.__connect = function (a) {
        if (!bc.devices.h.hasOwnProperty(a)) {
          var b = new bc(a);
          bc.devices.h[a] = b;
          bc.onConnect.dispatch(b);
        }
      };
      bc.__disconnect = function (a) {
        var b = bc.devices.h[a];
        null != b && (b.connected = !1);
        bc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      bc.__getDeviceData = function () {
        var a = null;
        try {
          a = navigator.getGamepads
            ? navigator.getGamepads()
            : navigator.webkitGetGamepads
              ? navigator.webkitGetGamepads()
              : null;
        } catch (b) {
          Qa.lastError = b;
        }
        return a;
      };
      bc.prototype = { __class__: bc };
      var Wa = {
          __properties__: {
            get_shiftKey: 'get_shiftKey',
            get_metaKey: 'get_metaKey',
            get_ctrlKey: 'get_ctrlKey',
            get_altKey: 'get_altKey',
          },
          get_altKey: function (a) {
            return 0 >= (a & 256) ? 0 < (a & 512) : !0;
          },
          get_ctrlKey: function (a) {
            return 0 >= (a & 64) ? 0 < (a & 128) : !0;
          },
          get_metaKey: function (a) {
            return 0 >= (a & 1024) ? 0 < (a & 2048) : !0;
          },
          get_shiftKey: function (a) {
            return 0 >= (a & 1) ? 0 < (a & 2) : !0;
          },
        },
        Qb = (F['lime.ui.MouseCursor'] = {
          __ename__: 'lime.ui.MouseCursor',
          __constructs__: null,
          ARROW: {
            _hx_name: 'ARROW',
            _hx_index: 0,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          CROSSHAIR: {
            _hx_name: 'CROSSHAIR',
            _hx_index: 1,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          DEFAULT: {
            _hx_name: 'DEFAULT',
            _hx_index: 2,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          MOVE: {
            _hx_name: 'MOVE',
            _hx_index: 3,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          POINTER: {
            _hx_name: 'POINTER',
            _hx_index: 4,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_NESW: {
            _hx_name: 'RESIZE_NESW',
            _hx_index: 5,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_NS: {
            _hx_name: 'RESIZE_NS',
            _hx_index: 6,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_NWSE: {
            _hx_name: 'RESIZE_NWSE',
            _hx_index: 7,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          RESIZE_WE: {
            _hx_name: 'RESIZE_WE',
            _hx_index: 8,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          TEXT: {
            _hx_name: 'TEXT',
            _hx_index: 9,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          WAIT: {
            _hx_name: 'WAIT',
            _hx_index: 10,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          WAIT_ARROW: {
            _hx_name: 'WAIT_ARROW',
            _hx_index: 11,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
          CUSTOM: {
            _hx_name: 'CUSTOM',
            _hx_index: 12,
            __enum__: 'lime.ui.MouseCursor',
            toString: q,
          },
        });
      Qb.__constructs__ = [
        Qb.ARROW,
        Qb.CROSSHAIR,
        Qb.DEFAULT,
        Qb.MOVE,
        Qb.POINTER,
        Qb.RESIZE_NESW,
        Qb.RESIZE_NS,
        Qb.RESIZE_NWSE,
        Qb.RESIZE_WE,
        Qb.TEXT,
        Qb.WAIT,
        Qb.WAIT_ARROW,
        Qb.CUSTOM,
      ];
      var ye = (F['lime.ui.MouseWheelMode'] = {
        __ename__: 'lime.ui.MouseWheelMode',
        __constructs__: null,
        PIXELS: {
          _hx_name: 'PIXELS',
          _hx_index: 0,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
        LINES: {
          _hx_name: 'LINES',
          _hx_index: 1,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
        PAGES: {
          _hx_name: 'PAGES',
          _hx_index: 2,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 3,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: q,
        },
      });
      ye.__constructs__ = [ye.PIXELS, ye.LINES, ye.PAGES, ye.UNKNOWN];
      var Tb = function (a, b, c, d, f, h, k) {
        this.x = a;
        this.y = b;
        this.id = c;
        this.dx = d;
        this.dy = f;
        this.pressure = h;
        this.device = k;
      };
      g['lime.ui.Touch'] = Tb;
      Tb.__name__ = 'lime.ui.Touch';
      Tb.prototype = { __class__: Tb };
      var Df = function (a, b) {
        this.clickCount = 0;
        this.onTextInput = new sh();
        this.onTextEdit = new bj();
        this.onRestore = new nc();
        this.onResize = new rh();
        this.onRenderContextRestored = new th();
        this.onRenderContextLost = new nc();
        this.onRender = new th();
        this.onMove = new pg();
        this.onMouseWheel = new Zi();
        this.onMouseUp = new Xi();
        this.onMouseMoveRelative = new pg();
        this.onMouseMove = new pg();
        this.onMouseDown = new Yi();
        this.onMinimize = new nc();
        this.onLeave = new nc();
        this.onKeyUp = new vh();
        this.onKeyDown = new vh();
        this.onFullscreen = new nc();
        this.onFocusOut = new nc();
        this.onFocusIn = new nc();
        this.onExpose = new nc();
        this.onEnter = new nc();
        this.onDropFile = new sh();
        this.onDeactivate = new nc();
        this.onClose = new nc();
        this.onActivate = new nc();
        this.application = a;
        this.__attributes = null != b ? b : {};
        Object.prototype.hasOwnProperty.call(this.__attributes, 'parameters') &&
          (this.parameters = this.__attributes.parameters);
        this.__height = this.__width = 0;
        this.__fullscreen = !1;
        this.__scale = 1;
        this.__y = this.__x = 0;
        this.__title = Object.prototype.hasOwnProperty.call(
          this.__attributes,
          'title',
        )
          ? this.__attributes.title
          : '';
        this.id = -1;
        this.__backend = new Pa(this);
      };
      g['lime.ui.Window'] = Df;
      Df.__name__ = 'lime.ui.Window';
      Df.prototype = {
        close: function () {
          this.__backend.close();
        },
        set_cursor: function (a) {
          return this.__backend.setCursor(a);
        },
        setTextInputRect: function (a) {
          return this.__backend.setTextInputRect(a);
        },
        __class__: Df,
        __properties__: { set_cursor: 'set_cursor' },
      };
      var Cd = function () {
        this.data = new Ia();
        this.paths = [];
      };
      g['lime.utils.AssetBundle'] = Cd;
      Cd.__name__ = 'lime.utils.AssetBundle';
      Cd.fromBytes = function (a) {
        a = new ph(a);
        return Cd.__extractBundle(a);
      };
      Cd.loadFromBytes = function (a) {
        return dc.withValue(Cd.fromBytes(a));
      };
      Cd.loadFromFile = function (a) {
        return Re.loadFromFile(a).then(Cd.loadFromBytes);
      };
      Cd.__extractBundle = function (a) {
        var b = og.readZip(a);
        a = new Cd();
        for (b = b.h; null != b; ) {
          var c = b.item;
          b = b.next;
          if (c.compressed) {
            var d = a.data,
              f = c.fileName,
              h = Re.decompress(c.data, Bh.DEFLATE);
            d.h[f] = h;
          } else a.data.h[c.fileName] = c.data;
          a.paths.push(c.fileName);
        }
        return a;
      };
      Cd.prototype = { __class__: Cd };
      var hj = function () {
        this.enabled = !0;
        this.audio = new Ia();
        this.font = new Ia();
        this.image = new Ia();
        this.version = 226277;
      };
      g['lime.utils.AssetCache'] = hj;
      hj.__name__ = 'lime.utils.AssetCache';
      hj.prototype = {
        exists: function (a, b) {
          return (('IMAGE' == b || null == b) &&
            Object.prototype.hasOwnProperty.call(this.image.h, a)) ||
            (('FONT' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.font.h, a)) ||
            (('SOUND' == b || 'MUSIC' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.audio.h, a))
            ? !0
            : !1;
        },
        set: function (a, b, c) {
          switch (b) {
            case 'FONT':
              this.font.h[a] = c;
              break;
            case 'IMAGE':
              if (!(c instanceof Mb))
                throw W.thrown(
                  'Cannot cache non-Image asset: ' + I.string(c) + ' as Image',
                );
              this.image.h[a] = c;
              break;
            case 'MUSIC':
            case 'SOUND':
              if (!(c instanceof oc))
                throw W.thrown(
                  'Cannot cache non-AudioBuffer asset: ' +
                    I.string(c) +
                    ' as AudioBuffer',
                );
              this.audio.h[a] = c;
              break;
            default:
              throw W.thrown(b + ' assets are not cachable');
          }
        },
        clear: function (a) {
          if (null == a)
            ((this.audio = new Ia()),
              (this.font = new Ia()),
              (this.image = new Ia()));
          else {
            var b = this.audio.h;
            b = Object.keys(b);
            for (var c = b.length, d = 0; d < c; ) {
              var f = b[d++];
              if (M.startsWith(f, a)) {
                var h = this.audio;
                Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f];
              }
            }
            b = this.font.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c; )
              ((f = b[d++]),
                M.startsWith(f, a) &&
                  ((h = this.font),
                  Object.prototype.hasOwnProperty.call(h.h, f) &&
                    delete h.h[f]));
            b = this.image.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c; )
              ((f = b[d++]),
                M.startsWith(f, a) &&
                  ((h = this.image),
                  Object.prototype.hasOwnProperty.call(h.h, f) &&
                    delete h.h[f]));
          }
        },
        __class__: hj,
      };
      var Ib = function () {
        this.types = new Ia();
        this.sizes = new Ia();
        this.preload = new Ia();
        this.paths = new Ia();
        this.pathGroups = new Ia();
        this.classTypes = new Ia();
        this.cachedText = new Ia();
        this.cachedImages = new Ia();
        this.cachedFonts = new Ia();
        this.cachedBytes = new Ia();
        this.cachedAudioBuffers = new Ia();
        this.onChange = new nc();
        this.bytesTotal = this.bytesLoaded = 0;
      };
      g['lime.utils.AssetLibrary'] = Ib;
      Ib.__name__ = 'lime.utils.AssetLibrary';
      Ib.fromBundle = function (a) {
        if (Object.prototype.hasOwnProperty.call(a.data.h, 'library.json')) {
          var b = Wc.fromBytes(a.data.h['library.json']);
          if (null != b) {
            if (null == b.libraryType) var c = new Ib();
            else if (((c = g[b.libraryType]), null != c))
              c = w.createInstance(c, b.libraryArgs);
            else
              return (
                Na.warn('Could not find library type: ' + b.libraryType, {
                  fileName: 'lime/utils/AssetLibrary.hx',
                  lineNumber: 122,
                  className: 'lime.utils.AssetLibrary',
                  methodName: 'fromBundle',
                }),
                null
              );
            c.__fromBundle(a, b);
            return c;
          }
        } else return ((c = new Ib()), c.__fromBundle(a), c);
        return null;
      };
      Ib.fromManifest = function (a) {
        if (null == a) return null;
        if (null == a.libraryType) var b = new Ib();
        else if (((b = g[a.libraryType]), null != b))
          b = w.createInstance(b, a.libraryArgs);
        else
          return (
            Na.warn('Could not find library type: ' + a.libraryType, {
              fileName: 'lime/utils/AssetLibrary.hx',
              lineNumber: 160,
              className: 'lime.utils.AssetLibrary',
              methodName: 'fromManifest',
            }),
            null
          );
        b.__fromManifest(a);
        return b;
      };
      Ib.prototype = {
        exists: function (a, b) {
          b = null != b ? Ua.__cast(b, String) : null;
          a = this.types.h[a];
          return null == a ||
            (a != b &&
              (('SOUND' != b && 'MUSIC' != b) ||
                ('MUSIC' != a && 'SOUND' != a)) &&
              'BINARY' != b &&
              null != b &&
              ('BINARY' != a || 'TEXT' != b))
            ? !1
            : !0;
        },
        getAsset: function (a, b) {
          switch (b) {
            case 'BINARY':
              return this.getBytes(a);
            case 'FONT':
              return this.getFont(a);
            case 'IMAGE':
              return this.getImage(a);
            case 'MUSIC':
            case 'SOUND':
              return this.getAudioBuffer(a);
            case 'TEMPLATE':
              throw W.thrown('Not sure how to get template: ' + a);
            case 'TEXT':
              return this.getText(a);
            default:
              throw W.thrown('Unknown asset type: ' + b);
          }
        },
        getAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? this.cachedAudioBuffers.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? oc.fromBytes(
                  Ua.__cast(w.createInstance(this.classTypes.h[a], []), tb),
                )
              : oc.fromFile(this.getPath(a));
        },
        getBytes: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
            return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = Re.ofString(this.cachedText.h[a]);
            return (this.cachedBytes.h[a] = b);
          }
          return Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? Ua.__cast(w.createInstance(this.classTypes.h[a], []), tb)
            : Re.fromFile(this.getPath(a));
        },
        getFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? this.cachedFonts.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? Ua.__cast(w.createInstance(this.classTypes.h[a], []), bb)
              : bb.fromFile(this.getPath(a));
        },
        getImage: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? this.cachedImages.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? Ua.__cast(w.createInstance(this.classTypes.h[a], []), Mb)
              : Mb.fromFile(this.getPath(a));
        },
        getPath: function (a) {
          return Object.prototype.hasOwnProperty.call(this.paths.h, a)
            ? this.paths.h[a]
            : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
              ? this.pathGroups.h[a][0]
              : null;
        },
        getText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return this.cachedText.h[a];
          a = this.getBytes(a);
          return null == a ? null : a.getString(0, a.length);
        },
        isLocal: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a))
            return !0;
          b = Ua.__cast(b, String);
          if (null == b)
            return Object.prototype.hasOwnProperty.call(
              this.cachedBytes.h,
              a,
            ) ||
              Object.prototype.hasOwnProperty.call(this.cachedText.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a)
              ? !0
              : Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
          switch (b) {
            case 'FONT':
              return Object.prototype.hasOwnProperty.call(
                this.cachedFonts.h,
                a,
              );
            case 'IMAGE':
              return Object.prototype.hasOwnProperty.call(
                this.cachedImages.h,
                a,
              );
            case 'MUSIC':
            case 'SOUND':
              return Object.prototype.hasOwnProperty.call(
                this.cachedAudioBuffers.h,
                a,
              );
            default:
              return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? !0
                : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
          }
        },
        load: function () {
          if (this.loaded) return dc.withValue(this);
          if (null == this.promise) {
            this.promise = new fd();
            this.bytesLoadedCache = new Ia();
            this.assetsLoaded = 0;
            this.assetsTotal = 1;
            for (
              var a = Object.keys(this.preload.h), b = a.length, c = 0;
              c < b;

            ) {
              var d = a[c++];
              if (this.preload.h[d]) {
                Na.verbose(
                  'Preloading asset: ' + d + ' [' + this.types.h[d] + ']',
                  {
                    fileName: 'lime/utils/AssetLibrary.hx',
                    lineNumber: 408,
                    className: 'lime.utils.AssetLibrary',
                    methodName: 'load',
                  },
                );
                var f = this.types.h[d];
                if (null != f)
                  switch (f) {
                    case 'BINARY':
                      this.assetsTotal++;
                      f = this.loadBytes(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadBytes_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'FONT':
                      this.assetsTotal++;
                      f = this.loadFont(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadFont_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'IMAGE':
                      this.assetsTotal++;
                      f = this.loadImage(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadImage_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'MUSIC':
                    case 'SOUND':
                      this.assetsTotal++;
                      f = this.loadAudioBuffer(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadAudioBuffer_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadAudioBuffer_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'TEXT':
                      (this.assetsTotal++,
                        (f = this.loadText(d)),
                        f.onProgress(
                          (function (a, b) {
                            return function (c, d) {
                              b[0].load_onProgress(a[0], c, d);
                            };
                          })([d], [this]),
                        ),
                        f.onError(
                          (function (a, b) {
                            return function (c) {
                              b[0].load_onError(a[0], c);
                            };
                          })([d], [this]),
                        ),
                        f.onComplete(
                          (function (a, b) {
                            return function (c) {
                              b[0].loadText_onComplete(a[0], c);
                            };
                          })([d], [this]),
                        ));
                  }
              }
            }
            this.__assetLoaded(null);
          }
          return this.promise.future;
        },
        loadAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? dc.withValue(this.cachedAudioBuffers.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? dc.withValue(
                  oc.fromBytes(
                    Ua.__cast(w.createInstance(this.classTypes.h[a], []), tb),
                  ),
                )
              : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
                ? oc.loadFromFiles(this.pathGroups.h[a])
                : oc.loadFromFile(this.paths.h[a]);
        },
        loadBytes: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
            ? dc.withValue(this.cachedBytes.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? dc.withValue(w.createInstance(this.classTypes.h[a], []))
              : Re.loadFromFile(this.getPath(a));
        },
        loadFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? dc.withValue(this.cachedFonts.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? ((a = w.createInstance(this.classTypes.h[a], [])),
                a.__loadFromName(a.name))
              : bb.loadFromName(this.getPath(a));
        },
        loadImage: function (a) {
          var b = this;
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? dc.withValue(this.cachedImages.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? dc.withValue(w.createInstance(this.classTypes.h[a], []))
              : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? Mb.loadFromBytes(this.cachedBytes.h[a]).then(function (c) {
                    var d = b.cachedBytes;
                    Object.prototype.hasOwnProperty.call(d.h, a) &&
                      delete d.h[a];
                    b.cachedImages.h[a] = c;
                    return dc.withValue(c);
                  })
                : Mb.loadFromFile(this.getPath(a));
        },
        loadText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return dc.withValue(this.cachedText.h[a]);
          if (
            Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ||
            Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
          ) {
            var b = this.getBytes(a);
            if (null == b) return dc.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return dc.withValue(b);
          }
          return new Cf().load(this.getPath(a));
        },
        unload: function () {
          this.cachedBytes.h = Object.create(null);
          this.cachedFonts.h = Object.create(null);
          this.cachedImages.h = Object.create(null);
          this.cachedAudioBuffers.h = Object.create(null);
          this.cachedText.h = Object.create(null);
        },
        __assetLoaded: function (a) {
          this.assetsLoaded++;
          null != a &&
            Na.verbose(
              'Loaded asset: ' +
                a +
                ' [' +
                this.types.h[a] +
                '] (' +
                (this.assetsLoaded - 1) +
                '/' +
                (this.assetsTotal - 1) +
                ')',
              {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 637,
                className: 'lime.utils.AssetLibrary',
                methodName: '__assetLoaded',
              },
            );
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a)
              ? this.sizes.h[a]
              : 0;
            if (
              Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
            ) {
              var c = this.bytesLoadedCache.h[a];
              c < b && (this.bytesLoaded += b - c);
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b;
          }
          this.assetsLoaded < this.assetsTotal
            ? this.promise.progress(this.bytesLoaded, this.bytesTotal)
            : ((this.loaded = !0),
              this.promise.progress(this.bytesTotal, this.bytesTotal),
              this.promise.complete(this));
        },
        __cacheBreak: function (a) {
          return Ca.__cacheBreak(a);
        },
        __fromBundle: function (a, b) {
          if (null != b) {
            var c = 0;
            for (b = b.assets; c < b.length; ) {
              var d = b[c];
              ++c;
              var f = Object.prototype.hasOwnProperty.call(d, 'id')
                ? d.id
                : d.path;
              var h = a.data.h[d.path];
              if (Object.prototype.hasOwnProperty.call(d, 'type')) {
                var k = d.type;
                'TEXT' == k
                  ? (this.cachedText.h[f] = null != h ? I.string(h) : null)
                  : (this.cachedBytes.h[f] = h);
                this.types.h[f] = d.type;
              } else
                ((this.cachedBytes.h[f] = h), (this.types.h[f] = 'BINARY'));
            }
          } else
            for (c = 0, b = a.paths; c < b.length; )
              ((f = b[c]),
                ++c,
                (this.cachedBytes.h[f] = a.data.h[f]),
                (this.types.h[f] = 'BINARY'));
        },
        __fromManifest: function (a) {
          var b = 2 <= a.version,
            c = a.rootPath;
          null == c && (c = '');
          '' != c && (c += '/');
          for (var d = 0, f = a.assets; d < f.length; ) {
            var h = f[d];
            ++d;
            var k =
              b && Object.prototype.hasOwnProperty.call(h, 'size')
                ? h.size
                : 100;
            var v = Object.prototype.hasOwnProperty.call(h, 'id')
              ? h.id
              : h.path;
            if (Object.prototype.hasOwnProperty.call(h, 'path')) {
              var p = this.paths;
              var t = this.__cacheBreak(
                this.__resolvePath(c + I.string(ya.field(h, 'path'))),
              );
              p.h[v] = t;
            }
            if (Object.prototype.hasOwnProperty.call(h, 'pathGroup')) {
              p = ya.field(h, 'pathGroup');
              t = 0;
              for (var n = p.length; t < n; ) {
                var m = t++;
                p[m] = this.__cacheBreak(this.__resolvePath(c + p[m]));
              }
              this.pathGroups.h[v] = p;
            }
            this.sizes.h[v] = k;
            this.types.h[v] = h.type;
            Object.prototype.hasOwnProperty.call(h, 'preload') &&
              (this.preload.h[v] = ya.field(h, 'preload'));
            Object.prototype.hasOwnProperty.call(h, 'className') &&
              ((k = ya.field(h, 'className')),
              (k = g[k]),
              (this.classTypes.h[v] = k));
          }
          d = this.bytesTotal = 0;
          for (f = a.assets; d < f.length; )
            ((h = f[d]),
              ++d,
              (v = Object.prototype.hasOwnProperty.call(h, 'id')
                ? h.id
                : h.path),
              Object.prototype.hasOwnProperty.call(this.preload.h, v) &&
                this.preload.h[v] &&
                Object.prototype.hasOwnProperty.call(this.sizes.h, v) &&
                (this.bytesTotal += this.sizes.h[v]));
        },
        __resolvePath: function (a) {
          a = M.replace(a, '\\', '/');
          var b = a.indexOf(':');
          M.startsWith(a, 'http') && 0 < b
            ? ((b += 3),
              (a =
                O.substr(a, 0, b) + M.replace(O.substr(a, b, null), '//', '/')))
            : (a = M.replace(a, '//', '/'));
          if (-1 < a.indexOf('./')) {
            a = a.split('/');
            b = [];
            for (var c = 0, d = a.length; c < d; ) {
              var f = c++;
              '..' == a[f]
                ? 0 == f || '..' == b[f - 1]
                  ? b.push('..')
                  : b.pop()
                : '.' == a[f]
                  ? 0 == f && b.push('.')
                  : b.push(a[f]);
            }
            a = b.join('/');
          }
          return a;
        },
        loadAudioBuffer_onComplete: function (a, b) {
          this.cachedAudioBuffers.h[a] = b;
          if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
            for (
              var c = this.pathGroups.h[a],
                d = Object.keys(this.pathGroups.h),
                f = d.length,
                h = 0;
              h < f;

            ) {
              var k = d[h++];
              if (k != a)
                for (var g = 0; g < c.length; ) {
                  var p = c[g];
                  ++g;
                  if (-1 < this.pathGroups.h[k].indexOf(p)) {
                    this.cachedAudioBuffers.h[k] = b;
                    break;
                  }
                }
            }
          this.__assetLoaded(a);
        },
        loadAudioBuffer_onError: function (a, b) {
          null != b && '' != b
            ? Na.warn('Could not load "' + a + '": ' + I.string(b), {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 883,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              })
            : Na.warn('Could not load "' + a + '"', {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 887,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              });
          this.loadAudioBuffer_onComplete(a, new oc());
        },
        loadBytes_onComplete: function (a, b) {
          this.cachedBytes.h[a] = b;
          this.__assetLoaded(a);
        },
        loadFont_onComplete: function (a, b) {
          this.cachedFonts.h[a] = b;
          this.__assetLoaded(a);
        },
        loadImage_onComplete: function (a, b) {
          this.cachedImages.h[a] = b;
          this.__assetLoaded(a);
        },
        loadText_onComplete: function (a, b) {
          this.cachedText.h[a] = b;
          this.__assetLoaded(a);
        },
        load_onError: function (a, b) {
          null != b && '' != b
            ? this.promise.error(
                'Error loading asset "' + a + '": ' + I.string(b),
              )
            : this.promise.error('Error loading asset "' + a + '"');
        },
        load_onProgress: function (a, b, c) {
          if (0 < b) {
            var d = this.sizes.h[a];
            0 < c
              ? ((b /= c), 1 < b && (b = 1), (b = Math.floor(b * d)))
              : b > d && (b = d);
            Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
              ? ((d = this.bytesLoadedCache.h[a]),
                b != d && (this.bytesLoaded += b - d))
              : (this.bytesLoaded += b);
            this.bytesLoadedCache.h[a] = b;
            this.promise.progress(this.bytesLoaded, this.bytesTotal);
          }
        },
        __class__: Ib,
      };
      var Wc = function () {
        this.assets = [];
        this.libraryArgs = [];
        this.version = 2;
      };
      g['lime.utils.AssetManifest'] = Wc;
      Wc.__name__ = 'lime.utils.AssetManifest';
      Wc.fromBytes = function (a, b) {
        return null != a ? Wc.parse(a.getString(0, a.length), b) : null;
      };
      Wc.loadFromFile = function (a, b) {
        a = Wc.__resolvePath(a);
        b = Wc.__resolveRootPath(b, a);
        return null == a
          ? null
          : Re.loadFromFile(a).then(function (a) {
              return dc.withValue(Wc.fromBytes(a, b));
            });
      };
      Wc.parse = function (a, b) {
        if (null == a || '' == a) return null;
        a = JSON.parse(a);
        var c = new Wc();
        Object.prototype.hasOwnProperty.call(a, 'name') && (c.name = a.name);
        Object.prototype.hasOwnProperty.call(a, 'libraryType') &&
          (c.libraryType = a.libraryType);
        Object.prototype.hasOwnProperty.call(a, 'libraryArgs') &&
          (c.libraryArgs = a.libraryArgs);
        if (Object.prototype.hasOwnProperty.call(a, 'assets')) {
          var d = a.assets;
          Object.prototype.hasOwnProperty.call(a, 'version') && 2 >= a.version
            ? (c.assets = Rc.run(d))
            : (c.assets = d);
        }
        Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          (c.rootPath = a.rootPath);
        null != b &&
          '' != b &&
          (c.rootPath =
            null == c.rootPath || '' == c.rootPath ? b : b + '/' + c.rootPath);
        return c;
      };
      Wc.__resolvePath = function (a) {
        if (null == a) return null;
        var b = a.indexOf('?');
        var c = -1 < b ? O.substr(a, 0, b) : a;
        for (c = M.replace(c, '\\', '/'); M.endsWith(c, '/'); )
          c = O.substr(c, 0, c.length - 1);
        return M.endsWith(c, '.bundle')
          ? -1 < b
            ? c + '/library.json' + O.substr(a, b, null)
            : c + '/library.json'
          : a;
      };
      Wc.__resolveRootPath = function (a, b) {
        if (null != a) return a;
        a = b.indexOf('?');
        a = -1 < a ? O.substr(b, 0, a) : b;
        for (a = M.replace(a, '\\', '/'); M.endsWith(a, '/'); ) {
          if ('/' == a) return a;
          a = O.substr(a, 0, a.length - 1);
        }
        return M.endsWith(a, '.bundle') ? a : md.directory(a);
      };
      Wc.prototype = { __class__: Wc };
      var Ca = function () {};
      g['lime.utils.Assets'] = Ca;
      Ca.__name__ = 'lime.utils.Assets';
      Ca.exists = function (a, b) {
        null == b && (b = 'BINARY');
        var c = a.indexOf(':'),
          d = a.substring(0, c);
        a = a.substring(c + 1);
        d = Ca.getLibrary(d);
        return null != d ? d.exists(a, b) : !1;
      };
      Ca.getAsset = function (a, b, c) {
        if (c && Ca.cache.enabled)
          switch (b) {
            case 'FONT':
              var d = Ca.cache.font.h[a];
              if (null != d) return d;
              break;
            case 'IMAGE':
              d = Ca.cache.image.h[a];
              if (Ca.isValidImage(d)) return d;
              break;
            case 'MUSIC':
            case 'SOUND':
              d = Ca.cache.audio.h[a];
              if (Ca.isValidAudio(d)) return d;
              break;
            case 'TEMPLATE':
              throw W.thrown('Not sure how to get template: ' + a);
            case 'BINARY':
            case 'TEXT':
              c = !1;
              break;
            default:
              return null;
          }
        var f = a.indexOf(':');
        d = a.substring(0, f);
        f = a.substring(f + 1);
        var h = Ca.getLibrary(d);
        if (null != h)
          if (h.exists(f, b)) {
            if (h.isLocal(f, b))
              return (
                (d = h.getAsset(f, b)),
                c && Ca.cache.enabled && Ca.cache.set(a, b, d),
                d
              );
            Na.error(b + ' asset "' + a + '" exists, but only asynchronously', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 133,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
          } else
            Na.error('There is no ' + b + ' asset with an ID of "' + a + '"', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 138,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
        else
          Na.error(Ca.__libraryNotFound(d), {
            fileName: 'lime/utils/Assets.hx',
            lineNumber: 143,
            className: 'lime.utils.Assets',
            methodName: 'getAsset',
          });
        return null;
      };
      Ca.getBytes = function (a) {
        return Ca.getAsset(a, 'BINARY', !1);
      };
      Ca.getFont = function (a, b) {
        null == b && (b = !0);
        return Ca.getAsset(a, 'FONT', b);
      };
      Ca.getLibrary = function (a) {
        if (null == a || '' == a) a = 'default';
        return Ca.libraries.h[a];
      };
      Ca.getText = function (a) {
        return Ca.getAsset(a, 'TEXT', !1);
      };
      Ca.isLocal = function (a, b, c) {
        null == c && (c = !0);
        if (c && Ca.cache.enabled && Ca.cache.exists(a, b)) return !0;
        var d = a.indexOf(':');
        c = a.substring(0, d);
        a = a.substring(d + 1);
        c = Ca.getLibrary(c);
        return null != c ? c.isLocal(a, b) : !1;
      };
      Ca.isValidAudio = function (a) {
        return null != a;
      };
      Ca.isValidImage = function (a) {
        return null != a ? null != a.buffer : !1;
      };
      Ca.loadLibrary = function (a) {
        var b = new fd(),
          c = Ca.getLibrary(a);
        if (null != c) return c.load();
        c = a;
        var d = null;
        if (Object.prototype.hasOwnProperty.call(Ca.bundlePaths.h, a))
          Cd.loadFromFile(Ca.bundlePaths.h[a])
            .onComplete(function (c) {
              null == c
                ? b.error('Cannot load bundle for library "' + a + '"')
                : ((c = Ib.fromBundle(c)),
                  null == c
                    ? b.error('Cannot open library "' + a + '"')
                    : ((Ca.libraries.h[a] = c),
                      c.onChange.add(((H = Ca.onChange), l(H, H.dispatch))),
                      b.completeWith(c.load())));
            })
            .onError(function (c) {
              b.error('There is no asset library with an ID of "' + a + '"');
            });
        else
          (Object.prototype.hasOwnProperty.call(Ca.libraryPaths.h, a)
            ? ((c = Ca.libraryPaths.h[a]), (d = md.directory(c)))
            : (M.endsWith(c, '.bundle')
                ? ((d = c), (c += '/library.json'))
                : (d = md.directory(c)),
              (c = Ca.__cacheBreak(c))),
            Wc.loadFromFile(c, d)
              .onComplete(function (c) {
                null == c
                  ? b.error(
                      'Cannot parse asset manifest for library "' + a + '"',
                    )
                  : ((c = Ib.fromManifest(c)),
                    null == c
                      ? b.error('Cannot open library "' + a + '"')
                      : ((Ca.libraries.h[a] = c),
                        c.onChange.add(((H = Ca.onChange), l(H, H.dispatch))),
                        b.completeWith(c.load())));
              })
              .onError(function (c) {
                b.error('There is no asset library with an ID of "' + a + '"');
              }));
        return b.future;
      };
      Ca.registerLibrary = function (a, b) {
        if (null == a || '' == a) a = 'default';
        if (Object.prototype.hasOwnProperty.call(Ca.libraries.h, a)) {
          if (Ca.libraries.h[a] == b) return;
          Ca.unloadLibrary(a);
        }
        null != b && b.onChange.add(Ca.library_onChange);
        Ca.libraries.h[a] = b;
      };
      Ca.unloadLibrary = function (a) {
        Ca.removeLibrary(a, !0);
      };
      Ca.removeLibrary = function (a, b) {
        null == b && (b = !0);
        if (null == a || '' == a) a = 'default';
        var c = Ca.libraries.h[a];
        null != c &&
          (Ca.cache.clear(a + ':'),
          c.onChange.remove(Ca.library_onChange),
          b && c.unload());
        b = Ca.libraries;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
      };
      Ca.__cacheBreak = function (a) {
        0 < Ca.cache.version &&
          (a =
            -1 < a.indexOf('?')
              ? a + ('&' + Ca.cache.version)
              : a + ('?' + Ca.cache.version));
        return a;
      };
      Ca.__libraryNotFound = function (a) {
        if (null == a || '' == a) a = 'default';
        return null == A.current ||
          null == A.current.__preloader ||
          A.current.__preloader.complete
          ? 'There is no asset library named "' + a + '"'
          : 'There is no asset library named "' +
              a +
              '", or it is not yet preloaded';
      };
      Ca.library_onChange = function () {
        Ca.cache.clear();
        Ca.onChange.dispatch();
      };
      var ij = function (a, b) {
        this.bytes = a;
        this.offset = b;
      };
      g['lime.utils.BytePointerData'] = ij;
      ij.__name__ = 'lime.utils.BytePointerData';
      ij.prototype = { __class__: ij };
      var Re = {
          _new: function (a, b) {
            return new tb(b);
          },
          decompress: function (a, b) {
            switch (b._hx_index) {
              case 0:
                return Ej.decompress(a);
              case 1:
                return Fj.decompress(a);
              case 2:
                return Hj.decompress(a);
              case 3:
                return Ij.decompress(a);
            }
          },
          fromBytes: function (a) {
            return null == a ? null : Re._new(a.length, a.b.bufferValue);
          },
          fromFile: function (a) {
            return null;
          },
          loadFromFile: function (a) {
            return new yh().load(a);
          },
          ofString: function (a) {
            a = tb.ofString(a);
            return Re._new(a.length, a.b.bufferValue);
          },
        },
        Bh = (F['lime.utils.CompressionAlgorithm'] = {
          __ename__: 'lime.utils.CompressionAlgorithm',
          __constructs__: null,
          DEFLATE: {
            _hx_name: 'DEFLATE',
            _hx_index: 0,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
          GZIP: {
            _hx_name: 'GZIP',
            _hx_index: 1,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
          LZMA: {
            _hx_name: 'LZMA',
            _hx_index: 2,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
          ZLIB: {
            _hx_name: 'ZLIB',
            _hx_index: 3,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: q,
          },
        });
      Bh.__constructs__ = [Bh.DEFLATE, Bh.GZIP, Bh.LZMA, Bh.ZLIB];
      var qg = {
          toArrayBufferView: function (a) {
            return a;
          },
        },
        Na = function () {};
      g['lime.utils.Log'] = Na;
      Na.__name__ = 'lime.utils.Log';
      Na.debug = function (a, b) {
        4 <= Na.level && console.debug('[' + b.className + '] ' + I.string(a));
      };
      Na.error = function (a, b) {
        if (1 <= Na.level) {
          a = '[' + b.className + '] ERROR: ' + I.string(a);
          if (Na.throwErrors) throw W.thrown(a);
          console.error(a);
        }
      };
      Na.info = function (a, b) {
        3 <= Na.level && console.info('[' + b.className + '] ' + I.string(a));
      };
      Na.verbose = function (a, b) {
        5 <= Na.level &&
          ((a = '[' + b.className + '] ' + I.string(a)), console.log(a));
      };
      Na.warn = function (a, b) {
        2 <= Na.level &&
          console.warn('[' + b.className + '] WARNING: ' + I.string(a));
      };
      var yi = function () {
        this.bytesTotalCache = new Ia();
        this.bytesLoadedCache2 = new Ia();
        this.bytesLoadedCache = new na();
        this.onProgress = new rh();
        this.onComplete = new nc();
        this.bytesTotal = this.bytesLoaded = 0;
        this.libraries = [];
        this.libraryNames = [];
        this.onProgress.add(l(this, this.update));
      };
      g['lime.utils.Preloader'] = yi;
      yi.__name__ = 'lime.utils.Preloader';
      yi.prototype = {
        addLibrary: function (a) {
          this.libraries.push(a);
        },
        addLibraryName: function (a) {
          -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a);
        },
        load: function () {
          for (var a = this, b = 0, c = this.libraries; b < c.length; ) {
            var d = c[b];
            ++b;
            this.bytesTotal += d.bytesTotal;
          }
          this.loadedLibraries = -1;
          this.preloadStarted = !1;
          b = 0;
          for (c = this.libraries; b < c.length; )
            ((d = [c[b]]),
              ++b,
              Na.verbose('Preloading asset library', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 134,
                className: 'lime.utils.Preloader',
                methodName: 'load',
              }),
              d[0]
                .load()
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + c
                          : a.bytesLoaded +
                            (c - a.bytesLoadedCache.h[b[0].__id__]);
                      a.bytesLoadedCache.set(b[0], c);
                      a.simulateProgress ||
                        a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                    };
                  })(d),
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + b[0].bytesTotal
                          : a.bytesLoaded +
                            ((b[0].bytesTotal | 0) -
                              a.bytesLoadedCache.h[b[0].__id__]);
                      a.loadedAssetLibrary();
                    };
                  })(d),
                )
                .onError(
                  (function () {
                    return function (a) {
                      Na.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 170,
                        className: 'lime.utils.Preloader',
                        methodName: 'load',
                      });
                    };
                  })(),
                ));
          b = 0;
          for (c = this.libraryNames; b < c.length; )
            (++b, (this.bytesTotal += 200));
          this.loadedLibraries++;
          this.preloadStarted = !0;
          this.updateProgress();
        },
        loadedAssetLibrary: function (a) {
          this.loadedLibraries++;
          var b = this.loadedLibraries;
          this.preloadStarted || ++b;
          var c = this.libraries.length + this.libraryNames.length;
          null != a
            ? Na.verbose(
                'Loaded asset library: ' + a + ' [' + b + '/' + c + ']',
                {
                  fileName: 'lime/utils/Preloader.hx',
                  lineNumber: 197,
                  className: 'lime.utils.Preloader',
                  methodName: 'loadedAssetLibrary',
                },
              )
            : Na.verbose('Loaded asset library [' + b + '/' + c + ']', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 201,
                className: 'lime.utils.Preloader',
                methodName: 'loadedAssetLibrary',
              });
          this.updateProgress();
        },
        start: function () {
          this.complete ||
            this.simulateProgress ||
            !this.preloadComplete ||
            ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {},
        updateProgress: function () {
          var a = this;
          this.simulateProgress ||
            this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
          if (
            this.loadedLibraries == this.libraries.length &&
            !this.initLibraryNames
          ) {
            this.initLibraryNames = !0;
            for (var b = 0, c = this.libraryNames; b < c.length; ) {
              var d = [c[b]];
              ++b;
              Na.verbose('Preloading asset library: ' + d[0], {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 239,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              });
              Ca.loadLibrary(d[0])
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      0 < d &&
                        (Object.prototype.hasOwnProperty.call(
                          a.bytesTotalCache.h,
                          b[0],
                        ) ||
                          ((a.bytesTotalCache.h[b[0]] = d),
                          (a.bytesTotal += d - 200)),
                        c > d && (c = d),
                        Object.prototype.hasOwnProperty.call(
                          a.bytesLoadedCache2.h,
                          b[0],
                        )
                          ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                          : (a.bytesLoaded += c),
                        (a.bytesLoadedCache2.h[b[0]] = c),
                        a.simulateProgress ||
                          a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal));
                    };
                  })(d),
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      c = 200;
                      Object.prototype.hasOwnProperty.call(
                        a.bytesTotalCache.h,
                        b[0],
                      ) && (c = a.bytesTotalCache.h[b[0]]);
                      Object.prototype.hasOwnProperty.call(
                        a.bytesLoadedCache2.h,
                        b[0],
                      )
                        ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                        : (a.bytesLoaded += c);
                      a.loadedAssetLibrary(b[0]);
                    };
                  })(d),
                )
                .onError(
                  (function () {
                    return function (a) {
                      Na.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 293,
                        className: 'lime.utils.Preloader',
                        methodName: 'updateProgress',
                      });
                    };
                  })(),
                );
            }
          }
          this.simulateProgress ||
            this.loadedLibraries !=
              this.libraries.length + this.libraryNames.length ||
            (this.preloadComplete ||
              ((this.preloadComplete = !0),
              Na.verbose('Preload complete', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 306,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              })),
            this.start());
        },
        __class__: yi,
      };
      var Nd = function () {
        xd.call(this);
      };
      g['msignal.Signal0'] = Nd;
      Nd.__name__ = 'msignal.Signal0';
      Nd.__super__ = xd;
      Nd.prototype = u(xd.prototype, {
        dispatch: function () {
          for (var a = this.slots; a.nonEmpty; )
            (a.head.execute(), (a = a.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new Ch(this, a, b, c);
        },
        __class__: Nd,
      });
      var hf = function (a, b) {
        xd.call(this, [a, b]);
      };
      g['msignal.Signal2'] = hf;
      hf.__name__ = 'msignal.Signal2';
      hf.__super__ = xd;
      hf.prototype = u(xd.prototype, {
        dispatch: function (a, b) {
          for (var c = this.slots; c.nonEmpty; )
            (c.head.execute(a, b), (c = c.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new Dh(this, a, b, c);
        },
        __class__: hf,
      });
      var Dd = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        this.signal = a;
        this.set_listener(b);
        this.once = c;
        this.priority = d;
        this.enabled = !0;
      };
      g['msignal.Slot'] = Dd;
      Dd.__name__ = 'msignal.Slot';
      Dd.prototype = {
        remove: function () {
          this.signal.remove(this.listener);
        },
        set_listener: function (a) {
          return (this.listener = a);
        },
        __class__: Dd,
        __properties__: { set_listener: 'set_listener' },
      };
      var Ch = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        Dd.call(this, a, b, c, d);
      };
      g['msignal.Slot0'] = Ch;
      Ch.__name__ = 'msignal.Slot0';
      Ch.__super__ = Dd;
      Ch.prototype = u(Dd.prototype, {
        execute: function () {
          this.enabled && (this.once && this.remove(), this.listener());
        },
        __class__: Ch,
      });
      var hh = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        Dd.call(this, a, b, c, d);
      };
      g['msignal.Slot1'] = hh;
      hh.__name__ = 'msignal.Slot1';
      hh.__super__ = Dd;
      hh.prototype = u(Dd.prototype, {
        execute: function (a) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param && (a = this.param),
            this.listener(a));
        },
        __class__: hh,
      });
      var Dh = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        Dd.call(this, a, b, c, d);
      };
      g['msignal.Slot2'] = Dh;
      Dh.__name__ = 'msignal.Slot2';
      Dh.__super__ = Dd;
      Dh.prototype = u(Dd.prototype, {
        execute: function (a, b) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param1 && (a = this.param1),
            null != this.param2 && (b = this.param2),
            this.listener(a, b));
        },
        __class__: Dh,
      });
      var Ja = function () {};
      g['openfl.Lib'] = Ja;
      Ja.__name__ = 'openfl.Lib';
      Ja.__properties__ = { get_current: 'get_current' };
      Ja.getTimer = function () {
        return pc.getTimer();
      };
      Ja.getURL = function (a, b) {
        Ja.navigateToURL(a, b);
      };
      Ja.navigateToURL = function (a, b) {
        null == b && (b = '_blank');
        var c = a.url;
        if (w.typeof(a.data) == D.TObject) {
          for (var d = '', f = ya.fields(a.data), h = 0; h < f.length; ) {
            var k = f[h];
            ++h;
            0 < d.length && (d += '&');
            var g = encodeURIComponent(k) + '=';
            k = I.string(ya.field(a.data, k));
            d += g + encodeURIComponent(k);
          }
          c = -1 < c.indexOf('?') ? c + ('&' + d) : c + ('?' + d);
        }
        pc.openURL(c, b);
      };
      Ja.setTimeout = function (a, b, c) {
        var d = ++Ja.__lastTimerID,
          f = Ja.__timers;
        b = Pe.delay(function () {
          Ja.__timers.remove(d);
          if (
            null != Ja.get_current() &&
            null != Ja.get_current().stage &&
            Ja.get_current().stage.__uncaughtErrorEvents.__enabled
          )
            try {
              a.apply(a, null == c ? [] : c);
            } catch (k) {
              Qa.lastError = k;
              var b = W.caught(k).unwrap();
              Ja.get_current().stage.__handleError(b);
            }
          else a.apply(a, null == c ? [] : c);
        }, b);
        f.h[d] = b;
        return d;
      };
      Ja.get_current = function () {
        null == qc.current && (qc.current = new He());
        return qc.current;
      };
      var de = function () {};
      g['openfl._Vector.IVector'] = de;
      de.__name__ = 'openfl._Vector.IVector';
      de.__isInterface__ = !0;
      de.prototype = { __class__: de };
      var Eh = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.BoolVector'] = Eh;
      Eh.__name__ = 'openfl._Vector.BoolVector';
      Eh.__interfaces__ = [de];
      Eh.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = !1;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Eh,
        __properties__: { set_length: 'set_length' },
      };
      var Wd = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var f = c.length; d < f; ) {
              var h = d++;
              this.__array[h] = c[h];
            }
          }
        } else (null == c && (c = []), (this.__array = c));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.FloatVector'] = Wd;
      Wd.__name__ = 'openfl._Vector.FloatVector';
      Wd.__interfaces__ = [de];
      Wd.prototype = {
        concat: function (a) {
          return null == a
            ? new Wd(0, !1, this.__array.slice())
            : 0 < a.__array.length
              ? new Wd(0, !1, this.__array.concat(a.__array))
              : new Wd(0, !1, this.__array.slice());
        },
        copy: function () {
          return new Wd(0, this.fixed, this.__array.slice());
        },
        get: function (a) {
          return this.__array[a];
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (a != this.__array.length && !this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Wd,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Fh = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.FunctionVector'] = Fh;
      Fh.__name__ = 'openfl._Vector.FunctionVector';
      Fh.__interfaces__ = [de];
      Fh.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = null;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Fh,
        __properties__: { set_length: 'set_length' },
      };
      var Uf = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.IntVector'] = Uf;
      Uf.__name__ = 'openfl._Vector.IntVector';
      Uf.__interfaces__ = [de];
      Uf.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        iterator: function () {
          return new Fe(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Uf,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var df = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var f = c.length; d < f; ) {
              var h = d++;
              this.__array[h] = c[h];
            }
          }
        } else (null == c && (c = []), (this.__array = c));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.ObjectVector'] = df;
      df.__name__ = 'openfl._Vector.ObjectVector';
      df.__interfaces__ = [de];
      df.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        indexOf: function (a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c; ) {
            var d = b++;
            if (this.__array[d] == a) return d;
          }
          return -1;
        },
        insertAt: function (a, b) {
          (!this.fixed || a < this.__array.length) &&
            this.__array.splice(a, 0, b);
        },
        iterator: function () {
          return new Fe(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        removeAt: function (a) {
          return !this.fixed || a < this.__array.length
            ? this.__array.splice(a, 1)[0]
            : null;
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new df(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        unshift: function (a) {
          this.fixed || this.__array.unshift(a);
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b) for (; b < a; ) (b++, this.__array.push(null));
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: df,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Md = function () {};
      g['openfl.desktop.Clipboard'] = Md;
      Md.__name__ = 'openfl.desktop.Clipboard';
      Md.__properties__ = { get_generalClipboard: 'get_generalClipboard' };
      Md.get_generalClipboard = function () {
        null == Md.__generalClipboard &&
          ((Md.__generalClipboard = new Md()),
          (Md.__generalClipboard.__systemClipboard = !0));
        return Md.__generalClipboard;
      };
      Md.prototype = {
        setData: function (a, b, c) {
          if (this.__systemClipboard)
            switch (a) {
              case 0:
              case 1:
              case 2:
                return (
                  (a = b),
                  ic.set_text(null == a ? null : I.string(a)),
                  !0
                );
              default:
                return !1;
            }
          switch (a) {
            case 0:
              return (
                (a = b),
                (this.__htmlText = null == a ? null : I.string(a)),
                !0
              );
            case 1:
              return (
                (a = b),
                (this.__richText = null == a ? null : I.string(a)),
                !0
              );
            case 2:
              return (
                (a = b),
                (this.__text = null == a ? null : I.string(a)),
                !0
              );
            default:
              return !1;
          }
        },
        __class__: Md,
      };
      var Rf = function () {
        A.call(this);
        null == qc.application && (qc.application = this);
        null == qc.current && (qc.current = new He());
        qc.current.__loaderInfo = Ed.create(null);
        qc.current.__loaderInfo.content = qc.current;
      };
      g['openfl.display.Application'] = Rf;
      Rf.__name__ = 'openfl.display.Application';
      Rf.__super__ = A;
      Rf.prototype = u(A.prototype, {
        createWindow: function (a) {
          var b = new rg(this, a);
          this.__windows.push(b);
          this.__windowByID.h[b.id] = b;
          var c = this;
          b.onClose.add(
            function () {
              c.__onWindowClose(b);
            },
            !1,
            -1e4,
          );
          null == this.__window &&
            ((this.__window = b),
            b.onActivate.add(l(this, this.onWindowActivate)),
            b.onRenderContextLost.add(l(this, this.onRenderContextLost)),
            b.onRenderContextRestored.add(
              l(this, this.onRenderContextRestored),
            ),
            b.onDeactivate.add(l(this, this.onWindowDeactivate)),
            b.onDropFile.add(l(this, this.onWindowDropFile)),
            b.onEnter.add(l(this, this.onWindowEnter)),
            b.onExpose.add(l(this, this.onWindowExpose)),
            b.onFocusIn.add(l(this, this.onWindowFocusIn)),
            b.onFocusOut.add(l(this, this.onWindowFocusOut)),
            b.onFullscreen.add(l(this, this.onWindowFullscreen)),
            b.onKeyDown.add(l(this, this.onKeyDown)),
            b.onKeyUp.add(l(this, this.onKeyUp)),
            b.onLeave.add(l(this, this.onWindowLeave)),
            b.onMinimize.add(l(this, this.onWindowMinimize)),
            b.onMouseDown.add(l(this, this.onMouseDown)),
            b.onMouseMove.add(l(this, this.onMouseMove)),
            b.onMouseMoveRelative.add(l(this, this.onMouseMoveRelative)),
            b.onMouseUp.add(l(this, this.onMouseUp)),
            b.onMouseWheel.add(l(this, this.onMouseWheel)),
            b.onMove.add(l(this, this.onWindowMove)),
            b.onRender.add(l(this, this.render)),
            b.onResize.add(l(this, this.onWindowResize)),
            b.onRestore.add(l(this, this.onWindowRestore)),
            b.onTextEdit.add(l(this, this.onTextEdit)),
            b.onTextInput.add(l(this, this.onTextInput)),
            this.onWindowCreate());
          this.onCreateWindow.dispatch(b);
          return b;
        },
        exec: function () {
          return A.prototype.exec.call(this);
        },
        __checkForAllWindowsClosed: function () {
          0 < this.__windows.length ||
            A.prototype.__checkForAllWindowsClosed.call(this);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (qc.application == this && (qc.application = null),
            A.prototype.__onModuleExit.call(this, a));
        },
        __class__: Rf,
      });
      var eg = function (a, b, c) {
        null == c && (c = !1);
        S.call(this);
        this.__drawableType = 2;
        this.__bitmapData = a;
        this.pixelSnapping = b;
        this.smoothing = c;
        null == b && (this.pixelSnapping = 1);
      };
      g['openfl.display.Bitmap'] = eg;
      eg.__name__ = 'openfl.display.Bitmap';
      eg.__super__ = S;
      eg.prototype = u(S.prototype, {
        __enterFrame: function (a) {
          null == this.__bitmapData ||
            null == this.__bitmapData.image ||
            this.__bitmapData.image.version == this.__imageVersion ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = qa.__pool.get();
          null != this.__bitmapData
            ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height)
            : c.setTo(0, 0, 0, 0);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          qa.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            null == this.__bitmapData ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            g = k.a * k.d - k.b * k.c;
          c = 0 == g ? -k.tx : (1 / g) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          g = k.a * k.d - k.b * k.c;
          a = 0 == g ? -k.ty : (1 / g) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          if (
            0 < c &&
            0 < a &&
            c <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
          ) {
            if (null != this.__scrollRect && !this.__scrollRect.contains(c, a))
              return !1;
            null == d || f || d.push(h);
            return !0;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          if (null == this.__bitmapData) return !1;
          this.__getRenderTransform();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            f =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          a = 0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
          return 0 < f &&
            0 < a &&
            f <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
            ? !0
            : !1;
        },
        get_bitmapData: function () {
          return this.__bitmapData;
        },
        set_height: function (a) {
          null != this.__bitmapData
            ? this.set_scaleY(a / this.__bitmapData.height)
            : this.set_scaleY(0);
          return a;
        },
        set_width: function (a) {
          null != this.__bitmapData
            ? this.set_scaleX(a / this.__bitmapData.width)
            : this.set_scaleX(0);
          return a;
        },
        __class__: eg,
        __properties__: u(S.prototype.__properties__, {
          get_bitmapData: 'get_bitmapData',
        }),
      });
      var Wb = function (a, b, c, d) {
        null == d && (d = -1);
        null == c && (c = !0);
        this.__drawableType = 0;
        this.transparent = c;
        null == a && (a = 0);
        null == b && (b = 0);
        0 > a && (a = 0);
        0 > b && (b = 0);
        this.width = a;
        this.height = b;
        this.rect = new qa(0, 0, a, b);
        this.__textureWidth = a;
        this.__textureHeight = b;
        0 < a &&
          0 < b &&
          (c
            ? 0 == (d & -16777216) && (d = 0)
            : (d = -16777216 | (d & 16777215)),
          (this.image = new Mb(
            null,
            0,
            0,
            a,
            b,
            (d << 8) | ((d >>> 24) & 255),
          )),
          this.image.set_transparent(c),
          (this.readable = this.__isValid = !0));
        this.__renderTransform = new wa();
        this.__worldAlpha = 1;
        this.__worldTransform = new wa();
        this.__worldColorTransform = new Hb();
        this.__renderable = !0;
      };
      g['openfl.display.BitmapData'] = Wb;
      Wb.__name__ = 'openfl.display.BitmapData';
      Wb.__interfaces__ = [$a];
      Wb.fromCanvas = function (a, b) {
        null == b && (b = !0);
        if (null == a) return null;
        var c = new Wb(0, 0, b, 0);
        c.__fromImage(Mb.fromCanvas(a));
        c.image.set_transparent(b);
        return c;
      };
      Wb.prototype = {
        colorTransform: function (a, b) {
          this.readable &&
            this.image.colorTransform(
              a.__toLimeRectangle(),
              b.__toLimeColorMatrix(),
            );
        },
        copyPixels: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          this.readable &&
            null != a &&
            (null != f &&
              ((Wb.__tempVector.x = f.x), (Wb.__tempVector.y = f.y)),
            this.image.copyPixels(
              a.image,
              b.__toLimeRectangle(),
              c.__toLimeVector2(),
              null != d ? d.image : null,
              null != f ? Wb.__tempVector : null,
              h,
            ));
        },
        dispose: function () {
          this.image = null;
          this.height = this.width = 0;
          this.rect = null;
          this.readable = this.__isValid = !1;
          this.__textureContext =
            this.__texture =
            this.__framebufferContext =
            this.__framebuffer =
            this.__vertexBuffer =
            this.__surface =
              null;
        },
        draw: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          if (null != a) {
            var k = !0,
              g = null;
            a instanceof S &&
              ((g = Ua.__cast(a, S)),
              g.get_visible() || ((k = !1), g.set_visible(!0)));
            a.__update(!1, !0);
            var p = wa.__pool.get();
            p.copyFrom(a.__renderTransform);
            p.invert();
            null != b && p.concat(b);
            b = null;
            null != f && ((b = wa.__pool.get()), b.copyFrom(p), b.invert());
            var t = new Hb();
            t.__copyFrom(a.__worldColorTransform);
            t.__invert();
            if (this.readable || null == Ja.get_current().stage.context3D) {
              if (null != c) {
                var n = qa.__pool.get(),
                  m = wa.__pool.get();
                a.__getBounds(n, m);
                var x = Math.ceil(n.width),
                  q = Math.ceil(n.height);
                m.tx = -n.x;
                m.ty = -n.y;
                x = new Wb(x, q, !0, 0);
                x.draw(a, m);
                x.colorTransform(x.rect, c);
                x.__renderTransform.identity();
                x.__renderTransform.tx = n.x;
                x.__renderTransform.ty = n.y;
                x.__renderTransform.concat(a.__renderTransform);
                x.__worldAlpha = a.__worldAlpha;
                x.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                a = x;
                qa.__pool.release(n);
                wa.__pool.release(m);
              }
              Ha.convertToCanvas(this.image);
              c = new ee(this.image.buffer.__srcContext);
              c.__allowSmoothing = h;
              c.__overrideBlendMode = d;
              c.__worldTransform = p;
              c.__worldAlpha = 1 / a.__worldAlpha;
              c.__worldColorTransform = t;
              null != f && c.__pushMaskRect(f, b);
              this.__drawCanvas(a, c);
              c.__overrideBlendMode = null;
              c.__setBlendMode(10);
            } else
              (null == this.__textureContext &&
                (this.__textureContext = A.current.__window.context),
                null != c && t.__combine(c),
                (c = new Ta(Ja.get_current().stage.context3D, this)),
                (c.__allowSmoothing = h),
                (c.__pixelRatio = Ja.get_current().stage.window.__scale),
                (c.__overrideBlendMode = d),
                (c.__worldTransform = p),
                (c.__worldAlpha = 1 / a.__worldAlpha),
                (c.__worldColorTransform = t),
                c.__resize(this.width, this.height),
                null != f && c.__pushMaskRect(f, b),
                this.__drawGL(a, c));
            null != f && (c.__popMaskRect(), wa.__pool.release(b));
            wa.__pool.release(p);
            null == g || k || g.set_visible(!1);
          }
        },
        encode: function (a, b, c) {
          if (!this.readable || null == a) return null;
          null == c && (c = new Cc(0));
          var d = this.image;
          if (!a.equals(this.rect)) {
            var f = wa.__pool.get();
            f.tx = Math.round(-a.x);
            f.ty = Math.round(-a.y);
            a = new Wb(Math.ceil(a.width), Math.ceil(a.height), !0, 0);
            a.draw(this, f);
            d = a.image;
            wa.__pool.release(f);
          }
          return b instanceof fh
            ? (c.writeBytes(ld.fromBytes(d.encode(wh.PNG)), 0, 0), c)
            : b instanceof Gh
              ? (c.writeBytes(
                  ld.fromBytes(d.encode(wh.JPEG, Ua.__cast(b, Gh).quality)),
                  0,
                  0,
                ),
                c)
              : null;
        },
        fillRect: function (a, b) {
          this.__fillRect(a, b, !0);
        },
        getIndexBuffer: function (a, b) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context ||
            (null != b && null == this.__indexBufferGrid) ||
            (null != this.__indexBufferGrid &&
              !this.__indexBufferGrid.equals(b))
          ) {
            this.__indexBufferContext = a.__context;
            this.__indexBuffer = null;
            if (null != b) {
              null == this.__indexBufferGrid &&
                (this.__indexBufferGrid = new qa());
              this.__indexBufferGrid.copyFrom(b);
              var c = b.width;
              b = b.height;
              0 != c && 0 != b
                ? ((this.__indexBufferData = new Uint16Array(54)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 0),
                  (this.__indexBufferData[8] = 5),
                  (this.__indexBufferData[9] = 5),
                  (this.__indexBufferData[10] = 0),
                  (this.__indexBufferData[11] = 2),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 4),
                  (this.__indexBufferData[14] = 7),
                  (this.__indexBufferData[15] = 7),
                  (this.__indexBufferData[16] = 4),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBufferData[18] = 8),
                  (this.__indexBufferData[19] = 9),
                  (this.__indexBufferData[20] = 0),
                  (this.__indexBufferData[21] = 0),
                  (this.__indexBufferData[22] = 9),
                  (this.__indexBufferData[23] = 1),
                  (this.__indexBufferData[24] = 10),
                  (this.__indexBufferData[25] = 8),
                  (this.__indexBufferData[26] = 4),
                  (this.__indexBufferData[27] = 4),
                  (this.__indexBufferData[28] = 8),
                  (this.__indexBufferData[29] = 0),
                  (this.__indexBufferData[30] = 11),
                  (this.__indexBufferData[31] = 10),
                  (this.__indexBufferData[32] = 6),
                  (this.__indexBufferData[33] = 6),
                  (this.__indexBufferData[34] = 10),
                  (this.__indexBufferData[35] = 4),
                  (this.__indexBufferData[36] = 12),
                  (this.__indexBufferData[37] = 13),
                  (this.__indexBufferData[38] = 8),
                  (this.__indexBufferData[39] = 8),
                  (this.__indexBufferData[40] = 13),
                  (this.__indexBufferData[41] = 9),
                  (this.__indexBufferData[42] = 14),
                  (this.__indexBufferData[43] = 12),
                  (this.__indexBufferData[44] = 10),
                  (this.__indexBufferData[45] = 10),
                  (this.__indexBufferData[46] = 12),
                  (this.__indexBufferData[47] = 8),
                  (this.__indexBufferData[48] = 15),
                  (this.__indexBufferData[49] = 14),
                  (this.__indexBufferData[50] = 11),
                  (this.__indexBufferData[51] = 11),
                  (this.__indexBufferData[52] = 14),
                  (this.__indexBufferData[53] = 10),
                  (this.__indexBuffer = a.createIndexBuffer(54)))
                : 0 == c && 0 != b
                  ? ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 5),
                    (this.__indexBufferData[8] = 0),
                    (this.__indexBufferData[9] = 0),
                    (this.__indexBufferData[10] = 5),
                    (this.__indexBufferData[11] = 1),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 7),
                    (this.__indexBufferData[14] = 4),
                    (this.__indexBufferData[15] = 4),
                    (this.__indexBufferData[16] = 7),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)))
                  : 0 != c &&
                    0 == b &&
                    ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 0),
                    (this.__indexBufferData[8] = 5),
                    (this.__indexBufferData[9] = 5),
                    (this.__indexBufferData[10] = 0),
                    (this.__indexBufferData[11] = 2),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 4),
                    (this.__indexBufferData[14] = 7),
                    (this.__indexBufferData[15] = 7),
                    (this.__indexBufferData[16] = 4),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)));
            } else this.__indexBufferGrid = null;
            null == this.__indexBuffer &&
              ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBuffer = a.createIndexBuffer(6)));
            this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
          }
          return this.__indexBuffer;
        },
        getVertexBuffer: function (a, b, c) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            (null != b && null == this.__vertexBufferGrid) ||
            (null != this.__vertexBufferGrid &&
              !this.__vertexBufferGrid.equals(b)) ||
            (null != c &&
              (this.__vertexBufferWidth != c.get_width() ||
                this.__vertexBufferHeight != c.get_height() ||
                this.__vertexBufferScaleX != c.get_scaleX() ||
                this.__vertexBufferScaleY != c.get_scaleY()))
          ) {
            this.__uvRect = new qa(0, 0, this.width, this.height);
            this.__vertexBufferContext = a.__context;
            this.__vertexBuffer = null;
            null != c &&
              ((this.__vertexBufferWidth = c.get_width()),
              (this.__vertexBufferHeight = c.get_height()),
              (this.__vertexBufferScaleX = c.get_scaleX()),
              (this.__vertexBufferScaleY = c.get_scaleY()));
            if (null != b && null != c) {
              null == this.__vertexBufferGrid &&
                (this.__vertexBufferGrid = new qa());
              this.__vertexBufferGrid.copyFrom(b);
              this.__vertexBufferWidth = c.get_width();
              this.__vertexBufferHeight = c.get_height();
              this.__vertexBufferScaleX = c.get_scaleX();
              this.__vertexBufferScaleY = c.get_scaleY();
              var d = b.width,
                f = b.height;
              if (0 != d && 0 != f) {
                this.__vertexBufferData = new Float32Array(224);
                var h = b.x,
                  k = b.y,
                  g = this.width - d - h,
                  p = this.height - f - k;
                b = h / this.width;
                var t = k / this.height;
                d /= this.width;
                f /= this.height;
                h /= c.get_scaleX();
                k /= c.get_scaleY();
                g /= c.get_scaleX();
                var n = p / c.get_scaleY();
                p = c.get_width() / c.get_scaleX() - h - g;
                g = c.get_height() / c.get_scaleY() - k - n;
                this.__vertexBufferData[0] = h;
                this.__vertexBufferData[1] = k;
                this.__vertexBufferData[3] = 1 * b;
                this.__vertexBufferData[4] = 1 * t;
                this.__vertexBufferData[15] = k;
                this.__vertexBufferData[18] = 1 * t;
                this.__vertexBufferData[28] = h;
                this.__vertexBufferData[31] = 1 * b;
                this.__vertexBufferData[56] = h + p;
                this.__vertexBufferData[57] = k;
                this.__vertexBufferData[59] = 1 * (b + d);
                this.__vertexBufferData[60] = 1 * t;
                this.__vertexBufferData[70] = h + p;
                this.__vertexBufferData[73] = 1 * (b + d);
                this.__vertexBufferData[84] = this.width;
                this.__vertexBufferData[85] = k;
                this.__vertexBufferData[87] = 1;
                this.__vertexBufferData[88] = 1 * t;
                this.__vertexBufferData[98] = this.width;
                this.__vertexBufferData[101] = 1;
                this.__vertexBufferData[112] = h;
                this.__vertexBufferData[113] = k + g;
                this.__vertexBufferData[115] = 1 * b;
                this.__vertexBufferData[116] = 1 * (t + f);
                this.__vertexBufferData[127] = k + g;
                this.__vertexBufferData[130] = 1 * (t + f);
                this.__vertexBufferData[140] = h + p;
                this.__vertexBufferData[141] = k + g;
                this.__vertexBufferData[143] = 1 * (b + d);
                this.__vertexBufferData[144] = 1 * (t + f);
                this.__vertexBufferData[154] = this.width;
                this.__vertexBufferData[155] = k + g;
                this.__vertexBufferData[157] = 1;
                this.__vertexBufferData[158] = 1 * (t + f);
                this.__vertexBufferData[168] = h;
                this.__vertexBufferData[169] = this.height;
                this.__vertexBufferData[171] = 1 * b;
                this.__vertexBufferData[172] = 1;
                this.__vertexBufferData[183] = this.height;
                this.__vertexBufferData[186] = 1;
                this.__vertexBufferData[196] = h + p;
                this.__vertexBufferData[197] = this.height;
                this.__vertexBufferData[199] = 1 * (b + d);
                this.__vertexBufferData[200] = 1;
                this.__vertexBufferData[210] = this.width;
                this.__vertexBufferData[211] = this.height;
                this.__vertexBufferData[213] = 1;
                this.__vertexBufferData[214] = 1;
                this.__vertexBuffer = a.createVertexBuffer(16, 14);
              } else
                0 == d && 0 != f
                  ? ((this.__vertexBufferData = new Float32Array(112)),
                    (k = b.y),
                    (p = this.height - f - k),
                    (t = k / this.height),
                    (f /= this.height),
                    (k /= c.get_scaleY()),
                    (n = p / c.get_scaleY()),
                    (g = c.get_height() / c.get_scaleY() - k - n),
                    (c = c.get_width() / c.get_scaleX()),
                    (this.__vertexBufferData[0] = c),
                    (this.__vertexBufferData[1] = k),
                    (this.__vertexBufferData[3] = 1),
                    (this.__vertexBufferData[4] = 1 * t),
                    (this.__vertexBufferData[15] = k),
                    (this.__vertexBufferData[18] = 1 * t),
                    (this.__vertexBufferData[28] = c),
                    (this.__vertexBufferData[31] = 1),
                    (this.__vertexBufferData[56] = c),
                    (this.__vertexBufferData[57] = k + g),
                    (this.__vertexBufferData[59] = 1),
                    (this.__vertexBufferData[60] = 1 * (t + f)),
                    (this.__vertexBufferData[71] = k + g),
                    (this.__vertexBufferData[74] = 1 * (t + f)),
                    (this.__vertexBufferData[84] = c),
                    (this.__vertexBufferData[85] = this.height),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[99] = this.height),
                    (this.__vertexBufferData[102] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)))
                  : 0 == f &&
                    0 != d &&
                    ((this.__vertexBufferData = new Float32Array(112)),
                    (h = b.x),
                    (g = this.width - d - h),
                    (b = h / this.width),
                    (d /= this.width),
                    (h /= c.get_scaleX()),
                    (g /= c.get_scaleX()),
                    (p = c.get_width() / c.get_scaleX() - h - g),
                    (c = c.get_height() / c.get_scaleY()),
                    (this.__vertexBufferData[0] = h),
                    (this.__vertexBufferData[1] = c),
                    (this.__vertexBufferData[3] = 1 * b),
                    (this.__vertexBufferData[4] = 1),
                    (this.__vertexBufferData[15] = c),
                    (this.__vertexBufferData[18] = 1),
                    (this.__vertexBufferData[28] = h),
                    (this.__vertexBufferData[31] = 1 * b),
                    (this.__vertexBufferData[56] = h + p),
                    (this.__vertexBufferData[57] = c),
                    (this.__vertexBufferData[59] = 1 * (b + d)),
                    (this.__vertexBufferData[60] = 1),
                    (this.__vertexBufferData[70] = h + p),
                    (this.__vertexBufferData[73] = 1 * (b + d)),
                    (this.__vertexBufferData[84] = this.width),
                    (this.__vertexBufferData[85] = c),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[98] = this.width),
                    (this.__vertexBufferData[101] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)));
            } else this.__vertexBufferGrid = null;
            null == this.__vertexBuffer &&
              ((this.__vertexBufferData = new Float32Array(56)),
              (this.__vertexBufferData[0] = this.width),
              (this.__vertexBufferData[1] = this.height),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[15] = this.height),
              (this.__vertexBufferData[18] = 1),
              (this.__vertexBufferData[28] = this.width),
              (this.__vertexBufferData[31] = 1),
              (this.__vertexBuffer = a.createVertexBuffer(3, 14)));
            this.__vertexBuffer.uploadFromTypedArray(
              qg.toArrayBufferView(this.__vertexBufferData),
            );
          }
          return this.__vertexBuffer;
        },
        getPixel: function (a, b) {
          return this.readable ? this.image.getPixel(a, b, 1) : 0;
        },
        getTexture: function (a) {
          if (!this.__isValid) return null;
          if (null == this.__texture || this.__textureContext != a.__context)
            ((this.__textureContext = a.__context),
              (this.__texture = a.createRectangleTexture(
                this.width,
                this.height,
                1,
                !1,
              )),
              (this.__textureVersion = -1));
          Ha.sync(this.image, !1);
          null != this.image &&
            this.image.version > this.__textureVersion &&
            (null != this.__surface && lk.flush(this.__surface),
            (a = this.image),
            xb.__supportsBGRA ||
              0 == a.get_format() ||
              ((a = a.clone()), a.set_format(0)),
            this.__texture.__uploadFromImage(a),
            (this.__textureVersion = this.image.version),
            (this.__textureWidth = a.buffer.width),
            (this.__textureHeight = a.buffer.height));
          this.readable ||
            null == this.image ||
            (this.image = this.__surface = null);
          return this.__texture;
        },
        setPixel: function (a, b, c) {
          this.readable && this.image.setPixel(a, b, c, 1);
        },
        __drawCanvas: function (a, b) {
          var c = this.image.buffer;
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
          b.__render(a);
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
          c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
          c.__srcImageData = null;
          c.data = null;
          this.image.dirty = !0;
          this.image.version++;
        },
        __drawGL: function (a, b) {
          var c = b.__context3D,
            d = c.__state.renderToTexture,
            f = c.__state.renderToTextureDepthStencil,
            h = c.__state.renderToTextureAntiAlias,
            k = c.__state.renderToTextureSurfaceSelector;
          c.setRenderToTexture(this.getTexture(c), !0);
          b.__render(a);
          null != d
            ? c.setRenderToTexture(d, f, h, k)
            : c.setRenderToBackBuffer();
        },
        __fillRect: function (a, b, c) {
          if (null != a)
            if (
              (this.transparent && 0 == (b & -16777216) && (b = 0),
              c &&
                null != this.__texture &&
                null != this.__texture.__glFramebuffer &&
                'opengl' == Ja.get_current().stage.__renderer.__type)
            ) {
              c = Ja.get_current().stage.__renderer.__context3D;
              var d = !this.rect.equals(a),
                f = c.__state.renderToTexture,
                h = c.__state.renderToTextureDepthStencil,
                k = c.__state.renderToTextureAntiAlias,
                g = c.__state.renderToTextureSurfaceSelector;
              c.setRenderToTexture(this.__texture);
              d && c.setScissorRectangle(a);
              c.clear(
                ((b >>> 16) & 255) / 255,
                ((b >>> 8) & 255) / 255,
                (b & 255) / 255,
                this.transparent ? ((b >>> 24) & 255) / 255 : 1,
                0,
                0,
                1,
              );
              d && c.setScissorRectangle(null);
              null != f
                ? c.setRenderToTexture(f, h, k, g)
                : c.setRenderToBackBuffer();
            } else
              this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1);
        },
        __fromImage: function (a) {
          null != a &&
            null != a.buffer &&
            ((this.image = a),
            (this.width = a.width),
            (this.height = a.height),
            (this.rect = new qa(0, 0, a.width, a.height)),
            (this.__textureWidth = this.width),
            (this.__textureHeight = this.height),
            (this.__isValid = this.readable = !0));
        },
        __getBounds: function (a, b) {
          var c = qa.__pool.get();
          this.rect.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          qa.__pool.release(c);
        },
        __setUVRect: function (a, b, c, d, f) {
          if (
            null != this.getVertexBuffer(a) &&
            (d != this.__uvRect.width ||
              f != this.__uvRect.height ||
              b != this.__uvRect.x ||
              c != this.__uvRect.y)
          ) {
            null == this.__uvRect && (this.__uvRect = new qa());
            this.__uvRect.setTo(b, c, d, f);
            a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
            c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
            b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
            var h = 0 < this.__textureHeight ? f / this.__textureHeight : 0;
            this.__vertexBufferData[0] = d;
            this.__vertexBufferData[1] = f;
            this.__vertexBufferData[3] = a + b;
            this.__vertexBufferData[4] = c + h;
            this.__vertexBufferData[15] = f;
            this.__vertexBufferData[17] = a;
            this.__vertexBufferData[18] = c + h;
            this.__vertexBufferData[28] = d;
            this.__vertexBufferData[31] = a + b;
            this.__vertexBufferData[32] = c;
            this.__vertexBufferData[45] = a;
            this.__vertexBufferData[46] = c;
            this.__vertexBuffer.uploadFromTypedArray(
              qg.toArrayBufferView(this.__vertexBufferData),
            );
          }
        },
        __update: function (a, b) {
          this.__updateTransforms();
        },
        __updateTransforms: function (a) {
          null == a
            ? this.__worldTransform.identity()
            : this.__worldTransform.copyFrom(a);
          this.__renderTransform.copyFrom(this.__worldTransform);
        },
        __class__: Wb,
      };
      var Sc = function () {
        ma.call(this);
        this.__allowSmoothing = !0;
        this.__pixelRatio = 1;
        this.__tempColorTransform = new Hb();
        this.__worldAlpha = 1;
      };
      g['openfl.display.DisplayObjectRenderer'] = Sc;
      Sc.__name__ = 'openfl.display.DisplayObjectRenderer';
      Sc.__super__ = ma;
      Sc.prototype = u(ma.prototype, {
        __clear: function () {},
        __getAlpha: function (a) {
          return a * this.__worldAlpha;
        },
        __popMaskObject: function (a, b) {},
        __pushMaskObject: function (a, b) {},
        __render: function (a) {},
        __renderEvent: function (a) {
          if (null != a.__customRenderEvent && a.__renderable) {
            a.__customRenderEvent.allowSmoothing = this.__allowSmoothing;
            a.__customRenderEvent.objectMatrix.copyFrom(a.__renderTransform);
            a.__customRenderEvent.objectColorTransform.__copyFrom(
              a.__worldColorTransform,
            );
            a.__customRenderEvent.renderer = this;
            switch (this.__type) {
              case 'cairo':
                a.__customRenderEvent.type = 'renderCairo';
                break;
              case 'canvas':
                a.__customRenderEvent.type = 'renderCanvas';
                break;
              case 'dom':
                a.__customRenderEvent.type =
                  null != a.stage && a.__worldVisible
                    ? 'renderDOM'
                    : 'clearDOM';
                break;
              case 'opengl':
                this.__cleared || this.__clear();
                this.setShader(a.__worldShader);
                this.__context3D.__flushGL();
                a.__customRenderEvent.type = 'renderOpenGL';
                break;
              default:
                return;
            }
            this.__setBlendMode(a.__worldBlendMode);
            this.__pushMaskObject(a);
            a.dispatchEvent(a.__customRenderEvent);
            this.__popMaskObject(a);
            'opengl' == this.__type && this.setViewport();
          }
        },
        __resize: function (a, b) {},
        __setBlendMode: function (a) {},
        __shouldCacheHardware: function (a, b) {
          if (null == a) return null;
          switch (a.__drawableType) {
            case 4:
            case 5:
              if (1 == b) return !0;
              b = this.__shouldCacheHardware_DisplayObject(a, b);
              if (1 == b) return !0;
              if (null != a.__children) {
                var c = 0;
                for (a = a.__children; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b = this.__shouldCacheHardware_DisplayObject(d, b);
                  if (1 == b) return !0;
                }
              }
              return b;
            case 7:
              return 1 == b ? !0 : !1;
            case 9:
              return !0;
            default:
              return this.__shouldCacheHardware_DisplayObject(a, b);
          }
        },
        __shouldCacheHardware_DisplayObject: function (a, b) {
          return 1 == b || null != a.__filters
            ? !0
            : 0 == b || (null != a.__graphics && !Lb.isCompatible(a.__graphics))
              ? !1
              : null;
        },
        __updateCacheBitmap: function (a, b) {
          if (null == a) return !1;
          switch (a.__drawableType) {
            case 2:
              var c = a;
              if (
                null == c.__bitmapData ||
                (null == c.__filters &&
                  'opengl' == this.__type &&
                  null == c.__cacheBitmap)
              )
                return !1;
              b =
                null != c.__bitmapData.image &&
                c.__bitmapData.image.version != c.__imageVersion;
              break;
            case 7:
              var d = a;
              if (
                null == d.__filters &&
                'opengl' == this.__type &&
                null == d.__cacheBitmap &&
                !d.__domRender
              )
                return !1;
              b && (d.__renderDirty = !0);
              b = b || d.__dirty;
              break;
            case 9:
              if (
                null == a.__filters &&
                'opengl' == this.__type &&
                null == a.__cacheBitmap
              )
                return !1;
          }
          if (a.__isCacheBitmapRender) return !1;
          d = Hb.__pool.get();
          d.__copyFrom(a.__worldColorTransform);
          null != this.__worldColorTransform &&
            d.__combine(this.__worldColorTransform);
          var f = !1;
          if (
            a.get_cacheAsBitmap() ||
            ('opengl' != this.__type && !d.__isDefault(!0))
          ) {
            f = null;
            var h =
                (b =
                  null == a.__cacheBitmap ||
                  (a.__renderDirty &&
                    (b || (null != a.__children && 0 < a.__children.length))) ||
                  a.opaqueBackground != a.__cacheBitmapBackground) ||
                (null != a.__graphics && a.__graphics.__softwareDirty) ||
                !a.__cacheBitmapColorTransform.__equals(d, !0),
              k = b || (null != a.__graphics && a.__graphics.__hardwareDirty),
              g = this.__type;
            if (h || k)
              ('opengl' == g &&
                0 == this.__shouldCacheHardware(a, null) &&
                (g = 'canvas'),
                !h || ('canvas' != g && 'cairo' != g) || (b = !0),
                k && 'opengl' == g && (b = !0));
            h =
              b || !a.__cacheBitmap.__worldTransform.equals(a.__worldTransform);
            c = null != a.__filters;
            if ('dom' == this.__type && !c) return !1;
            if (c && !b)
              for (var p = 0, t = a.__filters; p < t.length; ) {
                var n = t[p];
                ++p;
                if (n.__renderDirty) {
                  b = !0;
                  break;
                }
              }
            null == a.__cacheBitmapMatrix && (a.__cacheBitmapMatrix = new wa());
            p =
              null != a.__cacheAsBitmapMatrix
                ? a.__cacheAsBitmapMatrix
                : a.__renderTransform;
            b ||
              (p.a == a.__cacheBitmapMatrix.a &&
                p.b == a.__cacheBitmapMatrix.b &&
                p.c == a.__cacheBitmapMatrix.c &&
                p.d == a.__cacheBitmapMatrix.d) ||
              (b = !0);
            !b &&
              'opengl' != this.__type &&
              null != a.__cacheBitmapData &&
              null != a.__cacheBitmapData.image &&
              a.__cacheBitmapData.image.version <
                a.__cacheBitmapData.__textureVersion &&
              (b = !0);
            if (!b)
              for (k = a; null != k; ) {
                if (null != k.get_scrollRect()) {
                  h = !0;
                  break;
                }
                k = k.parent;
              }
            a.__cacheBitmapMatrix.copyFrom(p);
            a.__cacheBitmapMatrix.tx = 0;
            var m = (k = a.__cacheBitmapMatrix.ty = 0),
              x = 0,
              q = 0,
              l = (n = 0);
            t = this.__pixelRatio;
            if (h || b)
              ((f = qa.__pool.get()),
                a.__getFilterBounds(f, a.__cacheBitmapMatrix),
                (x = 0 < f.width ? Math.ceil((f.width + 1) * t) : 0),
                (q = 0 < f.height ? Math.ceil((f.height + 1) * t) : 0),
                (n = 0 < f.x ? Math.ceil(f.x) : Math.floor(f.x)),
                (l = 0 < f.y ? Math.ceil(f.y) : Math.floor(f.y)),
                null != a.__cacheBitmapData
                  ? x > a.__cacheBitmapData.width ||
                    q > a.__cacheBitmapData.height
                    ? ((k = Math.ceil(
                        Math.max(1.25 * x, a.__cacheBitmapData.width),
                      )),
                      (m = Math.ceil(
                        Math.max(1.25 * q, a.__cacheBitmapData.height),
                      )),
                      (b = !0))
                    : ((k = a.__cacheBitmapData.width),
                      (m = a.__cacheBitmapData.height))
                  : ((k = x), (m = q)));
            if (b)
              if (
                ((h = !0),
                (a.__cacheBitmapBackground = a.opaqueBackground),
                0.5 <= x && 0.5 <= q)
              ) {
                var G = null != a.opaqueBackground && (k != x || m != q),
                  z =
                    null != a.opaqueBackground
                      ? -16777216 | a.opaqueBackground
                      : 0,
                  w = G ? 0 : z,
                  D = 'opengl' == this.__type;
                null == a.__cacheBitmapData ||
                k > a.__cacheBitmapData.width ||
                m > a.__cacheBitmapData.height
                  ? ((a.__cacheBitmapData = new Wb(k, m, !0, w)),
                    null == a.__cacheBitmap && (a.__cacheBitmap = new eg()),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null))
                  : a.__cacheBitmapData.__fillRect(
                      a.__cacheBitmapData.rect,
                      w,
                      D,
                    );
                G &&
                  (f.setTo(0, 0, x, q),
                  a.__cacheBitmapData.__fillRect(f, z, D));
              } else
                return (
                  Hb.__pool.release(d),
                  (a.__cacheBitmap = null),
                  (a.__cacheBitmapData = null),
                  (a.__cacheBitmapData2 = null),
                  (a.__cacheBitmapData3 = null),
                  (a.__cacheBitmapRenderer = null),
                  7 == a.__drawableType &&
                    ((d = a),
                    null != d.__cacheBitmap &&
                      ((d.__cacheBitmap.__renderTransform.tx -=
                        d.__offsetX * t),
                      (d.__cacheBitmap.__renderTransform.ty -=
                        d.__offsetY * t))),
                  !0
                );
            else
              ((a.__cacheBitmapData = a.__cacheBitmap.get_bitmapData()),
                (a.__cacheBitmapData2 = null),
                (a.__cacheBitmapData3 = null));
            if (h || b)
              (a.__cacheBitmap.__worldTransform.copyFrom(a.__worldTransform),
                p == a.__renderTransform
                  ? (a.__cacheBitmap.__renderTransform.identity(),
                    a.__cacheBitmap.__renderTransform.scale(1 / t, 1 / t),
                    (a.__cacheBitmap.__renderTransform.tx =
                      a.__renderTransform.tx + n),
                    (a.__cacheBitmap.__renderTransform.ty =
                      a.__renderTransform.ty + l))
                  : (a.__cacheBitmap.__renderTransform.copyFrom(
                      a.__cacheBitmapMatrix,
                    ),
                    a.__cacheBitmap.__renderTransform.invert(),
                    a.__cacheBitmap.__renderTransform.concat(
                      a.__renderTransform,
                    ),
                    (a.__cacheBitmap.__renderTransform.a *= 1 / t),
                    (a.__cacheBitmap.__renderTransform.d *= 1 / t),
                    (a.__cacheBitmap.__renderTransform.tx += n),
                    (a.__cacheBitmap.__renderTransform.ty += l)));
            a.__cacheBitmap.smoothing = this.__allowSmoothing;
            a.__cacheBitmap.__renderable = a.__renderable;
            a.__cacheBitmap.__worldAlpha = a.__worldAlpha;
            a.__cacheBitmap.__worldBlendMode = a.__worldBlendMode;
            a.__cacheBitmap.__worldShader = a.__worldShader;
            a.__cacheBitmap.set_mask(a.__mask);
            if (b) {
              if (
                null == a.__cacheBitmapRenderer ||
                g != a.__cacheBitmapRenderer.__type
              )
                ('opengl' == g
                  ? (a.__cacheBitmapRenderer = new Ta(
                      Ua.__cast(this, Ta).__context3D,
                      a.__cacheBitmapData,
                    ))
                  : (null == a.__cacheBitmapData.image &&
                      ((a.__cacheBitmapData = new Wb(
                        k,
                        m,
                        !0,
                        null != a.opaqueBackground
                          ? -16777216 | a.opaqueBackground
                          : 0,
                      )),
                      (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData)),
                    Ha.convertToCanvas(a.__cacheBitmapData.image),
                    (a.__cacheBitmapRenderer = new ee(
                      a.__cacheBitmapData.image.buffer.__srcContext,
                    ))),
                  (a.__cacheBitmapRenderer.__worldTransform = new wa()),
                  (a.__cacheBitmapRenderer.__worldColorTransform = new Hb()));
              null == a.__cacheBitmapColorTransform &&
                (a.__cacheBitmapColorTransform = new Hb());
              a.__cacheBitmapRenderer.__stage = a.stage;
              a.__cacheBitmapRenderer.__allowSmoothing = this.__allowSmoothing;
              a.__cacheBitmapRenderer.__setBlendMode(10);
              a.__cacheBitmapRenderer.__worldAlpha = 1 / a.__worldAlpha;
              a.__cacheBitmapRenderer.__worldTransform.copyFrom(
                a.__renderTransform,
              );
              a.__cacheBitmapRenderer.__worldTransform.invert();
              a.__cacheBitmapRenderer.__worldTransform.concat(
                a.__cacheBitmapMatrix,
              );
              a.__cacheBitmapRenderer.__worldTransform.tx -= n;
              a.__cacheBitmapRenderer.__worldTransform.ty -= l;
              a.__cacheBitmapRenderer.__worldTransform.scale(t, t);
              a.__cacheBitmapRenderer.__pixelRatio = t;
              a.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(d);
              a.__cacheBitmapRenderer.__worldColorTransform.__invert();
              a.__isCacheBitmapRender = !0;
              if ('opengl' == a.__cacheBitmapRenderer.__type) {
                G = a.__cacheBitmapRenderer;
                z = G.__context3D;
                w = z.__state.renderToTexture;
                D = z.__state.renderToTextureDepthStencil;
                var B = z.__state.renderToTextureAntiAlias,
                  F = z.__state.renderToTextureSurfaceSelector,
                  r = this.__blendMode;
                this.__suspendClipAndMask();
                G.__copyShader(this);
                a.__cacheBitmapData.__setUVRect(z, 0, 0, x, q);
                G.__setRenderTarget(a.__cacheBitmapData);
                null != a.__cacheBitmapData.image &&
                  (a.__cacheBitmapData.__textureVersion =
                    a.__cacheBitmapData.image.version + 1);
                a.__cacheBitmapData.__drawGL(a, G);
                if (c) {
                  var H = !1;
                  p = 0;
                  for (t = a.__filters; p < t.length; )
                    ((n = t[p]), ++p, n.__preserveObject && (H = !0));
                  c = a.__cacheBitmapData;
                  l = null;
                  null == a.__cacheBitmapData2 ||
                  k > a.__cacheBitmapData2.width ||
                  m > a.__cacheBitmapData2.height
                    ? (a.__cacheBitmapData2 = new Wb(k, m, !0, 0))
                    : (a.__cacheBitmapData2.fillRect(
                        a.__cacheBitmapData2.rect,
                        0,
                      ),
                      null != a.__cacheBitmapData2.image &&
                        (a.__cacheBitmapData2.__textureVersion =
                          a.__cacheBitmapData2.image.version + 1));
                  a.__cacheBitmapData2.__setUVRect(z, 0, 0, x, q);
                  g = a.__cacheBitmapData2;
                  H &&
                    (null == a.__cacheBitmapData3 ||
                    k > a.__cacheBitmapData3.width ||
                    m > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new Wb(k, m, !0, 0))
                      : (a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                        null != a.__cacheBitmapData3.image &&
                          (a.__cacheBitmapData3.__textureVersion =
                            a.__cacheBitmapData3.image.version + 1)),
                    a.__cacheBitmapData3.__setUVRect(z, 0, 0, x, q),
                    (l = a.__cacheBitmapData3));
                  G.__setBlendMode(10);
                  G.__worldAlpha = 1;
                  G.__worldTransform.identity();
                  G.__worldColorTransform.__identity();
                  p = 0;
                  for (t = a.__filters; p < t.length; ) {
                    n = t[p];
                    ++p;
                    n.__preserveObject &&
                      (G.__setRenderTarget(l),
                      G.__renderFilterPass(
                        c,
                        G.__defaultDisplayShader,
                        n.__smooth,
                      ));
                    m = 0;
                    for (x = n.__numShaderPasses; m < x; )
                      ((k = m++),
                        (k = n.__initShader(
                          G,
                          k,
                          n.__preserveObject ? l : null,
                        )),
                        G.__setBlendMode(n.__shaderBlendMode),
                        G.__setRenderTarget(g),
                        G.__renderFilterPass(c, k, n.__smooth),
                        (k = c),
                        (c = g),
                        (g = k));
                    n.__renderDirty = !1;
                  }
                  a.__cacheBitmap.__bitmapData = c;
                }
                this.__blendMode = 10;
                this.__setBlendMode(r);
                this.__copyShader(G);
                null != w
                  ? z.setRenderToTexture(w, D, B, F)
                  : z.setRenderToBackBuffer();
                this.__resumeClipAndMask(G);
                this.setViewport();
                a.__cacheBitmapColorTransform.__copyFrom(d);
              } else {
                a.__cacheBitmapData.__drawCanvas(a, a.__cacheBitmapRenderer);
                if (c) {
                  H = x = !1;
                  p = 0;
                  for (t = a.__filters; p < t.length; )
                    ((n = t[p]),
                      ++p,
                      n.__needSecondBitmapData && (x = !0),
                      n.__preserveObject && (H = !0));
                  c = a.__cacheBitmapData;
                  l = null;
                  x
                    ? (null == a.__cacheBitmapData2 ||
                      null == a.__cacheBitmapData2.image ||
                      k > a.__cacheBitmapData2.width ||
                      m > a.__cacheBitmapData2.height
                        ? (a.__cacheBitmapData2 = new Wb(k, m, !0, 0))
                        : a.__cacheBitmapData2.fillRect(
                            a.__cacheBitmapData2.rect,
                            0,
                          ),
                      (g = a.__cacheBitmapData2))
                    : (g = c);
                  H &&
                    (null == a.__cacheBitmapData3 ||
                    null == a.__cacheBitmapData3.image ||
                    k > a.__cacheBitmapData3.width ||
                    m > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new Wb(k, m, !0, 0))
                      : a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                    (l = a.__cacheBitmapData3));
                  null == a.__tempPoint && (a.__tempPoint = new K());
                  m = a.__tempPoint;
                  p = 0;
                  for (t = a.__filters; p < t.length; )
                    ((n = t[p]),
                      ++p,
                      n.__preserveObject && l.copyPixels(c, c.rect, m),
                      (k = n.__applyFilter(g, c, c.rect, m)),
                      n.__preserveObject &&
                        k.draw(
                          l,
                          null,
                          null != a.__objectTransform
                            ? a.__objectTransform.__colorTransform
                            : null,
                        ),
                      (n.__renderDirty = !1),
                      x && k == g && ((k = c), (c = g), (g = k)));
                  a.__cacheBitmapData != c &&
                    ((k = a.__cacheBitmapData),
                    (a.__cacheBitmapData = c),
                    (a.__cacheBitmapData2 = k),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null));
                  a.__cacheBitmap.__imageVersion =
                    a.__cacheBitmapData.__textureVersion;
                }
                a.__cacheBitmapColorTransform.__copyFrom(d);
                a.__cacheBitmapColorTransform.__isDefault(!0) ||
                  ((a.__cacheBitmapColorTransform.alphaMultiplier = 1),
                  a.__cacheBitmapData.colorTransform(
                    a.__cacheBitmapData.rect,
                    a.__cacheBitmapColorTransform,
                  ));
              }
              a.__isCacheBitmapRender = !1;
            }
            (h || b) && qa.__pool.release(f);
            f = h;
          } else
            null != a.__cacheBitmap &&
              ('dom' == this.__type &&
                this.__renderDrawableClear(a.__cacheBitmap),
              (a.__cacheBitmap = null),
              (a.__cacheBitmapData = null),
              (a.__cacheBitmapData2 = null),
              (a.__cacheBitmapData3 = null),
              (a.__cacheBitmapColorTransform = null),
              (a.__cacheBitmapRenderer = null),
              (f = !0));
          Hb.__pool.release(d);
          f &&
            7 == a.__drawableType &&
            ((d = a),
            null != d.__cacheBitmap &&
              ((d.__cacheBitmap.__renderTransform.tx -= d.__offsetX),
              (d.__cacheBitmap.__renderTransform.ty -= d.__offsetY)));
          return f;
        },
        __class__: Sc,
      });
      var Hh = function (a) {
        Sc.call(this);
      };
      g['openfl.display.CairoRenderer'] = Hh;
      Hh.__name__ = 'openfl.display.CairoRenderer';
      Hh.__super__ = Sc;
      Hh.prototype = u(Sc.prototype, {
        applyMatrix: function (a, b) {
          null == b && (b = this.cairo);
          this.__matrix.copyFrom(a);
          this.cairo == b &&
            null != this.__worldTransform &&
            this.__matrix.concat(this.__worldTransform);
          this.__matrix3[0] = this.__matrix.a;
          this.__matrix3[1] = this.__matrix.b;
          this.__matrix3[3] = this.__matrix.c;
          this.__matrix3[4] = this.__matrix.d;
          this.__roundPixels
            ? ((this.__matrix3[6] = Math.round(this.__matrix.tx)),
              (this.__matrix3[7] = Math.round(this.__matrix.ty)))
            : ((this.__matrix3[6] = this.__matrix.tx),
              (this.__matrix3[7] = this.__matrix.ty));
          b.set_matrix(this.__matrix3);
        },
        __clear: function () {
          if (
            null != this.cairo &&
            (this.cairo.identityMatrix(),
            null != this.__stage && this.__stage.__clearBeforeRender)
          ) {
            var a = this.__blendMode;
            this.__setBlendMode(10);
            this.cairo.setSourceRGB(
              this.__stage.__colorSplit[0],
              this.__stage.__colorSplit[1],
              this.__stage.__colorSplit[2],
            );
            this.cairo.paint();
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.cairo.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.cairo.restore();
        },
        __pushMask: function (a) {
          this.cairo.save();
          this.applyMatrix(a.__renderTransform, this.cairo);
          this.cairo.newPath();
          this.__renderDrawableMask(a);
          this.cairo.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.cairo.save();
          this.applyMatrix(b, this.cairo);
          this.cairo.newPath();
          this.cairo.rectangle(a.x, a.y, a.width, a.height);
          this.cairo.clip();
        },
        __render: function (a) {
          null != this.cairo && this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 6:
                !a.__renderable ||
                  0 >= a.__worldAlpha ||
                  null == a.__currentState ||
                  (this.__pushMaskObject(a),
                  this.__renderDrawable(a.__currentState),
                  this.__popMaskObject(a),
                  this.__renderEvent(a));
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                this.cairo.rectangle(0, 0, a.get_width(), a.get_height());
                break;
              case 6:
                this.__renderDrawableMask(a.__currentState);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a), this.__setBlendModeCairo(this.cairo, a));
        },
        __setBlendModeCairo: function (a, b) {
          switch (b) {
            case 0:
              a.setOperator(12);
              break;
            case 2:
              a.setOperator(17);
              break;
            case 3:
              a.setOperator(23);
              break;
            case 5:
              a.setOperator(21);
              break;
            case 7:
              a.setOperator(2);
              break;
            case 8:
              a.setOperator(18);
              break;
            case 9:
              a.setOperator(14);
              break;
            case 11:
              a.setOperator(16);
              break;
            case 12:
              a.setOperator(15);
              break;
            default:
              a.setOperator(2);
          }
        },
        __class__: Hh,
      });
      var ee = function (a) {
        Sc.call(this);
        this.context = a;
        this.__tempMatrix = new wa();
        this.__type = 'canvas';
      };
      g['openfl.display.CanvasRenderer'] = ee;
      ee.__name__ = 'openfl.display.CanvasRenderer';
      ee.__super__ = Sc;
      ee.prototype = u(Sc.prototype, {
        applySmoothing: function (a, b) {
          a.imageSmoothingEnabled = b;
        },
        setTransform: function (a, b) {
          null == b
            ? (b = this.context)
            : this.context == b &&
              null != this.__worldTransform &&
              (this.__tempMatrix.copyFrom(a),
              this.__tempMatrix.concat(this.__worldTransform),
              (a = this.__tempMatrix));
          this.__roundPixels
            ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0)
            : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
        },
        __clear: function () {
          if (null != this.__stage) {
            var a = this.__blendMode;
            this.__blendMode = null;
            this.__setBlendMode(10);
            this.context.setTransform(1, 0, 0, 1, 0, 0);
            this.context.globalAlpha = 1;
            !this.__stage.__transparent && this.__stage.__clearBeforeRender
              ? ((this.context.fillStyle = this.__stage.__colorString),
                this.context.fillRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                ))
              : this.__stage.__transparent &&
                this.__stage.__clearBeforeRender &&
                this.context.clearRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                );
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.context.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.context.restore();
        },
        __pushMask: function (a) {
          this.context.save();
          this.setTransform(a.__renderTransform, this.context);
          this.context.beginPath();
          this.__renderDrawableMask(a);
          this.context.closePath();
          this.context.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.context.save();
          this.setTransform(b, this.context);
          this.context.beginPath();
          this.context.rect(a.x, a.y, a.width, a.height);
          this.context.clip();
        },
        __render: function (a) {
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                Ih.renderDrawable(a, this);
                break;
              case 2:
                sg.renderDrawable(a, this);
                break;
              case 3:
                Se.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                Jh.renderDrawable(a, this);
                break;
              case 6:
                Kh.renderDrawable(a, this);
                break;
              case 7:
                P.renderDrawable(a, this);
                break;
              case 8:
                Te.renderDrawable(a, this);
                break;
              case 9:
                fe.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                Ih.renderDrawableMask(a, this);
                break;
              case 2:
                sg.renderDrawableMask(a, this);
                break;
              case 3:
                Se.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                Jh.renderDrawableMask(a, this);
                break;
              case 6:
                Kh.renderDrawableMask(a, this);
                break;
              case 7:
                P.renderDrawableMask(a, this);
                break;
              case 8:
                Te.renderDrawableMask(a, this);
                break;
              case 9:
                fe.renderDrawableMask(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a),
            this.__setBlendModeContext(this.context, a));
        },
        __setBlendModeContext: function (a, b) {
          switch (b) {
            case 0:
              a.globalCompositeOperation = 'lighter';
              break;
            case 2:
              a.globalCompositeOperation = 'darken';
              break;
            case 3:
              a.globalCompositeOperation = 'difference';
              break;
            case 5:
              a.globalCompositeOperation = 'hard-light';
              break;
            case 8:
              a.globalCompositeOperation = 'lighten';
              break;
            case 9:
              a.globalCompositeOperation = 'multiply';
              break;
            case 11:
              a.globalCompositeOperation = 'overlay';
              break;
            case 12:
              a.globalCompositeOperation = 'screen';
              break;
            default:
              a.globalCompositeOperation = 'source-over';
          }
        },
        __class__: ee,
      });
      var mk = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'none';
              case 1:
                return 'round';
              case 2:
                return 'square';
              default:
                return null;
            }
          },
        },
        Lh = function (a) {
          S.call(this);
          this.__drawableType = 10;
          this.__element = a;
        };
      g['openfl.display.DOMElement'] = Lh;
      Lh.__name__ = 'openfl.display.DOMElement';
      Lh.__super__ = S;
      Lh.prototype = u(S.prototype, { __class__: Lh });
      var tg = function (a) {
        Sc.call(this);
        this.element = a;
        S.__supportDOM = !0;
        a = window.getComputedStyle(document.documentElement, '');
        a = (Array.prototype.slice
          .call(a)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === a.OLink && ['', 'o']))[1];
        'WebKit|Moz|MS|O'.match(new RegExp('(' + a + ')', 'i'));
        a[0].toUpperCase();
        a.substr(1);
        this.__vendorPrefix = a;
        this.__transformProperty =
          'webkit' == a ? '-webkit-transform' : 'transform';
        this.__transformOriginProperty =
          'webkit' == a ? '-webkit-transform-origin' : 'transform-origin';
        this.__clipRects = [];
        this.__z = this.__numClipRects = 0;
        this.__type = 'dom';
        this.__canvasRenderer = new ee(null);
        this.__canvasRenderer.__isDOM = !0;
      };
      g['openfl.display.DOMRenderer'] = tg;
      tg.__name__ = 'openfl.display.DOMRenderer';
      tg.__super__ = Sc;
      tg.prototype = u(Sc.prototype, {
        __applyStyle: function (a, b, c, d) {
          var f = a.__style;
          if (b && a.__renderTransformChanged) {
            b = a.__renderTransform;
            var h = this.__roundPixels;
            null == h && (h = !1);
            f.setProperty(
              this.__transformProperty,
              h
                ? 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    (b.tx | 0) +
                    ', ' +
                    (b.ty | 0) +
                    ', 0, 1)'
                : 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    b.tx +
                    ', ' +
                    b.ty +
                    ', 0, 1)',
              null,
            );
          }
          a.__worldZ != ++this.__z &&
            ((a.__worldZ = this.__z),
            f.setProperty(
              'z-index',
              null == a.__worldZ ? 'null' : '' + a.__worldZ,
              null,
            ));
          c &&
            a.__worldAlphaChanged &&
            (1 > a.__worldAlpha
              ? f.setProperty(
                  'opacity',
                  null == a.__worldAlpha ? 'null' : '' + a.__worldAlpha,
                  null,
                )
              : f.removeProperty('opacity'));
          d &&
            a.__worldClipChanged &&
            (null == a.__worldClip
              ? f.removeProperty('clip')
              : ((a = a.__worldClip),
                f.setProperty(
                  'clip',
                  'rect(' +
                    a.y +
                    'px, ' +
                    a.get_right() +
                    'px, ' +
                    a.get_bottom() +
                    'px, ' +
                    a.x +
                    'px)',
                  null,
                )));
        },
        __initializeElement: function (a, b) {
          var c = (a.__style = b.style);
          c.setProperty('position', 'absolute', null);
          c.setProperty('top', '0', null);
          c.setProperty('left', '0', null);
          c.setProperty(this.__transformOriginProperty, '0 0 0', null);
          this.element.appendChild(b);
          a.__worldAlphaChanged = !0;
          a.__renderTransformChanged = !0;
          a.__worldVisibleChanged = !0;
          a.__worldClipChanged = !0;
          a.__worldClip = null;
          a.__worldZ = -1;
        },
        __popMask: function () {
          this.__popMaskRect();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            (this.__currentClipRect =
              0 < this.__numClipRects
                ? this.__clipRects[this.__numClipRects - 1]
                : null));
        },
        __pushMask: function (a) {
          this.__pushMaskRect(a.getBounds(a), a.__renderTransform);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new qa());
          var c = this.__clipRects[this.__numClipRects];
          a.__transform(c, b);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            c.__contract(a.x, a.y, a.width, a.height));
          0 > c.height && (c.height = 0);
          0 > c.width && (c.width = 0);
          this.__currentClipRect = c;
          this.__numClipRects++;
        },
        __render: function (a) {
          this.element.style.background = this.__stage.__transparent
            ? 'none'
            : this.__stage.__colorString;
          this.__z = 1;
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Nb.renderDrawable(a, this);
                break;
              case 3:
                Tc.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                Mh.renderDrawable(a, this);
                break;
              case 6:
                Nh.renderDrawable(a, this);
                break;
              case 7:
                Be.renderDrawable(a, this);
                break;
              case 8:
                ge.renderDrawable(a, this);
                break;
              case 9:
                Ce.renderDrawable(a, this);
                break;
              case 10:
                (null != a.stage && a.__worldVisible && a.__renderable
                  ? (a.__active ||
                      (this.__initializeElement(a, a.__element),
                      (a.__active = !0)),
                    this.__updateClip(a),
                    this.__applyStyle(a, !0, !0, !0))
                  : a.__active &&
                    (this.element.removeChild(a.__element), (a.__active = !1)),
                  Tc.renderDrawable(a, this));
            }
        },
        __renderDrawableClear: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Nb.renderDrawableClear(a, this);
                break;
              case 3:
                Tc.renderDrawableClear(a, this);
                break;
              case 4:
              case 5:
                Mh.renderDrawableClear(a, this);
                break;
              case 6:
                Nh.renderDrawableClear(a, this);
                break;
              case 7:
                Be.renderDrawableClear(a, this);
                break;
              case 8:
                ge.renderDrawableClear(a, this);
                break;
              case 9:
                Ce.renderDrawableClear(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a);
        },
        __updateClip: function (a) {
          if (null == this.__currentClipRect)
            ((a.__worldClipChanged = null != a.__worldClip),
              (a.__worldClip = null));
          else {
            null == a.__worldClip && (a.__worldClip = new qa());
            var b = qa.__pool.get(),
              c = wa.__pool.get();
            c.copyFrom(a.__renderTransform);
            c.invert();
            this.__currentClipRect.__transform(b, c);
            b.equals(a.__worldClip)
              ? (a.__worldClipChanged = !1)
              : (a.__worldClip.copyFrom(b), (a.__worldClipChanged = !0));
            qa.__pool.release(b);
            wa.__pool.release(c);
          }
        },
        __class__: tg,
      });
      var dd = function (a) {
        this.byteCode = a;
        this.precisionHint = 1;
        this.__glSourceDirty = !0;
        this.__numPasses = 1;
        this.__data = ak._new(a);
      };
      g['openfl.display.Shader'] = dd;
      dd.__name__ = 'openfl.display.Shader';
      dd.prototype = {
        __clearUseArray: function () {
          for (var a = 0, b = this.__paramBool; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__useArray = !1;
          }
          a = 0;
          for (b = this.__paramFloat; a < b.length; )
            ((c = b[a]), ++a, (c.__useArray = !1));
          a = 0;
          for (b = this.__paramInt; a < b.length; )
            ((c = b[a]), ++a, (c.__useArray = !1));
        },
        __createGLShader: function (a, b) {
          var c = this.__context.gl,
            d = c.createShader(b);
          c.shaderSource(d, a);
          c.compileShader(d);
          var f = c.getShaderInfoLog(d),
            h = null != f && '' != M.trim(f),
            k = c.getShaderParameter(d, c.COMPILE_STATUS);
          if (h || 0 == k)
            ((b =
              (0 == k ? 'Error' : 'Info') +
              (b == c.VERTEX_SHADER
                ? ' compiling vertex shader'
                : ' compiling fragment shader')),
              (b = b + ('\n' + f) + ('\n' + a)),
              0 == k
                ? Na.error(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 337,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  })
                : h &&
                  Na.debug(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 338,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  }));
          return d;
        },
        __createGLProgram: function (a, b) {
          var c = this.__context.gl;
          a = this.__createGLShader(a, c.VERTEX_SHADER);
          var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
          b = c.createProgram();
          for (var f = 0, h = this.__paramFloat; f < h.length; ) {
            var k = h[f];
            ++f;
            if (
              -1 < k.name.indexOf('Position') &&
              M.startsWith(k.name, 'openfl_')
            ) {
              c.bindAttribLocation(b, 0, k.name);
              break;
            }
          }
          c.attachShader(b, a);
          c.attachShader(b, d);
          c.linkProgram(b);
          0 == c.getProgramParameter(b, c.LINK_STATUS) &&
            ((c =
              'Unable to initialize the shader program\n' +
              c.getProgramInfoLog(b)),
            Na.error(c, {
              fileName: 'openfl/display/Shader.hx',
              lineNumber: 371,
              className: 'openfl.display.Shader',
              methodName: '__createGLProgram',
            }));
          return b;
        },
        __disable: function () {
          null != this.program && this.__disableGL();
        },
        __disableGL: function () {
          for (
            var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f.__disableGL(this.__context, b);
            ++b;
            if (b == a.MAX_TEXTURE_IMAGE_UNITS) break;
          }
          c = 0;
          for (d = this.__paramBool; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          c = 0;
          for (d = this.__paramFloat; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          c = 0;
          for (d = this.__paramInt; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          this.__context.__bindGLArrayBuffer(null);
          'opengl' == this.__context.__context.type && a.disable(a.TEXTURE_2D);
        },
        __enable: function () {
          this.__init();
          null != this.program && this.__enableGL();
        },
        __enableGL: function () {
          for (
            var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            b.uniform1i(f.index, a);
            ++a;
          }
          'opengl' == this.__context.__context.type &&
            0 < a &&
            b.enable(b.TEXTURE_2D);
        },
        __init: function () {
          null == this.__data && (this.__data = ak._new(null));
          null == this.__glFragmentSource ||
            null == this.__glVertexSource ||
            (null != this.program && !this.__glSourceDirty) ||
            this.__initGL();
        },
        __initGL: function () {
          if (this.__glSourceDirty || null == this.__paramBool)
            ((this.__glSourceDirty = !1),
              (this.program = null),
              (this.__inputBitmapData = []),
              (this.__paramBool = []),
              (this.__paramFloat = []),
              (this.__paramInt = []),
              this.__processGLData(this.get_glVertexSource(), 'attribute'),
              this.__processGLData(this.get_glVertexSource(), 'uniform'),
              this.__processGLData(this.get_glFragmentSource(), 'uniform'));
          if (null != this.__context && null == this.program) {
            var a = this.__context.gl,
              b =
                1 == this.precisionHint
                  ? 'precision mediump float;\n'
                  : 'precision lowp float;\n',
              c = b + this.get_glVertexSource();
            b += this.get_glFragmentSource();
            var d = c + b;
            Object.prototype.hasOwnProperty.call(this.__context.__programs.h, d)
              ? (this.program = this.__context.__programs.h[d])
              : ((this.program = this.__context.createProgram(1)),
                (this.program.__glProgram = this.__createGLProgram(c, b)),
                (this.__context.__programs.h[d] = this.program));
            if (null != this.program) {
              this.glProgram = this.program.__glProgram;
              c = 0;
              for (b = this.__inputBitmapData; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramBool; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramFloat; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramInt; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
            }
          }
        },
        __processGLData: function (a, b) {
          var c = 0,
            d;
          for (
            d =
              'uniform' == b
                ? new xa('uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '')
                : new xa('attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '');
            d.matchSub(a, c);

          ) {
            var f = d.matched(1);
            var h = d.matched(2);
            if (!M.startsWith(h, 'gl_')) {
              c = 'uniform' == b;
              if (M.startsWith(f, 'sampler')) {
                f = new Oh();
                f.name = h;
                f.__isUniform = c;
                this.__inputBitmapData.push(f);
                switch (h) {
                  case 'bitmap':
                    this.__bitmap = f;
                    break;
                  case 'openfl_Texture':
                    this.__texture = f;
                }
                this.__data[h] = f;
                this.__isGenerated && (this[h] = f);
              } else if (
                !Object.prototype.hasOwnProperty.call(this.__data, h) ||
                null == ya.field(this.__data, h)
              ) {
                switch (f) {
                  case 'bool':
                    var k = 0;
                    break;
                  case 'bvec2':
                    k = 1;
                    break;
                  case 'bvec3':
                    k = 2;
                    break;
                  case 'bvec4':
                    k = 3;
                    break;
                  case 'dvec2':
                  case 'vec2':
                    k = 5;
                    break;
                  case 'dvec3':
                  case 'vec3':
                    k = 6;
                    break;
                  case 'dvec4':
                  case 'vec4':
                    k = 7;
                    break;
                  case 'double':
                  case 'float':
                    k = 4;
                    break;
                  case 'mat2':
                  case 'mat2x2':
                    k = 12;
                    break;
                  case 'mat2x3':
                    k = 13;
                    break;
                  case 'mat2x4':
                    k = 14;
                    break;
                  case 'mat3x2':
                    k = 15;
                    break;
                  case 'mat3':
                  case 'mat3x3':
                    k = 16;
                    break;
                  case 'mat3x4':
                    k = 17;
                    break;
                  case 'mat4x2':
                    k = 18;
                    break;
                  case 'mat4x3':
                    k = 19;
                    break;
                  case 'mat4':
                  case 'mat4x4':
                    k = 20;
                    break;
                  case 'int':
                  case 'uint':
                    k = 8;
                    break;
                  case 'ivec2':
                  case 'uvec2':
                    k = 9;
                    break;
                  case 'ivec3':
                  case 'uvec3':
                    k = 10;
                    break;
                  case 'ivec4':
                  case 'uvec4':
                    k = 11;
                    break;
                  default:
                    k = null;
                }
                switch (k) {
                  case 1:
                  case 5:
                  case 9:
                    f = 2;
                    break;
                  case 2:
                  case 6:
                  case 10:
                    f = 3;
                    break;
                  case 3:
                  case 7:
                  case 11:
                  case 12:
                    f = 4;
                    break;
                  case 16:
                    f = 9;
                    break;
                  case 20:
                    f = 16;
                    break;
                  default:
                    f = 1;
                }
                switch (k) {
                  case 12:
                    var g = 2;
                    break;
                  case 16:
                    g = 3;
                    break;
                  case 20:
                    g = 4;
                    break;
                  default:
                    g = 1;
                }
                switch (k) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                    var p = new Ef();
                    p.set_name(h);
                    p.type = k;
                    p.__arrayLength = g;
                    p.__isBool = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramBool.push(p);
                    'openfl_HasColorTransform' == h &&
                      (this.__hasColorTransform = p);
                    this.__data[h] = p;
                    this.__isGenerated && (this[h] = p);
                    break;
                  case 8:
                  case 9:
                  case 10:
                  case 11:
                    p = new Ef();
                    p.set_name(h);
                    p.type = k;
                    p.__arrayLength = g;
                    p.__isInt = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramInt.push(p);
                    this.__data[h] = p;
                    this.__isGenerated && (this[h] = p);
                    break;
                  default:
                    p = new Ef();
                    p.set_name(h);
                    p.type = k;
                    p.__arrayLength = g;
                    0 < g &&
                      ((k = g * g),
                      (k = null != k ? new Float32Array(k) : null),
                      (p.__uniformMatrix = k));
                    p.__isFloat = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramFloat.push(p);
                    if (M.startsWith(h, 'openfl_'))
                      switch (h) {
                        case 'openfl_Alpha':
                          this.__alpha = p;
                          break;
                        case 'openfl_ColorMultiplier':
                          this.__colorMultiplier = p;
                          break;
                        case 'openfl_ColorOffset':
                          this.__colorOffset = p;
                          break;
                        case 'openfl_Matrix':
                          this.__matrix = p;
                          break;
                        case 'openfl_Position':
                          this.__position = p;
                          break;
                        case 'openfl_TextureCoord':
                          this.__textureCoord = p;
                          break;
                        case 'openfl_TextureSize':
                          this.__textureSize = p;
                      }
                    this.__data[h] = p;
                    this.__isGenerated && (this[h] = p);
                }
              }
              h = d.matchedPos();
              c = h.pos + h.len;
            }
          }
        },
        __update: function () {
          null != this.program && this.__updateGL();
        },
        __updateFromBuffer: function (a, b) {
          null != this.program && this.__updateGLFromBuffer(a, b);
        },
        __updateGL: function () {
          for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__updateGL(this.__context, a);
            ++a;
          }
          b = 0;
          for (c = this.__paramBool; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (c = this.__paramFloat; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (c = this.__paramInt; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
        },
        __updateGLFromBuffer: function (a, b) {
          for (var c = 0, d, f, h, k, g, p = 0, t = a.inputCount; p < t; )
            ((g = p++),
              (d = a.inputRefs[g]),
              (f = a.inputs[g]),
              (h = a.inputFilter[g]),
              (k = a.inputMipFilter[g]),
              (g = a.inputWrap[g]),
              null != f && (d.__updateGL(this.__context, c, f, h, k, g), ++c));
          p = this.__context.gl;
          0 < a.paramDataLength
            ? (null == a.paramDataBuffer &&
                (a.paramDataBuffer = p.createBuffer()),
              this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
              wc.bufferData(p, p.ARRAY_BUFFER, a.paramData, p.DYNAMIC_DRAW))
            : this.__context.__bindGLArrayBuffer(null);
          f = d = c = 0;
          h = a.paramBoolCount;
          k = a.paramFloatCount;
          var n = a.paramData,
            m = null,
            x = null,
            q = null;
          p = 0;
          for (t = a.paramCount; p < t; ) {
            g = p++;
            var l = !1;
            if (g < h) {
              var G = a.paramRefs_Bool[c];
              for (var z = 0, w = a.overrideBoolCount; z < w; ) {
                var D = z++;
                if (G.name == a.overrideBoolNames[D]) {
                  m = a.overrideBoolValues[D];
                  l = !0;
                  break;
                }
              }
              l
                ? G.__updateGL(this.__context, m)
                : G.__updateGLFromBuffer(
                    this.__context,
                    n,
                    a.paramPositions[g],
                    a.paramLengths[g],
                    b,
                  );
              ++c;
            } else if (g < h + k) {
              G = a.paramRefs_Float[d];
              z = 0;
              for (w = a.overrideFloatCount; z < w; )
                if (((D = z++), G.name == a.overrideFloatNames[D])) {
                  x = a.overrideFloatValues[D];
                  l = !0;
                  break;
                }
              l
                ? G.__updateGL(this.__context, x)
                : G.__updateGLFromBuffer(
                    this.__context,
                    n,
                    a.paramPositions[g],
                    a.paramLengths[g],
                    b,
                  );
              ++d;
            } else {
              G = a.paramRefs_Int[f];
              z = 0;
              for (w = a.overrideIntCount; z < w; )
                if (((D = z++), G.name == a.overrideIntNames[D])) {
                  q = a.overrideIntValues[D];
                  l = !0;
                  break;
                }
              l
                ? G.__updateGL(this.__context, q)
                : G.__updateGLFromBuffer(
                    this.__context,
                    n,
                    a.paramPositions[g],
                    a.paramLengths[g],
                    b,
                  );
              ++f;
            }
          }
        },
        get_glFragmentSource: function () {
          return this.__glFragmentSource;
        },
        get_glVertexSource: function () {
          return this.__glVertexSource;
        },
        __class__: dd,
        __properties__: {
          get_glVertexSource: 'get_glVertexSource',
          get_glFragmentSource: 'get_glFragmentSource',
        },
      };
      var Ph = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        dd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.display.DisplayObjectShader'] = Ph;
      Ph.__name__ = 'openfl.display.DisplayObjectShader';
      Ph.__super__ = dd;
      Ph.prototype = u(dd.prototype, { __class__: Ph });
      var jj = function (a, b) {
        ma.call(this);
        this.name = a;
        this.frame = b;
      };
      g['openfl.display.FrameLabel'] = jj;
      jj.__name__ = 'openfl.display.FrameLabel';
      jj.__super__ = ma;
      jj.prototype = u(ma.prototype, { __class__: jj });
      var ed = function (a) {
        this.__dirty = !0;
        this.__owner = a;
        this.__commands = new Uc();
        this.__positionY = this.__positionX = this.__strokePadding = 0;
        this.__renderTransform = new wa();
        this.__usedShaderBuffers = new Ya();
        this.__worldTransform = new wa();
        this.__height = this.__width = 0;
        this.__bitmapScale = 1;
        this.__shaderBufferPool = new pb(function () {
          return new Qh();
        });
        this.moveTo(0, 0);
      };
      g['openfl.display.Graphics'] = ed;
      ed.__name__ = 'openfl.display.Graphics';
      ed.prototype = {
        beginFill: function (a, b) {
          null == b && (b = 1);
          null == a && (a = 0);
          this.__commands.beginFill(a & 16777215, b);
          0 < b && (this.__visible = !0);
        },
        beginGradientFill: function (a, b, c, d, f, h, k, g) {
          null == g && (g = 0);
          null == k && (k = 1);
          null == h && (h = 0);
          if (null != b && 0 != b.length) {
            if (null == c) {
              c = [];
              for (var p = 0, v = b.length; p < v; ) (p++, c.push(1));
            }
            if (null == d)
              for (d = [], p = 0, v = b.length; p < v; ) {
                var t = p++;
                d.push(Math.ceil((t / (b.length - 1)) * 255));
              }
            if (!(c.length < b.length || d.length < b.length))
              for (
                this.__commands.beginGradientFill(a, b, c, d, f, h, k, g),
                  p = 0;
                p < c.length;

              )
                if (((a = c[p]), ++p, 0 < a)) {
                  this.__visible = !0;
                  break;
                }
          }
        },
        clear: function () {
          for (var a = this.__usedShaderBuffers.h; null != a; ) {
            var b = a.item;
            a = a.next;
            this.__shaderBufferPool.release(b);
          }
          this.__usedShaderBuffers.clear();
          this.__commands.clear();
          this.__strokePadding = 0;
          null != this.__bounds &&
            (this.set___dirty(!0),
            (this.__transformDirty = !0),
            (this.__bounds = null));
          this.__visible = !1;
          this.__positionY = this.__positionX = 0;
          this.moveTo(0, 0);
        },
        curveTo: function (a, b, c, d) {
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          var f =
            (a < c && a > this.__positionX) || (a > c && a < this.__positionX)
              ? c
              : this.__calculateBezierQuadPoint(
                  (this.__positionX - a) / (this.__positionX - 2 * a + c),
                  this.__positionX,
                  a,
                  c,
                );
          var h =
            (b < d && b > this.__positionY) || (b > d && b < this.__positionY)
              ? d
              : this.__calculateBezierQuadPoint(
                  (this.__positionY - b) / (this.__positionY - 2 * b + d),
                  this.__positionY,
                  b,
                  d,
                );
          this.__inflateBounds(
            f - this.__strokePadding,
            h - this.__strokePadding,
          );
          this.__inflateBounds(
            f + this.__strokePadding,
            h + this.__strokePadding,
          );
          this.__positionX = c;
          this.__positionY = d;
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          this.__commands.curveTo(a, b, c, d);
          this.set___dirty(!0);
        },
        drawCircle: function (a, b, c) {
          0 >= c ||
            (this.__inflateBounds(
              a - c - this.__strokePadding,
              b - c - this.__strokePadding,
            ),
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + c + this.__strokePadding,
            ),
            this.__commands.drawCircle(a, b, c),
            this.set___dirty(!0));
        },
        drawRect: function (a, b, c, d) {
          if (0 != c || 0 != d) {
            var f = 0 > c ? -1 : 1,
              h = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * f,
              b - this.__strokePadding * h,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * f,
              b + d + this.__strokePadding * h,
            );
            this.__commands.drawRect(a, b, c, d);
            this.set___dirty(!0);
          }
        },
        drawRoundRect: function (a, b, c, d, f, h) {
          if (0 != c || 0 != d) {
            var k = 0 > c ? -1 : 1,
              g = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * k,
              b - this.__strokePadding * g,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * k,
              b + d + this.__strokePadding * g,
            );
            this.__commands.drawRoundRect(a, b, c, d, f, h);
            this.set___dirty(!0);
          }
        },
        drawRoundRectComplex: function (a, b, c, d, f, h, k, g) {
          if (!(0 >= c || 0 >= d)) {
            this.__inflateBounds(
              a - this.__strokePadding,
              b - this.__strokePadding,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + d + this.__strokePadding,
            );
            var p = a + c,
              v = b + d;
            c = c < d ? 2 * c : 2 * d;
            f < c || (f = c);
            h < c || (h = c);
            k < c || (k = c);
            g < c || (g = c);
            c = 1 - Math.sin((Math.PI / 180) * 45);
            d = 1 - Math.tan((Math.PI / 180) * 22.5);
            var t = g * c,
              m = g * d;
            this.moveTo(p, v - g);
            this.curveTo(p, v - m, p - t, v - t);
            this.curveTo(p - m, v, p - g, v);
            t = k * c;
            m = k * d;
            this.lineTo(a + k, v);
            this.curveTo(a + m, v, a + t, v - t);
            this.curveTo(a, v - m, a, v - k);
            t = f * c;
            m = f * d;
            this.lineTo(a, b + f);
            this.curveTo(a, b + m, a + t, b + t);
            this.curveTo(a + m, b, a + f, b);
            t = h * c;
            m = h * d;
            this.lineTo(p - h, b);
            this.curveTo(p - m, b, p - t, b + t);
            this.curveTo(p, b + m, p, b + h);
            this.lineTo(p, v - g);
            this.set___dirty(!0);
          }
        },
        endFill: function () {
          this.__commands.endFill();
        },
        lineStyle: function (a, b, c, d, f, h, k, g) {
          null == g && (g = 3);
          null == f && (f = 2);
          null == d && (d = !1);
          null == c && (c = 1);
          null == b && (b = 0);
          null == h && (h = 1);
          null == k && (k = 2);
          null != a &&
            (1 == k
              ? a > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a))
              : a / 2 > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a / 2)));
          this.__commands.lineStyle(a, b, c, d, f, h, k, g);
          null != a && (this.__visible = !0);
        },
        lineTo: function (a, b) {
          isFinite(a) &&
            isFinite(b) &&
            (this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            (this.__positionX = a),
            (this.__positionY = b),
            this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + 2 * this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            this.__commands.lineTo(a, b),
            this.set___dirty(!0));
        },
        moveTo: function (a, b) {
          this.__positionX = a;
          this.__positionY = b;
          this.__commands.moveTo(a, b);
        },
        readGraphicsData: function (a) {
          null == a && (a = !0);
          var b = X.toObjectVector(null);
          this.__owner.__readGraphicsData(b, a);
          return b;
        },
        __calculateBezierQuadPoint: function (a, b, c, d) {
          var f = 1 - a;
          return f * f * b + 2 * f * a * c + a * a * d;
        },
        __cleanup: function () {
          null != this.__bounds &&
            null != this.__canvas &&
            (this.set___dirty(!0), (this.__transformDirty = !0));
          this.__context = this.__canvas = this.__bitmap = null;
        },
        __getBounds: function (a, b) {
          if (null != this.__bounds) {
            var c = qa.__pool.get();
            this.__bounds.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            qa.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d) {
          if (null == this.__bounds) return !1;
          var f = d.a * d.d - d.b * d.c,
            h =
              0 == f ? -d.tx : (1 / f) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          f = d.a * d.d - d.b * d.c;
          a = 0 == f ? -d.ty : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a));
          return h > this.__bounds.x &&
            a > this.__bounds.y &&
            this.__bounds.contains(h, a)
            ? c
              ? B.hitTest(this, h, a)
              : !0
            : !1;
        },
        __inflateBounds: function (a, b) {
          null == this.__bounds
            ? ((this.__bounds = new qa(a, b, 0, 0)),
              (this.__transformDirty = !0))
            : (a < this.__bounds.x &&
                ((this.__bounds.width += this.__bounds.x - a),
                (this.__bounds.x = a),
                (this.__transformDirty = !0)),
              b < this.__bounds.y &&
                ((this.__bounds.height += this.__bounds.y - b),
                (this.__bounds.y = b),
                (this.__transformDirty = !0)),
              a > this.__bounds.x + this.__bounds.width &&
                (this.__bounds.width = a - this.__bounds.x),
              b > this.__bounds.y + this.__bounds.height &&
                (this.__bounds.height = b - this.__bounds.y));
        },
        __readGraphicsData: function (a) {
          for (
            var b = new Fd(this.__commands),
              c = null,
              d,
              f = 0,
              h = this.__commands.types;
            f < h.length;

          ) {
            d = h[f];
            ++f;
            switch (d._hx_index) {
              case 4:
              case 5:
              case 6:
              case 7:
              case 9:
              case 10:
              case 17:
              case 18:
                null == c && (c = new Rh());
                break;
              default:
                null != c && (a.push(c), (c = null));
            }
            switch (d._hx_index) {
              case 0:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.BEGIN_BITMAP_FILL;
                d = b;
                a.push(
                  new Sh(
                    d.buffer.o[d.oPos],
                    d.buffer.o[d.oPos + 1],
                    d.buffer.b[d.bPos],
                    d.buffer.b[d.bPos + 1],
                  ),
                );
                break;
              case 1:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.BEGIN_FILL;
                d = b;
                a.push(new ug(d.buffer.i[d.iPos], d.buffer.f[d.fPos]));
                break;
              case 2:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.BEGIN_GRADIENT_FILL;
                d = b;
                a.push(
                  new Th(
                    d.buffer.o[d.oPos],
                    d.buffer.ii[d.iiPos],
                    d.buffer.ff[d.ffPos],
                    d.buffer.ii[d.iiPos + 1],
                    d.buffer.o[d.oPos + 1],
                    d.buffer.o[d.oPos + 2],
                    d.buffer.o[d.oPos + 3],
                    d.buffer.f[d.fPos],
                  ),
                );
                break;
              case 3:
                break;
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.CUBIC_CURVE_TO;
                d = b;
                c.cubicCurveTo(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.f[d.fPos + 5],
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.CURVE_TO;
                d = b;
                c.curveTo(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_CIRCLE;
                d = b;
                c.__drawCircle(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_ELLIPSE;
                d = b;
                c.__drawEllipse(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_RECT;
                d = b;
                c.__drawRect(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_ROUND_RECT;
                d = b;
                c.__drawRoundRect(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  null != d.buffer.o[d.oPos]
                    ? d.buffer.o[d.oPos]
                    : d.buffer.f[d.fPos + 4],
                );
                break;
              case 13:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.END_FILL;
                a.push(new Uh());
                break;
              case 14:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.LINE_BITMAP_STYLE;
                c = null;
                break;
              case 15:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.LINE_GRADIENT_STYLE;
                break;
              case 16:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.LINE_STYLE;
                var k = b;
                d = new Vh(
                  k.buffer.o[k.oPos],
                  k.buffer.b[k.bPos],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.o[k.oPos + 2],
                  k.buffer.o[k.oPos + 3],
                  k.buffer.f[k.fPos + 1],
                );
                d.fill = new ug(k.buffer.i[k.iPos], k.buffer.f[k.fPos]);
                a.push(d);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.LINE_TO;
                d = b;
                c.lineTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.MOVE_TO;
                d = b;
                c.moveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          null != c && a.push(c);
        },
        __update: function (a, b) {
          if (
            !(
              null == this.__bounds ||
              0 >= this.__bounds.width ||
              0 >= this.__bounds.height
            )
          ) {
            var c = this.__owner.__renderTransform;
            if (null != c) {
              var d = b,
                f = b;
              null == this.__owner.__worldScale9Grid &&
                ((d =
                  0 == c.b ? Math.abs(c.a) : Math.sqrt(c.a * c.a + c.b * c.b)),
                (f =
                  0 == c.c ? Math.abs(c.d) : Math.sqrt(c.c * c.c + c.d * c.d)),
                null != a &&
                  ((d =
                    0 == a.b ? d * a.a : d * Math.sqrt(a.a * a.a + a.b * a.b)),
                  (f =
                    0 == a.c
                      ? f * a.d
                      : f * Math.sqrt(a.c * a.c + a.d * a.d))));
              a = this.__bounds.width * d;
              f *= this.__bounds.height;
              if (1 > a || 1 > f)
                ((1 <= this.__width || 1 <= this.__height) &&
                  this.set___dirty(!0),
                  (this.__height = this.__width = 0));
              else {
                null != ed.maxTextureWidth &&
                  a > ed.maxTextureWidth &&
                  (a = ed.maxTextureWidth);
                null != ed.maxTextureWidth &&
                  f > ed.maxTextureHeight &&
                  (f = ed.maxTextureHeight);
                if (null != this.__owner.__worldScale9Grid) {
                  this.__renderTransform.a = b;
                  this.__renderTransform.d = b;
                  d = 1 / b;
                  var h = 1 / b;
                } else
                  ((this.__renderTransform.a = a / this.__bounds.width),
                    (this.__renderTransform.d = f / this.__bounds.height),
                    (d = 1 / this.__renderTransform.a),
                    (h = 1 / this.__renderTransform.d));
                this.__worldTransform.a = d * c.a;
                this.__worldTransform.b = d * c.b;
                this.__worldTransform.c = h * c.c;
                this.__worldTransform.d = h * c.d;
                h = this.__bounds.x;
                var k = this.__bounds.y;
                d = h * c.a + k * c.c + c.tx;
                c = h * c.b + k * c.d + c.ty;
                1 < b
                  ? ((b = 1 / b),
                    (this.__worldTransform.tx = Math.round(d / b) * b),
                    (this.__worldTransform.ty = Math.round(c / b) * b))
                  : ((this.__worldTransform.tx = Math.round(d)),
                    (this.__worldTransform.ty = Math.round(c)));
                b = this.__worldTransform;
                h = b.a * b.d - b.b * b.c;
                this.__renderTransform.tx =
                  0 == h
                    ? -b.tx
                    : (1 / h) * (b.c * (b.ty - c) + b.d * (d - b.tx));
                b = this.__worldTransform;
                h = b.a * b.d - b.b * b.c;
                this.__renderTransform.ty =
                  0 == h
                    ? -b.ty
                    : (1 / h) * (b.a * (c - b.ty) + b.b * (b.tx - d));
                a = Math.ceil(a + 1);
                f = Math.ceil(f + 1);
                (a == this.__width && f == this.__height) ||
                  this.set___dirty(!0);
                this.__width = a;
                this.__height = f;
              }
            }
          }
        },
        set___dirty: function (a) {
          if (a && null != this.__owner) {
            var b = this.__owner;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          a && (this.__hardwareDirty = this.__softwareDirty = !0);
          return (this.__dirty = a);
        },
        __class__: ed,
        __properties__: { set___dirty: 'set___dirty' },
      };
      var vg = function () {};
      g['openfl.display.IGraphicsFill'] = vg;
      vg.__name__ = 'openfl.display.IGraphicsFill';
      vg.__isInterface__ = !0;
      var he = function () {};
      g['openfl.display.IGraphicsData'] = he;
      he.__name__ = 'openfl.display.IGraphicsData';
      he.__isInterface__ = !0;
      he.prototype = { __class__: he };
      var Sh = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !0);
        this.bitmapData = a;
        this.matrix = b;
        this.repeat = c;
        this.smooth = d;
        this.__graphicsDataType = 4;
        this.__graphicsFillType = 2;
      };
      g['openfl.display.GraphicsBitmapFill'] = Sh;
      Sh.__name__ = 'openfl.display.GraphicsBitmapFill';
      Sh.__interfaces__ = [vg, he];
      Sh.prototype = { __class__: Sh };
      var Uh = function () {
        this.__graphicsDataType = 5;
        this.__graphicsFillType = 3;
      };
      g['openfl.display.GraphicsEndFill'] = Uh;
      Uh.__name__ = 'openfl.display.GraphicsEndFill';
      Uh.__interfaces__ = [vg, he];
      Uh.prototype = { __class__: Uh };
      var Th = function (a, b, c, d, f, h, k, g) {
        null == g && (g = 0);
        null == a && (a = 0);
        null == h && (h = 0);
        null == k && (k = 1);
        this.type = a;
        this.colors = b;
        this.alphas = c;
        this.ratios = d;
        this.matrix = f;
        this.spreadMethod = h;
        this.interpolationMethod = k;
        this.focalPointRatio = g;
        this.__graphicsDataType = 2;
        this.__graphicsFillType = 1;
      };
      g['openfl.display.GraphicsGradientFill'] = Th;
      Th.__name__ = 'openfl.display.GraphicsGradientFill';
      Th.__interfaces__ = [vg, he];
      Th.prototype = { __class__: Th };
      var Nj = function () {};
      g['openfl.display.IGraphicsPath'] = Nj;
      Nj.__name__ = 'openfl.display.IGraphicsPath';
      Nj.__isInterface__ = !0;
      var Rh = function (a, b, c) {
        null == c && (c = 0);
        this.commands = a;
        this.data = b;
        this.winding = c;
        this.__graphicsDataType = 3;
      };
      g['openfl.display.GraphicsPath'] = Rh;
      Rh.__name__ = 'openfl.display.GraphicsPath';
      Rh.__interfaces__ = [Nj, he];
      Rh.prototype = {
        cubicCurveTo: function (a, b, c, d, f, h) {
          null == this.commands && (this.commands = X.toIntVector(null));
          null == this.data && (this.data = X.toFloatVector(null));
          this.commands.push(6);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
          this.data.push(f);
          this.data.push(h);
        },
        curveTo: function (a, b, c, d) {
          null == this.commands && (this.commands = X.toIntVector(null));
          null == this.data && (this.data = X.toFloatVector(null));
          this.commands.push(3);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
        },
        lineTo: function (a, b) {
          null == this.commands && (this.commands = X.toIntVector(null));
          null == this.data && (this.data = X.toFloatVector(null));
          this.commands.push(2);
          this.data.push(a);
          this.data.push(b);
        },
        moveTo: function (a, b) {
          null == this.commands && (this.commands = X.toIntVector(null));
          null == this.data && (this.data = X.toFloatVector(null));
          this.commands.push(1);
          this.data.push(a);
          this.data.push(b);
        },
        __drawCircle: function (a, b, c) {
          this.__drawRoundRect(a - c, b - c, 2 * c, 2 * c, 2 * c, 2 * c);
        },
        __drawEllipse: function (a, b, c, d) {
          this.__drawRoundRect(a, b, c, d, c, d);
        },
        __drawRect: function (a, b, c, d) {
          this.moveTo(a, b);
          this.lineTo(a + c, b);
          this.lineTo(a + c, b + d);
          this.lineTo(a, b + d);
          this.lineTo(a, b);
        },
        __drawRoundRect: function (a, b, c, d, f, h) {
          f *= 0.5;
          h *= 0.5;
          f > c / 2 && (f = c / 2);
          h > d / 2 && (h = d / 2);
          c = a + c;
          d = b + d;
          var k = -f + 0.7071067811865476 * f,
            g = -f + 0.41421356237309503 * f,
            p = -h + 0.7071067811865476 * h,
            t = -h + 0.41421356237309503 * h;
          this.moveTo(c, d - h);
          this.curveTo(c, d + t, c + k, d + p);
          this.curveTo(c + g, d, c - f, d);
          this.lineTo(a + f, d);
          this.curveTo(a - g, d, a - k, d + p);
          this.curveTo(a, d + t, a, d - h);
          this.lineTo(a, b + h);
          this.curveTo(a, b - t, a - k, b - p);
          this.curveTo(a - g, b, a + f, b);
          this.lineTo(c - f, b);
          this.curveTo(c + g, b, c + k, b - p);
          this.curveTo(c, b - t, c, b + h);
          this.lineTo(c, d - h);
        },
        __class__: Rh,
      };
      var Wh = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        dd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.display.GraphicsShader'] = Wh;
      Wh.__name__ = 'openfl.display.GraphicsShader';
      Wh.__super__ = dd;
      Wh.prototype = u(dd.prototype, { __class__: Wh });
      var ug = function (a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.alpha = b;
        this.color = a;
        this.__graphicsDataType = 1;
        this.__graphicsFillType = 0;
      };
      g['openfl.display.GraphicsSolidFill'] = ug;
      ug.__name__ = 'openfl.display.GraphicsSolidFill';
      ug.__interfaces__ = [vg, he];
      ug.prototype = { __class__: ug };
      var Oj = function () {};
      g['openfl.display.IGraphicsStroke'] = Oj;
      Oj.__name__ = 'openfl.display.IGraphicsStroke';
      Oj.__isInterface__ = !0;
      var Vh = function (a, b, c, d, f, h, k) {
        null == h && (h = 3);
        null == f && (f = 2);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = !1);
        null == a && (a = NaN);
        this.caps = d;
        this.fill = k;
        this.joints = f;
        this.miterLimit = h;
        this.pixelHinting = b;
        this.scaleMode = c;
        this.thickness = a;
        this.__graphicsDataType = 0;
      };
      g['openfl.display.GraphicsStroke'] = Vh;
      Vh.__name__ = 'openfl.display.GraphicsStroke';
      Vh.__interfaces__ = [Oj, he];
      Vh.prototype = { __class__: Vh };
      var kj = function () {};
      g['openfl.display.ITileContainer'] = kj;
      kj.__name__ = 'openfl.display.ITileContainer';
      kj.__isInterface__ = !0;
      var Gh = function (a) {
        null == a && (a = 80);
        this.quality = a;
      };
      g['openfl.display.JPEGEncoderOptions'] = Gh;
      Gh.__name__ = 'openfl.display.JPEGEncoderOptions';
      Gh.prototype = { __class__: Gh };
      var nk = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bevel';
              case 1:
                return 'miter';
              case 2:
                return 'round';
              default:
                return null;
            }
          },
        },
        lj = function () {
          hb.call(this);
          this.__drawableType = 4;
          this.contentLoaderInfo = Ed.create(this);
          this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
          this.__unloaded = !0;
        };
      g['openfl.display.Loader'] = lj;
      lj.__name__ = 'openfl.display.Loader';
      lj.__super__ = hb;
      lj.prototype = u(hb.prototype, {
        addChild: function (a) {
          throw new Sb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        addChildAt: function (a, b) {
          throw new Sb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChild: function (a) {
          if (a == this.content)
            return hb.prototype.removeChild.call(this, this.content);
          throw new Sb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChildAt: function (a) {
          throw new Sb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        __class__: lj,
      });
      var Ed = function () {
        ma.call(this);
        this.applicationDomain = Ff.currentDomain;
        this.bytesTotal = this.bytesLoaded = 0;
        this.childAllowsParent = !0;
        this.parameters = {};
      };
      g['openfl.display.LoaderInfo'] = Ed;
      Ed.__name__ = 'openfl.display.LoaderInfo';
      Ed.create = function (a) {
        var b = new Ed();
        b.uncaughtErrorEvents = new Xh();
        null != a ? (b.loader = a) : (b.url = Ed.__rootURL);
        return b;
      };
      Ed.__super__ = ma;
      Ed.prototype = u(ma.prototype, {
        __complete: function () {
          this.__completed ||
            (this.bytesLoaded < this.bytesTotal &&
              (this.bytesLoaded = this.bytesTotal),
            this.__update(this.bytesLoaded, this.bytesTotal),
            (this.__completed = !0),
            this.dispatchEvent(new va('complete')));
        },
        __update: function (a, b) {
          this.bytesLoaded = a;
          this.bytesTotal = b;
          this.dispatchEvent(new Ue('progress', !1, !1, a, b));
        },
        __class__: Ed,
      });
      var He = function () {
        fa.call(this);
        this.__enabled = !0;
      };
      g['openfl.display.MovieClip'] = He;
      He.__name__ = 'openfl.display.MovieClip';
      He.__super__ = fa;
      He.prototype = u(fa.prototype, {
        gotoAndStop: function (a, b) {
          null != this.__timeline && this.__timeline.__gotoAndStop(a, b);
        },
        __enterFrame: function (a) {
          null != this.__timeline && this.__timeline.__enterFrame(a);
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __tabTest: function (a) {
          this.__enabled && fa.prototype.__tabTest.call(this, a);
        },
        __onMouseDown: function (a) {
          this.__enabled && this.__hasDown && this.gotoAndStop('_down');
          this.__mouseIsDown = !0;
          null != this.stage &&
            this.stage.addEventListener(
              'mouseUp',
              l(this, this.__onMouseUp),
              !0,
            );
        },
        __onMouseUp: function (a) {
          this.__mouseIsDown = !1;
          null != this.stage &&
            this.stage.removeEventListener(
              'mouseUp',
              l(this, this.__onMouseUp),
            );
          this.__buttonMode &&
            (jd.__eq(a.target, this) && this.__enabled && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__enabled && this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOut: function (a) {
          this.__enabled &&
            (this.__mouseIsDown && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOver: function (a) {
          this.__enabled && this.__hasOver && this.gotoAndStop('_over');
        },
        set_buttonMode: function (a) {
          if (this.__buttonMode != a) {
            if (a) {
              this.__hasUp = this.__hasOver = this.__hasDown = !1;
              for (var b = 0, c = this.get_currentLabels(); b < c.length; ) {
                var d = c[b];
                ++b;
                switch (d.name) {
                  case '_down':
                    this.__hasDown = !0;
                    break;
                  case '_over':
                    this.__hasOver = !0;
                    break;
                  case '_up':
                    this.__hasUp = !0;
                }
              }
              if (this.__hasDown || this.__hasOver || this.__hasUp)
                (this.addEventListener('rollOver', l(this, this.__onRollOver)),
                  this.addEventListener('rollOut', l(this, this.__onRollOut)),
                  this.addEventListener(
                    'mouseDown',
                    l(this, this.__onMouseDown),
                  ));
            } else
              (this.removeEventListener('rollOver', l(this, this.__onRollOver)),
                this.removeEventListener('rollOut', l(this, this.__onRollOut)),
                this.removeEventListener(
                  'mouseDown',
                  l(this, this.__onMouseDown),
                ));
            this.__buttonMode = a;
          }
          return a;
        },
        get_currentLabels: function () {
          return null != this.__timeline
            ? this.__timeline.__currentLabels.slice()
            : [];
        },
        __class__: He,
        __properties__: u(fa.prototype.__properties__, {
          get_currentLabels: 'get_currentLabels',
        }),
      });
      var qa = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      g['openfl.geom.Rectangle'] = qa;
      qa.__name__ = 'openfl.geom.Rectangle';
      qa.prototype = {
        clone: function () {
          return new qa(this.x, this.y, this.width, this.height);
        },
        contains: function (a, b) {
          return a >= this.x && b >= this.y && a < this.get_right()
            ? b < this.get_bottom()
            : !1;
        },
        containsPoint: function (a) {
          return this.contains(a.x, a.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height;
        },
        equals: function (a) {
          return a == this
            ? !0
            : null != a &&
                this.x == a.x &&
                this.y == a.y &&
                this.width == a.width
              ? this.height == a.height
              : !1;
        },
        inflate: function (a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -= b;
          this.height += 2 * b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        union: function (a) {
          if (0 == this.width || 0 == this.height) return a.clone();
          if (0 == a.width || 0 == a.height) return this.clone();
          var b = this.x > a.x ? a.x : this.x,
            c =
              this.get_right() < a.get_right()
                ? a.get_right()
                : this.get_right(),
            d = this.y > a.y ? a.y : this.y;
          a =
            this.get_bottom() < a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          return new qa(b, d, c - b, a - d);
        },
        __contract: function (a, b, c, d) {
          if (0 != this.width || 0 != this.height) {
            var f = 0,
              h = 0,
              k = 0,
              g = 0;
            this.x < a && (f = a - this.x);
            this.y < b && (h = b - this.y);
            this.get_right() > a + c && (k = a + c - this.get_right());
            this.get_bottom() > b + d && (g = b + d - this.get_bottom());
            this.x += f;
            this.y += h;
            this.width += k - f;
            this.height += g - h;
          }
        },
        __expand: function (a, b, c, d) {
          if (0 == this.width && 0 == this.height)
            ((this.x = a), (this.y = b), (this.width = c), (this.height = d));
          else {
            var f = this.get_right(),
              h = this.get_bottom();
            this.x > a && ((this.x = a), (this.width = f - a));
            this.y > b && ((this.y = b), (this.height = h - b));
            f < a + c && (this.width = a + c - this.x);
            h < b + d && (this.height = b + d - this.y);
          }
        },
        __toLimeRectangle: function () {
          null == qa.__limeRectangle && (qa.__limeRectangle = new hd());
          qa.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
          return qa.__limeRectangle;
        },
        __transform: function (a, b) {
          var c = b.a * this.x + b.c * this.y,
            d = c,
            f = b.b * this.x + b.d * this.y,
            h = f,
            k = b.a * (this.x + this.width) + b.c * this.y,
            g = b.b * (this.x + this.width) + b.d * this.y;
          k < c && (c = k);
          g < f && (f = g);
          k > d && (d = k);
          g > h && (h = g);
          k = b.a * (this.x + this.width) + b.c * (this.y + this.height);
          g = b.b * (this.x + this.width) + b.d * (this.y + this.height);
          k < c && (c = k);
          g < f && (f = g);
          k > d && (d = k);
          g > h && (h = g);
          k = b.a * this.x + b.c * (this.y + this.height);
          g = b.b * this.x + b.d * (this.y + this.height);
          k < c && (c = k);
          g < f && (f = g);
          k > d && (d = k);
          g > h && (h = g);
          a.setTo(c + b.tx, f + b.ty, d - c, h - f);
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_left: function () {
          return this.x;
        },
        get_right: function () {
          return this.x + this.width;
        },
        get_top: function () {
          return this.y;
        },
        __class__: qa,
        __properties__: {
          get_top: 'get_top',
          get_right: 'get_right',
          get_left: 'get_left',
          get_bottom: 'get_bottom',
        },
      };
      var Ta = function (a, b) {
        Sc.call(this);
        this.__context3D = a;
        this.__context = a.__context;
        this.__gl = this.gl = a.__context.webgl;
        this.__defaultRenderTarget = b;
        this.__flipped = null == this.__defaultRenderTarget;
        null == ed.maxTextureWidth &&
          (ed.maxTextureWidth = ed.maxTextureHeight =
            this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
        this.__matrix = ib._new();
        this.__values = [];
        this.__softwareRenderer = new ee(null);
        this.__type = 'opengl';
        this.__setBlendMode(10);
        this.__context3D.__setGLBlend(!0);
        this.__clipRects = [];
        this.__maskObjects = [];
        this.__numClipRects = 0;
        this.__projection = ib._new();
        this.__projectionFlipped = ib._new();
        this.__stencilReference = 0;
        this.__tempRect = new qa();
        this.__defaultDisplayShader = new Ph();
        this.__defaultGraphicsShader = new Wh();
        this.__defaultShader = this.__defaultDisplayShader;
        this.__initShader(this.__defaultShader);
        this.__scrollRectMasks = new pb(function () {
          return new ve();
        });
        this.__maskShader = new Ve();
      };
      g['openfl.display.OpenGLRenderer'] = Ta;
      Ta.__name__ = 'openfl.display.OpenGLRenderer';
      Ta.__super__ = Sc;
      Ta.prototype = u(Sc.prototype, {
        applyAlpha: function (a) {
          Ta.__alphaValue[0] = a * this.__worldAlpha;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride(
                'openfl_Alpha',
                Ta.__alphaValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__alpha &&
              (this.__currentShader.__alpha.value = Ta.__alphaValue);
        },
        applyBitmapData: function (a, b, c) {
          null == c && (c = !1);
          null != this.__currentShaderBuffer
            ? null != a &&
              ((Ta.__textureSizeValue[0] = a.__textureWidth),
              (Ta.__textureSizeValue[1] = a.__textureHeight),
              this.__currentShaderBuffer.addFloatOverride(
                'openfl_TextureSize',
                Ta.__textureSizeValue,
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__bitmap &&
                ((this.__currentShader.__bitmap.input = a),
                (this.__currentShader.__bitmap.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__bitmap.mipFilter = 2),
                (this.__currentShader.__bitmap.wrap = c ? 2 : 0)),
              null != this.__currentShader.__texture &&
                ((this.__currentShader.__texture.input = a),
                (this.__currentShader.__texture.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__texture.mipFilter = 2),
                (this.__currentShader.__texture.wrap = c ? 2 : 0)),
              null != this.__currentShader.__textureSize &&
                (null != a
                  ? ((Ta.__textureSizeValue[0] = a.__textureWidth),
                    (Ta.__textureSizeValue[1] = a.__textureHeight),
                    (this.__currentShader.__textureSize.value =
                      Ta.__textureSizeValue))
                  : (this.__currentShader.__textureSize.value = null)));
        },
        applyColorTransform: function (a) {
          var b = null != a && !a.__isDefault(!0);
          this.applyHasColorTransform(b);
          b
            ? (a.__setArrays(
                Ta.__colorMultipliersValue,
                Ta.__colorOffsetsValue,
              ),
              null != this.__currentShaderBuffer
                ? (this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorMultiplier',
                    Ta.__colorMultipliersValue,
                  ),
                  this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorOffset',
                    Ta.__colorOffsetsValue,
                  ))
                : null != this.__currentShader &&
                  (null != this.__currentShader.__colorMultiplier &&
                    (this.__currentShader.__colorMultiplier.value =
                      Ta.__colorMultipliersValue),
                  null != this.__currentShader.__colorOffset &&
                    (this.__currentShader.__colorOffset.value =
                      Ta.__colorOffsetsValue)))
            : null != this.__currentShaderBuffer
              ? (this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorMultiplier',
                  Ta.__emptyColorValue,
                ),
                this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorOffset',
                  Ta.__emptyColorValue,
                ))
              : null != this.__currentShader &&
                (null != this.__currentShader.__colorMultiplier &&
                  (this.__currentShader.__colorMultiplier.value =
                    Ta.__emptyColorValue),
                null != this.__currentShader.__colorOffset &&
                  (this.__currentShader.__colorOffset.value =
                    Ta.__emptyColorValue));
        },
        applyHasColorTransform: function (a) {
          Ta.__hasColorTransformValue[0] = a;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addBoolOverride(
                'openfl_HasColorTransform',
                Ta.__hasColorTransformValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value =
                Ta.__hasColorTransformValue);
        },
        applyMatrix: function (a) {
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride('openfl_Matrix', a)
            : null != this.__currentShader &&
              null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = a);
        },
        setShader: function (a) {
          this.__currentShaderBuffer = null;
          this.__currentShader != a &&
            (null == a
              ? ((this.__currentShader = null),
                this.__context3D.setProgram(null))
              : ((this.__currentShader = a),
                this.__initShader(a),
                this.__context3D.setProgram(a.program),
                this.__context3D.__flushGLProgram(),
                this.__currentShader.__enable(),
                (this.__context3D.__state.shader = a)));
        },
        setViewport: function () {
          this.__gl.viewport(
            this.__offsetX,
            this.__offsetY,
            this.__displayWidth,
            this.__displayHeight,
          );
        },
        updateShader: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__position &&
              (this.__currentShader.__position.__useArray = !0),
            null != this.__currentShader.__textureCoord &&
              (this.__currentShader.__textureCoord.__useArray = !0),
            this.__context3D.setProgram(this.__currentShader.program),
            this.__context3D.__flushGLProgram(),
            this.__context3D.__flushGLTextures(),
            this.__currentShader.__update());
        },
        useAlphaArray: function () {
          null != this.__currentShader &&
            null != this.__currentShader.__alpha &&
            (this.__currentShader.__alpha.__useArray = !0);
        },
        useColorTransformArray: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__colorMultiplier &&
              (this.__currentShader.__colorMultiplier.__useArray = !0),
            null != this.__currentShader.__colorOffset &&
              (this.__currentShader.__colorOffset.__useArray = !0));
        },
        __clear: function () {
          null == this.__stage || this.__stage.__transparent
            ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1)
            : this.__context3D.clear(
                this.__stage.__colorSplit[0],
                this.__stage.__colorSplit[1],
                this.__stage.__colorSplit[2],
                1,
                0,
                0,
                1,
              );
          this.__cleared = !0;
        },
        __clearShader: function () {
          null != this.__currentShader &&
            (null == this.__currentShaderBuffer
              ? null != this.__currentShader.__bitmap &&
                (this.__currentShader.__bitmap.input = null)
              : this.__currentShaderBuffer.clearOverride(),
            null != this.__currentShader.__texture &&
              (this.__currentShader.__texture.input = null),
            null != this.__currentShader.__textureSize &&
              (this.__currentShader.__textureSize.value = null),
            null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value = null),
            null != this.__currentShader.__position &&
              (this.__currentShader.__position.value = null),
            null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = null),
            this.__currentShader.__clearUseArray());
        },
        __copyShader: function (a) {
          this.__currentShader = a.__currentShader;
          this.__currentShaderBuffer = a.__currentShaderBuffer;
          this.__currentDisplayShader = a.__currentDisplayShader;
          this.__currentGraphicsShader = a.__currentGraphicsShader;
        },
        __getMatrix: function (a, b) {
          var c = wa.__pool.get();
          c.copyFrom(a);
          c.concat(this.__worldTransform);
          if (
            0 == b ||
            (1 == b &&
              0 == c.b &&
              0 == c.c &&
              1.001 > c.a &&
              0.999 < c.a &&
              1.001 > c.d &&
              0.999 < c.d)
          )
            ((c.tx = Math.round(c.tx)), (c.ty = Math.round(c.ty)));
          ib.identity(this.__matrix);
          ib.set(this.__matrix, 0, c.a);
          ib.set(this.__matrix, 1, c.b);
          ib.set(this.__matrix, 4, c.c);
          ib.set(this.__matrix, 5, c.d);
          ib.set(this.__matrix, 12, c.tx);
          ib.set(this.__matrix, 13, c.ty);
          ib.append(
            this.__matrix,
            this.__flipped ? this.__projectionFlipped : this.__projection,
          );
          this.__values[0] = ib.get(this.__matrix, 0);
          this.__values[1] = ib.get(this.__matrix, 1);
          this.__values[2] = ib.get(this.__matrix, 2);
          this.__values[3] = ib.get(this.__matrix, 3);
          this.__values[4] = ib.get(this.__matrix, 4);
          this.__values[5] = ib.get(this.__matrix, 5);
          this.__values[6] = ib.get(this.__matrix, 6);
          this.__values[7] = ib.get(this.__matrix, 7);
          this.__values[8] = ib.get(this.__matrix, 8);
          this.__values[9] = ib.get(this.__matrix, 9);
          this.__values[10] = ib.get(this.__matrix, 10);
          this.__values[11] = ib.get(this.__matrix, 11);
          this.__values[12] = ib.get(this.__matrix, 12);
          this.__values[13] = ib.get(this.__matrix, 13);
          this.__values[14] = ib.get(this.__matrix, 14);
          this.__values[15] = ib.get(this.__matrix, 15);
          wa.__pool.release(c);
          return this.__values;
        },
        __initShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultShader;
        },
        __initDisplayShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultDisplayShader;
        },
        __initGraphicsShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultGraphicsShader;
        },
        __initShaderBuffer: function (a) {
          return null != a
            ? this.__initGraphicsShader(a.shader)
            : this.__defaultGraphicsShader;
        },
        __popMask: function () {
          if (0 != this.__stencilReference) {
            var a = this.__maskObjects.pop();
            1 < this.__stencilReference
              ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  255,
                ),
                this.__context3D.setColorMask(!1, !1, !1, !1),
                this.__renderDrawableMask(a),
                this.__stencilReference--,
                this.__context3D.setStencilActions(2, 1, 5, 5, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  0,
                ),
                this.__context3D.setColorMask(!0, !0, !0, !0))
              : ((this.__stencilReference = 0),
                this.__context3D.setStencilActions(),
                this.__context3D.setStencilReferenceValue(0, 0, 0));
          }
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? (this.__scrollRectMasks.release(
                  this.__maskObjects[this.__maskObjects.length - 1],
                ),
                this.__popMask())
              : this.__popMaskRect());
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            0 < this.__numClipRects
              ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
              : this.__scissorRect());
        },
        __pushMask: function (a) {
          0 == this.__stencilReference &&
            (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4),
            (this.__updatedStencil = !0));
          this.__context3D.setStencilActions(2, 1, 2, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            255,
          );
          this.__context3D.setColorMask(!1, !1, !1, !1);
          this.__renderDrawableMask(a);
          this.__maskObjects.push(a);
          this.__stencilReference++;
          this.__context3D.setStencilActions(2, 1, 5, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            0,
          );
          this.__context3D.setColorMask(!0, !0, !0, !0);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? ((b = this.__scrollRectMasks.get()),
                b.get_graphics().clear(),
                b.get_graphics().beginFill(65280),
                b
                  .get_graphics()
                  .drawRect(
                    a.__scrollRect.x,
                    a.__scrollRect.y,
                    a.__scrollRect.width,
                    a.__scrollRect.height,
                  ),
                b.__renderTransform.copyFrom(a.__renderTransform),
                this.__pushMask(b))
              : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new qa());
          var c = wa.__pool.get();
          c.copyFrom(b);
          c.concat(this.__worldTransform);
          b = this.__clipRects[this.__numClipRects];
          a.__transform(b, c);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            b.__contract(a.x, a.y, a.width, a.height));
          0 > b.height && (b.height = 0);
          0 > b.width && (b.width = 0);
          wa.__pool.release(c);
          this.__scissorRect(b);
          this.__numClipRects++;
        },
        __render: function (a) {
          this.__context3D.setColorMask(!0, !0, !0, !0);
          this.__context3D.setCulling(3);
          this.__context3D.setDepthTest(!1, 0);
          this.__context3D.setStencilActions();
          this.__context3D.setStencilReferenceValue(0, 0, 0);
          this.__context3D.setScissorRectangle(null);
          this.__blendMode = null;
          this.__setBlendMode(10);
          if (null == this.__defaultRenderTarget) {
            if (
              (this.__context3D.__backBufferWantsBestResolution
                ? Ta.__scissorRectangle.setTo(
                    this.__offsetX / this.__pixelRatio,
                    this.__offsetY / this.__pixelRatio,
                    this.__displayWidth / this.__pixelRatio,
                    this.__displayHeight / this.__pixelRatio,
                  )
                : Ta.__scissorRectangle.setTo(
                    this.__offsetX,
                    this.__offsetY,
                    this.__displayWidth,
                    this.__displayHeight,
                  ),
              this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
              (this.__upscaled =
                1 != this.__worldTransform.a || 1 != this.__worldTransform.d),
              this.__renderDrawable(a),
              0 < this.__offsetX || 0 < this.__offsetY)
            )
              (0 < this.__offsetX &&
                (Ta.__scissorRectangle.setTo(
                  0,
                  0,
                  this.__offsetX,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                Ta.__scissorRectangle.setTo(
                  this.__offsetX + this.__displayWidth,
                  0,
                  this.__width,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                0 < this.__offsetY &&
                  (Ta.__scissorRectangle.setTo(
                    0,
                    0,
                    this.__width,
                    this.__offsetY,
                  ),
                  this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                  Ta.__scissorRectangle.setTo(
                    0,
                    this.__offsetY + this.__displayHeight,
                    this.__width,
                    this.__height,
                  ),
                  this.__context3D.setScissorRectangle(Ta.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                this.__context3D.setScissorRectangle(null));
          } else {
            this.__context3D.__backBufferWantsBestResolution
              ? Ta.__scissorRectangle.setTo(
                  this.__offsetX / this.__pixelRatio,
                  this.__offsetY / this.__pixelRatio,
                  this.__displayWidth / this.__pixelRatio,
                  this.__displayHeight / this.__pixelRatio,
                )
              : Ta.__scissorRectangle.setTo(
                  this.__offsetX,
                  this.__offsetY,
                  this.__displayWidth,
                  this.__displayHeight,
                );
            this.__context3D.setScissorRectangle(Ta.__scissorRectangle);
            var b = a.__mask,
              c = a.__scrollRect;
            a.__mask = null;
            a.__scrollRect = null;
            this.__renderDrawable(a);
            a.__mask = b;
            a.__scrollRect = c;
          }
          this.__context3D.present();
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                Yh.renderDrawable(a, this);
                break;
              case 2:
                nd.renderDrawable(a, this);
                break;
              case 3:
                We.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                Zh.renderDrawable(a, this);
                break;
              case 6:
                $h.renderDrawable(a, this);
                break;
              case 7:
                ie.renderDrawable(a, this);
                break;
              case 8:
                od.renderDrawable(a, this);
                break;
              case 9:
                T.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                Yh.renderDrawableMask(a, this);
                break;
              case 2:
                nd.renderDrawableMask(a, this);
                break;
              case 3:
                We.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                Zh.renderDrawableMask(a, this);
                break;
              case 6:
                $h.renderDrawableMask(a, this);
                break;
              case 7:
                ie.renderDrawableMask(a, this);
                break;
              case 8:
                od.renderDrawableMask(a, this);
                break;
              case 9:
                T.renderDrawableMask(a, this);
            }
        },
        __renderFilterPass: function (a, b, c, d) {
          null == d && (d = !0);
          if (null != a && null != b && null != this.__defaultRenderTarget) {
            var f = this.__context3D.__state.renderToTexture,
              h = this.__context3D.__state.renderToTextureDepthStencil,
              k = this.__context3D.__state.renderToTextureAntiAlias,
              g = this.__context3D.__state.renderToTextureSurfaceSelector;
            this.__context3D.setRenderToTexture(
              this.__defaultRenderTarget.getTexture(this.__context3D),
              !1,
            );
            d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
            b = this.__initShader(b);
            this.setShader(b);
            this.applyAlpha(1);
            this.applyBitmapData(a, c);
            this.applyColorTransform(null);
            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
            this.updateShader();
            c = a.getVertexBuffer(this.__context3D);
            null != b.__position &&
              this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
            null != b.__textureCoord &&
              this.__context3D.setVertexBufferAt(
                b.__textureCoord.index,
                c,
                3,
                2,
              );
            a = a.getIndexBuffer(this.__context3D);
            this.__context3D.drawTriangles(a);
            null != f
              ? this.__context3D.setRenderToTexture(f, h, k, g)
              : this.__context3D.setRenderToBackBuffer();
            this.__clearShader();
          }
        },
        __resize: function (a, b) {
          this.__width = a;
          this.__height = b;
          a =
            null == this.__defaultRenderTarget
              ? this.__stage.stageWidth
              : this.__defaultRenderTarget.width;
          b =
            null == this.__defaultRenderTarget
              ? this.__stage.stageHeight
              : this.__defaultRenderTarget.height;
          if (null == this.__defaultRenderTarget) {
            var c = this.__worldTransform;
            c = Math.round(0 * c.a + 0 * c.c + c.tx);
          } else c = 0;
          this.__offsetX = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + 0 * c.d + c.ty)))
            : (c = 0);
          this.__offsetY = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(a * c.a + 0 * c.c + c.tx - this.__offsetX)))
            : (c = a);
          this.__displayWidth = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + b * c.d + c.ty - this.__offsetY)))
            : (c = b);
          this.__displayHeight = c;
          ib.createOrtho(
            this.__projection,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            0,
            this.__displayHeight + 2 * this.__offsetY,
            -1e3,
            1e3,
          );
          ib.createOrtho(
            this.__projectionFlipped,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            this.__displayHeight + 2 * this.__offsetY,
            0,
            -1e3,
            1e3,
          );
        },
        __resumeClipAndMask: function (a) {
          0 < this.__stencilReference
            ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5),
              this.__context3D.setStencilReferenceValue(
                this.__stencilReference,
                255,
                0,
              ))
            : (this.__context3D.setStencilActions(),
              this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects
            ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
            : this.__scissorRect();
        },
        __scissorRect: function (a) {
          if (null != a) {
            var b = Math.floor(a.x),
              c = Math.floor(a.y),
              d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0,
              f = 0 < a.height ? Math.ceil(a.get_bottom()) - c : 0;
            this.__context3D.__backBufferWantsBestResolution &&
              ((f = 1.5 / this.__pixelRatio),
              (b = a.x / this.__pixelRatio),
              (c = a.y / this.__pixelRatio),
              (d = 0 < a.width ? a.get_right() / this.__pixelRatio - b + f : 0),
              (f =
                0 < a.height ? a.get_bottom() / this.__pixelRatio - c + f : 0));
            0 > d && (d = 0);
            0 > f && (f = 0);
            Ta.__scissorRectangle.setTo(b, c, d, f);
            this.__context3D.setScissorRectangle(Ta.__scissorRectangle);
          } else this.__context3D.setScissorRectangle(null);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          if (this.__blendMode != a)
            switch (((this.__blendMode = a), a)) {
              case 0:
                this.__context3D.setBlendFactors(2, 2);
                break;
              case 9:
                this.__context3D.setBlendFactors(1, 5);
                break;
              case 12:
                this.__context3D.setBlendFactors(2, 6);
                break;
              case 14:
                this.__context3D.setBlendFactors(2, 2);
                this.__context3D.__setGLBlendEquation(
                  this.__gl.FUNC_REVERSE_SUBTRACT,
                );
                break;
              default:
                this.__context3D.setBlendFactors(2, 5);
            }
        },
        __setRenderTarget: function (a) {
          this.__defaultRenderTarget = a;
          this.__flipped = null == a;
          null != a && this.__resize(a.width, a.height);
        },
        __setShaderBuffer: function (a) {
          this.setShader(a.shader);
          this.__currentShaderBuffer = a;
        },
        __suspendClipAndMask: function () {
          0 < this.__stencilReference &&
            (this.__context3D.setStencilActions(),
            this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && this.__scissorRect();
        },
        __updateShaderBuffer: function (a) {
          null != this.__currentShader &&
            null != this.__currentShaderBuffer &&
            this.__currentShader.__updateFromBuffer(
              this.__currentShaderBuffer,
              a,
            );
        },
        __class__: Ta,
      });
      var fh = function (a) {
        null == a && (a = !1);
        this.fastCompression = a;
      };
      g['openfl.display.PNGEncoderOptions'] = fh;
      fh.__name__ = 'openfl.display.PNGEncoderOptions';
      fh.prototype = { __class__: fh };
      var Ig = function (a) {
        this.onComplete = new nc();
        this.display = a;
        null != a &&
          (a.addEventListener('unload', l(this, this.display_onUnload)),
          Ja.get_current().addChild(a));
      };
      g['openfl.display.Preloader'] = Ig;
      Ig.__name__ = 'openfl.display.Preloader';
      Ig.prototype = {
        start: function () {
          this.ready = !0;
          Ja.get_current().get_loaderInfo().__complete();
          if (null != this.display) {
            var a = new va('complete', !0, !0);
            this.display.dispatchEvent(a);
            a.isDefaultPrevented() ||
              this.display.dispatchEvent(new va('unload'));
          } else
            this.complete || ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {
          Ja.get_current().get_loaderInfo().__update(a, b);
          null != this.display &&
            this.display.dispatchEvent(new Ue('progress', !0, !0, a, b));
        },
        display_onUnload: function (a) {
          null != this.display &&
            (this.display.removeEventListener(
              'unload',
              l(this, this.display_onUnload),
            ),
            this.display.parent == Ja.get_current() &&
              Ja.get_current().removeChild(this.display),
            Ja.get_current().stage.set_focus(null),
            (this.display = null));
          this.ready &&
            !this.complete &&
            ((this.complete = !0), this.onComplete.dispatch());
        },
        __class__: Ig,
      };
      var Sf = function () {
        fa.call(this);
        var a = this.getBackgroundColor(),
          b = 0;
        70 >
          0.299 * ((a >> 16) & 255) +
            0.587 * ((a >> 8) & 255) +
            0.114 * (a & 255) && (b = 16777215);
        a = this.getHeight() / 2 - 3.5;
        var c = this.getWidth() - 60;
        this.outline = new ve();
        this.outline.get_graphics().beginFill(b, 0.07);
        this.outline.get_graphics().drawRect(0, 0, c, 7);
        this.outline.set_x(30);
        this.outline.set_y(a);
        this.outline.set_alpha(0);
        this.addChild(this.outline);
        this.progress = new ve();
        this.progress.get_graphics().beginFill(b, 0.35);
        this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
        this.progress.set_x(32);
        this.progress.set_y(a + 2);
        this.progress.set_scaleX(0);
        this.progress.set_alpha(0);
        this.addChild(this.progress);
        this.startAnimation = Ja.getTimer() + 100;
        this.endAnimation = this.startAnimation + 1e3;
        this.addEventListener(
          'addedToStage',
          l(this, this.this_onAddedToStage),
        );
      };
      g['openfl.display.DefaultPreloader'] = Sf;
      Sf.__name__ = 'openfl.display.DefaultPreloader';
      Sf.__super__ = fa;
      Sf.prototype = u(fa.prototype, {
        getBackgroundColor: function () {
          var a = Ja.get_current().stage.window.context.attributes;
          return Object.prototype.hasOwnProperty.call(a, 'background') &&
            null != a.background
            ? a.background
            : 0;
        },
        getHeight: function () {
          var a = Ja.get_current().stage.window.__height;
          return 0 < a ? a : Ja.get_current().stage.stageHeight;
        },
        getWidth: function () {
          var a = Ja.get_current().stage.window.__width;
          return 0 < a ? a : Ja.get_current().stage.stageWidth;
        },
        onInit: function () {
          this.addEventListener('enterFrame', l(this, this.this_onEnterFrame));
        },
        onLoaded: function () {
          this.removeEventListener(
            'enterFrame',
            l(this, this.this_onEnterFrame),
          );
          this.dispatchEvent(new va('unload'));
        },
        onUpdate: function (a, b) {
          var c = 0;
          0 < b && ((c = a / b), 1 < c && (c = 1));
          this.progress.set_scaleX(c);
        },
        this_onAddedToStage: function (a) {
          this.removeEventListener(
            'addedToStage',
            l(this, this.this_onAddedToStage),
          );
          this.onInit();
          this.onUpdate(
            this.get_loaderInfo().bytesLoaded,
            this.get_loaderInfo().bytesTotal,
          );
          this.addEventListener('progress', l(this, this.this_onProgress));
          this.addEventListener('complete', l(this, this.this_onComplete));
        },
        this_onComplete: function (a) {
          a.preventDefault();
          this.removeEventListener('progress', l(this, this.this_onProgress));
          this.removeEventListener('complete', l(this, this.this_onComplete));
          this.onLoaded();
        },
        this_onEnterFrame: function (a) {
          a =
            (Ja.getTimer() - this.startAnimation) /
            (this.endAnimation - this.startAnimation);
          0 > a && (a = 0);
          1 < a && (a = 1);
          this.outline.set_alpha(this.progress.set_alpha(a));
        },
        this_onProgress: function (a) {
          this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
        },
        __class__: Sf,
      });
      var ak = {
          _new: function (a) {
            return {};
          },
        },
        Oh = function () {
          this.channels = 0;
          this.filter = 5;
          this.index = this.height = 0;
          this.mipFilter = 2;
          this.wrap = this.width = 0;
        };
      g['openfl.display.ShaderInput'] = Oh;
      Oh.__name__ = 'openfl.display.ShaderInput';
      Oh.prototype = {
        __disableGL: function (a, b) {
          0 > b || a.setTextureAt(b, null);
        },
        __updateGL: function (a, b, c, d, f, h) {
          c = null != c ? c : this.input;
          d = null != d ? d : this.filter;
          f = null != f ? f : this.mipFilter;
          h = null != h ? h : this.wrap;
          null != c
            ? (a.setTextureAt(b, c.getTexture(a)),
              a.setSamplerStateAt(b, h, d, f))
            : a.setTextureAt(b, null);
        },
        __class__: Oh,
      };
      var Ef = function () {
        this.index = 0;
      };
      g['openfl.display.ShaderParameter'] = Ef;
      Ef.__name__ = 'openfl.display.ShaderParameter';
      Ef.prototype = {
        __disableGL: function (a) {
          if (!(0 > this.index || ((a = a.gl), this.__isUniform)))
            for (var b = 0, c = this.__arrayLength; b < c; ) {
              var d = b++;
              a.disableVertexAttribArray(this.index + d);
            }
        },
        __updateGL: function (a, b) {
          if (!(0 > this.index)) {
            a = a.gl;
            b = null != b ? b : this.value;
            var c = this.__isBool ? b : null,
              d = this.__isFloat ? b : null,
              f = this.__isInt ? b : null;
            if (this.__isUniform)
              if (null != b && b.length >= this.__length)
                switch (this.type) {
                  case 0:
                    a.uniform1i(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.uniform2i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.uniform3i(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.uniform4i(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                      c[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.uniform1f(this.index, d[0]);
                    break;
                  case 5:
                    a.uniform2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.uniform1i(this.index, f[0]);
                    break;
                  case 9:
                    a.uniform2i(this.index, f[0], f[1]);
                    break;
                  case 10:
                    a.uniform3i(this.index, f[0], f[1], f[2]);
                    break;
                  case 11:
                    a.uniform4i(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = d[0];
                    this.__uniformMatrix[1] = d[1];
                    this.__uniformMatrix[2] = d[2];
                    this.__uniformMatrix[3] = d[3];
                    wc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = d[0];
                    this.__uniformMatrix[1] = d[1];
                    this.__uniformMatrix[2] = d[2];
                    this.__uniformMatrix[3] = d[3];
                    this.__uniformMatrix[4] = d[4];
                    this.__uniformMatrix[5] = d[5];
                    this.__uniformMatrix[6] = d[6];
                    this.__uniformMatrix[7] = d[7];
                    this.__uniformMatrix[8] = d[8];
                    wc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = d[0]),
                      (this.__uniformMatrix[1] = d[1]),
                      (this.__uniformMatrix[2] = d[2]),
                      (this.__uniformMatrix[3] = d[3]),
                      (this.__uniformMatrix[4] = d[4]),
                      (this.__uniformMatrix[5] = d[5]),
                      (this.__uniformMatrix[6] = d[6]),
                      (this.__uniformMatrix[7] = d[7]),
                      (this.__uniformMatrix[8] = d[8]),
                      (this.__uniformMatrix[9] = d[9]),
                      (this.__uniformMatrix[10] = d[10]),
                      (this.__uniformMatrix[11] = d[11]),
                      (this.__uniformMatrix[12] = d[12]),
                      (this.__uniformMatrix[13] = d[13]),
                      (this.__uniformMatrix[14] = d[14]),
                      (this.__uniformMatrix[15] = d[15]),
                      wc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
              else
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, 0);
                    break;
                  case 5:
                    a.uniform2f(this.index, 0, 0);
                    break;
                  case 6:
                    a.uniform3f(this.index, 0, 0, 0);
                    break;
                  case 7:
                    a.uniform4f(this.index, 0, 0, 0, 0);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, 0, 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    wc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    this.__uniformMatrix[4] = 0;
                    this.__uniformMatrix[5] = 0;
                    this.__uniformMatrix[6] = 0;
                    this.__uniformMatrix[7] = 0;
                    this.__uniformMatrix[8] = 0;
                    wc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = 0),
                      (this.__uniformMatrix[1] = 0),
                      (this.__uniformMatrix[2] = 0),
                      (this.__uniformMatrix[3] = 0),
                      (this.__uniformMatrix[4] = 0),
                      (this.__uniformMatrix[5] = 0),
                      (this.__uniformMatrix[6] = 0),
                      (this.__uniformMatrix[7] = 0),
                      (this.__uniformMatrix[8] = 0),
                      (this.__uniformMatrix[9] = 0),
                      (this.__uniformMatrix[10] = 0),
                      (this.__uniformMatrix[11] = 0),
                      (this.__uniformMatrix[12] = 0),
                      (this.__uniformMatrix[13] = 0),
                      (this.__uniformMatrix[14] = 0),
                      (this.__uniformMatrix[15] = 0),
                      wc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            else if (
              this.__useArray ||
              (null != b && b.length != this.__length)
            )
              for (h = 0, k = this.__arrayLength; h < k; )
                ((g = h++), a.enableVertexAttribArray(this.index + g));
            else {
              for (var h = 0, k = this.__arrayLength; h < k; ) {
                var g = h++;
                a.disableVertexAttribArray(this.index + g);
              }
              if (null != b)
                switch (this.type) {
                  case 0:
                    a.vertexAttrib1f(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.vertexAttrib2f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.vertexAttrib3f(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.vertexAttrib4f(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                      c[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.vertexAttrib1f(this.index, d[0]);
                    break;
                  case 5:
                    a.vertexAttrib2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.vertexAttrib3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.vertexAttrib4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.vertexAttrib1f(this.index, f[0]);
                    break;
                  case 9:
                    a.vertexAttrib2f(this.index, f[0], f[1]);
                    break;
                  case 10:
                    a.vertexAttrib3f(this.index, f[0], f[1], f[2]);
                    break;
                  case 11:
                    a.vertexAttrib4f(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, d[0], d[1]);
                    a.vertexAttrib2f(this.index + 1, d[2], d[3]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, d[0], d[1], d[2]);
                    a.vertexAttrib3f(this.index + 1, d[3], d[4], d[5]);
                    a.vertexAttrib3f(this.index + 2, d[6], d[7], d[8]);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, d[0], d[1], d[2], d[3]),
                      a.vertexAttrib4f(this.index + 1, d[4], d[5], d[6], d[7]),
                      a.vertexAttrib4f(
                        this.index + 2,
                        d[8],
                        d[9],
                        d[10],
                        d[11],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        d[12],
                        d[13],
                        d[14],
                        d[15],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
          }
        },
        __updateGLFromBuffer: function (a, b, c, d, f) {
          if (!(0 > this.index))
            if (((a = a.gl), this.__isUniform)) {
              if (d >= this.__length)
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, b[c]);
                    break;
                  case 5:
                    a.uniform2f(this.index, b[c], b[c + 1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, b[c] | 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(
                      this.index,
                      b[c] | 0,
                      b[c + 1] | 0,
                      b[c + 2] | 0,
                    );
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(
                      this.index,
                      b[c] | 0,
                      b[c + 1] | 0,
                      b[c + 2] | 0,
                      b[c + 3] | 0,
                    );
                    break;
                  case 12:
                    this.__uniformMatrix[0] = b[c];
                    this.__uniformMatrix[1] = b[c + 1];
                    this.__uniformMatrix[2] = b[c + 2];
                    this.__uniformMatrix[3] = b[c + 3];
                    wc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = b[c];
                    this.__uniformMatrix[1] = b[c + 1];
                    this.__uniformMatrix[2] = b[c + 2];
                    this.__uniformMatrix[3] = b[c + 3];
                    this.__uniformMatrix[4] = b[c + 4];
                    this.__uniformMatrix[5] = b[c + 5];
                    this.__uniformMatrix[6] = b[c + 6];
                    this.__uniformMatrix[7] = b[c + 7];
                    this.__uniformMatrix[8] = b[c + 8];
                    wc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = b[c]),
                      (this.__uniformMatrix[1] = b[c + 1]),
                      (this.__uniformMatrix[2] = b[c + 2]),
                      (this.__uniformMatrix[3] = b[c + 3]),
                      (this.__uniformMatrix[4] = b[c + 4]),
                      (this.__uniformMatrix[5] = b[c + 5]),
                      (this.__uniformMatrix[6] = b[c + 6]),
                      (this.__uniformMatrix[7] = b[c + 7]),
                      (this.__uniformMatrix[8] = b[c + 8]),
                      (this.__uniformMatrix[9] = b[c + 9]),
                      (this.__uniformMatrix[10] = b[c + 10]),
                      (this.__uniformMatrix[11] = b[c + 11]),
                      (this.__uniformMatrix[12] = b[c + 12]),
                      (this.__uniformMatrix[13] = b[c + 13]),
                      (this.__uniformMatrix[14] = b[c + 14]),
                      (this.__uniformMatrix[15] = b[c + 15]),
                      wc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            } else if (this.__internal || (0 != d && d != this.__length)) {
              b = a.FLOAT;
              this.__isBool ? (b = a.INT) : this.__isInt && (b = a.INT);
              h = 0;
              for (k = this.__arrayLength; h < k; )
                ((g = h++), a.enableVertexAttribArray(this.index + g));
              if (0 < d)
                for (h = 0, k = this.__arrayLength; h < k; )
                  ((g = h++),
                    a.vertexAttribPointer(
                      this.index + g,
                      this.__length,
                      b,
                      !1,
                      4 * this.__length,
                      4 * (c + f * this.__length + g * this.__arrayLength),
                    ));
            } else {
              for (var h = 0, k = this.__arrayLength; h < k; ) {
                var g = h++;
                a.disableVertexAttribArray(this.index + g);
              }
              if (0 < d)
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, b[c]);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(
                      this.index,
                      b[c],
                      b[c + 1],
                      b[c + 2],
                      b[c + 3],
                    );
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, b[c], b[c + 1]);
                    a.vertexAttrib2f(this.index + 1, b[c + 2], b[c + 2 + 1]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, b[c], b[c + 1], b[c + 2]);
                    a.vertexAttrib3f(
                      this.index + 1,
                      b[c + 3],
                      b[c + 3 + 1],
                      b[c + 3 + 2],
                    );
                    a.vertexAttrib3f(
                      this.index + 2,
                      b[c + 6],
                      b[c + 6 + 1],
                      b[c + 6 + 2],
                    );
                    break;
                  case 20:
                    (a.vertexAttrib4f(
                      this.index + 0,
                      b[c],
                      b[c + 1],
                      b[c + 2],
                      b[c + 3],
                    ),
                      a.vertexAttrib4f(
                        this.index + 1,
                        b[c + 4],
                        b[c + 4 + 1],
                        b[c + 4 + 2],
                        b[c + 4 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 2,
                        b[c + 8],
                        b[c + 8 + 1],
                        b[c + 8 + 2],
                        b[c + 8 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        b[c + 12],
                        b[c + 12 + 1],
                        b[c + 12 + 2],
                        b[c + 12 + 3],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
        },
        set_name: function (a) {
          this.__internal = M.startsWith(a, 'openfl_');
          return (this.name = a);
        },
        __class__: Ef,
        __properties__: { set_name: 'set_name' },
      };
      var ve = function () {
        S.call(this);
        this.__drawableType = 3;
      };
      g['openfl.display.Shape'] = ve;
      ve.__name__ = 'openfl.display.Shape';
      ve.__super__ = S;
      ve.prototype = u(S.prototype, {
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new ed(this));
          return this.__graphics;
        },
        __class__: ve,
        __properties__: u(S.prototype.__properties__, {
          get_graphics: 'get_graphics',
        }),
      });
      var Gf = function (a, b, c, d) {
        sa.call(this);
        this.__drawableType = 6;
        this.enabled = !0;
        this.trackAsMenu = !1;
        this.useHandCursor = !0;
        this.__upState = null != a ? a : new S();
        this.__overState = b;
        this.__downState = c;
        this.set_hitTestState(null != d ? d : new S());
        this.addEventListener('mouseDown', l(this, this.__this_onMouseDown));
        this.addEventListener('mouseOut', l(this, this.__this_onMouseOut));
        this.addEventListener('mouseOver', l(this, this.__this_onMouseOver));
        this.addEventListener('mouseUp', l(this, this.__this_onMouseUp));
        this.__tabEnabled = !0;
        this.set___currentState(this.__upState);
        null != Gf.__constructor &&
          ((a = Gf.__constructor), (Gf.__constructor = null), a(this));
      };
      g['openfl.display.SimpleButton'] = Gf;
      Gf.__name__ = 'openfl.display.SimpleButton';
      Gf.__super__ = sa;
      Gf.prototype = u(sa.prototype, {
        __getBounds: function (a, b) {
          sa.prototype.__getBounds.call(this, a, b);
          var c = wa.__pool.get(),
            d = this.__currentState.__transform;
          c.a = d.a * b.a + d.b * b.c;
          c.b = d.a * b.b + d.b * b.d;
          c.c = d.c * b.a + d.d * b.c;
          c.d = d.c * b.b + d.d * b.d;
          c.tx = d.tx * b.a + d.ty * b.c + b.tx;
          c.ty = d.tx * b.b + d.ty * b.d + b.ty;
          this.__currentState.__getBounds(a, c);
          wa.__pool.release(c);
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            sa.prototype.__getRenderBounds.call(this, a, b);
          else {
            sa.prototype.__getBounds.call(this, a, b);
            var c = wa.__pool.get(),
              d = this.__currentState.__transform;
            c.a = d.a * b.a + d.b * b.c;
            c.b = d.a * b.b + d.b * b.d;
            c.c = d.c * b.a + d.d * b.c;
            c.d = d.c * b.b + d.d * b.d;
            c.tx = d.tx * b.a + d.ty * b.c + b.tx;
            c.ty = d.tx * b.b + d.ty * b.d + b.ty;
            this.__currentState.__getRenderBounds(a, c);
            wa.__pool.release(c);
          }
        },
        __getCursor: function () {
          return this.useHandCursor && !this.__ignoreEvent && this.enabled
            ? 'button'
            : null;
        },
        __hitTest: function (a, b, c, d, f, h) {
          var k = !1;
          null != this.get_hitTestState()
            ? this.get_hitTestState().__hitTest(a, b, c, d, f, h) &&
              (null != d &&
                (0 == d.length ? (d[0] = h) : (d[d.length - 1] = h)),
              (k = !f || this.mouseEnabled))
            : null != this.__currentState &&
              (!h.get_visible() ||
              this.__isMask ||
              (f && !this.mouseEnabled) ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
                ? (k = !1)
                : this.__currentState.__hitTest(a, b, c, d, f, h) && (k = f));
          if (null != d)
            for (; 1 < d.length && d[d.length - 1] == d[d.length - 2]; )
              d.pop();
          return k;
        },
        __hitTestMask: function (a, b) {
          var c = !1;
          this.__currentState.__hitTestMask(a, b) && (c = !0);
          return c;
        },
        __setStageReference: function (a) {
          sa.prototype.__setStageReference.call(this, a);
          null != this.__currentState &&
            this.__currentState.__setStageReference(a);
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setStageReference(a);
        },
        __setTransformDirty: function () {
          sa.prototype.__setTransformDirty.call(this);
          null != this.__currentState &&
            this.__currentState.__setTransformDirty();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setTransformDirty();
        },
        __update: function (a, b) {
          sa.prototype.__update.call(this, a, b);
          b &&
            (null != this.__currentState && this.__currentState.__update(a, !0),
            null != this.get_hitTestState() &&
              this.get_hitTestState() != this.__currentState &&
              this.get_hitTestState().__update(a, !0));
        },
        __updateTransforms: function (a) {
          sa.prototype.__updateTransforms.call(this, a);
          null != this.__currentState &&
            this.__currentState.__updateTransforms();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__updateTransforms();
        },
        get_downState: function () {
          return this.__downState;
        },
        get_hitTestState: function () {
          return this.__hitTestState;
        },
        set_hitTestState: function (a) {
          null != this.__hitTestState &&
            this.__hitTestState != a &&
            this.__hitTestState != this.get_downState() &&
            this.__hitTestState != this.get_upState() &&
            this.__hitTestState != this.get_overState() &&
            (this.__hitTestState.__renderParent = null);
          null != a &&
            ((a.__renderParent = this),
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty()));
          return (this.__hitTestState = a);
        },
        get_overState: function () {
          return this.__overState;
        },
        get_upState: function () {
          return this.__upState;
        },
        set___currentState: function (a) {
          null != this.__currentState &&
            this.__currentState != this.get_hitTestState() &&
            (this.__currentState.__renderParent = null);
          null != a && null != a.parent && a.parent.removeChild(a);
          S.__supportDOM &&
            null == this.__previousStates &&
            (this.__previousStates = X.toObjectVector(null));
          if (a != this.__currentState) {
            if (S.__supportDOM) {
              null != this.__currentState &&
                (this.__currentState.__setStageReference(null),
                this.__previousStates.push(this.__currentState));
              var b = this.__previousStates.indexOf(a, 0);
              if (-1 < b) {
                var c = this.__previousStates;
                c.__tempIndex = b;
                b = 0;
                for (var d = []; b < d.length; ) {
                  var f = d[b++];
                  c.insertAt(c.__tempIndex, f);
                  c.__tempIndex++;
                }
                c.splice(c.__tempIndex, 1);
              }
            }
            null != a &&
              ((a.__renderParent = this),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty()));
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
          return (this.__currentState = a);
        },
        __this_onMouseDown: function (a) {
          this.enabled && this.set___currentState(this.get_downState());
        },
        __this_onMouseOut: function (a) {
          this.__ignoreEvent = !1;
          this.get_upState() != this.__currentState &&
            this.set___currentState(this.get_upState());
        },
        __this_onMouseOver: function (a) {
          a.buttonDown && (this.__ignoreEvent = !0);
          this.get_overState() != this.__currentState &&
            null != this.get_overState() &&
            !this.__ignoreEvent &&
            this.enabled &&
            this.set___currentState(this.get_overState());
        },
        __this_onMouseUp: function (a) {
          this.__ignoreEvent = !1;
          this.enabled && null != this.get_overState()
            ? this.set___currentState(this.get_overState())
            : this.set___currentState(this.get_upState());
        },
        __class__: Gf,
        __properties__: u(sa.prototype.__properties__, {
          set___currentState: 'set___currentState',
          get_upState: 'get_upState',
          get_overState: 'get_overState',
          set_hitTestState: 'set_hitTestState',
          get_hitTestState: 'get_hitTestState',
          get_downState: 'get_downState',
        }),
      });
      var Hf = function (a, b) {
        hb.call(this);
        this.__drawableType = 5;
        this.set_name(null);
        this.__color = -1;
        this.__colorSplit = [255, 255, 255];
        this.__colorString = '#FFFFFF';
        this.__contentsScaleFactor = 1;
        this.__deltaTime = this.__currentTabOrderIndex = 0;
        this.__displayState = 2;
        this.__logicalHeight =
          this.__logicalWidth =
          this.__lastClickTime =
          this.__mouseY =
          this.__mouseX =
            0;
        this.__displayMatrix = new wa();
        this.__displayRect = new qa();
        this.__renderDirty = !0;
        this.stage3Ds = X.toObjectVector(null);
        this.stage3Ds.push(new Xe(this));
        this.stage3Ds.push(new Xe(this));
        this.stage3Ds.push(new Xe(this));
        this.stage3Ds.push(new Xe(this));
        this.stage = this;
        this.align = 6;
        this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
        this.__quality = 1;
        this.__scaleMode = 2;
        this.showDefaultContextMenu = !0;
        this.softKeyboardRect = new qa();
        this.stageFocusRect = !0;
        this.__macKeyboard =
          (/AppleWebKit/.test(navigator.userAgent) &&
            /Mobile\/\w+/.test(navigator.userAgent)) ||
          /Mac/.test(navigator.platform);
        this.__clearBeforeRender = !0;
        this.__forceRender = !1;
        this.__stack = [];
        this.__rollOutStack = [];
        this.__mouseOutStack = [];
        this.__touchData = new ac();
        null == Ja.get_current().__loaderInfo &&
          ((Ja.get_current().__loaderInfo = Ed.create(null)),
          (Ja.get_current().__loaderInfo.content = Ja.get_current()));
        this.__uncaughtErrorEvents =
          Ja.get_current().__loaderInfo.uncaughtErrorEvents;
        this.application = a.application;
        this.window = a;
        this.set_color(b);
        this.__contentsScaleFactor = a.__scale;
        this.__wasFullscreen = a.__fullscreen;
        this.__resize();
        null == Ja.get_current().stage && this.stage.addChild(Ja.get_current());
      };
      g['openfl.display.Stage'] = Hf;
      Hf.__name__ = 'openfl.display.Stage';
      Hf.__interfaces__ = [Ea];
      Hf.__super__ = hb;
      Hf.prototype = u(hb.prototype, {
        localToGlobal: function (a) {
          return a.clone();
        },
        __broadcastEvent: function (a) {
          if (
            Object.prototype.hasOwnProperty.call(S.__broadcastEvents.h, a.type)
          )
            for (var b = S.__broadcastEvents.h[a.type], c = 0; c < b.length; ) {
              var d = b[c];
              ++c;
              if (d.stage == this || null == d.stage)
                if (this.__uncaughtErrorEvents.__enabled)
                  try {
                    d.__dispatch(a);
                  } catch (f) {
                    ((Qa.lastError = f),
                      (d = W.caught(f).unwrap()),
                      this.__handleError(d));
                  }
                else d.__dispatch(a);
            }
        },
        __createRenderer: function () {
          var a = (this.window.__width * this.window.__scale) | 0,
            b = (this.window.__height * this.window.__scale) | 0;
          switch (this.window.context.type) {
            case 'canvas':
              this.__renderer = new ee(this.window.context.canvas2D);
              break;
            case 'dom':
              this.__renderer = new tg(this.window.context.dom);
              break;
            case 'opengl':
            case 'opengles':
            case 'webgl':
              ((this.context3D = new ob(this)),
                this.context3D.configureBackBuffer(
                  this.stageWidth,
                  this.stageHeight,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                this.context3D.present(),
                (this.__renderer = new Ta(this.context3D)));
          }
          if (null != this.__renderer) {
            var c = this.get_quality();
            this.__renderer.__allowSmoothing = 2 != c;
            this.__renderer.__pixelRatio = this.window.__scale;
            this.__renderer.__worldTransform = this.__displayMatrix;
            this.__renderer.__stage = this;
            this.__renderer.__resize(a, b);
          }
        },
        __dispatchEvent: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var b = hb.prototype.__dispatchEvent.call(this, a);
            } catch (c) {
              ((Qa.lastError = c),
                (a = W.caught(c).unwrap()),
                this.__handleError(a),
                (b = !1));
            }
          else b = hb.prototype.__dispatchEvent.call(this, a);
          return b;
        },
        __dispatchPendingMouseEvent: function () {
          this.__pendingMouseEvent &&
            (this.__onMouse(
              'mouseMove',
              this.__pendingMouseX,
              this.__pendingMouseY,
              0,
            ),
            (this.__pendingMouseEvent = !1));
        },
        __dispatchStack: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var c = b.length;
              if (0 == c) {
                a.eventPhase = 2;
                var d = a.target;
                d.__dispatch(a);
              } else {
                a.eventPhase = 1;
                a.target = b[b.length - 1];
                for (var f = 0, h = c - 1; f < h; ) {
                  var k = f++;
                  b[k].__dispatch(a);
                  if (a.__isCanceled) return;
                }
                a.eventPhase = 2;
                d = a.target;
                d.__dispatch(a);
                if (!a.__isCanceled && a.bubbles)
                  for (a.eventPhase = 3, k = c - 2; 0 <= k; ) {
                    b[k].__dispatch(a);
                    if (a.__isCanceled) break;
                    --k;
                  }
              }
            } catch (v) {
              ((Qa.lastError = v),
                (a = W.caught(v).unwrap()),
                this.__handleError(a));
            }
          else if (((c = b.length), 0 == c))
            ((a.eventPhase = 2), (d = a.target), d.__dispatch(a));
          else {
            a.eventPhase = 1;
            a.target = b[b.length - 1];
            f = 0;
            for (h = c - 1; f < h; )
              if (((k = f++), b[k].__dispatch(a), a.__isCanceled)) return;
            a.eventPhase = 2;
            d = a.target;
            d.__dispatch(a);
            if (!a.__isCanceled && a.bubbles)
              for (a.eventPhase = 3, k = c - 2; 0 <= k; ) {
                b[k].__dispatch(a);
                if (a.__isCanceled) break;
                --k;
              }
          }
        },
        __dispatchTarget: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              return a.__dispatchEvent(b);
            } catch (c) {
              return (
                (Qa.lastError = c),
                (a = W.caught(c).unwrap()),
                this.__handleError(a),
                !1
              );
            }
          else return a.__dispatchEvent(b);
        },
        __drag: function (a) {
          var b = this.__dragObject.parent;
          if (null != b) {
            b = b.__getWorldTransform();
            var c = b.a * b.d - b.b * b.c;
            if (0 == c) ((a.x = -b.tx), (a.y = -b.ty));
            else {
              var d = (1 / c) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
              a.y = (1 / c) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
              a.x = d;
            }
          }
          b = a.x + this.__dragOffsetX;
          a = a.y + this.__dragOffsetY;
          null != this.__dragBounds &&
            (b < this.__dragBounds.x
              ? (b = this.__dragBounds.x)
              : b > this.__dragBounds.get_right() &&
                (b = this.__dragBounds.get_right()),
            a < this.__dragBounds.y
              ? (a = this.__dragBounds.y)
              : a > this.__dragBounds.get_bottom() &&
                (a = this.__dragBounds.get_bottom()));
          this.__dragObject.set_x(b);
          this.__dragObject.set_y(a);
        },
        __getInteractive: function (a) {
          null != a && a.push(this);
          return !0;
        },
        __globalToLocal: function (a, b) {
          a != b && b.copyFrom(a);
          return b;
        },
        __handleError: function (a) {
          var b = new cf('uncaughtError', !0, !0, a);
          Ja.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b);
          if (!b.__preventDefault) {
            b = we.toString(we.exceptionStack());
            console.log(b);
            b = I.string(a);
            console.log(b);
            try {
              if (
                null != a &&
                Object.prototype.hasOwnProperty.call(a, 'stack') &&
                null != a.stack &&
                '' != a.stack
              )
                (console.log(a.stack), (a.stack = a.stack));
              else {
                var c = we.toString(we.callStack());
                console.log(c);
              }
            } catch (d) {
              Qa.lastError = d;
            }
            throw a;
          }
        },
        __onKey: function (a, b, c) {
          this.__dispatchPendingMouseEvent();
          Cb.__altKey = Wa.get_altKey(c);
          Cb.__commandKey = Wa.get_metaKey(c);
          Cb.__controlKey = Wa.get_ctrlKey(c) && !Wa.get_metaKey(c);
          Cb.__ctrlKey = Wa.get_ctrlKey(c);
          Cb.__shiftKey = Wa.get_shiftKey(c);
          var d = [];
          null == this.__focus
            ? this.__getInteractive(d)
            : this.__focus.__getInteractive(d);
          if (0 < d.length) {
            switch (b) {
              case 1073741908:
              case 1073741909:
              case 1073741910:
              case 1073741911:
              case 1073741912:
              case 1073741913:
              case 1073741914:
              case 1073741915:
              case 1073741916:
              case 1073741917:
              case 1073741918:
              case 1073741919:
              case 1073741920:
              case 1073741921:
              case 1073741922:
              case 1073741923:
              case 1073742044:
                var f = 3;
                break;
              case 1073742048:
              case 1073742049:
              case 1073742050:
              case 1073742051:
                f = 1;
                break;
              case 1073742052:
              case 1073742053:
              case 1073742054:
              case 1073742055:
                f = 2;
                break;
              default:
                f = 0;
            }
            switch (b) {
              case 8:
                b = 8;
                break;
              case 9:
                b = 9;
                break;
              case 13:
                b = 13;
                break;
              case 27:
                b = 27;
                break;
              case 32:
                b = 32;
                break;
              case 33:
                b = 49;
                break;
              case 34:
                b = 222;
                break;
              case 35:
                b = 51;
                break;
              case 36:
                b = 52;
                break;
              case 37:
                b = 53;
                break;
              case 38:
                b = 55;
                break;
              case 39:
                b = 222;
                break;
              case 40:
                b = 57;
                break;
              case 41:
                b = 48;
                break;
              case 42:
                b = 56;
                break;
              case 44:
                b = 188;
                break;
              case 45:
                b = 189;
                break;
              case 46:
                b = 190;
                break;
              case 47:
                b = 191;
                break;
              case 48:
                b = 48;
                break;
              case 49:
                b = 49;
                break;
              case 50:
                b = 50;
                break;
              case 51:
                b = 51;
                break;
              case 52:
                b = 52;
                break;
              case 53:
                b = 53;
                break;
              case 54:
                b = 54;
                break;
              case 55:
                b = 55;
                break;
              case 56:
                b = 56;
                break;
              case 57:
                b = 57;
                break;
              case 58:
                b = 186;
                break;
              case 59:
                b = 186;
                break;
              case 60:
                b = 60;
                break;
              case 61:
                b = 187;
                break;
              case 62:
                b = 190;
                break;
              case 63:
                b = 191;
                break;
              case 64:
                b = 50;
                break;
              case 91:
                b = 219;
                break;
              case 92:
                b = 220;
                break;
              case 93:
                b = 221;
                break;
              case 94:
                b = 54;
                break;
              case 95:
                b = 189;
                break;
              case 96:
                b = 192;
                break;
              case 97:
                b = 65;
                break;
              case 98:
                b = 66;
                break;
              case 99:
                b = 67;
                break;
              case 100:
                b = 68;
                break;
              case 101:
                b = 69;
                break;
              case 102:
                b = 70;
                break;
              case 103:
                b = 71;
                break;
              case 104:
                b = 72;
                break;
              case 105:
                b = 73;
                break;
              case 106:
                b = 74;
                break;
              case 107:
                b = 75;
                break;
              case 108:
                b = 76;
                break;
              case 109:
                b = 77;
                break;
              case 110:
                b = 78;
                break;
              case 111:
                b = 79;
                break;
              case 112:
                b = 80;
                break;
              case 113:
                b = 81;
                break;
              case 114:
                b = 82;
                break;
              case 115:
                b = 83;
                break;
              case 116:
                b = 84;
                break;
              case 117:
                b = 85;
                break;
              case 118:
                b = 86;
                break;
              case 119:
                b = 87;
                break;
              case 120:
                b = 88;
                break;
              case 121:
                b = 89;
                break;
              case 122:
                b = 90;
                break;
              case 127:
                b = 46;
                break;
              case 1073741881:
                b = 20;
                break;
              case 1073741882:
                b = 112;
                break;
              case 1073741883:
                b = 113;
                break;
              case 1073741884:
                b = 114;
                break;
              case 1073741885:
                b = 115;
                break;
              case 1073741886:
                b = 116;
                break;
              case 1073741887:
                b = 117;
                break;
              case 1073741888:
                b = 118;
                break;
              case 1073741889:
                b = 119;
                break;
              case 1073741890:
                b = 120;
                break;
              case 1073741891:
                b = 121;
                break;
              case 1073741892:
                b = 122;
                break;
              case 1073741893:
                b = 123;
                break;
              case 1073741894:
                b = 301;
                break;
              case 1073741895:
                b = 145;
                break;
              case 1073741896:
                b = 19;
                break;
              case 1073741897:
                b = 45;
                break;
              case 1073741898:
                b = 36;
                break;
              case 1073741899:
                b = 33;
                break;
              case 1073741901:
                b = 35;
                break;
              case 1073741902:
                b = 34;
                break;
              case 1073741903:
                b = 39;
                break;
              case 1073741904:
                b = 37;
                break;
              case 1073741905:
                b = 40;
                break;
              case 1073741906:
                b = 38;
                break;
              case 1073741907:
                b = 144;
                break;
              case 1073741908:
                b = 111;
                break;
              case 1073741909:
                b = 106;
                break;
              case 1073741910:
                b = 109;
                break;
              case 1073741911:
                b = 107;
                break;
              case 1073741912:
                b = 13;
                break;
              case 1073741913:
                b = 97;
                break;
              case 1073741914:
                b = 98;
                break;
              case 1073741915:
                b = 99;
                break;
              case 1073741916:
                b = 100;
                break;
              case 1073741917:
                b = 101;
                break;
              case 1073741918:
                b = 102;
                break;
              case 1073741919:
                b = 103;
                break;
              case 1073741920:
                b = 104;
                break;
              case 1073741921:
                b = 105;
                break;
              case 1073741922:
                b = 96;
                break;
              case 1073741923:
                b = 110;
                break;
              case 1073741925:
                b = 302;
                break;
              case 1073741928:
                b = 124;
                break;
              case 1073741929:
                b = 125;
                break;
              case 1073741930:
                b = 126;
                break;
              case 1073741982:
                b = 13;
                break;
              case 1073742044:
                b = 110;
                break;
              case 1073742048:
                b = 17;
                break;
              case 1073742049:
                b = 16;
                break;
              case 1073742050:
                b = 18;
                break;
              case 1073742051:
                b = 15;
                break;
              case 1073742052:
                b = 17;
                break;
              case 1073742053:
                b = 16;
                break;
              case 1073742054:
                b = 18;
                break;
              case 1073742055:
                b = 15;
            }
            var h = Pj.__getCharCode(b, Wa.get_shiftKey(c));
            if (
              'keyUp' == a &&
              (32 == b || 13 == b) &&
              this.__focus instanceof fa
            ) {
              var k = Ua.__cast(this.__focus, fa);
              if (k.get_buttonMode() && 1 == k.focusRect) {
                var g = K.__pool.get(),
                  p = K.__pool.get();
                p.x = this.__mouseX;
                p.y = this.__mouseY;
                k = Cb.__create(
                  'click',
                  0,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  k.__globalToLocal(p, g),
                  k,
                );
                this.__dispatchStack(k, d);
                k.__updateAfterEventFlag && this.__renderAfterEvent();
                K.__pool.release(p);
                K.__pool.release(g);
              }
            }
            f = new ai(
              a,
              !0,
              !0,
              h,
              b,
              f,
              this.__macKeyboard
                ? Wa.get_ctrlKey(c) || Wa.get_metaKey(c)
                : Wa.get_ctrlKey(c),
              Wa.get_altKey(c),
              Wa.get_shiftKey(c),
              Wa.get_ctrlKey(c),
              Wa.get_metaKey(c),
            );
            d.reverse();
            this.__dispatchStack(f, d);
            if (f.__preventDefault)
              'keyDown' == a
                ? this.window.onKeyDown.cancel()
                : this.window.onKeyUp.cancel();
            else if ('keyDown' == a && 9 == b) {
              d = [];
              this.__tabTest(d);
              h = -1;
              a = null;
              b = Wa.get_shiftKey(c) ? -1 : 1;
              if (1 < d.length) {
                uc.sort(d, function (a, b) {
                  return a.get_tabIndex() - b.get_tabIndex();
                });
                if (-1 != d[d.length - 1].get_tabIndex())
                  for (p = 0; p < d.length; ) {
                    if (-1 < d[p].get_tabIndex()) {
                      0 < p && d.splice(0, p);
                      break;
                    }
                    ++p;
                  }
                if (null != this.get_focus()) {
                  p = this.get_focus();
                  for (g = d.indexOf(p); -1 == g && null != p; ) {
                    h = p.parent;
                    if (null != h && h.get_tabChildren()) {
                      p = h.getChildIndex(p);
                      if (-1 == p) {
                        p = h;
                        continue;
                      }
                      for (
                        p += b;
                        Wa.get_shiftKey(c) ? 0 <= p : p < h.get_numChildren();

                      ) {
                        k = h.getChildAt(p);
                        if (
                          k instanceof sa &&
                          ((g = Ua.__cast(k, sa)), (g = d.indexOf(g)), -1 != g)
                        ) {
                          b = 0;
                          break;
                        }
                        p += b;
                      }
                    } else
                      Wa.get_shiftKey(c) &&
                        ((g = d.indexOf(h)), -1 != g && (b = 0));
                    p = h;
                  }
                  h = 0 > g ? 0 : g + b;
                } else h = this.__currentTabOrderIndex;
              } else
                1 == d.length &&
                  ((a = d[0]), this.get_focus() == a && (a = null));
              g = 0 <= h && h < d.length;
              1 == d.length || (0 == d.length && null != this.get_focus())
                ? (h = 0)
                : 1 < d.length &&
                  (0 > h && (h += d.length),
                  (h %= d.length),
                  (a = d[h]),
                  a == this.get_focus() &&
                    ((h += b),
                    0 > h && (h += d.length),
                    (h %= d.length),
                    (a = d[h])));
              b = null;
              null != this.get_focus() &&
                ((b = new Ye(
                  'keyFocusChange',
                  !0,
                  !0,
                  a,
                  Wa.get_shiftKey(c),
                  0,
                )),
                (d = []),
                this.get_focus().__getInteractive(d),
                d.reverse(),
                this.__dispatchStack(b, d),
                b.isDefaultPrevented() && this.window.onKeyDown.cancel());
              (null != b && b.isDefaultPrevented()) ||
                ((this.__currentTabOrderIndex = h),
                null != a && this.set_focus(a),
                g && this.window.onKeyDown.cancel());
            } else if (
              'keyDown' == a &&
              null != this.get_focus() &&
              !(this.get_focus() instanceof Gc) &&
              (this.__macKeyboard
                ? Wa.get_ctrlKey(c) || Wa.get_metaKey(c)
                : Wa.get_ctrlKey(c)) &&
              !Wa.get_altKey(c) &&
              !Wa.get_shiftKey(c)
            )
              switch (b) {
                case 65:
                  c = new va('selectAll', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 67:
                  c = new va('copy', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 86:
                  c = new va('paste', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 88:
                  ((c = new va('cut', !0, !0)),
                    this.get_focus().dispatchEvent(c));
              }
            f.__updateAfterEventFlag && this.__renderAfterEvent();
          }
        },
        __onLimeCreateWindow: function (a) {
          if (this.window == a) {
            var b = this;
            a.onActivate.add(function () {
              b.__onLimeWindowActivate(a);
            });
            var c = this;
            a.onClose.add(
              function () {
                c.__onLimeWindowClose(a);
              },
              !1,
              -9e3,
            );
            var d = this;
            a.onDeactivate.add(function () {
              d.__onLimeWindowDeactivate(a);
            });
            var f = this;
            var h = function (b) {
              f.__onLimeWindowDropFile(a, b);
            };
            a.onDropFile.add(h);
            var k = this;
            a.onEnter.add(function () {
              k.__onLimeWindowEnter(a);
            });
            var g = this;
            a.onExpose.add(function () {
              g.__onLimeWindowExpose(a);
            });
            var p = this;
            a.onFocusIn.add(function () {
              p.__onLimeWindowFocusIn(a);
            });
            var t = this;
            a.onFocusOut.add(function () {
              t.__onLimeWindowFocusOut(a);
            });
            var n = this;
            a.onFullscreen.add(function () {
              n.__onLimeWindowFullscreen(a);
            });
            var m = this;
            h = function (b, c) {
              m.__onLimeKeyDown(a, b, c);
            };
            a.onKeyDown.add(h);
            var x = this;
            h = function (b, c) {
              x.__onLimeKeyUp(a, b, c);
            };
            a.onKeyUp.add(h);
            var q = this;
            a.onLeave.add(function () {
              q.__onLimeWindowLeave(a);
            });
            var G = this;
            a.onMinimize.add(function () {
              G.__onLimeWindowMinimize(a);
            });
            var z = this;
            h = function (b, c, d) {
              z.__onLimeMouseDown(a, b, c, d);
            };
            a.onMouseDown.add(h);
            var w = this;
            h = function (b, c) {
              w.__onLimeMouseMove(a, b, c);
            };
            a.onMouseMove.add(h);
            var D = this;
            h = function (b, c) {
              D.__onLimeMouseMoveRelative(a, b, c);
            };
            a.onMouseMoveRelative.add(h);
            var B = this;
            h = function (b, c, d) {
              B.__onLimeMouseUp(a, b, c, d);
            };
            a.onMouseUp.add(h);
            var F = this;
            h = function (b, c, d) {
              F.__onLimeMouseWheel(a, b, c, d);
            };
            a.onMouseWheel.add(h);
            var r = this;
            h = function (b, c) {
              r.__onLimeWindowMove(a, b, c);
            };
            a.onMove.add(h);
            a.onRender.add(l(this, this.__onLimeRender));
            a.onRenderContextLost.add(l(this, this.__onLimeRenderContextLost));
            a.onRenderContextRestored.add(
              l(this, this.__onLimeRenderContextRestored),
            );
            var H = this;
            h = function (b, c) {
              H.__onLimeWindowResize(a, b, c);
            };
            a.onResize.add(h);
            var u = this;
            a.onRestore.add(function () {
              u.__onLimeWindowRestore(a);
            });
            var C = this;
            h = function (b, c, d) {
              C.__onLimeTextEdit(a, b, c, d);
            };
            a.onTextEdit.add(h);
            var ba = this;
            h = function (b) {
              ba.__onLimeTextInput(a, b);
            };
            a.onTextInput.add(h);
            this.__onLimeWindowCreate(a);
          }
        },
        __onLimeGamepadAxisMove: function (a, b, c) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Ba.__onGamepadAxisMove(a, b, c);
            } catch (d) {
              ((Qa.lastError = d),
                (a = W.caught(d).unwrap()),
                this.__handleError(a));
            }
          else Ba.__onGamepadAxisMove(a, b, c);
        },
        __onLimeGamepadButtonDown: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Ba.__onGamepadButtonDown(a, b);
            } catch (c) {
              ((Qa.lastError = c),
                (a = W.caught(c).unwrap()),
                this.__handleError(a));
            }
          else Ba.__onGamepadButtonDown(a, b);
        },
        __onLimeGamepadButtonUp: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Ba.__onGamepadButtonUp(a, b);
            } catch (c) {
              ((Qa.lastError = c),
                (a = W.caught(c).unwrap()),
                this.__handleError(a));
            }
          else Ba.__onGamepadButtonUp(a, b);
        },
        __onLimeGamepadConnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Ba.__onGamepadConnect(a);
            } catch (k) {
              Qa.lastError = k;
              var b = W.caught(k).unwrap();
              this.__handleError(b);
            }
          else Ba.__onGamepadConnect(a);
          var c = this;
          b = function (b, d) {
            c.__onLimeGamepadAxisMove(a, b, d);
          };
          a.onAxisMove.add(b);
          var d = this;
          b = function (b) {
            d.__onLimeGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(b);
          var f = this;
          b = function (b) {
            f.__onLimeGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(b);
          var h = this;
          a.onDisconnect.add(function () {
            h.__onLimeGamepadDisconnect(a);
          });
        },
        __onLimeGamepadDisconnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Ba.__onGamepadDisconnect(a);
            } catch (b) {
              ((Qa.lastError = b),
                (a = W.caught(b).unwrap()),
                this.__handleError(a));
            }
          else Ba.__onGamepadDisconnect(a);
        },
        __onLimeKeyDown: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyDown', b, c);
        },
        __onLimeKeyUp: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyUp', b, c);
        },
        __onLimeModuleExit: function (a) {
          null != this.window &&
            ((a = new va('deactivate')), this.__broadcastEvent(a));
        },
        __onLimeMouseDown: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var f = 'middleMouseDown';
                break;
              case 2:
                f = 'rightMouseDown';
                break;
              default:
                f = 'mouseDown';
            }
            this.__onMouse(f, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel();
          }
        },
        __onLimeMouseMove: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            ((this.__pendingMouseEvent = !0),
            (this.__pendingMouseX = (b * a.__scale) | 0),
            (this.__pendingMouseY = (c * a.__scale) | 0));
        },
        __onLimeMouseMoveRelative: function (a, b, c) {},
        __onLimeMouseUp: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var f = 'middleMouseUp';
                break;
              case 2:
                f = 'rightMouseUp';
                break;
              default:
                f = 'mouseUp';
            }
            this.__onMouse(f, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel();
          }
        },
        __onLimeMouseWheel: function (a, b, c, d) {
          null != this.window &&
            this.window == a &&
            (this.__dispatchPendingMouseEvent(),
            d == ye.PIXELS
              ? this.__onMouseWheel((b * a.__scale) | 0, (c * a.__scale) | 0, d)
              : this.__onMouseWheel(b | 0, c | 0, d));
        },
        __renderAfterEvent: function () {
          this.__render(this.window.context);
        },
        __render: function (a) {
          a = !1;
          var b =
            null != this.__renderer &&
            (this.__renderDirty || this.__forceRender);
          if (this.__invalidated && b) {
            this.__invalidated = !1;
            var c = new va('render');
            this.__broadcastEvent(c);
          }
          this.__update(!1, !0);
          if (null != this.__renderer) {
            if (null != this.context3D) {
              for (c = this.stage3Ds.iterator(); c.hasNext(); ) {
                var d = c.next();
                this.context3D.__renderStage3D(d);
              }
              this.context3D.__present && (b = !0);
            }
            b
              ? (null == this.context3D && this.__renderer.__clear(),
                this.__renderer.__render(this))
              : null == this.context3D && (a = !0);
            null != this.context3D &&
              (this.context3D.__present
                ? (this.__renderer.__cleared || this.__renderer.__clear(),
                  (this.context3D.__present = !1),
                  (this.context3D.__cleared = !1))
                : (a = !0));
            this.__renderer.__cleared = !1;
          }
          return a;
        },
        __onLimeRender: function (a) {
          this.__rendering ||
            ((this.__rendering = !0),
            this.__broadcastEvent(new va('enterFrame')),
            this.__broadcastEvent(new va('frameConstructed')),
            this.__broadcastEvent(new va('exitFrame')),
            (this.__renderable = !0),
            this.__enterFrame(this.__deltaTime),
            (this.__deltaTime = 0),
            this.__render(a) && this.window.onRender.cancel(),
            (this.__rendering = !1));
        },
        __onLimeRenderContextLost: function () {
          this.context3D = this.__renderer = null;
          for (var a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__lostContext();
        },
        __onLimeRenderContextRestored: function (a) {
          this.__createRenderer();
          for (a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__restoreContext();
        },
        __onLimeTextEdit: function (a, b, c, d) {},
        __onLimeTextInput: function (a, b) {
          if (null != this.window && this.window == a) {
            var c = [];
            null == this.__focus
              ? this.__getInteractive(c)
              : this.__focus.__getInteractive(c);
            b = new Rd('textInput', !0, !0, b);
            0 < c.length
              ? (c.reverse(), this.__dispatchStack(b, c))
              : this.__dispatchEvent(b);
            b.isDefaultPrevented() && a.onTextInput.cancel();
          }
        },
        __onLimeTouchCancel: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchMove: function (a) {
          this.__onTouch('touchMove', a, this.__primaryTouch == a);
        },
        __onLimeTouchEnd: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchStart: function (a) {
          null == this.__primaryTouch && (this.__primaryTouch = a);
          this.__onTouch('touchBegin', a, this.__primaryTouch == a);
        },
        __onLimeUpdate: function (a) {
          this.__deltaTime = a;
          this.__dispatchPendingMouseEvent();
        },
        __onLimeWindowActivate: function (a) {},
        __onLimeWindowClose: function (a) {
          this.window == a && (this.window = null);
          this.__primaryTouch = null;
          a = new va('deactivate');
          this.__broadcastEvent(a);
        },
        __onLimeWindowCreate: function (a) {
          null != this.window &&
            this.window == a &&
            null != a.context &&
            this.__createRenderer();
        },
        __onLimeWindowDeactivate: function (a) {},
        __onLimeWindowDropFile: function (a, b) {},
        __onLimeWindowEnter: function (a) {},
        __onLimeWindowExpose: function (a) {
          null != this.window && this.window == a && (this.__renderDirty = !0);
        },
        __onLimeWindowFocusIn: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__renderDirty = !0),
            (a = new va('activate')),
            this.__broadcastEvent(a),
            this.set_focus(this.__cacheFocus));
        },
        __onLimeWindowFocusOut: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__primaryTouch = null),
            (a = new va('deactivate')),
            this.__broadcastEvent(a),
            (a = this.get_focus()),
            this.set_focus(null),
            (this.__cacheFocus = a),
            (Cb.__altKey = !1),
            (Cb.__commandKey = !1),
            (Cb.__ctrlKey = !1),
            (Cb.__shiftKey = !1));
        },
        __onLimeWindowFullscreen: function (a) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen ||
              ((this.__wasFullscreen = !0),
              2 == this.__displayState && (this.__displayState = 1),
              this.__dispatchEvent(new ke('fullScreen', !1, !1, !0, !0))));
        },
        __onLimeWindowLeave: function (a) {
          null == this.window ||
            this.window != a ||
            Cb.__buttonDown ||
            (this.__dispatchPendingMouseEvent(),
            (a = new va('mouseLeave')),
            this.__dispatchEvent(a));
        },
        __onLimeWindowMinimize: function (a) {},
        __onLimeWindowMove: function (a, b, c) {},
        __onLimeWindowResize: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen &&
              !a.__fullscreen &&
              ((this.__wasFullscreen = !1),
              (this.__displayState = 2),
              this.__dispatchEvent(new ke('fullScreen', !1, !1, !1, !0))));
        },
        __onLimeWindowRestore: function (a) {
          null != this.window &&
            this.window == a &&
            this.__wasFullscreen &&
            !a.__fullscreen &&
            ((this.__wasFullscreen = !1),
            (this.__displayState = 2),
            this.__dispatchEvent(new ke('fullScreen', !1, !1, !1, !0)));
        },
        __onMouse: function (a, b, c, d) {
          if (!(2 < d)) {
            var f = K.__pool.get();
            f.setTo(b, c);
            b = this.__displayMatrix;
            c = b.a * b.d - b.b * b.c;
            if (0 == c) ((f.x = -b.tx), (f.y = -b.ty));
            else {
              var h = (1 / c) * (b.c * (b.ty - f.y) + b.d * (f.x - b.tx));
              f.y = (1 / c) * (b.a * (f.y - b.ty) + b.b * (b.tx - f.x));
              f.x = h;
            }
            this.__mouseX = f.x;
            this.__mouseY = f.y;
            b = [];
            this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this)
              ? (h = b[b.length - 1])
              : ((h = this), (b = [this]));
            null == h && (h = this);
            var k = null,
              g = !1;
            switch (a) {
              case 'middleMouseDown':
                this.__mouseDownMiddle = h;
                g = !0;
                break;
              case 'middleMouseUp':
                this.__mouseDownMiddle == h && (k = 'middleClick');
                this.__mouseDownMiddle = null;
                g = !0;
                break;
              case 'mouseDown':
                null != this.get_focus()
                  ? this.get_focus() != h &&
                    ((c = new Ye('mouseFocusChange', !0, !0, h, !1, 0)),
                    this.get_focus().dispatchEvent(c),
                    c.isDefaultPrevented() ||
                      (h.__allowMouseFocus()
                        ? this.set_focus(h)
                        : this.set_focus(null)))
                  : h.__allowMouseFocus()
                    ? this.set_focus(h)
                    : this.set_focus(null);
                this.__mouseDownLeft = h;
                this.__lastClickTarget != h &&
                  ((this.__lastClickTarget = null), (this.__lastClickTime = 0));
                g = Cb.__buttonDown = !0;
                break;
              case 'mouseUp':
                null != this.__mouseDownLeft &&
                  ((Cb.__buttonDown = !1),
                  this.__mouseDownLeft == h
                    ? (k = 'click')
                    : ((g = Cb.__create(
                        'releaseOutside',
                        1,
                        0,
                        this.__mouseX,
                        this.__mouseY,
                        new K(this.__mouseX, this.__mouseY),
                        this,
                      )),
                      this.__mouseDownLeft.dispatchEvent(g)),
                  (this.__mouseDownLeft = null));
                g = !0;
                break;
              case 'rightMouseDown':
                this.__mouseDownRight = h;
                g = !0;
                break;
              case 'rightMouseUp':
                (this.__mouseDownRight == h && (k = 'rightClick'),
                  (this.__mouseDownRight = null),
                  (g = !0));
            }
            c = K.__pool.get();
            g = Cb.__create(
              a,
              d,
              g ? this.window.clickCount : 0,
              this.__mouseX,
              this.__mouseY,
              h.__globalToLocal(f, c),
              h,
            );
            this.__dispatchStack(g, b);
            g.__updateAfterEventFlag && this.__renderAfterEvent();
            null != k &&
              ((g = Cb.__create(
                k,
                d,
                0,
                this.__mouseX,
                this.__mouseY,
                h.__globalToLocal(f, c),
                h,
              )),
              this.__dispatchStack(g, b),
              g.__updateAfterEventFlag && this.__renderAfterEvent(),
              'mouseUp' == a &&
                (h.doubleClickEnabled
                  ? ((a = Ja.getTimer()),
                    500 > a - this.__lastClickTime &&
                    h == this.__lastClickTarget
                      ? ((g = Cb.__create(
                          'doubleClick',
                          d,
                          0,
                          this.__mouseX,
                          this.__mouseY,
                          h.__globalToLocal(f, c),
                          h,
                        )),
                        this.__dispatchStack(g, b),
                        g.__updateAfterEventFlag && this.__renderAfterEvent(),
                        (this.__lastClickTime = 0),
                        (this.__lastClickTarget = null))
                      : ((this.__lastClickTarget = h),
                        (this.__lastClickTime = a)))
                  : ((this.__lastClickTarget = null),
                    (this.__lastClickTime = 0))));
            if ('auto' == mj.__cursor && !mj.__hidden) {
              g = null;
              if (null != this.__mouseDownLeft)
                g = this.__mouseDownLeft.__getCursor();
              else
                for (a = 0; a < b.length; )
                  if (
                    ((g = b[a]),
                    ++a,
                    (g = g.__getCursor()),
                    null != g && null != this.window)
                  ) {
                    this.window.set_cursor(ok.toLimeCursor(g));
                    break;
                  }
              null == g &&
                null != this.window &&
                this.window.set_cursor(Qb.ARROW);
            }
            h != this.__mouseOverTarget &&
              null != this.__mouseOverTarget &&
              ((g = Cb.__create(
                'mouseOut',
                d,
                0,
                this.__mouseX,
                this.__mouseY,
                this.__mouseOverTarget.__globalToLocal(f, c),
                this.__mouseOverTarget,
              )),
              this.__dispatchStack(g, this.__mouseOutStack),
              g.__updateAfterEventFlag && this.__renderAfterEvent());
            for (a = 0; a < this.__rollOutStack.length; )
              ((k = this.__rollOutStack[a]),
                -1 == b.indexOf(k)
                  ? (O.remove(this.__rollOutStack, k),
                    (g = Cb.__create(
                      'rollOut',
                      d,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(f, c),
                      k,
                    )),
                    (g.bubbles = !1),
                    this.__dispatchTarget(k, g),
                    g.__updateAfterEventFlag && this.__renderAfterEvent())
                  : ++a);
            for (a = 0; a < b.length; )
              ((k = b[a]),
                ++a,
                -1 == this.__rollOutStack.indexOf(k) &&
                  null != this.__mouseOverTarget &&
                  (k.hasEventListener('rollOver') &&
                    ((g = Cb.__create(
                      'rollOver',
                      d,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(f, c),
                      k,
                    )),
                    (g.bubbles = !1),
                    this.__dispatchTarget(k, g),
                    g.__updateAfterEventFlag && this.__renderAfterEvent()),
                  (k.hasEventListener('rollOut') ||
                    k.hasEventListener('rollOver')) &&
                    this.__rollOutStack.push(k)));
            h != this.__mouseOverTarget &&
              (null != h &&
                ((g = Cb.__create(
                  'mouseOver',
                  d,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  h.__globalToLocal(f, c),
                  h,
                )),
                this.__dispatchStack(g, b),
                g.__updateAfterEventFlag && this.__renderAfterEvent()),
              (this.__mouseOverTarget = h),
              (this.__mouseOutStack = b));
            null != this.__dragObject &&
              (this.__drag(f),
              (d = null),
              this.__mouseOverTarget == this.__dragObject
                ? ((h = this.__dragObject.mouseEnabled),
                  (a = this.__dragObject.mouseChildren),
                  (this.__dragObject.mouseEnabled = !1),
                  (this.__dragObject.mouseChildren = !1),
                  (b = []),
                  this.__hitTest(
                    this.__mouseX,
                    this.__mouseY,
                    !0,
                    b,
                    !0,
                    this,
                  ) && (d = b[b.length - 1]),
                  (this.__dragObject.mouseEnabled = h),
                  (this.__dragObject.mouseChildren = a))
                : this.__mouseOverTarget != this &&
                  (d = this.__mouseOverTarget),
              (this.__dragObject.dropTarget = d));
            K.__pool.release(f);
            K.__pool.release(c);
          }
        },
        __onMouseWheel: function (a, b, c) {
          var d = this.__mouseX,
            f = this.__mouseY;
          a = [];
          if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this))
            var h = a[a.length - 1];
          else ((h = this), (a = [this]));
          null == h && (h = this);
          c = K.__pool.get();
          c.setTo(d, f);
          d = this.__displayMatrix;
          f = d.a * d.d - d.b * d.c;
          if (0 == f) ((c.x = -d.tx), (c.y = -d.ty));
          else {
            var k = (1 / f) * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
            c.y = (1 / f) * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
            c.x = k;
          }
          b |= 0;
          b = Cb.__create(
            'mouseWheel',
            0,
            0,
            this.__mouseX,
            this.__mouseY,
            h.__globalToLocal(c, c),
            h,
            b,
          );
          b.cancelable = !0;
          this.__dispatchStack(b, a);
          b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
          b.__updateAfterEventFlag && this.__renderAfterEvent();
          K.__pool.release(c);
        },
        __onTouch: function (a, b, c) {
          var d = K.__pool.get();
          d.setTo(
            Math.round(b.x * this.window.__width * this.window.__scale),
            Math.round(b.y * this.window.__height * this.window.__scale),
          );
          var f = this.__displayMatrix,
            h = f.a * f.d - f.b * f.c;
          if (0 == h) ((d.x = -f.tx), (d.y = -f.ty));
          else {
            var k = (1 / h) * (f.c * (f.ty - d.y) + f.d * (d.x - f.tx));
            d.y = (1 / h) * (f.a * (d.y - f.ty) + f.b * (f.tx - d.x));
            d.x = k;
          }
          f = d.x;
          h = d.y;
          k = [];
          if (this.__hitTest(f, h, !1, k, !0, this)) var g = k[k.length - 1];
          else ((g = this), (k = [this]));
          null == g && (g = this);
          var p = b.id;
          if (this.__touchData.h.hasOwnProperty(p))
            var t = this.__touchData.h[p];
          else
            ((t = Ze.__pool.get()),
              t.reset(),
              (t.touch = b),
              (this.__touchData.h[p] = t));
          var n = null,
            m = !1;
          switch (a) {
            case 'touchBegin':
              t.touchDownTarget = g;
              break;
            case 'touchEnd':
              (t.touchDownTarget == g && (n = 'touchTap'),
                (t.touchDownTarget = null),
                (m = !0));
          }
          var x = K.__pool.get();
          a = rd.__create(a, null, f, h, g.__globalToLocal(d, x), g);
          a.touchPointID = p;
          a.isPrimaryTouchPoint = c;
          a.pressure = b.pressure;
          this.__dispatchStack(a, k);
          a.__updateAfterEventFlag && this.__renderAfterEvent();
          null != n &&
            ((a = rd.__create(n, null, f, h, g.__globalToLocal(d, x), g)),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchStack(a, k),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          n = t.touchOverTarget;
          g != n &&
            null != n &&
            ((a = rd.__create(
              'touchOut',
              null,
              f,
              h,
              n.__globalToLocal(d, x),
              n,
            )),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchTarget(n, a),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          for (var q = t.rollOutStack, l, G = 0; G < q.length; )
            ((l = q[G]),
              -1 == k.indexOf(l)
                ? (O.remove(q, l),
                  (a = rd.__create(
                    'touchRollOut',
                    null,
                    f,
                    h,
                    n.__globalToLocal(d, x),
                    n,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(l, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent())
                : ++G);
          for (G = 0; G < k.length; )
            ((l = k[G]),
              ++G,
              -1 == q.indexOf(l) &&
                (l.hasEventListener('touchRollOver') &&
                  ((a = rd.__create(
                    'touchRollOver',
                    null,
                    f,
                    h,
                    n.__globalToLocal(d, x),
                    l,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(l, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent()),
                l.hasEventListener('touchRollOut') && q.push(l)));
          g != n &&
            (null != g &&
              ((a = rd.__create(
                'touchOver',
                null,
                f,
                h,
                g.__globalToLocal(d, x),
                g,
              )),
              (a.touchPointID = p),
              (a.isPrimaryTouchPoint = c),
              (a.bubbles = !0),
              (a.pressure = b.pressure),
              this.__dispatchTarget(g, a),
              a.__updateAfterEventFlag && this.__renderAfterEvent()),
            (t.touchOverTarget = g));
          K.__pool.release(d);
          K.__pool.release(x);
          m && (this.__touchData.remove(p), t.reset(), Ze.__pool.release(t));
        },
        __registerLimeModule: function (a) {
          a.onCreateWindow.add(l(this, this.__onLimeCreateWindow));
          a.onUpdate.add(l(this, this.__onLimeUpdate));
          a.onExit.add(l(this, this.__onLimeModuleExit), !1, 0);
          for (a = fc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onLimeGamepadConnect(b);
          }
          fc.onConnect.add(l(this, this.__onLimeGamepadConnect));
          Tb.onStart.add(l(this, this.__onLimeTouchStart));
          Tb.onMove.add(l(this, this.__onLimeTouchMove));
          Tb.onEnd.add(l(this, this.__onLimeTouchEnd));
          Tb.onCancel.add(l(this, this.__onLimeTouchCancel));
        },
        __resize: function () {
          var a = this.stageWidth,
            b = this.stageHeight,
            c = (this.window.__width * this.window.__scale) | 0,
            d = (this.window.__height * this.window.__scale) | 0;
          this.__displayMatrix.identity();
          if (
            null != this.get_fullScreenSourceRect() &&
            this.window.__fullscreen
          ) {
            this.stageWidth = this.get_fullScreenSourceRect().width | 0;
            this.stageHeight = this.get_fullScreenSourceRect().height | 0;
            var f = c / this.stageWidth,
              h = d / this.stageHeight;
            this.__displayMatrix.translate(
              -this.get_fullScreenSourceRect().x,
              -this.get_fullScreenSourceRect().y,
            );
            this.__displayMatrix.scale(f, h);
            this.__displayRect.setTo(
              this.get_fullScreenSourceRect().get_left(),
              this.get_fullScreenSourceRect().get_right(),
              this.get_fullScreenSourceRect().get_top(),
              this.get_fullScreenSourceRect().get_bottom(),
            );
          } else if (
            0 == this.__logicalWidth ||
            0 == this.__logicalHeight ||
            2 == this.get_scaleMode() ||
            0 == c ||
            0 == d
          )
            ((this.stageWidth = Math.round(c / this.window.__scale)),
              (this.stageHeight = Math.round(d / this.window.__scale)),
              this.__displayMatrix.scale(
                this.window.__scale,
                this.window.__scale,
              ),
              this.__displayRect.setTo(
                0,
                0,
                this.stageWidth,
                this.stageHeight,
              ));
          else
            switch (
              ((this.stageWidth = this.__logicalWidth),
              (this.stageHeight = this.__logicalHeight),
              this.get_scaleMode())
            ) {
              case 0:
                f = c / this.stageWidth;
                h = d / this.stageHeight;
                this.__displayMatrix.scale(f, h);
                this.__displayRect.setTo(
                  0,
                  0,
                  this.stageWidth,
                  this.stageHeight,
                );
                break;
              case 1:
                f = c / this.stageWidth;
                h = d / this.stageHeight;
                f = Math.max(f, h);
                h = this.stageWidth * f;
                var k = this.stageHeight * f;
                h = this.stageWidth - Math.round((h - c) / f);
                k = this.stageHeight - Math.round((k - d) / f);
                var g = Math.round((this.stageWidth - h) / 2),
                  p = Math.round((this.stageHeight - k) / 2);
                this.__displayMatrix.translate(-g, -p);
                this.__displayMatrix.scale(f, f);
                this.__displayRect.setTo(g, p, h, k);
                break;
              default:
                ((f = c / this.stageWidth),
                  (h = d / this.stageHeight),
                  (f = Math.min(f, h)),
                  (h = this.stageWidth * f),
                  (k = this.stageHeight * f),
                  (h = this.stageWidth - Math.round((h - c) / f)),
                  (k = this.stageHeight - Math.round((k - d) / f)),
                  (g = Math.round((this.stageWidth - h) / 2)),
                  (p = Math.round((this.stageHeight - k) / 2)),
                  this.__displayMatrix.translate(-g, -p),
                  this.__displayMatrix.scale(f, f),
                  this.__displayRect.setTo(g, p, h, k));
            }
          null != this.context3D &&
            this.context3D.configureBackBuffer(
              this.stageWidth,
              this.stageHeight,
              0,
              !0,
              !0,
              !0,
            );
          for (f = this.stage3Ds.iterator(); f.hasNext(); )
            f.next().__resize(c, d);
          null != this.__renderer && this.__renderer.__resize(c, d);
          this.__renderDirty = !0;
          if (this.stageWidth != a || this.stageHeight != b)
            (this.__setTransformDirty(),
              (a = new va('resize')),
              this.__dispatchEvent(a));
        },
        __setLogicalSize: function (a, b) {
          this.__logicalWidth = a;
          this.__logicalHeight = b;
          this.__resize();
        },
        __stopDrag: function (a) {
          this.__dragObject = this.__dragBounds = null;
        },
        __unregisterLimeModule: function (a) {
          a.onCreateWindow.remove(l(this, this.__onLimeCreateWindow));
          a.onUpdate.remove(l(this, this.__onLimeUpdate));
          a.onExit.remove(l(this, this.__onLimeModuleExit));
          fc.onConnect.remove(l(this, this.__onLimeGamepadConnect));
          Tb.onStart.remove(l(this, this.__onLimeTouchStart));
          Tb.onMove.remove(l(this, this.__onLimeTouchMove));
          Tb.onEnd.remove(l(this, this.__onLimeTouchEnd));
          Tb.onCancel.remove(l(this, this.__onLimeTouchCancel));
        },
        __update: function (a, b) {
          a
            ? this.__transformDirty &&
              (hb.prototype.__update.call(this, !0, b),
              b && (this.__transformDirty = !1))
            : this.__transformDirty || this.__renderDirty
              ? (hb.prototype.__update.call(this, !1, b),
                b && S.__supportDOM && (this.__wasDirty = !0))
              : !this.__renderDirty &&
                this.__wasDirty &&
                (hb.prototype.__update.call(this, !1, b),
                b && (this.__wasDirty = !1));
        },
        set_color: function (a) {
          null == a
            ? ((this.__transparent = !0), (a = 0))
            : (this.__transparent = !1);
          this.__color != a &&
            ((this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255),
            (this.__colorSplit[1] = ((a & 65280) >>> 8) / 255),
            (this.__colorSplit[2] = (a & 255) / 255),
            (this.__colorString = '#' + M.hex(a & 16777215, 6)),
            (this.__renderDirty = !0),
            (this.__color = -16777216 | (a & 16777215)));
          return a;
        },
        get_focus: function () {
          return this.__focus;
        },
        set_focus: function (a) {
          if (a != this.__focus || (null == a && null != this.__cacheFocus)) {
            var b = this.__focus;
            this.__cacheFocus = this.__focus = a;
            if (null != b) {
              var c = new Ye('focusOut', !0, !1, a, !1, 0),
                d = [];
              b.__getInteractive(d);
              d.reverse();
              this.__dispatchStack(c, d);
            }
            null != a &&
              ((c = new Ye('focusIn', !0, !1, b, !1, 0)),
              (d = []),
              a.__getInteractive(d),
              d.reverse(),
              this.__dispatchStack(c, d));
          }
          return a;
        },
        get_frameRate: function () {
          return null != this.window ? this.window.__backend.getFrameRate() : 0;
        },
        get_fullScreenSourceRect: function () {
          return null == this.__fullScreenSourceRect
            ? null
            : this.__fullScreenSourceRect.clone();
        },
        set_height: function (a) {
          return this.get_height();
        },
        get_mouseX: function () {
          return this.__mouseX;
        },
        get_mouseY: function () {
          return this.__mouseY;
        },
        get_quality: function () {
          return this.__quality;
        },
        set_rotation: function (a) {
          return 0;
        },
        get_scaleMode: function () {
          return this.__scaleMode;
        },
        set_scaleMode: function (a) {
          a != this.__scaleMode && ((this.__scaleMode = a), this.__resize());
          return a;
        },
        set_scaleX: function (a) {
          return 0;
        },
        set_scaleY: function (a) {
          return 0;
        },
        get_tabEnabled: function () {
          return !1;
        },
        get_tabIndex: function () {
          return -1;
        },
        set_transform: function (a) {
          return this.get_transform();
        },
        set_width: function (a) {
          return this.get_width();
        },
        set_x: function (a) {
          return 0;
        },
        set_y: function (a) {
          return 0;
        },
        __class__: Hf,
        __properties__: u(hb.prototype.__properties__, {
          set_color: 'set_color',
          set_scaleMode: 'set_scaleMode',
          get_scaleMode: 'get_scaleMode',
          get_quality: 'get_quality',
          get_fullScreenSourceRect: 'get_fullScreenSourceRect',
          get_frameRate: 'get_frameRate',
          set_focus: 'set_focus',
          get_focus: 'get_focus',
        }),
      });
      var Xe = function (a) {
        ma.call(this);
        this.__stage = a;
        this.__height = 0;
        this.__projectionTransform = new bi();
        this.__renderTransform = new bi();
        this.__y = this.__x = this.__width = 0;
        this.visible = !0;
        0 < a.stageWidth &&
          0 < a.stageHeight &&
          this.__resize(a.stageWidth, a.stageHeight);
      };
      g['openfl.display.Stage3D'] = Xe;
      Xe.__name__ = 'openfl.display.Stage3D';
      Xe.__super__ = ma;
      Xe.prototype = u(ma.prototype, {
        __createContext: function () {
          var a = this.__stage,
            b = a.__renderer;
          if ('cairo' == b.__type || 'canvas' == b.__type)
            this.__dispatchError();
          else if ('opengl' == b.__type)
            ((this.context3D = new ob(a, a.context3D.__contextState, this)),
              this.__dispatchCreate());
          else if ('dom' == b.__type)
            if (null == a.context3D) {
              this.__canvas = window.document.createElement('canvas');
              this.__canvas.width = a.stageWidth;
              this.__canvas.height = a.stageHeight;
              var c = a.window.context.attributes,
                d =
                  Object.prototype.hasOwnProperty.call(c, 'background') &&
                  null == c.background,
                f = Object.prototype.hasOwnProperty.call(c, 'colorDepth')
                  ? c.colorDepth
                  : 32;
              c =
                Object.prototype.hasOwnProperty.call(c, 'antialiasing') &&
                0 < c.antialiasing;
              this.__webgl = Cj.getContextWebGL(this.__canvas, {
                alpha: d || 16 < f,
                antialias: c,
                depth: !0,
                premultipliedAlpha: !0,
                stencil: !0,
                preserveDrawingBuffer: !1,
              });
              null != this.__webgl &&
                (null == ce.context &&
                  ((ce.context = this.__webgl),
                  (ce.type = 'webgl'),
                  (ce.version = 1)),
                (a.context3D = new ob(a)),
                a.context3D.configureBackBuffer(
                  a.window.__width,
                  a.window.__height,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                a.context3D.present(),
                b.element.appendChild(this.__canvas),
                (this.__style = this.__canvas.style),
                this.__style.setProperty('position', 'absolute', null),
                this.__style.setProperty('top', '0', null),
                this.__style.setProperty('left', '0', null),
                this.__style.setProperty(
                  b.__transformOriginProperty,
                  '0 0 0',
                  null,
                ),
                this.__style.setProperty('z-index', '-1', null));
              null != a.context3D &&
                (this.context3D = new ob(a, a.context3D.__contextState, this));
              this.__dispatchCreate();
            } else this.__dispatchError();
        },
        __dispatchError: function () {
          this.__contextRequested = !1;
          this.dispatchEvent(
            new pd('error', !1, !1, 'Context3D not available'),
          );
        },
        __dispatchCreate: function () {
          this.__contextRequested &&
            ((this.__contextRequested = !1),
            this.dispatchEvent(new va('context3DCreate')));
        },
        __lostContext: function () {
          this.__contextLost = !0;
          null != this.context3D &&
            (this.context3D.__dispose(), (this.__contextRequested = !0));
        },
        __resize: function (a, b) {
          if (a != this.__width || b != this.__height)
            (null != this.__canvas &&
              ((this.__canvas.width = a), (this.__canvas.height = b)),
              this.__projectionTransform.copyRawDataFrom(
                X.toFloatVector(null, null, null, [
                  2 / (0 < a ? a : 1),
                  0,
                  0,
                  0,
                  0,
                  -2 / (0 < b ? b : 1),
                  0,
                  0,
                  0,
                  0,
                  -0.001,
                  0,
                  -1,
                  1,
                  0,
                  1,
                ]),
              ),
              this.__renderTransform.identity(),
              this.__renderTransform.appendTranslation(this.__x, this.__y, 0),
              this.__renderTransform.append(this.__projectionTransform),
              (this.__width = a),
              (this.__height = b));
        },
        __restoreContext: function () {
          this.__contextLost = !1;
          this.__createContext();
        },
        get_x: function () {
          return this.__x;
        },
        get_y: function () {
          return this.__y;
        },
        __class__: Xe,
        __properties__: { get_y: 'get_y', get_x: 'get_x' },
      });
      var wg = function (a, b, c, d, f, h, k, g) {
        null == g && (g = 0);
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = 1);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.__id = a;
        this.__matrix = new wa();
        0 != b && this.set_x(b);
        0 != c && this.set_y(c);
        1 != d && this.set_scaleX(d);
        1 != f && this.set_scaleY(f);
        0 != h && this.set_rotation(h);
        this.__dirty = !0;
        this.__length = 0;
        this.__originX = k;
        this.__originY = g;
        this.__alpha = 1;
        this.__blendMode = null;
        this.__visible = !0;
      };
      g['openfl.display.Tile'] = wg;
      wg.__name__ = 'openfl.display.Tile';
      wg.prototype = {
        getBounds: function (a) {
          var b = new qa();
          this.__findTileRect(b);
          var c = wa.__pool.get();
          if (null != a && a != this) {
            c.copyFrom(this.__getWorldTransform());
            var d = wa.__pool.get();
            d.copyFrom(a.__getWorldTransform());
            d.invert();
            c.concat(d);
            wa.__pool.release(d);
          } else c.identity();
          this.__getBounds(b, c);
          wa.__pool.release(c);
          return b;
        },
        __getBounds: function (a, b) {
          a.__transform(a, b);
        },
        __findTileRect: function (a) {
          if (null == this.get_tileset())
            if (null != this.parent) {
              var b = this.parent.__findTileset();
              null == b
                ? a.setTo(0, 0, 0, 0)
                : ((b = b.getRect(this.get_id())),
                  null == b ? a.setTo(0, 0, 0, 0) : a.copyFrom(b));
            } else a.setTo(0, 0, 0, 0);
          else a.copyFrom(this.get_tileset().getRect(this.get_id()));
          a.x = 0;
          a.y = 0;
        },
        __findTileset: function () {
          return null != this.get_tileset()
            ? this.get_tileset()
            : this.parent instanceof xg
              ? this.parent.get_tileset()
              : null == this.parent
                ? null
                : this.parent.__findTileset();
        },
        __getWorldTransform: function () {
          var a = this.get_matrix().clone();
          null != this.parent && a.concat(this.parent.__getWorldTransform());
          return a;
        },
        __setRenderDirty: function () {
          this.__dirty ||
            ((this.__dirty = !0),
            null != this.parent && this.parent.__setRenderDirty());
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          a != this.__alpha && ((this.__alpha = a), this.__setRenderDirty());
          return a;
        },
        get_colorTransform: function () {
          return this.__colorTransform;
        },
        get_height: function () {
          var a = qa.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.height;
          qa.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = qa.__pool.get();
          this.__findTileRect(b);
          0 != b.height && this.set_scaleY(a / b.height);
          qa.__pool.release(b);
          return a;
        },
        get_id: function () {
          return this.__id;
        },
        get_matrix: function () {
          return this.__matrix;
        },
        get_originX: function () {
          return this.__originX;
        },
        set_originX: function (a) {
          a != this.__originX &&
            ((this.__originX = a), this.__setRenderDirty());
          return a;
        },
        get_originY: function () {
          return this.__originY;
        },
        set_originY: function (a) {
          a != this.__originY &&
            ((this.__originY = a), this.__setRenderDirty());
          return a;
        },
        get_rotation: function () {
          if (null == this.__rotation)
            if (0 == this.__matrix.b && 0 == this.__matrix.c)
              ((this.__rotationSine = this.__rotation = 0),
                (this.__rotationCosine = 1));
            else {
              var a =
                Math.atan2(this.__matrix.d, this.__matrix.c) - Math.PI / 2;
              this.__rotation = (180 / Math.PI) * a;
              this.__rotationSine = Math.sin(a);
              this.__rotationCosine = Math.cos(a);
            }
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = (Math.PI / 180) * a;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            b = this.get_scaleX();
            var c = this.get_scaleY();
            this.__matrix.a = this.__rotationCosine * b;
            this.__matrix.b = this.__rotationSine * b;
            this.__matrix.c = -this.__rotationSine * c;
            this.__matrix.d = this.__rotationCosine * c;
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleX: function () {
          null == this.__scaleX &&
            (0 == this.get_matrix().b
              ? (this.__scaleX = this.__matrix.a)
              : (this.__scaleX = Math.sqrt(
                  this.__matrix.a * this.__matrix.a +
                    this.__matrix.b * this.__matrix.b,
                )));
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX) {
            this.__scaleX = a;
            if (0 == this.__matrix.b) this.__matrix.a = a;
            else {
              this.get_rotation();
              var b = this.__rotationSine * a;
              this.__matrix.a = this.__rotationCosine * a;
              this.__matrix.b = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleY: function () {
          null == this.__scaleY &&
            (this.__scaleY =
              0 == this.__matrix.c
                ? this.get_matrix().d
                : Math.sqrt(
                    this.__matrix.c * this.__matrix.c +
                      this.__matrix.d * this.__matrix.d,
                  ));
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY) {
            this.__scaleY = a;
            if (0 == this.__matrix.c) this.__matrix.d = a;
            else {
              this.get_rotation();
              var b = this.__rotationCosine * a;
              this.__matrix.c = -this.__rotationSine * a;
              this.__matrix.d = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_shader: function () {
          return this.__shader;
        },
        get_tileset: function () {
          return this.__tileset;
        },
        set_tileset: function (a) {
          a != this.__tileset &&
            ((this.__tileset = a), this.__setRenderDirty());
          return a;
        },
        get_visible: function () {
          return this.__visible;
        },
        get_width: function () {
          var a = qa.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.width;
          qa.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = qa.__pool.get();
          this.__findTileRect(b);
          0 != b.width && this.set_scaleX(a / b.width);
          qa.__pool.release(b);
          return a;
        },
        get_x: function () {
          return this.__matrix.tx;
        },
        set_x: function (a) {
          a != this.__matrix.tx &&
            ((this.__matrix.tx = a), this.__setRenderDirty());
          return a;
        },
        get_y: function () {
          return this.__matrix.ty;
        },
        set_y: function (a) {
          a != this.__matrix.ty &&
            ((this.__matrix.ty = a), this.__setRenderDirty());
          return a;
        },
        __class__: wg,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          get_visible: 'get_visible',
          set_tileset: 'set_tileset',
          get_tileset: 'get_tileset',
          get_shader: 'get_shader',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          set_originY: 'set_originY',
          get_originY: 'get_originY',
          set_originX: 'set_originX',
          get_originX: 'get_originX',
          get_matrix: 'get_matrix',
          get_id: 'get_id',
          set_height: 'set_height',
          get_height: 'get_height',
          get_colorTransform: 'get_colorTransform',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      };
      var yg = function (a, b, c, d, f, h, k) {
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 0);
        null == a && (a = 0);
        wg.call(this, -1, a, b, c, d, f, h, k);
        this.__tiles = [];
        this.__length = 0;
      };
      g['openfl.display.TileContainer'] = yg;
      yg.__name__ = 'openfl.display.TileContainer';
      yg.__interfaces__ = [kj];
      yg.__super__ = wg;
      yg.prototype = u(wg.prototype, {
        getBounds: function (a) {
          for (var b = new qa(), c, d = 0, f = this.__tiles; d < f.length; )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(a)),
              b.__expand(c.x, c.y, c.width, c.height));
          return b;
        },
        get_height: function () {
          for (
            var a = qa.__pool.get(), b, c = 0, d = this.__tiles;
            c < d.length;

          )
            ((b = d[c]),
              ++c,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          c = a.height;
          qa.__pool.release(a);
          return c;
        },
        set_height: function (a) {
          for (
            var b = qa.__pool.get(), c, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(this)),
              b.__expand(c.x, c.y, c.width, c.height));
          0 != b.height && this.set_scaleY(a / b.height);
          qa.__pool.release(b);
          return a;
        },
        get_width: function () {
          for (
            var a = qa.__pool.get(), b, c = 0, d = this.__tiles;
            c < d.length;

          )
            ((b = d[c]),
              ++c,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          c = a.width;
          qa.__pool.release(a);
          return c;
        },
        set_width: function (a) {
          for (
            var b = qa.__pool.get(), c, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(this)),
              b.__expand(c.x, c.y, c.width, c.height));
          0 != b.width && this.set_scaleX(a / b.width);
          qa.__pool.release(b);
          return a;
        },
        __class__: yg,
      });
      var xg = function (a, b, c, d) {
        null == d && (d = !0);
        S.call(this);
        this.__drawableType = 9;
        this.__tileset = c;
        this.smoothing = d;
        this.tileColorTransformEnabled =
          this.tileBlendModeEnabled =
          this.tileAlphaEnabled =
            !0;
        this.__group = new yg();
        this.__group.set_tileset(c);
        this.__width = a;
        this.__height = b;
      };
      g['openfl.display.Tilemap'] = xg;
      xg.__name__ = 'openfl.display.Tilemap';
      xg.__interfaces__ = [kj];
      xg.__super__ = S;
      xg.prototype = u(S.prototype, {
        __enterFrame: function (a) {
          this.__group.__dirty &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = qa.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          qa.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            g = k.a * k.d - k.b * k.c;
          c = 0 == g ? -k.tx : (1 / g) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          g = k.a * k.d - k.b * k.c;
          a = 0 == g ? -k.ty : (1 / g) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height
            ? (null == d || f || d.push(h), !0)
            : !1;
        },
        get_height: function () {
          return this.__height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          this.__height = a | 0;
          return this.__height * Math.abs(this.get_scaleY());
        },
        get_width: function () {
          return this.__width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          this.__width = a | 0;
          return this.__width * Math.abs(this.__scaleX);
        },
        __class__: xg,
      });
      var Qj = function (a, b) {
        this.__bitmapData = a;
        this.rectData = X.toFloatVector(null);
        this.__data = [];
        if (null != b)
          for (a = 0; a < b.length; ) {
            var c = b[a];
            ++a;
            this.addRect(c);
          }
      };
      g['openfl.display.Tileset'] = Qj;
      Qj.__name__ = 'openfl.display.Tileset';
      Qj.prototype = {
        addRect: function (a) {
          if (null == a) return -1;
          this.rectData.push(a.x);
          this.rectData.push(a.y);
          this.rectData.push(a.width);
          this.rectData.push(a.height);
          a = new ci(a);
          a.__update(this.__bitmapData);
          this.__data.push(a);
          return this.__data.length - 1;
        },
        getRect: function (a) {
          return a < this.__data.length && 0 <= a
            ? new qa(
                this.__data[a].x,
                this.__data[a].y,
                this.__data[a].width,
                this.__data[a].height,
              )
            : null;
        },
        __class__: Qj,
      };
      var ci = function (a) {
        null != a &&
          ((this.x = a.x | 0),
          (this.y = a.y | 0),
          (this.width = a.width | 0),
          (this.height = a.height | 0));
      };
      g['openfl.display.TileData'] = ci;
      ci.__name__ = 'openfl.display.TileData';
      ci.prototype = {
        __update: function (a) {
          if (null != a) {
            var b = a.width;
            a = a.height;
            this.__uvX = this.x / b;
            this.__uvY = this.y / a;
            this.__uvWidth = (this.x + this.width) / b;
            this.__uvHeight = (this.y + this.height) / a;
          }
        },
        __class__: ci,
      };
      var Rj = function () {
        this.__totalFrames = this.__framesLoaded = 1;
        this.__currentLabels = [];
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1;
      };
      g['openfl.display.Timeline'] = Rj;
      Rj.__name__ = 'openfl.display.Timeline';
      Rj.prototype = {
        enterFrame: function (a) {},
        __enterFrame: function (a) {
          if (this.__isPlaying) {
            a = this.__getNextFrame(a);
            if (this.__lastFrameScriptEval == a) return;
            if (null != this.__frameScripts) {
              if (a < this.__currentFrame) {
                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                this.__currentFrame = 1;
              }
              if (!this.__evaluateFrameScripts(a)) return;
            } else this.__currentFrame = a;
          }
          this.__updateSymbol(this.__currentFrame);
        },
        __evaluateFrameScripts: function (a) {
          if (null == this.__frameScripts) return !0;
          var b = this.__currentFrame;
          for (a += 1; b < a; ) {
            var c = b++;
            if (
              c != this.__lastFrameScriptEval &&
              ((this.__currentFrame = this.__lastFrameScriptEval = c),
              (this.__frameScripts.h.hasOwnProperty(c) &&
                (this.__updateSymbol(c),
                (0, this.__frameScripts.h[c])(this.__scope),
                this.__currentFrame != c)) ||
                !this.__isPlaying)
            )
              return !1;
          }
          return !0;
        },
        __getNextFrame: function (a) {
          null != this.frameRate
            ? ((this.__timeElapsed += a),
              (a =
                this.__currentFrame +
                Math.floor(this.__timeElapsed / this.__frameTime)),
              1 > a && (a = 1),
              a > this.__totalFrames &&
                (a = Math.floor((a - 1) % this.__totalFrames) + 1),
              (this.__timeElapsed %= this.__frameTime))
            : ((a = this.__currentFrame + 1),
              a > this.__totalFrames && (a = 1));
          return a;
        },
        __goto: function (a) {
          1 > a ? (a = 1) : a > this.__totalFrames && (a = this.__totalFrames);
          this.__lastFrameScriptEval = -1;
          this.__currentFrame = a;
          this.__updateSymbol(this.__currentFrame);
          this.__evaluateFrameScripts(this.__currentFrame);
        },
        __gotoAndStop: function (a, b) {
          this.__stop();
          this.__goto(this.__resolveFrameReference(a));
        },
        __stop: function () {
          this.__isPlaying = !1;
        },
        __resolveFrameReference: function (a) {
          if ('number' == typeof a && (a | 0) === a) return a;
          if ('string' == typeof a) {
            for (var b = 0, c = this.__currentLabels; b < c.length; ) {
              var d = c[b];
              ++b;
              if (d.name == a) return d.frame;
            }
            throw new ef(
              'Error #2109: Frame label ' + a + ' not found in scene.',
            );
          }
          throw W.thrown('Invalid type for frame ' + a.__name__);
        },
        __updateFrameLabel: function () {
          this.__currentFrameLabel = this.__currentLabel = null;
          for (var a = 0, b = this.__currentLabels; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
            else if (c.frame == this.__currentFrame)
              this.__currentFrameLabel = this.__currentLabel = c.name;
            else break;
          }
        },
        __updateSymbol: function (a) {
          this.__currentFrame != this.__lastFrameUpdate &&
            (this.__updateFrameLabel(),
            this.enterFrame(a),
            (this.__lastFrameUpdate = this.__currentFrame));
        },
        __class__: Rj,
      };
      var rg = function (a, b) {
        Df.call(this, a, b);
        this.stage = new Hf(
          this,
          Object.prototype.hasOwnProperty.call(b.context, 'background')
            ? b.context.background
            : 16777215,
        );
        if (Object.prototype.hasOwnProperty.call(b, 'parameters'))
          try {
            this.stage.get_loaderInfo().parameters = b.parameters;
          } catch (c) {
            Qa.lastError = c;
          }
        this.stage.__setLogicalSize(b.width, b.height);
        Object.prototype.hasOwnProperty.call(b, 'resizable') &&
          !b.resizable &&
          this.stage.set_scaleMode(3);
        a.addModule(this.stage);
      };
      g['openfl.display.Window'] = rg;
      rg.__name__ = 'openfl.display.Window';
      rg.__super__ = Df;
      rg.prototype = u(Df.prototype, {
        close: function () {
          Df.prototype.close.call(this);
          this.onClose.canceled ||
            null == this.stage ||
            (this.application.removeModule(this.stage), (this.stage = null));
        },
        __class__: rg,
      });
      var sg = function () {};
      g['openfl.display._internal.CanvasBitmap'] = sg;
      sg.__name__ = 'openfl.display._internal.CanvasBitmap';
      sg.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((z = b.__getAlpha(a.__worldAlpha)), 0 >= z)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              w = b.context;
              b.setTransform(a.__renderTransform, w);
              var c = a.opaqueBackground;
              w.fillStyle =
                'rgb(' +
                ((c >>> 16) & 255) +
                ',' +
                ((c >>> 8) & 255) +
                ',' +
                (c & 255) +
                ')';
              w.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((z = b.__getAlpha(a.__worldAlpha)), !(0 >= z))
            ) {
              var d = a.__graphics;
              if (null != d) {
                B.render(d, b);
                var f = d.__width,
                  h = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= f && 1 <= h) {
                  var k = d.__worldTransform;
                  w = b.context;
                  D = a.__scrollRect;
                  var g = a.__worldScale9Grid;
                  if (null == D || (0 < D.width && 0 < D.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    w.globalAlpha = z;
                    if (null != g && 0 == k.b && 0 == k.c) {
                      var p = b.__pixelRatio;
                      z = wa.__pool.get();
                      z.translate(k.tx, k.ty);
                      b.setTransform(z, w);
                      wa.__pool.release(z);
                      z = d.__bounds;
                      var t = d.__renderTransform.a / d.__bitmapScale,
                        n = d.__renderTransform.d / d.__bitmapScale,
                        m = t * k.a,
                        x = n * k.d;
                      k = Math.max(1, Math.round(g.x * t));
                      d = Math.round(g.y * n);
                      D = Math.max(
                        1,
                        Math.round((z.get_right() - g.get_right()) * t),
                      );
                      var q = Math.round((z.get_bottom() - g.get_bottom()) * n);
                      t = Math.round(g.width * t);
                      g = Math.round(g.height * n);
                      n = Math.round(k / p);
                      var l = Math.round(d / p),
                        G = Math.round(D / p);
                      p = Math.round(q / p);
                      m = z.width * m - n - G;
                      z = z.height * x - l - p;
                      b.applySmoothing(w, !1);
                      0 != t && 0 != g
                        ? (w.drawImage(c, 0, 0, k, d, 0, 0, n, l),
                          w.drawImage(c, k, 0, t, d, n, 0, m, l),
                          w.drawImage(c, k + t, 0, D, d, n + m, 0, G, l),
                          w.drawImage(c, 0, d, k, g, 0, l, n, z),
                          w.drawImage(c, k, d, t, g, n, l, m, z),
                          w.drawImage(c, k + t, d, D, g, n + m, l, G, z),
                          w.drawImage(c, 0, d + g, k, q, 0, l + z, n, p),
                          w.drawImage(c, k, d + g, t, q, n, l + z, m, p),
                          w.drawImage(
                            c,
                            k + t,
                            d + g,
                            D,
                            q,
                            n + m,
                            l + z,
                            G,
                            p,
                          ))
                        : 0 == t && 0 != g
                          ? ((h = n + m + G),
                            w.drawImage(c, 0, 0, f, d, 0, 0, h, l),
                            w.drawImage(c, 0, d, f, g, 0, l, h, z),
                            w.drawImage(c, 0, d + g, f, q, 0, l + z, h, p))
                          : 0 == g &&
                            0 != t &&
                            ((f = l + z + p),
                            w.drawImage(c, 0, 0, k, h, 0, 0, n, f),
                            w.drawImage(c, k, 0, t, h, n, 0, m, f),
                            w.drawImage(c, k + t, 0, D, h, n + m, 0, G, f));
                    } else (b.setTransform(k, w), w.drawImage(c, 0, 0, f, h));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            ((z = b.__getAlpha(a.__worldAlpha)),
            0 < z &&
              null != a.__bitmapData &&
              a.__bitmapData.__isValid &&
              a.__bitmapData.readable &&
              ((w = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a, !1),
              Ha.convertToCanvas(a.__bitmapData.image),
              (w.globalAlpha = z),
              (D = a.__scrollRect),
              b.setTransform(a.__renderTransform, w),
              (b.__allowSmoothing && a.smoothing) ||
                (w.imageSmoothingEnabled = !1),
              null == D
                ? w.drawImage(
                    a.__bitmapData.image.get_src(),
                    0,
                    0,
                    a.__bitmapData.image.width,
                    a.__bitmapData.image.height,
                  )
                : w.drawImage(
                    a.__bitmapData.image.get_src(),
                    D.x,
                    D.y,
                    D.width,
                    D.height,
                    D.x,
                    D.y,
                    D.width,
                    D.height,
                  ),
              (b.__allowSmoothing && a.smoothing) ||
                (w.imageSmoothingEnabled = !0),
              b.__popMaskObject(a, !1)));
        } else if (((c = a.__cacheBitmap), c.__renderable)) {
          var z = b.__getAlpha(c.__worldAlpha);
          if (
            0 < z &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
          ) {
            var w = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            Ha.convertToCanvas(c.__bitmapData.image);
            w.globalAlpha = z;
            var D = c.__scrollRect;
            b.setTransform(c.__renderTransform, w);
            (b.__allowSmoothing && c.smoothing) ||
              (w.imageSmoothingEnabled = !1);
            null == D
              ? w.drawImage(
                  c.__bitmapData.image.get_src(),
                  0,
                  0,
                  c.__bitmapData.image.width,
                  c.__bitmapData.image.height,
                )
              : w.drawImage(
                  c.__bitmapData.image.get_src(),
                  D.x,
                  D.y,
                  D.width,
                  D.height,
                  D.x,
                  D.y,
                  D.width,
                  D.height,
                );
            (b.__allowSmoothing && c.smoothing) ||
              (w.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1);
          }
        }
        b.__renderEvent(a);
      };
      sg.renderDrawableMask = function (a, b) {
        b.context.rect(0, 0, a.get_width(), a.get_height());
      };
      var Ih = function () {};
      g['openfl.display._internal.CanvasBitmapData'] = Ih;
      Ih.__name__ = 'openfl.display._internal.CanvasBitmapData';
      Ih.renderDrawable = function (a, b) {
        if (a.readable) {
          var c = a.image;
          c.type == Kc.DATA && Ha.convertToCanvas(c);
          var d = b.context;
          d.globalAlpha = 1;
          b.setTransform(a.__renderTransform, d);
          d.drawImage(c.get_src(), 0, 0, c.width, c.height);
        }
      };
      Ih.renderDrawableMask = function (a, b) {};
      var Se = function () {};
      g['openfl.display._internal.CanvasDisplayObject'] = Se;
      Se.__name__ = 'openfl.display._internal.CanvasDisplayObject';
      Se.renderDrawable = function (a, b) {
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, !1),
            null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          ) {
            var c = a.__cacheBitmap;
            if (c.__renderable) {
              var d = b.__getAlpha(c.__worldAlpha);
              if (
                0 < d &&
                null != c.__bitmapData &&
                c.__bitmapData.__isValid &&
                c.__bitmapData.readable
              ) {
                var f = b.context;
                b.__setBlendMode(c.__worldBlendMode);
                b.__pushMaskObject(c, !1);
                Ha.convertToCanvas(c.__bitmapData.image);
                f.globalAlpha = d;
                var h = c.__scrollRect;
                b.setTransform(c.__renderTransform, f);
                (b.__allowSmoothing && c.smoothing) ||
                  (f.imageSmoothingEnabled = !1);
                null == h
                  ? f.drawImage(
                      c.__bitmapData.image.get_src(),
                      0,
                      0,
                      c.__bitmapData.image.width,
                      c.__bitmapData.image.height,
                    )
                  : f.drawImage(
                      c.__bitmapData.image.get_src(),
                      h.x,
                      h.y,
                      h.width,
                      h.height,
                      h.x,
                      h.y,
                      h.width,
                      h.height,
                    );
                (b.__allowSmoothing && c.smoothing) ||
                  (f.imageSmoothingEnabled = !0);
                b.__popMaskObject(c, !1);
              }
            }
          } else if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((d = b.__getAlpha(a.__worldAlpha)),
              0 >= d ||
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (f = b.context),
                  b.setTransform(a.__renderTransform, f),
                  (c = a.opaqueBackground),
                  (f.fillStyle =
                    'rgb(' +
                    ((c >>> 16) & 255) +
                    ',' +
                    ((c >>> 8) & 255) +
                    ',' +
                    (c & 255) +
                    ')'),
                  f.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null == a.__graphics ||
                  !a.__renderable ||
                  ((d = b.__getAlpha(a.__worldAlpha)), 0 >= d)))
            )
          ) {
            var k = a.__graphics;
            if (null != k) {
              B.render(k, b);
              var g = k.__width,
                p = k.__height;
              c = k.__canvas;
              if (null != c && k.__visible && 1 <= g && 1 <= p) {
                var t = k.__worldTransform;
                f = b.context;
                h = a.__scrollRect;
                var n = a.__worldScale9Grid;
                if (null == h || (0 < h.width && 0 < h.height)) {
                  b.__setBlendMode(a.__worldBlendMode);
                  b.__pushMaskObject(a);
                  f.globalAlpha = d;
                  if (null != n && 0 == t.b && 0 == t.c) {
                    var m = b.__pixelRatio;
                    d = wa.__pool.get();
                    d.translate(t.tx, t.ty);
                    b.setTransform(d, f);
                    wa.__pool.release(d);
                    d = k.__bounds;
                    var x = k.__renderTransform.a / k.__bitmapScale,
                      q = k.__renderTransform.d / k.__bitmapScale,
                      l = x * t.a,
                      G = q * t.d;
                    t = Math.max(1, Math.round(n.x * x));
                    k = Math.round(n.y * q);
                    h = Math.max(
                      1,
                      Math.round((d.get_right() - n.get_right()) * x),
                    );
                    var z = Math.round((d.get_bottom() - n.get_bottom()) * q);
                    x = Math.round(n.width * x);
                    n = Math.round(n.height * q);
                    q = Math.round(t / m);
                    var w = Math.round(k / m),
                      D = Math.round(h / m);
                    m = Math.round(z / m);
                    l = d.width * l - q - D;
                    d = d.height * G - w - m;
                    b.applySmoothing(f, !1);
                    0 != x && 0 != n
                      ? (f.drawImage(c, 0, 0, t, k, 0, 0, q, w),
                        f.drawImage(c, t, 0, x, k, q, 0, l, w),
                        f.drawImage(c, t + x, 0, h, k, q + l, 0, D, w),
                        f.drawImage(c, 0, k, t, n, 0, w, q, d),
                        f.drawImage(c, t, k, x, n, q, w, l, d),
                        f.drawImage(c, t + x, k, h, n, q + l, w, D, d),
                        f.drawImage(c, 0, k + n, t, z, 0, w + d, q, m),
                        f.drawImage(c, t, k + n, x, z, q, w + d, l, m),
                        f.drawImage(c, t + x, k + n, h, z, q + l, w + d, D, m))
                      : 0 == x && 0 != n
                        ? ((p = q + l + D),
                          f.drawImage(c, 0, 0, g, k, 0, 0, p, w),
                          f.drawImage(c, 0, k, g, n, 0, w, p, d),
                          f.drawImage(c, 0, k + n, g, z, 0, w + d, p, m))
                        : 0 == n &&
                          0 != x &&
                          ((g = w + d + m),
                          f.drawImage(c, 0, 0, t, p, 0, 0, q, g),
                          f.drawImage(c, t, 0, x, p, q, 0, l, g),
                          f.drawImage(c, t + x, 0, h, p, q + l, 0, D, g));
                  } else (b.setTransform(t, f), f.drawImage(c, 0, 0, g, p));
                  b.__popMaskObject(a);
                }
              }
            }
          }
        b.__renderEvent(a);
      };
      Se.renderDrawableMask = function (a, b) {
        null != a.__graphics && B.renderMask(a.__graphics, b);
      };
      var Jh = function () {};
      g['openfl.display._internal.CanvasDisplayObjectContainer'] = Jh;
      Jh.__name__ = 'openfl.display._internal.CanvasDisplayObjectContainer';
      Jh.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          !(
            !a.__renderable ||
            0 >= a.__worldAlpha ||
            (null != a.get_mask() &&
              (0 >= a.get_mask().get_width() || 0 >= a.get_mask().get_height()))
          ) &&
          (Se.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              b.__renderDrawable(f);
              f.__renderDirty = !1;
            }
            a.__renderDirty = !1;
          } else
            for (c = 0, d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f));
          b.__popMaskObject(a);
        }
      };
      Jh.renderDrawableMask = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && B.renderMask(a.__graphics, b);
        c = 0;
        for (a = a.__children; c < a.length; )
          ((d = a[c]), ++c, b.__renderDrawableMask(d));
      };
      var Uc = function () {
        null == Uc.empty
          ? ((this.types = []),
            (this.b = []),
            (this.i = []),
            (this.f = []),
            (this.o = []),
            (this.ff = []),
            (this.ii = []),
            (this.copyOnWrite = !0))
          : this.clear();
      };
      g['openfl.display._internal.DrawCommandBuffer'] = Uc;
      Uc.__name__ = 'openfl.display._internal.DrawCommandBuffer';
      Uc.prototype = {
        beginBitmapFill: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(ca.BEGIN_BITMAP_FILL);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        beginFill: function (a, b) {
          this.prepareWrite();
          this.types.push(ca.BEGIN_FILL);
          this.i.push(a);
          this.f.push(b);
        },
        beginGradientFill: function (a, b, c, d, f, h, k, g) {
          this.prepareWrite();
          this.types.push(ca.BEGIN_GRADIENT_FILL);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(f);
          this.o.push(h);
          this.o.push(k);
          this.f.push(g);
        },
        beginShaderFill: function (a) {
          this.prepareWrite();
          this.types.push(ca.BEGIN_SHADER_FILL);
          this.o.push(a);
        },
        clear: function () {
          this.types = Uc.empty.types;
          this.b = Uc.empty.b;
          this.i = Uc.empty.i;
          this.f = Uc.empty.f;
          this.o = Uc.empty.o;
          this.ff = Uc.empty.ff;
          this.ii = Uc.empty.ii;
          this.copyOnWrite = !0;
        },
        cubicCurveTo: function (a, b, c, d, f, h) {
          this.prepareWrite();
          this.types.push(ca.CUBIC_CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(f);
          this.f.push(h);
        },
        curveTo: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(ca.CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawCircle: function (a, b, c) {
          this.prepareWrite();
          this.types.push(ca.DRAW_CIRCLE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
        },
        drawEllipse: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(ca.DRAW_ELLIPSE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawQuads: function (a, b, c) {
          this.prepareWrite();
          this.types.push(ca.DRAW_QUADS);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
        },
        drawRect: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(ca.DRAW_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawRoundRect: function (a, b, c, d, f, h) {
          this.prepareWrite();
          this.types.push(ca.DRAW_ROUND_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(f);
          this.o.push(h);
        },
        drawTriangles: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(ca.DRAW_TRIANGLES);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
          this.o.push(d);
        },
        endFill: function () {
          this.prepareWrite();
          this.types.push(ca.END_FILL);
        },
        lineBitmapStyle: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(ca.LINE_BITMAP_STYLE);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        lineGradientStyle: function (a, b, c, d, f, h, k, g) {
          this.prepareWrite();
          this.types.push(ca.LINE_GRADIENT_STYLE);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(f);
          this.o.push(h);
          this.o.push(k);
          this.f.push(g);
        },
        lineStyle: function (a, b, c, d, f, h, k, g) {
          this.prepareWrite();
          this.types.push(ca.LINE_STYLE);
          this.o.push(a);
          this.i.push(b);
          this.f.push(c);
          this.b.push(d);
          this.o.push(f);
          this.o.push(h);
          this.o.push(k);
          this.f.push(g);
        },
        lineTo: function (a, b) {
          this.prepareWrite();
          this.types.push(ca.LINE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        moveTo: function (a, b) {
          this.prepareWrite();
          this.types.push(ca.MOVE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        prepareWrite: function () {
          this.copyOnWrite &&
            ((this.types = this.types.slice()),
            (this.b = this.b.slice()),
            (this.i = this.i.slice()),
            (this.f = this.f.slice()),
            (this.o = this.o.slice()),
            (this.ff = this.ff.slice()),
            (this.ii = this.ii.slice()),
            (this.copyOnWrite = !1));
        },
        windingEvenOdd: function () {
          this.prepareWrite();
          this.types.push(ca.WINDING_EVEN_ODD);
        },
        windingNonZero: function () {
          this.prepareWrite();
          this.types.push(ca.WINDING_NON_ZERO);
        },
        get_length: function () {
          return this.types.length;
        },
        __class__: Uc,
        __properties__: { get_length: 'get_length' },
      };
      var B = function () {};
      g['openfl.display._internal.CanvasGraphics'] = B;
      B.__name__ = 'openfl.display._internal.CanvasGraphics';
      B.closePath = function (a) {
        null == a && (a = !1);
        null != B.context.strokeStyle &&
          (a || B.context.closePath(),
          B.context.stroke(),
          a && B.context.closePath(),
          B.context.beginPath());
      };
      B.createBitmapFill = function (a, b, c) {
        Ha.convertToCanvas(a.image);
        B.setSmoothing(c);
        return B.context.createPattern(
          a.image.get_src(),
          b ? 'repeat' : 'no-repeat',
        );
      };
      B.createGradientPattern = function (a, b, c, d, f, h, k, g) {
        k = !1;
        null == f && ((f = wa.__pool.get()), f.identity(), (k = !0));
        switch (a) {
          case 0:
            if (0 == h) {
              a = B.context.createLinearGradient(-819.2, 0, 819.2, 0);
              B.pendingMatrix = f.clone();
              B.inversePendingMatrix = f.clone();
              B.inversePendingMatrix.invert();
              for (var p = 0, v = b.length; p < v; ) {
                var t = p++;
                h = d[t] / 255;
                0 > h ? (h = 0) : 1 < h && (h = 1);
                a.addColorStop(h, B.getRGBA(b[t], c[t]));
              }
              k && wa.__pool.release(f);
              return a;
            }
            a = 819.2 * ((0 == h ? 1 : 25) - 1);
            k = window.document.createElement('canvas');
            g = k.getContext('2d');
            var m = B.getDimensions(f);
            k.width = B.context.canvas.width;
            k.height = B.context.canvas.height;
            a = B.context.createLinearGradient(-819.2 - a, 0, 819.2 + a, 0);
            if (1 == h)
              for (var n = 0, x = 0.04; 1 > n; ) {
                p = 0;
                for (v = b.length; p < v; )
                  ((t = p++),
                    (h = d[t] / 255),
                    (h = n + h * x),
                    0 > h ? (h = 0) : 1 < h && (h = 1),
                    a.addColorStop(h, B.getRGBA(b[t], c[t])));
                n += x;
                for (p = b.length - 1; 0 <= p; )
                  ((h = d[p] / 255),
                    (h = n + (1 - h) * x),
                    0 > h ? (h = 0) : 1 < h && (h = 1),
                    a.addColorStop(h, B.getRGBA(b[p], c[p])),
                    --p);
                n += x;
              }
            else if (2 == h)
              for (n = 0, x = 0.04; 1 > n; ) {
                p = 0;
                for (v = b.length; p < v; )
                  ((t = p++),
                    (h = d[t] / 255),
                    (h = n + h * x),
                    0 > h ? (h = 0) : 1 < h && (h = 0.999),
                    a.addColorStop(h, B.getRGBA(b[t], c[t])));
                h = n + 0.001;
                0 > h ? (h = 0) : 1 < h && (h = 1);
                a.addColorStop(
                  h - 0.001,
                  B.getRGBA(b[b.length - 1], c[c.length - 1]),
                );
                a.addColorStop(h, B.getRGBA(b[0], c[0]));
                n += x;
              }
            B.pendingMatrix = new wa();
            B.pendingMatrix.tx = f.tx - m.width / 2;
            B.pendingMatrix.ty = f.ty - m.height / 2;
            B.inversePendingMatrix = B.pendingMatrix.clone();
            B.inversePendingMatrix.invert();
            b = new Path2D();
            b.rect(0, 0, k.width, k.height);
            b.closePath();
            f = new DOMMatrix([f.a, f.b, f.c, f.d, f.tx, f.ty]);
            c = f.inverse();
            d = new Path2D();
            d.addPath(b, c);
            g.fillStyle = a;
            g.setTransform(f);
            g.fill(d);
            return B.context.createPattern(k, 'no-repeat');
          case 1:
            1 < g ? (g = 1) : -1 > g && (g = -1);
            a = B.context.createRadialGradient(819.2 * g, 0, 0, 0, 0, 819.2);
            B.pendingMatrix = f.clone();
            B.inversePendingMatrix = f.clone();
            B.inversePendingMatrix.invert();
            p = 0;
            for (v = b.length; p < v; )
              ((t = p++),
                (h = d[t] / 255),
                0 > h ? (h = 0) : 1 < h && (h = 1),
                a.addColorStop(h, B.getRGBA(b[t], c[t])));
            k && wa.__pool.release(f);
            return a;
        }
      };
      B.getRGBA = function (a, b) {
        var c = (a & 16711680) >>> 16,
          d = (a & 65280) >>> 8;
        a &= 255;
        return (
          'rgba(' +
          (null == c ? 'null' : I.string(oa.toFloat(c))) +
          ', ' +
          (null == d ? 'null' : I.string(oa.toFloat(d))) +
          ', ' +
          (null == a ? 'null' : I.string(oa.toFloat(a))) +
          ', ' +
          b +
          ')'
        );
      };
      B.getDimensions = function (a) {
        var b = Math.cos(Math.atan2(a.c, a.a)),
          c = (a.a / b) * 1638.4;
        a = (a.d / b) * 1638.4;
        0 == c && 0 == a && (c = a = 819.2);
        return { width: c, height: a };
      };
      B.createTempPatternCanvas = function (a, b, c, d) {
        var f = window.document.createElement('canvas'),
          h = f.getContext('2d');
        f.width = c;
        f.height = d;
        a = a.image.get_src();
        h.fillStyle = h.createPattern(a, b ? 'repeat' : 'no-repeat');
        h.beginPath();
        h.moveTo(0, 0);
        h.lineTo(0, d);
        h.lineTo(c, d);
        h.lineTo(c, 0);
        h.lineTo(0, 0);
        h.closePath();
        B.hitTesting || h.fill(B.windingRule);
        return f;
      };
      B.drawRoundRect = function (a, b, c, d, f, h) {
        null == h && (h = f);
        f *= 0.5;
        h *= 0.5;
        f > c / 2 && (f = c / 2);
        h > d / 2 && (h = d / 2);
        c = a + c;
        d = b + d;
        var k = -f + 0.7071067811865476 * f,
          g = -f + 0.41421356237309503 * f,
          p = -h + 0.7071067811865476 * h,
          t = -h + 0.41421356237309503 * h;
        B.context.moveTo(c, d - h);
        B.context.quadraticCurveTo(c, d + t, c + k, d + p);
        B.context.quadraticCurveTo(c + g, d, c - f, d);
        B.context.lineTo(a + f, d);
        B.context.quadraticCurveTo(a - g, d, a - k, d + p);
        B.context.quadraticCurveTo(a, d + t, a, d - h);
        B.context.lineTo(a, b + h);
        B.context.quadraticCurveTo(a, b - t, a - k, b - p);
        B.context.quadraticCurveTo(a - g, b, a + f, b);
        B.context.lineTo(c - f, b);
        B.context.quadraticCurveTo(c + g, b, c + k, b - p);
        B.context.quadraticCurveTo(c, b - t, c, b + h);
        B.context.lineTo(c, d - h);
      };
      B.endFill = function () {
        B.context.beginPath();
        B.playCommands(B.fillCommands, !1);
        B.fillCommands.clear();
      };
      B.endStroke = function () {
        B.context.beginPath();
        B.playCommands(B.strokeCommands, !0);
        B.context.closePath();
        B.strokeCommands.clear();
      };
      B.hitTest = function (a, b, c) {
        B.bounds = a.__bounds;
        B.graphics = a;
        if (
          0 == a.__commands.get_length() ||
          null == B.bounds ||
          0 >= B.bounds.width ||
          0 >= B.bounds.height
        )
          return ((B.graphics = null), !1);
        B.hitTesting = !0;
        var d = a.__renderTransform,
          f = b * d.b + c * d.d + d.ty;
        b =
          b * d.a +
          c * d.c +
          d.tx -
          (B.bounds.x * d.a + B.bounds.y * d.c + d.tx);
        c = f - (B.bounds.x * d.b + B.bounds.y * d.d + d.ty);
        f = a.__canvas;
        var h = a.__context;
        a.__canvas = B.hitTestCanvas;
        a.__context = B.hitTestContext;
        B.context = a.__context;
        B.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
        B.fillCommands.clear();
        B.strokeCommands.clear();
        B.hasFill = !1;
        B.hasStroke = !1;
        B.bitmapFill = null;
        B.bitmapRepeat = !1;
        B.windingRule = 'evenodd';
        d = new Fd(a.__commands);
        for (var k = 0, g = a.__commands.types; k < g.length; ) {
          var p = g[k];
          ++k;
          switch (p._hx_index) {
            case 0:
            case 1:
            case 2:
            case 3:
              B.endFill();
              if (B.hasFill && B.context.isPointInPath(b, c, B.windingRule))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (B.graphics = null),
                  !0
                );
              B.endStroke();
              if (B.hasStroke && B.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (B.graphics = null),
                  !0
                );
              if (p == ca.BEGIN_BITMAP_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = ca.BEGIN_BITMAP_FILL;
                p = d;
                B.fillCommands.beginBitmapFill(
                  p.buffer.o[p.oPos],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.b[p.bPos],
                  p.buffer.b[p.bPos + 1],
                );
                B.strokeCommands.beginBitmapFill(
                  p.buffer.o[p.oPos],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.b[p.bPos],
                  p.buffer.b[p.bPos + 1],
                );
              } else if (p == ca.BEGIN_GRADIENT_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = ca.BEGIN_GRADIENT_FILL;
                p = d;
                B.fillCommands.beginGradientFill(
                  p.buffer.o[p.oPos],
                  p.buffer.ii[p.iiPos],
                  p.buffer.ff[p.ffPos],
                  p.buffer.ii[p.iiPos + 1],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.o[p.oPos + 2],
                  p.buffer.o[p.oPos + 3],
                  p.buffer.f[p.fPos],
                );
                B.strokeCommands.beginGradientFill(
                  p.buffer.o[p.oPos],
                  p.buffer.ii[p.iiPos],
                  p.buffer.ff[p.ffPos],
                  p.buffer.ii[p.iiPos + 1],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.o[p.oPos + 2],
                  p.buffer.o[p.oPos + 3],
                  p.buffer.f[p.fPos],
                );
              } else if (p == ca.BEGIN_SHADER_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = ca.BEGIN_SHADER_FILL;
                p = d;
                B.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                B.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
              } else {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = ca.BEGIN_FILL;
                p = d;
                B.fillCommands.beginFill(p.buffer.i[p.iPos], 1);
                B.strokeCommands.beginFill(p.buffer.i[p.iPos], 1);
              }
              break;
            case 4:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.CUBIC_CURVE_TO;
              p = d;
              B.fillCommands.cubicCurveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.f[p.fPos + 5],
              );
              B.strokeCommands.cubicCurveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.f[p.fPos + 5],
              );
              break;
            case 5:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.CURVE_TO;
              p = d;
              B.fillCommands.curveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              B.strokeCommands.curveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 6:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.DRAW_CIRCLE;
              p = d;
              B.fillCommands.drawCircle(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
              );
              B.strokeCommands.drawCircle(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
              );
              break;
            case 7:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.DRAW_ELLIPSE;
              p = d;
              B.fillCommands.drawEllipse(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              B.strokeCommands.drawEllipse(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 9:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.DRAW_RECT;
              p = d;
              B.fillCommands.drawRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              B.strokeCommands.drawRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 10:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.DRAW_ROUND_RECT;
              p = d;
              B.fillCommands.drawRoundRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.o[p.oPos],
              );
              B.strokeCommands.drawRoundRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.o[p.oPos],
              );
              break;
            case 13:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.END_FILL;
              B.endFill();
              if (B.hasFill && B.context.isPointInPath(b, c, B.windingRule))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (B.graphics = null),
                  !0
                );
              B.endStroke();
              if (B.hasStroke && B.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (B.graphics = null),
                  !0
                );
              B.hasFill = !1;
              B.bitmapFill = null;
              break;
            case 14:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.LINE_BITMAP_STYLE;
              p = d;
              B.strokeCommands.lineBitmapStyle(
                p.buffer.o[p.oPos],
                p.buffer.o[p.oPos + 1],
                p.buffer.b[p.bPos],
                p.buffer.b[p.bPos + 1],
              );
              break;
            case 15:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.LINE_GRADIENT_STYLE;
              p = d;
              B.strokeCommands.lineGradientStyle(
                p.buffer.o[p.oPos],
                p.buffer.ii[p.iiPos],
                p.buffer.ff[p.ffPos],
                p.buffer.ii[p.iiPos + 1],
                p.buffer.o[p.oPos + 1],
                p.buffer.o[p.oPos + 2],
                p.buffer.o[p.oPos + 3],
                p.buffer.f[p.fPos],
              );
              break;
            case 16:
              B.endStroke();
              if (B.hasStroke && B.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (B.graphics = null),
                  !0
                );
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.LINE_STYLE;
              p = d;
              B.strokeCommands.lineStyle(
                p.buffer.o[p.oPos],
                p.buffer.i[p.iPos],
                1,
                p.buffer.b[p.bPos],
                p.buffer.o[p.oPos + 1],
                p.buffer.o[p.oPos + 2],
                p.buffer.o[p.oPos + 3],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 17:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.LINE_TO;
              p = d;
              B.fillCommands.lineTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1]);
              B.strokeCommands.lineTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 18:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = ca.MOVE_TO;
              p = d;
              B.fillCommands.moveTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1]);
              B.strokeCommands.moveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 21:
              B.windingRule = 'evenodd';
              break;
            case 22:
              B.windingRule = 'nonzero';
              break;
            default:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = p;
          }
        }
        k = !1;
        0 < B.fillCommands.get_length() && B.endFill();
        B.hasFill && B.context.isPointInPath(b, c, B.windingRule) && (k = !0);
        0 < B.strokeCommands.get_length() && B.endStroke();
        B.hasStroke && B.context.isPointInStroke(b, c) && (k = !0);
        d.destroy();
        a.__canvas = f;
        a.__context = h;
        B.graphics = null;
        return k;
      };
      B.normalizeUVT = function (a, b) {
        null == b && (b = !1);
        for (
          var c = -Infinity, d, f = a.get_length(), h = 1, k = f + 1;
          h < k;

        )
          ((d = h++),
            (b && 0 == d % 3) || ((d = a.get(d - 1)), c < d && (c = d)));
        if (!b) return { max: c, uvt: a };
        var g = X.toFloatVector(null);
        h = 1;
        for (k = f + 1; h < k; )
          ((d = h++), (b && 0 == d % 3) || g.push(a.get(d - 1)));
        return { max: c, uvt: g };
      };
      B.playCommands = function (a, b) {
        null == b && (b = !1);
        B.bounds = B.graphics.__bounds;
        var c = B.bounds.x,
          d = B.bounds.y,
          f = 0,
          h = 0,
          k = !1,
          g = 0,
          p = 0,
          t = !1;
        B.windingRule = 'evenodd';
        B.setSmoothing(!0);
        var n = !1,
          m = new Fd(a),
          x,
          q,
          l,
          G = null,
          z = null,
          w = 0,
          D = a.types;
        a: for (; w < D.length; ) {
          var F = D[w];
          ++w;
          switch (F._hx_index) {
            case 0:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.BEGIN_BITMAP_FILL;
              var r = m;
              B.bitmapFill = r.buffer.o[r.oPos];
              if (r.buffer.o[r.oPos].readable)
                B.context.fillStyle = B.createBitmapFill(
                  r.buffer.o[r.oPos],
                  r.buffer.b[r.bPos],
                  r.buffer.b[r.bPos + 1],
                );
              else {
                var H = M.hex(0, 6);
                B.context.fillStyle = '#' + H;
              }
              B.hasFill = !0;
              null != r.buffer.o[r.oPos + 1]
                ? ((B.pendingMatrix = r.buffer.o[r.oPos + 1]),
                  (B.inversePendingMatrix = r.buffer.o[r.oPos + 1].clone()),
                  B.inversePendingMatrix.invert())
                : ((B.pendingMatrix = null), (B.inversePendingMatrix = null));
              break;
            case 1:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.BEGIN_FILL;
              var u = m;
              if (0.005 > u.buffer.f[u.fPos]) B.hasFill = !1;
              else {
                if (1 == u.buffer.f[u.fPos]) {
                  var C = M.hex(u.buffer.i[u.iPos] & 16777215, 6);
                  B.context.fillStyle = '#' + C;
                } else {
                  var ba = (u.buffer.i[u.iPos] & 16711680) >>> 16;
                  var ta = (u.buffer.i[u.iPos] & 65280) >>> 8;
                  var I = u.buffer.i[u.iPos] & 255;
                  B.context.fillStyle =
                    'rgba(' +
                    ba +
                    ', ' +
                    ta +
                    ', ' +
                    I +
                    ', ' +
                    u.buffer.f[u.fPos] +
                    ')';
                }
                B.bitmapFill = null;
                B.setSmoothing(!0);
                B.hasFill = !0;
              }
              break;
            case 2:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.BEGIN_GRADIENT_FILL;
              var ra = m;
              B.context.fillStyle = B.createGradientPattern(
                ra.buffer.o[ra.oPos],
                ra.buffer.ii[ra.iiPos],
                ra.buffer.ff[ra.ffPos],
                ra.buffer.ii[ra.iiPos + 1],
                ra.buffer.o[ra.oPos + 1],
                ra.buffer.o[ra.oPos + 2],
                ra.buffer.o[ra.oPos + 3],
                ra.buffer.f[ra.fPos],
              );
              B.bitmapFill = null;
              B.setSmoothing(!0);
              B.hasFill = !0;
              break;
            case 3:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.BEGIN_SHADER_FILL;
              var y = m,
                N = y.buffer.o[y.oPos];
              if (0 < N.inputCount) {
                B.bitmapFill = N.inputs[0];
                if (B.bitmapFill.readable)
                  B.context.fillStyle = B.createBitmapFill(
                    B.bitmapFill,
                    0 != N.inputWrap[0],
                    5 != N.inputFilter[0],
                  );
                else {
                  var ka = M.hex(0, 6);
                  B.context.fillStyle = '#' + ka;
                }
                B.hasFill = !0;
                B.pendingMatrix = null;
                B.inversePendingMatrix = null;
              }
              break;
            case 4:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.CUBIC_CURVE_TO;
              var oa = m;
              n = !0;
              B.context.bezierCurveTo(
                oa.buffer.f[oa.fPos] - c,
                oa.buffer.f[oa.fPos + 1] - d,
                oa.buffer.f[oa.fPos + 2] - c,
                oa.buffer.f[oa.fPos + 3] - d,
                oa.buffer.f[oa.fPos + 4] - c,
                oa.buffer.f[oa.fPos + 5] - d,
              );
              f = oa.buffer.f[oa.fPos + 4];
              h = oa.buffer.f[oa.fPos + 5];
              break;
            case 5:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.CURVE_TO;
              var Y = m;
              n = !0;
              B.context.quadraticCurveTo(
                Y.buffer.f[Y.fPos] - c,
                Y.buffer.f[Y.fPos + 1] - d,
                Y.buffer.f[Y.fPos + 2] - c,
                Y.buffer.f[Y.fPos + 3] - d,
              );
              f = Y.buffer.f[Y.fPos + 2];
              h = Y.buffer.f[Y.fPos + 3];
              break;
            case 6:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.DRAW_CIRCLE;
              var A = m;
              n = !0;
              B.context.moveTo(
                A.buffer.f[A.fPos] - c + A.buffer.f[A.fPos + 2],
                A.buffer.f[A.fPos + 1] - d,
              );
              B.context.arc(
                A.buffer.f[A.fPos] - c,
                A.buffer.f[A.fPos + 1] - d,
                A.buffer.f[A.fPos + 2],
                0,
                2 * Math.PI,
                !0,
              );
              break;
            case 7:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.DRAW_ELLIPSE;
              var Ea = m;
              n = !0;
              var L = Ea.buffer.f[Ea.fPos];
              var E = Ea.buffer.f[Ea.fPos + 1];
              var J = Ea.buffer.f[Ea.fPos + 2];
              var Z = Ea.buffer.f[Ea.fPos + 3];
              L -= c;
              E -= d;
              var Ab = (J / 2) * 0.5522848;
              var za = (Z / 2) * 0.5522848;
              var R = L + J;
              var O = E + Z;
              var S = L + J / 2;
              var T = E + Z / 2;
              B.context.moveTo(L, T);
              B.context.bezierCurveTo(L, T - za, S - Ab, E, S, E);
              B.context.bezierCurveTo(S + Ab, E, R, T - za, R, T);
              B.context.bezierCurveTo(R, T + za, S + Ab, O, S, O);
              B.context.bezierCurveTo(S - Ab, O, L, T + za, L, T);
              break;
            case 8:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.DRAW_QUADS;
              var ub = m,
                da = ub.buffer.o[ub.oPos],
                W = ub.buffer.o[ub.oPos + 1],
                P = ub.buffer.o[ub.oPos + 2],
                kc = null != W,
                Jb = !1,
                U = !1,
                Q = kc ? W.get_length() : Math.floor(da.get_length() / 4);
              if (0 == Q) return;
              null != P &&
                (P.get_length() >= 6 * Q
                  ? (U = Jb = !0)
                  : P.get_length() >= 4 * Q
                    ? (Jb = !0)
                    : P.get_length() >= 2 * Q && (U = !0));
              var sa = qa.__pool.get(),
                jc = wa.__pool.get(),
                aa = B.graphics.__renderTransform;
              B.context.save();
              for (var Ya = 0, Va = Q; Ya < Va; ) {
                var ha = Ya++;
                var Bb = kc ? 4 * W.get(ha) : 4 * ha;
                if (
                  !(
                    0 > Bb ||
                    (sa.setTo(
                      da.get(Bb),
                      da.get(Bb + 1),
                      da.get(Bb + 2),
                      da.get(Bb + 3),
                    ),
                    0 >= sa.width || 0 >= sa.height)
                  )
                ) {
                  if (Jb && U) {
                    var na = 6 * ha;
                    jc.setTo(
                      P.get(na),
                      P.get(na + 1),
                      P.get(na + 2),
                      P.get(na + 3),
                      P.get(na + 4),
                      P.get(na + 5),
                    );
                  } else
                    Jb
                      ? ((na = 4 * ha),
                        jc.setTo(
                          P.get(na),
                          P.get(na + 1),
                          P.get(na + 2),
                          P.get(na + 3),
                          sa.x,
                          sa.y,
                        ))
                      : U
                        ? ((na = 2 * ha),
                          (jc.tx = P.get(na)),
                          (jc.ty = P.get(na + 1)))
                        : ((jc.tx = sa.x), (jc.ty = sa.y));
                  jc.tx += f - c;
                  jc.ty += h - d;
                  jc.concat(aa);
                  B.context.setTransform(jc.a, jc.b, jc.c, jc.d, jc.tx, jc.ty);
                  null != B.bitmapFill && B.bitmapFill.readable
                    ? B.context.drawImage(
                        B.bitmapFill.image.get_src(),
                        sa.x,
                        sa.y,
                        sa.width,
                        sa.height,
                        0,
                        0,
                        sa.width,
                        sa.height,
                      )
                    : B.context.fillRect(0, 0, sa.width, sa.height);
                }
              }
              qa.__pool.release(sa);
              wa.__pool.release(jc);
              B.context.restore();
              break;
            case 9:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.DRAW_RECT;
              var V = m;
              var Kb = !1;
              if (
                null != B.bitmapFill &&
                B.bitmapFill.readable &&
                !B.hitTesting
              ) {
                var ia = (l = q = x = 0);
                var la = !0;
                if (null != B.pendingMatrix)
                  if (0 != B.pendingMatrix.b || 0 != B.pendingMatrix.c) la = !1;
                  else {
                    null == G && (G = K.__pool.get());
                    null == z && (z = K.__pool.get());
                    G.setTo(V.buffer.f[V.fPos], V.buffer.f[V.fPos + 1]);
                    var ma = B.inversePendingMatrix,
                      ea = G.x,
                      pa = G.y;
                    G.x = ea * ma.a + pa * ma.c + ma.tx;
                    G.y = ea * ma.b + pa * ma.d + ma.ty;
                    z.setTo(
                      V.buffer.f[V.fPos] + V.buffer.f[V.fPos + 2],
                      V.buffer.f[V.fPos + 1] + V.buffer.f[V.fPos + 3],
                    );
                    var ja = B.inversePendingMatrix,
                      oe = z.x,
                      fa = z.y;
                    z.x = oe * ja.a + fa * ja.c + ja.tx;
                    z.y = oe * ja.b + fa * ja.d + ja.ty;
                    x = G.y;
                    ia = G.x;
                    l = z.y;
                    q = z.x;
                  }
                else
                  ((x = V.buffer.f[V.fPos + 1]),
                    (ia = V.buffer.f[V.fPos]),
                    (l = V.buffer.f[V.fPos + 1] + V.buffer.f[V.fPos + 3]),
                    (q = V.buffer.f[V.fPos] + V.buffer.f[V.fPos + 2]));
                la &&
                  0 <= x &&
                  0 <= ia &&
                  q <= B.bitmapFill.width &&
                  l <= B.bitmapFill.height &&
                  ((Kb = !0),
                  B.hitTesting ||
                    B.context.drawImage(
                      B.bitmapFill.image.get_src(),
                      ia,
                      x,
                      q - ia,
                      l - x,
                      V.buffer.f[V.fPos] - c,
                      V.buffer.f[V.fPos + 1] - d,
                      V.buffer.f[V.fPos + 2],
                      V.buffer.f[V.fPos + 3],
                    ));
              }
              Kb ||
                ((n = !0),
                B.context.rect(
                  V.buffer.f[V.fPos] - c,
                  V.buffer.f[V.fPos + 1] - d,
                  V.buffer.f[V.fPos + 2],
                  V.buffer.f[V.fPos + 3],
                ));
              break;
            case 10:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.DRAW_ROUND_RECT;
              var Ec = m;
              n = !0;
              B.drawRoundRect(
                Ec.buffer.f[Ec.fPos] - c,
                Ec.buffer.f[Ec.fPos + 1] - d,
                Ec.buffer.f[Ec.fPos + 2],
                Ec.buffer.f[Ec.fPos + 3],
                Ec.buffer.f[Ec.fPos + 4],
                Ec.buffer.o[Ec.oPos],
              );
              break;
            case 12:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.DRAW_TRIANGLES;
              var ua = m,
                va = ua.buffer.o[ua.oPos],
                eb = ua.buffer.o[ua.oPos + 1],
                xa = ua.buffer.o[ua.oPos + 2],
                Pb = null,
                ya = null == B.bitmapFill;
              if (ya && null != xa) break a;
              if (!ya) {
                if (null == xa) {
                  xa = X.toFloatVector(null);
                  for (var Za = 0, Aa = (va.get_length() / 2) | 0; Za < Aa; ) {
                    var Eb = Za++;
                    xa.push(va.get(2 * Eb) - c / B.bitmapFill.width);
                    xa.push(va.get(2 * Eb + 1) - d / B.bitmapFill.height);
                  }
                }
                var hb = xa.get_length() != va.get_length(),
                  Ca = B.normalizeUVT(xa, hb),
                  zb = Ca.max;
                xa = Ca.uvt;
                Pb =
                  1 < zb
                    ? B.createTempPatternCanvas(
                        B.bitmapFill,
                        B.bitmapRepeat,
                        B.bounds.width | 0,
                        B.bounds.height | 0,
                      )
                    : B.createTempPatternCanvas(
                        B.bitmapFill,
                        B.bitmapRepeat,
                        B.bitmapFill.width,
                        B.bitmapFill.height,
                      );
              }
              for (
                var $a = 0,
                  Ha = eb.get_length(),
                  Da,
                  Ka,
                  lc,
                  La,
                  Na,
                  Oa,
                  cc,
                  gb,
                  Pa,
                  Ia,
                  Ja,
                  fb,
                  Fa,
                  Ga,
                  Ma,
                  Qa,
                  Ua,
                  rb,
                  Ra,
                  Sa,
                  Ta,
                  jb,
                  bb,
                  cb,
                  db,
                  nb,
                  pb,
                  lb;
                $a < Ha;

              ) {
                Da = $a;
                Ka = $a + 1;
                lc = $a + 2;
                La = 2 * eb.get(Da);
                Na = 2 * eb.get(Da) + 1;
                Oa = 2 * eb.get(Ka);
                cc = 2 * eb.get(Ka) + 1;
                gb = 2 * eb.get(lc);
                Pa = 2 * eb.get(lc) + 1;
                Ia = va.get(La) - c;
                Ja = va.get(Na) - d;
                fb = va.get(Oa) - c;
                Fa = va.get(cc) - d;
                Ga = va.get(gb) - c;
                Ma = va.get(Pa) - d;
                switch (ua.buffer.o[ua.oPos + 3]) {
                  case 0:
                    if (0 > (fb - Ia) * (Ma - Ja) - (Fa - Ja) * (Ga - Ia)) {
                      $a += 3;
                      continue;
                    }
                    break;
                  case 2:
                    if (!(0 > (fb - Ia) * (Ma - Ja) - (Fa - Ja) * (Ga - Ia))) {
                      $a += 3;
                      continue;
                    }
                }
                ya
                  ? (B.context.beginPath(),
                    B.context.moveTo(Ia, Ja),
                    B.context.lineTo(fb, Fa),
                    B.context.lineTo(Ga, Ma),
                    B.context.closePath(),
                    B.hitTesting || B.context.fill(B.windingRule),
                    ($a += 3))
                  : ((Qa = xa.get(La) * Pb.width),
                    (rb = xa.get(Oa) * Pb.width),
                    (Sa = xa.get(gb) * Pb.width),
                    (Ua = xa.get(Na) * Pb.height),
                    (Ra = xa.get(cc) * Pb.height),
                    (Ta = xa.get(Pa) * Pb.height),
                    (jb = Qa * (Ta - Ra) - rb * Ta + Sa * Ra + (rb - Sa) * Ua),
                    0 == jb
                      ? (($a += 3), B.context.restore())
                      : (B.context.save(),
                        B.context.beginPath(),
                        B.context.moveTo(Ia, Ja),
                        B.context.lineTo(fb, Fa),
                        B.context.lineTo(Ga, Ma),
                        B.context.closePath(),
                        B.context.clip(),
                        (bb =
                          -(
                            Ua * (Ga - fb) -
                            Ra * Ga +
                            Ta * fb +
                            (Ra - Ta) * Ia
                          ) / jb),
                        (cb =
                          (Ra * Ma +
                            Ua * (Fa - Ma) -
                            Ta * Fa +
                            (Ta - Ra) * Ja) /
                          jb),
                        (db =
                          (Qa * (Ga - fb) -
                            rb * Ga +
                            Sa * fb +
                            (rb - Sa) * Ia) /
                          jb),
                        (nb =
                          -(
                            rb * Ma +
                            Qa * (Fa - Ma) -
                            Sa * Fa +
                            (Sa - rb) * Ja
                          ) / jb),
                        (pb =
                          (Qa * (Ta * fb - Ra * Ga) +
                            Ua * (rb * Ga - Sa * fb) +
                            (Sa * Ra - rb * Ta) * Ia) /
                          jb),
                        (lb =
                          (Qa * (Ta * Fa - Ra * Ma) +
                            Ua * (rb * Ma - Sa * Fa) +
                            (Sa * Ra - rb * Ta) * Ja) /
                          jb),
                        B.context.transform(bb, cb, db, nb, pb, lb),
                        B.context.drawImage(Pb, 0, 0, Pb.width, Pb.height),
                        B.context.restore(),
                        ($a += 3)));
              }
              break;
            case 14:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.LINE_BITMAP_STYLE;
              var ab = m;
              b && B.hasStroke && B.closePath(!0);
              B.context.moveTo(f - c, h - d);
              if (ab.buffer.o[ab.oPos].readable)
                B.context.strokeStyle = B.createBitmapFill(
                  ab.buffer.o[ab.oPos],
                  ab.buffer.b[ab.bPos],
                  ab.buffer.b[ab.bPos + 1],
                );
              else {
                var ib = M.hex(0, 6);
                B.context.strokeStyle = '#' + ib;
              }
              B.hasStroke = !0;
              break;
            case 15:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.LINE_GRADIENT_STYLE;
              var Wa = m;
              b && B.hasStroke && B.closePath(!0);
              B.context.moveTo(f - c, h - d);
              B.context.strokeStyle = B.createGradientPattern(
                Wa.buffer.o[Wa.oPos],
                Wa.buffer.ii[Wa.iiPos],
                Wa.buffer.ff[Wa.ffPos],
                Wa.buffer.ii[Wa.iiPos + 1],
                Wa.buffer.o[Wa.oPos + 1],
                Wa.buffer.o[Wa.oPos + 2],
                Wa.buffer.o[Wa.oPos + 3],
                Wa.buffer.f[Wa.fPos],
              );
              B.setSmoothing(!0);
              B.hasStroke = !0;
              break;
            case 16:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.LINE_STYLE;
              var Ba = m;
              b && B.hasStroke && B.closePath(!0);
              B.context.moveTo(f - c, h - d);
              if (null == Ba.buffer.o[Ba.oPos]) B.hasStroke = !1;
              else {
                B.context.lineWidth =
                  0 < Ba.buffer.o[Ba.oPos] ? Ba.buffer.o[Ba.oPos] : 1;
                var wb =
                  null == Ba.buffer.o[Ba.oPos + 3]
                    ? 'round'
                    : (null == Ba.buffer.o[Ba.oPos + 3]
                        ? 'null'
                        : nk.toString(Ba.buffer.o[Ba.oPos + 3])
                      ).toLowerCase();
                B.context.lineJoin = wb;
                var Kd =
                  null == Ba.buffer.o[Ba.oPos + 2]
                    ? 'round'
                    : 0 == Ba.buffer.o[Ba.oPos + 2]
                      ? 'butt'
                      : (null == Ba.buffer.o[Ba.oPos + 2]
                          ? 'null'
                          : mk.toString(Ba.buffer.o[Ba.oPos + 2])
                        ).toLowerCase();
                B.context.lineCap = Kd;
                B.context.miterLimit = Ba.buffer.f[Ba.fPos + 1];
                if (1 == Ba.buffer.f[Ba.fPos]) {
                  var kb = M.hex(Ba.buffer.i[Ba.iPos] & 16777215, 6);
                  B.context.strokeStyle = '#' + kb;
                } else
                  ((ba = (Ba.buffer.i[Ba.iPos] & 16711680) >>> 16),
                    (ta = (Ba.buffer.i[Ba.iPos] & 65280) >>> 8),
                    (I = Ba.buffer.i[Ba.iPos] & 255),
                    (B.context.strokeStyle =
                      'rgba(' +
                      ba +
                      ', ' +
                      ta +
                      ', ' +
                      I +
                      ', ' +
                      Ba.buffer.f[Ba.fPos] +
                      ')'));
                B.setSmoothing(!0);
                B.hasStroke = !0;
              }
              break;
            case 17:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.LINE_TO;
              var Gb = m;
              n = !0;
              B.context.lineTo(
                Gb.buffer.f[Gb.fPos] - c,
                Gb.buffer.f[Gb.fPos + 1] - d,
              );
              f = Gb.buffer.f[Gb.fPos];
              h = Gb.buffer.f[Gb.fPos + 1];
              f == g && h == p && (k = !0);
              break;
            case 18:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = ca.MOVE_TO;
              var Xa = m;
              B.context.moveTo(
                Xa.buffer.f[Xa.fPos] - c,
                Xa.buffer.f[Xa.fPos + 1] - d,
              );
              f = Xa.buffer.f[Xa.fPos];
              h = Xa.buffer.f[Xa.fPos + 1];
              t &&
                Xa.buffer.f[Xa.fPos] != g &&
                Xa.buffer.f[Xa.fPos + 1] != p &&
                (k = !0);
              g = Xa.buffer.f[Xa.fPos];
              p = Xa.buffer.f[Xa.fPos + 1];
              t = !0;
              break;
            case 21:
              B.windingRule = 'evenodd';
              break;
            case 22:
              B.windingRule = 'nonzero';
              break;
            default:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = F;
          }
        }
        null != G && K.__pool.release(G);
        null != z && K.__pool.release(z);
        m.destroy();
        if (n) {
          if (b && B.hasStroke) {
            if (B.hasFill) {
              if (f != g || h != p) (B.context.lineTo(g - c, p - d), (k = !0));
              k && B.closePath(!0);
            } else k && f == g && h == p && B.closePath(!0);
            B.hitTesting || B.context.stroke();
          }
          b ||
            (!B.hasFill && null == B.bitmapFill) ||
            (B.context.translate(-B.bounds.x, -B.bounds.y),
            null != B.pendingMatrix
              ? (B.context.transform(
                  B.pendingMatrix.a,
                  B.pendingMatrix.b,
                  B.pendingMatrix.c,
                  B.pendingMatrix.d,
                  B.pendingMatrix.tx,
                  B.pendingMatrix.ty,
                ),
                B.hitTesting || B.context.fill(B.windingRule),
                B.context.transform(
                  B.inversePendingMatrix.a,
                  B.inversePendingMatrix.b,
                  B.inversePendingMatrix.c,
                  B.inversePendingMatrix.d,
                  B.inversePendingMatrix.tx,
                  B.inversePendingMatrix.ty,
                ))
              : B.hitTesting || B.context.fill(B.windingRule),
            B.context.translate(B.bounds.x, B.bounds.y),
            B.context.closePath());
        }
      };
      B.render = function (a, b) {
        a.__update(b.__worldTransform, b.__pixelRatio);
        if (a.__softwareDirty) {
          B.hitTesting = !1;
          B.graphics = a;
          B.allowSmoothing = b.__allowSmoothing;
          B.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
          B.bounds = a.__bounds;
          var c = a.__width,
            d = a.__height;
          if (
            !a.__visible ||
            0 == a.__commands.get_length() ||
            null == B.bounds ||
            1 > c ||
            1 > d
          )
            ((a.__canvas = null), (a.__context = null), (a.__bitmap = null));
          else {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')));
            B.context = a.__context;
            var f = a.__renderTransform,
              h = a.__canvas,
              k = b.__pixelRatio,
              g = (c * k) | 0,
              p = (d * k) | 0;
            b.__setBlendModeContext(B.context, 10);
            b.__isDOM
              ? (h.width == g && h.height == p
                  ? B.context.clearRect(0, 0, g, p)
                  : ((h.width = g),
                    (h.height = p),
                    (h.style.width = c + 'px'),
                    (h.style.height = d + 'px')),
                (c = a.__renderTransform),
                B.context.setTransform(
                  c.a * k,
                  c.b * k,
                  c.c * k,
                  c.d * k,
                  c.tx * k,
                  c.ty * k,
                ))
              : (h.width == g && h.height == p
                  ? (B.context.closePath(),
                    B.context.setTransform(1, 0, 0, 1, 0, 0),
                    B.context.clearRect(0, 0, g, p))
                  : ((h.width = c), (h.height = d)),
                B.context.setTransform(f.a, f.b, f.c, f.d, f.tx, f.ty));
            B.fillCommands.clear();
            B.strokeCommands.clear();
            B.hasFill = !1;
            B.hasStroke = !1;
            B.bitmapFill = null;
            k = B.bitmapRepeat = !1;
            d = c = 0;
            B.windingRule = 'evenodd';
            f = new Fd(a.__commands);
            h = 0;
            for (g = a.__commands.types; h < g.length; )
              switch (((p = g[h]), ++h, p._hx_index)) {
                case 0:
                case 1:
                case 2:
                case 3:
                  B.endFill();
                  B.endStroke();
                  if (p == ca.BEGIN_BITMAP_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = ca.BEGIN_BITMAP_FILL;
                    p = f;
                    B.fillCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                    B.strokeCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                  } else if (p == ca.BEGIN_GRADIENT_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = ca.BEGIN_GRADIENT_FILL;
                    p = f;
                    B.fillCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                    B.strokeCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                  } else if (p == ca.BEGIN_SHADER_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = ca.BEGIN_SHADER_FILL;
                    p = f;
                    B.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                    B.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
                  } else {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = ca.BEGIN_FILL;
                    p = f;
                    B.fillCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                    B.strokeCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                  }
                  break;
                case 4:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.CUBIC_CURVE_TO;
                  p = f;
                  B.fillCommands.cubicCurveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.f[p.fPos + 5],
                  );
                  k
                    ? B.strokeCommands.cubicCurveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                        p.buffer.f[p.fPos + 4],
                        p.buffer.f[p.fPos + 5],
                      )
                    : ((c = p.buffer.f[p.fPos + 4]),
                      (d = p.buffer.f[p.fPos + 5]));
                  break;
                case 5:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.CURVE_TO;
                  p = f;
                  B.fillCommands.curveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k
                    ? B.strokeCommands.curveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                      )
                    : ((c = p.buffer.f[p.fPos + 2]),
                      (d = p.buffer.f[p.fPos + 3]));
                  break;
                case 6:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.DRAW_CIRCLE;
                  p = f;
                  B.fillCommands.drawCircle(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                  );
                  k &&
                    B.strokeCommands.drawCircle(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                    );
                  break;
                case 7:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.DRAW_ELLIPSE;
                  p = f;
                  B.fillCommands.drawEllipse(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k &&
                    B.strokeCommands.drawEllipse(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 8:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.DRAW_QUADS;
                  p = f;
                  B.fillCommands.drawQuads(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                  );
                  break;
                case 9:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.DRAW_RECT;
                  p = f;
                  B.fillCommands.drawRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k &&
                    B.strokeCommands.drawRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 10:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.DRAW_ROUND_RECT;
                  p = f;
                  B.fillCommands.drawRoundRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.o[p.oPos],
                  );
                  k &&
                    B.strokeCommands.drawRoundRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                      p.buffer.f[p.fPos + 4],
                      p.buffer.o[p.oPos],
                    );
                  break;
                case 12:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.DRAW_TRIANGLES;
                  p = f;
                  B.fillCommands.drawTriangles(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                  );
                  break;
                case 13:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.END_FILL;
                  B.endFill();
                  B.endStroke();
                  k = B.hasFill = !1;
                  B.bitmapFill = null;
                  d = c = 0;
                  break;
                case 14:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.LINE_BITMAP_STYLE;
                  p = f;
                  k ||
                    (0 == c && 0 == d) ||
                    (B.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = !0;
                  B.strokeCommands.lineBitmapStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.b[p.bPos],
                    p.buffer.b[p.bPos + 1],
                  );
                  break;
                case 15:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.LINE_GRADIENT_STYLE;
                  p = f;
                  k ||
                    (0 == c && 0 == d) ||
                    (B.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = !0;
                  B.strokeCommands.lineGradientStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.ii[p.iiPos],
                    p.buffer.ff[p.ffPos],
                    p.buffer.ii[p.iiPos + 1],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos],
                  );
                  break;
                case 16:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.LINE_STYLE;
                  p = f;
                  k ||
                    null == p.buffer.o[p.oPos] ||
                    (0 == c && 0 == d) ||
                    (B.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = null != p.buffer.o[p.oPos];
                  B.strokeCommands.lineStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.i[p.iPos],
                    p.buffer.f[p.fPos],
                    p.buffer.b[p.bPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos + 1],
                  );
                  break;
                case 17:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.LINE_TO;
                  p = f;
                  B.fillCommands.lineTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  k
                    ? B.strokeCommands.lineTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((c = p.buffer.f[p.fPos]), (d = p.buffer.f[p.fPos + 1]));
                  break;
                case 18:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.MOVE_TO;
                  p = f;
                  B.fillCommands.moveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  k
                    ? B.strokeCommands.moveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((c = p.buffer.f[p.fPos]), (d = p.buffer.f[p.fPos + 1]));
                  break;
                case 19:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.OVERRIDE_BLEND_MODE;
                  p = f;
                  b.__setBlendModeContext(B.context, p.buffer.o[p.oPos]);
                  break;
                case 21:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.WINDING_EVEN_ODD;
                  B.fillCommands.windingEvenOdd();
                  B.windingRule = 'evenodd';
                  break;
                case 22:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = ca.WINDING_NON_ZERO;
                  B.fillCommands.windingNonZero();
                  B.windingRule = 'nonzero';
                  break;
                default:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = p;
              }
            0 < B.fillCommands.get_length() && B.endFill();
            0 < B.strokeCommands.get_length() && B.endStroke();
            f.destroy();
            a.__bitmap = Wb.fromCanvas(a.__canvas);
          }
          a.__softwareDirty = !1;
          a.set___dirty(!1);
          B.graphics = null;
        }
      };
      B.renderMask = function (a, b) {
        if (0 != a.__commands.get_length()) {
          B.context = b.context;
          b = new Fd(a.__commands);
          var c = 0;
          for (a = a.__commands.types; c < a.length; ) {
            var d = a[c];
            ++c;
            switch (d._hx_index) {
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.CUBIC_CURVE_TO;
                d = b;
                B.context.bezierCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                  d.buffer.f[d.fPos + 4] - 0,
                  d.buffer.f[d.fPos + 5] - 0,
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.CURVE_TO;
                d = b;
                B.context.quadraticCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_CIRCLE;
                d = b;
                B.context.arc(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  0,
                  2 * Math.PI,
                  !0,
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_ELLIPSE;
                var f = b;
                d = f.buffer.f[f.fPos];
                var h = f.buffer.f[f.fPos + 1];
                var k = f.buffer.f[f.fPos + 2];
                var g = f.buffer.f[f.fPos + 3];
                d -= 0;
                h -= 0;
                f = (k / 2) * 0.5522848;
                var p = (g / 2) * 0.5522848;
                var t = d + k;
                var n = h + g;
                k = d + k / 2;
                g = h + g / 2;
                B.context.moveTo(d, g);
                B.context.bezierCurveTo(d, g - p, k - f, h, k, h);
                B.context.bezierCurveTo(k + f, h, t, g - p, t, g);
                B.context.bezierCurveTo(t, g + p, k + f, n, k, n);
                B.context.bezierCurveTo(k - f, n, d, g + p, d, g);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_RECT;
                d = b;
                B.context.beginPath();
                B.context.rect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                B.context.closePath();
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.DRAW_ROUND_RECT;
                d = b;
                B.drawRoundRect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.o[d.oPos],
                );
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.LINE_TO;
                d = b;
                B.context.lineTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                );
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = ca.MOVE_TO;
                d = b;
                B.context.moveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                );
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          b.destroy();
        }
      };
      B.setSmoothing = function (a) {
        B.allowSmoothing || (a = !1);
        B.context.imageSmoothingEnabled != a &&
          (B.context.imageSmoothingEnabled = a);
      };
      var Kh = function () {};
      g['openfl.display._internal.CanvasSimpleButton'] = Kh;
      Kh.__name__ = 'openfl.display._internal.CanvasSimpleButton';
      Kh.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      Kh.renderDrawableMask = function (a, b) {
        b.__renderDrawableMask(a.__currentState);
      };
      var P = function () {};
      g['openfl.display._internal.CanvasTextField'] = P;
      P.__name__ = 'openfl.display._internal.CanvasTextField';
      P.renderDrawable = function (a, b) {
        b.__isDOM &&
          !a.__renderedOnCanvasWhileOnDOM &&
          ((a.__renderedOnCanvasWhileOnDOM = !0),
          1 == a.get_type() && a.replaceText(0, a.__text.length, a.__text),
          a.__isHTML &&
            a.__updateText(
              Da.parse(
                a.__text,
                a.get_multiline(),
                a.__styleSheet,
                a.__textFormat,
                a.__textEngine.textFormatRanges,
              ),
            ),
          (a.__dirty = !0),
          (a.__layoutDirty = !0),
          a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty()));
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, a.__dirty),
            null == a.__cacheBitmap || a.__isCacheBitmapRender)
          ) {
            var c = a.__textEngine,
              d = !(c.background || c.border),
              f = d ? c.textBounds : c.bounds,
              h = a.__graphics,
              k = 0;
            if (a.__dirty) {
              a.__updateLayout();
              null == h.__bounds && (h.__bounds = new qa());
              if (0 == a.get_text().length) {
                var g = c.bounds.width - 4,
                  p = a.get_defaultTextFormat().align;
                k = 3 == p ? 0 : 4 == p ? g : g / 2;
                switch (p) {
                  case 0:
                    k += a.get_defaultTextFormat().leftMargin / 2;
                    k -= a.get_defaultTextFormat().rightMargin / 2;
                    k += a.get_defaultTextFormat().indent / 2;
                    k += a.get_defaultTextFormat().blockIndent / 2;
                    break;
                  case 2:
                    k += a.get_defaultTextFormat().leftMargin;
                    k += a.get_defaultTextFormat().indent;
                    k += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 3:
                    k += a.get_defaultTextFormat().leftMargin;
                    k += a.get_defaultTextFormat().indent;
                    k += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 4:
                    k -= a.get_defaultTextFormat().rightMargin;
                }
                d && ((f.y = c.bounds.y), (f.x = k));
              }
              h.__bounds.copyFrom(f);
            }
            p = b.__pixelRatio;
            h.__update(b.__worldTransform, p);
            if (a.__dirty || h.__softwareDirty) {
              g = Math.round(h.__width * p);
              var t = Math.round(h.__height * p);
              if (
                !(
                  (null != c.text && '' != c.text) ||
                  c.background ||
                  c.border ||
                  c.__hasFocus ||
                  (1 == c.type && c.selectable)
                ) ||
                ((0 >= c.width || 0 >= c.height) && 2 != c.autoSize)
              )
                ((a.__graphics.__canvas = null),
                  (a.__graphics.__context = null),
                  (a.__graphics.__bitmap = null),
                  (a.__graphics.__softwareDirty = !1),
                  a.__graphics.set___dirty(!1),
                  (a.__dirty = !1));
              else {
                null == a.__graphics.__canvas &&
                  ((a.__graphics.__canvas =
                    window.document.createElement('canvas')),
                  (a.__graphics.__context =
                    a.__graphics.__canvas.getContext('2d')));
                P.context = h.__context;
                h.__canvas.width = g;
                h.__canvas.height = t;
                b.__isDOM &&
                  ((h.__canvas.style.width = Math.round(g / p) + 'px'),
                  (h.__canvas.style.height = Math.round(t / p) + 'px'));
                var n = wa.__pool.get();
                n.scale(p, p);
                n.concat(h.__renderTransform);
                P.context.setTransform(n.a, n.b, n.c, n.d, n.tx, n.ty);
                wa.__pool.release(n);
                null == P.clearRect &&
                  (P.clearRect =
                    'undefined' !== typeof navigator &&
                    'undefined' !== typeof navigator.isCocoonJS);
                P.clearRect &&
                  P.context.clearRect(
                    0,
                    0,
                    h.__canvas.width,
                    h.__canvas.height,
                  );
                if ((null != c.text && '' != c.text) || c.__hasFocus) {
                  g = c.text;
                  h.__context.imageSmoothingEnabled =
                    !b.__allowSmoothing ||
                    (0 == c.antiAliasType && 400 == c.sharpness)
                      ? !1
                      : !0;
                  if (c.border || c.background) {
                    P.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                    if (c.background) {
                      var m = M.hex(c.backgroundColor & 16777215, 6);
                      P.context.fillStyle = '#' + m;
                      P.context.fill();
                    }
                    c.border &&
                      ((P.context.lineWidth = 1),
                      (m = M.hex(c.borderColor & 16777215, 6)),
                      (P.context.strokeStyle = '#' + m),
                      P.context.stroke());
                  }
                  P.context.textBaseline = 'alphabetic';
                  P.context.textAlign = 'start';
                  t = -a.get_scrollH();
                  var x = (d = 0);
                  for (m = a.get_scrollV() - 1; x < m; ) {
                    var q = x++;
                    d -= c.lineHeights.get(q);
                  }
                  var l;
                  for (k = c.layoutGroups.iterator(); k.hasNext(); ) {
                    var G = k.next();
                    if (!(G.lineIndex < a.get_scrollV() - 1)) {
                      if (G.lineIndex > c.get_bottomScrollV() - 1) break;
                      n = '#' + M.hex(G.format.color & 16777215, 6);
                      P.context.font = Db.getFont(G.format);
                      P.context.fillStyle = n;
                      P.context.fillText(
                        g.substring(G.startIndex, G.endIndex),
                        G.offsetX + t - f.x,
                        G.offsetY + G.ascent + d - f.y,
                      );
                      if (-1 < a.__caretIndex && c.selectable)
                        if (a.__selectionIndex == a.__caretIndex) {
                          if (
                            a.__showCursor &&
                            G.startIndex <= a.__caretIndex &&
                            G.endIndex >= a.__caretIndex
                          ) {
                            x = l = 0;
                            for (m = a.__caretIndex - G.startIndex; x < m; ) {
                              q = x++;
                              if (G.positions.length <= q) break;
                              l += G.positions[q];
                            }
                            x = 0;
                            m = a.get_scrollV();
                            for (q = G.lineIndex + 1; m < q; ) {
                              var z = m++;
                              x += c.lineHeights.get(z - 1);
                            }
                            P.context.beginPath();
                            m = M.hex(G.format.color & 16777215, 6);
                            P.context.strokeStyle = '#' + m;
                            P.context.moveTo(
                              G.offsetX + l - a.get_scrollH() - f.x,
                              x + 2 - f.y,
                            );
                            P.context.lineWidth = 1;
                            P.context.lineTo(
                              G.offsetX + l - a.get_scrollH() - f.x,
                              x +
                                Db.getFormatHeight(a.get_defaultTextFormat()) -
                                1 -
                                f.y,
                            );
                            P.context.stroke();
                            P.context.closePath();
                          }
                        } else if (
                          (G.startIndex <= a.__caretIndex &&
                            G.endIndex >= a.__caretIndex) ||
                          (G.startIndex <= a.__selectionIndex &&
                            G.endIndex >= a.__selectionIndex) ||
                          (G.startIndex > a.__caretIndex &&
                            G.endIndex < a.__selectionIndex) ||
                          (G.startIndex > a.__selectionIndex &&
                            G.endIndex < a.__caretIndex)
                        )
                          ((l =
                            Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                            (x =
                              Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                            G.startIndex > l && (l = G.startIndex),
                            G.endIndex < x && (x = G.endIndex),
                            (q = a.getCharBoundaries(l)),
                            x >= G.endIndex
                              ? ((m = a.getCharBoundaries(G.endIndex - 1)),
                                null != m && (m.x += m.width + 2))
                              : (m = a.getCharBoundaries(x)),
                            null != q &&
                              null != m &&
                              ((P.context.fillStyle = '#000000'),
                              P.context.fillRect(
                                q.x + t - f.x,
                                q.y + d,
                                m.x - q.x,
                                G.height,
                              ),
                              (P.context.fillStyle = '#FFFFFF'),
                              P.context.fillText(
                                g.substring(l, x),
                                t + q.x - f.x,
                                G.offsetY + G.ascent + d,
                              )));
                      G.format.underline &&
                        (P.context.beginPath(),
                        (P.context.strokeStyle = n),
                        (P.context.lineWidth = 1),
                        (n = G.offsetX + t - f.x),
                        (l =
                          Math.ceil(G.offsetY + d + G.ascent - f.y) +
                          Math.floor(0.185 * G.ascent) +
                          0.5),
                        P.context.moveTo(n, l),
                        P.context.lineTo(n + G.width, l),
                        P.context.stroke(),
                        P.context.closePath());
                    }
                  }
                } else {
                  if (c.border || c.background)
                    (c.border
                      ? P.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                      : P.context.rect(0, 0, f.width, f.height),
                      c.background &&
                        ((m = M.hex(c.backgroundColor & 16777215, 6)),
                        (P.context.fillStyle = '#' + m),
                        P.context.fill()),
                      c.border &&
                        ((P.context.lineWidth = 1),
                        (P.context.lineCap = 'square'),
                        (m = M.hex(c.borderColor & 16777215, 6)),
                        (P.context.strokeStyle = '#' + m),
                        P.context.stroke()));
                  if (-1 < a.__caretIndex && c.selectable && a.__showCursor) {
                    t = -a.get_scrollH() + (d ? 0 : k);
                    x = d = 0;
                    for (m = a.get_scrollV() - 1; x < m; )
                      ((q = x++), (d += c.lineHeights.get(q)));
                    P.context.beginPath();
                    m = M.hex(a.get_defaultTextFormat().color & 16777215, 6);
                    P.context.strokeStyle = '#' + m;
                    P.context.moveTo(t + 2.5, d + 2.5);
                    P.context.lineWidth = 1;
                    P.context.lineTo(
                      t + 2.5,
                      d + Db.getFormatHeight(a.get_defaultTextFormat()) - 1,
                    );
                    P.context.stroke();
                    P.context.closePath();
                  }
                }
                h.__bitmap = Wb.fromCanvas(a.__graphics.__canvas);
                h.__bitmapScale = p;
                h.__visible = !0;
                a.__dirty = !1;
                h.__softwareDirty = !1;
                h.set___dirty(!1);
              }
            }
            d = !1;
            0 == a.__textEngine.antiAliasType &&
              1 == a.__textEngine.gridFitType &&
              (d = b.context.imageSmoothingEnabled) &&
              (b.context.imageSmoothingEnabled = !1);
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable &&
              ((f = b.__getAlpha(a.__worldAlpha)),
              !(0 >= f) &&
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (c = b.context),
                  b.setTransform(a.__renderTransform, c),
                  (n = a.opaqueBackground),
                  (c.fillStyle =
                    'rgb(' +
                    ((n >>> 16) & 255) +
                    ',' +
                    ((n >>> 8) & 255) +
                    ',' +
                    (n & 255) +
                    ')'),
                  c.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null != a.__graphics &&
                  a.__renderable &&
                  ((f = b.__getAlpha(a.__worldAlpha)),
                  !(0 >= f) &&
                    ((h = a.__graphics),
                    null != h &&
                      (B.render(h, b),
                      (g = h.__width),
                      (t = h.__height),
                      (k = h.__canvas),
                      null != k &&
                        h.__visible &&
                        1 <= g &&
                        1 <= t &&
                        ((G = h.__worldTransform),
                        (c = b.context),
                        (p = a.__scrollRect),
                        (z = a.__worldScale9Grid),
                        null == p || (0 < p.width && 0 < p.height)))))))
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              c.globalAlpha = f;
              if (null != z && 0 == G.b && 0 == G.c) {
                p = b.__pixelRatio;
                n = wa.__pool.get();
                n.translate(G.tx, G.ty);
                b.setTransform(n, c);
                wa.__pool.release(n);
                f = h.__bounds;
                x = h.__renderTransform.a / h.__bitmapScale;
                var w = h.__renderTransform.d / h.__bitmapScale;
                m = x * G.a;
                q = w * G.d;
                h = Math.max(1, Math.round(z.x * x));
                G = Math.round(z.y * w);
                n = Math.max(
                  1,
                  Math.round((f.get_right() - z.get_right()) * x),
                );
                l = Math.round((f.get_bottom() - z.get_bottom()) * w);
                x = Math.round(z.width * x);
                z = Math.round(z.height * w);
                w = Math.round(h / p);
                var D = Math.round(G / p),
                  F = Math.round(n / p);
                p = Math.round(l / p);
                m = f.width * m - w - F;
                f = f.height * q - D - p;
                b.applySmoothing(c, !1);
                0 != x && 0 != z
                  ? (c.drawImage(k, 0, 0, h, G, 0, 0, w, D),
                    c.drawImage(k, h, 0, x, G, w, 0, m, D),
                    c.drawImage(k, h + x, 0, n, G, w + m, 0, F, D),
                    c.drawImage(k, 0, G, h, z, 0, D, w, f),
                    c.drawImage(k, h, G, x, z, w, D, m, f),
                    c.drawImage(k, h + x, G, n, z, w + m, D, F, f),
                    c.drawImage(k, 0, G + z, h, l, 0, D + f, w, p),
                    c.drawImage(k, h, G + z, x, l, w, D + f, m, p),
                    c.drawImage(k, h + x, G + z, n, l, w + m, D + f, F, p))
                  : 0 == x && 0 != z
                    ? ((h = w + m + F),
                      c.drawImage(k, 0, 0, g, G, 0, 0, h, D),
                      c.drawImage(k, 0, G, g, z, 0, D, h, f),
                      c.drawImage(k, 0, G + z, g, l, 0, D + f, h, p))
                    : 0 == z &&
                      0 != x &&
                      ((f = D + f + p),
                      c.drawImage(k, 0, 0, h, t, 0, 0, w, f),
                      c.drawImage(k, h, 0, x, t, w, 0, m, f),
                      c.drawImage(k, h + x, 0, n, t, w + m, 0, F, f));
              } else (b.setTransform(G, c), c.drawImage(k, 0, 0, g, t));
              b.__popMaskObject(a);
            }
            d && (b.context.imageSmoothingEnabled = !0);
          } else
            ((a = a.__cacheBitmap),
              a.__renderable &&
                ((f = b.__getAlpha(a.__worldAlpha)),
                0 < f &&
                  null != a.__bitmapData &&
                  a.__bitmapData.__isValid &&
                  a.__bitmapData.readable &&
                  ((c = b.context),
                  b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a, !1),
                  Ha.convertToCanvas(a.__bitmapData.image),
                  (c.globalAlpha = f),
                  (p = a.__scrollRect),
                  b.setTransform(a.__renderTransform, c),
                  (b.__allowSmoothing && a.smoothing) ||
                    (c.imageSmoothingEnabled = !1),
                  null == p
                    ? c.drawImage(
                        a.__bitmapData.image.get_src(),
                        0,
                        0,
                        a.__bitmapData.image.width,
                        a.__bitmapData.image.height,
                      )
                    : c.drawImage(
                        a.__bitmapData.image.get_src(),
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                      ),
                  (b.__allowSmoothing && a.smoothing) ||
                    (c.imageSmoothingEnabled = !0),
                  b.__popMaskObject(a, !1))));
      };
      P.renderDrawableMask = function (a, b) {
        Se.renderDrawableMask(a, b);
      };
      var fe = function () {};
      g['openfl.display._internal.CanvasTilemap'] = fe;
      fe.__name__ = 'openfl.display._internal.CanvasTilemap';
      fe.renderTileContainer = function (a, b, c, d, f, h, k, g, p, t, n, m) {
        var v = b.context,
          x = b.__roundPixels,
          q = wa.__pool.get(),
          G = a.__tiles,
          l,
          z = null,
          w = 0;
        for (a = a.__length; w < a; ) {
          var D = w++;
          var F = G[D];
          q.setTo(1, 0, 0, 1, -F.get_originX(), -F.get_originY());
          q.concat(F.get_matrix());
          q.concat(c);
          x && ((q.tx = Math.round(q.tx)), (q.ty = Math.round(q.ty)));
          var B = null != F.get_tileset() ? F.get_tileset() : d;
          D = F.get_alpha() * k;
          if ((l = F.get_visible()) && !(0 >= D))
            if (
              (h || (D = 1),
              g && (z = null != F.__blendMode ? F.__blendMode : p),
              0 < F.__length)
            )
              fe.renderTileContainer(F, b, q, B, f, h, D, g, z, t, n, m);
            else if (null != B) {
              l = F.get_id();
              if (-1 == l) {
                if (
                  ((F = F.__rect), null == F || 0 >= F.width || 0 >= F.height)
                )
                  continue;
              } else {
                F = B.__data[l];
                if (null == F) continue;
                m.setTo(F.x, F.y, F.width, F.height);
                F = m;
              }
              B = B.__bitmapData;
              null != B &&
                null != B.image &&
                (B != t &&
                  (null == B.image.buffer.__srcImage &&
                    Ha.convertToCanvas(B.image),
                  (n = B.image.get_src()),
                  (t = B)),
                (v.globalAlpha = D),
                g && b.__setBlendMode(z),
                b.setTransform(q, v),
                v.drawImage(
                  n,
                  F.x,
                  F.y,
                  F.width,
                  F.height,
                  0,
                  0,
                  F.width,
                  F.height,
                ));
            }
        }
        wa.__pool.release(q);
      };
      fe.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((z = b.__getAlpha(a.__worldAlpha)), 0 >= z)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              w = b.context;
              b.setTransform(a.__renderTransform, w);
              var c = a.opaqueBackground;
              w.fillStyle =
                'rgb(' +
                ((c >>> 16) & 255) +
                ',' +
                ((c >>> 8) & 255) +
                ',' +
                (c & 255) +
                ')';
              w.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((z = b.__getAlpha(a.__worldAlpha)), !(0 >= z))
            ) {
              var d = a.__graphics;
              if (null != d) {
                B.render(d, b);
                var f = d.__width,
                  h = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= f && 1 <= h) {
                  var k = d.__worldTransform;
                  w = b.context;
                  D = a.__scrollRect;
                  var g = a.__worldScale9Grid;
                  if (null == D || (0 < D.width && 0 < D.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    w.globalAlpha = z;
                    if (null != g && 0 == k.b && 0 == k.c) {
                      var p = b.__pixelRatio;
                      z = wa.__pool.get();
                      z.translate(k.tx, k.ty);
                      b.setTransform(z, w);
                      wa.__pool.release(z);
                      z = d.__bounds;
                      var t = d.__renderTransform.a / d.__bitmapScale,
                        n = d.__renderTransform.d / d.__bitmapScale,
                        m = t * k.a,
                        x = n * k.d;
                      k = Math.max(1, Math.round(g.x * t));
                      d = Math.round(g.y * n);
                      D = Math.max(
                        1,
                        Math.round((z.get_right() - g.get_right()) * t),
                      );
                      var q = Math.round((z.get_bottom() - g.get_bottom()) * n);
                      t = Math.round(g.width * t);
                      g = Math.round(g.height * n);
                      n = Math.round(k / p);
                      var G = Math.round(d / p),
                        l = Math.round(D / p);
                      p = Math.round(q / p);
                      m = z.width * m - n - l;
                      z = z.height * x - G - p;
                      b.applySmoothing(w, !1);
                      0 != t && 0 != g
                        ? (w.drawImage(c, 0, 0, k, d, 0, 0, n, G),
                          w.drawImage(c, k, 0, t, d, n, 0, m, G),
                          w.drawImage(c, k + t, 0, D, d, n + m, 0, l, G),
                          w.drawImage(c, 0, d, k, g, 0, G, n, z),
                          w.drawImage(c, k, d, t, g, n, G, m, z),
                          w.drawImage(c, k + t, d, D, g, n + m, G, l, z),
                          w.drawImage(c, 0, d + g, k, q, 0, G + z, n, p),
                          w.drawImage(c, k, d + g, t, q, n, G + z, m, p),
                          w.drawImage(
                            c,
                            k + t,
                            d + g,
                            D,
                            q,
                            n + m,
                            G + z,
                            l,
                            p,
                          ))
                        : 0 == t && 0 != g
                          ? ((h = n + m + l),
                            w.drawImage(c, 0, 0, f, d, 0, 0, h, G),
                            w.drawImage(c, 0, d, f, g, 0, G, h, z),
                            w.drawImage(c, 0, d + g, f, q, 0, G + z, h, p))
                          : 0 == g &&
                            0 != t &&
                            ((f = G + z + p),
                            w.drawImage(c, 0, 0, k, h, 0, 0, n, f),
                            w.drawImage(c, k, 0, t, h, n, 0, m, f),
                            w.drawImage(c, k + t, 0, D, h, n + m, 0, l, f));
                    } else (b.setTransform(k, w), w.drawImage(c, 0, 0, f, h));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            0 != a.__group.__tiles.length &&
            ((z = b.__getAlpha(a.__worldAlpha)),
            0 >= z ||
              ((w = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a),
              (c = qa.__pool.get()),
              c.setTo(0, 0, a.__width, a.__height),
              b.__pushMaskRect(c, a.__renderTransform),
              (b.__allowSmoothing && a.smoothing) ||
                (w.imageSmoothingEnabled = !1),
              fe.renderTileContainer(
                a.__group,
                b,
                a.__renderTransform,
                a.__tileset,
                b.__allowSmoothing && a.smoothing,
                a.tileAlphaEnabled,
                z,
                a.tileBlendModeEnabled,
                a.__worldBlendMode,
                null,
                null,
                c,
              ),
              (b.__allowSmoothing && a.smoothing) ||
                (w.imageSmoothingEnabled = !0),
              b.__popMaskRect(),
              b.__popMaskObject(a),
              qa.__pool.release(c)));
        } else if (((c = a.__cacheBitmap), c.__renderable)) {
          var z = b.__getAlpha(c.__worldAlpha);
          if (
            0 < z &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
          ) {
            var w = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            Ha.convertToCanvas(c.__bitmapData.image);
            w.globalAlpha = z;
            var D = c.__scrollRect;
            b.setTransform(c.__renderTransform, w);
            (b.__allowSmoothing && c.smoothing) ||
              (w.imageSmoothingEnabled = !1);
            null == D
              ? w.drawImage(
                  c.__bitmapData.image.get_src(),
                  0,
                  0,
                  c.__bitmapData.image.width,
                  c.__bitmapData.image.height,
                )
              : w.drawImage(
                  c.__bitmapData.image.get_src(),
                  D.x,
                  D.y,
                  D.width,
                  D.height,
                  D.x,
                  D.y,
                  D.width,
                  D.height,
                );
            (b.__allowSmoothing && c.smoothing) ||
              (w.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1);
          }
        }
        b.__renderEvent(a);
      };
      fe.renderDrawableMask = function (a, b) {};
      var Te = function () {};
      g['openfl.display._internal.CanvasVideo'] = Te;
      Te.__name__ = 'openfl.display._internal.CanvasVideo';
      Te.render = function (a, b) {
        if (a.__renderable && null != a.__stream) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            var d = b.context;
            if (null != a.__stream.__video) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              d.globalAlpha = c;
              c = a.__scrollRect;
              var f = a.smoothing;
              b.setTransform(a.__worldTransform, d);
              f || (d.imageSmoothingEnabled = !1);
              null == c
                ? d.drawImage(
                    a.__stream.__video,
                    0,
                    0,
                    a.get_width(),
                    a.get_height(),
                  )
                : d.drawImage(
                    a.__stream.__video,
                    c.x,
                    c.y,
                    c.width,
                    c.height,
                    c.x,
                    c.y,
                    c.width,
                    c.height,
                  );
              f || (d.imageSmoothingEnabled = !0);
              b.__popMaskObject(a);
            }
          }
        }
      };
      Te.renderDrawable = function (a, b) {
        Te.render(a, b);
        b.__renderEvent(a);
      };
      Te.renderDrawableMask = function (a, b) {};
      var nd = function () {};
      g['openfl.display._internal.Context3DBitmap'] = nd;
      nd.__name__ = 'openfl.display._internal.Context3DBitmap';
      nd.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid
        ) {
          var c = b.__context3D;
          b.__setBlendMode(a.__worldBlendMode);
          b.__pushMaskObject(a);
          var d = b.__initDisplayShader(a.__worldShader);
          b.setShader(d);
          b.applyBitmapData(
            a.__bitmapData,
            b.__allowSmoothing && (a.smoothing || b.__upscaled),
          );
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var f = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          d = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(d);
          b.__clearShader();
          b.__popMaskObject(a);
        }
      };
      nd.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = qa.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              qa.__pool.release(d);
            }
            null != a.__graphics && Sd.render(a, b);
          }
          nd.render(a, b);
        } else nd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      nd.renderDrawableMask = function (a, b) {
        nd.renderMask(a, b);
      };
      nd.renderMask = function (a, b) {
        if (null != a.__bitmapData && a.__bitmapData.__isValid) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(Ve.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.updateShader();
          var f = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          a = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var Yh = function () {};
      g['openfl.display._internal.Context3DBitmapData'] = Yh;
      Yh.__name__ = 'openfl.display._internal.Context3DBitmapData';
      Yh.renderDrawable = function (a, b) {
        var c = b.__context3D;
        b.__setBlendMode(10);
        var d = b.__defaultDisplayShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.applyAlpha(a.__worldAlpha);
        b.applyColorTransform(a.__worldColorTransform);
        b.updateShader();
        var f = a.getVertexBuffer(c);
        null != d.__position &&
          c.setVertexBufferAt(d.__position.index, f, 0, 3);
        null != d.__textureCoord &&
          c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader();
      };
      Yh.renderDrawableMask = function (a, b) {
        var c = b.__context3D,
          d = b.__maskShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.updateShader();
        var f = a.getVertexBuffer(c);
        null != d.__position &&
          c.setVertexBufferAt(d.__position.index, f, 0, 3);
        null != d.__textureCoord &&
          c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader();
      };
      var zg = function (a, b, c, d) {
        this.context3D = a;
        this.elementType = b;
        this.dataPerVertex = d;
        this.vertexCount = this.indexCount = 0;
        this.resize(c);
      };
      g['openfl.display._internal.Context3DBuffer'] = zg;
      zg.__name__ = 'openfl.display._internal.Context3DBuffer';
      zg.prototype = {
        flushVertexBufferData: function () {
          this.vertexBufferData.length > this.vertexCount &&
            ((this.vertexCount = this.vertexBufferData.length),
            (this.vertexBuffer = this.context3D.createVertexBuffer(
              this.vertexCount,
              this.dataPerVertex,
              0,
            )));
          this.vertexBuffer.uploadFromTypedArray(
            qg.toArrayBufferView(this.vertexBufferData),
          );
        },
        resize: function (a, b) {
          null == b && (b = -1);
          this.elementCount = a;
          -1 == b && (b = this.dataPerVertex);
          b != this.dataPerVertex &&
            ((this.vertexBuffer = null),
            (this.vertexCount = 0),
            (this.dataPerVertex = b));
          var c = 0;
          switch (this.elementType._hx_index) {
            case 0:
              c = 4 * a;
              break;
            case 1:
              c = 3 * a;
              break;
            case 2:
              c = 3 * a;
          }
          b *= c;
          if (null == this.vertexBufferData) {
            var d = (c = null),
              f = null,
              h = null,
              k = null;
            this.vertexBufferData = b =
              null != b
                ? new Float32Array(b)
                : null != c
                  ? new Float32Array(c)
                  : null != d
                    ? new Float32Array(d.__array)
                    : null != f
                      ? new Float32Array(f)
                      : null != h
                        ? null == k
                          ? new Float32Array(h, 0)
                          : new Float32Array(h, 0, k)
                        : null;
          } else
            b > this.vertexBufferData.length &&
              ((a = this.vertexBufferData),
              (k = h = f = d = c = null),
              (this.vertexBufferData = b =
                null != b
                  ? new Float32Array(b)
                  : null != c
                    ? new Float32Array(c)
                    : null != d
                      ? new Float32Array(d.__array)
                      : null != f
                        ? new Float32Array(f)
                        : null != h
                          ? null == k
                            ? new Float32Array(h, 0)
                            : new Float32Array(h, 0, k)
                          : null),
              this.vertexBufferData.set(a));
        },
        __class__: zg,
      };
      var di = (F['openfl.display._internal.Context3DElementType'] = {
        __ename__: 'openfl.display._internal.Context3DElementType',
        __constructs__: null,
        QUADS: {
          _hx_name: 'QUADS',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: q,
        },
        TRIANGLES: {
          _hx_name: 'TRIANGLES',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: q,
        },
        TRIANGLE_INDICES: {
          _hx_name: 'TRIANGLE_INDICES',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: q,
        },
      });
      di.__constructs__ = [di.QUADS, di.TRIANGLES, di.TRIANGLE_INDICES];
      var We = function () {};
      g['openfl.display._internal.Context3DDisplayObject'] = We;
      We.__name__ = 'openfl.display._internal.Context3DDisplayObject';
      We.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          nd.render(a.__cacheBitmap, b);
        else if (
          !(
            (null == a.opaqueBackground && null == a.__graphics) ||
            !a.__renderable ||
            0 >= a.__worldAlpha
          )
        ) {
          if (
            null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            0 < a.get_height()
          ) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var c = b.__context3D,
              d = qa.__pool.get();
            d.setTo(0, 0, a.get_width(), a.get_height());
            b.__pushMaskRect(d, a.__renderTransform);
            var f = a.opaqueBackground;
            c.clear(
              ((f >>> 16) & 255) / 255,
              ((f >>> 8) & 255) / 255,
              (f & 255) / 255,
              1,
              0,
              0,
              1,
            );
            b.__popMaskRect();
            b.__popMaskObject(a);
            qa.__pool.release(d);
          }
          null != a.__graphics && Sd.render(a, b);
        }
        b.__renderEvent(a);
      };
      We.renderDrawableMask = function (a, b) {
        null != a.__graphics && Sd.renderMask(a, b);
      };
      var Zh = function () {};
      g['openfl.display._internal.Context3DDisplayObjectContainer'] = Zh;
      Zh.__name__ = 'openfl.display._internal.Context3DDisplayObjectContainer';
      Zh.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          (We.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          if (0 < a.__children.length)
            if ((b.__pushMaskObject(a), null != b.__stage)) {
              c = 0;
              for (d = a.__children; c < d.length; ) {
                var f = d[c];
                ++c;
                b.__renderDrawable(f);
                f.__renderDirty = !1;
              }
              a.__renderDirty = !1;
            } else
              for (c = 0, d = a.__children; c < d.length; )
                ((f = d[c]), ++c, b.__renderDrawable(f));
          0 < a.__children.length && b.__popMaskObject(a);
        }
      };
      Zh.renderDrawableMask = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && Sd.renderMask(a, b);
        c = 0;
        for (a = a.__children; c < a.length; )
          ((d = a[c]), ++c, b.__renderDrawableMask(d));
      };
      var wa = function (a, b, c, d, f, h) {
        null == h && (h = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = f;
        this.ty = h;
      };
      g['openfl.geom.Matrix'] = wa;
      wa.__name__ = 'openfl.geom.Matrix';
      wa.prototype = {
        clone: function () {
          return new wa(this.a, this.b, this.c, this.d, this.tx, this.ty);
        },
        concat: function (a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty * a.d + a.ty;
          this.tx = b;
        },
        copyFrom: function (a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty;
        },
        createGradientBox: function (a, b, c, d, f) {
          null == f && (f = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          this.a = a / 1638.4;
          this.d = b / 1638.4;
          if (0 != c) {
            var h = Math.cos(c);
            c = Math.sin(c);
            this.b = c * this.d;
            this.c = -c * this.a;
            this.a *= h;
            this.d *= h;
          } else this.c = this.b = 0;
          this.tx = d + a / 2;
          this.ty = f + b / 2;
        },
        equals: function (a) {
          return null != a &&
            this.tx == a.tx &&
            this.ty == a.ty &&
            this.a == a.a &&
            this.b == a.b &&
            this.c == a.c
            ? this.d == a.d
            : !1;
        },
        identity: function () {
          this.a = 1;
          this.c = this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0;
        },
        invert: function () {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a)
            ((this.a = this.b = this.c = this.d = 0),
              (this.tx = -this.tx),
              (this.ty = -this.ty));
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a;
          }
          return this;
        },
        scale: function (a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b;
        },
        setTo: function (a, b, c, d, f, h) {
          this.a = a;
          this.b = b;
          this.c = c;
          this.d = d;
          this.tx = f;
          this.ty = h;
        },
        transformPoint: function (a) {
          return new K(
            a.x * this.a + a.y * this.c + this.tx,
            a.x * this.b + a.y * this.d + this.ty,
          );
        },
        translate: function (a, b) {
          this.tx += a;
          this.ty += b;
        },
        __class__: wa,
      };
      var Hb = function (a, b, c, d, f, h, k, g) {
        null == g && (g = 0);
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.redMultiplier = a;
        this.greenMultiplier = b;
        this.blueMultiplier = c;
        this.alphaMultiplier = d;
        this.redOffset = f;
        this.greenOffset = h;
        this.blueOffset = k;
        this.alphaOffset = g;
      };
      g['openfl.geom.ColorTransform'] = Hb;
      Hb.__name__ = 'openfl.geom.ColorTransform';
      Hb.prototype = {
        __clone: function () {
          return new Hb(
            this.redMultiplier,
            this.greenMultiplier,
            this.blueMultiplier,
            this.alphaMultiplier,
            this.redOffset,
            this.greenOffset,
            this.blueOffset,
            this.alphaOffset,
          );
        },
        __copyFrom: function (a) {
          this.redMultiplier = a.redMultiplier;
          this.greenMultiplier = a.greenMultiplier;
          this.blueMultiplier = a.blueMultiplier;
          this.alphaMultiplier = a.alphaMultiplier;
          this.redOffset = a.redOffset;
          this.greenOffset = a.greenOffset;
          this.blueOffset = a.blueOffset;
          this.alphaOffset = a.alphaOffset;
        },
        __combine: function (a) {
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *= a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier;
          this.redOffset += a.redOffset;
          this.greenOffset += a.greenOffset;
          this.blueOffset += a.blueOffset;
          this.alphaOffset += a.alphaOffset;
        },
        __identity: function () {
          this.alphaMultiplier =
            this.blueMultiplier =
            this.greenMultiplier =
            this.redMultiplier =
              1;
          this.alphaOffset =
            this.blueOffset =
            this.greenOffset =
            this.redOffset =
              0;
        },
        __invert: function () {
          this.redMultiplier =
            0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
          this.greenMultiplier =
            0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
          this.blueMultiplier =
            0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
          this.alphaMultiplier =
            0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
          this.redOffset = -this.redOffset;
          this.greenOffset = -this.greenOffset;
          this.blueOffset = -this.blueOffset;
          this.alphaOffset = -this.alphaOffset;
        },
        __equals: function (a, b) {
          return null == a ||
            this.redMultiplier != a.redMultiplier ||
            this.greenMultiplier != a.greenMultiplier ||
            this.blueMultiplier != a.blueMultiplier ||
            (!b && this.alphaMultiplier != a.alphaMultiplier) ||
            this.redOffset != a.redOffset ||
            this.greenOffset != a.greenOffset ||
            this.blueOffset != a.blueOffset
            ? !1
            : this.alphaOffset == a.alphaOffset;
        },
        __isDefault: function (a) {
          return a
            ? 1 == this.redMultiplier &&
              1 == this.greenMultiplier &&
              1 == this.blueMultiplier &&
              0 == this.redOffset &&
              0 == this.greenOffset &&
              0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1
            : 1 == this.redMultiplier &&
                1 == this.greenMultiplier &&
                1 == this.blueMultiplier &&
                1 == this.alphaMultiplier &&
                0 == this.redOffset &&
                0 == this.greenOffset &&
                0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1;
        },
        __setArrays: function (a, b) {
          a[0] = this.redMultiplier;
          a[1] = this.greenMultiplier;
          a[2] = this.blueMultiplier;
          a[3] = this.alphaMultiplier;
          b[0] = this.redOffset;
          b[1] = this.greenOffset;
          b[2] = this.blueOffset;
          b[3] = this.alphaOffset;
        },
        __toLimeColorMatrix: function () {
          null == Hb.__limeColorMatrix &&
            (Hb.__limeColorMatrix = new Float32Array(20));
          Hb.__limeColorMatrix[0] = this.redMultiplier;
          Hb.__limeColorMatrix[4] = this.redOffset / 255;
          Hb.__limeColorMatrix[6] = this.greenMultiplier;
          Hb.__limeColorMatrix[9] = this.greenOffset / 255;
          Hb.__limeColorMatrix[12] = this.blueMultiplier;
          Hb.__limeColorMatrix[14] = this.blueOffset / 255;
          Hb.__limeColorMatrix[18] = this.alphaMultiplier;
          Hb.__limeColorMatrix[19] = this.alphaOffset / 255;
          return Hb.__limeColorMatrix;
        },
        __class__: Hb,
      };
      var Lb = function () {};
      g['openfl.display._internal.Context3DGraphics'] = Lb;
      Lb.__name__ = 'openfl.display._internal.Context3DGraphics';
      Lb.buildBuffer = function (a, b) {
        var c,
          d = (c = 0),
          f = 0,
          h = new Fd(a.__commands);
        b = b.__context3D;
        for (
          var k = qa.__pool.get(),
            g = wa.__pool.get(),
            p = null,
            t = 0,
            n = a.__commands.types;
          t < n.length;

        ) {
          var m = n[t];
          ++t;
          switch (m._hx_index) {
            case 0:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = ca.BEGIN_BITMAP_FILL;
              p = h;
              p = p.buffer.o[p.oPos];
              break;
            case 1:
              p = null;
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = m;
              break;
            case 3:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = ca.BEGIN_SHADER_FILL;
              p = h;
              m = p.buffer.o[p.oPos];
              p = null;
              if (null != m)
                for (var x = 0, q = m.inputCount; x < q; ) {
                  var G = x++;
                  if ('bitmap' == m.inputRefs[G].name) {
                    p = m.inputs[G];
                    break;
                  }
                }
              break;
            case 8:
              if (null != p) {
                switch (h.prev._hx_index) {
                  case 0:
                    h.oPos += 2;
                    h.bPos += 2;
                    break;
                  case 1:
                    h.iPos += 1;
                    h.fPos += 1;
                    break;
                  case 2:
                    h.oPos += 4;
                    h.iiPos += 2;
                    h.ffPos += 1;
                    h.fPos += 1;
                    break;
                  case 3:
                    h.oPos += 1;
                    break;
                  case 4:
                    h.fPos += 6;
                    break;
                  case 5:
                    h.fPos += 4;
                    break;
                  case 6:
                    h.fPos += 3;
                    break;
                  case 7:
                    h.fPos += 4;
                    break;
                  case 8:
                    h.oPos += 3;
                    break;
                  case 9:
                    h.fPos += 4;
                    break;
                  case 10:
                    h.fPos += 5;
                    h.oPos += 1;
                    break;
                  case 12:
                    h.oPos += 4;
                    break;
                  case 14:
                    h.oPos += 2;
                    h.bPos += 2;
                    break;
                  case 15:
                    h.oPos += 4;
                    h.iiPos += 2;
                    h.ffPos += 1;
                    h.fPos += 1;
                    break;
                  case 16:
                    h.oPos += 4;
                    h.iPos += 1;
                    h.fPos += 2;
                    h.bPos += 1;
                    break;
                  case 17:
                    h.fPos += 2;
                    break;
                  case 18:
                    h.fPos += 2;
                    break;
                  case 19:
                    h.oPos += 1;
                    break;
                  case 20:
                    h.oPos += 1;
                }
                h.prev = ca.DRAW_QUADS;
                q = h;
                m = q.buffer.o[q.oPos];
                x = q.buffer.o[q.oPos + 1];
                q = q.buffer.o[q.oPos + 2];
                G = null != x;
                var z = !1,
                  l = !1,
                  w = G ? x.get_length() : Math.floor(m.get_length() / 4);
                if (0 == w) return;
                null != q &&
                  (q.get_length() >= 6 * w
                    ? (l = z = !0)
                    : q.get_length() >= 4 * w
                      ? (z = !0)
                      : q.get_length() >= 2 * w && (l = !0));
                null == a.__quadBuffer
                  ? (a.__quadBuffer = new zg(b, di.QUADS, w, 4))
                  : a.__quadBuffer.resize(c + w, 4);
                for (
                  var D,
                    F,
                    B,
                    r,
                    u,
                    H,
                    C,
                    ba,
                    ta,
                    M,
                    I,
                    ra,
                    oa,
                    y,
                    N = a.__quadBuffer.vertexBufferData,
                    ka = p.width,
                    Y = p.height,
                    A = 0,
                    Ea = w;
                  A < Ea;

                )
                  ((r = A++),
                    (D = 16 * (c + r)),
                    (F = G ? 4 * x.get(r) : 4 * r),
                    0 > F ||
                      (k.setTo(
                        m.get(F),
                        m.get(F + 1),
                        m.get(F + 2),
                        m.get(F + 3),
                      ),
                      (F = k.width),
                      (B = k.height),
                      0 >= F ||
                        0 >= B ||
                        (z && l
                          ? ((r *= 6),
                            g.setTo(
                              q.get(r),
                              q.get(r + 1),
                              q.get(r + 2),
                              q.get(r + 3),
                              q.get(r + 4),
                              q.get(r + 5),
                            ))
                          : z
                            ? ((r *= 4),
                              g.setTo(
                                q.get(r),
                                q.get(r + 1),
                                q.get(r + 2),
                                q.get(r + 3),
                                k.x,
                                k.y,
                              ))
                            : l
                              ? ((r *= 2),
                                (g.tx = q.get(r)),
                                (g.ty = q.get(r + 1)))
                              : ((g.tx = k.x), (g.ty = k.y)),
                        (r = k.x / ka),
                        (u = k.y / Y),
                        (H = k.get_right() / ka),
                        (C = k.get_bottom() / Y),
                        (ba = 0 * g.a + 0 * g.c + g.tx),
                        (ta = 0 * g.b + 0 * g.d + g.ty),
                        (M = F * g.a + 0 * g.c + g.tx),
                        (I = F * g.b + 0 * g.d + g.ty),
                        (ra = 0 * g.a + B * g.c + g.tx),
                        (oa = 0 * g.b + B * g.d + g.ty),
                        (y = F * g.a + B * g.c + g.tx),
                        (F = F * g.b + B * g.d + g.ty),
                        (N[D] = ba),
                        (N[D + 1] = ta),
                        (N[D + 2] = r),
                        (N[D + 3] = u),
                        (N[D + 4] = M),
                        (N[D + 4 + 1] = I),
                        (N[D + 4 + 2] = H),
                        (N[D + 4 + 3] = u),
                        (N[D + 8] = ra),
                        (N[D + 8 + 1] = oa),
                        (N[D + 8 + 2] = r),
                        (N[D + 8 + 3] = C),
                        (N[D + 12] = y),
                        (N[D + 12 + 1] = F),
                        (N[D + 12 + 2] = H),
                        (N[D + 12 + 3] = C))));
                c += w;
              }
              break;
            case 12:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = ca.DRAW_TRIANGLES;
              q = h;
              m = q.buffer.o[q.oPos];
              x = q.buffer.o[q.oPos + 1];
              q = q.buffer.o[q.oPos + 2];
              G = null != x;
              w = Math.floor(m.get_length() / 2);
              z = G ? x.get_length() : w;
              D = (w = (l = null != q) && q.get_length() >= 3 * w) ? 4 : 2;
              N = w ? 3 : 2;
              ka = D + 2;
              Y = w ? f : d;
              Lb.resizeVertexBuffer(a, w, Y + z * ka);
              A = w ? a.__vertexBufferDataUVT : a.__vertexBufferData;
              B = 0;
              for (r = z; B < r; )
                ((u = B++),
                  (Ea = Y + u * ka),
                  (F = G ? 2 * x.get(u) : 2 * u),
                  (u = G ? x.get(u) * N : u * N),
                  w
                    ? ((H = q.get(u + 2)),
                      (A[Ea] = m.get(F) / H),
                      (A[Ea + 1] = m.get(F + 1) / H),
                      (A[Ea + 2] = 0),
                      (A[Ea + 3] = 1 / H))
                    : ((A[Ea] = m.get(F)), (A[Ea + 1] = m.get(F + 1))),
                  (A[Ea + D] = l ? q.get(u) : 0),
                  (A[Ea + D + 1] = l ? q.get(u + 1) : 0));
              w ? (f += z * ka) : (d += z * ka);
              break;
            case 13:
              p = null;
              break;
            default:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = m;
          }
        }
        0 < c && a.__quadBuffer.flushVertexBufferData();
        if (0 < d) {
          c = a.__vertexBuffer;
          if (null == c || d > a.__vertexBufferCount)
            ((c = b.createVertexBuffer(d, 4, 0)),
              (a.__vertexBuffer = c),
              (a.__vertexBufferCount = d));
          c.uploadFromTypedArray(qg.toArrayBufferView(a.__vertexBufferData));
        }
        if (0 < f) {
          c = a.__vertexBufferUVT;
          if (null == c || f > a.__vertexBufferCountUVT)
            ((c = b.createVertexBuffer(f, 6, 0)),
              (a.__vertexBufferUVT = c),
              (a.__vertexBufferCountUVT = f));
          c.uploadFromTypedArray(qg.toArrayBufferView(a.__vertexBufferDataUVT));
        }
        qa.__pool.release(k);
        wa.__pool.release(g);
      };
      Lb.isCompatible = function (a) {
        if (null != a.__owner.__worldScale9Grid) return !1;
        var b = new Fd(a.__commands),
          c = !1,
          d = !1,
          f = !1,
          h = 0;
        for (a = a.__commands.types; h < a.length; ) {
          var k = a[h];
          ++h;
          switch (k._hx_index) {
            case 0:
              d = !0;
              f = c = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 1:
              d = !1;
              c = !0;
              f = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 3:
              c = d = !1;
              f = !0;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 8:
              if (d || f) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 9:
              if (c) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 12:
              if (d || f) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 13:
              f = c = d = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 18:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 19:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            default:
              return (b.destroy(), !1);
          }
        }
        b.destroy();
        return !0;
      };
      Lb.render = function (a, b) {
        if (a.__visible && 0 != a.__commands.get_length())
          if ((null != a.__bitmap && !a.__dirty) || !Lb.isCompatible(a)) {
            b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
            var c = b.__softwareRenderer.__worldTransform;
            b.__softwareRenderer.__worldTransform =
              7 == a.__owner.__drawableType
                ? wa.__identity
                : b.__worldTransform;
            B.render(a, b.__softwareRenderer);
            b.__softwareRenderer.__worldTransform = c;
          } else {
            a.__bitmap = null;
            a.__update(b.__worldTransform, b.__pixelRatio);
            var d = a.__width,
              f = a.__height;
            if (null != a.__bounds && 1 <= d && 1 <= f) {
              (a.__hardwareDirty ||
                (null == a.__quadBuffer &&
                  null == a.__vertexBuffer &&
                  null == a.__vertexBufferUVT)) &&
                Lb.buildBuffer(a, b);
              c = new Fd(a.__commands);
              for (
                var h = b.__context3D,
                  k = wa.__pool.get(),
                  g = null,
                  p = null,
                  t = !1,
                  n = !1,
                  m = null,
                  x = 0,
                  q = 0,
                  G = 0,
                  z = 0,
                  l = 0,
                  w = a.__commands.types;
                l < w.length;

              )
                switch (((d = w[l]), ++l, d._hx_index)) {
                  case 0:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = ca.BEGIN_BITMAP_FILL;
                    n = c;
                    p = n.buffer.o[n.oPos];
                    t = n.buffer.b[n.bPos];
                    n = n.buffer.b[n.bPos + 1];
                    m = g = null;
                    break;
                  case 1:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = ca.BEGIN_FILL;
                    p = c;
                    m =
                      ((p.buffer.i[p.iPos] | 0) & 16777215) |
                      (((255 * p.buffer.f[p.fPos]) | 0) << 24);
                    p = g = null;
                    break;
                  case 3:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = ca.BEGIN_SHADER_FILL;
                    q = c;
                    g = q.buffer.o[q.oPos];
                    q = 0;
                    p =
                      null == g || null == g.shader || null == g.shader.__bitmap
                        ? null
                        : g.shader.__bitmap.input;
                    m = null;
                    break;
                  case 8:
                    if (null != p) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = ca.DRAW_QUADS;
                      var D = c;
                      d = D.buffer.o[D.oPos];
                      D = D.buffer.o[D.oPos + 1];
                      d =
                        null != D
                          ? D.get_length()
                          : Math.floor(d.get_length() / 4);
                      var F = b.__getMatrix(a.__owner.__renderTransform, 1);
                      null == g || Lb.maskRender
                        ? ((D = Lb.maskRender
                            ? b.__maskShader
                            : b.__initGraphicsShader(null)),
                          b.setShader(D),
                          b.applyMatrix(F),
                          b.applyBitmapData(p, n, t),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ),
                          b.updateShader())
                        : ((D = b.__initShaderBuffer(g)),
                          b.__setShaderBuffer(g),
                          b.applyMatrix(F),
                          b.applyBitmapData(p, !1, t),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ));
                      for (F = x + d; x < F; ) {
                        d = Math.min(F - x, h.__quadIndexBufferElements) | 0;
                        if (0 >= d) break;
                        null == g || Lb.maskRender || b.__updateShaderBuffer(q);
                        null != D.__position &&
                          h.setVertexBufferAt(
                            D.__position.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * x,
                            2,
                          );
                        null != D.__textureCoord &&
                          h.setVertexBufferAt(
                            D.__textureCoord.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * x + 2,
                            2,
                          );
                        h.drawTriangles(h.__quadIndexBuffer, 0, 2 * d);
                        q += 4 * d;
                        x += d;
                      }
                      b.__clearShader();
                    }
                    break;
                  case 9:
                    if (null != m) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = ca.DRAW_RECT;
                      var r = c;
                      D = r.buffer.f[r.fPos];
                      F = r.buffer.f[r.fPos + 1];
                      d = r.buffer.f[r.fPos + 2];
                      f = r.buffer.f[r.fPos + 3];
                      r = m;
                      Lb.tempColorTransform.redOffset = (r >>> 16) & 255;
                      Lb.tempColorTransform.greenOffset = (r >>> 8) & 255;
                      Lb.tempColorTransform.blueOffset = r & 255;
                      Lb.tempColorTransform.__combine(
                        a.__owner.__worldColorTransform,
                      );
                      k.identity();
                      k.scale(d, f);
                      k.tx = D;
                      k.ty = F;
                      k.concat(a.__owner.__renderTransform);
                      d = Lb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(d);
                      b.applyMatrix(b.__getMatrix(k, 1));
                      b.applyBitmapData(Lb.blankBitmapData, !0, t);
                      b.applyAlpha(
                        (((r >>> 24) & 255) / 255) * a.__owner.__worldAlpha,
                      );
                      b.applyColorTransform(Lb.tempColorTransform);
                      b.updateShader();
                      D = Lb.blankBitmapData.getVertexBuffer(h);
                      null != d.__position &&
                        h.setVertexBufferAt(d.__position.index, D, 0, 3);
                      null != d.__textureCoord &&
                        h.setVertexBufferAt(d.__textureCoord.index, D, 3, 2);
                      d = Lb.blankBitmapData.getIndexBuffer(h);
                      h.drawTriangles(d);
                      q += 4;
                      b.__clearShader();
                    }
                    break;
                  case 12:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = ca.DRAW_TRIANGLES;
                    f = c;
                    D = f.buffer.o[f.oPos + 1];
                    F = f.buffer.o[f.oPos + 2];
                    d = f.buffer.o[f.oPos + 3];
                    r = null != D;
                    f = Math.floor(f.buffer.o[f.oPos].get_length() / 2);
                    D = r ? D.get_length() : f;
                    r = (F = null != F && F.get_length() >= 3 * f) ? 4 : 2;
                    f = r + 2;
                    var u = F ? a.__vertexBufferUVT : a.__vertexBuffer,
                      H = F ? z : G,
                      C = b.__getMatrix(a.__owner.__renderTransform, 1);
                    if (null == g || Lb.maskRender) {
                      var ba = Lb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(ba);
                      b.applyMatrix(C);
                      b.applyBitmapData(p, n, t);
                      b.applyAlpha(a.__owner.__worldAlpha);
                      b.applyColorTransform(a.__owner.__worldColorTransform);
                      b.updateShader();
                    } else
                      ((ba = b.__initShaderBuffer(g)),
                        b.__setShaderBuffer(g),
                        b.applyMatrix(C),
                        b.applyBitmapData(p, !1, t),
                        b.applyAlpha(1),
                        b.applyColorTransform(null),
                        b.__updateShaderBuffer(q));
                    null != ba.__position &&
                      h.setVertexBufferAt(ba.__position.index, u, H, F ? 4 : 2);
                    null != ba.__textureCoord &&
                      h.setVertexBufferAt(ba.__textureCoord.index, u, H + r, 2);
                    switch (d) {
                      case 0:
                        h.setCulling(0);
                        break;
                      case 1:
                        h.setCulling(3);
                        break;
                      case 2:
                        h.setCulling(1);
                    }
                    h.__drawTriangles(0, D);
                    q += D;
                    F ? (z += f * D) : (G += f * D);
                    switch (d) {
                      case 1:
                      case 2:
                        h.setCulling(0);
                    }
                    b.__clearShader();
                    break;
                  case 13:
                    g = m = p = null;
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                    h.setCulling(3);
                    break;
                  case 18:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = ca.MOVE_TO;
                    break;
                  case 19:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = ca.OVERRIDE_BLEND_MODE;
                    d = c;
                    b.__setBlendMode(d.buffer.o[d.oPos]);
                    break;
                  default:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                }
              wa.__pool.release(k);
            }
            a.__hardwareDirty = !1;
            a.set___dirty(!1);
          }
      };
      Lb.renderMask = function (a, b) {
        Lb.maskRender = !0;
        Lb.render(a, b);
        Lb.maskRender = !1;
      };
      Lb.resizeVertexBuffer = function (a, b, c) {
        var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
          f = null;
        if (null == d) {
          var h = (f = null),
            k = null,
            g = null,
            p = null;
          f = c =
            null != c
              ? new Float32Array(c)
              : null != f
                ? new Float32Array(f)
                : null != h
                  ? new Float32Array(h.__array)
                  : null != k
                    ? new Float32Array(k)
                    : null != g
                      ? null == p
                        ? new Float32Array(g, 0)
                        : new Float32Array(g, 0, p)
                      : null;
        } else
          c > d.length &&
            ((p = g = k = h = f = null),
            (f = c =
              null != c
                ? new Float32Array(c)
                : null != f
                  ? new Float32Array(f)
                  : null != h
                    ? new Float32Array(h.__array)
                    : null != k
                      ? new Float32Array(k)
                      : null != g
                        ? null == p
                          ? new Float32Array(g, 0)
                          : new Float32Array(g, 0, p)
                        : null),
            f.set(d));
        null != f &&
          (b ? (a.__vertexBufferDataUVT = f) : (a.__vertexBufferData = f));
      };
      var Ve = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        dd.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.display._internal.Context3DMaskShader'] = Ve;
      Ve.__name__ = 'openfl.display._internal.Context3DMaskShader';
      Ve.__super__ = dd;
      Ve.prototype = u(dd.prototype, { __class__: Ve });
      var Sd = function () {};
      g['openfl.display._internal.Context3DShape'] = Sd;
      Sd.__name__ = 'openfl.display._internal.Context3DShape';
      Sd.render = function (a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha)) {
          var c = a.__graphics;
          if (null != c) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            Lb.render(c, b);
            if (null != c.__bitmap && c.__visible) {
              var d = b.__context3D,
                f = b.__initDisplayShader(a.__worldShader);
              b.setShader(f);
              b.applyBitmapData(c.__bitmap, !0);
              var h = wa.__pool.get();
              h.scale(1 / c.__bitmapScale, 1 / c.__bitmapScale);
              h.concat(c.__worldTransform);
              b.applyMatrix(b.__getMatrix(h, 1));
              wa.__pool.release(h);
              b.applyAlpha(a.__worldAlpha);
              b.applyColorTransform(a.__worldColorTransform);
              b.updateShader();
              h = c.__bitmap.getVertexBuffer(d);
              null != f.__position &&
                d.setVertexBufferAt(f.__position.index, h, 0, 3);
              null != f.__textureCoord &&
                d.setVertexBufferAt(f.__textureCoord.index, h, 3, 2);
              c = c.__bitmap.getIndexBuffer(d);
              d.drawTriangles(c);
              b.__clearShader();
            }
            b.__popMaskObject(a);
          }
        }
      };
      Sd.renderMask = function (a, b) {
        var c = a.__graphics;
        if (null != c && (Lb.renderMask(c, b), null != c.__bitmap)) {
          a = b.__context3D;
          var d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(c.__bitmap, !0);
          b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
          b.updateShader();
          var f = c.__bitmap.getVertexBuffer(a);
          null != d.__position &&
            a.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            a.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          c = c.__bitmap.getIndexBuffer(a);
          a.drawTriangles(c);
          b.__clearShader();
        }
      };
      var $h = function () {};
      g['openfl.display._internal.Context3DSimpleButton'] = $h;
      $h.__name__ = 'openfl.display._internal.Context3DSimpleButton';
      $h.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      $h.renderDrawableMask = function (a, b) {
        null != a.__currentState && b.__renderDrawableMask(a.__currentState);
      };
      var ie = function () {};
      g['openfl.display._internal.Context3DTextField'] = ie;
      ie.__name__ = 'openfl.display._internal.Context3DTextField';
      ie.render = function (a, b) {
        b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          f = d ? b.textBounds : b.bounds,
          h = a.__graphics,
          k = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == h.__bounds && (h.__bounds = new qa());
          if (0 == a.get_text().length) {
            k = b.bounds.width - 4;
            var g = a.get_defaultTextFormat().align;
            k = 3 == g ? 0 : 4 == g ? k : k / 2;
            switch (g) {
              case 0:
                k += a.get_defaultTextFormat().leftMargin / 2;
                k -= a.get_defaultTextFormat().rightMargin / 2;
                k += a.get_defaultTextFormat().indent / 2;
                k += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                k -= a.get_defaultTextFormat().rightMargin;
            }
            d && ((f.y = b.bounds.y), (f.x = k));
          }
          h.__bounds.copyFrom(f);
        }
        g = c.__pixelRatio;
        h.__update(c.__worldTransform, g);
        if (a.__dirty || h.__softwareDirty) {
          var p = Math.round(h.__width * g),
            t = Math.round(h.__height * g);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            P.context = h.__context;
            h.__canvas.width = p;
            h.__canvas.height = t;
            c.__isDOM &&
              ((h.__canvas.style.width = Math.round(p / g) + 'px'),
              (h.__canvas.style.height = Math.round(t / g) + 'px'));
            p = wa.__pool.get();
            p.scale(g, g);
            p.concat(h.__renderTransform);
            P.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            wa.__pool.release(p);
            null == P.clearRect &&
              (P.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            P.clearRect &&
              P.context.clearRect(0, 0, h.__canvas.width, h.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              d = b.text;
              h.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                P.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                if (b.background) {
                  var n = M.hex(b.backgroundColor & 16777215, 6);
                  P.context.fillStyle = '#' + n;
                  P.context.fill();
                }
                b.border &&
                  ((P.context.lineWidth = 1),
                  (n = M.hex(b.borderColor & 16777215, 6)),
                  (P.context.strokeStyle = '#' + n),
                  P.context.stroke());
              }
              P.context.textBaseline = 'alphabetic';
              P.context.textAlign = 'start';
              c = -a.get_scrollH();
              var m = (k = 0);
              for (n = a.get_scrollV() - 1; m < n; ) {
                var x = m++;
                k -= b.lineHeights.get(x);
              }
              var q;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((t = p.next()), !(t.lineIndex < a.get_scrollV() - 1))) {
                  if (t.lineIndex > b.get_bottomScrollV() - 1) break;
                  var G = '#' + M.hex(t.format.color & 16777215, 6);
                  P.context.font = Db.getFont(t.format);
                  P.context.fillStyle = G;
                  P.context.fillText(
                    d.substring(t.startIndex, t.endIndex),
                    t.offsetX + c - f.x,
                    t.offsetY + t.ascent + k - f.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        t.startIndex <= a.__caretIndex &&
                        t.endIndex >= a.__caretIndex
                      ) {
                        m = q = 0;
                        for (n = a.__caretIndex - t.startIndex; m < n; ) {
                          x = m++;
                          if (t.positions.length <= x) break;
                          q += t.positions[x];
                        }
                        m = 0;
                        n = a.get_scrollV();
                        for (x = t.lineIndex + 1; n < x; ) {
                          var z = n++;
                          m += b.lineHeights.get(z - 1);
                        }
                        P.context.beginPath();
                        n = M.hex(t.format.color & 16777215, 6);
                        P.context.strokeStyle = '#' + n;
                        P.context.moveTo(
                          t.offsetX + q - a.get_scrollH() - f.x,
                          m + 2 - f.y,
                        );
                        P.context.lineWidth = 1;
                        P.context.lineTo(
                          t.offsetX + q - a.get_scrollH() - f.x,
                          m +
                            Db.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            f.y,
                        );
                        P.context.stroke();
                        P.context.closePath();
                      }
                    } else if (
                      (t.startIndex <= a.__caretIndex &&
                        t.endIndex >= a.__caretIndex) ||
                      (t.startIndex <= a.__selectionIndex &&
                        t.endIndex >= a.__selectionIndex) ||
                      (t.startIndex > a.__caretIndex &&
                        t.endIndex < a.__selectionIndex) ||
                      (t.startIndex > a.__selectionIndex &&
                        t.endIndex < a.__caretIndex)
                    )
                      ((q = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (m = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        t.startIndex > q && (q = t.startIndex),
                        t.endIndex < m && (m = t.endIndex),
                        (x = a.getCharBoundaries(q)),
                        m >= t.endIndex
                          ? ((n = a.getCharBoundaries(t.endIndex - 1)),
                            null != n && (n.x += n.width + 2))
                          : (n = a.getCharBoundaries(m)),
                        null != x &&
                          null != n &&
                          ((P.context.fillStyle = '#000000'),
                          P.context.fillRect(
                            x.x + c - f.x,
                            x.y + k,
                            n.x - x.x,
                            t.height,
                          ),
                          (P.context.fillStyle = '#FFFFFF'),
                          P.context.fillText(
                            d.substring(q, m),
                            c + x.x - f.x,
                            t.offsetY + t.ascent + k,
                          )));
                  t.format.underline &&
                    (P.context.beginPath(),
                    (P.context.strokeStyle = G),
                    (P.context.lineWidth = 1),
                    (G = t.offsetX + c - f.x),
                    (q =
                      Math.ceil(t.offsetY + k + t.ascent - f.y) +
                      Math.floor(0.185 * t.ascent) +
                      0.5),
                    P.context.moveTo(G, q),
                    P.context.lineTo(G + t.width, q),
                    P.context.stroke(),
                    P.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? P.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                  : P.context.rect(0, 0, f.width, f.height),
                  b.background &&
                    ((n = M.hex(b.backgroundColor & 16777215, 6)),
                    (P.context.fillStyle = '#' + n),
                    P.context.fill()),
                  b.border &&
                    ((P.context.lineWidth = 1),
                    (P.context.lineCap = 'square'),
                    (n = M.hex(b.borderColor & 16777215, 6)),
                    (P.context.strokeStyle = '#' + n),
                    P.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : k);
                m = k = 0;
                for (n = a.get_scrollV() - 1; m < n; )
                  ((x = m++), (k += b.lineHeights.get(x)));
                P.context.beginPath();
                n = M.hex(a.get_defaultTextFormat().color & 16777215, 6);
                P.context.strokeStyle = '#' + n;
                P.context.moveTo(c + 2.5, k + 2.5);
                P.context.lineWidth = 1;
                P.context.lineTo(
                  c + 2.5,
                  k + Db.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                P.context.stroke();
                P.context.closePath();
              }
            }
            h.__bitmap = Wb.fromCanvas(a.__graphics.__canvas);
            h.__bitmapScale = g;
            h.__visible = !0;
            a.__dirty = !1;
            h.__softwareDirty = !1;
            h.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      ie.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            (ie.render(a, b),
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            ))
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = qa.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              qa.__pool.release(d);
            }
            null != a.__graphics && Sd.render(a, b);
          }
        } else nd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      ie.renderDrawableMask = function (a, b) {
        ie.renderMask(a, b);
        We.renderDrawableMask(a, b);
      };
      ie.renderMask = function (a, b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          f = d ? b.textBounds : b.bounds,
          h = a.__graphics,
          k = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == h.__bounds && (h.__bounds = new qa());
          if (0 == a.get_text().length) {
            k = b.bounds.width - 4;
            var g = a.get_defaultTextFormat().align;
            k = 3 == g ? 0 : 4 == g ? k : k / 2;
            switch (g) {
              case 0:
                k += a.get_defaultTextFormat().leftMargin / 2;
                k -= a.get_defaultTextFormat().rightMargin / 2;
                k += a.get_defaultTextFormat().indent / 2;
                k += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                k -= a.get_defaultTextFormat().rightMargin;
            }
            d && ((f.y = b.bounds.y), (f.x = k));
          }
          h.__bounds.copyFrom(f);
        }
        g = c.__pixelRatio;
        h.__update(c.__worldTransform, g);
        if (a.__dirty || h.__softwareDirty) {
          var p = Math.round(h.__width * g),
            t = Math.round(h.__height * g);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            P.context = h.__context;
            h.__canvas.width = p;
            h.__canvas.height = t;
            c.__isDOM &&
              ((h.__canvas.style.width = Math.round(p / g) + 'px'),
              (h.__canvas.style.height = Math.round(t / g) + 'px'));
            p = wa.__pool.get();
            p.scale(g, g);
            p.concat(h.__renderTransform);
            P.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            wa.__pool.release(p);
            null == P.clearRect &&
              (P.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            P.clearRect &&
              P.context.clearRect(0, 0, h.__canvas.width, h.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              d = b.text;
              h.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                P.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                if (b.background) {
                  var n = M.hex(b.backgroundColor & 16777215, 6);
                  P.context.fillStyle = '#' + n;
                  P.context.fill();
                }
                b.border &&
                  ((P.context.lineWidth = 1),
                  (n = M.hex(b.borderColor & 16777215, 6)),
                  (P.context.strokeStyle = '#' + n),
                  P.context.stroke());
              }
              P.context.textBaseline = 'alphabetic';
              P.context.textAlign = 'start';
              c = -a.get_scrollH();
              var m = (k = 0);
              for (n = a.get_scrollV() - 1; m < n; ) {
                var x = m++;
                k -= b.lineHeights.get(x);
              }
              var q;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((t = p.next()), !(t.lineIndex < a.get_scrollV() - 1))) {
                  if (t.lineIndex > b.get_bottomScrollV() - 1) break;
                  var G = '#' + M.hex(t.format.color & 16777215, 6);
                  P.context.font = Db.getFont(t.format);
                  P.context.fillStyle = G;
                  P.context.fillText(
                    d.substring(t.startIndex, t.endIndex),
                    t.offsetX + c - f.x,
                    t.offsetY + t.ascent + k - f.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        t.startIndex <= a.__caretIndex &&
                        t.endIndex >= a.__caretIndex
                      ) {
                        m = q = 0;
                        for (n = a.__caretIndex - t.startIndex; m < n; ) {
                          x = m++;
                          if (t.positions.length <= x) break;
                          q += t.positions[x];
                        }
                        m = 0;
                        n = a.get_scrollV();
                        for (x = t.lineIndex + 1; n < x; ) {
                          var z = n++;
                          m += b.lineHeights.get(z - 1);
                        }
                        P.context.beginPath();
                        n = M.hex(t.format.color & 16777215, 6);
                        P.context.strokeStyle = '#' + n;
                        P.context.moveTo(
                          t.offsetX + q - a.get_scrollH() - f.x,
                          m + 2 - f.y,
                        );
                        P.context.lineWidth = 1;
                        P.context.lineTo(
                          t.offsetX + q - a.get_scrollH() - f.x,
                          m +
                            Db.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            f.y,
                        );
                        P.context.stroke();
                        P.context.closePath();
                      }
                    } else if (
                      (t.startIndex <= a.__caretIndex &&
                        t.endIndex >= a.__caretIndex) ||
                      (t.startIndex <= a.__selectionIndex &&
                        t.endIndex >= a.__selectionIndex) ||
                      (t.startIndex > a.__caretIndex &&
                        t.endIndex < a.__selectionIndex) ||
                      (t.startIndex > a.__selectionIndex &&
                        t.endIndex < a.__caretIndex)
                    )
                      ((q = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (m = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        t.startIndex > q && (q = t.startIndex),
                        t.endIndex < m && (m = t.endIndex),
                        (x = a.getCharBoundaries(q)),
                        m >= t.endIndex
                          ? ((n = a.getCharBoundaries(t.endIndex - 1)),
                            null != n && (n.x += n.width + 2))
                          : (n = a.getCharBoundaries(m)),
                        null != x &&
                          null != n &&
                          ((P.context.fillStyle = '#000000'),
                          P.context.fillRect(
                            x.x + c - f.x,
                            x.y + k,
                            n.x - x.x,
                            t.height,
                          ),
                          (P.context.fillStyle = '#FFFFFF'),
                          P.context.fillText(
                            d.substring(q, m),
                            c + x.x - f.x,
                            t.offsetY + t.ascent + k,
                          )));
                  t.format.underline &&
                    (P.context.beginPath(),
                    (P.context.strokeStyle = G),
                    (P.context.lineWidth = 1),
                    (G = t.offsetX + c - f.x),
                    (q =
                      Math.ceil(t.offsetY + k + t.ascent - f.y) +
                      Math.floor(0.185 * t.ascent) +
                      0.5),
                    P.context.moveTo(G, q),
                    P.context.lineTo(G + t.width, q),
                    P.context.stroke(),
                    P.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? P.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                  : P.context.rect(0, 0, f.width, f.height),
                  b.background &&
                    ((n = M.hex(b.backgroundColor & 16777215, 6)),
                    (P.context.fillStyle = '#' + n),
                    P.context.fill()),
                  b.border &&
                    ((P.context.lineWidth = 1),
                    (P.context.lineCap = 'square'),
                    (n = M.hex(b.borderColor & 16777215, 6)),
                    (P.context.strokeStyle = '#' + n),
                    P.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : k);
                m = k = 0;
                for (n = a.get_scrollV() - 1; m < n; )
                  ((x = m++), (k += b.lineHeights.get(x)));
                P.context.beginPath();
                n = M.hex(a.get_defaultTextFormat().color & 16777215, 6);
                P.context.strokeStyle = '#' + n;
                P.context.moveTo(c + 2.5, k + 2.5);
                P.context.lineWidth = 1;
                P.context.lineTo(
                  c + 2.5,
                  k + Db.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                P.context.stroke();
                P.context.closePath();
              }
            }
            h.__bitmap = Wb.fromCanvas(a.__graphics.__canvas);
            h.__bitmapScale = g;
            h.__visible = !0;
            a.__dirty = !1;
            h.__softwareDirty = !1;
            h.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      var T = function () {};
      g['openfl.display._internal.Context3DTilemap'] = T;
      T.__name__ = 'openfl.display._internal.Context3DTilemap';
      T.buildBuffer = function (a, b) {
        if (
          !a.__renderable ||
          0 == a.__group.__tiles.length ||
          0 >= a.__worldAlpha
        )
          a.__group.__dirty = !1;
        else {
          T.numTiles = 0;
          T.vertexBufferData =
            null != a.__buffer ? a.__buffer.vertexBufferData : null;
          T.vertexDataPosition = 0;
          var c = qa.__pool.get(),
            d = wa.__pool.get(),
            f = wa.__pool.get();
          T.dataPerVertex = 4;
          a.tileAlphaEnabled && T.dataPerVertex++;
          a.tileColorTransformEnabled && (T.dataPerVertex += 8);
          T.buildBufferTileContainer(
            a,
            a.__group,
            b,
            f,
            a.__tileset,
            a.tileAlphaEnabled,
            a.__worldAlpha,
            a.tileColorTransformEnabled,
            a.__worldColorTransform,
            null,
            c,
            d,
          );
          a.__buffer.flushVertexBufferData();
          qa.__pool.release(c);
          wa.__pool.release(d);
          wa.__pool.release(f);
        }
      };
      T.buildBufferTileContainer = function (
        a,
        b,
        c,
        d,
        f,
        h,
        k,
        g,
        p,
        t,
        n,
        m,
        x,
      ) {
        null == x && (x = !0);
        var v = wa.__pool.get(),
          q = c.__roundPixels,
          G = b.__tiles;
        x && T.resizeBuffer(a, T.numTiles + T.getRecursiveLength(b));
        x = null;
        for (
          var z, l, w, D, F, B, r, u, H, C, ba, ta = h ? 5 : 4, M = 0;
          M < G.length;

        ) {
          D = G[M];
          ++M;
          v.setTo(1, 0, 0, 1, -D.get_originX(), -D.get_originY());
          v.concat(D.get_matrix());
          v.concat(d);
          q && ((v.tx = Math.round(v.tx)), (v.ty = Math.round(v.ty)));
          var I = null != D.get_tileset() ? D.get_tileset() : f;
          var ra = D.get_alpha() * k;
          var N = D.get_visible();
          D.__dirty = !1;
          if (N && !(0 >= ra))
            if (
              (g &&
                (null != D.get_colorTransform()
                  ? null == p
                    ? (x = D.get_colorTransform())
                    : (null == T.cacheColorTransform &&
                        (T.cacheColorTransform = new Hb()),
                      (x = T.cacheColorTransform),
                      (x.redMultiplier =
                        p.redMultiplier * D.get_colorTransform().redMultiplier),
                      (x.greenMultiplier =
                        p.greenMultiplier *
                        D.get_colorTransform().greenMultiplier),
                      (x.blueMultiplier =
                        p.blueMultiplier *
                        D.get_colorTransform().blueMultiplier),
                      (x.alphaMultiplier =
                        p.alphaMultiplier *
                        D.get_colorTransform().alphaMultiplier),
                      (x.redOffset =
                        p.redOffset + D.get_colorTransform().redOffset),
                      (x.greenOffset =
                        p.greenOffset + D.get_colorTransform().greenOffset),
                      (x.blueOffset =
                        p.blueOffset + D.get_colorTransform().blueOffset),
                      (x.alphaOffset =
                        p.alphaOffset + D.get_colorTransform().alphaOffset))
                  : (x = p)),
              h || (ra = 1),
              0 < D.__length)
            )
              T.buildBufferTileContainer(
                a,
                D,
                c,
                v,
                I,
                h,
                ra,
                g,
                x,
                t,
                n,
                m,
                !1,
              );
            else if (
              null != I &&
              ((N = D.get_id()), (z = I.__bitmapData), null != z)
            ) {
              if (-1 == N) {
                l = D.__rect;
                if (null == l || 0 >= l.width || 0 >= l.height) continue;
                I = l.x / z.width;
                D = l.y / z.height;
                N = l.get_right() / z.width;
                F = l.get_bottom() / z.height;
              } else {
                z = I.__data[N];
                if (null == z) continue;
                n.setTo(z.x, z.y, z.width, z.height);
                l = n;
                I = z.__uvX;
                D = z.__uvY;
                N = z.__uvWidth;
                F = z.__uvHeight;
              }
              z = l.width;
              w = l.height;
              l = 0 * v.a + 0 * v.c + v.tx;
              B = 0 * v.b + 0 * v.d + v.ty;
              r = z * v.a + 0 * v.c + v.tx;
              u = z * v.b + 0 * v.d + v.ty;
              H = 0 * v.a + w * v.c + v.tx;
              C = 0 * v.b + w * v.d + v.ty;
              ba = z * v.a + w * v.c + v.tx;
              w = z * v.b + w * v.d + v.ty;
              z = T.vertexDataPosition;
              T.vertexBufferData[z] = l;
              T.vertexBufferData[z + 1] = B;
              T.vertexBufferData[z + 2] = I;
              T.vertexBufferData[z + 3] = D;
              T.vertexBufferData[z + T.dataPerVertex] = r;
              T.vertexBufferData[z + T.dataPerVertex + 1] = u;
              T.vertexBufferData[z + T.dataPerVertex + 2] = N;
              T.vertexBufferData[z + T.dataPerVertex + 3] = D;
              T.vertexBufferData[z + 2 * T.dataPerVertex] = H;
              T.vertexBufferData[z + 2 * T.dataPerVertex + 1] = C;
              T.vertexBufferData[z + 2 * T.dataPerVertex + 2] = I;
              T.vertexBufferData[z + 2 * T.dataPerVertex + 3] = F;
              T.vertexBufferData[z + 3 * T.dataPerVertex] = ba;
              T.vertexBufferData[z + 3 * T.dataPerVertex + 1] = w;
              T.vertexBufferData[z + 3 * T.dataPerVertex + 2] = N;
              T.vertexBufferData[z + 3 * T.dataPerVertex + 3] = F;
              h &&
                ((T.vertexBufferData[z + 0 * T.dataPerVertex + 4] = ra),
                (T.vertexBufferData[z + T.dataPerVertex + 4] = ra),
                (T.vertexBufferData[z + 2 * T.dataPerVertex + 4] = ra),
                (T.vertexBufferData[z + 3 * T.dataPerVertex + 4] = ra));
              if (g)
                if (null != x)
                  for (ra = 0; 4 > ra; )
                    ((I = ra++),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta] =
                        x.redMultiplier),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 1] =
                        x.greenMultiplier),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 2] =
                        x.blueMultiplier),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 3] =
                        x.alphaMultiplier),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 4] =
                        x.redOffset),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 5] =
                        x.greenOffset),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 6] =
                        x.blueOffset),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 7] =
                        x.alphaOffset));
                else
                  for (ra = 0; 4 > ra; )
                    ((I = ra++),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta] = 1),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 1] =
                        1),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 2] =
                        1),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 3] =
                        1),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 4] =
                        0),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 5] =
                        0),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 6] =
                        0),
                      (T.vertexBufferData[z + T.dataPerVertex * I + ta + 7] =
                        0));
              T.vertexDataPosition += 4 * T.dataPerVertex;
            }
        }
        b.__dirty = !1;
        wa.__pool.release(v);
      };
      T.flush = function (a, b, c) {
        null == T.currentShader && (T.currentShader = b.__defaultDisplayShader);
        if (
          T.bufferPosition > T.lastFlushedPosition &&
          null != T.currentBitmapData &&
          null != T.currentShader
        ) {
          var d = b.__initDisplayShader(T.currentShader);
          b.setShader(d);
          b.applyBitmapData(T.currentBitmapData, a.smoothing);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          a.tileAlphaEnabled ? b.useAlphaArray() : b.applyAlpha(a.__worldAlpha);
          a.tileBlendModeEnabled && b.__setBlendMode(c);
          a.tileColorTransformEnabled
            ? (b.applyHasColorTransform(!0), b.useColorTransformArray())
            : b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          c = a.__buffer.vertexBuffer;
          for (
            var f = T.lastFlushedPosition * T.dataPerVertex * 4, h;
            T.lastFlushedPosition < T.bufferPosition;

          ) {
            h =
              Math.min(
                T.bufferPosition - T.lastFlushedPosition,
                T.context.__quadIndexBufferElements,
              ) | 0;
            if (0 >= h) break;
            null != d.__position &&
              T.context.setVertexBufferAt(d.__position.index, c, f, 2);
            null != d.__textureCoord &&
              T.context.setVertexBufferAt(d.__textureCoord.index, c, f + 2, 2);
            a.tileAlphaEnabled &&
              null != d.__alpha &&
              T.context.setVertexBufferAt(d.__alpha.index, c, f + 4, 1);
            if (a.tileColorTransformEnabled) {
              var k = a.tileAlphaEnabled ? 5 : 4;
              null != d.__colorMultiplier &&
                T.context.setVertexBufferAt(
                  d.__colorMultiplier.index,
                  c,
                  f + k,
                  4,
                );
              null != d.__colorOffset &&
                T.context.setVertexBufferAt(
                  d.__colorOffset.index,
                  c,
                  f + k + 4,
                  4,
                );
            }
            T.context.drawTriangles(T.context.__quadIndexBuffer, 0, 2 * h);
            T.lastFlushedPosition += h;
          }
          b.__clearShader();
        }
        T.lastUsedBitmapData = T.currentBitmapData;
        T.lastUsedShader = T.currentShader;
      };
      T.getRecursiveLength = function (a) {
        a = a.__tiles;
        for (var b = 0, c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          0 < d.__length ? (b += T.getRecursiveLength(d)) : ++b;
        }
        return b;
      };
      T.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          ((T.context = b.__context3D), T.buildBuffer(a, b), 0 != T.numTiles)
        ) {
          T.bufferPosition = 0;
          T.lastFlushedPosition = 0;
          T.lastUsedBitmapData = null;
          T.lastUsedShader = null;
          T.currentBitmapData = null;
          T.currentShader = null;
          T.currentBlendMode = a.__worldBlendMode;
          a.tileBlendModeEnabled || b.__setBlendMode(T.currentBlendMode);
          b.__pushMaskObject(a);
          var c = qa.__pool.get();
          c.setTo(0, 0, a.__width, a.__height);
          b.__pushMaskRect(c, a.__renderTransform);
          T.renderTileContainer(
            a,
            b,
            a.__group,
            a.__worldShader,
            a.__tileset,
            a.__worldAlpha,
            a.tileBlendModeEnabled,
            T.currentBlendMode,
            null,
          );
          T.flush(a, b, T.currentBlendMode);
          b.__popMaskRect();
          b.__popMaskObject(a);
          qa.__pool.release(c);
        }
      };
      T.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = qa.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              qa.__pool.release(d);
            }
            null != a.__graphics && Sd.render(a, b);
          }
          T.render(a, b);
        } else nd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      T.renderDrawableMask = function (a, b) {
        if (null != a.opaqueBackground || null != a.__graphics)
          (null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height(),
            null != a.__graphics && Sd.renderMask(a, b));
        T.renderMask(a, b);
      };
      T.renderTileContainer = function (a, b, c, d, f, h, k, g, p) {
        c = c.__tiles;
        for (var t, n, m, v = null, x, q = 0; q < c.length; ) {
          var z = c[q];
          ++q;
          t = null != z.get_tileset() ? z.get_tileset() : f;
          n = z.get_alpha() * h;
          if ((m = z.get_visible()) && !(0 >= n))
            if (
              ((m = null != z.get_shader() ? z.get_shader() : d),
              k && (v = null != z.__blendMode ? z.__blendMode : g),
              0 < z.__length)
            )
              T.renderTileContainer(a, b, z, m, t, n, k, v, p);
            else if (
              null != t &&
              ((x = z.get_id()), (n = t.__bitmapData), null != n)
            ) {
              if (-1 == x) {
                if (
                  ((t = z.__rect), null == t || 0 >= t.width || 0 >= t.height)
                )
                  continue;
              } else if (((t = t.__data[x]), null == t)) continue;
              (m != T.currentShader ||
                (n != T.currentBitmapData && null != T.currentBitmapData) ||
                T.currentBlendMode != v) &&
                T.flush(a, b, T.currentBlendMode);
              T.currentBitmapData = n;
              T.currentShader = m;
              T.currentBlendMode = v;
              T.bufferPosition++;
            }
        }
      };
      T.renderMask = function (a, b) {};
      T.resizeBuffer = function (a, b) {
        T.numTiles = b;
        null == a.__buffer
          ? (a.__buffer = new zg(
              T.context,
              di.QUADS,
              T.numTiles,
              T.dataPerVertex,
            ))
          : a.__buffer.resize(T.numTiles, T.dataPerVertex);
        T.vertexBufferData = a.__buffer.vertexBufferData;
      };
      var od = function () {};
      g['openfl.display._internal.Context3DVideo'] = od;
      od.__name__ = 'openfl.display._internal.Context3DVideo';
      od.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__stream &&
          null != a.__stream.__video
        ) {
          var c = b.__context3D,
            d = c.gl;
          if (null != a.__getTexture(c)) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var f = b.__initDisplayShader(a.__worldShader);
            b.setShader(f);
            b.applyBitmapData(null, !0, !1);
            b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
            b.applyAlpha(a.__worldAlpha);
            b.applyColorTransform(a.__worldColorTransform);
            null != f.__textureSize &&
              ((od.__textureSizeValue[0] =
                null != a.__stream ? a.__stream.__video.videoWidth : 0),
              (od.__textureSizeValue[1] =
                null != a.__stream ? a.__stream.__video.videoHeight : 0),
              (f.__textureSize.value = od.__textureSizeValue));
            b.updateShader();
            c.setTextureAt(0, a.__getTexture(c));
            c.__flushGLTextures();
            d.uniform1i(f.__texture.index, 0);
            a.smoothing
              ? (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.LINEAR),
                d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.LINEAR))
              : (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST),
                d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST));
            d = a.__getVertexBuffer(c);
            null != f.__position &&
              c.setVertexBufferAt(f.__position.index, d, 0, 3);
            null != f.__textureCoord &&
              c.setVertexBufferAt(f.__textureCoord.index, d, 3, 2);
            f = a.__getIndexBuffer(c);
            c.drawTriangles(f);
            b.__clearShader();
            b.__popMaskObject(a);
          }
        }
      };
      od.renderDrawable = function (a, b) {
        od.render(a, b);
        b.__renderEvent(a);
      };
      od.renderDrawableMask = function (a, b) {
        od.renderMask(a, b);
      };
      od.renderMask = function (a, b) {
        if (null != a.__stream && null != a.__stream.__video) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(Ve.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          b.updateShader();
          var f = a.__getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          a = a.__getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var Nb = function () {};
      g['openfl.display._internal.DOMBitmap'] = Nb;
      Nb.__name__ = 'openfl.display._internal.DOMBitmap';
      Nb.clear = function (a, b) {
        Tc.clear(a, b);
        null != a.__image &&
          (b.element.removeChild(a.__image),
          (a.__image = null),
          (a.__style = null));
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Nb.renderCanvas = function (a, b) {
        null != a.__image &&
          (b.element.removeChild(a.__image), (a.__image = null));
        null == a.__canvas &&
          ((a.__canvas = window.document.createElement('canvas')),
          (a.__context = a.__canvas.getContext('2d')),
          (a.__imageVersion = -1),
          (b.__allowSmoothing && a.smoothing) ||
            (a.__context.imageSmoothingEnabled = !1),
          b.__initializeElement(a, a.__canvas));
        a.__imageVersion != a.__bitmapData.image.version &&
          (Ha.convertToCanvas(a.__bitmapData.image),
          (a.__canvas.width = a.__bitmapData.width + 1),
          (a.__canvas.width = a.__bitmapData.width),
          (a.__canvas.height = a.__bitmapData.height),
          a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0),
          (a.__imageVersion = a.__bitmapData.image.version));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      Nb.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var c = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != c
          ) {
            B.render(c, b.__canvasRenderer);
            if (
              c.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != c.__canvas
            )
              null != c.__canvas
                ? a.__canvas != c.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = c.__canvas),
                  (a.__context = c.__context),
                  b.__initializeElement(a, a.__canvas))
                : De.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty &&
                ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a);
            }
          } else De.clear(a, b);
          null != a.stage &&
          a.__worldVisible &&
          a.__renderable &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid &&
          a.__bitmapData.readable
            ? (b.__pushMaskObject(a),
              null != a.__bitmapData.image.buffer.__srcImage
                ? ((d = a.__bitmapData.image.buffer.__srcImage.src),
                  M.startsWith(d, 'data:') || M.startsWith(d, 'blob:')
                    ? Nb.renderCanvas(a, b)
                    : Nb.renderImage(a, b))
                : Nb.renderCanvas(a, b),
              b.__popMaskObject(a))
            : Nb.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    M.startsWith(d, 'data:') || M.startsWith(d, 'blob:')
                      ? Nb.renderCanvas(c, b)
                      : Nb.renderImage(c, b))
                  : Nb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Nb.clear(c, b));
        b.__renderEvent(a);
      };
      Nb.renderDrawableClear = function (a, b) {
        Nb.clear(a, b);
      };
      Nb.renderImage = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas), (a.__canvas = null));
        null == a.__image &&
          ((a.__image = window.document.createElement('img')),
          (a.__image.crossOrigin = 'Anonymous'),
          (a.__image.src = a.__bitmapData.image.buffer.__srcImage.src),
          b.__initializeElement(a, a.__image));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      var Tc = function () {};
      g['openfl.display._internal.DOMDisplayObject'] = Tc;
      Tc.__name__ = 'openfl.display._internal.DOMDisplayObject';
      Tc.clear = function (a, b) {
        null != a.__cacheBitmap && Nb.clear(a.__cacheBitmap, b);
        De.clear(a, b);
      };
      Tc.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var c = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != c
          ) {
            B.render(c, b.__canvasRenderer);
            if (
              c.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != c.__canvas
            )
              null != c.__canvas
                ? a.__canvas != c.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = c.__canvas),
                  (a.__context = c.__context),
                  b.__initializeElement(a, a.__canvas))
                : De.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty &&
                ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a);
            }
          } else De.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    M.startsWith(d, 'data:') || M.startsWith(d, 'blob:')
                      ? Nb.renderCanvas(c, b)
                      : Nb.renderImage(c, b))
                  : Nb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Nb.clear(c, b));
        b.__renderEvent(a);
      };
      Tc.renderDrawableClear = function (a, b) {
        Tc.clear(a, b);
      };
      var Mh = function () {};
      g['openfl.display._internal.DOMDisplayObjectContainer'] = Mh;
      Mh.__name__ = 'openfl.display._internal.DOMDisplayObjectContainer';
      Mh.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && b.__renderDrawable(d);
        }
        for (c = a.__removedChildren.iterator(); c.hasNext(); )
          ((d = c.next()), null == d.stage && d.__cleanup());
        a.__removedChildren.set_length(0);
        Tc.renderDrawable(a, b);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f), (f.__renderDirty = !1));
            a.__renderDirty = !1;
          } else
            for (c = 0, d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f));
          b.__popMaskObject(a);
        } else {
          c = 0;
          for (d = a.__children; c < d.length; ) {
            var f = d[c];
            ++c;
            b.__renderDrawableClear(f);
          }
          De.clear(a, b);
          a.__cacheBitmap.stage = a.stage;
        }
      };
      Mh.renderDrawableClear = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && b.__renderDrawableClear(d);
        }
        for (c = a.__removedChildren.iterator(); c.hasNext(); )
          ((d = c.next()), null == d.stage && d.__cleanup());
        a.__removedChildren.set_length(0);
        c = 0;
        for (d = a.__children; c < d.length; ) {
          var f = d[c];
          ++c;
          b.__renderDrawableClear(f);
        }
        Tc.clear(a, b);
      };
      var De = function () {};
      g['openfl.display._internal.DOMShape'] = De;
      De.__name__ = 'openfl.display._internal.DOMShape';
      De.clear = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      var Nh = function () {};
      g['openfl.display._internal.DOMSimpleButton'] = Nh;
      Nh.__name__ = 'openfl.display._internal.DOMSimpleButton';
      Nh.renderDrawable = function (a, b) {
        b.__pushMaskObject(a);
        for (var c = a.__previousStates.iterator(); c.hasNext(); ) {
          var d = c.next();
          b.__renderDrawable(d);
        }
        a.__previousStates.set_length(0);
        null != a.__currentState &&
          (a.__currentState.stage != a.stage &&
            a.__currentState.__setStageReference(a.stage),
          b.__renderDrawable(a.__currentState));
        b.__popMaskObject(a);
        b.__renderEvent(a);
      };
      Nh.renderDrawableClear = function (a, b) {
        Tc.renderDrawableClear(a, b);
      };
      var Be = function () {};
      g['openfl.display._internal.DOMTextField'] = Be;
      Be.__name__ = 'openfl.display._internal.DOMTextField';
      Be.clear = function (a, b) {
        Tc.clear(a, b);
        null != a.__div &&
          (b.element.removeChild(a.__div),
          (a.__div = null),
          (a.__style = null));
      };
      Be.renderDrawable = function (a, b) {
        a.__domRender = !0;
        b.__updateCacheBitmap(a, a.__forceCachedBitmapUpdate);
        a.__forceCachedBitmapUpdate = !1;
        a.__domRender = !1;
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          a.__renderedOnCanvasWhileOnDOM &&
            ((a.__renderedOnCanvasWhileOnDOM = !1),
            a.__isHTML &&
              null != a.__htmlText &&
              (a.__updateText(a.__htmlText),
              (a.__dirty = !0),
              (a.__layoutDirty = !0),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty())));
          var c = a.__textEngine;
          if (null != a.stage && a.__worldVisible && a.__renderable) {
            if (a.__dirty || a.__renderTransformChanged || null == a.__div)
              if ('' != c.text || c.background || c.border || 1 == c.type) {
                a.__updateLayout();
                null == a.__div &&
                  ((a.__div = window.document.createElement('div')),
                  b.__initializeElement(a, a.__div),
                  a.__style.setProperty('outline', 'none', null),
                  a.__div.addEventListener(
                    'input',
                    function (b) {
                      b.preventDefault();
                      a.get_htmlText() != a.__div.innerHTML &&
                        (a.set_htmlText(a.__div.innerHTML),
                        (a.__dirty = !1),
                        a.dispatchEvent(
                          new Rd('textInput', !1, !1, a.get_htmlText()),
                        ));
                    },
                    !0,
                  ));
                c.wordWrap
                  ? a.__style.setProperty('word-wrap', 'break-word', null)
                  : a.__style.setProperty('white-space', 'nowrap', null);
                a.__style.setProperty('overflow', 'hidden', null);
                c.selectable
                  ? (a.__style.setProperty('cursor', 'text', null),
                    a.__style.setProperty('-webkit-user-select', 'text', null),
                    a.__style.setProperty('-moz-user-select', 'text', null),
                    a.__style.setProperty('-ms-user-select', 'text', null),
                    a.__style.setProperty('-o-user-select', 'text', null))
                  : a.__style.setProperty('cursor', 'inherit', null);
                a.__div.contentEditable = 1 == c.type;
                var d = a.__style;
                c.background
                  ? d.setProperty(
                      'background-color',
                      '#' + M.hex(c.backgroundColor & 16777215, 6),
                      null,
                    )
                  : d.removeProperty('background-color');
                var f = c.width,
                  h = c.height,
                  k = '';
                a.__isHTML &&
                  a.__updateText(
                    Da.parse(
                      a.__text,
                      a.get_multiline(),
                      a.__styleSheet,
                      a.__textFormat,
                      a.__textEngine.textFormatRanges,
                    ),
                  );
                for (
                  var g = -a.get_scrollH(), p = c.layoutGroups.iterator();
                  p.hasNext();

                ) {
                  var t = p.next();
                  if (!(t.lineIndex < a.get_scrollV() - 1)) {
                    if (t.lineIndex > c.get_bottomScrollV() - 1) break;
                    k += '<div style="';
                    null != t.format.font &&
                      (k += 'font: ' + Db.getFont(t.format) + '; ');
                    null != t.format.color &&
                      (k +=
                        'color: #' +
                        M.hex(t.format.color & 16777215, 6) +
                        '; ');
                    1 == t.format.underline &&
                      (k += 'text-decoration: underline; ');
                    if (null != t.format.align)
                      switch (t.format.align) {
                        case 0:
                          k += 'text-align: center; ';
                          break;
                        case 2:
                          k += 'text-align: justify; ';
                          break;
                        case 4:
                          k += 'text-align: right; ';
                          break;
                        default:
                          k += 'text-align: left; ';
                      }
                    null != t.format.leftMargin &&
                      (k +=
                        'padding-left: ' + 1 * t.format.leftMargin + 'px; ');
                    null != t.format.rightMargin &&
                      (k +=
                        'padding-right: ' + 1 * t.format.rightMargin + 'px; ');
                    null != t.format.indent &&
                      (k += 'text-indent: ' + 1 * t.format.indent + 'px; ');
                    k +=
                      'left: ' +
                      (t.offsetX + g) +
                      'px; top: ' +
                      (t.offsetY + 0 + 3) +
                      'px; vertical-align: top; position: absolute;">';
                    if (null != t.format.url && '' != t.format.url) {
                      var n = 'text-decoration: underline; ';
                      null != t.format.color &&
                        (n +=
                          'color: #' +
                          M.hex(t.format.color & 16777215, 6) +
                          '; ');
                      k +=
                        "<a style='" +
                        n +
                        "' href='" +
                        t.format.url +
                        "' target='" +
                        t.format.target +
                        "'>";
                    }
                    k = a.__isHTML
                      ? k +
                        M.replace(
                          c.text.substring(t.startIndex, t.endIndex),
                          ' ',
                          '&nbsp;',
                        )
                      : k +
                        M.replace(
                          M.htmlEscape(
                            c.text.substring(t.startIndex, t.endIndex),
                          ),
                          ' ',
                          '&nbsp;',
                        );
                    null != t.format.url && '' != t.format.url && (k += '</a>');
                    k += '</div>';
                  }
                }
                c.border
                  ? (d.setProperty(
                      'border',
                      'solid 1px #' + M.hex(c.borderColor & 16777215, 6),
                      null,
                    ),
                    a.__renderTransform.translate(-1, -1),
                    (a.__renderTransformChanged = !0),
                    (a.__transformDirty = !0))
                  : '' != d.border &&
                    (d.removeProperty('border'),
                    (a.__renderTransformChanged = !0));
                d.setProperty('width', f + 'px', null);
                d.setProperty('height', h + 'px', null);
                a.__div.innerHTML = k;
                a.__dirty = !1;
              } else
                null != a.__div &&
                  (b.element.removeChild(a.__div), (a.__div = null));
            null != a.__div &&
              ((c = b.__roundPixels),
              (b.__roundPixels = !0),
              b.__updateClip(a),
              b.__applyStyle(a, !0, !0, !0),
              (b.__roundPixels = c));
          } else Be.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    M.startsWith(d, 'data:') || M.startsWith(d, 'blob:')
                      ? Nb.renderCanvas(c, b)
                      : Nb.renderImage(c, b))
                  : Nb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Nb.clear(c, b));
        b.__renderEvent(a);
      };
      Be.renderDrawableClear = function (a, b) {
        Be.clear(a, b);
      };
      var Ce = function () {};
      g['openfl.display._internal.DOMTilemap'] = Ce;
      Ce.__name__ = 'openfl.display._internal.DOMTilemap';
      Ce.clear = function (a, b) {
        Tc.clear(a, b);
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Ce.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender)
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            0 < a.__group.__tiles.length
          ) {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')),
              b.__initializeElement(a, a.__canvas));
            a.__canvas.width = a.__width;
            a.__canvas.height = a.__height;
            b.__canvasRenderer.context = a.__context;
            var c = a.__renderTransform;
            a.__renderTransform = wa.__identity;
            var d = b.__canvasRenderer;
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable
            ) {
              var f = d.__getAlpha(a.__worldAlpha);
              if (!(0 >= f)) {
                if (
                  null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height()
                ) {
                  d.__setBlendMode(a.__worldBlendMode);
                  d.__pushMaskObject(a);
                  var h = d.context;
                  d.setTransform(a.__renderTransform, h);
                  var k = a.opaqueBackground;
                  h.fillStyle =
                    'rgb(' +
                    ((k >>> 16) & 255) +
                    ',' +
                    ((k >>> 8) & 255) +
                    ',' +
                    (k & 255) +
                    ')';
                  h.fillRect(0, 0, a.get_width(), a.get_height());
                  d.__popMaskObject(a);
                }
                if (
                  null != a.__graphics &&
                  a.__renderable &&
                  ((f = d.__getAlpha(a.__worldAlpha)), !(0 >= f))
                ) {
                  var g = a.__graphics;
                  if (null != g) {
                    B.render(g, d);
                    var p = g.__width,
                      t = g.__height;
                    k = g.__canvas;
                    if (null != k && g.__visible && 1 <= p && 1 <= t) {
                      var n = g.__worldTransform;
                      h = d.context;
                      var m = a.__scrollRect,
                        x = a.__worldScale9Grid;
                      if (null == m || (0 < m.width && 0 < m.height)) {
                        d.__setBlendMode(a.__worldBlendMode);
                        d.__pushMaskObject(a);
                        h.globalAlpha = f;
                        if (null != x && 0 == n.b && 0 == n.c) {
                          var q = d.__pixelRatio;
                          f = wa.__pool.get();
                          f.translate(n.tx, n.ty);
                          d.setTransform(f, h);
                          wa.__pool.release(f);
                          f = g.__bounds;
                          var z = g.__renderTransform.a / g.__bitmapScale,
                            G = g.__renderTransform.d / g.__bitmapScale,
                            l = z * n.a,
                            D = G * n.d;
                          n = Math.max(1, Math.round(x.x * z));
                          g = Math.round(x.y * G);
                          m = Math.max(
                            1,
                            Math.round((f.get_right() - x.get_right()) * z),
                          );
                          var w = Math.round(
                            (f.get_bottom() - x.get_bottom()) * G,
                          );
                          z = Math.round(x.width * z);
                          x = Math.round(x.height * G);
                          G = Math.round(n / q);
                          var F = Math.round(g / q),
                            r = Math.round(m / q);
                          q = Math.round(w / q);
                          l = f.width * l - G - r;
                          f = f.height * D - F - q;
                          d.applySmoothing(h, !1);
                          0 != z && 0 != x
                            ? (h.drawImage(k, 0, 0, n, g, 0, 0, G, F),
                              h.drawImage(k, n, 0, z, g, G, 0, l, F),
                              h.drawImage(k, n + z, 0, m, g, G + l, 0, r, F),
                              h.drawImage(k, 0, g, n, x, 0, F, G, f),
                              h.drawImage(k, n, g, z, x, G, F, l, f),
                              h.drawImage(k, n + z, g, m, x, G + l, F, r, f),
                              h.drawImage(k, 0, g + x, n, w, 0, F + f, G, q),
                              h.drawImage(k, n, g + x, z, w, G, F + f, l, q),
                              h.drawImage(
                                k,
                                n + z,
                                g + x,
                                m,
                                w,
                                G + l,
                                F + f,
                                r,
                                q,
                              ))
                            : 0 == z && 0 != x
                              ? ((t = G + l + r),
                                h.drawImage(k, 0, 0, p, g, 0, 0, t, F),
                                h.drawImage(k, 0, g, p, x, 0, F, t, f),
                                h.drawImage(k, 0, g + x, p, w, 0, F + f, t, q))
                              : 0 == x &&
                                0 != z &&
                                ((p = F + f + q),
                                h.drawImage(k, 0, 0, n, t, 0, 0, G, p),
                                h.drawImage(k, n, 0, z, t, G, 0, l, p),
                                h.drawImage(k, n + z, 0, m, t, G + l, 0, r, p));
                        } else
                          (d.setTransform(n, h), h.drawImage(k, 0, 0, p, t));
                        d.__popMaskObject(a);
                      }
                    }
                  }
                }
              }
            }
            d = b.__canvasRenderer;
            a.__renderable &&
              0 != a.__group.__tiles.length &&
              ((f = d.__getAlpha(a.__worldAlpha)),
              0 >= f ||
                ((h = d.context),
                d.__setBlendMode(a.__worldBlendMode),
                d.__pushMaskObject(a),
                (k = qa.__pool.get()),
                k.setTo(0, 0, a.__width, a.__height),
                d.__pushMaskRect(k, a.__renderTransform),
                (d.__allowSmoothing && a.smoothing) ||
                  (h.imageSmoothingEnabled = !1),
                fe.renderTileContainer(
                  a.__group,
                  d,
                  a.__renderTransform,
                  a.__tileset,
                  d.__allowSmoothing && a.smoothing,
                  a.tileAlphaEnabled,
                  f,
                  a.tileBlendModeEnabled,
                  a.__worldBlendMode,
                  null,
                  null,
                  k,
                ),
                (d.__allowSmoothing && a.smoothing) ||
                  (h.imageSmoothingEnabled = !0),
                d.__popMaskRect(),
                d.__popMaskObject(a),
                qa.__pool.release(k)));
            a.__renderTransform = c;
            b.__canvasRenderer.context = null;
            b.__updateClip(a);
            b.__applyStyle(a, !0, !1, !0);
          } else Ce.clear(a, b);
        else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    M.startsWith(d, 'data:') || M.startsWith(d, 'blob:')
                      ? Nb.renderCanvas(c, b)
                      : Nb.renderImage(c, b))
                  : Nb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Nb.clear(c, b));
        b.__renderEvent(a);
      };
      Ce.renderDrawableClear = function (a, b) {
        Ce.clear(a, b);
      };
      var ge = function () {};
      g['openfl.display._internal.DOMVideo'] = ge;
      ge.__name__ = 'openfl.display._internal.DOMVideo';
      ge.clear = function (a, b) {
        Tc.clear(a, b);
        a.__active &&
          (b.element.removeChild(a.__stream.__video), (a.__active = !1));
      };
      ge.render = function (a, b) {
        null != a.stage &&
        null != a.__stream &&
        a.__worldVisible &&
        a.__renderable
          ? (a.__active ||
              (b.__initializeElement(a, a.__stream.__video),
              (a.__active = !0),
              (a.__dirty = !0)),
            a.__dirty &&
              ((a.__stream.__video.width = a.__width | 0),
              (a.__stream.__video.height = a.__height | 0),
              (a.__dirty = !1)),
            b.__updateClip(a),
            b.__applyStyle(a, !0, !0, !0))
          : ge.clear(a, b);
      };
      ge.renderDrawable = function (a, b) {
        ge.render(a, b);
        b.__renderEvent(a);
      };
      ge.renderDrawableClear = function (a, b) {
        Tc.renderDrawableClear(a, b);
      };
      var Fd = function (a) {
        this.buffer = a;
        this.bPos =
          this.iPos =
          this.fPos =
          this.oPos =
          this.ffPos =
          this.iiPos =
          this.tsPos =
            0;
        this.prev = ca.UNKNOWN;
      };
      g['openfl.display._internal.DrawCommandReader'] = Fd;
      Fd.__name__ = 'openfl.display._internal.DrawCommandReader';
      Fd.prototype = {
        destroy: function () {
          this.buffer = null;
          this.reset();
        },
        reset: function () {
          this.bPos =
            this.iPos =
            this.fPos =
            this.oPos =
            this.ffPos =
            this.iiPos =
            this.tsPos =
              0;
        },
        __class__: Fd,
      };
      var ca = (F['openfl.display._internal.DrawCommandType'] = {
        __ename__: 'openfl.display._internal.DrawCommandType',
        __constructs__: null,
        BEGIN_BITMAP_FILL: {
          _hx_name: 'BEGIN_BITMAP_FILL',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        BEGIN_FILL: {
          _hx_name: 'BEGIN_FILL',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        BEGIN_GRADIENT_FILL: {
          _hx_name: 'BEGIN_GRADIENT_FILL',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        BEGIN_SHADER_FILL: {
          _hx_name: 'BEGIN_SHADER_FILL',
          _hx_index: 3,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        CUBIC_CURVE_TO: {
          _hx_name: 'CUBIC_CURVE_TO',
          _hx_index: 4,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        CURVE_TO: {
          _hx_name: 'CURVE_TO',
          _hx_index: 5,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_CIRCLE: {
          _hx_name: 'DRAW_CIRCLE',
          _hx_index: 6,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_ELLIPSE: {
          _hx_name: 'DRAW_ELLIPSE',
          _hx_index: 7,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_QUADS: {
          _hx_name: 'DRAW_QUADS',
          _hx_index: 8,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_RECT: {
          _hx_name: 'DRAW_RECT',
          _hx_index: 9,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_ROUND_RECT: {
          _hx_name: 'DRAW_ROUND_RECT',
          _hx_index: 10,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_TILES: {
          _hx_name: 'DRAW_TILES',
          _hx_index: 11,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        DRAW_TRIANGLES: {
          _hx_name: 'DRAW_TRIANGLES',
          _hx_index: 12,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        END_FILL: {
          _hx_name: 'END_FILL',
          _hx_index: 13,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_BITMAP_STYLE: {
          _hx_name: 'LINE_BITMAP_STYLE',
          _hx_index: 14,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_GRADIENT_STYLE: {
          _hx_name: 'LINE_GRADIENT_STYLE',
          _hx_index: 15,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_STYLE: {
          _hx_name: 'LINE_STYLE',
          _hx_index: 16,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        LINE_TO: {
          _hx_name: 'LINE_TO',
          _hx_index: 17,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        MOVE_TO: {
          _hx_name: 'MOVE_TO',
          _hx_index: 18,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        OVERRIDE_BLEND_MODE: {
          _hx_name: 'OVERRIDE_BLEND_MODE',
          _hx_index: 19,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        OVERRIDE_MATRIX: {
          _hx_name: 'OVERRIDE_MATRIX',
          _hx_index: 20,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        WINDING_EVEN_ODD: {
          _hx_name: 'WINDING_EVEN_ODD',
          _hx_index: 21,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        WINDING_NON_ZERO: {
          _hx_name: 'WINDING_NON_ZERO',
          _hx_index: 22,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 23,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: q,
        },
      });
      ca.__constructs__ = [
        ca.BEGIN_BITMAP_FILL,
        ca.BEGIN_FILL,
        ca.BEGIN_GRADIENT_FILL,
        ca.BEGIN_SHADER_FILL,
        ca.CUBIC_CURVE_TO,
        ca.CURVE_TO,
        ca.DRAW_CIRCLE,
        ca.DRAW_ELLIPSE,
        ca.DRAW_QUADS,
        ca.DRAW_RECT,
        ca.DRAW_ROUND_RECT,
        ca.DRAW_TILES,
        ca.DRAW_TRIANGLES,
        ca.END_FILL,
        ca.LINE_BITMAP_STYLE,
        ca.LINE_GRADIENT_STYLE,
        ca.LINE_STYLE,
        ca.LINE_TO,
        ca.MOVE_TO,
        ca.OVERRIDE_BLEND_MODE,
        ca.OVERRIDE_MATRIX,
        ca.WINDING_EVEN_ODD,
        ca.WINDING_NON_ZERO,
        ca.UNKNOWN,
      ];
      var $e = function (a, b, c, d, f, h, k) {
        null == k && (k = !1);
        null == h && (h = !1);
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = 5);
        null == a && (a = 0);
        this.wrap = a;
        this.filter = b;
        this.mipfilter = c;
        this.lodBias = d;
        this.ignoreSampler = f;
        this.centroid = h;
        this.textureAlpha = k;
      };
      g['openfl.display._internal.SamplerState'] = $e;
      $e.__name__ = 'openfl.display._internal.SamplerState';
      $e.prototype = {
        clone: function () {
          var a = new $e(
            this.wrap,
            this.filter,
            this.mipfilter,
            this.lodBias,
            this.ignoreSampler,
            this.centroid,
            this.textureAlpha,
          );
          a.mipmapGenerated = this.mipmapGenerated;
          return a;
        },
        copyFrom: function (a) {
          null == a ||
            a.ignoreSampler ||
            ((this.wrap = a.wrap),
            (this.filter = a.filter),
            (this.mipfilter = a.mipfilter),
            (this.lodBias = a.lodBias),
            (this.centroid = a.centroid),
            (this.textureAlpha = a.textureAlpha));
        },
        equals: function (a) {
          return null == a
            ? !1
            : this.wrap == a.wrap &&
                this.filter == a.filter &&
                this.mipfilter == a.mipfilter &&
                this.lodBias == a.lodBias
              ? this.textureAlpha == a.textureAlpha
              : !1;
        },
        __class__: $e,
      };
      var Qh = function () {
        this.inputRefs = [];
        this.inputFilter = [];
        this.inputMipFilter = [];
        this.inputs = [];
        this.inputWrap = [];
        this.overrideIntNames = [];
        this.overrideIntValues = [];
        this.overrideFloatNames = [];
        this.overrideFloatValues = [];
        this.overrideBoolNames = [];
        this.overrideBoolValues = [];
        this.paramLengths = [];
        this.paramPositions = [];
        this.paramRefs_Bool = [];
        this.paramRefs_Float = [];
        this.paramRefs_Int = [];
        this.paramTypes = [];
      };
      g['openfl.display._internal.ShaderBuffer'] = Qh;
      Qh.__name__ = 'openfl.display._internal.ShaderBuffer';
      Qh.prototype = {
        addBoolOverride: function (a, b) {
          this.overrideBoolNames[this.overrideBoolCount] = a;
          this.overrideBoolValues[this.overrideBoolCount] = b;
          this.overrideBoolCount++;
        },
        addFloatOverride: function (a, b) {
          this.overrideFloatNames[this.overrideFloatCount] = a;
          this.overrideFloatValues[this.overrideFloatCount] = b;
          this.overrideFloatCount++;
        },
        clearOverride: function () {
          this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
              0;
        },
        __class__: Qh,
      };
      var ob = function (a, b, c) {
        this.driverInfo = 'OpenGL (Direct blitting)';
        this.backBufferHeight = this.backBufferWidth = 0;
        ma.call(this);
        this.__stage = a;
        this.__contextState = b;
        this.__stage3D = c;
        this.__context = a.window.context;
        this.gl = this.__context.webgl;
        null == this.__contextState && (this.__contextState = new Ag());
        this.__state = new Ag();
        var d;
        this.__vertexConstants = new Float32Array(512);
        this.__fragmentConstants = new Float32Array(512);
        var f = null;
        a = [1, 1, 1, 1];
        var h = (d = c = b = null);
        this.__positionScale = a =
          null != f
            ? new Float32Array(f)
            : null != a
              ? new Float32Array(a)
              : null != b
                ? new Float32Array(b.__array)
                : null != c
                  ? new Float32Array(c)
                  : null != d
                    ? null == h
                      ? new Float32Array(d, 0)
                      : new Float32Array(d, 0, h)
                    : null;
        this.__programs = new Ia();
        -1 == ob.__glMaxViewportDims &&
          (ob.__glMaxViewportDims = this.gl.getParameter(
            this.gl.MAX_VIEWPORT_DIMS,
          ));
        this.maxBackBufferHeight = this.maxBackBufferWidth =
          ob.__glMaxViewportDims;
        -1 == ob.__glMaxTextureMaxAnisotropy &&
          ((a = this.gl.getExtension('EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')),
          null != a
            ? ((ob.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT),
              (ob.__glMaxTextureMaxAnisotropy = this.gl.getParameter(
                a.MAX_TEXTURE_MAX_ANISOTROPY_EXT,
              )))
            : ((ob.__glTextureMaxAnisotropy = 0),
              (ob.__glMaxTextureMaxAnisotropy = 0)));
        -1 == ob.__glDepthStencil &&
          (ob.__glDepthStencil = this.gl.DEPTH_STENCIL);
        -1 == ob.__glMemoryTotalAvailable &&
          ((a = this.gl.getExtension('NVX_gpu_memory_info')),
          null != a &&
            ((ob.__glMemoryTotalAvailable =
              a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX),
            (ob.__glMemoryCurrentAvailable =
              a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)));
        null == ob.__driverInfo &&
          ((a = this.gl.getParameter(this.gl.VENDOR)),
          (b = this.gl.getParameter(this.gl.VERSION)),
          (c = this.gl.getParameter(this.gl.RENDERER)),
          (d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION)),
          (ob.__driverInfo =
            'OpenGL Vendor=' +
            a +
            ' Version=' +
            b +
            ' Renderer=' +
            c +
            ' GLSL=' +
            d));
        this.driverInfo = ob.__driverInfo;
        this.__quadIndexBufferElements = 16383;
        f = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
        h = d = c = b = a = null;
        a =
          null != f
            ? new Uint16Array(f)
            : null != a
              ? new Uint16Array(a)
              : null != b
                ? new Uint16Array(b.__array)
                : null != c
                  ? new Uint16Array(c)
                  : null != d
                    ? null == h
                      ? new Uint16Array(d, 0)
                      : new Uint16Array(d, 0, h)
                    : null;
        d = c = b = 0;
        for (h = this.__quadIndexBufferElements; d < h; )
          (d++,
            (a[b] = c),
            (a[b + 1] = c + 1),
            (a[b + 2] = c + 2),
            (a[b + 3] = c + 2),
            (a[b + 4] = c + 1),
            (a[b + 5] = c + 3),
            (b += 6),
            (c += 4));
        this.__quadIndexBuffer = this.createIndexBuffer(
          this.__quadIndexBufferCount,
        );
        this.__quadIndexBuffer.uploadFromTypedArray(a);
      };
      g['openfl.display3D.Context3D'] = ob;
      ob.__name__ = 'openfl.display3D.Context3D';
      ob.__super__ = ma;
      ob.prototype = u(ma.prototype, {
        clear: function (a, b, c, d, f, h, k) {
          null == k && (k = 7);
          null == h && (h = 0);
          null == f && (f = 1);
          null == d && (d = 1);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          var g = 0;
          if (0 != (k & 1)) {
            null == this.__state.renderToTexture &&
              (this.__stage.context3D != this ||
                this.__stage.__renderer.__cleared ||
                (this.__stage.__renderer.__cleared = !0),
              (this.__cleared = !0));
            g |= this.gl.COLOR_BUFFER_BIT;
            if (
              1 != this.__contextState.colorMaskRed ||
              1 != this.__contextState.colorMaskGreen ||
              1 != this.__contextState.colorMaskBlue ||
              1 != this.__contextState.colorMaskAlpha
            )
              (this.gl.colorMask(!0, !0, !0, !0),
                (this.__contextState.colorMaskRed = !0),
                (this.__contextState.colorMaskGreen = !0),
                (this.__contextState.colorMaskBlue = !0),
                (this.__contextState.colorMaskAlpha = !0));
            this.gl.clearColor(a, b, c, d);
          }
          0 != (k & 2) &&
            ((g |= this.gl.DEPTH_BUFFER_BIT),
            1 != this.__contextState.depthMask &&
              (this.gl.depthMask(!0), (this.__contextState.depthMask = !0)),
            this.gl.clearDepth(f));
          0 != (k & 4) &&
            ((g |= this.gl.STENCIL_BUFFER_BIT),
            255 != this.__contextState.stencilWriteMask &&
              (this.gl.stencilMask(255),
              (this.__contextState.stencilWriteMask = 255)),
            this.gl.clearStencil(h),
            (this.__contextState.stencilWriteMask = 255));
          0 != g && (this.__setGLScissorTest(!1), this.gl.clear(g));
        },
        configureBackBuffer: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          null == f && (f = !1);
          null == d && (d = !0);
          f &&
            ((a = (a * this.__stage.window.__scale) | 0),
            (b = (b * this.__stage.window.__scale) | 0));
          if (null == this.__stage3D)
            ((this.backBufferWidth = a),
              (this.backBufferHeight = b),
              (this.__backBufferAntiAlias = c),
              (this.__state.backBufferEnableDepthAndStencil = d),
              (this.__backBufferWantsBestResolution = f),
              (this.__backBufferWantsBestResolutionOnBrowserZoom = h));
          else {
            if (
              null == this.__backBufferTexture ||
              this.backBufferWidth != a ||
              this.backBufferHeight != b
            ) {
              null != this.__backBufferTexture &&
                this.__backBufferTexture.dispose();
              null != this.__frontBufferTexture &&
                this.__frontBufferTexture.dispose();
              this.__backBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              this.__frontBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              null == this.__stage3D.__vertexBuffer &&
                (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
              var k = f ? a : (a * this.__stage.window.__scale) | 0,
                g = f ? b : (b * this.__stage.window.__scale) | 0;
              k = X.toFloatVector(null, null, null, [
                k,
                g,
                0,
                1,
                1,
                0,
                g,
                0,
                0,
                1,
                k,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
              ]);
              this.__stage3D.__vertexBuffer.uploadFromVector(k, 0, 20);
              null == this.__stage3D.__indexBuffer &&
                ((this.__stage3D.__indexBuffer = this.createIndexBuffer(6)),
                (k = X.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3])),
                this.__stage3D.__indexBuffer.uploadFromVector(k, 0, 6));
            }
            this.backBufferWidth = a;
            this.backBufferHeight = b;
            this.__backBufferAntiAlias = c;
            this.__state.backBufferEnableDepthAndStencil = d;
            this.__backBufferWantsBestResolution = f;
            this.__backBufferWantsBestResolutionOnBrowserZoom = h;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
            this.__frontBufferTexture.__getGLFramebuffer(d, c, 0);
          }
        },
        createIndexBuffer: function (a, b) {
          null == b && (b = 1);
          return new nj(this, a, b);
        },
        createProgram: function (a) {
          null == a && (a = 0);
          return new oj(this, a);
        },
        createRectangleTexture: function (a, b, c, d) {
          return new Bg(this, a, b, pk.toString(c), d);
        },
        createVertexBuffer: function (a, b, c) {
          null == c && (c = 1);
          return new pj(this, a, b, bk.toString(c));
        },
        drawTriangles: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          c = -1 == c ? a.__numIndices : 3 * c;
          this.__bindGLElementArrayBuffer(a.__id);
          this.gl.drawElements(
            this.gl.TRIANGLES,
            c,
            this.gl.UNSIGNED_SHORT,
            2 * b,
          );
        },
        present: function () {
          this.setRenderToBackBuffer();
          if (null != this.__stage3D && null != this.__backBufferTexture) {
            this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
            var a = this.__backBufferTexture;
            this.__backBufferTexture = this.__frontBufferTexture;
            this.__frontBufferTexture = a;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(
                this.__state.backBufferEnableDepthAndStencil,
                this.__backBufferAntiAlias,
                0,
              );
            this.__cleared = !1;
          }
          this.__present = !0;
        },
        setBlendFactors: function (a, b) {
          this.setBlendFactorsSeparate(a, b, a, b);
        },
        setBlendFactorsSeparate: function (a, b, c, d) {
          this.__state.blendSourceRGBFactor = a;
          this.__state.blendDestinationRGBFactor = b;
          this.__state.blendSourceAlphaFactor = c;
          this.__state.blendDestinationAlphaFactor = d;
          this.__setGLBlendEquation(this.gl.FUNC_ADD);
        },
        setColorMask: function (a, b, c, d) {
          this.__state.colorMaskRed = a;
          this.__state.colorMaskGreen = b;
          this.__state.colorMaskBlue = c;
          this.__state.colorMaskAlpha = d;
        },
        setCulling: function (a) {
          this.__state.culling = a;
        },
        setDepthTest: function (a, b) {
          this.__state.depthMask = a;
          this.__state.depthCompareMode = b;
        },
        setProgram: function (a) {
          this.__state.program = a;
          this.__state.shader = null;
          if (null != a)
            for (var b = 0, c = a.__samplerStates.length; b < c; ) {
              var d = b++;
              null == this.__state.samplerStates[d]
                ? (this.__state.samplerStates[d] = a.__samplerStates[d].clone())
                : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d]);
            }
        },
        setProgramConstantsFromMatrix: function (a, b, c, d) {
          null == d && (d = !1);
          if (
            null != this.__state.program &&
            1 == this.__state.program.__format
          )
            (this.__flushGLProgram(),
              (a = new Float32Array(16)),
              (a[0] = c.rawData.get(0)),
              (a[1] = c.rawData.get(1)),
              (a[2] = c.rawData.get(2)),
              (a[3] = c.rawData.get(3)),
              (a[4] = c.rawData.get(4)),
              (a[5] = c.rawData.get(5)),
              (a[6] = c.rawData.get(6)),
              (a[7] = c.rawData.get(7)),
              (a[8] = c.rawData.get(8)),
              (a[9] = c.rawData.get(9)),
              (a[10] = c.rawData.get(10)),
              (a[11] = c.rawData.get(11)),
              (a[12] = c.rawData.get(12)),
              (a[13] = c.rawData.get(13)),
              (a[14] = c.rawData.get(14)),
              (a[15] = c.rawData.get(15)),
              wc.uniformMatrix4fv(this.gl, b, d, a));
          else {
            var f = (a = 1 == a)
              ? this.__vertexConstants
              : this.__fragmentConstants;
            c = c.rawData;
            var h = 4 * b;
            d
              ? ((f[h++] = c.get(0)),
                (f[h++] = c.get(4)),
                (f[h++] = c.get(8)),
                (f[h++] = c.get(12)),
                (f[h++] = c.get(1)),
                (f[h++] = c.get(5)),
                (f[h++] = c.get(9)),
                (f[h++] = c.get(13)),
                (f[h++] = c.get(2)),
                (f[h++] = c.get(6)),
                (f[h++] = c.get(10)),
                (f[h++] = c.get(14)),
                (f[h++] = c.get(3)),
                (f[h++] = c.get(7)),
                (f[h++] = c.get(11)))
              : ((f[h++] = c.get(0)),
                (f[h++] = c.get(1)),
                (f[h++] = c.get(2)),
                (f[h++] = c.get(3)),
                (f[h++] = c.get(4)),
                (f[h++] = c.get(5)),
                (f[h++] = c.get(6)),
                (f[h++] = c.get(7)),
                (f[h++] = c.get(8)),
                (f[h++] = c.get(9)),
                (f[h++] = c.get(10)),
                (f[h++] = c.get(11)),
                (f[h++] = c.get(12)),
                (f[h++] = c.get(13)),
                (f[h++] = c.get(14)));
            f[h++] = c.get(15);
            null != this.__state.program &&
              this.__state.program.__markDirty(a, b, 4);
          }
        },
        setRenderToBackBuffer: function () {
          this.__state.renderToTexture = null;
        },
        setRenderToTexture: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          this.__state.renderToTexture = a;
          this.__state.renderToTextureDepthStencil = b;
          this.__state.renderToTextureAntiAlias = c;
          this.__state.renderToTextureSurfaceSelector = d;
        },
        setSamplerStateAt: function (a, b, c, d) {
          null == this.__state.samplerStates[a] &&
            (this.__state.samplerStates[a] = new $e());
          a = this.__state.samplerStates[a];
          a.wrap = b;
          a.filter = c;
          a.mipfilter = d;
        },
        setScissorRectangle: function (a) {
          null != a
            ? ((this.__state.scissorEnabled = !0),
              this.__state.scissorRectangle.copyFrom(a))
            : (this.__state.scissorEnabled = !1);
        },
        setStencilActions: function (a, b, c, d, f) {
          null == f && (f = 5);
          null == d && (d = 5);
          null == c && (c = 5);
          null == b && (b = 0);
          null == a && (a = 2);
          this.__state.stencilTriangleFace = a;
          this.__state.stencilCompareMode = b;
          this.__state.stencilPass = c;
          this.__state.stencilDepthFail = d;
          this.__state.stencilFail = f;
        },
        setStencilReferenceValue: function (a, b, c) {
          null == c && (c = 255);
          null == b && (b = 255);
          this.__state.stencilReferenceValue = a;
          this.__state.stencilReadMask = b;
          this.__state.stencilWriteMask = c;
        },
        setTextureAt: function (a, b) {
          this.__state.textures[a] = b;
        },
        setVertexBufferAt: function (a, b, c, d) {
          null == d && (d = 4);
          null == c && (c = 0);
          if (!(0 > a))
            if (null == b)
              (this.gl.disableVertexAttribArray(a),
                this.__bindGLArrayBuffer(null));
            else
              switch (
                (this.__bindGLArrayBuffer(b.__id),
                this.gl.enableVertexAttribArray(a),
                (c *= 4),
                d)
              ) {
                case 0:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.UNSIGNED_BYTE,
                    !0,
                    b.__stride,
                    c,
                  );
                  break;
                case 1:
                  this.gl.vertexAttribPointer(
                    a,
                    1,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 2:
                  this.gl.vertexAttribPointer(
                    a,
                    2,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 3:
                  this.gl.vertexAttribPointer(
                    a,
                    3,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 4:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                default:
                  throw new Dc();
              }
        },
        __bindGLArrayBuffer: function (a) {
          this.__contextState.__currentGLArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a),
            (this.__contextState.__currentGLArrayBuffer = a));
        },
        __bindGLElementArrayBuffer: function (a) {
          this.__contextState.__currentGLElementArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a),
            (this.__contextState.__currentGLElementArrayBuffer = a));
        },
        __bindGLFramebuffer: function (a) {
          this.__contextState.__currentGLFramebuffer != a &&
            (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a),
            (this.__contextState.__currentGLFramebuffer = a));
        },
        __bindGLTexture2D: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_2D, a);
          this.__contextState.__currentGLTexture2D = a;
        },
        __bindGLTextureCubeMap: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
          this.__contextState.__currentGLTextureCubeMap = a;
        },
        __dispose: function () {
          this.driverInfo += ' (Disposed)';
          null != this.__stage3D &&
            ((this.__stage3D.__indexBuffer = null),
            (this.__stage3D.__vertexBuffer = null),
            (this.__stage3D = this.__stage3D.context3D = null));
          this.__positionScale =
            this.__frontBufferTexture =
            this.__fragmentConstants =
            this.__renderStage3DProgram =
            this.__context =
            this.__backBufferTexture =
              null;
          this.__present = !1;
          this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null;
        },
        __drawTriangles: function (a, b) {
          null == a && (a = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          this.gl.drawArrays(this.gl.TRIANGLES, a, b);
        },
        __flushGL: function () {
          this.__flushGLProgram();
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          this.__flushGLBlend();
          if (
            this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
            this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
            this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
            this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
          )
            (this.gl.colorMask(
              this.__state.colorMaskRed,
              this.__state.colorMaskGreen,
              this.__state.colorMaskBlue,
              this.__state.colorMaskAlpha,
            ),
              (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
              (this.__contextState.colorMaskGreen =
                this.__state.colorMaskGreen),
              (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
              (this.__contextState.colorMaskAlpha =
                this.__state.colorMaskAlpha));
          this.__flushGLCulling();
          this.__flushGLDepth();
          this.__flushGLScissor();
          this.__flushGLStencil();
          this.__flushGLTextures();
        },
        __flushGLBlend: function () {
          if (
            this.__contextState.blendDestinationRGBFactor !=
              this.__state.blendDestinationRGBFactor ||
            this.__contextState.blendSourceRGBFactor !=
              this.__state.blendSourceRGBFactor ||
            this.__contextState.blendDestinationAlphaFactor !=
              this.__state.blendDestinationAlphaFactor ||
            this.__contextState.blendSourceAlphaFactor !=
              this.__state.blendSourceAlphaFactor
          )
            (this.__setGLBlend(!0),
              this.__state.blendDestinationRGBFactor ==
                this.__state.blendDestinationAlphaFactor &&
              this.__state.blendSourceRGBFactor ==
                this.__state.blendSourceAlphaFactor
                ? this.gl.blendFunc(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                  )
                : this.gl.blendFuncSeparate(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                    this.__getGLBlend(this.__state.blendSourceAlphaFactor),
                    this.__getGLBlend(this.__state.blendDestinationAlphaFactor),
                  ),
              (this.__contextState.blendDestinationRGBFactor =
                this.__state.blendDestinationRGBFactor),
              (this.__contextState.blendSourceRGBFactor =
                this.__state.blendSourceRGBFactor),
              (this.__contextState.blendDestinationAlphaFactor =
                this.__state.blendDestinationAlphaFactor),
              (this.__contextState.blendSourceAlphaFactor =
                this.__state.blendSourceAlphaFactor));
        },
        __flushGLCulling: function () {
          if (this.__contextState.culling != this.__state.culling) {
            if (3 == this.__state.culling) this.__setGLCullFace(!1);
            else
              switch ((this.__setGLCullFace(!0), this.__state.culling)) {
                case 0:
                  this.gl.cullFace(this.gl.BACK);
                  break;
                case 1:
                  this.gl.cullFace(this.gl.FRONT);
                  break;
                case 2:
                  this.gl.cullFace(this.gl.FRONT_AND_BACK);
                  break;
                case 3:
                  break;
                default:
                  throw new Dc();
              }
            this.__contextState.culling = this.__state.culling;
          }
        },
        __flushGLDepth: function () {
          var a =
            this.__state.depthMask &&
            (null != this.__state.renderToTexture
              ? this.__state.renderToTextureDepthStencil
              : this.__state.backBufferEnableDepthAndStencil);
          this.__contextState.depthMask != a &&
            (this.gl.depthMask(a), (this.__contextState.depthMask = a));
          if (
            this.__contextState.depthCompareMode !=
            this.__state.depthCompareMode
          ) {
            switch (this.__state.depthCompareMode) {
              case 0:
                this.gl.depthFunc(this.gl.ALWAYS);
                break;
              case 1:
                this.gl.depthFunc(this.gl.EQUAL);
                break;
              case 2:
                this.gl.depthFunc(this.gl.GREATER);
                break;
              case 3:
                this.gl.depthFunc(this.gl.GEQUAL);
                break;
              case 4:
                this.gl.depthFunc(this.gl.LESS);
                break;
              case 5:
                this.gl.depthFunc(this.gl.LEQUAL);
                break;
              case 6:
                this.gl.depthFunc(this.gl.NEVER);
                break;
              case 7:
                this.gl.depthFunc(this.gl.NOTEQUAL);
                break;
              default:
                throw new Dc();
            }
            this.__contextState.depthCompareMode =
              this.__state.depthCompareMode;
          }
        },
        __flushGLFramebuffer: function () {
          if (null != this.__state.renderToTexture) {
            if (
              this.__contextState.renderToTexture !=
                this.__state.renderToTexture ||
              this.__contextState.renderToTextureSurfaceSelector !=
                this.__state.renderToTextureSurfaceSelector
            ) {
              var a = this.__state.renderToTexture.__getGLFramebuffer(
                this.__state.renderToTextureDepthStencil,
                this.__state.renderToTextureAntiAlias,
                this.__state.renderToTextureSurfaceSelector,
              );
              this.__bindGLFramebuffer(a);
              this.__contextState.renderToTexture =
                this.__state.renderToTexture;
              this.__contextState.renderToTextureAntiAlias =
                this.__state.renderToTextureAntiAlias;
              this.__contextState.renderToTextureDepthStencil =
                this.__state.renderToTextureDepthStencil;
              this.__contextState.renderToTextureSurfaceSelector =
                this.__state.renderToTextureSurfaceSelector;
            }
            this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
            this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
            this.__setGLFrontFace(!0);
          } else {
            if (
              null == this.__stage &&
              0 == this.backBufferWidth &&
              0 == this.backBufferHeight
            )
              throw new Sb('Context3D backbuffer has not been configured');
            if (
              null != this.__contextState.renderToTexture ||
              this.__contextState.__currentGLFramebuffer !=
                this.__state.__primaryGLFramebuffer ||
              this.__contextState.backBufferEnableDepthAndStencil !=
                this.__state.backBufferEnableDepthAndStencil
            )
              (this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer),
                (this.__contextState.renderToTexture = null),
                (this.__contextState.backBufferEnableDepthAndStencil =
                  this.__state.backBufferEnableDepthAndStencil));
            this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLStencilTest(
              this.__state.backBufferEnableDepthAndStencil,
            );
            this.__setGLFrontFace(this.__stage.context3D != this);
          }
        },
        __flushGLProgram: function () {
          var a = this.__state.shader,
            b = this.__state.program;
          this.__contextState.shader != a &&
            (null != this.__contextState.shader &&
              this.__contextState.shader.__disable(),
            null != a && a.__enable(),
            (this.__contextState.shader = a));
          this.__contextState.program != b &&
            (null != this.__contextState.program &&
              this.__contextState.program.__disable(),
            null != b && b.__enable(),
            (this.__contextState.program = b));
          null != b &&
            0 == b.__format &&
            ((this.__positionScale[1] =
              this.__stage.context3D == this &&
              null == this.__state.renderToTexture
                ? 1
                : -1),
            b.__setPositionScale(this.__positionScale));
        },
        __flushGLScissor: function () {
          if (this.__state.scissorEnabled) {
            this.__setGLScissorTest(!0);
            this.__contextState.scissorEnabled = !0;
            var a = this.__state.scissorRectangle.x | 0,
              b = this.__state.scissorRectangle.y | 0,
              c = this.__state.scissorRectangle.width | 0,
              d = this.__state.scissorRectangle.height | 0;
            this.__backBufferWantsBestResolution &&
              ((a =
                (this.__state.scissorRectangle.x *
                  this.__stage.window.__scale) |
                0),
              (b =
                (this.__state.scissorRectangle.y *
                  this.__stage.window.__scale) |
                0),
              (c =
                (this.__state.scissorRectangle.width *
                  this.__stage.window.__scale) |
                0),
              (d =
                (this.__state.scissorRectangle.height *
                  this.__stage.window.__scale) |
                0));
            null == this.__state.renderToTexture &&
              null == this.__stage3D &&
              (b =
                ((this.__stage.window.__height * this.__stage.window.__scale) |
                  0) -
                d -
                b);
            if (
              this.__contextState.scissorRectangle.x != a ||
              this.__contextState.scissorRectangle.y != b ||
              this.__contextState.scissorRectangle.width != c ||
              this.__contextState.scissorRectangle.height != d
            )
              (this.gl.scissor(a, b, c, d),
                this.__contextState.scissorRectangle.setTo(a, b, c, d));
          } else
            this.__contextState.scissorEnabled != this.__state.scissorEnabled &&
              (this.__setGLScissorTest(!1),
              (this.__contextState.scissorEnabled = !1));
        },
        __flushGLStencil: function () {
          if (
            this.__contextState.stencilTriangleFace !=
              this.__state.stencilTriangleFace ||
            this.__contextState.stencilPass != this.__state.stencilPass ||
            this.__contextState.stencilDepthFail !=
              this.__state.stencilDepthFail ||
            this.__contextState.stencilFail != this.__state.stencilFail
          )
            (this.gl.stencilOpSeparate(
              this.__getGLTriangleFace(this.__state.stencilTriangleFace),
              this.__getGLStencilAction(this.__state.stencilFail),
              this.__getGLStencilAction(this.__state.stencilDepthFail),
              this.__getGLStencilAction(this.__state.stencilPass),
            ),
              (this.__contextState.stencilTriangleFace =
                this.__state.stencilTriangleFace),
              (this.__contextState.stencilPass = this.__state.stencilPass),
              (this.__contextState.stencilDepthFail =
                this.__state.stencilDepthFail),
              (this.__contextState.stencilFail = this.__state.stencilFail));
          this.__contextState.stencilWriteMask !=
            this.__state.stencilWriteMask &&
            (this.gl.stencilMask(this.__state.stencilWriteMask),
            (this.__contextState.stencilWriteMask =
              this.__state.stencilWriteMask));
          if (
            this.__contextState.stencilCompareMode !=
              this.__state.stencilCompareMode ||
            this.__contextState.stencilReferenceValue !=
              this.__state.stencilReferenceValue ||
            this.__contextState.stencilReadMask != this.__state.stencilReadMask
          )
            (this.gl.stencilFunc(
              this.__getGLCompareMode(this.__state.stencilCompareMode),
              this.__state.stencilReferenceValue,
              this.__state.stencilReadMask,
            ),
              (this.__contextState.stencilCompareMode =
                this.__state.stencilCompareMode),
              (this.__contextState.stencilReferenceValue =
                this.__state.stencilReferenceValue),
              (this.__contextState.stencilReadMask =
                this.__state.stencilReadMask));
        },
        __flushGLTextures: function () {
          for (
            var a = 0, b, c, d = 0, f = this.__state.textures.length;
            d < f;

          ) {
            var h = d++;
            b = this.__state.textures[h];
            c = this.__state.samplerStates[h];
            null == c &&
              ((this.__state.samplerStates[h] = new $e()),
              (c = this.__state.samplerStates[h]));
            this.gl.activeTexture(this.gl.TEXTURE0 + a);
            null != b
              ? (b.__textureTarget == this.gl.TEXTURE_2D
                  ? this.__bindGLTexture2D(b.__getTexture())
                  : this.__bindGLTextureCubeMap(b.__getTexture()),
                (this.__contextState.textures[h] = b),
                b.__setSamplerState(c))
              : this.__bindGLTexture2D(null);
            null != this.__state.program &&
              0 == this.__state.program.__format &&
              c.textureAlpha &&
              (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4),
              null != b && null != b.__alphaTexture
                ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D
                    ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture())
                    : this.__bindGLTextureCubeMap(
                        b.__alphaTexture.__getTexture(),
                      ),
                  b.__alphaTexture.__setSamplerState(c),
                  this.gl.uniform1i(
                    this.__state.program.__agalAlphaSamplerEnabled[a].location,
                    1,
                  ))
                : (this.__bindGLTexture2D(null),
                  null != this.__state.program.__agalAlphaSamplerEnabled[a] &&
                    this.gl.uniform1i(
                      this.__state.program.__agalAlphaSamplerEnabled[a]
                        .location,
                      0,
                    )));
            ++a;
          }
        },
        __flushGLViewport: function () {
          if (null == this.__state.renderToTexture)
            if (this.__stage.context3D == this) {
              var a = this.backBufferWidth,
                b = this.backBufferHeight;
              null != this.__stage3D ||
                this.__backBufferWantsBestResolution ||
                ((a = (this.backBufferWidth * this.__stage.window.__scale) | 0),
                (b =
                  (this.backBufferHeight * this.__stage.window.__scale) | 0));
              var c = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                d =
                  (this.__stage.window.__height * this.__stage.window.__scale -
                    b -
                    (null == this.__stage3D ? 0 : this.__stage3D.get_y())) |
                  0;
              this.gl.viewport(c, d, a, b);
            } else
              this.gl.viewport(
                0,
                0,
                this.backBufferWidth,
                this.backBufferHeight,
              );
          else
            ((b = a = 0),
              this.__state.renderToTexture instanceof ei
                ? ((b = this.__state.renderToTexture),
                  (a = b.__width),
                  (b = b.__height))
                : this.__state.renderToTexture instanceof Bg
                  ? ((b = this.__state.renderToTexture),
                    (a = b.__width),
                    (b = b.__height))
                  : this.__state.renderToTexture instanceof fi &&
                    ((b = this.__state.renderToTexture), (b = a = b.__size)),
              this.gl.viewport(0, 0, a, b));
        },
        __getGLBlend: function (a) {
          switch (a) {
            case 0:
              return this.gl.DST_ALPHA;
            case 1:
              return this.gl.DST_COLOR;
            case 2:
              return this.gl.ONE;
            case 3:
              return this.gl.ONE_MINUS_DST_ALPHA;
            case 4:
              return this.gl.ONE_MINUS_DST_COLOR;
            case 5:
              return this.gl.ONE_MINUS_SRC_ALPHA;
            case 6:
              return this.gl.ONE_MINUS_SRC_COLOR;
            case 7:
              return this.gl.SRC_ALPHA;
            case 8:
              return this.gl.SRC_COLOR;
            case 9:
              return this.gl.ZERO;
            default:
              throw new Dc();
          }
        },
        __getGLCompareMode: function (a) {
          switch (a) {
            case 0:
              return this.gl.ALWAYS;
            case 1:
              return this.gl.EQUAL;
            case 2:
              return this.gl.GREATER;
            case 3:
              return this.gl.GEQUAL;
            case 4:
              return this.gl.LESS;
            case 5:
              return this.gl.LEQUAL;
            case 6:
              return this.gl.NEVER;
            case 7:
              return this.gl.NOTEQUAL;
            default:
              return this.gl.EQUAL;
          }
        },
        __getGLStencilAction: function (a) {
          switch (a) {
            case 0:
              return this.gl.DECR;
            case 1:
              return this.gl.DECR_WRAP;
            case 2:
              return this.gl.INCR;
            case 3:
              return this.gl.INCR_WRAP;
            case 4:
              return this.gl.INVERT;
            case 5:
              return this.gl.KEEP;
            case 6:
              return this.gl.REPLACE;
            case 7:
              return this.gl.ZERO;
            default:
              return this.gl.KEEP;
          }
        },
        __getGLTriangleFace: function (a) {
          switch (a) {
            case 0:
              return this.gl.BACK;
            case 1:
              return this.gl.FRONT;
            case 2:
              return this.gl.FRONT_AND_BACK;
            case 3:
              return this.gl.NONE;
            default:
              return this.gl.FRONT_AND_BACK;
          }
        },
        __renderStage3D: function (a) {
          var b = a.context3D;
          if (
            null != b &&
            b != this &&
            null != b.__frontBufferTexture &&
            a.visible &&
            0 < this.backBufferHeight &&
            0 < this.backBufferWidth
          ) {
            if (null == this.__renderStage3DProgram) {
              var c = new pa();
              c.assemble(ck.toString(1), 'm44 op, va0, vc0\nmov v0, va1');
              var d = new pa();
              d.assemble(
                ck.toString(0),
                'tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1',
              );
              this.__renderStage3DProgram = this.createProgram();
              this.__renderStage3DProgram.upload(c.agalcode, d.agalcode);
            }
            this.setProgram(this.__renderStage3DProgram);
            this.setBlendFactors(2, 9);
            this.setColorMask(!0, !0, !0, !0);
            this.setCulling(3);
            this.setDepthTest(!1, 0);
            this.setStencilActions();
            this.setStencilReferenceValue(0, 0, 0);
            this.setScissorRectangle(null);
            this.setTextureAt(0, b.__frontBufferTexture);
            this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
            this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
            this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
            this.drawTriangles(a.__indexBuffer);
            this.__present = !0;
          }
        },
        __setGLBlend: function (a) {
          this.__contextState.__enableGLBlend != a &&
            (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND),
            (this.__contextState.__enableGLBlend = a));
        },
        __setGLBlendEquation: function (a) {
          this.__contextState.__glBlendEquation != a &&
            (this.gl.blendEquation(a),
            (this.__contextState.__glBlendEquation = a));
        },
        __setGLCullFace: function (a) {
          this.__contextState.__enableGLCullFace != a &&
            (a
              ? this.gl.enable(this.gl.CULL_FACE)
              : this.gl.disable(this.gl.CULL_FACE),
            (this.__contextState.__enableGLCullFace = a));
        },
        __setGLDepthTest: function (a) {
          this.__contextState.__enableGLDepthTest != a &&
            (a
              ? this.gl.enable(this.gl.DEPTH_TEST)
              : this.gl.disable(this.gl.DEPTH_TEST),
            (this.__contextState.__enableGLDepthTest = a));
        },
        __setGLFrontFace: function (a) {
          this.__contextState.__frontFaceGLCCW != a &&
            (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW),
            (this.__contextState.__frontFaceGLCCW = a));
        },
        __setGLScissorTest: function (a) {
          this.__contextState.__enableGLScissorTest != a &&
            (a
              ? this.gl.enable(this.gl.SCISSOR_TEST)
              : this.gl.disable(this.gl.SCISSOR_TEST),
            (this.__contextState.__enableGLScissorTest = a));
        },
        __setGLStencilTest: function (a) {
          this.__contextState.__enableGLStencilTest != a &&
            (a
              ? this.gl.enable(this.gl.STENCIL_TEST)
              : this.gl.disable(this.gl.STENCIL_TEST),
            (this.__contextState.__enableGLStencilTest = a));
        },
        __class__: ob,
      });
      var bk = {
          fromString: function (a) {
            switch (a) {
              case 'dynamicDraw':
                return 0;
              case 'staticDraw':
                return 1;
              default:
                return null;
            }
          },
          toString: function (a) {
            switch (a) {
              case 0:
                return 'dynamicDraw';
              case 1:
                return 'staticDraw';
              default:
                return null;
            }
          },
        },
        ck = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'fragment';
              case 1:
                return 'vertex';
              default:
                return null;
            }
          },
        },
        pk = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bgrPacked565';
              case 1:
                return 'bgra';
              case 2:
                return 'bgraPacked4444';
              case 3:
                return 'compressed';
              case 4:
                return 'compressedAlpha';
              case 5:
                return 'rgbaHalfFloat';
              default:
                return null;
            }
          },
        },
        nj = function (a, b, c) {
          this.__context = a;
          this.__numIndices = b;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
        };
      g['openfl.display3D.IndexBuffer3D'] = nj;
      nj.__name__ = 'openfl.display3D.IndexBuffer3D';
      nj.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLElementArrayBuffer(this.__id),
            wc.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            var d = b + c,
              f = this.__tempUInt16Array;
            if (
              null == this.__tempUInt16Array ||
              this.__tempUInt16Array.length < c
            )
              ((this.__tempUInt16Array = null != c ? new Uint16Array(c) : null),
                null != f && this.__tempUInt16Array.set(f));
            for (c = b; c < d; )
              ((f = c++), (this.__tempUInt16Array[f - b] = a.get(f)));
            this.uploadFromTypedArray(this.__tempUInt16Array);
          }
        },
        __class__: nj,
      };
      var oj = function (a, b) {
        this.__context = a;
        this.__format = b;
        0 == this.__format
          ? ((this.__agalSamplerUsageMask = 0),
            (this.__agalUniforms = new Ya()),
            (this.__agalSamplerUniforms = new Ya()),
            (this.__agalAlphaSamplerUniforms = new Ya()),
            (this.__agalAlphaSamplerEnabled = []))
          : ((this.__glslAttribNames = []),
            (this.__glslAttribTypes = []),
            (this.__glslSamplerNames = []),
            (this.__glslUniformLocations = []),
            (this.__glslUniformNames = []),
            (this.__glslUniformTypes = []));
        this.__samplerStates = [];
      };
      g['openfl.display3D.Program3D'] = oj;
      oj.__name__ = 'openfl.display3D.Program3D';
      oj.prototype = {
        upload: function (a, b) {
          if (0 == this.__format) {
            var c = [];
            a = Lc.convertToGLSL(a, null);
            b = Lc.convertToGLSL(b, c);
            5 == Na.level &&
              (Na.info(a, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 399,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }),
              Na.info(b, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 400,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }));
            this.__deleteShaders();
            this.__uploadFromGLSL(a, b);
            this.__buildAGALUniformList();
            b = 0;
            for (a = c.length; b < a; ) {
              var d = b++;
              this.__samplerStates[d] = c[d];
            }
          }
        },
        __buildAGALUniformList: function () {
          if (1 != this.__format) {
            var a = this.__context.gl;
            this.__agalUniforms.clear();
            this.__agalSamplerUniforms.clear();
            this.__agalAlphaSamplerUniforms.clear();
            this.__agalAlphaSamplerEnabled = [];
            this.__agalSamplerUsageMask = 0;
            var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
            for (var c = new Ya(), d = new Ya(), f = 0; f < b; ) {
              var h = f++,
                k = a.getActiveUniform(this.__glProgram, h),
                g = k.name,
                p = k.size,
                t = k.type;
              k = new gi(this.__context);
              k.name = g;
              k.size = p;
              k.type = t;
              k.location = a.getUniformLocation(this.__glProgram, k.name);
              g = k.name.indexOf('[');
              0 <= g && (k.name = k.name.substring(0, g));
              switch (k.type) {
                case 35674:
                  k.regCount = 2;
                  break;
                case 35675:
                  k.regCount = 3;
                  break;
                case 35676:
                  k.regCount = 4;
                  break;
                default:
                  k.regCount = 1;
              }
              k.regCount *= k.size;
              this.__agalUniforms.add(k);
              if ('vcPositionScale' == k.name) this.__agalPositionScale = k;
              else if (M.startsWith(k.name, 'vc'))
                ((k.regIndex = I.parseInt(k.name.substring(2))),
                  (k.regData = this.__context.__vertexConstants),
                  c.add(k));
              else if (M.startsWith(k.name, 'fc'))
                ((k.regIndex = I.parseInt(k.name.substring(2))),
                  (k.regData = this.__context.__fragmentConstants),
                  d.add(k));
              else if (
                M.startsWith(k.name, 'sampler') &&
                -1 == k.name.indexOf('alpha')
              )
                for (
                  k.regIndex = I.parseInt(k.name.substring(7)),
                    this.__agalSamplerUniforms.add(k),
                    g = 0,
                    p = k.regCount;
                  g < p;

                )
                  ((t = g++),
                    (this.__agalSamplerUsageMask |= 1 << (k.regIndex + t)));
              else
                M.startsWith(k.name, 'sampler') && M.endsWith(k.name, '_alpha')
                  ? ((g = k.name.indexOf('_') - 7),
                    (k.regIndex = I.parseInt(k.name.substring(7, 7 + g)) + 4),
                    this.__agalAlphaSamplerUniforms.add(k))
                  : M.startsWith(k.name, 'sampler') &&
                    M.endsWith(k.name, '_alphaEnabled') &&
                    ((k.regIndex = I.parseInt(k.name.substring(7))),
                    (this.__agalAlphaSamplerEnabled[k.regIndex] = k));
              5 == Na.level &&
                Na.verbose(
                  '' +
                    h +
                    ' name:' +
                    k.name +
                    ' type:' +
                    k.type +
                    ' size:' +
                    k.size +
                    ' location:' +
                    I.string(k.location),
                  {
                    fileName: 'openfl/display3D/Program3D.hx',
                    lineNumber: 577,
                    className: 'openfl.display3D.Program3D',
                    methodName: '__buildAGALUniformList',
                  },
                );
            }
            this.__agalVertexUniformMap = new Cg(C.array(c));
            this.__agalFragmentUniformMap = new Cg(C.array(d));
          }
        },
        __deleteShaders: function () {
          var a = this.__context.gl;
          null != this.__glProgram && (this.__glProgram = null);
          null != this.__glVertexShader &&
            (a.deleteShader(this.__glVertexShader),
            (this.__glVertexShader = null));
          null != this.__glFragmentShader &&
            (a.deleteShader(this.__glFragmentShader),
            (this.__glFragmentShader = null));
        },
        __disable: function () {},
        __enable: function () {
          var a = this.__context.gl;
          a.useProgram(this.__glProgram);
          if (0 == this.__format) {
            this.__agalVertexUniformMap.markAllDirty();
            this.__agalFragmentUniformMap.markAllDirty();
            for (var b = this.__agalSamplerUniforms.h; null != b; ) {
              var c = b.item;
              b = b.next;
              if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
              else throw new Dc('!!! TODO: uniform location on webgl');
            }
            for (b = this.__agalAlphaSamplerUniforms.h; null != b; )
              if (((c = b.item), (b = b.next), 1 == c.regCount))
                a.uniform1i(c.location, c.regIndex);
              else throw new Dc('!!! TODO: uniform location on webgl');
          }
        },
        __flush: function () {
          0 == this.__format &&
            (this.__agalVertexUniformMap.flush(),
            this.__agalFragmentUniformMap.flush());
        },
        __markDirty: function (a, b, c) {
          1 != this.__format &&
            (a
              ? this.__agalVertexUniformMap.markDirty(b, c)
              : this.__agalFragmentUniformMap.markDirty(b, c));
        },
        __setPositionScale: function (a) {
          1 != this.__format &&
            null != this.__agalPositionScale &&
            this.__context.gl.uniform4fv(this.__agalPositionScale.location, a);
        },
        __uploadFromGLSL: function (a, b) {
          var c = this.__context.gl;
          this.__glVertexSource = a;
          this.__glFragmentSource = b;
          this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
          c.shaderSource(this.__glVertexShader, a);
          c.compileShader(this.__glVertexShader);
          if (
            0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)
          ) {
            var d =
              'Error compiling vertex shader\n' +
              c.getShaderInfoLog(this.__glVertexShader);
            Na.error(d + ('\n' + a), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 869,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            });
          }
          this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
          c.shaderSource(this.__glFragmentShader, b);
          c.compileShader(this.__glFragmentShader);
          0 ==
            c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) &&
            ((d =
              'Error compiling fragment shader\n' +
              c.getShaderInfoLog(this.__glFragmentShader)),
            Na.error(d + ('\n' + b), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 881,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
          this.__glProgram = c.createProgram();
          if (0 == this.__format)
            for (b = 0; 16 > b; ) {
              var f = b++;
              d = 'va' + f;
              -1 != a.indexOf(' ' + d) &&
                c.bindAttribLocation(this.__glProgram, f, d);
            }
          else
            for (b = 0, a = this.__glslAttribNames; b < a.length; )
              if (
                ((d = a[b]),
                ++b,
                -1 < d.indexOf('Position') && M.startsWith(d, 'openfl_'))
              ) {
                c.bindAttribLocation(this.__glProgram, 0, d);
                break;
              }
          c.attachShader(this.__glProgram, this.__glVertexShader);
          c.attachShader(this.__glProgram, this.__glFragmentShader);
          c.linkProgram(this.__glProgram);
          0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) &&
            ((d =
              'Unable to initialize the shader program\n' +
              c.getProgramInfoLog(this.__glProgram)),
            Na.error(d, {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 922,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
        },
        __class__: oj,
      };
      var gi = function (a) {
        this.context = a;
        this.isDirty = !0;
        this.regDataPointer = new ij(null, 0);
      };
      g['openfl.display3D.Uniform'] = gi;
      gi.__name__ = 'openfl.display3D.Uniform';
      gi.prototype = {
        flush: function () {
          var a = this.context.gl,
            b = 4 * this.regIndex;
          switch (this.type) {
            case 35664:
              kk.uniform2fv(
                a,
                this.location,
                this.regData.subarray(b, b + 2 * this.regCount),
              );
              break;
            case 35665:
              var c = this.location;
              b = this.regData.subarray(b, b + 3 * this.regCount);
              var d = null;
              null != d ? a.uniform3fv(c, b, d, null) : a.uniform3fv(c, b);
              break;
            case 35666:
              c = this.location;
              b = this.regData.subarray(b, b + 4 * this.regCount);
              d = null;
              null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
              break;
            case 35674:
              wc.uniformMatrix2fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 4 * this.size),
              );
              break;
            case 35675:
              wc.uniformMatrix3fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 9 * this.size),
              );
              break;
            case 35676:
              wc.uniformMatrix4fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 16 * this.size),
              );
              break;
            default:
              ((c = this.location),
                (b = this.regData.subarray(b, b + 4 * this.regCount)),
                (d = null),
                null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b));
          }
        },
        __class__: gi,
      };
      var Cg = function (a) {
        this.__uniforms = a;
        this.__uniforms.sort(function (a, b) {
          return ya.compare(a.regIndex, b.regIndex);
        });
        var b = 0;
        a = 0;
        for (var c = this.__uniforms; a < c.length; ) {
          var d = c[a];
          ++a;
          d.regIndex + d.regCount > b && (b = d.regIndex + d.regCount);
        }
        this.__registerLookup = X.toObjectVector(null, b);
        a = 0;
        for (c = this.__uniforms; a < c.length; ) {
          d = c[a];
          ++a;
          b = 0;
          for (var f = d.regCount; b < f; ) {
            var h = b++;
            this.__registerLookup.set(d.regIndex + h, d);
          }
        }
        this.__anyDirty = this.__allDirty = !0;
      };
      g['openfl.display3D.UniformMap'] = Cg;
      Cg.__name__ = 'openfl.display3D.UniformMap';
      Cg.prototype = {
        flush: function () {
          if (this.__anyDirty) {
            for (var a = 0, b = this.__uniforms; a < b.length; ) {
              var c = b[a];
              ++a;
              if (this.__allDirty || c.isDirty) (c.flush(), (c.isDirty = !1));
            }
            this.__anyDirty = this.__allDirty = !1;
          }
        },
        markAllDirty: function () {
          this.__anyDirty = this.__allDirty = !0;
        },
        markDirty: function (a, b) {
          if (!this.__allDirty)
            for (
              b = a + b,
                b > this.__registerLookup.get_length() &&
                  (b = this.__registerLookup.get_length());
              a < b;

            ) {
              var c = this.__registerLookup.get(a);
              null != c
                ? ((this.__anyDirty = c.isDirty = !0),
                  (a = c.regIndex + c.regCount))
                : ++a;
            }
        },
        __class__: Cg,
      };
      var pj = function (a, b, c, d) {
        this.__context = a;
        this.__numVertices = b;
        this.__vertexSize = c;
        a = this.__context.gl;
        this.__id = a.createBuffer();
        this.__stride = 4 * this.__vertexSize;
        this.__usage = 0 == bk.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
      };
      g['openfl.display3D.VertexBuffer3D'] = pj;
      pj.__name__ = 'openfl.display3D.VertexBuffer3D';
      pj.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLArrayBuffer(this.__id),
            wc.bufferData(b, b.ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            b *= this.__vertexSize;
            var d = c * this.__vertexSize;
            c = b + d;
            var f = this.__tempFloat32Array;
            if (
              null == this.__tempFloat32Array ||
              this.__tempFloat32Array.length < d
            )
              ((this.__tempFloat32Array =
                null != d ? new Float32Array(d) : null),
                null != f && this.__tempFloat32Array.set(f));
            for (d = b; d < c; )
              ((f = d++), (this.__tempFloat32Array[f - b] = a.get(f)));
            this.uploadFromTypedArray(
              qg.toArrayBufferView(this.__tempFloat32Array),
            );
          }
        },
        __class__: pj,
      };
      var Lc = function () {};
      g['openfl.display3D._internal.AGALConverter'] = Lc;
      Lc.__name__ = 'openfl.display3D._internal.AGALConverter';
      Lc.prefixFromType = function (a, b) {
        switch (a) {
          case 0:
            return 'va';
          case 1:
            return b == Td.VERTEX ? 'vc' : 'fc';
          case 2:
            return b == Td.VERTEX ? 'vt' : 'ft';
          case 3:
            return 'output_';
          case 4:
            return 'v';
          case 5:
            return 'sampler';
          default:
            throw new Dc('Invalid data!');
        }
      };
      Lc.readUInt64 = function (a) {
        var b = a.readInt();
        a = a.readInt();
        return new ab(a, b);
      };
      Lc.convertToGLSL = function (a, b) {
        a.position = 0;
        a.__endian = 1;
        var c = a.readByte() & 255;
        if (176 == c) return a.readUTF();
        if (160 != c) throw new Dc('Magic value must be 0xA0, may not be AGAL');
        var d = a.readInt();
        if (1 != d) throw new Dc('Version must be 1');
        if (161 != (a.readByte() & 255))
          throw new Dc('Shader type ID must be 0xA1');
        c = 0 == (a.readByte() & 255) ? Td.VERTEX : Td.FRAGMENT;
        for (var f = new hi(), h = ''; ; ) {
          d = a.position;
          if (!oa.gt(ld.get_length(a), d)) break;
          var k = a.readInt();
          d = a.readUnsignedInt();
          var g = Lc.readUInt64(a),
            p = Lc.readUInt64(a);
          d = If.parse(d, c);
          g = af.parse(g, c, d.mask);
          var t = af.parse(p, c, d.mask);
          h += '\t';
          switch (k) {
            case 0:
              h += I.string(d.toGLSL() + ' = ' + g.toGLSL() + '; // mov');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 1:
              h += I.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' + ' +
                  t.toGLSL() +
                  '; // add',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 2:
              h += I.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' - ' +
                  t.toGLSL() +
                  '; // sub',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 3:
              h += I.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' * ' +
                  t.toGLSL() +
                  '; // mul',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 4:
              h += I.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' / ' +
                  t.toGLSL() +
                  '; // div',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 5:
              h =
                -1 < g.toGLSL().indexOf('.')
                  ? h +
                    I.string(d.toGLSL() + ' = 1.0 / ' + g.toGLSL() + '; // rcp')
                  : h +
                    I.string(
                      d.toGLSL() + ' = vec4(1) / ' + g.toGLSL() + '; // rcp',
                    );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 6:
              h += I.string(
                d.toGLSL() +
                  ' = min(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '); // min',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 7:
              h += I.string(
                d.toGLSL() +
                  ' = max(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '); // max',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 8:
              h += I.string(
                d.toGLSL() + ' = fract(' + g.toGLSL() + '); // frc',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 9:
              h += I.string(
                d.toGLSL() + ' = sqrt(' + g.toGLSL() + '); // sqrt',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 10:
              h += I.string(
                d.toGLSL() + ' = inversesqrt(' + g.toGLSL() + '); // rsq',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 11:
              h += I.string(
                d.toGLSL() +
                  ' = pow(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '); // pow',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 12:
              h += I.string(d.toGLSL() + ' = log2(' + g.toGLSL() + '); // log');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 13:
              h += I.string(d.toGLSL() + ' = exp2(' + g.toGLSL() + '); // exp');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 14:
              h += I.string(
                d.toGLSL() + ' = normalize(' + g.toGLSL() + '); // normalize',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 15:
              h += I.string(d.toGLSL() + ' = sin(' + g.toGLSL() + '); // sin');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 16:
              h += I.string(d.toGLSL() + ' = cos(' + g.toGLSL() + '); // cos');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 17:
              g.sourceMask = t.sourceMask = 7;
              h += I.string(
                d.toGLSL() +
                  ' = cross(vec3(' +
                  g.toGLSL() +
                  '), vec3(' +
                  t.toGLSL() +
                  ')); // crs',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 18:
              g.sourceMask = t.sourceMask = 7;
              h += I.string(
                d.toGLSL() +
                  ' = vec4(dot(vec3(' +
                  g.toGLSL() +
                  '), vec3(' +
                  t.toGLSL() +
                  ')))' +
                  d.getWriteMask() +
                  '; // dp3',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 19:
              g.sourceMask = t.sourceMask = 15;
              h += I.string(
                d.toGLSL() +
                  ' = vec4(dot(vec4(' +
                  g.toGLSL() +
                  '), vec4(' +
                  t.toGLSL() +
                  ')))' +
                  d.getWriteMask() +
                  '; // dp4',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 20:
              h += I.string(d.toGLSL() + ' = abs(' + g.toGLSL() + '); // abs');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 21:
              h += I.string(d.toGLSL() + ' = -' + g.toGLSL() + '; // neg');
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 22:
              h += I.string(
                d.toGLSL() +
                  ' = clamp(' +
                  g.toGLSL() +
                  ', 0.0, 1.0); // saturate',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              break;
            case 23:
              k = f.getRegisterUsage(t);
              k != V.VECTOR_4 && k != V.VECTOR_4_ARRAY
                ? ((h += I.string(
                    d.toGLSL() +
                      ' = ' +
                      g.toGLSL() +
                      ' * mat3(' +
                      t.toGLSL(!1) +
                      '); // m33',
                  )),
                  f.addDR(d, V.VECTOR_4),
                  f.addSR(g, V.VECTOR_4),
                  f.addSR(t, V.MATRIX_4_4))
                : ((g.sourceMask = t.sourceMask = 7),
                  (h += I.string(
                    d.toGLSL() +
                      ' = vec3(dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 0) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 1) +
                      '),dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 2) +
                      ')); // m33',
                  )),
                  f.addDR(d, V.VECTOR_4),
                  f.addSR(g, V.VECTOR_4),
                  f.addSR(t, V.VECTOR_4, 0),
                  f.addSR(t, V.VECTOR_4, 1),
                  f.addSR(t, V.VECTOR_4, 2));
              break;
            case 24:
              k = f.getRegisterUsage(t);
              k != V.VECTOR_4 && k != V.VECTOR_4_ARRAY
                ? ((h += I.string(
                    d.toGLSL() +
                      ' = ' +
                      g.toGLSL() +
                      ' * ' +
                      t.toGLSL(!1) +
                      '; // m44',
                  )),
                  f.addDR(d, V.VECTOR_4),
                  f.addSR(g, V.VECTOR_4),
                  f.addSR(t, V.MATRIX_4_4))
                : ((g.sourceMask = t.sourceMask = 15),
                  (h += I.string(
                    d.toGLSL() +
                      ' = vec4(dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 0) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 1) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 2) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 3) +
                      ')); // m44',
                  )),
                  f.addDR(d, V.VECTOR_4),
                  f.addSR(g, V.VECTOR_4),
                  f.addSR(t, V.VECTOR_4, 0),
                  f.addSR(t, V.VECTOR_4, 1),
                  f.addSR(t, V.VECTOR_4, 2),
                  f.addSR(t, V.VECTOR_4, 3));
              break;
            case 25:
              d.mask &= 7;
              k = f.getRegisterUsage(t);
              k != V.VECTOR_4 && k != V.VECTOR_4_ARRAY
                ? ((h += I.string(
                    d.toGLSL() +
                      ' = ' +
                      g.toGLSL() +
                      ' * ' +
                      t.toGLSL(!1) +
                      '; // m34',
                  )),
                  f.addDR(d, V.VECTOR_4),
                  f.addSR(g, V.VECTOR_4),
                  f.addSR(t, V.MATRIX_4_4))
                : ((g.sourceMask = t.sourceMask = 15),
                  (h += I.string(
                    d.toGLSL() +
                      ' = vec3(dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 0) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 1) +
                      '),dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 2) +
                      ')); // m34',
                  )),
                  f.addDR(d, V.VECTOR_4),
                  f.addSR(g, V.VECTOR_4),
                  f.addSR(t, V.VECTOR_4, 0),
                  f.addSR(t, V.VECTOR_4, 1),
                  f.addSR(t, V.VECTOR_4, 2));
              break;
            case 39:
              g.sourceMask = 15;
              h += I.string(
                'if (any(lessThan(' + g.toGLSL() + ', vec4(0)))) discard;',
              );
              f.addSR(g, V.VECTOR_4);
              break;
            case 40:
              t = Jf.parse(p, c);
              switch (t.d) {
                case 0:
                  2 == t.t
                    ? ((g.sourceMask = 3),
                      f.addSaR(t, V.SAMPLER_2D_ALPHA),
                      (h += I.string(
                        'if (' + t.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (h += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = vec4(texture2D(' +
                          t.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          ').xyz, texture2D(' +
                          t.toGLSL() +
                          '_alpha, ' +
                          g.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (h += '\t} else {\n'),
                      (h += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = texture2D(' +
                          t.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex\n',
                      )),
                      (h += '\t}'))
                    : ((g.sourceMask = 3),
                      f.addSaR(t, V.SAMPLER_2D),
                      (h += I.string(
                        d.toGLSL() +
                          ' = texture2D(' +
                          t.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex',
                      )));
                  break;
                case 1:
                  2 == t.t
                    ? ((g.sourceMask = 7),
                      f.addSaR(t, V.SAMPLER_CUBE_ALPHA),
                      (h += I.string(
                        'if (' + t.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (h += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = vec4(textureCube(' +
                          t.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          ').xyz, textureCube(' +
                          t.toGLSL() +
                          '_alpha, ' +
                          g.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (h += '\t} else {\n'),
                      (h += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = textureCube(' +
                          t.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex',
                      )),
                      (h += '\t}'))
                    : ((g.sourceMask = 7),
                      (h += I.string(
                        d.toGLSL() +
                          ' = textureCube(' +
                          t.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex',
                      )),
                      f.addSaR(t, V.SAMPLER_CUBE));
              }
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              null != b && (b[t.n] = t.toSamplerState());
              break;
            case 41:
              g.sourceMask = t.sourceMask = 15;
              h += I.string(
                d.toGLSL() +
                  ' = vec4(greaterThanEqual(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // ste',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 42:
              g.sourceMask = t.sourceMask = 15;
              h += I.string(
                d.toGLSL() +
                  ' = vec4(lessThan(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // slt',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 44:
              g.sourceMask = t.sourceMask = 15;
              h += I.string(
                d.toGLSL() +
                  ' = vec4(equal(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // seq',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            case 45:
              g.sourceMask = t.sourceMask = 15;
              h += I.string(
                d.toGLSL() +
                  ' = vec4(notEqual(' +
                  g.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // sne',
              );
              f.addDR(d, V.VECTOR_4);
              f.addSR(g, V.VECTOR_4);
              f.addSR(t, V.VECTOR_4);
              break;
            default:
              throw new Dc('Opcode ' + k);
          }
          h += '\n';
        }
        null == Lc.limitedProfile &&
          ((d = ce.context.getParameter(7938)),
          (Lc.limitedProfile =
            -1 < d.indexOf('OpenGL ES') || -1 < d.indexOf('WebGL')));
        a =
          '' +
          I.string(
            '// AGAL ' + (c == Td.VERTEX ? 'vertex' : 'fragment') + ' shader\n',
          );
        a = Lc.limitedProfile
          ? a +
            '#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n'
          : a + '#version 120\n';
        a += I.string(f.toGLSL(!1));
        c == Td.VERTEX && (a += 'uniform vec4 vcPositionScale;\n');
        a = a + 'void main() {\n' + I.string(f.toGLSL(!0));
        a += I.string(h);
        c == Td.VERTEX && (a += '\tgl_Position *= vcPositionScale;\n');
        return a + '}\n';
      };
      var If = function () {};
      g['openfl.display3D._internal._AGALConverter.DestRegister'] = If;
      If.__name__ = 'openfl.display3D._internal._AGALConverter.DestRegister';
      If.parse = function (a, b) {
        var c = new If();
        c.programType = b;
        c.type = (a >>> 24) & 15;
        c.mask = (a >>> 16) & 15;
        c.n = a & 65535;
        return c;
      };
      If.prototype = {
        getWriteMask: function () {
          var a = '.';
          0 != (this.mask & 1) && (a += 'x');
          0 != (this.mask & 2) && (a += 'y');
          0 != (this.mask & 4) && (a += 'z');
          0 != (this.mask & 8) && (a += 'w');
          return a;
        },
        toGLSL: function (a) {
          null == a && (a = !0);
          var b =
            3 == this.type
              ? this.programType == Td.VERTEX
                ? 'gl_Position'
                : 'gl_FragColor'
              : Lc.prefixFromType(this.type, this.programType) + this.n;
          a && 15 != this.mask && (b += this.getWriteMask());
          return b;
        },
        __class__: If,
      };
      var Td = (F['openfl.display3D._internal._AGALConverter.ProgramType'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.ProgramType',
        __constructs__: null,
        VERTEX: {
          _hx_name: 'VERTEX',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: q,
        },
        FRAGMENT: {
          _hx_name: 'FRAGMENT',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: q,
        },
      });
      Td.__constructs__ = [Td.VERTEX, Td.FRAGMENT];
      var hi = function () {
        this.mEntries = [];
      };
      g['openfl.display3D._internal.RegisterMap'] = hi;
      hi.__name__ = 'openfl.display3D._internal.RegisterMap';
      hi.prototype = {
        add: function (a, b, c, d) {
          for (var f = 0, h = this.mEntries; f < h.length; ) {
            var k = h[f];
            ++f;
            if (k.type == a && k.name == b && k.number == c) {
              if (k.usage != d)
                throw new Dc(
                  'Cannot use register in multiple ways yet (mat4/vec4)',
                );
              return;
            }
          }
          k = new qj();
          k.type = a;
          k.name = b;
          k.number = c;
          k.usage = d;
          this.mEntries.push(k);
        },
        addDR: function (a, b) {
          this.add(a.type, a.toGLSL(!1), a.n, b);
        },
        addSaR: function (a, b) {
          this.add(a.type, a.toGLSL(), a.n, b);
        },
        addSR: function (a, b, c) {
          null == c && (c = 0);
          0 != a.d
            ? (this.add(
                a.itype,
                Lc.prefixFromType(a.itype, a.programType) + a.n,
                a.n,
                V.VECTOR_4,
              ),
              this.add(
                a.type,
                Lc.prefixFromType(a.type, a.programType) + a.o,
                a.o,
                V.VECTOR_4_ARRAY,
              ))
            : this.add(a.type, a.toGLSL(!1, c), a.n + c, b);
        },
        getRegisterUsage: function (a) {
          return 0 != a.d
            ? V.VECTOR_4_ARRAY
            : this.getUsage(a.type, a.toGLSL(!1), a.n);
        },
        getUsage: function (a, b, c) {
          for (var d = 0, f = this.mEntries; d < f.length; ) {
            var h = f[d];
            ++d;
            if (h.type == a && h.name == b && h.number == c) return h.usage;
          }
          return V.UNUSED;
        },
        toGLSL: function (a) {
          this.mEntries.sort(function (a, b) {
            return a.number - b.number;
          });
          this.mEntries.sort(function (a, b) {
            return Ua.__cast(a.type, Wj) - Ua.__cast(b.type, Wj);
          });
          for (var b = '', c = 0, d = this.mEntries.length; c < d; ) {
            var f = c++;
            f = this.mEntries[f];
            if (!((a && 2 != f.type) || (!a && 2 == f.type)) && 3 != f.type) {
              switch (f.type) {
                case 0:
                  b += 'attribute ';
                  break;
                case 1:
                  b += 'uniform ';
                  break;
                case 2:
                  b += '\t';
                  break;
                case 3:
                  break;
                case 4:
                  b += 'varying ';
                  break;
                case 5:
                  b += 'uniform ';
                  break;
                default:
                  throw new Dc();
              }
              switch (f.usage._hx_index) {
                case 0:
                  Na.info('Missing switch patten: RegisterUsage.UNUSED', {
                    fileName: 'openfl/display3D/_internal/AGALConverter.hx',
                    lineNumber: 751,
                    className: 'openfl.display3D._internal.RegisterMap',
                    methodName: 'toGLSL',
                  });
                  break;
                case 1:
                  b += 'vec4 ';
                  break;
                case 2:
                  b += 'mat4 ';
                  break;
                case 3:
                  b += 'sampler2D ';
                  break;
                case 5:
                  b += 'samplerCube ';
                  break;
                case 7:
                  b += 'vec4 ';
              }
              f.usage == V.SAMPLER_2D_ALPHA
                ? ((b += 'sampler2D '),
                  (b += I.string(f.name)),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'sampler2D '),
                  (b += I.string(f.name + '_alpha')),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'bool '),
                  (b += I.string(f.name + '_alphaEnabled')))
                : f.usage == V.SAMPLER_CUBE_ALPHA
                  ? ((b += 'samplerCube '),
                    (b += I.string(f.name)),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'samplerCube '),
                    (b += I.string(f.name + '_alpha')),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'bool '),
                    (b += I.string(f.name + '_alphaEnabled')))
                  : (b =
                      f.usage == V.VECTOR_4_ARRAY
                        ? b + I.string(f.name + '[128]')
                        : b + I.string(f.name));
              b += ';\n';
            }
          }
          return b;
        },
        __class__: hi,
      };
      var qj = function () {};
      g['openfl.display3D._internal._AGALConverter.RegisterMapEntry'] = qj;
      qj.__name__ =
        'openfl.display3D._internal._AGALConverter.RegisterMapEntry';
      qj.prototype = { __class__: qj };
      var V = (F['openfl.display3D._internal._AGALConverter.RegisterUsage'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
        __constructs__: null,
        UNUSED: {
          _hx_name: 'UNUSED',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        VECTOR_4: {
          _hx_name: 'VECTOR_4',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        MATRIX_4_4: {
          _hx_name: 'MATRIX_4_4',
          _hx_index: 2,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_2D: {
          _hx_name: 'SAMPLER_2D',
          _hx_index: 3,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_2D_ALPHA: {
          _hx_name: 'SAMPLER_2D_ALPHA',
          _hx_index: 4,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_CUBE: {
          _hx_name: 'SAMPLER_CUBE',
          _hx_index: 5,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        SAMPLER_CUBE_ALPHA: {
          _hx_name: 'SAMPLER_CUBE_ALPHA',
          _hx_index: 6,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
        VECTOR_4_ARRAY: {
          _hx_name: 'VECTOR_4_ARRAY',
          _hx_index: 7,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: q,
        },
      });
      V.__constructs__ = [
        V.UNUSED,
        V.VECTOR_4,
        V.MATRIX_4_4,
        V.SAMPLER_2D,
        V.SAMPLER_2D_ALPHA,
        V.SAMPLER_CUBE,
        V.SAMPLER_CUBE_ALPHA,
        V.VECTOR_4_ARRAY,
      ];
      var Jf = function () {};
      g['openfl.display3D._internal._AGALConverter.SamplerRegister'] = Jf;
      Jf.__name__ = 'openfl.display3D._internal._AGALConverter.SamplerRegister';
      Jf.parse = function (a, b) {
        var c = new Jf();
        c.programType = b;
        b = 60;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.f = b;
        b = 56;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.m = b;
        b = 52;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.w = b;
        b = 48;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.s = b;
        b = 44;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.d = b;
        b = 40;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.t = b;
        b = 32;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.type = b;
        b = 16;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        c.b = b;
        b = a.low & 65535;
        c.n = b;
        return c;
      };
      Jf.prototype = {
        toGLSL: function () {
          return Lc.prefixFromType(this.type, this.programType) + this.n;
        },
        toSamplerState: function () {
          switch (this.f) {
            case 0:
              var a = 5;
              break;
            case 1:
              a = 4;
              break;
            default:
              throw new Dc();
          }
          switch (this.m) {
            case 0:
              var b = 2;
              break;
            case 1:
              b = 1;
              break;
            case 2:
              b = 0;
              break;
            default:
              throw new Dc();
          }
          switch (this.w) {
            case 0:
              var c = 0;
              break;
            case 1:
              c = 2;
              break;
            default:
              throw new Dc();
          }
          return new $e(
            c,
            a,
            b,
            ((this.b << 24) >> 24) / 8,
            4 == (this.s & 4),
            1 == (this.s & 1),
            2 == this.t,
          );
        },
        __class__: Jf,
      };
      var af = function () {};
      g['openfl.display3D._internal._AGALConverter.SourceRegister'] = af;
      af.__name__ = 'openfl.display3D._internal._AGALConverter.SourceRegister';
      af.parse = function (a, b, c) {
        var d = new af();
        d.programType = b;
        b = 63;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 1;
        d.d = b;
        b = 48;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 3;
        d.q = b;
        b = 40;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.itype = b;
        b = 32;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.type = b;
        b = 24;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.s = b;
        b = 16;
        b =
          0 == b
            ? new ab(a.high, a.low)
            : 32 > b
              ? new ab(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new ab(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.o = b;
        b = a.low & 65535;
        d.n = b;
        d.sourceMask = c;
        return d;
      };
      af.prototype = {
        toGLSL: function (a, b) {
          null == b && (b = 0);
          null == a && (a = !0);
          if (3 == this.type)
            return this.programType == Td.VERTEX
              ? 'gl_Position'
              : 'gl_FragColor';
          var c = 228 == this.s && 15 == this.sourceMask,
            d = '';
          if (5 != this.type && !c) {
            if (0 != (this.sourceMask & 1))
              switch (this.s & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 2))
              switch ((this.s >> 2) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 4))
              switch ((this.s >> 4) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 8))
              switch ((this.s >> 6) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
          }
          c = Lc.prefixFromType(this.type, this.programType);
          if (0 == this.d) c += this.n + b;
          else {
            c += this.o;
            var f = '';
            switch (this.q) {
              case 0:
                f = 'x';
                break;
              case 1:
                f = 'y';
                break;
              case 2:
                f = 'z';
                break;
              case 3:
                f = 'w';
            }
            f =
              Lc.prefixFromType(this.itype, this.programType) +
              this.n +
              '.' +
              f;
            c += '[ int(' + f + ') +' + b + ']';
          }
          a && '' != d && (c += '.' + d);
          return c;
        },
        __class__: af,
      };
      var Ag = function () {
        this.backBufferEnableDepthAndStencil = !1;
        this.blendDestinationAlphaFactor = 9;
        this.blendSourceAlphaFactor = 2;
        this.blendDestinationRGBFactor = 9;
        this.blendSourceRGBFactor = 2;
        this.colorMaskAlpha =
          this.colorMaskBlue =
          this.colorMaskGreen =
          this.colorMaskRed =
            !0;
        this.culling = 3;
        this.depthCompareMode = 4;
        this.depthMask = !0;
        this.samplerStates = [];
        this.scissorRectangle = new qa();
        this.stencilCompareMode = 0;
        this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
        this.stencilReadMask = 255;
        this.stencilReferenceValue = 0;
        this.stencilTriangleFace = 2;
        this.stencilWriteMask = 255;
        this.textures = [];
        this.__frontFaceGLCCW = !0;
        this.__glBlendEquation = 32774;
      };
      g['openfl.display3D._internal.Context3DState'] = Ag;
      Ag.__name__ = 'openfl.display3D._internal.Context3DState';
      Ag.prototype = { __class__: Ag };
      var xb = function (a) {
        ma.call(this);
        this.__context = a;
        var b = this.__context.gl;
        this.__textureID = b.createTexture();
        this.__textureContext = this.__context.__context;
        if (null == xb.__supportsBGRA) {
          xb.__textureInternalFormat = b.RGBA;
          xb.__supportsBGRA = !1;
          xb.__textureFormat = b.RGBA;
          xb.__compressedFormats = new ac();
          xb.__compressedFormatsAlpha = new ac();
          a = b.getExtension('WEBGL_compressed_texture_s3tc');
          var c = b.getExtension('WEBGL_compressed_texture_etc1');
          b = b.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
          if (null != a) {
            var d = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            xb.__compressedFormats.h[0] = d;
            d = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            xb.__compressedFormatsAlpha.h[0] = d;
          }
          null != c &&
            ((d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (xb.__compressedFormats.h[2] = d),
            (d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (xb.__compressedFormatsAlpha.h[2] = d));
          null != b &&
            ((d = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG),
            (xb.__compressedFormats.h[1] = d),
            (d = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG),
            (xb.__compressedFormatsAlpha.h[1] = d));
        }
        this.__internalFormat = xb.__textureInternalFormat;
        this.__format = xb.__textureFormat;
      };
      g['openfl.display3D.textures.TextureBase'] = xb;
      xb.__name__ = 'openfl.display3D.textures.TextureBase';
      xb.__super__ = ma;
      xb.prototype = u(ma.prototype, {
        dispose: function () {
          var a = this.__context.gl;
          null != this.__alphaTexture &&
            (this.__alphaTexture.dispose(), (this.__alphaTexture = null));
          null != this.__textureID &&
            (a.deleteTexture(this.__textureID), (this.__textureID = null));
          null != this.__glFramebuffer &&
            (a.deleteFramebuffer(this.__glFramebuffer),
            (this.__glFramebuffer = null));
          null != this.__glDepthRenderbuffer &&
            (a.deleteRenderbuffer(this.__glDepthRenderbuffer),
            (this.__glDepthRenderbuffer = null));
          null != this.__glStencilRenderbuffer &&
            (a.deleteRenderbuffer(this.__glStencilRenderbuffer),
            (this.__glStencilRenderbuffer = null));
        },
        __getGLFramebuffer: function (a, b, c) {
          b = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = b.createFramebuffer()),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            b.framebufferTexture2D(
              b.FRAMEBUFFER,
              b.COLOR_ATTACHMENT0,
              b.TEXTURE_2D,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                Na.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    c +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 201,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )));
          a &&
            null == this.__glDepthRenderbuffer &&
            (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            0 != ob.__glDepthStencil
              ? ((this.__glStencilRenderbuffer = this.__glDepthRenderbuffer =
                  b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  ob.__glDepthStencil,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ))
              : ((this.__glDepthRenderbuffer = b.createRenderbuffer()),
                (this.__glStencilRenderbuffer = b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.DEPTH_COMPONENT16,
                  this.__width,
                  this.__height,
                ),
                b.bindRenderbuffer(
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                ),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.STENCIL_INDEX8,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                )),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                Na.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    c +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 239,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )),
            b.bindRenderbuffer(b.RENDERBUFFER, null));
          return this.__glFramebuffer;
        },
        __getTexture: function () {
          return this.__textureID;
        },
        __setSamplerState: function (a) {
          if (!a.equals(this.__samplerState)) {
            var b = this.__context.gl;
            this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP
              ? this.__context.__bindGLTextureCubeMap(this.__textureID)
              : this.__context.__bindGLTexture2D(this.__textureID);
            var c;
            switch (a.wrap) {
              case 0:
                var d = (c = b.CLAMP_TO_EDGE);
                break;
              case 1:
                c = b.CLAMP_TO_EDGE;
                d = b.REPEAT;
                break;
              case 2:
                d = c = b.REPEAT;
                break;
              case 3:
                c = b.REPEAT;
                d = b.CLAMP_TO_EDGE;
                break;
              default:
                throw new Sb('wrap bad enum');
            }
            var f = 5 == a.filter ? b.NEAREST : b.LINEAR;
            switch (a.mipfilter) {
              case 0:
                var h =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_LINEAR
                    : b.LINEAR_MIPMAP_LINEAR;
                break;
              case 1:
                h =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_NEAREST
                    : b.LINEAR_MIPMAP_NEAREST;
                break;
              case 2:
                h = 5 == a.filter ? b.NEAREST : b.LINEAR;
                break;
              default:
                throw new Sb('mipfiter bad enum');
            }
            b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, h);
            b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, f);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
            null == this.__samplerState && (this.__samplerState = a.clone());
            this.__samplerState.copyFrom(a);
            return !0;
          }
          return !1;
        },
        __uploadFromImage: function (a) {
          var b = this.__context.gl,
            c;
          if (this.__textureTarget == b.TEXTURE_2D) {
            if (1 == a.buffer.bitsPerPixel) var d = (c = b.ALPHA);
            else ((c = xb.__textureInternalFormat), (d = xb.__textureFormat));
            this.__context.__bindGLTexture2D(this.__textureID);
            a.type == Kc.DATA || a.get_premultiplied()
              ? !a.get_premultiplied() &&
                a.get_transparent() &&
                b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1)
              : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
            a.type == Kc.DATA
              ? wc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  a.buffer.width,
                  a.buffer.height,
                  0,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_data(),
                )
              : wc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_src(),
                );
            this.__context.__bindGLTexture2D(null);
          }
        },
        __class__: xb,
      });
      var fi = function (a, b, c, d, f) {
        xb.call(this, a);
        this.__width = this.__height = this.__size = b;
        this.__optimizeForRenderToTexture = d;
        this.__streamingLevels = f;
        this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
        this.__uploadedSides = 0;
      };
      g['openfl.display3D.textures.CubeTexture'] = fi;
      fi.__name__ = 'openfl.display3D.textures.CubeTexture';
      fi.__super__ = xb;
      fi.prototype = u(xb.prototype, {
        __getGLFramebuffer: function (a, b, c) {
          var d = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = d.createFramebuffer()),
            (this.__framebufferSurface = -1));
          if (
            this.__framebufferSurface != c &&
            ((this.__framebufferSurface = c),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            d.framebufferTexture2D(
              d.FRAMEBUFFER,
              d.COLOR_ATTACHMENT0,
              d.TEXTURE_CUBE_MAP_POSITIVE_X + c,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking)
          ) {
            var f = d.checkFramebufferStatus(d.FRAMEBUFFER);
            f != d.FRAMEBUFFER_COMPLETE &&
              Na.error(
                'Error: Context3D.setRenderToTexture status:' +
                  f +
                  ' width:' +
                  this.__width +
                  ' height:' +
                  this.__height,
                {
                  fileName: 'openfl/display3D/textures/CubeTexture.hx',
                  lineNumber: 279,
                  className: 'openfl.display3D.textures.CubeTexture',
                  methodName: '__getGLFramebuffer',
                },
              );
          }
          return xb.prototype.__getGLFramebuffer.call(this, a, b, c);
        },
        __setSamplerState: function (a) {
          if (xb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_CUBE_MAP),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != ob.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > ob.__glMaxTextureMaxAnisotropy &&
                (a = ob.__glMaxTextureMaxAnisotropy);
              b.texParameterf(
                b.TEXTURE_CUBE_MAP,
                ob.__glTextureMaxAnisotropy,
                a,
              );
            }
            return !0;
          }
          return !1;
        },
        __class__: fi,
      });
      var Bg = function (a, b, c, d, f) {
        xb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = f;
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
        this.uploadFromTypedArray(null);
        f && this.__getGLFramebuffer(!0, 0, 0);
      };
      g['openfl.display3D.textures.RectangleTexture'] = Bg;
      Bg.__name__ = 'openfl.display3D.textures.RectangleTexture';
      Bg.__super__ = xb;
      Bg.prototype = u(xb.prototype, {
        uploadFromTypedArray: function (a) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          wc.texImage2D(
            b,
            this.__textureTarget,
            0,
            this.__internalFormat,
            this.__width,
            this.__height,
            0,
            this.__format,
            b.UNSIGNED_BYTE,
            a,
          );
          this.__context.__bindGLTexture2D(null);
        },
        __setSamplerState: function (a) {
          if (xb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            if (0 != ob.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > ob.__glMaxTextureMaxAnisotropy &&
                (a = ob.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, ob.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: Bg,
      });
      var ei = function (a, b, c, d, f, h) {
        xb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = f;
        this.__streamingLevels = h;
        a = this.__context.gl;
        this.__textureTarget = a.TEXTURE_2D;
        this.__context.__bindGLTexture2D(this.__textureID);
        wc.texImage2D(
          a,
          this.__textureTarget,
          0,
          this.__internalFormat,
          this.__width,
          this.__height,
          0,
          this.__format,
          a.UNSIGNED_BYTE,
          null,
        );
        this.__context.__bindGLTexture2D(null);
        f && this.__getGLFramebuffer(!0, 0, 0);
      };
      g['openfl.display3D.textures.Texture'] = ei;
      ei.__name__ = 'openfl.display3D.textures.Texture';
      ei.__super__ = xb;
      ei.prototype = u(xb.prototype, {
        __setSamplerState: function (a) {
          if (xb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_2D),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != ob.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > ob.__glMaxTextureMaxAnisotropy &&
                (a = ob.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, ob.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: ei,
      });
      var rj = function (a) {
        xb.call(this, a);
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
      };
      g['openfl.display3D.textures.VideoTexture'] = rj;
      rj.__name__ = 'openfl.display3D.textures.VideoTexture';
      rj.__super__ = xb;
      rj.prototype = u(xb.prototype, {
        dispose: function () {
          null != this.__netStream &&
            null != this.__netStream.__video &&
            this.__netStream.__video.removeEventListener(
              'timeupdate',
              l(this, this.__onTimeUpdate),
            );
          xb.prototype.dispose.call(this);
        },
        __onTimeUpdate: function (a) {
          null != this.__netStream &&
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState &&
            this.__textureReady();
        },
        __getTexture: function () {
          if (
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState
          ) {
            var a = this.__context.gl;
            this.__context.__bindGLTexture2D(this.__textureID);
            wc.texImage2D(
              a,
              a.TEXTURE_2D,
              0,
              a.RGBA,
              a.RGBA,
              a.UNSIGNED_BYTE,
              this.__netStream.__video,
            );
            this.__cacheTime = this.__netStream.__video.currentTime;
          }
          return this.__textureID;
        },
        __textureReady: function () {
          this.videoWidth = this.__netStream.__video.videoWidth;
          this.videoHeight = this.__netStream.__video.videoHeight;
          var a = new va('textureReady');
          this.dispatchEvent(a);
        },
        __class__: rj,
      });
      var Sb = function (a, b) {
        null == b && (b = 0);
        null == a && (a = '');
        W.call(this, a);
        this.errorID = b;
        this.name = 'Error';
        this.__skipStack++;
      };
      g['openfl.errors.Error'] = Sb;
      Sb.__name__ = 'openfl.errors.Error';
      Sb.__super__ = W;
      Sb.prototype = u(W.prototype, {
        toString: function () {
          return null != this.get_message() ? this.get_message() : 'Error';
        },
        __class__: Sb,
      });
      var ef = function (a) {
        null == a && (a = '');
        Sb.call(this, a);
        this.name = 'ArgumentError';
        this.__skipStack++;
      };
      g['openfl.errors.ArgumentError'] = ef;
      ef.__name__ = 'openfl.errors.ArgumentError';
      ef.__super__ = Sb;
      ef.prototype = u(Sb.prototype, { __class__: ef });
      var Kf = function (a) {
        null == a && (a = '');
        Sb.call(this, a);
        this.name = 'IOError';
        this.__skipStack++;
      };
      g['openfl.errors.IOError'] = Kf;
      Kf.__name__ = 'openfl.errors.IOError';
      Kf.__super__ = Sb;
      Kf.prototype = u(Sb.prototype, { __class__: Kf });
      var Dg = function (a, b) {
        Kf.call(this, 'End of file was encountered');
        this.name = 'EOFError';
        this.errorID = 2030;
        this.__skipStack++;
      };
      g['openfl.errors.EOFError'] = Dg;
      Dg.__name__ = 'openfl.errors.EOFError';
      Dg.__super__ = Kf;
      Dg.prototype = u(Kf.prototype, { __class__: Dg });
      var Dc = function (a) {
        null == a && (a = '');
        Sb.call(this, a, 0);
        this.name = 'IllegalOperationError';
        this.__skipStack++;
      };
      g['openfl.errors.IllegalOperationError'] = Dc;
      Dc.__name__ = 'openfl.errors.IllegalOperationError';
      Dc.__super__ = Sb;
      Dc.prototype = u(Sb.prototype, { __class__: Dc });
      var Vf = function (a) {
        null == a && (a = '');
        Sb.call(this, a, 0);
        this.name = 'RangeError';
        this.__skipStack++;
      };
      g['openfl.errors.RangeError'] = Vf;
      Vf.__name__ = 'openfl.errors.RangeError';
      Vf.__super__ = Sb;
      Vf.prototype = u(Sb.prototype, { __class__: Vf });
      var Je = function (a) {
        null == a && (a = '');
        Sb.call(this, a, 0);
        this.name = 'TypeError';
        this.__skipStack++;
      };
      g['openfl.errors.TypeError'] = Je;
      Je.__name__ = 'openfl.errors.TypeError';
      Je.__super__ = Sb;
      Je.prototype = u(Sb.prototype, { __class__: Je });
      var va = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.eventPhase = 2;
      };
      g['openfl.events.Event'] = va;
      va.__name__ = 'openfl.events.Event';
      va.prototype = {
        isDefaultPrevented: function () {
          return this.__preventDefault;
        },
        preventDefault: function () {
          this.cancelable && (this.__preventDefault = !0);
        },
        stopPropagation: function () {
          this.__isCanceled = !0;
        },
        __class__: va,
      };
      var Lf = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.activating = d;
      };
      g['openfl.events.ActivityEvent'] = Lf;
      Lf.__name__ = 'openfl.events.ActivityEvent';
      Lf.__super__ = va;
      Lf.prototype = u(va.prototype, { __class__: Lf });
      var Rd = function (a, b, c, d) {
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.text = d;
      };
      g['openfl.events.TextEvent'] = Rd;
      Rd.__name__ = 'openfl.events.TextEvent';
      Rd.__super__ = va;
      Rd.prototype = u(va.prototype, { __class__: Rd });
      var pd = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        Rd.call(this, a, b, c, d);
        this.errorID = f;
      };
      g['openfl.events.ErrorEvent'] = pd;
      pd.__name__ = 'openfl.events.ErrorEvent';
      pd.__super__ = Rd;
      pd.prototype = u(Rd.prototype, { __class__: pd });
      var Tf = function (a) {
        this.active = !1;
        this.reset(a);
      };
      g['openfl.events._EventDispatcher.DispatchIterator'] = Tf;
      Tf.__name__ = 'openfl.events._EventDispatcher.DispatchIterator';
      Tf.prototype = {
        copy: function () {
          this.isCopy || ((this.list = this.list.slice()), (this.isCopy = !0));
        },
        hasNext: function () {
          return this.index < this.list.length;
        },
        next: function () {
          return this.list[this.index++];
        },
        remove: function (a, b) {
          if (this.active)
            if (this.isCopy) {
              b = this.index;
              for (var c = this.list.length; b < c; ) {
                var d = b++;
                if (this.list[d] == a) {
                  this.list.splice(d, 1);
                  break;
                }
              }
            } else b < this.index && this.index--;
        },
        reset: function (a) {
          this.list = a;
          this.isCopy = !1;
          this.index = 0;
        },
        start: function () {
          this.active = !0;
        },
        stop: function () {
          this.active = !1;
        },
        __class__: Tf,
      };
      var Ie = function (a, b, c, d) {
        d && Ie.supportsWeakReference
          ? (this.weakRefCallback = new WeakRef(a))
          : (this.callback = a);
        this.useCapture = b;
        this.priority = c;
        this.useWeakReference = d;
      };
      g['openfl.events._EventDispatcher.Listener'] = Ie;
      Ie.__name__ = 'openfl.events._EventDispatcher.Listener';
      Ie.prototype = {
        match: function (a, b) {
          var c = this.callback;
          return null != this.weakRefCallback &&
            ((c = this.weakRefCallback.deref()), null == c)
            ? !1
            : c == a
              ? this.useCapture == b
              : !1;
        },
        __class__: Ie,
      };
      var Ye = function (a, b, c, d, f, h) {
        null == h && (h = 0);
        null == f && (f = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.keyCode = h;
        this.shiftKey = f;
        this.relatedObject = d;
      };
      g['openfl.events.FocusEvent'] = Ye;
      Ye.__name__ = 'openfl.events.FocusEvent';
      Ye.__super__ = va;
      Ye.prototype = u(va.prototype, { __class__: Ye });
      var ke = function (a, b, c, d, f) {
        null == f && (f = !1);
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        Lf.call(this, a, b, c);
        this.fullScreen = d;
        this.interactive = f;
      };
      g['openfl.events.FullScreenEvent'] = ke;
      ke.__name__ = 'openfl.events.FullScreenEvent';
      ke.__super__ = Lf;
      ke.prototype = u(Lf.prototype, { __class__: ke });
      var Mf = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !0);
        va.call(this, a, b, c);
        this.device = d;
      };
      g['openfl.events.GameInputEvent'] = Mf;
      Mf.__name__ = 'openfl.events.GameInputEvent';
      Mf.__super__ = va;
      Mf.prototype = u(va.prototype, { __class__: Mf });
      var Eg = function (a, b, c, d, f) {
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        this.responseHeaders = [];
        this.status = d;
        this.redirected = f;
        va.call(this, a, b, c);
      };
      g['openfl.events.HTTPStatusEvent'] = Eg;
      Eg.__name__ = 'openfl.events.HTTPStatusEvent';
      Eg.__super__ = va;
      Eg.prototype = u(va.prototype, { __class__: Eg });
      var Nf = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !0);
        pd.call(this, a, b, c, d, f);
      };
      g['openfl.events.IOErrorEvent'] = Nf;
      Nf.__name__ = 'openfl.events.IOErrorEvent';
      Nf.__super__ = pd;
      Nf.prototype = u(pd.prototype, { __class__: Nf });
      var ai = function (a, b, c, d, f, h, k, g, p, t, n) {
        null == n && (n = !1);
        null == t && (t = !1);
        null == p && (p = !1);
        null == g && (g = !1);
        null == k && (k = !1);
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.charCode = d;
        this.keyCode = f;
        this.keyLocation = null != h ? h : 0;
        this.ctrlKey = k;
        this.altKey = g;
        this.shiftKey = p;
        this.controlKey = t;
        this.commandKey = n;
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.KeyboardEvent'] = ai;
      ai.__name__ = 'openfl.events.KeyboardEvent';
      ai.__super__ = va;
      ai.prototype = u(va.prototype, { __class__: ai });
      var Cb = function (a, b, c, d, f, h, k, g, p, t, n, m, x, q) {
        null == q && (q = 0);
        null == x && (x = !1);
        null == m && (m = !1);
        null == n && (n = 0);
        null == t && (t = !1);
        null == p && (p = !1);
        null == g && (g = !1);
        null == k && (k = !1);
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        va.call(this, a, b, c);
        this.shiftKey = p;
        this.altKey = g;
        this.ctrlKey = k;
        this.bubbles = b;
        this.relatedObject = h;
        this.delta = n;
        this.localX = d;
        this.localY = f;
        this.buttonDown = t;
        this.commandKey = m;
        this.controlKey = x;
        this.clickCount = q;
        this.isRelatedObjectInaccessible = !1;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.MouseEvent'] = Cb;
      Cb.__name__ = 'openfl.events.MouseEvent';
      Cb.__create = function (a, b, c, d, f, h, k, g) {
        null == g && (g = 0);
        a = new Cb(
          a,
          !0,
          !1,
          h.x,
          h.y,
          null,
          Cb.__ctrlKey,
          Cb.__altKey,
          Cb.__shiftKey,
          Cb.__buttonDown,
          g,
          Cb.__commandKey,
          Cb.__controlKey,
          c,
        );
        a.stageX = d;
        a.stageY = f;
        a.target = k;
        return a;
      };
      Cb.__super__ = va;
      Cb.prototype = u(va.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: Cb,
      });
      var ii = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.info = d;
        va.call(this, a, b, c);
      };
      g['openfl.events.NetStatusEvent'] = ii;
      ii.__name__ = 'openfl.events.NetStatusEvent';
      ii.__super__ = va;
      ii.prototype = u(va.prototype, { __class__: ii });
      var Ue = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.bytesLoaded = d;
        this.bytesTotal = f;
      };
      g['openfl.events.ProgressEvent'] = Ue;
      Ue.__name__ = 'openfl.events.ProgressEvent';
      Ue.__super__ = va;
      Ue.prototype = u(va.prototype, { __class__: Ue });
      var Kg = function (a, b, c, d, f, h) {
        null == h && (h = !0);
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.objectMatrix = d;
        this.objectColorTransform = f;
        this.allowSmoothing = h;
      };
      g['openfl.events.RenderEvent'] = Kg;
      Kg.__name__ = 'openfl.events.RenderEvent';
      Kg.__super__ = va;
      Kg.prototype = u(va.prototype, { __class__: Kg });
      var ji = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.data = new Cc(0);
        this.data.__endian = 1;
        this.position = 0;
      };
      g['openfl.events.SampleDataEvent'] = ji;
      ji.__name__ = 'openfl.events.SampleDataEvent';
      ji.__super__ = va;
      ji.prototype = u(va.prototype, {
        getBufferSize: function () {
          var a =
            (oa.toFloat(ld.get_length(this.data)) / oa.toFloat(4) / 2) | 0;
          if (0 < a) {
            if (0 != a && 0 == (a & (a - 1)) && 2048 <= a && 8192 >= a)
              return ((this.tempBuffer = new Float32Array(2 * a)), a);
            throw new Sb(
              'To be consistent with flash the listener function registered to SampleDataEvent has to provide 2048, 4096 or 8192 samples if targeting HTML5.',
            );
          }
          return 0;
        },
        getSamples: function (a) {
          this.data.position = 0;
          this.tempBuffer = fk.fromBytes(ld.toBytes(this.data));
          this.leftChannel = a.outputBuffer.getChannelData(0);
          this.rightChannel = a.outputBuffer.getChannelData(1);
          for (
            var b = (a = 0),
              c = (oa.toFloat(ld.get_length(this.data)) / oa.toFloat(2)) | 0;
            b < c;

          ) {
            var d = b++;
            this.leftChannel[d] = this.tempBuffer[a++];
            this.rightChannel[d] = this.tempBuffer[a++];
          }
        },
        __class__: ji,
      });
      var ki = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        pd.call(this, a, b, c, d, f);
      };
      g['openfl.events.SecurityErrorEvent'] = ki;
      ki.__name__ = 'openfl.events.SecurityErrorEvent';
      ki.__super__ = pd;
      ki.prototype = u(pd.prototype, { __class__: ki });
      var Of = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        va.call(this, a, b, c);
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.TimerEvent'] = Of;
      Of.__name__ = 'openfl.events.TimerEvent';
      Of.__super__ = va;
      Of.prototype = u(va.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: Of,
      });
      var rd = function (
        a,
        b,
        c,
        d,
        f,
        h,
        k,
        g,
        p,
        t,
        n,
        m,
        x,
        q,
        z,
        G,
        l,
        D,
        w,
        F,
      ) {
        null == G && (G = !1);
        null == z && (z = !1);
        null == q && (q = !1);
        null == x && (x = !1);
        null == m && (m = !1);
        null == t && (t = 0);
        null == p && (p = 0);
        null == g && (g = 0);
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        va.call(this, a, b, c);
        this.touchPointID = d;
        this.isPrimaryTouchPoint = f;
        this.localX = h;
        this.localY = k;
        this.sizeX = g;
        this.sizeY = p;
        this.pressure = t;
        this.relatedObject = n;
        this.ctrlKey = m;
        this.altKey = x;
        this.shiftKey = q;
        this.commandKey = z;
        this.controlKey = G;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.TouchEvent'] = rd;
      rd.__name__ = 'openfl.events.TouchEvent';
      rd.__create = function (a, b, c, d, f, h) {
        a = new rd(a, !0, !1, 0, !0, f.x, f.y, 1, 1, 1);
        a.stageX = c;
        a.stageY = d;
        a.target = h;
        return a;
      };
      rd.__super__ = va;
      rd.prototype = u(va.prototype, { __class__: rd });
      var cf = function (a, b, c, d) {
        null == c && (c = !0);
        null == b && (b = !0);
        pd.call(this, a, b, c);
        this.error = d;
      };
      g['openfl.events.UncaughtErrorEvent'] = cf;
      cf.__name__ = 'openfl.events.UncaughtErrorEvent';
      cf.__super__ = pd;
      cf.prototype = u(pd.prototype, { __class__: cf });
      var Xh = function () {
        this.__enabled = !0;
        ma.call(this);
      };
      g['openfl.events.UncaughtErrorEvents'] = Xh;
      Xh.__name__ = 'openfl.events.UncaughtErrorEvents';
      Xh.__super__ = ma;
      Xh.prototype = u(ma.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          ma.prototype.addEventListener.call(this, a, b, c, d, f);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) && (this.__enabled = !0);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          ma.prototype.removeEventListener.call(this, a, b, c);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) || (this.__enabled = !1);
        },
        __class__: Xh,
      });
      var Fg = function () {
        this.__leftExtension = this.__bottomExtension = 0;
        this.__needSecondBitmapData = !0;
        this.__numShaderPasses = 0;
        this.__preserveObject = !1;
        this.__rightExtension = 0;
        this.__shaderBlendMode = 10;
        this.__topExtension = 0;
        this.__smooth = !0;
      };
      g['openfl.filters.BitmapFilter'] = Fg;
      Fg.__name__ = 'openfl.filters.BitmapFilter';
      Fg.prototype = {
        __applyFilter: function (a, b, c, d) {
          return b;
        },
        __initShader: function (a, b, c) {
          return null;
        },
        __class__: Fg,
      };
      var xc = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        dd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters.BitmapFilterShader'] = xc;
      xc.__name__ = 'openfl.filters.BitmapFilterShader';
      xc.__super__ = dd;
      xc.prototype = u(dd.prototype, { __class__: xc });
      var li = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec4 uColor;\n\t\tuniform float uStrength;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void)\n\t\t{\n            vec4 texel = texture2D(openfl_Texture, vTexCoord);\n\n            vec3 contributions = vec3(0.00443, 0.05399, 0.24197);\n            vec3 top = vec3(\n                texture2D(openfl_Texture, vBlurCoords[0]).a,\n                texture2D(openfl_Texture, vBlurCoords[1]).a,\n                texture2D(openfl_Texture, vBlurCoords[2]).a\n            );\n            vec3 bottom = vec3(\n                texture2D(openfl_Texture, vBlurCoords[3]).a,\n                texture2D(openfl_Texture, vBlurCoords[4]).a,\n                texture2D(openfl_Texture, vBlurCoords[5]).a\n            );\n\n            float a = texel.a * 0.39894;\n\t\t\ta += dot(top, contributions.xyz);\n            a += dot(bottom, contributions.zyx);\n\n\t\t\tgl_FragColor = uColor * clamp(a * uStrength, 0.0, 1.0);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void) {\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\n\t\t\tvec3 offset = vec3(0.5, 0.75, 1.0);\n\t\t\tvec2 r = uRadius / openfl_TextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * offset.z;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * offset.y;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * offset.x;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord + r * offset.x;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * offset.y;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * offset.z;\n\t\t}\n\t');
        xc.call(this);
        this.uRadius.value = [0, 0];
        this.uColor.value = [0, 0, 0, 0];
        this.uStrength.value = [1];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.BlurAlphaShader'] = li;
      li.__name__ = 'openfl.filters._GlowFilter.BlurAlphaShader';
      li.__super__ = xc;
      li.prototype = u(xc.prototype, { __class__: li });
      var mi = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        xc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.CombineKnockoutShader'] = mi;
      mi.__name__ = 'openfl.filters._GlowFilter.CombineKnockoutShader';
      mi.__super__ = xc;
      mi.prototype = u(xc.prototype, { __class__: mi });
      var ni = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = src + glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        xc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.CombineShader'] = ni;
      ni.__name__ = 'openfl.filters._GlowFilter.CombineShader';
      ni.__super__ = xc;
      ni.prototype = u(xc.prototype, { __class__: ni });
      var oi = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * src.a;\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        xc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.InnerCombineKnockoutShader'] = oi;
      oi.__name__ = 'openfl.filters._GlowFilter.InnerCombineKnockoutShader';
      oi.__super__ = xc;
      oi.prototype = u(xc.prototype, { __class__: oi });
      var pi = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = vec4((src.rgb * (1.0 - glow.a)) + (glow.rgb * src.a), src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        xc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.InnerCombineShader'] = pi;
      pi.__name__ = 'openfl.filters._GlowFilter.InnerCombineShader';
      pi.__super__ = xc;
      pi.prototype = u(xc.prototype, { __class__: pi });
      var qi = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tvec4 texel = texture2D(openfl_Texture, vTexCoord);\n\t\t\tgl_FragColor = vec4(texel.rgb, 1.0 - texel.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\t\t}\n\t');
        xc.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.InvertAlphaShader'] = qi;
      qi.__name__ = 'openfl.filters._GlowFilter.InvertAlphaShader';
      qi.__super__ = xc;
      qi.prototype = u(xc.prototype, { __class__: qi });
      var Qc = function (a, b, c, d, f, h, k, g) {
        null == g && (g = !1);
        null == k && (k = !1);
        null == h && (h = 1);
        null == f && (f = 2);
        null == d && (d = 6);
        null == c && (c = 6);
        null == b && (b = 1);
        null == a && (a = 16711680);
        Fg.call(this);
        this.__color = a;
        this.__alpha = b;
        this.__blurX = c;
        this.__blurY = d;
        this.__strength = f;
        this.__inner = k;
        this.__knockout = g;
        this.__quality = h;
        this.__updateSize();
        this.__renderDirty =
          this.__preserveObject =
          this.__needSecondBitmapData =
            !0;
      };
      g['openfl.filters.GlowFilter'] = Qc;
      Qc.__name__ = 'openfl.filters.GlowFilter';
      Qc.__super__ = Fg;
      Qc.prototype = u(Fg.prototype, {
        __applyFilter: function (a, b, c, d) {
          var f = (this.__color >> 16) & 255,
            h = (this.__color >> 8) & 255,
            k = this.__color & 255;
          c = Rb.gaussianBlur(
            a.image,
            b.image,
            c.__toLimeRectangle(),
            d.__toLimeVector2(),
            this.__blurX,
            this.__blurY,
            this.__quality,
            this.__strength,
          );
          c.colorTransform(
            c.get_rect(),
            new Hb(0, 0, 0, this.__alpha, f, h, k, 0).__toLimeColorMatrix(),
          );
          return c == a.image ? a : b;
        },
        __initShader: function (a, b, c) {
          if (this.__inner && 0 == b) return Qc.__invertAlphaShader;
          a = b - (this.__inner ? 1 : 0);
          b = this.__horizontalPasses + this.__verticalPasses;
          if (a < b) {
            var d = Qc.__blurAlphaShader;
            a < this.__horizontalPasses
              ? ((c = 0.5 * Math.pow(0.5, a >> 1)),
                (d.uRadius.value[0] = this.get_blurX() * c),
                (d.uRadius.value[1] = 0))
              : ((c = 0.5 * Math.pow(0.5, (a - this.__horizontalPasses) >> 1)),
                (d.uRadius.value[0] = 0),
                (d.uRadius.value[1] = this.get_blurY() * c));
            d.uColor.value[0] = ((this.get_color() >> 16) & 255) / 255;
            d.uColor.value[1] = ((this.get_color() >> 8) & 255) / 255;
            d.uColor.value[2] = (this.get_color() & 255) / 255;
            d.uColor.value[3] = this.get_alpha();
            d.uStrength.value[0] = a == b - 1 ? this.__strength : 1;
            return d;
          }
          if (this.__inner) {
            if (this.__knockout)
              return (
                (d = Qc.__innerCombineKnockoutShader),
                (d.sourceBitmap.input = c),
                (d.offset.value[0] = 0),
                (d.offset.value[1] = 0),
                d
              );
            d = Qc.__innerCombineShader;
          } else {
            if (this.__knockout)
              return (
                (d = Qc.__combineKnockoutShader),
                (d.sourceBitmap.input = c),
                (d.offset.value[0] = 0),
                (d.offset.value[1] = 0),
                d
              );
            d = Qc.__combineShader;
          }
          d.sourceBitmap.input = c;
          d.offset.value[0] = 0;
          d.offset.value[1] = 0;
          return d;
        },
        __updateSize: function () {
          this.__rightExtension = this.__leftExtension =
            0 < this.__blurX ? Math.ceil(1.5 * this.__blurX) : 0;
          this.__bottomExtension = this.__topExtension =
            0 < this.__blurY ? Math.ceil(1.5 * this.__blurY) : 0;
          this.__calculateNumShaderPasses();
        },
        __calculateNumShaderPasses: function () {
          this.__horizontalPasses =
            0 >= this.__blurX
              ? 0
              : Math.round((this.__quality / 4) * this.__blurX) + 1;
          this.__verticalPasses =
            0 >= this.__blurY
              ? 0
              : Math.round((this.__quality / 4) * this.__blurY) + 1;
          this.__numShaderPasses =
            this.__horizontalPasses +
            this.__verticalPasses +
            (this.__inner ? 2 : 1);
        },
        get_alpha: function () {
          return this.__alpha;
        },
        get_blurX: function () {
          return this.__blurX;
        },
        get_blurY: function () {
          return this.__blurY;
        },
        get_color: function () {
          return this.__color;
        },
        __class__: Qc,
        __properties__: {
          get_color: 'get_color',
          get_blurY: 'get_blurY',
          get_blurX: 'get_blurX',
          get_alpha: 'get_alpha',
        },
      });
      var bi = function (a) {
        null != a && 16 == a.get_length()
          ? (this.rawData = a.concat(null))
          : (this.rawData = X.toFloatVector(
              null,
              null,
              null,
              [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            ));
      };
      g['openfl.geom.Matrix3D'] = bi;
      bi.__name__ = 'openfl.geom.Matrix3D';
      bi.prototype = {
        append: function (a) {
          var b = this.rawData.get(0),
            c = this.rawData.get(4),
            d = this.rawData.get(8),
            f = this.rawData.get(12),
            h = this.rawData.get(1),
            k = this.rawData.get(5),
            g = this.rawData.get(9),
            p = this.rawData.get(13),
            t = this.rawData.get(2),
            n = this.rawData.get(6),
            m = this.rawData.get(10),
            x = this.rawData.get(14),
            q = this.rawData.get(3),
            z = this.rawData.get(7),
            G = this.rawData.get(11),
            l = this.rawData.get(15),
            D = a.rawData.get(0),
            w = a.rawData.get(4),
            F = a.rawData.get(8),
            B = a.rawData.get(12),
            r = a.rawData.get(1),
            u = a.rawData.get(5),
            H = a.rawData.get(9),
            C = a.rawData.get(13),
            ba = a.rawData.get(2),
            ta = a.rawData.get(6),
            I = a.rawData.get(10),
            ra = a.rawData.get(14),
            M = a.rawData.get(3),
            N = a.rawData.get(7),
            oa = a.rawData.get(11);
          a = a.rawData.get(15);
          this.rawData.set(0, b * D + h * w + t * F + q * B);
          this.rawData.set(1, b * r + h * u + t * H + q * C);
          this.rawData.set(2, b * ba + h * ta + t * I + q * ra);
          this.rawData.set(3, b * M + h * N + t * oa + q * a);
          this.rawData.set(4, c * D + k * w + n * F + z * B);
          this.rawData.set(5, c * r + k * u + n * H + z * C);
          this.rawData.set(6, c * ba + k * ta + n * I + z * ra);
          this.rawData.set(7, c * M + k * N + n * oa + z * a);
          this.rawData.set(8, d * D + g * w + m * F + G * B);
          this.rawData.set(9, d * r + g * u + m * H + G * C);
          this.rawData.set(10, d * ba + g * ta + m * I + G * ra);
          this.rawData.set(11, d * M + g * N + m * oa + G * a);
          this.rawData.set(12, f * D + p * w + x * F + l * B);
          this.rawData.set(13, f * r + p * u + x * H + l * C);
          this.rawData.set(14, f * ba + p * ta + x * I + l * ra);
          this.rawData.set(15, f * M + p * N + x * oa + l * a);
        },
        appendTranslation: function (a, b, c) {
          var d = this.rawData;
          d.set(12, d.get(12) + a);
          d = this.rawData;
          d.set(13, d.get(13) + b);
          d = this.rawData;
          d.set(14, d.get(14) + c);
        },
        copyRawDataFrom: function (a, b, c) {
          null == c && (c = !1);
          null == b && (b = 0);
          c && this.transpose();
          for (var d = 0, f = a.get_length() - b; d < f; ) {
            var h = d++;
            this.rawData.set(h, a.get(h + b));
          }
          c && this.transpose();
        },
        identity: function () {
          this.rawData = X.toFloatVector(
            null,
            null,
            null,
            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          );
        },
        transpose: function () {
          var a = this.rawData.copy();
          this.rawData.set(1, a.get(4));
          this.rawData.set(2, a.get(8));
          this.rawData.set(3, a.get(12));
          this.rawData.set(4, a.get(1));
          this.rawData.set(6, a.get(9));
          this.rawData.set(7, a.get(13));
          this.rawData.set(8, a.get(2));
          this.rawData.set(9, a.get(6));
          this.rawData.set(11, a.get(14));
          this.rawData.set(12, a.get(3));
          this.rawData.set(13, a.get(7));
          this.rawData.set(14, a.get(11));
        },
        __class__: bi,
      };
      var Lg = function (a) {
        this.__colorTransform = new Hb();
        this.concatenatedColorTransform = new Hb();
        this.pixelBounds = new qa();
        this.__displayObject = a;
        this.__hasMatrix = !0;
      };
      g['openfl.geom.Transform'] = Lg;
      Lg.__name__ = 'openfl.geom.Transform';
      Lg.prototype = {
        get_colorTransform: function () {
          return this.__colorTransform.__clone();
        },
        get_matrix: function () {
          return this.__hasMatrix
            ? this.__displayObject.__transform.clone()
            : null;
        },
        set_matrix: function (a) {
          if (null == a) return ((this.__hasMatrix = !1), null);
          this.__hasMatrix = !0;
          this.__hasMatrix3D = !1;
          null != this.__displayObject &&
            this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
          return a;
        },
        __setTransform: function (a, b, c, d, f, h) {
          if (null != this.__displayObject) {
            var k = this.__displayObject.__transform;
            if (
              k.a != a ||
              k.b != b ||
              k.c != c ||
              k.d != d ||
              k.tx != f ||
              k.ty != h
            ) {
              var g = 0 == b ? a : Math.sqrt(a * a + b * b);
              var p = 0 == c ? d : Math.sqrt(c * c + d * d);
              this.__displayObject.__scaleX = g;
              this.__displayObject.__scaleY = p;
              g = (180 / Math.PI) * Math.atan2(d, c) - 90;
              g != this.__displayObject.__rotation &&
                ((this.__displayObject.__rotation = g),
                (g *= Math.PI / 180),
                (this.__displayObject.__rotationSine = Math.sin(g)),
                (this.__displayObject.__rotationCosine = Math.cos(g)));
              k.a = a;
              k.b = b;
              k.c = c;
              k.d = d;
              k.tx = f;
              k.ty = h;
              this.__displayObject.__setTransformDirty();
            }
          }
        },
        __class__: Lg,
        __properties__: {
          set_matrix: 'set_matrix',
          get_matrix: 'get_matrix',
          get_colorTransform: 'get_colorTransform',
        },
      };
      var dh = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c;
      };
      g['openfl.geom.Vector3D'] = dh;
      dh.__name__ = 'openfl.geom.Vector3D';
      dh.prototype = { __class__: dh };
      var sj = function (a, b) {
        this.__webAudioContext = null;
        this.__urlLoading = !1;
        ma.call(this, this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.isBuffering = !1;
        this.url = null;
        null != a && this.load(a, b);
        null == a &&
          null != Ud.context &&
          'web' == Ud.context.type &&
          (this.__webAudioContext = Ud.context.web);
      };
      g['openfl.media.Sound'] = sj;
      sj.__name__ = 'openfl.media.Sound';
      sj.__super__ = ma;
      sj.prototype = u(ma.prototype, {
        load: function (a, b) {
          var c = this;
          this.url = a.url;
          this.__urlLoading = !0;
          this.dispatchEvent(new va('open'));
          a = Ca.getLibrary('default');
          if (
            null != a &&
            Object.prototype.hasOwnProperty.call(
              a.cachedAudioBuffers.h,
              this.url,
            )
          )
            ((a = a.cachedAudioBuffers.h[this.url]),
              (b = null != a && null != a.data ? a.data.byteLength : 0),
              this.AudioBuffer_onURLProgress(b, b),
              this.AudioBuffer_onURLLoad(a));
          else
            oc.loadFromFile(this.url)
              .onProgress(l(this, this.AudioBuffer_onURLProgress))
              .onComplete(l(this, this.AudioBuffer_onURLLoad))
              .onError(function (a) {
                c.AudioBuffer_onURLLoad(null);
              });
        },
        AudioBuffer_onURLLoad: function (a) {
          this.__urlLoading = !1;
          null == a
            ? this.dispatchEvent(new Nf('ioError'))
            : ((this.__buffer = a),
              this.dispatchEvent(new va('complete')),
              null != this.__pendingSoundChannel &&
                ((this.__pendingAudioSource.buffer = this.__buffer),
                this.__pendingAudioSource.init(),
                this.__pendingSoundChannel.__initAudioSource(
                  this.__pendingAudioSource,
                )));
          this.__pendingAudioSource = this.__pendingSoundChannel = null;
        },
        AudioBuffer_onURLProgress: function (a, b) {
          var c = new Ue('progress');
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: sj,
      });
      var tj = function (a, b, c) {
        this.__firstRun = !0;
        ma.call(this, this);
        this.__sound = a;
        this.rightPeak = this.leftPeak = 1;
        this.__soundTransform = null != c ? c : new bf();
        this.__initAudioSource(b);
        Gd.__registerSoundChannel(this);
      };
      g['openfl.media.SoundChannel'] = tj;
      tj.__name__ = 'openfl.media.SoundChannel';
      tj.__super__ = ma;
      tj.prototype = u(ma.prototype, {
        stop: function () {
          Gd.__unregisterSoundChannel(this);
          this.__isValid &&
            (null != this.__processor &&
              (this.__processor.disconnect(),
              (this.__processor = this.__processor.onaudioprocess = null)),
            this.__audioSource.stop(),
            this.__dispose());
        },
        __dispose: function () {
          this.__isValid &&
            (this.__audioSource.onComplete.remove(
              l(this, this.audioSource_onComplete),
            ),
            this.__audioSource.dispose(),
            (this.__audioSource = null),
            (this.__isValid = !1));
        },
        __startSampleData: function () {
          var a = this,
            b = this.__sound.__webAudioContext;
          if (null != b) {
            this.__sampleDataEvent = new ji('sampleData');
            this.__sound.dispatchEvent(this.__sampleDataEvent);
            var c = this.__sampleDataEvent.getBufferSize();
            0 == c
              ? Ja.setTimeout(function () {
                  a.stop();
                  a.dispatchEvent(new va('soundComplete'));
                }, 1)
              : ((this.__processor = b.createScriptProcessor(c, 0, 2)),
                this.__processor.connect(b.destination),
                (this.__processor.onaudioprocess = l(this, this.onSample)),
                b.resume());
          }
        },
        __updateTransform: function () {
          this.set_soundTransform(this.get_soundTransform());
        },
        __initAudioSource: function (a) {
          this.__audioSource = a;
          null != this.__audioSource &&
            (this.__audioSource.onComplete.add(
              l(this, this.audioSource_onComplete),
            ),
            (this.__isValid = !0),
            this.__audioSource.play());
        },
        get_position: function () {
          return this.__isValid
            ? this.__audioSource.get_currentTime() + this.__audioSource.offset
            : 0;
        },
        set_position: function (a) {
          if (!this.__isValid) return 0;
          this.__audioSource.set_currentTime(
            (a | 0) - this.__audioSource.offset,
          );
          return a;
        },
        get_soundTransform: function () {
          return this.__soundTransform.clone();
        },
        set_soundTransform: function (a) {
          if (null != a) {
            this.__soundTransform.pan = a.pan;
            this.__soundTransform.volume = a.volume;
            var b = Gd.__soundTransform.pan + this.__soundTransform.pan;
            -1 > b && (b = -1);
            1 < b && (b = 1);
            var c = Gd.__soundTransform.volume * this.__soundTransform.volume;
            this.__isValid &&
              (this.__audioSource.set_gain(c),
              (c = this.__audioSource.get_position()),
              (c.x = b),
              (c.z = -1 * Math.sqrt(1 - Math.pow(b, 2))),
              this.__audioSource.set_position(c));
          }
          return a;
        },
        audioSource_onComplete: function () {
          Gd.__unregisterSoundChannel(this);
          this.__dispose();
          this.dispatchEvent(new va('soundComplete'));
        },
        onSample: function (a) {
          if (this.__firstRun) {
            var b = !0;
            this.__firstRun = !1;
          } else
            (ld.set_length(this.__sampleDataEvent.data, 0),
              this.__sound.dispatchEvent(this.__sampleDataEvent),
              (b = oa.gt(ld.get_length(this.__sampleDataEvent.data), 0)));
          b
            ? this.__sampleDataEvent.getSamples(a)
            : (this.stop(), this.dispatchEvent(new va('soundComplete')));
        },
        __class__: tj,
        __properties__: {
          set_soundTransform: 'set_soundTransform',
          get_soundTransform: 'get_soundTransform',
          set_position: 'set_position',
          get_position: 'get_position',
        },
      });
      var dk = function () {};
      g['openfl.media.SoundLoaderContext'] = dk;
      dk.__name__ = 'openfl.media.SoundLoaderContext';
      var bf = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 1);
        this.volume = a;
        this.pan = b;
        this.rightToRight =
          this.rightToLeft =
          this.leftToRight =
          this.leftToLeft =
            0;
      };
      g['openfl.media.SoundTransform'] = bf;
      bf.__name__ = 'openfl.media.SoundTransform';
      bf.prototype = {
        clone: function () {
          return new bf(this.volume, this.pan);
        },
        __class__: bf,
      };
      var Gd = function () {};
      g['openfl.media.SoundMixer'] = Gd;
      Gd.__name__ = 'openfl.media.SoundMixer';
      Gd.__registerSoundChannel = function (a) {
        Gd.__soundChannels.push(a);
      };
      Gd.__unregisterSoundChannel = function (a) {
        O.remove(Gd.__soundChannels, a);
      };
      var uj = function (a, b) {
        null == b && (b = 240);
        null == a && (a = 320);
        S.call(this);
        this.__drawableType = 8;
        this.__width = a;
        this.__height = b;
        this.__textureTime = -1;
        this.smoothing = !1;
        this.deblocking = 0;
      };
      g['openfl.media.Video'] = uj;
      uj.__name__ = 'openfl.media.Video';
      uj.__super__ = S;
      uj.prototype = u(S.prototype, {
        __enterFrame: function (a) {
          this.__renderable &&
            null != this.__stream &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = qa.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          qa.__pool.release(c);
        },
        __getIndexBuffer: function (a) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context
          )
            ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBufferContext = a.__context),
              (this.__indexBuffer = a.createIndexBuffer(6)),
              this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData));
          return this.__indexBuffer;
        },
        __getTexture: function (a) {
          if (null == this.__stream || null == this.__stream.__video)
            return null;
          var b = a.__context.webgl,
            c = b.RGBA,
            d = b.RGBA;
          this.__stream.__closed ||
            this.__stream.__video.currentTime == this.__textureTime ||
            (null == this.__texture &&
              (this.__texture = a.createRectangleTexture(
                this.__stream.__video.videoWidth,
                this.__stream.__video.videoHeight,
                1,
                !1,
              )),
            a.__bindGLTexture2D(this.__texture.__textureID),
            wc.texImage2D(
              b,
              b.TEXTURE_2D,
              0,
              c,
              d,
              b.UNSIGNED_BYTE,
              this.__stream.__video,
            ),
            (this.__textureTime = this.__stream.__video.currentTime));
          return this.__texture;
        },
        __getVertexBuffer: function (a) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            this.__currentWidth != this.get_width() ||
            this.__currentHeight != this.get_height()
          )
            ((this.__currentWidth = this.get_width()),
              (this.__currentHeight = this.get_height()),
              (this.__vertexBufferData = new Float32Array(20)),
              (this.__vertexBufferData[0] = this.get_width()),
              (this.__vertexBufferData[1] = this.get_height()),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[6] = this.get_height()),
              (this.__vertexBufferData[9] = 1),
              (this.__vertexBufferData[10] = this.get_width()),
              (this.__vertexBufferData[13] = 1),
              (this.__vertexBufferContext = a.__context),
              (this.__vertexBuffer = a.createVertexBuffer(3, 5)),
              this.__vertexBuffer.uploadFromTypedArray(
                qg.toArrayBufferView(this.__vertexBufferData),
              ));
          return this.__vertexBuffer;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            g = k.a * k.d - k.b * k.c;
          c = 0 == g ? -k.tx : (1 / g) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          g = k.a * k.d - k.b * k.c;
          a = 0 == g ? -k.ty : (1 / g) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height
            ? (null == d || f || d.push(h), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          var c = K.__pool.get();
          c.setTo(a, b);
          this.__globalToLocal(c, c);
          a = 0 < c.x && 0 < c.y && c.x <= this.__width && c.y <= this.__height;
          K.__pool.release(c);
          return a;
        },
        get_height: function () {
          return this.__height * this.get_scaleY();
        },
        set_height: function (a) {
          if (1 != this.get_scaleY() || a != this.__height)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleY(1);
          return (this.__height = a);
        },
        get_width: function () {
          return this.__width * this.__scaleX;
        },
        set_width: function (a) {
          if (1 != this.__scaleX || this.__width != a)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleX(1);
          return (this.__width = a);
        },
        __class__: uj,
      });
      var Ji = function (a, b, c) {
        this.description = a;
        this.extension = b;
        this.macType = c;
      };
      g['openfl.net.FileFilter'] = Ji;
      Ji.__name__ = 'openfl.net.FileFilter';
      Ji.prototype = { __class__: Ji };
      var ig = function () {
        ma.call(this);
        this.__inputControl = window.document.createElement('input');
        this.__inputControl.setAttribute('type', 'file');
        this.__inputControl.onclick = function (a) {
          a.cancelBubble = !0;
          a.stopPropagation();
        };
      };
      g['openfl.net.FileReference'] = ig;
      ig.__name__ = 'openfl.net.FileReference';
      ig.__super__ = ma;
      ig.prototype = u(ma.prototype, {
        browse: function (a) {
          var b = this,
            c = (this.__path = this.__data = null);
          if (null != a) {
            c = [];
            for (var d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              c.push(M.replace(M.replace(f.extension, '*.', '.'), ';', ','));
            }
            c = c.join(',');
          }
          null != c
            ? this.__inputControl.setAttribute('accept', c)
            : this.__inputControl.removeAttribute('accept');
          this.__inputControl.onchange = function () {
            if (0 == b.__inputControl.files.length)
              b.dispatchEvent(new va('cancel'));
            else {
              var a = b.__inputControl.files[0],
                c = new Date(a.lastModified);
              b.modificationDate = c;
              b.creationDate = b.get_modificationDate();
              b.size = a.size;
              c = md.extension(a.name);
              b.type = '.' + c;
              b.name = md.withoutDirectory(a.name);
              b.__path = a.name;
              b.dispatchEvent(new va('select'));
            }
          };
          this.__inputControl.click();
          return !0;
        },
        load: function () {
          var a = this,
            b = this.__inputControl.files[0],
            c = new FileReader();
          c.onload = function (b) {
            a.data = ld.fromArrayBuffer(b.target.result);
            a.openFileDialog_onComplete();
          };
          c.onerror = function (b) {
            a.dispatchEvent(new Nf('ioError'));
          };
          c.readAsArrayBuffer(b);
        },
        openFileDialog_onComplete: function () {
          this.dispatchEvent(new va('complete'));
        },
        get_modificationDate: function () {
          return this.modificationDate;
        },
        __class__: ig,
        __properties__: { get_modificationDate: 'get_modificationDate' },
      });
      var vj = function () {
        ma.call(this);
      };
      g['openfl.net.NetConnection'] = vj;
      vj.__name__ = 'openfl.net.NetConnection';
      vj.__super__ = ma;
      vj.prototype = u(ma.prototype, { __class__: vj });
      var wj = function (a, b) {
        ma.call(this);
        this.__connection = a;
        this.__soundTransform = new bf();
        this.__video = window.document.createElement('video');
        this.__video.setAttribute('playsinline', '');
        this.__video.setAttribute('webkit-playsinline', '');
        this.__video.setAttribute('crossorigin', 'anonymous');
        this.__video.addEventListener('error', l(this, this.video_onError), !1);
        this.__video.addEventListener(
          'waiting',
          l(this, this.video_onWaiting),
          !1,
        );
        this.__video.addEventListener('ended', l(this, this.video_onEnd), !1);
        this.__video.addEventListener('pause', l(this, this.video_onPause), !1);
        this.__video.addEventListener(
          'seeking',
          l(this, this.video_onSeeking),
          !1,
        );
        this.__video.addEventListener(
          'playing',
          l(this, this.video_onPlaying),
          !1,
        );
        this.__video.addEventListener(
          'timeupdate',
          l(this, this.video_onTimeUpdate),
          !1,
        );
        this.__video.addEventListener(
          'loadstart',
          l(this, this.video_onLoadStart),
          !1,
        );
        this.__video.addEventListener(
          'stalled',
          l(this, this.video_onStalled),
          !1,
        );
        this.__video.addEventListener(
          'durationchanged',
          l(this, this.video_onDurationChanged),
          !1,
        );
        this.__video.addEventListener(
          'canplay',
          l(this, this.video_onCanPlay),
          !1,
        );
        this.__video.addEventListener(
          'canplaythrough',
          l(this, this.video_onCanPlayThrough),
          !1,
        );
        this.__video.addEventListener(
          'loadedmetadata',
          l(this, this.video_onLoadMetaData),
          !1,
        );
      };
      g['openfl.net.NetStream'] = wj;
      wj.__name__ = 'openfl.net.NetStream';
      wj.__super__ = ma;
      wj.prototype = u(ma.prototype, {
        __dispatchStatus: function (a) {
          a = new ii('netStatus', !1, !1, { code: a });
          this.__connection.dispatchEvent(a);
          this.dispatchEvent(a);
        },
        __playStatus: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onPlayStatus;
              b({
                code: a,
                duration: this.__video.duration,
                position: this.__video.currentTime,
                speed: this.__video.playbackRate,
                start: this.__video.startTime,
              });
            } catch (c) {
              Qa.lastError = c;
            }
        },
        video_onCanPlay: function (a) {
          this.__playStatus('NetStream.Play.canplay');
        },
        video_onCanPlayThrough: function (a) {
          this.__playStatus('NetStream.Play.canplaythrough');
        },
        video_onDurationChanged: function (a) {
          this.__playStatus('NetStream.Play.durationchanged');
        },
        video_onEnd: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__dispatchStatus('NetStream.Play.Complete');
          this.__playStatus('NetStream.Play.Complete');
        },
        video_onError: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__playStatus('NetStream.Play.error');
        },
        video_onLoadMetaData: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onMetaData;
              b({
                width: this.__video.videoWidth,
                height: this.__video.videoHeight,
                duration: this.__video.duration,
              });
            } catch (c) {
              Qa.lastError = c;
            }
        },
        video_onLoadStart: function (a) {
          this.__playStatus('NetStream.Play.loadstart');
        },
        video_onPause: function (a) {
          this.__playStatus('NetStream.Play.pause');
        },
        video_onPlaying: function (a) {
          this.__dispatchStatus('NetStream.Play.Start');
          this.__playStatus('NetStream.Play.playing');
        },
        video_onSeeking: function (a) {
          this.__playStatus('NetStream.Play.seeking');
          this.__dispatchStatus('NetStream.Seek.Complete');
        },
        video_onStalled: function (a) {
          this.__playStatus('NetStream.Play.stalled');
        },
        video_onTimeUpdate: function (a) {
          null != this.__video &&
            ((this.time = this.__video.currentTime),
            this.__playStatus('NetStream.Play.timeupdate'));
        },
        video_onWaiting: function (a) {
          this.__playStatus('NetStream.Play.waiting');
        },
        __class__: wj,
      });
      var Ic = function () {
        ma.call(this);
        this.client = this;
        this.objectEncoding = Ic.defaultObjectEncoding;
      };
      g['openfl.net.SharedObject'] = Ic;
      Ic.__name__ = 'openfl.net.SharedObject';
      Ic.getLocal = function (a, b, c) {
        c = ' ~%&\\;:"\',<>?#'.split('');
        var d = !0;
        if (null == a || '' == a) d = !1;
        else
          for (var f = 0; f < c.length; ) {
            var h = c[f];
            ++f;
            if (-1 < a.indexOf(h)) {
              d = !1;
              break;
            }
          }
        if (!d) throw new Sb('Error #2134: Cannot create SharedObject.');
        null == Ic.__sharedObjects &&
          ((Ic.__sharedObjects = new Ia()),
          null != A.current && A.current.onExit.add(Ic.application_onExit));
        c = b + '/' + a;
        if (!Object.prototype.hasOwnProperty.call(Ic.__sharedObjects.h, c)) {
          d = null;
          try {
            var k = xe.getLocalStorage();
            null == b &&
              (null != k &&
                ((d = k.getItem(window.location.href + ':' + a)),
                k.removeItem(window.location.href + ':' + a)),
              (b = window.location.pathname));
            null != k && null == d && (d = k.getItem(b + ':' + a));
          } catch (p) {
            Qa.lastError = p;
          }
          k = new Ic();
          k.data = {};
          k.__localPath = b;
          k.__name = a;
          if (null != d && '' != d)
            try {
              var g = new Rc(d);
              g.setResolver({
                resolveEnum: w.resolveEnum,
                resolveClass: Ic.__resolveClass,
              });
              k.data = g.unserialize();
            } catch (p) {
              Qa.lastError = p;
            }
          Ic.__sharedObjects.h[c] = k;
        }
        return Ic.__sharedObjects.h[c];
      };
      Ic.__resolveClass = function (a) {
        return null != a
          ? (M.startsWith(a, 'neash.') &&
              (a = M.replace(a, 'neash.', 'openfl.')),
            M.startsWith(a, 'native.') &&
              (a = M.replace(a, 'native.', 'openfl.')),
            M.startsWith(a, 'flash.') &&
              (a = M.replace(a, 'flash.', 'openfl.')),
            M.startsWith(a, 'openfl._v2.') &&
              (a = M.replace(a, 'openfl._v2.', 'openfl.')),
            M.startsWith(a, 'openfl._legacy.') &&
              (a = M.replace(a, 'openfl._legacy.', 'openfl.')),
            g[a])
          : null;
      };
      Ic.application_onExit = function (a) {
        a = Ic.__sharedObjects.h;
        for (var b = Object.keys(a), c = b.length, d = 0; d < c; )
          a[b[d++]].flush();
      };
      Ic.__super__ = ma;
      Ic.prototype = u(ma.prototype, {
        flush: function (a) {
          if (0 == ya.fields(this.data).length) return 0;
          a = ad.run(this.data);
          try {
            var b = xe.getLocalStorage();
            null != b &&
              (b.removeItem(this.__localPath + ':' + this.__name),
              b.setItem(this.__localPath + ':' + this.__name, a));
          } catch (c) {
            return ((Qa.lastError = c), 1);
          }
          return 0;
        },
        __class__: Ic,
      });
      var xj = function (a) {
        ma.call(this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.dataFormat = 1;
        null != a && this.load(a);
      };
      g['openfl.net.URLLoader'] = xj;
      xj.__name__ = 'openfl.net.URLLoader';
      xj.__super__ = ma;
      xj.prototype = u(ma.prototype, {
        load: function (a) {
          var b = this,
            c = new va('open');
          this.dispatchEvent(c);
          0 == this.dataFormat
            ? ((c = new zh()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(l(this, this.httpRequest_onProgress))
                .onError(l(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = a;
                  a = new va('complete');
                  b.dispatchEvent(a);
                }))
            : ((c = new Cf()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(l(this, this.httpRequest_onProgress))
                .onError(l(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = 2 == b.dataFormat ? ek._new(a) : a;
                  a = new va('complete');
                  b.dispatchEvent(a);
                }));
        },
        __dispatchResponseStatus: function () {
          var a = new Eg(
            'httpResponseStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          a.responseURL = this.__httpRequest.uri;
          var b = [];
          if (
            this.__httpRequest.enableResponseHeaders &&
            null != this.__httpRequest.responseHeaders
          )
            for (
              var c = 0, d = this.__httpRequest.responseHeaders;
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              b.push(new yj(f.name, f.value));
            }
          a.responseHeaders = b;
          this.dispatchEvent(a);
        },
        __dispatchStatus: function () {
          var a = new Eg(
            'httpStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          this.dispatchEvent(a);
        },
        __prepareRequest: function (a, b) {
          this.__httpRequest = a;
          this.__httpRequest.uri = b.url;
          this.__httpRequest.method = b.method;
          if (null != b.data)
            if (w.typeof(b.data) == D.TObject) {
              var c = ya.fields(b.data);
              for (a = 0; a < c.length; ) {
                var d = c[a];
                ++a;
                this.__httpRequest.formData.h[d] = ya.field(b.data, d);
              }
            } else
              this.__httpRequest.data =
                b.data instanceof tb ? b.data : tb.ofString(I.string(b.data));
          this.__httpRequest.contentType = b.contentType;
          if (null != b.requestHeaders)
            for (a = 0, c = b.requestHeaders; a < c.length; )
              ((d = c[a]),
                ++a,
                this.__httpRequest.headers.push(new qh(d.name, d.value)));
          this.__httpRequest.followRedirects = b.followRedirects;
          this.__httpRequest.timeout = b.idleTimeout | 0;
          this.__httpRequest.manageCookies = b.manageCookies;
          this.__httpRequest.withCredentials = b.withCredentials;
          this.__httpRequest.userAgent = b.userAgent;
          this.__httpRequest.enableResponseHeaders = !0;
        },
        httpRequest_onError: function (a) {
          this.__dispatchResponseStatus();
          this.__dispatchStatus();
          this.__httpRequest instanceof Ae
            ? (this.data = this.__httpRequest.responseData)
            : this.__httpRequest instanceof Cf &&
              (this.data = this.__httpRequest.responseData);
          var b = 403 == a ? new ki('securityError') : new Nf('ioError');
          b.text = I.string(a);
          this.dispatchEvent(b);
        },
        httpRequest_onProgress: function (a, b) {
          var c = new Ue('progress');
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: xj,
      });
      var Qg = function (a) {
        this.withCredentials = !1;
        null != a && (this.url = a);
        this.contentType = null;
        this.followRedirects = Ee.followRedirects;
        this.idleTimeout = 0 < Ee.idleTimeout ? Ee.idleTimeout : 3e4;
        this.manageCookies = Ee.manageCookies;
        this.method = 'GET';
        this.requestHeaders = [];
        this.userAgent = Ee.userAgent;
      };
      g['openfl.net.URLRequest'] = Qg;
      Qg.__name__ = 'openfl.net.URLRequest';
      Qg.prototype = { __class__: Qg };
      var Ee = function () {};
      g['openfl.net.URLRequestDefaults'] = Ee;
      Ee.__name__ = 'openfl.net.URLRequestDefaults';
      var yj = function (a, b) {
        null == b && (b = '');
        null == a && (a = '');
        this.name = a;
        this.value = b;
      };
      g['openfl.net.URLRequestHeader'] = yj;
      yj.__name__ = 'openfl.net.URLRequestHeader';
      yj.prototype = { __class__: yj };
      var ek = {
          _new: function (a) {
            var b = {};
            null != a && ek.decode(b, a);
            return b;
          },
          decode: function (a, b) {
            for (var c = ya.fields(a), d = 0; d < c.length; ) {
              var f = c[d];
              ++d;
              ya.deleteField(a, f);
            }
            c = b.split(';').join('&').split('&');
            for (d = 0; d < c.length; )
              if (((f = c[d]), ++d, (b = f.indexOf('=')), 0 < b)) {
                var h = O.substr(f, 0, b);
                h = decodeURIComponent(h.split('+').join(' '));
                f = O.substr(f, b + 1, null);
                a[h] = decodeURIComponent(f.split('+').join(' '));
              } else
                0 != b && (a[decodeURIComponent(f.split('+').join(' '))] = '');
          },
        },
        Ff = function (a) {
          this.parentDomain = null != a ? a : Ff.currentDomain;
        };
      g['openfl.system.ApplicationDomain'] = Ff;
      Ff.__name__ = 'openfl.system.ApplicationDomain';
      Ff.prototype = { __class__: Ff };
      var Ai = function () {};
      g['openfl.system.Capabilities'] = Ai;
      Ai.__name__ = 'openfl.system.Capabilities';
      Ai.__properties__ = { get_screenDPI: 'get_screenDPI' };
      Ai.get_screenDPI = function () {
        var a = null != qc.application ? qc.application.__window : null,
          b = 72;
        null != a && (b *= a.__scale);
        return b;
      };
      var zj = function () {
        ma.call(this);
        this.clear();
      };
      g['openfl.text.StyleSheet'] = zj;
      zj.__name__ = 'openfl.text.StyleSheet';
      zj.__super__ = ma;
      zj.prototype = u(ma.prototype, {
        clear: function () {
          this.__styleNamesDirty = !1;
          this.__styleNames = null;
          this.__styles = new Ia();
        },
        __applyStyle: function (a, b) {
          a = a.toLowerCase();
          Object.prototype.hasOwnProperty.call(this.__styles.h, a) &&
            this.__applyStyleObject(this.__styles.h[a], b);
        },
        __applyStyleObject: function (a, b) {
          if (null != a) {
            var c = new xa('[0-9A-Fa-f]+', ''),
              d = new xa('[0-9]+', '');
            var f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'color')
              ? ((f = jd.__get(a, 'color')),
                (f = c.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.color = I.parseInt('0x' + c.matched(0)));
            f = a;
            null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontFamily') &&
              ((f = jd.__get(a, 'fontFamily')),
              (b.font = this.__parseFont(null == f ? null : I.string(f))));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'fontSize')
              ? ((f = jd.__get(a, 'fontSize')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.size = I.parseInt(d.matched(0)));
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontStyle')
            )
              switch (jd.__get(a, 'fontStyle')) {
                case 'italic':
                  b.italic = !0;
                  break;
                case 'normal':
                  b.italic = !1;
              }
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontWeight')
            )
              switch (jd.__get(a, 'fontWeight')) {
                case 'bold':
                  b.bold = !0;
                  break;
                case 'normal':
                  b.bold = !1;
              }
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'leading')
              ? ((f = jd.__get(a, 'leading')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.leading = I.parseInt(d.matched(0)));
            f = a;
            null != f &&
            Object.prototype.hasOwnProperty.call(f, 'letterSpacing')
              ? ((f = jd.__get(a, 'letterSpacing')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.letterSpacing = parseFloat(d.matched(0)));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'marginLeft')
              ? ((f = jd.__get(a, 'marginLeft')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.leftMargin = I.parseInt(d.matched(0)));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'marginRight')
              ? ((f = jd.__get(a, 'marginRight')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.rightMargin = I.parseInt(d.matched(0)));
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'textAlign')
            )
              switch (jd.__get(a, 'textAlign')) {
                case 'center':
                  b.align = 0;
                  break;
                case 'justify':
                  b.align = 2;
                  break;
                case 'left':
                  b.align = 3;
                  break;
                case 'right':
                  b.align = 4;
              }
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'textDecoration')
            )
              switch (jd.__get(a, 'textDecoration')) {
                case 'none':
                  b.underline = !1;
                  break;
                case 'underline':
                  b.underline = !0;
              }
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'textIndent')
              ? ((f = jd.__get(a, 'textIndent')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.blockIndent = I.parseInt(d.matched(0)));
          }
        },
        __parseFont: function (a) {
          if (null == a) return null;
          -1 < a.indexOf(',') && (a = O.substr(a, 0, a.indexOf(',')));
          switch (a) {
            case 'mono':
              return '_typewriter';
            case 'sans-serif':
              return '_sans';
            case 'serif':
              return '_serif';
            default:
              return a;
          }
        },
        __class__: zj,
      });
      var Gc = function () {
        this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
        this.__mouseScrollVCounter = 0;
        this.condenseWhite = !1;
        sa.call(this);
        this.__wordSelection = !1;
        this.__drawableType = 7;
        this.__selectionIndex = this.__caretIndex = -1;
        this.__displayAsPassword = !1;
        this.__graphics = new ed(this);
        this.__textEngine = new Db(this);
        this.__layoutDirty = !0;
        this.__offsetY = this.__offsetX = 0;
        this.__mouseWheelEnabled = !0;
        this.__text = '';
        null == Gc.__defaultTextFormat &&
          ((Gc.__defaultTextFormat = new $d(
            'Times New Roman',
            12,
            0,
            !1,
            !1,
            !1,
            '',
            '',
            3,
            0,
            0,
            0,
            0,
          )),
          (Gc.__defaultTextFormat.blockIndent = 0),
          (Gc.__defaultTextFormat.bullet = !1),
          (Gc.__defaultTextFormat.letterSpacing = 0),
          (Gc.__defaultTextFormat.kerning = !1));
        this.__textFormat = Gc.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(
          new Vc(this.__textFormat, 0, 0),
        );
        this.addEventListener('mouseDown', l(this, this.this_onMouseDown));
        this.addEventListener('focusIn', l(this, this.this_onFocusIn));
        this.addEventListener('focusOut', l(this, this.this_onFocusOut));
        this.addEventListener('keyDown', l(this, this.this_onKeyDown));
        this.addEventListener('mouseWheel', l(this, this.this_onMouseWheel));
      };
      g['openfl.text.TextField'] = Gc;
      Gc.__name__ = 'openfl.text.TextField';
      Gc.__super__ = sa;
      Gc.prototype = u(sa.prototype, {
        getCharBoundaries: function (a) {
          if (0 > a || a > this.__text.length - 1) return null;
          var b = new qa();
          return this.__getCharBoundaries(a, b) ? b : null;
        },
        getLineIndexOfChar: function (a) {
          if (0 > a || a > this.__text.length) return -1;
          this.__updateLayout();
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.startIndex <= a && c.endIndex >= a) return c.lineIndex;
          }
          return -1;
        },
        getLineLength: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return 0;
          for (
            var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (f.lineIndex == a) -1 == b && (b = f.startIndex);
            else if (f.lineIndex == a + 1) {
              c = f.startIndex;
              break;
            }
          }
          -1 == c && (c = this.__text.length);
          return c - b;
        },
        getLineOffset: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return -1;
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.lineIndex == a) return c.startIndex;
          }
          return 0;
        },
        getLineText: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return null;
          for (
            var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (f.lineIndex == a) -1 == b && (b = f.startIndex);
            else if (f.lineIndex == a + 1) {
              c = f.startIndex;
              break;
            }
          }
          -1 == c && (c = this.__text.length);
          return this.__textEngine.text.substring(b, c);
        },
        replaceSelectedText: function (a) {
          this.__replaceSelectedText(a, !1);
        },
        replaceText: function (a, b, c) {
          this.__replaceText(a, b, c, !1);
        },
        setSelection: function (a, b) {
          this.__selectionIndex = a;
          this.__caretIndex = b;
          this.__updateScrollV();
          this.__updateScrollH();
          null != this.stage &&
            this.stage.get_focus() == this &&
            (this.__stopCursorTimer(), this.__startCursorTimer());
        },
        setTextFormat: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = -1);
          var d = this.get_text().length;
          -1 == b ? (-1 == c && (c = d), (b = 0)) : -1 == c && (c = b + 1);
          if (b != c) {
            if (0 > b || 0 >= c || c < b || b >= d || c > d) throw new Vf();
            if (0 == b && c == d) {
              this.__textEngine.textFormatRanges.set_length(1);
              var f = this.__textEngine.textFormatRanges.get(0);
              f.start = 0;
              f.end = d;
              f.format.__merge(a);
            } else {
              d = 0;
              for (var h; d < this.__textEngine.textFormatRanges.get_length(); )
                if (
                  ((f = this.__textEngine.textFormatRanges.get(d)), f.end <= b)
                )
                  ++d;
                else if (f.start >= c) break;
                else if (f.start <= b && f.end >= c)
                  if (f.start == b && f.end == c) {
                    f.format = f.format.clone();
                    f.format.__merge(a);
                    break;
                  } else if (f.start == b)
                    ((h = new Vc(f.format.clone(), b, c)),
                      h.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(d, h),
                      (f.start = c),
                      (d += 2));
                  else {
                    f.end == c
                      ? ((h = new Vc(f.format.clone(), b, c)),
                        h.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(d + 1, h))
                      : ((h = new Vc(f.format.clone(), b, c)),
                        h.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(d + 1, h),
                        (h = new Vc(f.format.clone(), c, f.end)),
                        this.__textEngine.textFormatRanges.insertAt(d + 2, h));
                    f.end = b;
                    break;
                  }
                else if (f.start >= b && f.end <= c)
                  f.start == b
                    ? ((f.format = f.format.clone()),
                      f.format.__merge(a),
                      (f.end = c))
                    : this.__textEngine.textFormatRanges.removeAt(d);
                else if (f.start > b && f.end > b) {
                  f.start = c;
                  break;
                } else
                  f.start < b && f.end <= c
                    ? ((h = new Vc(f.format.clone(), b, c)),
                      h.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(d + 1, h),
                      (f.end = b),
                      (d += 2))
                    : (++d,
                      Na.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 1610,
                          className: 'openfl.text.TextField',
                          methodName: 'setTextFormat',
                        },
                      ));
            }
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __setStageReference: function (a) {
          this.__stopTextInput();
          sa.prototype.__setStageReference.call(this, a);
        },
        __allowMouseFocus: function () {
          return this.mouseEnabled;
        },
        __caretBeginningOfLine: function () {
          this.__caretIndex = this.getLineOffset(
            this.getLineIndexOfChar(this.__caretIndex),
          );
        },
        __caretBeginningOfNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1)
              : this.__text.length;
        },
        __caretBeginningOfPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          if (0 < a) {
            var b = this.getLineOffset(
              this.getLineIndexOfChar(this.__caretIndex),
            );
            this.__caretIndex =
              this.__caretIndex == b ? this.getLineOffset(a - 1) : b;
          }
        },
        __caretEndOfLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1) - 1
              : this.__text.length;
        },
        __caretNextCharacter: function () {
          this.__caretIndex < this.__text.length && this.__caretIndex++;
        },
        __caretNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          a < this.__textEngine.numLines - 1 &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a + 1,
            ));
        },
        __caretPreviousCharacter: function () {
          0 < this.__caretIndex && this.__caretIndex--;
        },
        __caretPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          0 < a &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a - 1,
            ));
        },
        __disableInput: function () {
          this.__inputEnabled &&
            null != this.stage &&
            (this.stage.window.__backend.setTextInputEnabled(!1),
            this.stage.window.onTextInput.remove(
              l(this, this.window_onTextInput),
            ),
            this.stage.window.onKeyDown.remove(l(this, this.window_onKeyDown)),
            (this.__inputEnabled = !1),
            this.__stopCursorTimer());
        },
        __dispatch: function (a) {
          if (2 == a.eventPhase && 'mouseUp' == a.type) {
            var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            null != b &&
              ((b = b.format.url),
              null != b &&
                '' != b &&
                (M.startsWith(b, 'event:')
                  ? this.dispatchEvent(
                      new Rd('link', !0, !1, O.substr(b, 6, null)),
                    )
                  : Ja.getURL(new Qg(b))));
          }
          return sa.prototype.__dispatch.call(this, a);
        },
        __enableInput: function () {
          if (null != this.stage) {
            var a = this.getBounds(this.stage);
            a = new hd(a.x, a.y, a.width, a.height);
            this.stage.window.setTextInputRect(a);
            this.stage.window.__backend.setTextInputEnabled(!0);
            this.__inputEnabled ||
              (this.stage.window.__backend.setTextInputEnabled(!0),
              this.stage.window.onTextInput.has(
                l(this, this.window_onTextInput),
              ) ||
                (this.stage.window.onTextInput.add(
                  l(this, this.window_onTextInput),
                ),
                this.stage.window.onKeyDown.add(
                  l(this, this.window_onKeyDown),
                )),
              (this.__inputEnabled = !0),
              this.__stopCursorTimer(),
              this.__startCursorTimer());
          }
        },
        __getBounds: function (a, b) {
          this.__updateLayout();
          var c = qa.__pool.get();
          c.copyFrom(this.__textEngine.bounds);
          c.offset(this.__offsetX, this.__offsetY);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          qa.__pool.release(c);
        },
        __getCharBoundaries: function (a, b) {
          if (0 > a || a > this.__text.length - 1) return !1;
          this.__updateLayout();
          for (
            var c = this.__textEngine.layoutGroups.iterator();
            c.hasNext();

          ) {
            var d = c.next();
            if (a >= d.startIndex && a < d.endIndex)
              try {
                for (var f = d.offsetX, h = 0, k = a - d.startIndex; h < k; ) {
                  var g = h++;
                  f += d.positions[g];
                }
                b.setTo(
                  f,
                  d.offsetY,
                  d.positions[a - d.startIndex],
                  d.ascent + d.descent,
                );
                return !0;
              } catch (p) {
                Qa.lastError = p;
              }
          }
          return !1;
        },
        __getCharIndexOnDifferentLine: function (a, b) {
          if (
            0 > a ||
            a > this.__text.length ||
            0 > b ||
            b > this.__textEngine.numLines - 1
          )
            return -1;
          for (
            var c = null,
              d = null,
              f = this.__textEngine.layoutGroups.iterator();
            f.hasNext();

          ) {
            var h = f.next();
            if (a >= h.startIndex && a <= h.endIndex) {
              c = h.offsetX;
              for (var k = 0, g = a - h.startIndex; k < g; ) {
                var p = k++;
                c += h.positions[p];
              }
              if (null != d) return this.__getPosition(c, d);
            }
            if (h.lineIndex == b) {
              d = h.offsetY + h.height / 2;
              h = 0;
              for (k = this.get_scrollV() - 1; h < k; )
                ((g = h++), (d -= this.__textEngine.lineHeights.get(g)));
              if (null != c) return this.__getPosition(c, d);
            }
          }
          return -1;
        },
        __getCursor: function () {
          var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
          return null != a && '' != a.format.url
            ? 'button'
            : this.__textEngine.selectable
              ? 'ibeam'
              : null;
        },
        __getGroup: function (a, b, c) {
          null == c && (c = !1);
          this.__updateLayout();
          a += this.get_scrollH();
          for (var d = 0, f = this.get_scrollV() - 1; d < f; ) {
            var h = d++;
            b += this.__textEngine.lineHeights.get(h);
          }
          !c &&
            b > this.__textEngine.textHeight &&
            (b = this.__textEngine.textHeight);
          var k = !0;
          d = 0;
          for (f = this.__textEngine.layoutGroups.get_length(); d < f; ) {
            h = d++;
            var g = this.__textEngine.layoutGroups.get(h);
            h =
              h < this.__textEngine.layoutGroups.get_length() - 1
                ? this.__textEngine.layoutGroups.get(h + 1)
                : null;
            k &&
              (b < g.offsetY && (b = g.offsetY),
              a < g.offsetX && (a = g.offsetX),
              (k = !1));
            if (
              (b >= g.offsetY && b <= g.offsetY + g.height) ||
              (!c && null == h)
            )
              if (
                (a >= g.offsetX && a <= g.offsetX + g.width) ||
                (!c && (null == h || h.lineIndex != g.lineIndex))
              )
                return g;
          }
          return null;
        },
        __getPosition: function (a, b) {
          b = this.__getGroup(a, b);
          if (null == b) return this.__text.length;
          for (var c = 0, d = 0, f = b.positions.length; d < f; ) {
            var h = d++;
            c += b.positions[h];
            if (a <= b.offsetX + c) {
              if (a <= b.offsetX + (c - b.positions[h]) + b.positions[h] / 2)
                return b.startIndex + h;
              if (b.startIndex + h < b.endIndex) return b.startIndex + h + 1;
              break;
            }
          }
          return b.endIndex;
        },
        __getPositionByIdentifier: function (a, b, c) {
          a = this.__getPosition(a, b);
          c = c ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          b = this.__text.charAt(a);
          if (this.__specialSelectionInitialIndex <= a)
            for (; -1 == c.indexOf(b) && a < this.__text.length; )
              (++a, (b = this.__text.charAt(a)));
          else {
            for (; -1 == c.indexOf(b) && 0 < a; )
              (--a, (b = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          }
          return a;
        },
        __getOppositeIdentifierBound: function (a, b) {
          b = b ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          var c = this.__text.charAt(a);
          if (a <= this.__caretIndex) {
            for (; -1 == b.indexOf(c) && 0 < a; )
              (--a, (c = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          } else
            for (; -1 == b.indexOf(c) && a < this.__text.length; )
              (++a, (c = this.__text.charAt(a)));
          return a;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (f && !this.mouseEnabled) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          this.__updateLayout();
          c = this.__renderTransform;
          f = c.a * c.d - c.b * c.c;
          var k =
            0 == f ? -c.tx : (1 / f) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          f = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            k,
            0 == f ? -c.ty : (1 / f) * (c.a * (b - c.ty) + c.b * (c.tx - a)),
          )
            ? (null != d && d.push(h), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          this.__getRenderTransform();
          this.__updateLayout();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            f =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            f,
            0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a)),
          )
            ? !0
            : !1;
        },
        __replaceSelectedText: function (a, b) {
          null == b && (b = !0);
          null == a && (a = '');
          if ('' != a || this.__selectionIndex != this.__caretIndex) {
            var c =
                this.__caretIndex < this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex,
              d =
                this.__caretIndex > this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex;
            if (
              !(
                c == d &&
                0 < this.__textEngine.maxChars &&
                this.__text.length == this.__textEngine.maxChars
              )
            ) {
              c > this.__text.length && (c = this.__text.length);
              d > this.__text.length && (d = this.__text.length);
              if (d < c) {
                var f = d;
                d = c;
                c = f;
              }
              0 > c && (c = 0);
              this.__replaceText(c, d, a, b);
            }
          }
        },
        __replaceText: function (a, b, c, d) {
          if (!(b < a || 0 > a || b > this.__text.length || null == c)) {
            d &&
              ((c = this.__textEngine.restrictText(c)),
              0 < this.__textEngine.maxChars &&
                ((d =
                  this.__textEngine.maxChars - this.__text.length + (b - a)),
                0 >= d ? (c = '') : d < c.length && (c = O.substr(c, 0, d))));
            this.__updateText(
              this.__text.substring(0, a) + c + this.__text.substring(b),
            );
            d = c.length - (b - a);
            for (
              var f = 0, h;
              f < this.__textEngine.textFormatRanges.get_length();

            ) {
              h = this.__textEngine.textFormatRanges.get(f);
              if (a == b)
                h.start == h.end
                  ? 0 != h.start
                    ? Na.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 2184,
                          className: 'openfl.text.TextField',
                          methodName: '__replaceText',
                        },
                      )
                    : (h.end += d)
                  : h.end >= a &&
                    (h.start >= a
                      ? ((h.start += d), (h.end += d))
                      : h.start < a && h.end >= b && (h.end += d));
              else if (h.end > a)
                if (h.start > b) ((h.start += d), (h.end += d));
                else if (h.start <= a && h.end > b) h.end += d;
                else if (h.start >= a && h.end <= b) {
                  h = this.__textEngine.textFormatRanges;
                  h.__tempIndex = f--;
                  for (var k = 0, g = []; k < g.length; ) {
                    var p = g[k++];
                    h.insertAt(h.__tempIndex, p);
                    h.__tempIndex++;
                  }
                  h.splice(h.__tempIndex, 1);
                } else
                  h.end > b && h.start > a && h.start <= b
                    ? ((h.start = a), (h.end += d))
                    : h.start < a && h.end > a && h.end <= b && (h.end = a);
              ++f;
            }
            0 == this.__textEngine.textFormatRanges.get_length()
              ? this.__textEngine.textFormatRanges.push(
                  new Vc(this.get_defaultTextFormat().clone(), 0, c.length),
                )
              : a == b && 0 < this.__textEngine.textFormatRanges.get(0).start
                ? this.__textEngine.textFormatRanges.unshift(
                    new Vc(
                      this.get_defaultTextFormat().clone(),
                      0,
                      this.__textEngine.textFormatRanges.get(0).start,
                    ),
                  )
                : a != b &&
                  this.__textEngine.textFormatRanges.get(
                    this.__textEngine.textFormatRanges.get_length() - 1,
                  ).end < this.__text.length &&
                  this.__textEngine.textFormatRanges.push(
                    new Vc(
                      this.get_defaultTextFormat().clone(),
                      this.__textEngine.textFormatRanges.get(
                        this.__textEngine.textFormatRanges.get_length() - 1,
                      ).end,
                      this.__text.length,
                    ),
                  );
            this.__selectionIndex = this.__caretIndex = a + c.length;
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __startCursorTimer: function () {
          1 == this.get_type()
            ? (this.__inputEnabled &&
                ((this.__cursorTimer = Pe.delay(
                  l(this, this.__startCursorTimer),
                  600,
                )),
                (this.__showCursor = !this.__showCursor)),
              (this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()))
            : this.get_selectable() &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __startTextInput: function () {
          0 > this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex = this.__text.length);
          (S.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__enableInput();
        },
        __stopCursorTimer: function () {
          null != this.__cursorTimer &&
            (this.__cursorTimer.stop(), (this.__cursorTimer = null));
          this.__showCursor &&
            ((this.__showCursor = !1),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __stopTextInput: function () {
          (S.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__disableInput();
        },
        __updateLayout: function () {
          if (this.__layoutDirty) {
            var a = this.__textEngine.width;
            this.__textEngine.update();
            if (2 != this.__textEngine.autoSize) {
              if (this.__textEngine.width != a)
                switch (this.__textEngine.autoSize) {
                  case 0:
                    this.set_x(
                      this.get_x() + (a - this.__textEngine.width) / 2,
                    );
                    break;
                  case 3:
                    this.set_x(this.get_x() + (a - this.__textEngine.width));
                }
              this.__textEngine.getBounds();
            }
            this.__layoutDirty = !1;
            this.setSelection(this.__selectionIndex, this.__caretIndex);
          }
        },
        __updateMouseDrag: function () {
          if (null != this.stage) {
            var a = this.getBounds(this);
            this.get_mouseX() > a.width - 1
              ? this.set_scrollH(
                  this.get_scrollH() +
                    (Math.max(
                      Math.min(0.1 * (this.get_mouseX() - a.width), 10),
                      1,
                    ) |
                      0),
                )
              : 1 > this.get_mouseX() &&
                this.set_scrollH(
                  this.get_scrollH() -
                    (Math.max(Math.min(-0.1 * this.get_mouseX(), 10), 1) | 0),
                );
            this.__mouseScrollVCounter++;
            this.__mouseScrollVCounter > this.stage.get_frameRate() / 10 &&
              (this.get_mouseY() > a.height - 2
                ? this.set_scrollV(
                    Math.min(
                      this.get_scrollV() +
                        Math.max(
                          Math.min(0.03 * (this.get_mouseY() - a.height), 5),
                          1,
                        ),
                      this.get_maxScrollV(),
                    ) | 0,
                  )
                : 2 > this.get_mouseY() &&
                  this.set_scrollV(
                    this.get_scrollV() -
                      (Math.max(Math.min(-0.03 * this.get_mouseY(), 5), 1) | 0),
                  ),
              (this.__mouseScrollVCounter = 0));
            this.stage_onMouseMove(null);
          }
        },
        __updateScrollH: function () {
          this.__updateLayout();
          var a = this.getBounds(this);
          if (this.get_textWidth() <= a.width - 4) this.set_scrollH(0);
          else {
            var b = this.get_scrollH();
            if (
              0 == this.__caretIndex ||
              this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) ==
                this.__caretIndex
            )
              b = 0;
            else {
              var c = qa.__pool.get(),
                d = !1;
              this.__caretIndex < this.__text.length &&
                (d = this.__getCharBoundaries(this.__caretIndex, c));
              d ||
                (this.__getCharBoundaries(this.__caretIndex - 1, c),
                (c.x += c.width));
              for (; c.x < b && 0 < b; ) b -= 24;
              for (; c.x > b + a.width - 4; ) b += 24;
              qa.__pool.release(c);
            }
            0 < b &&
              1 != this.get_type() &&
              ((c = this.getLineLength(
                this.getLineIndexOfChar(this.__caretIndex),
              )),
              this.get_scrollH() + a.width - 4 > c &&
                this.set_scrollH(Math.ceil(c - a.width + 4)));
            0 > b
              ? this.set_scrollH(0)
              : b > this.get_maxScrollH()
                ? this.set_scrollH(this.get_maxScrollH())
                : this.set_scrollH(b);
          }
        },
        __updateScrollV: function () {
          this.__updateLayout();
          if (this.get_textHeight() <= this.get_height() - 4)
            this.set_scrollV(1);
          else {
            var a = this.getLineIndexOfChar(this.__caretIndex);
            -1 == a &&
              0 < this.__caretIndex &&
              (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
            if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
            else if (a + 1 > this.get_bottomScrollV()) {
              var b = 0;
              for (
                a >= this.__textEngine.lineHeights.get_length() &&
                (a = this.__textEngine.lineHeights.get_length() - 1);
                0 <= a;

              ) {
                b += this.__textEngine.lineHeights.get(a);
                if (b > this.get_height() - 4) {
                  a += 0 > b - this.get_height() ? 1 : 2;
                  break;
                }
                --a;
              }
              this.set_scrollV(a);
            } else this.set_scrollV(this.get_scrollV());
          }
        },
        __updateText: function (a) {
          S.__supportDOM &&
            this.__renderedOnCanvasWhileOnDOM &&
            (this.__forceCachedBitmapUpdate = this.__text != a);
          this.__textEngine.set_text(a);
          this.__text = this.__textEngine.text;
          null != this.stage && this.stage.get_focus() == this
            ? (this.__text.length < this.__selectionIndex &&
                (this.__selectionIndex = this.__text.length),
              this.__text.length < this.__caretIndex &&
                (this.__caretIndex = this.__text.length))
            : this.__isHTML
              ? (this.__selectionIndex = this.__caretIndex = this.__text.length)
              : (this.__caretIndex = this.__selectionIndex = 0);
          if (
            !this.__displayAsPassword ||
            (S.__supportDOM && !this.__renderedOnCanvasWhileOnDOM)
          )
            this.__textEngine.set_text(this.__text);
          else {
            a = '';
            for (var b = 0, c = this.get_text().length; b < c; )
              (b++, (a += '*'));
            this.__textEngine.set_text(a);
          }
        },
        __updateTransforms: function (a) {
          sa.prototype.__updateTransforms.call(this, a);
          a = this.__renderTransform;
          var b = this.__offsetX,
            c = this.__offsetY;
          a.tx = b * a.a + c * a.c + a.tx;
          a.ty = b * a.b + c * a.d + a.ty;
        },
        set_autoSize: function (a) {
          a != this.__textEngine.autoSize &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.autoSize = a);
        },
        set_background: function (a) {
          a != this.__textEngine.background &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.background = a);
        },
        set_backgroundColor: function (a) {
          a != this.__textEngine.backgroundColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.backgroundColor = a);
        },
        set_border: function (a) {
          a != this.__textEngine.border &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.border = a);
        },
        set_borderColor: function (a) {
          a != this.__textEngine.borderColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.borderColor = a);
        },
        get_bottomScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_bottomScrollV();
        },
        get_caretIndex: function () {
          return this.__caretIndex;
        },
        get_defaultTextFormat: function () {
          return this.__textFormat.clone();
        },
        set_defaultTextFormat: function (a) {
          this.__textFormat.__merge(a);
          this.__dirty = this.__layoutDirty = !0;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return a;
        },
        get_displayAsPassword: function () {
          return this.__displayAsPassword;
        },
        get_height: function () {
          this.__updateLayout();
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          a != this.__textEngine.height &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.height = a));
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        get_htmlText: function () {
          return this.__isHTML ? this.__htmlText : this.__text;
        },
        set_htmlText: function (a) {
          if (null == a)
            throw (
              (a = new Je('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          (this.__isHTML && this.__text == a) ||
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          this.__isHTML = !0;
          this.condenseWhite && (a = a.replace(/\s+/g, ' '));
          this.__htmlText = a;
          a = Da.parse(
            a,
            this.get_multiline(),
            this.__styleSheet,
            this.__textFormat,
            this.__textEngine.textFormatRanges,
          );
          this.__updateText(a);
          return a;
        },
        get_length: function () {
          return null != this.__text ? this.__text.length : 0;
        },
        get_maxScrollH: function () {
          this.__updateLayout();
          return this.__textEngine.maxScrollH;
        },
        get_maxScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_maxScrollV();
        },
        get_mouseWheelEnabled: function () {
          return this.__mouseWheelEnabled;
        },
        get_multiline: function () {
          return this.__textEngine.multiline;
        },
        get_numLines: function () {
          this.__updateLayout();
          return this.__textEngine.numLines;
        },
        set_restrict: function (a) {
          this.__textEngine.restrict != a &&
            (this.__textEngine.set_restrict(a), this.__updateText(this.__text));
          return a;
        },
        get_scrollH: function () {
          return this.__textEngine.scrollH;
        },
        set_scrollH: function (a) {
          this.__updateLayout();
          a > this.__textEngine.maxScrollH &&
            (a = this.__textEngine.maxScrollH);
          0 > a && (a = 0);
          a != this.__textEngine.scrollH &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.scrollH = a),
            this.dispatchEvent(new va('scroll')));
          return this.__textEngine.scrollH;
        },
        get_scrollV: function () {
          return this.__textEngine.get_scrollV();
        },
        set_scrollV: function (a) {
          this.__updateLayout();
          a > this.__textEngine.get_maxScrollV() &&
            (a = this.__textEngine.get_maxScrollV());
          1 > a && (a = 1);
          if (
            a != this.__textEngine.get_scrollV() ||
            0 == this.__textEngine.get_scrollV()
          )
            ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()),
              this.__textEngine.set_scrollV(a),
              this.dispatchEvent(new va('scroll')));
          return this.__textEngine.get_scrollV();
        },
        get_selectable: function () {
          return this.__textEngine.selectable;
        },
        set_selectable: function (a) {
          a != this.__textEngine.selectable &&
            1 == this.get_type() &&
            (null != this.stage && this.stage.get_focus() == this
              ? this.__startTextInput()
              : a || this.__stopTextInput());
          return (this.__textEngine.selectable = a);
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? 1 == this.__textEngine.type
            : this.__tabEnabled;
        },
        get_text: function () {
          return this.__text;
        },
        set_text: function (a) {
          if (null == a)
            throw (
              (a = new Je('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (null != this.__styleSheet) return this.set_htmlText(a);
          if (this.__isHTML || this.__text != a)
            ((this.__layoutDirty = this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else return a;
          if (1 < this.__textEngine.textFormatRanges.get_length()) {
            var b = this.__textEngine.textFormatRanges,
              c = this.__textEngine.textFormatRanges.get_length() - 1;
            b.__tempIndex = 1;
            for (var d = 0, f = []; d < f.length; ) {
              var h = f[d++];
              b.insertAt(b.__tempIndex, h);
              b.__tempIndex++;
            }
            b.splice(b.__tempIndex, c);
          }
          b = this.__textEngine.textFormatRanges.get(0);
          b.format = this.__textFormat;
          b.start = 0;
          b.end = a.length;
          this.__isHTML = !1;
          this.__updateText(a);
          return a;
        },
        set_textColor: function (a) {
          a != this.__textFormat.color &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          for (
            var b = this.__textEngine.textFormatRanges.iterator();
            b.hasNext();

          )
            b.next().format.color = a;
          return (this.__textFormat.color = a);
        },
        get_textWidth: function () {
          this.__updateLayout();
          return this.__textEngine.textWidth;
        },
        get_textHeight: function () {
          this.__updateLayout();
          return this.__textEngine.textHeight;
        },
        get_type: function () {
          return this.__textEngine.type;
        },
        set_type: function (a) {
          null != this.__styleSheet && (a = 0);
          a != this.__textEngine.type &&
            ((this.__textEngine.type = a),
            1 == a
              ? (this.addEventListener(
                  'addedToStage',
                  l(this, this.this_onAddedToStage),
                ),
                this.this_onFocusIn(null),
                (this.__textEngine.__useIntAdvances = !0))
              : (this.removeEventListener(
                  'addedToStage',
                  l(this, this.this_onAddedToStage),
                ),
                this.__stopTextInput(),
                (this.__textEngine.__useIntAdvances = null)),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__textEngine.type;
        },
        get_width: function () {
          this.__updateLayout();
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          a != this.__textEngine.width &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.width = a));
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_wordWrap: function (a) {
          a != this.__textEngine.wordWrap &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.wordWrap = a);
        },
        get_x: function () {
          return this.__transform.tx + this.__offsetX;
        },
        set_x: function (a) {
          a != this.__transform.tx + this.__offsetX &&
            this.__setTransformDirty();
          this.__transform.tx = a - this.__offsetX;
          return a;
        },
        get_y: function () {
          return this.__transform.ty + this.__offsetY;
        },
        set_y: function (a) {
          a != this.__transform.ty + this.__offsetY &&
            this.__setTransformDirty();
          this.__transform.ty = a - this.__offsetY;
          return a;
        },
        stage_onMouseMove: function (a) {
          if (
            null != this.stage &&
            this.get_selectable() &&
            0 <= this.__selectionIndex &&
            (this.__updateLayout(),
            (a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  )),
            a != this.__caretIndex)
          ) {
            this.__caretIndex = a;
            if (this.__wordSelection || this.__lineSelection)
              this.__selectionIndex = this.__getOppositeIdentifierBound(
                this.__specialSelectionInitialIndex,
                this.__lineSelection,
              );
            a = !0;
            S.__supportDOM &&
              (this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0),
              (a = !1));
            a &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          }
        },
        stage_onMouseUp: function (a) {
          a = a.currentTarget;
          a.removeEventListener('enterFrame', l(this, this.this_onEnterFrame));
          a.removeEventListener('mouseMove', l(this, this.stage_onMouseMove));
          a.removeEventListener('mouseUp', l(this, this.stage_onMouseUp));
          if (this.stage == a && a.get_focus() == this) {
            this.__getWorldTransform();
            this.__updateLayout();
            a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  );
            var b = Math.max(this.__selectionIndex, a) | 0;
            this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
            this.__caretIndex = b;
            this.__wordSelection = this.__lineSelection = !1;
            this.__inputEnabled &&
              (this.this_onFocusIn(null),
              this.__stopCursorTimer(),
              this.__startCursorTimer(),
              S.__supportDOM &&
                this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0));
          }
        },
        this_onAddedToStage: function (a) {
          this.this_onFocusIn(null);
        },
        this_onEnterFrame: function (a) {
          this.__updateMouseDrag();
        },
        this_onFocusIn: function (a) {
          1 == this.get_type() &&
          null != this.stage &&
          this.stage.get_focus() == this
            ? this.__startTextInput()
            : 1 != this.get_type() &&
              this.get_selectable() &&
              null != this.stage &&
              this.stage.get_focus() == this &&
              this.__startCursorTimer();
        },
        this_onFocusOut: function (a) {
          this.__stopCursorTimer();
          this.__stopTextInput();
          this.__selectionIndex != this.__caretIndex &&
            ((this.__selectionIndex = this.__caretIndex),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        this_onKeyDown: function (a) {
          this.get_selectable() &&
            1 != this.get_type() &&
            67 == a.keyCode &&
            (a.commandKey || a.ctrlKey) &&
            (this.__caretIndex == this.__selectionIndex ||
              this.get_displayAsPassword() ||
              ic.set_text(
                this.__text.substring(this.__caretIndex, this.__selectionIndex),
              ));
        },
        this_onMouseDown: function (a) {
          if (this.get_selectable() || 1 == this.get_type()) {
            this.__lineSelection = 3 == a.clickCount;
            this.__wordSelection = 2 == a.clickCount;
            if (this.__lineSelection) {
              var b = this.__caretIndex;
              this.__caretIndex = this.__getPositionByIdentifier(
                a.stageX + this.get_scrollH(),
                a.stageY,
                !0,
              );
              this.__selectionIndex = this.__getOppositeIdentifierBound(b, !0);
            } else
              this.__wordSelection
                ? ((b = this.__caretIndex),
                  (this.__caretIndex = this.__getPositionByIdentifier(
                    a.stageX + this.get_scrollH(),
                    a.stageY,
                    !1,
                  )),
                  (this.__selectionIndex = this.__getOppositeIdentifierBound(
                    b,
                    !1,
                  )),
                  (this.__specialSelectionInitialIndex = b))
                : (this.__selectionIndex = this.__caretIndex =
                    this.__getPosition(
                      this.get_mouseX() + this.get_scrollH(),
                      this.get_mouseY(),
                    ));
            this.setSelection(this.__caretIndex, this.__selectionIndex);
            this.__updateLayout();
            S.__supportDOM ||
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
            null != this.stage &&
              (this.stage.addEventListener(
                'enterFrame',
                l(this, this.this_onEnterFrame),
              ),
              this.stage.addEventListener(
                'mouseMove',
                l(this, this.stage_onMouseMove),
              ),
              this.stage.addEventListener(
                'mouseUp',
                l(this, this.stage_onMouseUp),
              ));
          }
        },
        this_onMouseWheel: function (a) {
          this.get_mouseWheelEnabled() &&
            this.set_scrollV(
              Math.min(this.get_scrollV() - a.delta, this.get_maxScrollV()) | 0,
            );
        },
        window_onKeyDown: function (a, b) {
          switch (a) {
            case 8:
              this.__selectionIndex == this.__caretIndex &&
                0 < this.__caretIndex &&
                (this.__selectionIndex = this.__caretIndex - 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new va('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 97:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)) &&
                this.setSelection(0, this.__text.length);
              break;
            case 99:
              if (Wa.get_metaKey(b) || Wa.get_ctrlKey(b))
                this.__caretIndex == this.__selectionIndex ||
                  this.get_displayAsPassword() ||
                  ic.set_text(
                    this.__text.substring(
                      this.__caretIndex,
                      this.__selectionIndex,
                    ),
                  );
              break;
            case 120:
              (!Wa.get_metaKey(b) && !Wa.get_ctrlKey(b)) ||
                this.__caretIndex == this.__selectionIndex ||
                this.get_displayAsPassword() ||
                (ic.set_text(
                  this.__text.substring(
                    this.__caretIndex,
                    this.__selectionIndex,
                  ),
                ),
                this.replaceSelectedText(''),
                this.dispatchEvent(new va('change', !0)));
              break;
            case 127:
              this.__selectionIndex == this.__caretIndex &&
                this.__caretIndex < this.__text.length &&
                (this.__selectionIndex = this.__caretIndex + 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new va('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 1073741898:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretBeginningOfLine(),
                Wa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741901:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretEndOfLine(),
                Wa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741903:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)
                  ? this.__caretBeginningOfNextLine()
                  : this.__caretNextCharacter(),
                Wa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741904:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)
                  ? this.__caretBeginningOfPreviousLine()
                  : this.__caretPreviousCharacter(),
                Wa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741905:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretNextLine(),
                Wa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741906:
              this.get_selectable() &&
                (Wa.get_metaKey(b) || Wa.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretPreviousLine(),
                Wa.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 13:
            case 1073741912:
              this.__textEngine.multiline
                ? ((a = new Rd('textInput', !0, !0, '\n')),
                  this.dispatchEvent(a),
                  a.isDefaultPrevented() ||
                    (this.__replaceSelectedText('\n', !0),
                    this.dispatchEvent(new va('change', !0))))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
          }
        },
        window_onTextInput: function (a) {
          this.__replaceSelectedText(a, !0);
          this.dispatchEvent(new va('change', !0));
        },
        __class__: Gc,
        __properties__: u(sa.prototype.__properties__, {
          set_wordWrap: 'set_wordWrap',
          set_textColor: 'set_textColor',
          set_restrict: 'set_restrict',
          set_borderColor: 'set_borderColor',
          set_border: 'set_border',
          set_backgroundColor: 'set_backgroundColor',
          set_background: 'set_background',
          set_autoSize: 'set_autoSize',
          set_type: 'set_type',
          get_type: 'get_type',
          get_textWidth: 'get_textWidth',
          get_textHeight: 'get_textHeight',
          set_text: 'set_text',
          get_text: 'get_text',
          set_selectable: 'set_selectable',
          get_selectable: 'get_selectable',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_scrollH: 'set_scrollH',
          get_scrollH: 'get_scrollH',
          get_numLines: 'get_numLines',
          get_multiline: 'get_multiline',
          get_mouseWheelEnabled: 'get_mouseWheelEnabled',
          get_maxScrollV: 'get_maxScrollV',
          get_maxScrollH: 'get_maxScrollH',
          get_length: 'get_length',
          set_htmlText: 'set_htmlText',
          get_htmlText: 'get_htmlText',
          get_displayAsPassword: 'get_displayAsPassword',
          set_defaultTextFormat: 'set_defaultTextFormat',
          get_defaultTextFormat: 'get_defaultTextFormat',
          get_caretIndex: 'get_caretIndex',
          get_bottomScrollV: 'get_bottomScrollV',
        }),
      });
      var $d = function (a, b, c, d, f, h, k, g, p, t, n, m, x) {
        this.font = a;
        this.size = b;
        this.color = c;
        this.bold = d;
        this.italic = f;
        this.underline = h;
        this.url = k;
        this.target = g;
        this.align = p;
        this.leftMargin = t;
        this.rightMargin = n;
        this.indent = m;
        this.leading = x;
      };
      g['openfl.text.TextFormat'] = $d;
      $d.__name__ = 'openfl.text.TextFormat';
      $d.prototype = {
        clone: function () {
          var a = new $d(
            this.font,
            this.size,
            this.color,
            this.bold,
            this.italic,
            this.underline,
            this.url,
            this.target,
          );
          a.align = this.align;
          a.leftMargin = this.leftMargin;
          a.rightMargin = this.rightMargin;
          a.indent = this.indent;
          a.leading = this.leading;
          a.blockIndent = this.blockIndent;
          a.bullet = this.bullet;
          a.kerning = this.kerning;
          a.letterSpacing = this.letterSpacing;
          a.tabStops = this.tabStops;
          a.__ascent = this.__ascent;
          a.__descent = this.__descent;
          a.__cacheKey = this.__toCacheKey();
          return a;
        },
        __merge: function (a) {
          null != a.font && (this.font = a.font);
          null != a.size && (this.size = a.size);
          null != a.color && (this.color = a.color);
          null != a.bold && (this.bold = a.bold);
          null != a.italic && (this.italic = a.italic);
          null != a.underline && (this.underline = a.underline);
          null != a.url && (this.url = a.url);
          null != a.target && (this.target = a.target);
          null != a.align && (this.align = a.align);
          null != a.leftMargin && (this.leftMargin = a.leftMargin);
          null != a.rightMargin && (this.rightMargin = a.rightMargin);
          null != a.indent && (this.indent = a.indent);
          null != a.leading && (this.leading = a.leading);
          null != a.blockIndent && (this.blockIndent = a.blockIndent);
          null != a.bullet && (this.bullet = a.bullet);
          null != a.kerning && (this.kerning = a.kerning);
          null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
          null != a.tabStops && (this.tabStops = a.tabStops);
          null != a.__ascent && (this.__ascent = a.__ascent);
          null != a.__descent && (this.__descent = a.__descent);
          this.__toCacheKey();
        },
        __toCacheKey: function () {
          return (this.__cacheKey =
            '' +
            this.font +
            this.size +
            I.string(this.bold) +
            I.string(this.italic));
        },
        __class__: $d,
      };
      var qk = {
          fromString: function (a) {
            switch (a) {
              case 'center':
                return 0;
              case 'end':
                return 1;
              case 'justify':
                return 2;
              case 'left':
                return 3;
              case 'right':
                return 4;
              case 'start':
                return 5;
              default:
                return null;
            }
          },
        },
        Gg = function (a, b) {
          this.__collisions = [];
          this.__wordMap = new ac();
          this.set(a, b);
        };
      g['openfl.text._internal.CacheMeasurement'] = Gg;
      Gg.__name__ = 'openfl.text._internal.CacheMeasurement';
      Gg.prototype = {
        set: function (a, b) {
          this.__addCollision(a, b);
        },
        get: function (a) {
          return 1 < this.__collisions.length
            ? this.__wordMap.h[this.__collisions.indexOf(a)]
            : this.__wordMap.h[0];
        },
        __addCollision: function (a, b) {
          if (!this.exists(a)) {
            var c = this.__wordMap;
            a = this.__collisions.push(a) - 1;
            c.h[a] = b;
          }
        },
        exists: function (a) {
          return 0 == this.__collisions.length
            ? !1
            : -1 < this.__collisions.indexOf(a);
        },
        __class__: Gg,
      };
      var Da = function () {};
      g['openfl.text._internal.HTMLParser'] = Da;
      Da.__name__ = 'openfl.text._internal.HTMLParser';
      Da.parse = function (a, b, c, d, f) {
        a = b
          ? a.replace(Da.__regexBreakTag.r, '\n')
          : a.replace(Da.__regexBreakTag.r, '');
        a = a.replace(Da.__regexEntityNbsp.r, ' ');
        a = Da.__regexCharEntity.map(a, function (a) {
          var b = a.matched(1),
            c = a.matched(2);
          return null != b && ((b = I.parseInt(b)), null != b)
            ? String.fromCodePoint(b)
            : null != c && ((c = I.parseInt('0' + c)), null != c)
              ? String.fromCodePoint(c)
              : a.matched(0);
        });
        var h = a.split('<');
        if (1 == h.length) {
          a = Da.__htmlUnescape(a.replace(Da.__regexHTMLTag.r, ''));
          if (1 < f.get_length()) {
            var g = f.get_length() - 1;
            f.__tempIndex = 1;
            for (var t = 0, p = []; t < p.length; ) {
              var n = p[t++];
              f.insertAt(f.__tempIndex, n);
              f.__tempIndex++;
            }
            f.splice(f.__tempIndex, g);
          }
          b = f.get(0);
          b.format = d;
          b.start = 0;
          b.end = a.length;
        } else {
          g = f.get_length();
          t = f.__tempIndex = 0;
          for (p = []; t < p.length; )
            ((n = p[t++]), f.insertAt(f.__tempIndex, n), f.__tempIndex++);
          f.splice(f.__tempIndex, g);
          a = '';
          g = [d.clone()];
          t = [];
          n = !1;
          for (p = 0; p < h.length; ) {
            var x = h[p];
            ++p;
            if ('' != x) {
              var m = '/' == O.substr(x, 0, 1),
                q = x.indexOf('>'),
                z = q + 1,
                G = x.indexOf(' ');
              G = x.substring(m ? 1 : 0, -1 < G && G < q ? G : q).toLowerCase();
              if (m)
                0 != t.length &&
                  G == t[t.length - 1] &&
                  (t.pop(),
                  g.pop(),
                  (m = g[g.length - 1].clone()),
                  ('p' == G || 'li' == G) &&
                    0 < f.get_length() &&
                    (b && (a += '\n'), (n = !0)),
                  z < x.length &&
                    ((n = Da.__htmlUnescape(O.substr(x, z, null))),
                    f.push(new Vc(m, a.length, a.length + n.length)),
                    (a += n),
                    (n = !1)));
              else if (((m = g[g.length - 1].clone()), -1 < q)) {
                null != c &&
                  (c.__applyStyle(G, m),
                  Da.__regexClass.match(x) &&
                    (c.__applyStyle(
                      '.' + Da.__getAttributeMatch(Da.__regexClass),
                      m,
                    ),
                    c.__applyStyle(
                      G + '.' + Da.__getAttributeMatch(Da.__regexClass),
                      m,
                    )));
                switch (G) {
                  case 'a':
                    null != c && c.__applyStyle('a:link', m);
                    Da.__regexHref.match(x) &&
                      (m.url = Da.__getAttributeMatch(Da.__regexHref));
                    break;
                  case 'b':
                    m.bold = !0;
                    break;
                  case 'em':
                  case 'i':
                    m.italic = !0;
                    break;
                  case 'font':
                    Da.__regexFace.match(x) &&
                      (m.font = Da.__getAttributeMatch(Da.__regexFace));
                    Da.__regexColor.match(x) &&
                      (m.color = I.parseInt(
                        '0x' + Da.__getAttributeMatch(Da.__regexColor),
                      ));
                    if (Da.__regexSize.match(x)) {
                      q = Da.__getAttributeMatch(Da.__regexSize);
                      var l = O.cca(q, 0);
                      m.size =
                        43 == l || 45 == l
                          ? (2 <= g.length ? g[g.length - 2] : d).size +
                            I.parseInt(q)
                          : I.parseInt(q);
                    }
                    break;
                  case 'li':
                    0 < f.get_length() && !n && (a += '\n');
                    q = m.clone();
                    q.underline = !1;
                    f.push(new Vc(q, a.length, a.length + 2));
                    a += '\u2022 ';
                    break;
                  case 'p':
                    0 < f.get_length() && !n && (a += '\n');
                    Da.__regexAlign.match(x) &&
                      ((q = Da.__getAttributeMatch(
                        Da.__regexAlign,
                      ).toLowerCase()),
                      (m.align = qk.fromString(q)));
                    break;
                  case 'textformat':
                    Da.__regexBlockIndent.match(x) &&
                      (m.blockIndent = I.parseInt(
                        Da.__getAttributeMatch(Da.__regexBlockIndent),
                      ));
                    Da.__regexIndent.match(x) &&
                      (m.indent = I.parseInt(
                        Da.__getAttributeMatch(Da.__regexIndent),
                      ));
                    Da.__regexLeading.match(x) &&
                      (m.leading = I.parseInt(
                        Da.__getAttributeMatch(Da.__regexLeading),
                      ));
                    Da.__regexLeftMargin.match(x) &&
                      (m.leftMargin = I.parseInt(
                        Da.__getAttributeMatch(Da.__regexLeftMargin),
                      ));
                    Da.__regexRightMargin.match(x) &&
                      (m.rightMargin = I.parseInt(
                        Da.__getAttributeMatch(Da.__regexRightMargin),
                      ));
                    if (Da.__regexTabStops.match(x)) {
                      q = Da.__getAttributeMatch(Da.__regexTabStops).split(' ');
                      l = [];
                      for (var D = 0; D < q.length; ) {
                        var w = q[D];
                        ++D;
                        l.push(I.parseInt(w));
                      }
                      m.tabStops = l;
                    }
                    break;
                  case 'u':
                    m.underline = !0;
                }
                g.push(m);
                t.push(G);
                z < x.length &&
                  ((n = Da.__htmlUnescape(x.substring(z))),
                  f.push(new Vc(m, a.length, a.length + n.length)),
                  (a += n),
                  (n = !1));
              } else
                ((n = Da.__htmlUnescape(x)),
                  f.push(new Vc(m, a.length, a.length + n.length)),
                  (a += n),
                  (n = !1));
            }
          }
          0 == f.get_length() && f.push(new Vc(g[0], 0, 0));
        }
        return a;
      };
      Da.__getAttributeMatch = function (a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3);
      };
      Da.__htmlUnescape = function (a) {
        a = a.replace(Da.__regexEntityApos.r, "'");
        return M.htmlUnescape(a);
      };
      var Pf = function () {
        this.__shortWordMap = new Ia();
        this.__longWordMap = new Ia();
      };
      g['openfl.text._internal.ShapeCache'] = Pf;
      Pf.__name__ = 'openfl.text._internal.ShapeCache';
      Pf.hashFunction = function (a) {
        for (var b = 0, c, d = 0, f = a.length; d < f; )
          ((c = d++), (c = O.cca(a, c)), (b = (b << 5) - b + c), (b |= 0));
        return b;
      };
      Pf.prototype = {
        cache: function (a, b, c) {
          a = a.format.__cacheKey;
          return 15 < c.length
            ? this.__cacheLongWord(c, a, b)
            : this.__cacheShortWord(c, a, b);
        },
        __cacheShortWord: function (a, b, c) {
          if (Object.prototype.hasOwnProperty.call(this.__shortWordMap.h, b)) {
            var d = this.__shortWordMap.h[b];
            if (Object.prototype.hasOwnProperty.call(d.h, a)) return d.h[a];
            var f = c();
            d.h[a] = f;
          } else
            ((d = new Ia()),
              (f = c()),
              (d.h[a] = f),
              (this.__shortWordMap.h[b] = d));
          return c();
        },
        __cacheLongWord: function (a, b, c) {
          var d = Pf.hashFunction(a);
          if (Object.prototype.hasOwnProperty.call(this.__longWordMap.h, b)) {
            var f = this.__longWordMap.h[b];
            if (f.h.hasOwnProperty(d)) {
              var h = f.h[d];
              if (h.exists(a)) return h.get(a);
              h.set(a, c());
            } else ((h = new Gg(a, c())), (f.h[d] = h));
          } else
            ((f = new ac()),
              (h = new Gg(a, c())),
              (h.hash = d),
              (f.h[d] = h),
              (this.__longWordMap.h[b] = f));
          return c();
        },
        __class__: Pf,
      };
      var Db = function (a) {
        this.__shapeCache = new Pf();
        this.textField = a;
        this.height = this.width = 100;
        this.set_text('');
        this.bounds = new qa(0, 0, 0, 0);
        this.textBounds = new qa(0, 0, 0, 0);
        this.type = 0;
        this.autoSize = 2;
        this.embedFonts = !1;
        this.selectable = !0;
        this.borderColor = 0;
        this.border = !1;
        this.backgroundColor = 16777215;
        this.background = !1;
        this.gridFitType = 1;
        this.maxChars = 0;
        this.multiline = !1;
        this.numLines = 1;
        this.scrollH = this.sharpness = 0;
        this.set_scrollV(1);
        this.wordWrap = !1;
        this.lineAscents = X.toFloatVector(null);
        this.lineBreaks = X.toIntVector(null);
        this.lineDescents = X.toFloatVector(null);
        this.lineLeadings = X.toFloatVector(null);
        this.lineHeights = X.toFloatVector(null);
        this.lineWidths = X.toFloatVector(null);
        this.layoutGroups = X.toObjectVector(null);
        this.textFormatRanges = X.toObjectVector(null);
        null == Db.__context &&
          (Db.__context = window.document
            .createElement('canvas')
            .getContext('2d'));
      };
      g['openfl.text._internal.TextEngine'] = Db;
      Db.__name__ = 'openfl.text._internal.TextEngine';
      Db.findFont = function (a) {
        return ea.__fontByName.h[a];
      };
      Db.findFontVariant = function (a) {
        var b = a.font,
          c = a.bold;
        a = a.italic;
        null == b && (b = '_serif');
        var d = M.replace(M.replace(b, ' Normal', ''), ' Regular', '');
        return c &&
          a &&
          Object.prototype.hasOwnProperty.call(
            ea.__fontByName.h,
            d + ' Bold Italic',
          )
          ? Db.findFont(d + ' Bold Italic')
          : c &&
              Object.prototype.hasOwnProperty.call(
                ea.__fontByName.h,
                d + ' Bold',
              )
            ? Db.findFont(d + ' Bold')
            : a &&
                Object.prototype.hasOwnProperty.call(
                  ea.__fontByName.h,
                  d + ' Italic',
                )
              ? Db.findFont(d + ' Italic')
              : Db.findFont(b);
      };
      Db.getFormatHeight = function (a) {
        var b = Db.getFont(a);
        Db.__context.font = b;
        b = Db.getFontInstance(a);
        if (null != a.__ascent) {
          var c = a.size * a.__ascent;
          b = a.size * a.__descent;
        } else
          null != b && 0 != b.unitsPerEM
            ? ((c = (b.ascender / b.unitsPerEM) * a.size),
              (b = Math.abs((b.descender / b.unitsPerEM) * a.size)))
            : ((c = a.size), (b = 0.185 * a.size));
        return c + b + a.leading;
      };
      Db.getFont = function (a) {
        var b = a.font,
          c = a.bold,
          d = a.italic;
        null == b && (b = '_serif');
        var f = M.replace(M.replace(b, ' Normal', ''), ' Regular', '');
        c &&
        d &&
        Object.prototype.hasOwnProperty.call(
          ea.__fontByName.h,
          f + ' Bold Italic',
        )
          ? ((b = f + ' Bold Italic'), (d = c = !1))
          : c &&
              Object.prototype.hasOwnProperty.call(
                ea.__fontByName.h,
                f + ' Bold',
              )
            ? ((b = f + ' Bold'), (c = !1))
            : d &&
                Object.prototype.hasOwnProperty.call(
                  ea.__fontByName.h,
                  f + ' Italic',
                )
              ? ((b = f + ' Italic'), (d = !1))
              : (c &&
                  (-1 < b.indexOf(' Bold ') || M.endsWith(b, ' Bold')) &&
                  (c = !1),
                d &&
                  (-1 < b.indexOf(' Italic ') || M.endsWith(b, ' Italic')) &&
                  (d = !1));
        c = (d ? 'italic ' : 'normal ') + 'normal ' + (c ? 'bold ' : 'normal ');
        c += a.size + 'px';
        c += '/' + (a.size + 3) + 'px ';
        switch (b) {
          case '_sans':
            a = 'sans-serif';
            break;
          case '_serif':
            a = 'serif';
            break;
          case '_typewriter':
            a = 'monospace';
            break;
          default:
            a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, '$1') + "'";
        }
        return (c += '' + a);
      };
      Db.getFontInstance = function (a) {
        return Db.findFontVariant(a);
      };
      Db.prototype = {
        createRestrictRegexp: function (a) {
          var b = '',
            c = !1;
          a = new xa('\\^([^\\^]+)', 'gu').map(a, function (a) {
            if (c) return ((c = !c), a.matched(1));
            b += a.matched(1);
            c = !c;
            return '';
          });
          var d = [];
          0 < a.length && d.push('[^' + a + ']');
          0 < b.length && d.push('[' + b + ']');
          return new xa('(' + d.join('|') + ')', 'g');
        },
        getBounds: function () {
          var a = this.border ? 1 : 0;
          this.bounds.width = this.width + a;
          this.bounds.height = this.height + a;
          a = this.width;
          for (
            var b = this.height,
              c = this.layoutGroups.get_length() - 1,
              d = 0,
              f = this.layoutGroups.get_length();
            d < f;

          ) {
            var h = d++,
              g = this.layoutGroups.get(h);
            if (h != c || g.startIndex != g.endIndex || 1 == this.type)
              (g.offsetX < a && (a = g.offsetX),
                g.offsetY < b && (b = g.offsetY));
          }
          a >= this.width && (a = 2);
          b >= this.height && (b = 2);
          this.textBounds.setTo(
            Math.max(a - 2, 0),
            Math.max(b - 2, 0),
            Math.min(this.textWidth + 4, this.bounds.width),
            Math.min(1.185 * this.textHeight + 4, this.bounds.height),
          );
        },
        getLineBreaks: function () {
          this.lineBreaks.set_length(0);
          for (var a = -1, b; a < this.text.length; )
            if (
              ((b = this.text.indexOf('\n', a + 1)),
              (a = this.text.indexOf('\r', a + 1)),
              (a = -1 == a ? b : -1 == b ? a : a < b ? a : b),
              -1 < a)
            )
              this.lineBreaks.push(a);
            else break;
        },
        getLineMeasurements: function () {
          this.lineAscents.set_length(0);
          this.lineDescents.set_length(0);
          this.lineLeadings.set_length(0);
          this.lineHeights.set_length(0);
          this.lineWidths.set_length(0);
          var a = 0,
            b = 0,
            c = null,
            d = 0,
            f = 0;
          this.textHeight = this.textWidth = 0;
          this.numLines = 1;
          this.maxScrollH = 0;
          for (
            var h = this.layoutGroups.get_length() - 1,
              g = 0,
              t = this.layoutGroups.get_length();
            g < t;

          ) {
            var p = g++;
            var n = this.layoutGroups.get(p);
            if (p != h || n.startIndex != n.endIndex || 1 == this.type) {
              for (; n.lineIndex > this.numLines - 1; )
                (this.lineAscents.push(a),
                  this.lineDescents.push(b),
                  this.lineLeadings.push(null != c ? c : 0),
                  this.lineHeights.push(d),
                  this.lineWidths.push(f),
                  (b = a = 0),
                  (c = null),
                  (f = d = 0),
                  this.numLines++);
              a = Math.max(a, n.ascent);
              b = Math.max(b, n.descent);
              c = null == c ? n.leading : Math.max(c, n.leading) | 0;
              d = Math.max(d, n.height);
              f = n.offsetX - 2 + n.width;
              f > this.textWidth && (this.textWidth = f);
              p = Math.ceil(n.offsetY - 2 + n.ascent + n.descent);
              p > this.textHeight && (this.textHeight = p);
            }
          }
          0 == this.textHeight &&
            null != this.textField &&
            1 == this.type &&
            ((a = this.textField.__textFormat),
            (b = Db.getFontInstance(a)),
            null != a.__ascent
              ? ((h = a.size * a.__ascent), (g = a.size * a.__descent))
              : null != b && 0 != b.unitsPerEM
                ? ((h = (b.ascender / b.unitsPerEM) * a.size),
                  (g = Math.abs((b.descender / b.unitsPerEM) * a.size)))
                : ((h = a.size), (g = 0.185 * a.size)),
            (c = a.leading),
            (a = h),
            (b = g),
            (this.textHeight = p = Math.ceil(h + g)));
          this.lineAscents.push(a);
          this.lineDescents.push(b);
          this.lineLeadings.push(null != c ? c : 0);
          this.lineHeights.push(d);
          this.lineWidths.push(f);
          1 == this.numLines && 0 < c && (this.textHeight += c);
          if (2 != this.autoSize)
            switch (this.autoSize) {
              case 0:
              case 1:
              case 3:
                (this.wordWrap || (this.width = this.textWidth + 4),
                  (this.height = this.textHeight + 4),
                  (this.bottomScrollV = this.numLines));
            }
          this.maxScrollH =
            this.textWidth > this.width - 4
              ? (this.textWidth - this.width + 4) | 0
              : 0;
          this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH);
        },
        getLayoutGroups: function () {
          var a = this;
          this.layoutGroups.set_length(0);
          if (null != this.text && '' != this.text) {
            var b = -1,
              c = null,
              d = null,
              f = Gc.__defaultTextFormat.clone(),
              h = 0,
              g = 0,
              t = 0,
              p = 0,
              n = 3,
              x = 0,
              m = 0,
              q = 0,
              z = 0,
              G = !0,
              l = null,
              D = null,
              w = 0,
              F = 0,
              B = 0,
              r = -2,
              u = -1,
              H = this.text.indexOf(' '),
              C = 0,
              ba =
                C < this.lineBreaks.get_length() ? this.lineBreaks.get(C) : -1,
              ta = 0,
              I = 0,
              ra = 0,
              M = 0,
              N = function (b, d, h) {
                var g = function () {
                  var c = [];
                  if (null == a.__useIntAdvances) {
                    var f = new xa('Trident/7.0', '');
                    a.__useIntAdvances = f.match(y.navigator.userAgent);
                  }
                  if (a.__useIntAdvances) {
                    var g = 0;
                    f = d;
                    for (var k = h; f < k; ) {
                      var m = f++;
                      m = a.measureText(b.substring(d, m + 1));
                      c.push(m - g);
                      g = m;
                    }
                  } else
                    for (f = d, k = h; f < k; )
                      ((m = f++),
                        m < b.length - 1
                          ? ((g = a.measureText(b.charAt(m + 1))),
                            (g = a.measureText(O.substr(b, m, 2)) - g))
                          : (g = Db.__context.measureText(b.charAt(m)).width),
                        c.push(g));
                  return c;
                };
                return 2 == f.align
                  ? g()
                  : a.__shapeCache.cache(c, g, b.substring(d, h));
              },
              oa = function (a) {
                for (var b = 0, c = 0; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b += d;
                }
                return b;
              },
              ka = function () {
                return 2 + q + x + (G ? m : 0);
              },
              A = function () {
                return a.width - 2 - z - ka();
              },
              Y = function (b, d) {
                null == l || l.startIndex != l.endIndex
                  ? ((l = new ri(c.format, b, d)), a.layoutGroups.push(l))
                  : ((l.format = c.format),
                    (l.startIndex = b),
                    (l.endIndex = d));
              },
              Ea = function () {
                null != f.__ascent
                  ? ((g = f.size * f.__ascent), (p = f.size * f.__descent))
                  : null != d && 0 != d.unitsPerEM
                    ? ((g = (d.ascender / d.unitsPerEM) * f.size),
                      (p = Math.abs((d.descender / d.unitsPerEM) * f.size)))
                    : ((g = f.size), (p = 0.185 * f.size));
                h = f.leading;
                F = Math.ceil(g + p + h);
                F > B && (B = F);
                g > t && (t = g);
              },
              L = function () {
                G = !0;
                n = null != f.align ? f.align : 3;
                x = null != f.blockIndent ? f.blockIndent : 0;
                m = null != f.indent ? f.indent : 0;
                q = null != f.leftMargin ? f.leftMargin : 0;
                z = null != f.rightMargin ? f.rightMargin : 0;
              },
              E = function () {
                if (b < a.textFormatRanges.get_length() - 1) {
                  b += 1;
                  c = a.textFormatRanges.get(b);
                  f.__merge(c.format);
                  var h = Db.getFont(f);
                  Db.__context.font = h;
                  d = Db.getFontInstance(f);
                  return !0;
                }
                return !1;
              },
              J = function (d, f) {
                if (d >= f) ((D = []), (w = 0));
                else if (f <= c.end) ((D = N(a.text, d, f)), (w = oa(D)));
                else {
                  var h = d;
                  d = c.end;
                  var g = 0;
                  D = [];
                  for (w = 0; ; )
                    if (
                      (h != d && ((h = N(a.text, h, d)), (D = D.concat(h))),
                      d != f)
                    ) {
                      if (!E()) {
                        Na.warn(
                          "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                          {
                            fileName: 'openfl/text/_internal/TextEngine.hx',
                            lineNumber: 1121,
                            className: 'openfl.text._internal.TextEngine',
                            methodName: 'getLayoutGroups',
                          },
                        );
                        break;
                      }
                      h = d;
                      d = f < c.end ? f : c.end;
                      ++g;
                    } else {
                      w = oa(D);
                      break;
                    }
                  b -= g + 1;
                  E();
                }
              },
              Z = function (b) {
                if (b <= c.end) {
                  D = N(a.text, ra, b);
                  w = oa(D);
                  Y(ra, b);
                  l.positions = D;
                  var d = ta,
                    f = ka();
                  l.offsetX = d + f;
                  l.ascent = g;
                  l.descent = p;
                  l.leading = h;
                  l.lineIndex = M;
                  l.offsetY = I + 2;
                  l.width = w;
                  l.height = F;
                  ta += w;
                  b == c.end && ((l = null), E(), Ea());
                } else
                  for (;;) {
                    var k = b < c.end ? b : c.end;
                    ra != k &&
                      ((D = N(a.text, ra, k)),
                      (w = oa(D)),
                      Y(ra, k),
                      (l.positions = D),
                      (d = ta),
                      (f = ka()),
                      (l.offsetX = d + f),
                      (l.ascent = g),
                      (l.descent = p),
                      (l.leading = h),
                      (l.lineIndex = M),
                      (l.offsetY = I + 2),
                      (l.width = w),
                      (l.height = F),
                      (ta += w),
                      (ra = k));
                    k == c.end && (l = null);
                    if (k == b) break;
                    if (!E()) {
                      Na.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/_internal/TextEngine.hx',
                          lineNumber: 1209,
                          className: 'openfl.text._internal.TextEngine',
                          methodName: 'getLayoutGroups',
                        },
                      );
                      break;
                    }
                    Ea();
                  }
                ra = b;
              },
              Ab = function () {
                Ea();
                for (var b = a.layoutGroups.get_length(); -1 < --b; ) {
                  var c = a.layoutGroups.get(b);
                  if (c.lineIndex < M) break;
                  c.lineIndex > M || ((c.ascent = t), (c.height = B));
                }
                I += B;
                B = t = 0;
                M += 1;
                ta = 0;
                G = !1;
              },
              K = function (b) {
                if (4 <= a.width && a.wordWrap) {
                  var c = D;
                  var d = oa(c);
                  for (var f = c.length - 1; 0 <= f; ) {
                    var h = O.cca(a.text, ra + f);
                    if (32 != h && 9 != h) break;
                    d -= c[f];
                    --f;
                  }
                  for (; 0 < c.length && ta + d > A(); ) {
                    for (h = f = d = 0; ta + h < A(); ) {
                      var g = c[f];
                      0 == g ? (++f, ++d) : ((h += g), ++f);
                    }
                    if (f == d) f = d + 1;
                    else
                      for (; 1 < f && ta + h > A(); )
                        (--f,
                          0 < f - d
                            ? (J(ra, ra + f - d), (h = w))
                            : ((f = 1), (d = 0), J(ra, ra + 1), (h = 0)));
                    c = ra + f - d;
                    Z(c);
                    Ab();
                    J(c, b);
                    c = D;
                    d = w;
                  }
                }
                Z(b);
              };
            E();
            L();
            Ea();
            for (var za, R = this.text.length + 1; ra < R; )
              if (-1 < ba && (-1 == H || ba < H))
                (ra <= ba
                  ? (J(ra, ba), K(ba), (l = null))
                  : null != l &&
                    l.startIndex != l.endIndex &&
                    (l.endIndex == H &&
                      (l.width -= l.positions[l.positions.length - 1]),
                    (l = null)),
                  Ab(),
                  c.end == ba && (E(), Ea()),
                  (ra = ba + 1),
                  (u = ba),
                  ++C,
                  (ba =
                    C < this.lineBreaks.get_length()
                      ? this.lineBreaks.get(C)
                      : -1),
                  L());
              else if (-1 < H)
                for (
                  null != l && l.startIndex != l.endIndex && (l = null),
                    za = !1;
                  ra < this.text.length;

                ) {
                  var S = -1;
                  -1 == H
                    ? (S = ba)
                    : ((S = H + 1), -1 < ba && ba < S && (S = ba));
                  -1 == S && (S = this.text.length);
                  J(ra, S);
                  if (2 == n) {
                    if (0 < D.length && ra == r) {
                      ra += 1;
                      var P = D.shift();
                      w -= P;
                      ta += P;
                    }
                    0 < D.length &&
                      S == H + 1 &&
                      (--S, (P = D.pop()), (w -= P));
                  }
                  this.wordWrap &&
                    ta + w > A() &&
                    ((za = !0),
                    0 < D.length &&
                      S == H + 1 &&
                      ta + w - D[D.length - 1] <= A() &&
                      (za = !1));
                  if (za) {
                    2 != n &&
                      (null != l || 0 < this.layoutGroups.get_length()) &&
                      ((za = l),
                      null == za &&
                        (za = this.layoutGroups.get(
                          this.layoutGroups.get_length() - 1,
                        )),
                      (za.width -= za.positions[za.positions.length - 1]),
                      za.endIndex--);
                    za = this.layoutGroups.get_length() - 1;
                    for (P = 0; 0 <= za; ) {
                      l = this.layoutGroups.get(za);
                      if (0 < za && l.startIndex > r) ++P;
                      else break;
                      --za;
                    }
                    ra == r + 1 && Ab();
                    ta = 0;
                    if (0 < P) {
                      za = this.layoutGroups.get(
                        this.layoutGroups.get_length() - P,
                      ).offsetX;
                      P = this.layoutGroups.get_length() - P;
                      for (var T = this.layoutGroups.get_length(); P < T; ) {
                        var ub = P++;
                        l = this.layoutGroups.get(ub);
                        l.offsetX -= za;
                        l.offsetY = I + 2;
                        l.lineIndex = M;
                        ta += l.width;
                      }
                    }
                    K(S);
                    za = !1;
                  } else
                    null != l && ra == H && r != H - 1
                      ? (2 != n &&
                          ((l.endIndex = H),
                          (l.positions = l.positions.concat(D)),
                          (l.width += w)),
                        (ta += w),
                        (ra = S))
                      : null == l || 2 == n
                        ? (K(S), S == this.text.length && Ab())
                        : ((P = S < c.end ? S : c.end),
                          P < S && ((D = N(this.text, ra, P)), (w = oa(D))),
                          (l.endIndex = P),
                          (l.positions = l.positions.concat(D)),
                          (l.width += w),
                          (ta += w),
                          P == c.end &&
                            ((l = null), E(), Ea(), (ra = P), P != S && Z(S)),
                          ba == S && ++S,
                          (ra = S),
                          S == this.text.length &&
                            (Ab(),
                            -1 != ba &&
                              ((u = ba),
                              ++C,
                              (ba =
                                C < this.lineBreaks.get_length()
                                  ? this.lineBreaks.get(C)
                                  : -1))));
                  S = this.text.indexOf(' ', ra);
                  ba == r &&
                    ((l.endIndex = ba),
                    0 > ba - l.startIndex - l.positions.length &&
                      l.positions.push(0),
                    (ra = ba + 1));
                  r = H;
                  H = S;
                  if (
                    (-1 < ba && ba <= ra && (H > ba || -1 == H)) ||
                    ra > this.text.length
                  )
                    break;
                }
              else
                (ra < this.text.length &&
                  (J(ra, this.text.length), K(this.text.length), Ab()),
                  (ra += 1));
            u == ra - 2 &&
              -1 < u &&
              (Y(ra - 1, ra - 1),
              (l.positions = []),
              (l.ascent = g),
              (l.descent = p),
              (l.leading = h),
              (l.lineIndex = M),
              (l.offsetX = ka()),
              (l.offsetY = I + 2),
              (l.width = 0),
              (l.height = F));
          }
        },
        measureText: function (a) {
          return Db.__context.measureText(a).width;
        },
        restrictText: function (a) {
          if (null == a) return a;
          null != this.__restrictRegexp &&
            (a = this.__restrictRegexp.split(a).join(''));
          return a;
        },
        setTextAlignment: function () {
          for (
            var a = -1,
              b = 0,
              c,
              d,
              f = !1,
              h = 0,
              g = this.layoutGroups.get_length();
            h < g;

          ) {
            var t = h++;
            c = this.layoutGroups.get(t);
            if (c.lineIndex != a)
              switch (
                ((a = c.lineIndex),
                (b = this.width - 4 - c.format.rightMargin),
                c.format.align)
              ) {
                case 0:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round((b - this.lineWidths.get(a)) / 2)
                      : 0;
                  break;
                case 2:
                  if (this.lineWidths.get(a) < b) {
                    d = 1;
                    for (
                      var p = t + 1, n = this.layoutGroups.get_length();
                      p < n;

                    ) {
                      var x = p++;
                      if (this.layoutGroups.get(x).lineIndex == a)
                        (0 != x &&
                          32 !=
                            O.cca(
                              this.text,
                              this.layoutGroups.get(x).startIndex - 1,
                            )) ||
                          ++d;
                      else break;
                    }
                    if (
                      1 < d &&
                      ((c = this.layoutGroups.get(t + d - 1)),
                      (p = O.cca(this.text, c.endIndex)),
                      c.endIndex < this.text.length && 10 != p && 13 != p)
                    ) {
                      b = (b - this.lineWidths.get(a)) / (d - 1);
                      f = !0;
                      p = 1;
                      do this.layoutGroups.get(t + p).offsetX += b * p;
                      while (++p < d);
                    }
                  }
                  b = 0;
                  break;
                case 4:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round(b - this.lineWidths.get(a))
                      : 0;
                  break;
                default:
                  b = 0;
              }
            0 < b && (c.offsetX += b);
          }
          f && this.getLineMeasurements();
        },
        update: function () {
          null == this.text || 0 == this.textFormatRanges.get_length()
            ? (this.lineAscents.set_length(0),
              this.lineBreaks.set_length(0),
              this.lineDescents.set_length(0),
              this.lineLeadings.set_length(0),
              this.lineHeights.set_length(0),
              this.lineWidths.set_length(0),
              this.layoutGroups.set_length(0),
              (this.textHeight = this.textWidth = 0),
              (this.numLines = 1),
              (this.maxScrollH = 0),
              (this.bottomScrollV = this.maxScrollV = 1))
            : (this.getLineBreaks(),
              this.getLayoutGroups(),
              this.getLineMeasurements(),
              this.setTextAlignment());
          this.getBounds();
        },
        get_bottomScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (
            var a = this.lineHeights.get_length(),
              b =
                this.lineLeadings.get_length() == a
                  ? -this.lineLeadings.get(a - 1)
                  : 0,
              c = (0 < this.get_scrollV() ? this.get_scrollV() : 1) - 1,
              d = this.lineHeights.get_length();
            c < d;

          ) {
            var f = c++,
              h = this.lineHeights.get(f);
            b += h;
            if (b > this.height - 4) {
              a = f + (0 <= b - this.height ? 0 : 1);
              break;
            }
          }
          return a < this.get_scrollV() ? this.get_scrollV() : a;
        },
        get_maxScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (var a = this.numLines - 1, b = 0; 0 <= a; ) {
            b += this.lineHeights.get(a);
            if (b > this.height - 4) {
              a += 0 > b - this.height ? 1 : 2;
              break;
            }
            --a;
          }
          return 1 > a ? 1 : a;
        },
        set_restrict: function (a) {
          if (this.restrict == a) return this.restrict;
          this.restrict = a;
          this.__restrictRegexp =
            null == this.restrict || 0 == this.restrict.length
              ? null
              : this.createRestrictRegexp(a);
          return this.restrict;
        },
        get_scrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.get_maxScrollV();
          return this.scrollV > a ? a : this.scrollV;
        },
        set_scrollV: function (a) {
          1 > a
            ? (a = 1)
            : a > this.get_maxScrollV() && (a = this.get_maxScrollV());
          return (this.scrollV = a);
        },
        set_text: function (a) {
          return (this.text = a);
        },
        __class__: Db,
        __properties__: {
          set_text: 'set_text',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_restrict: 'set_restrict',
          get_maxScrollV: 'get_maxScrollV',
          get_bottomScrollV: 'get_bottomScrollV',
        },
      };
      var Vc = function (a, b, c) {
        this.format = a;
        this.start = b;
        this.end = c;
      };
      g['openfl.text._internal.TextFormatRange'] = Vc;
      Vc.__name__ = 'openfl.text._internal.TextFormatRange';
      Vc.prototype = { __class__: Vc };
      var ri = function (a, b, c) {
        this.format = a;
        this.startIndex = b;
        this.endIndex = c;
      };
      g['openfl.text._internal.TextLayoutGroup'] = ri;
      ri.__name__ = 'openfl.text._internal.TextLayoutGroup';
      ri.prototype = { __class__: ri };
      var Ba = function () {
        ma.call(this);
        Ba.__instances.push(this);
      };
      g['openfl.ui.GameInput'] = Ba;
      Ba.__name__ = 'openfl.ui.GameInput';
      Ba.__getDevice = function (a) {
        if (null == a) return null;
        if (null == Ba.__devices.h.__keys__[a.__id__]) {
          var b = bc.__getDeviceData(),
            c = b[a.id].id;
          b = bc.__getDeviceData();
          b = new Aj(c, b[a.id].id);
          Ba.__deviceList.push(b);
          Ba.__devices.set(a, b);
          Ba.numDevices = Ba.__deviceList.length;
        }
        return Ba.__devices.h[a.__id__];
      };
      Ba.__onGamepadAxisMove = function (a, b, c) {
        a = Ba.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__axis.h.hasOwnProperty(b)) {
            if (null == b) var d = 'null';
            else
              switch (b) {
                case 0:
                  d = 'LEFT_X';
                  break;
                case 1:
                  d = 'LEFT_Y';
                  break;
                case 2:
                  d = 'RIGHT_X';
                  break;
                case 3:
                  d = 'RIGHT_Y';
                  break;
                case 4:
                  d = 'TRIGGER_LEFT';
                  break;
                case 5:
                  d = 'TRIGGER_RIGHT';
                  break;
                default:
                  d = 'UNKNOWN (' + b + ')';
              }
            d = new qd(a, 'AXIS_' + d, -1, 1);
            a.__axis.h[b] = d;
            a.__controls.push(d);
          }
          d = a.__axis.h[b];
          d.value = c;
          d.dispatchEvent(new va('change'));
        }
      };
      Ba.__onGamepadButtonDown = function (a, b) {
        a = Ba.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = 'null';
            else
              switch (b) {
                case 0:
                  c = 'A';
                  break;
                case 1:
                  c = 'B';
                  break;
                case 2:
                  c = 'X';
                  break;
                case 3:
                  c = 'Y';
                  break;
                case 4:
                  c = 'BACK';
                  break;
                case 5:
                  c = 'GUIDE';
                  break;
                case 6:
                  c = 'START';
                  break;
                case 7:
                  c = 'LEFT_STICK';
                  break;
                case 8:
                  c = 'RIGHT_STICK';
                  break;
                case 9:
                  c = 'LEFT_SHOULDER';
                  break;
                case 10:
                  c = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  c = 'DPAD_UP';
                  break;
                case 12:
                  c = 'DPAD_DOWN';
                  break;
                case 13:
                  c = 'DPAD_LEFT';
                  break;
                case 14:
                  c = 'DPAD_RIGHT';
                  break;
                default:
                  c = 'UNKNOWN (' + b + ')';
              }
            c = new qd(a, 'BUTTON_' + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 1;
          c.dispatchEvent(new va('change'));
        }
      };
      Ba.__onGamepadButtonUp = function (a, b) {
        a = Ba.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = 'null';
            else
              switch (b) {
                case 0:
                  c = 'A';
                  break;
                case 1:
                  c = 'B';
                  break;
                case 2:
                  c = 'X';
                  break;
                case 3:
                  c = 'Y';
                  break;
                case 4:
                  c = 'BACK';
                  break;
                case 5:
                  c = 'GUIDE';
                  break;
                case 6:
                  c = 'START';
                  break;
                case 7:
                  c = 'LEFT_STICK';
                  break;
                case 8:
                  c = 'RIGHT_STICK';
                  break;
                case 9:
                  c = 'LEFT_SHOULDER';
                  break;
                case 10:
                  c = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  c = 'DPAD_UP';
                  break;
                case 12:
                  c = 'DPAD_DOWN';
                  break;
                case 13:
                  c = 'DPAD_LEFT';
                  break;
                case 14:
                  c = 'DPAD_RIGHT';
                  break;
                default:
                  c = 'UNKNOWN (' + b + ')';
              }
            c = new qd(a, 'BUTTON_' + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 0;
          c.dispatchEvent(new va('change'));
        }
      };
      Ba.__onGamepadConnect = function (a) {
        a = Ba.__getDevice(a);
        if (null != a)
          for (var b = 0, c = Ba.__instances; b < c.length; ) {
            var d = c[b];
            ++b;
            d.dispatchEvent(new Mf('deviceAdded', !0, !1, a));
          }
      };
      Ba.__onGamepadDisconnect = function (a) {
        var b = Ba.__devices.h[a.__id__];
        if (null != b) {
          null != Ba.__devices.h.__keys__[a.__id__] &&
            (O.remove(Ba.__deviceList, Ba.__devices.h[a.__id__]),
            Ba.__devices.remove(a));
          Ba.numDevices = Ba.__deviceList.length;
          a = 0;
          for (var c = Ba.__instances; a < c.length; ) {
            var d = c[a];
            ++a;
            d.dispatchEvent(new Mf('deviceRemoved', !0, !1, b));
          }
        }
      };
      Ba.__super__ = ma;
      Ba.prototype = u(ma.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          ma.prototype.addEventListener.call(this, a, b, c, d, f);
          if ('deviceAdded' == a)
            for (a = 0, b = Ba.__deviceList; a < b.length; )
              ((c = b[a]),
                ++a,
                this.dispatchEvent(new Mf('deviceAdded', !0, !1, c)));
        },
        __class__: Ba,
      });
      var qd = function (a, b, c, d, f) {
        null == f && (f = 0);
        ma.call(this);
        this.device = a;
        this.id = b;
        this.minValue = c;
        this.maxValue = d;
        this.value = f;
      };
      g['openfl.ui.GameInputControl'] = qd;
      qd.__name__ = 'openfl.ui.GameInputControl';
      qd.__super__ = ma;
      qd.prototype = u(ma.prototype, { __class__: qd });
      var Aj = function (a, b) {
        this.__controls = [];
        this.__button = new ac();
        this.__axis = new ac();
        this.id = a;
        this.name = b;
        a = new qd(this, 'AXIS_0', -1, 1);
        this.__axis.h[0] = a;
        this.__controls.push(a);
        a = new qd(this, 'AXIS_1', -1, 1);
        this.__axis.h[1] = a;
        this.__controls.push(a);
        a = new qd(this, 'AXIS_2', -1, 1);
        this.__axis.h[2] = a;
        this.__controls.push(a);
        a = new qd(this, 'AXIS_3', -1, 1);
        this.__axis.h[3] = a;
        this.__controls.push(a);
        a = new qd(this, 'AXIS_4', -1, 1);
        this.__axis.h[4] = a;
        this.__controls.push(a);
        a = new qd(this, 'AXIS_5', -1, 1);
        this.__axis.h[5] = a;
        this.__controls.push(a);
        for (b = 0; 15 > b; ) {
          var c = b++;
          a = new qd(this, 'BUTTON_' + c, 0, 1);
          this.__button.h[c] = a;
          this.__controls.push(a);
        }
      };
      g['openfl.ui.GameInputDevice'] = Aj;
      Aj.__name__ = 'openfl.ui.GameInputDevice';
      Aj.prototype = { __class__: Aj };
      var Pj = function () {};
      g['openfl.ui.Keyboard'] = Pj;
      Pj.__name__ = 'openfl.ui.Keyboard';
      Pj.__getCharCode = function (a, b) {
        null == b && (b = !1);
        if (b) {
          switch (a) {
            case 48:
              return 41;
            case 49:
              return 33;
            case 50:
              return 64;
            case 51:
              return 35;
            case 52:
              return 36;
            case 53:
              return 37;
            case 54:
              return 94;
            case 55:
              return 38;
            case 56:
              return 42;
            case 57:
              return 40;
            case 186:
              return 58;
            case 187:
              return 43;
            case 188:
              return 60;
            case 189:
              return 95;
            case 190:
              return 62;
            case 191:
              return 63;
            case 192:
              return 126;
            case 219:
              return 123;
            case 220:
              return 124;
            case 221:
              return 125;
            case 222:
              return 34;
          }
          if (65 <= a && 90 >= a) return a - 65 + 65;
        } else {
          switch (a) {
            case 8:
              return 8;
            case 9:
              return 9;
            case 13:
              return 13;
            case 27:
              return 27;
            case 32:
              return 32;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
          }
          if (48 <= a && 57 >= a) return a - 48 + 48;
          if (65 <= a && 90 >= a) return a - 65 + 97;
        }
        if (96 <= a && 105 >= a) return a - 96 + 48;
        switch (a) {
          case 8:
            return 8;
          case 13:
            return 13;
          case 46:
            return 127;
          case 106:
            return 42;
          case 107:
            return 43;
          case 108:
            return 44;
          case 110:
            return 45;
          case 111:
            return 46;
        }
        return 0;
      };
      var mj = function () {};
      g['openfl.ui.Mouse'] = mj;
      mj.__name__ = 'openfl.ui.Mouse';
      var ok = {
          toLimeCursor: function (a) {
            switch (a) {
              case 'arrow':
                return Qb.ARROW;
              case 'auto':
                return Qb.DEFAULT;
              case 'button':
                return Qb.POINTER;
              case 'crosshair':
                return Qb.CROSSHAIR;
              case 'custom':
                return Qb.CUSTOM;
              case 'hand':
                return Qb.MOVE;
              case 'ibeam':
                return Qb.TEXT;
              case 'resize_nesw':
                return Qb.RESIZE_NESW;
              case 'resize_ns':
                return Qb.RESIZE_NS;
              case 'resize_nwse':
                return Qb.RESIZE_NWSE;
              case 'resize_we':
                return Qb.RESIZE_WE;
              case 'wait':
                return Qb.WAIT;
              case 'waitarrow':
                return Qb.WAIT_ARROW;
              default:
                return Qb.DEFAULT;
            }
          },
        },
        pa = function (a) {
          null == a && (a = !1);
          this.debugEnabled = a;
          pa.initialized || pa.init();
        };
      g['openfl.utils.AGALMiniAssembler'] = pa;
      pa.__name__ = 'openfl.utils.AGALMiniAssembler';
      pa.init = function () {
        pa.initialized = !0;
        var a = pa.OPMAP,
          b = new kb('mov', 2, 0, 0);
        a.h.mov = b;
        a = pa.OPMAP;
        b = new kb('add', 3, 1, 0);
        a.h.add = b;
        a = pa.OPMAP;
        b = new kb('sub', 3, 2, 0);
        a.h.sub = b;
        a = pa.OPMAP;
        b = new kb('mul', 3, 3, 0);
        a.h.mul = b;
        a = pa.OPMAP;
        b = new kb('div', 3, 4, 0);
        a.h.div = b;
        a = pa.OPMAP;
        b = new kb('rcp', 2, 5, 0);
        a.h.rcp = b;
        a = pa.OPMAP;
        b = new kb('min', 3, 6, 0);
        a.h.min = b;
        a = pa.OPMAP;
        b = new kb('max', 3, 7, 0);
        a.h.max = b;
        a = pa.OPMAP;
        b = new kb('frc', 2, 8, 0);
        a.h.frc = b;
        a = pa.OPMAP;
        b = new kb('sqt', 2, 9, 0);
        a.h.sqt = b;
        a = pa.OPMAP;
        b = new kb('rsq', 2, 10, 0);
        a.h.rsq = b;
        a = pa.OPMAP;
        b = new kb('pow', 3, 11, 0);
        a.h.pow = b;
        a = pa.OPMAP;
        b = new kb('log', 2, 12, 0);
        a.h.log = b;
        a = pa.OPMAP;
        b = new kb('exp', 2, 13, 0);
        a.h.exp = b;
        a = pa.OPMAP;
        b = new kb('nrm', 2, 14, 0);
        a.h.nrm = b;
        a = pa.OPMAP;
        b = new kb('sin', 2, 15, 0);
        a.h.sin = b;
        a = pa.OPMAP;
        b = new kb('cos', 2, 16, 0);
        a.h.cos = b;
        a = pa.OPMAP;
        b = new kb('crs', 3, 17, 0);
        a.h.crs = b;
        a = pa.OPMAP;
        b = new kb('dp3', 3, 18, 0);
        a.h.dp3 = b;
        a = pa.OPMAP;
        b = new kb('dp4', 3, 19, 0);
        a.h.dp4 = b;
        a = pa.OPMAP;
        b = new kb('abs', 2, 20, 0);
        a.h.abs = b;
        a = pa.OPMAP;
        b = new kb('neg', 2, 21, 0);
        a.h.neg = b;
        a = pa.OPMAP;
        b = new kb('sat', 2, 22, 0);
        a.h.sat = b;
        a = pa.OPMAP;
        b = new kb('m33', 3, 23, 16);
        a.h.m33 = b;
        a = pa.OPMAP;
        b = new kb('m44', 3, 24, 16);
        a.h.m44 = b;
        a = pa.OPMAP;
        b = new kb('m34', 3, 25, 16);
        a.h.m34 = b;
        a = pa.OPMAP;
        b = new kb('ddx', 2, 26, 288);
        a.h.ddx = b;
        a = pa.OPMAP;
        b = new kb('ddy', 2, 27, 288);
        a.h.ddy = b;
        a = pa.OPMAP;
        b = new kb('ife', 2, 28, 897);
        a.h.ife = b;
        a = pa.OPMAP;
        b = new kb('ine', 2, 29, 897);
        a.h.ine = b;
        a = pa.OPMAP;
        b = new kb('ifg', 2, 30, 897);
        a.h.ifg = b;
        a = pa.OPMAP;
        b = new kb('ifl', 2, 31, 897);
        a.h.ifl = b;
        a = pa.OPMAP;
        b = new kb('els', 0, 32, 1921);
        a.h.els = b;
        a = pa.OPMAP;
        b = new kb('eif', 0, 33, 1409);
        a.h.eif = b;
        a = pa.OPMAP;
        b = new kb('kil', 1, 39, 160);
        a.h.kil = b;
        a = pa.OPMAP;
        b = new kb('tex', 3, 40, 40);
        a.h.tex = b;
        a = pa.OPMAP;
        b = new kb('sge', 3, 41, 0);
        a.h.sge = b;
        a = pa.OPMAP;
        b = new kb('slt', 3, 42, 0);
        a.h.slt = b;
        a = pa.OPMAP;
        b = new kb('sgn', 2, 43, 0);
        a.h.sgn = b;
        a = pa.OPMAP;
        b = new kb('seq', 3, 44, 0);
        a.h.seq = b;
        a = pa.OPMAP;
        b = new kb('sne', 3, 45, 0);
        a.h.sne = b;
        a = pa.SAMPLEMAP;
        b = new Ob('rgba', 8, 0);
        a.h.rgba = b;
        a = pa.SAMPLEMAP;
        b = new Ob('compressed', 8, 1);
        a.h.compressed = b;
        a = pa.SAMPLEMAP;
        b = new Ob('compressedalpha', 8, 2);
        a.h.compressedalpha = b;
        a = pa.SAMPLEMAP;
        b = new Ob('dxt1', 8, 1);
        a.h.dxt1 = b;
        a = pa.SAMPLEMAP;
        b = new Ob('dxt5', 8, 2);
        a.h.dxt5 = b;
        a = pa.SAMPLEMAP;
        b = new Ob('video', 8, 3);
        a.h.video = b;
        a = pa.SAMPLEMAP;
        b = new Ob('2d', 12, 0);
        a.h['2d'] = b;
        a = pa.SAMPLEMAP;
        b = new Ob('3d', 12, 2);
        a.h['3d'] = b;
        a = pa.SAMPLEMAP;
        b = new Ob('cube', 12, 1);
        a.h.cube = b;
        a = pa.SAMPLEMAP;
        b = new Ob('mipnearest', 24, 1);
        a.h.mipnearest = b;
        a = pa.SAMPLEMAP;
        b = new Ob('miplinear', 24, 2);
        a.h.miplinear = b;
        a = pa.SAMPLEMAP;
        b = new Ob('mipnone', 24, 0);
        a.h.mipnone = b;
        a = pa.SAMPLEMAP;
        b = new Ob('nomip', 24, 0);
        a.h.nomip = b;
        a = pa.SAMPLEMAP;
        b = new Ob('nearest', 28, 0);
        a.h.nearest = b;
        a = pa.SAMPLEMAP;
        b = new Ob('linear', 28, 1);
        a.h.linear = b;
        a = pa.SAMPLEMAP;
        b = new Ob('anisotropic2x', 28, 2);
        a.h.anisotropic2x = b;
        a = pa.SAMPLEMAP;
        b = new Ob('anisotropic4x', 28, 3);
        a.h.anisotropic4x = b;
        a = pa.SAMPLEMAP;
        b = new Ob('anisotropic8x', 28, 4);
        a.h.anisotropic8x = b;
        a = pa.SAMPLEMAP;
        b = new Ob('anisotropic16x', 28, 5);
        a.h.anisotropic16x = b;
        a = pa.SAMPLEMAP;
        b = new Ob('centroid', 16, 1);
        a.h.centroid = b;
        a = pa.SAMPLEMAP;
        b = new Ob('single', 16, 2);
        a.h.single = b;
        a = pa.SAMPLEMAP;
        b = new Ob('ignoresampler', 16, 4);
        a.h.ignoresampler = b;
        a = pa.SAMPLEMAP;
        b = new Ob('repeat', 20, 1);
        a.h.repeat = b;
        a = pa.SAMPLEMAP;
        b = new Ob('wrap', 20, 1);
        a.h.wrap = b;
        a = pa.SAMPLEMAP;
        b = new Ob('clamp', 20, 0);
        a.h.clamp = b;
        a = pa.SAMPLEMAP;
        b = new Ob('clamp_u_repeat_v', 20, 2);
        a.h.clamp_u_repeat_v = b;
        a = pa.SAMPLEMAP;
        b = new Ob('repeat_u_clamp_v', 20, 3);
        a.h.repeat_u_clamp_v = b;
      };
      pa.prototype = {
        assemble: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = 1);
          var f = Ja.getTimer();
          this.agalcode = new Cc(0);
          this.error = '';
          var h = !1;
          'fragment' == a
            ? (h = !0)
            : 'vertex' != a &&
              (this.error =
                'ERROR: mode needs to be "fragment" or "vertex" but is "' +
                a +
                '".');
          this.agalcode.__endian = 1;
          this.agalcode.writeByte(160);
          this.agalcode.writeUnsignedInt(c);
          this.agalcode.writeByte(161);
          this.agalcode.writeByte(h ? 1 : 0);
          this.initregmap(c, d);
          a = M.replace(b, '\r', '\n').split('\n');
          b = 0;
          d = a.length;
          for (
            var g = new xa('<.*>', 'g'),
              t = new xa('([\\w\\.\\-\\+]+)', 'gi'),
              p = new xa('^\\w{3}', 'ig'),
              n = new xa(
                'vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?',
                'gi',
              ),
              x = new xa('\\[.*\\]', 'ig'),
              m = new xa('^\\b[A-Za-z]{1,3}', 'ig'),
              q = new xa('\\d+', ''),
              l = new xa('(\\.[xyzw]{1,4})', ''),
              z = new xa('[A-Za-z]{1,3}', 'ig'),
              G = new xa('(\\.[xyzw]{1,1})', ''),
              D = new xa('\\+\\d{1,3}', 'ig'),
              w = 0;
            w < d && '' == this.error;

          ) {
            var F = M.trim(a[w]),
              B = F.indexOf('//');
            -1 != B && (F = O.substr(F, 0, B));
            var r = g.match(F) ? g.matchedPos().pos : -1;
            B = null;
            -1 != r &&
              ((B = this.match(O.substr(F, r, null), t)),
              (F = O.substr(F, 0, r)));
            var u = null;
            p.match(F) && ((r = p.matched(0)), (u = pa.OPMAP.h[r]));
            if (null == u)
              3 <= F.length &&
                Na.warn('warning: bad line ' + w + ': ' + a[w], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 262,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else if (
              (this.debugEnabled &&
                Na.info(u, {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 272,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                }),
              null == u)
            )
              3 <= F.length &&
                Na.warn('warning: bad line ' + w + ': ' + a[w], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 279,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else {
              F = O.substr(F, F.indexOf(u.name) + u.name.length, null);
              if (0 != (u.flags & 256) && 2 > c) {
                this.error = 'error: opcode requires version 2.';
                break;
              }
              if (0 != (u.flags & 64) && h) {
                this.error =
                  'error: opcode is only allowed in vertex programs.';
                break;
              }
              if (0 != (u.flags & 32) && !h) {
                this.error =
                  'error: opcode is only allowed in fragment programs.';
                break;
              }
              this.verbose &&
                Na.info('emit opcode=' + I.string(u), {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 308,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
              this.agalcode.writeUnsignedInt(u.emitCode);
              ++b;
              if (4096 < b) {
                this.error = 'error: too many opcodes. maximum is 4096.';
                break;
              }
              var H = this.match(F, n);
              if (H.length != u.numRegister) {
                this.error =
                  'error: wrong number of operands. found ' +
                  H.length +
                  ' but expected ' +
                  u.numRegister +
                  '.';
                break;
              }
              var C = !1,
                ba = 160;
              F = 0;
              for (r = H.length; F < r; ) {
                var ta = F++,
                  ra = !1,
                  N = this.match(H[ta], x);
                0 < N.length &&
                  ((H[ta] = M.replace(H[ta], N[0], '0')),
                  this.verbose &&
                    Na.info('IS REL', {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 344,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    }),
                  (ra = !0));
                var y = this.match(H[ta], m);
                if (0 == y.length) {
                  this.error =
                    'error: could not parse operand ' +
                    ta +
                    ' (' +
                    H[ta] +
                    ').';
                  C = !0;
                  break;
                }
                var A = pa.REGMAP.h[y[0]];
                this.debugEnabled &&
                  Na.info(A, {
                    fileName: 'openfl/utils/AGALMiniAssembler.hx',
                    lineNumber: 363,
                    className: 'openfl.utils.AGALMiniAssembler',
                    methodName: 'assemble',
                  });
                if (null == A) {
                  this.error =
                    'error: could not find register name for operand ' +
                    ta +
                    ' (' +
                    H[ta] +
                    ').';
                  C = !0;
                  break;
                }
                if (h) {
                  if (0 == (A.flags & 32)) {
                    this.error =
                      'error: register operand ' +
                      ta +
                      ' (' +
                      H[ta] +
                      ') only allowed in vertex programs.';
                    C = !0;
                    break;
                  }
                  if (ra) {
                    this.error =
                      'error: register operand ' +
                      ta +
                      ' (' +
                      H[ta] +
                      ') relative adressing not allowed in fragment programs.';
                    C = !0;
                    break;
                  }
                } else if (0 == (A.flags & 64)) {
                  this.error =
                    'error: register operand ' +
                    ta +
                    ' (' +
                    H[ta] +
                    ') only allowed in fragment programs.';
                  C = !0;
                  break;
                }
                H[ta] = O.substr(
                  H[ta],
                  H[ta].indexOf(A.name) + A.name.length,
                  null,
                );
                var ka = ra ? this.match(N[0], q) : this.match(H[ta], q);
                y = 0;
                0 < ka.length && (y = I.parseInt(ka[0]));
                if (oa.gt(y, A.range)) {
                  F = A.range + 1;
                  this.error =
                    'error: register operand ' +
                    ta +
                    ' (' +
                    H[ta] +
                    ') index exceeds limit of ' +
                    (null == F ? 'null' : I.string(oa.toFloat(F))) +
                    '.';
                  C = !0;
                  break;
                }
                var Ea = this.match(H[ta], l),
                  Y = 0 == ta && 0 == (u.flags & 128),
                  E = 2 == ta && 0 != (u.flags & 8),
                  L = 0,
                  J = 0,
                  za = 0;
                if (Y && ra) {
                  this.error = 'error: relative can not be destination';
                  C = !0;
                  break;
                }
                if (0 < Ea.length) {
                  for (var S = (ka = 0), Z = Ea[0].length, P = 1; P < Z; )
                    ((S = O.cca(Ea[0], P) - 120),
                      oa.gt(S, 2) && (S = 3),
                      (ka = Y ? ka | (1 << S) : ka | (S << ((P - 1) << 1))),
                      ++P);
                  if (!Y) for (; 4 >= P; ) ((ka |= S << ((P - 1) << 1)), ++P);
                } else ka = Y ? 15 : 228;
                if (ra) {
                  Ea = this.match(N[0], z);
                  L = pa.REGMAP.h[Ea[0]];
                  if (null == L) {
                    this.error = 'error: bad index register';
                    C = !0;
                    break;
                  }
                  L = L.emitCode;
                  S = this.match(N[0], G);
                  if (0 == S.length) {
                    this.error = 'error: bad index register select';
                    C = !0;
                    break;
                  }
                  J = O.cca(S[0], 1) - 120;
                  oa.gt(J, 2) && (J = 3);
                  N = this.match(N[0], D);
                  0 < N.length && (za = I.parseInt(N[0]));
                  if (0 > za || 255 < za) {
                    this.error =
                      'error: index offset ' + za + ' out of bounds. [0..255]';
                    C = !0;
                    break;
                  }
                  this.verbose &&
                    Na.info(
                      'RELATIVE: type=' +
                        L +
                        '==' +
                        Ea[0] +
                        ' sel=' +
                        (null == J ? 'null' : I.string(oa.toFloat(J))) +
                        '==' +
                        S[0] +
                        ' idx=' +
                        (null == y ? 'null' : I.string(oa.toFloat(y))) +
                        ' offset=' +
                        za,
                      {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 518,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      },
                    );
                }
                this.verbose &&
                  Na.info(
                    '  emit argcode=' +
                      I.string(A) +
                      '[' +
                      (null == y ? 'null' : I.string(oa.toFloat(y))) +
                      '][' +
                      ka +
                      ']',
                    {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 525,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    },
                  );
                if (Y)
                  (this.agalcode.writeShort(y),
                    this.agalcode.writeByte(ka),
                    this.agalcode.writeByte(A.emitCode),
                    (ba -= 32));
                else {
                  if (E) {
                    this.verbose &&
                      Na.info('  emit sampler', {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 541,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                    ta = 5;
                    N = ra = 0;
                    for (A = null == B ? 0 : B.length; N < A; )
                      ((ka = N++),
                        this.verbose &&
                          Na.info('    opt: ' + B[ka], {
                            fileName: 'openfl/utils/AGALMiniAssembler.hx',
                            lineNumber: 552,
                            className: 'openfl.utils.AGALMiniAssembler',
                            methodName: 'assemble',
                          }),
                        (Y = pa.SAMPLEMAP.h[B[ka]]),
                        null == Y
                          ? ((ra = parseFloat(B[ka])),
                            this.verbose &&
                              Na.info('    bias: ' + ra, {
                                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                                lineNumber: 565,
                                className: 'openfl.utils.AGALMiniAssembler',
                                methodName: 'assemble',
                              }))
                          : (16 != Y.flag && (ta &= ~(15 << Y.flag)),
                            (ta |= Y.mask << Y.flag)));
                    this.agalcode.writeShort(y);
                    this.agalcode.writeByte((8 * ra) | 0);
                    this.agalcode.writeByte(0);
                    this.agalcode.writeUnsignedInt(ta);
                    this.verbose &&
                      Na.info('    bits: ' + (ta - 5), {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 586,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                  } else
                    (0 == ta && (this.agalcode.writeUnsignedInt(0), (ba -= 32)),
                      this.agalcode.writeShort(y),
                      this.agalcode.writeByte(za),
                      this.agalcode.writeByte(ka),
                      this.agalcode.writeByte(A.emitCode),
                      this.agalcode.writeByte(L),
                      this.agalcode.writeShort(ra ? J | 32768 : 0));
                  ba -= 64;
                }
              }
              for (F = 0; F < ba; ) (this.agalcode.writeByte(0), (F += 8));
              if (C) break;
            }
            ++w;
          }
          '' != this.error &&
            ((this.error += '\n  at line ' + w + ' ' + a[w]),
            ld.set_length(this.agalcode, 0),
            Na.info(this.error, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 631,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            }));
          if (this.debugEnabled) {
            c = 'generated bytecode:';
            h = ld.get_length(this.agalcode);
            F = 0;
            for (r = h; F < r; )
              ((h = F++),
                0 == h % 16 && (c += '\n'),
                0 == h % 4 && (c += ' '),
                (h = M.hex(this.agalcode.b[h], 2)),
                2 > h.length && (h = '0' + h),
                (c += h));
            Na.info(c, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 662,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            });
          }
          this.verbose &&
            Na.info(
              'AGALMiniAssembler.assemble time: ' +
                (Ja.getTimer() - f) / 1e3 +
                's',
              {
                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                lineNumber: 667,
                className: 'openfl.utils.AGALMiniAssembler',
                methodName: 'assemble',
              },
            );
          return this.agalcode;
        },
        initregmap: function (a, b) {
          var c = pa.REGMAP,
            d = new id(
              'va',
              'vertex attribute',
              0,
              b ? 1024 : 1 == a || 2 == a ? 7 : 15,
              66,
            );
          c.h.va = d;
          c = pa.REGMAP;
          d = new id(
            'vc',
            'vertex constant',
            1,
            b ? 1024 : 1 == a ? 127 : 249,
            66,
          );
          c.h.vc = d;
          c = pa.REGMAP;
          d = new id(
            'vt',
            'vertex temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            67,
          );
          c.h.vt = d;
          c = pa.REGMAP;
          d = new id('vo', 'vertex output', 3, b ? 1024 : 0, 65);
          c.h.vo = d;
          c = pa.REGMAP;
          d = new id('vi', 'varying', 4, b ? 1024 : 1 == a ? 7 : 9, 99);
          c.h.vi = d;
          c = pa.REGMAP;
          d = new id(
            'fc',
            'fragment constant',
            1,
            b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199,
            34,
          );
          c.h.fc = d;
          c = pa.REGMAP;
          d = new id(
            'ft',
            'fragment temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            35,
          );
          c.h.ft = d;
          c = pa.REGMAP;
          d = new id('fs', 'texture sampler', 5, b ? 1024 : 7, 34);
          c.h.fs = d;
          c = pa.REGMAP;
          d = new id('fo', 'fragment output', 3, b ? 1024 : 1 == a ? 0 : 3, 33);
          c.h.fo = d;
          c = pa.REGMAP;
          d = new id(
            'fd',
            'fragment depth output',
            6,
            b ? 1024 : 1 == a ? -1 : 0,
            33,
          );
          c.h.fd = d;
          c = pa.REGMAP;
          d = new id('iid', 'instance id', 7, b ? 1024 : 0, 66);
          c.h.iid = d;
          d = pa.REGMAP.h.vo;
          pa.REGMAP.h.op = d;
          d = pa.REGMAP.h.vi;
          pa.REGMAP.h.i = d;
          d = pa.REGMAP.h.vi;
          pa.REGMAP.h.v = d;
          d = pa.REGMAP.h.fo;
          pa.REGMAP.h.oc = d;
          d = pa.REGMAP.h.fd;
          pa.REGMAP.h.od = d;
          d = pa.REGMAP.h.vi;
          pa.REGMAP.h.fi = d;
        },
        match: function (a, b) {
          for (var c = [], d = 0; b.matchSub(a, d); )
            ((d = b.matched(0)),
              c.push(d),
              (d = b.matchedPos().pos + d.length));
          return c;
        },
        __class__: pa,
      };
      var kb = function (a, b, c, d) {
        this.name = a;
        this.numRegister = b;
        this.emitCode = c;
        this.flags = d;
      };
      g['openfl.utils._AGALMiniAssembler.OpCode'] = kb;
      kb.__name__ = 'openfl.utils._AGALMiniAssembler.OpCode';
      kb.prototype = {
        toString: function () {
          return (
            '[OpCode name="' +
            this.name +
            '", numRegister=' +
            this.numRegister +
            ', emitCode=' +
            this.emitCode +
            ', flags=' +
            this.flags +
            ']'
          );
        },
        __class__: kb,
      };
      var id = function (a, b, c, d, f) {
        this.name = a;
        this.longName = b;
        this.emitCode = c;
        this.range = d;
        this.flags = f;
      };
      g['openfl.utils._AGALMiniAssembler.Register'] = id;
      id.__name__ = 'openfl.utils._AGALMiniAssembler.Register';
      id.prototype = {
        toString: function () {
          return (
            '[Register name="' +
            this.name +
            '", longName="' +
            this.longName +
            '", emitCode=' +
            (null == this.emitCode
              ? 'null'
              : I.string(oa.toFloat(this.emitCode))) +
            ', range=' +
            (null == this.range ? 'null' : I.string(oa.toFloat(this.range))) +
            ', flags=' +
            (null == this.flags ? 'null' : I.string(oa.toFloat(this.flags))) +
            ']'
          );
        },
        __class__: id,
      };
      var Ob = function (a, b, c) {
        this.name = a;
        this.flag = b;
        this.mask = c;
      };
      g['openfl.utils._AGALMiniAssembler.Sampler'] = Ob;
      Ob.__name__ = 'openfl.utils._AGALMiniAssembler.Sampler';
      Ob.prototype = { __class__: Ob };
      var si = function () {};
      g['openfl.utils.IAssetCache'] = si;
      si.__name__ = 'openfl.utils.IAssetCache';
      si.__isInterface__ = !0;
      si.prototype = {
        __class__: si,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var ti = function () {
        this.__enabled = !0;
        this.bitmapData = new Ia();
        this.font = new Ia();
        this.sound = new Ia();
      };
      g['openfl.utils.AssetCache'] = ti;
      ti.__name__ = 'openfl.utils.AssetCache';
      ti.__interfaces__ = [si];
      ti.prototype = {
        getFont: function (a) {
          return this.font.h[a];
        },
        hasFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.font.h, a);
        },
        setFont: function (a, b) {
          this.font.h[a] = b;
        },
        get_enabled: function () {
          return this.__enabled;
        },
        __class__: ti,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var je = function () {
        Ib.call(this);
      };
      g['openfl.utils.AssetLibrary'] = je;
      je.__name__ = 'openfl.utils.AssetLibrary';
      je.fromBundle = function (a) {
        a = Ib.fromBundle(a);
        if (null != a) {
          if (a instanceof je) return a;
          var b = new je();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      je.fromManifest = function (a) {
        a = Ib.fromManifest(a);
        if (null != a) {
          if (a instanceof je) return a;
          var b = new je();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      je.__super__ = Ib;
      je.prototype = u(Ib.prototype, {
        bind: function (a, b) {
          return !1;
        },
        exists: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.exists(a, b)
            : Ib.prototype.exists.call(this, a, b);
        },
        getAsset: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.getAsset(a, b)
            : Ib.prototype.getAsset.call(this, a, b);
        },
        getAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.getAudioBuffer(a)
            : Ib.prototype.getAudioBuffer.call(this, a);
        },
        getBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.getBytes(a)
            : Ib.prototype.getBytes.call(this, a);
        },
        getFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.getFont(a)
            : Ib.prototype.getFont.call(this, a);
        },
        getImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.getImage(a)
            : Ib.prototype.getImage.call(this, a);
        },
        getPath: function (a) {
          return null != this.__proxy
            ? this.__proxy.getPath(a)
            : Ib.prototype.getPath.call(this, a);
        },
        getText: function (a) {
          return null != this.__proxy
            ? this.__proxy.getText(a)
            : Ib.prototype.getText.call(this, a);
        },
        isLocal: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.isLocal(a, b)
            : Ib.prototype.isLocal.call(this, a, b);
        },
        load: function () {
          return null != this.__proxy
            ? this.__proxy.load()
            : Ib.prototype.load.call(this);
        },
        loadAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadAudioBuffer(a)
            : Ib.prototype.loadAudioBuffer.call(this, a);
        },
        loadBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadBytes(a)
            : Ib.prototype.loadBytes.call(this, a);
        },
        loadFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadFont(a)
            : Ib.prototype.loadFont.call(this, a);
        },
        loadImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadImage(a)
            : Ib.prototype.loadImage.call(this, a);
        },
        loadText: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadText(a)
            : Ib.prototype.loadText.call(this, a);
        },
        unload: function () {
          null != this.__proxy
            ? this.__proxy.unload()
            : Ib.prototype.unload.call(this);
        },
        __class__: je,
      });
      var Zb = function () {};
      g['openfl.utils.Assets'] = Zb;
      Zb.__name__ = 'openfl.utils.Assets';
      Zb.exists = function (a, b) {
        return Ca.exists(a, b);
      };
      Zb.getFont = function (a, b) {
        null == b && (b = !0);
        if (b && Zb.cache.get_enabled() && Zb.cache.hasFont(a))
          return Zb.cache.getFont(a);
        var c = Ca.getFont(a, !1);
        if (null != c) {
          var d = new ea();
          d.__fromLimeFont(c);
          b && Zb.cache.get_enabled() && Zb.cache.setFont(a, d);
          return d;
        }
        return new ea();
      };
      Zb.getText = function (a) {
        return Ca.getText(a);
      };
      var ld = {
          __properties__: {
            set_length: 'set_length',
            get_length: 'get_length',
          },
          fromArrayBuffer: function (a) {
            return null == a ? null : Cc.fromBytes(tb.ofData(a));
          },
          fromBytes: function (a) {
            return null == a ? null : a instanceof Cc ? a : Cc.fromBytes(a);
          },
          toArrayBuffer: function (a) {
            return a.b.bufferValue;
          },
          toBytes: function (a) {
            return a;
          },
          get_length: function (a) {
            return null == a ? 0 : a.length;
          },
          set_length: function (a, b) {
            0 <= b && (a.__resize(b), b < a.position && (a.position = b));
            return (a.length = b);
          },
        },
        Sj = function () {};
      g['openfl.utils.IDataOutput'] = Sj;
      Sj.__name__ = 'openfl.utils.IDataOutput';
      Sj.__isInterface__ = !0;
      var Tj = function () {};
      g['openfl.utils.IDataInput'] = Tj;
      Tj.__name__ = 'openfl.utils.IDataInput';
      Tj.__isInterface__ = !0;
      var Cc = function (a) {
        null == a && (a = 0);
        var b = new tb(new ArrayBuffer(a));
        tb.call(this, b.b.buffer);
        this.__allocated = a;
        null == Cc.__defaultEndian &&
          (pc.get_endianness() == Ah.LITTLE_ENDIAN
            ? (Cc.__defaultEndian = 1)
            : (Cc.__defaultEndian = 0));
        this.__endian = Cc.__defaultEndian;
        this.objectEncoding = Cc.defaultObjectEncoding;
        this.position = 0;
      };
      g['openfl.utils.ByteArrayData'] = Cc;
      Cc.__name__ = 'openfl.utils.ByteArrayData';
      Cc.__interfaces__ = [Sj, Tj];
      Cc.fromBytes = function (a) {
        var b = new Cc();
        b.__fromBytes(a);
        return b;
      };
      Cc.__super__ = tb;
      Cc.prototype = u(tb.prototype, {
        readByte: function () {
          var a = this.readUnsignedByte();
          return 0 != (a & 128) ? a - 256 : a;
        },
        readInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedByte: function () {
          if (this.position < this.length) return this.b[this.position++];
          throw new Dg();
        },
        readUnsignedInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedShort: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          return 1 == this.__endian ? (b << 8) + a : (a << 8) | b;
        },
        readUTF: function () {
          var a = this.readUnsignedShort();
          return this.readUTFBytes(a);
        },
        readUTFBytes: function (a) {
          if (this.position + a > this.length) throw new Dg();
          this.position += a;
          return this.getString(this.position - a, a);
        },
        writeByte: function (a) {
          this.__resize(this.position + 1);
          this.b[this.position++] = a & 255;
        },
        writeBytes: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          0 != ld.get_length(a) &&
            (0 == c && (c = ld.get_length(a) - b),
            this.__resize(this.position + c),
            this.blit(this.position, a, b, c),
            (this.position += c));
        },
        writeInt: function (a) {
          this.__resize(this.position + 4);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 24) & 255))
            : ((this.b[this.position++] = (a >> 24) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeShort: function (a) {
          this.__resize(this.position + 2);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255))
            : ((this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeUnsignedInt: function (a) {
          this.writeInt(a);
        },
        __fromBytes: function (a) {
          this.b = a.b;
          this.__allocated = a.length;
          this.data = a.data;
          this.length = a.length;
        },
        __resize: function (a) {
          if (a > this.__allocated) {
            var b = new tb(new ArrayBuffer((3 * (a + 1)) >> 1));
            if (0 < this.__allocated) {
              var c = this.length;
              this.length = this.__allocated;
              b.blit(0, this, 0, this.__allocated);
              this.length = c;
            }
            this.b = b.b;
            this.__allocated = b.length;
            this.data = b.data;
          }
          this.length < a && (this.length = a);
        },
        __class__: Cc,
      });
      var jd = {
          __get: function (a, b) {
            if (null == a || null == b) return null;
            if (Object.prototype.hasOwnProperty.call(a, b))
              return ya.field(a, b);
            if (a instanceof hb) {
              var c = a.getChildByName(b);
              if (null != c) return c;
            }
            return ya.getProperty(a, b);
          },
          __eq: function (a, b) {
            return a == b;
          },
        },
        ui = function () {};
      g['haxe.lang.Iterator'] = ui;
      ui.__name__ = 'haxe.lang.Iterator';
      ui.__isInterface__ = !0;
      ui.prototype = { __class__: ui };
      var vi = function () {};
      g['haxe.lang.Iterable'] = vi;
      vi.__name__ = 'haxe.lang.Iterable';
      vi.__isInterface__ = !0;
      vi.prototype = { __class__: vi };
      var kh = function (a, b) {
        null == b && (b = 0);
        if (isNaN(a) || 0 > a)
          throw new Sb(
            'The delay specified is negative or not a finite number',
          );
        ma.call(this);
        this.__delay = a;
        this.__repeatCount = b;
        this.running = !1;
        this.currentCount = 0;
      };
      g['openfl.utils.Timer'] = kh;
      kh.__name__ = 'openfl.utils.Timer';
      kh.__super__ = ma;
      kh.prototype = u(ma.prototype, {
        start: function () {
          this.running ||
            ((this.running = !0),
            (this.__timerID = window.setInterval(
              l(this, this.timer_onTimer),
              this.__delay | 0,
            )));
        },
        stop: function () {
          this.running = !1;
          null != this.__timerID &&
            (window.clearInterval(this.__timerID), (this.__timerID = null));
        },
        __handleUpdateAfterEvent: function () {
          null != Ja.get_current() &&
            null != Ja.get_current().stage &&
            Ja.get_current().stage.__renderAfterEvent();
        },
        timer_onTimer: function () {
          this.currentCount++;
          if (
            0 < this.__repeatCount &&
            this.currentCount >= this.__repeatCount
          ) {
            this.stop();
            var a = new Of('timer');
            this.dispatchEvent(a);
            a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
            a = new Of('timerComplete');
          } else a = new Of('timer');
          this.dispatchEvent(a);
          a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
        },
        __class__: kh,
      });
      var qc = function () {};
      g['openfl.utils._internal.Lib'] = qc;
      qc.__name__ = 'openfl.utils._internal.Lib';
      var Ze = function () {
        this.rollOutStack = [];
      };
      g['openfl.utils._internal.TouchData'] = Ze;
      Ze.__name__ = 'openfl.utils._internal.TouchData';
      Ze.prototype = {
        reset: function () {
          this.touchOverTarget = this.touchDownTarget = this.touch = null;
          this.rollOutStack.splice(0, this.rollOutStack.length);
        },
        __class__: Ze,
      };
      y.$haxeUID |= 0;
      'undefined' != typeof performance &&
        'function' == typeof performance.now &&
        (O.now = performance.now.bind(performance));
      g.Math = Math;
      null == String.fromCodePoint &&
        (String.fromCodePoint = function (a) {
          return 65536 > a
            ? String.fromCharCode(a)
            : String.fromCharCode((a >> 10) + 55232) +
                String.fromCharCode((a & 1023) + 56320);
        });
      Object.defineProperty(String.prototype, '__class__', {
        value: (g.String = String),
        enumerable: !1,
        writable: !0,
      });
      String.__name__ = 'String';
      g.Array = Array;
      Array.__name__ = 'Array';
      Date.prototype.__class__ = g.Date = Date;
      Date.__name__ = 'Date';
      var Wj = {},
        hk = {},
        ik = Number,
        gk = Boolean,
        Yj = {},
        Zj = {};
      $c.NIL = new $c(null, null);
      Ua.__toStr = {}.toString;
      'undefined' == typeof window &&
        (y.onmessage = function (a) {
          a = a.data;
          try {
            ((y.onmessage = ((H = bd.__current), l(H, H.dispatchMessage))),
              jk.toFunction(a)());
          } catch (b) {
            ((Qa.lastError = b), bd.__current.destroy());
          }
        });
      R.__alpha16 = new Uint32Array(256);
      for (var Qf = 0; 256 > Qf; ) {
        var Hg = Qf++;
        R.__alpha16[Hg] = Math.ceil(257.00392156862745 * Hg);
      }
      R.__clamp = new Uint8Array(511);
      for (Qf = 0; 255 > Qf; ) ((Hg = Qf++), (R.__clamp[Hg] = Hg));
      for (Qf = 255; 511 > Qf; ) ((Hg = Qf++), (R.__clamp[Hg] = 255));
      Na.level = 3;
      'undefined' == typeof console && (console = {});
      null == console.log && (console.log = function () {});
      B.hitTestCanvas = xe.get_supported()
        ? window.document.createElement('canvas')
        : null;
      B.hitTestContext = xe.get_supported()
        ? B.hitTestCanvas.getContext('2d')
        : null;
      S.__meta__ = {
        fields: {
          __cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
          removeEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      S.__broadcastEvents = new Ia();
      S.__instanceCount = 0;
      S.__tempStack = new pb(
        function () {
          return X.toObjectVector(null);
        },
        function (a) {
          a.set_length(0);
        },
      );
      ea.__fontByName = new Ia();
      ea.__registeredFonts = [];
      Y.Element = 0;
      Y.PCData = 1;
      Y.CData = 2;
      Y.Comment = 3;
      Y.DocType = 4;
      Y.ProcessingInstruction = 5;
      Y.Document = 6;
      Va.showWater = !0;
      Va.showDoors = !1;
      Va.showExits = !0;
      Va.gridMode = 1;
      Za.showShading = !0;
      Za.showRubble = !0;
      Za.showSteps = !0;
      wb.nStrokes = 5;
      wb.clusterSize = 12;
      wb.distance = 3;
      wb.stones = 0.3;
      wb.z = 1.2;
      la.narrowTunnels = !0;
      la.smoothHexes = !0;
      la.hexRadius = 20;
      la.hexInner = (Math.sqrt(3) / 2) * la.hexRadius;
      la.hexWidth2 = la.hexInner;
      la.hexHeight2 = la.hexRadius;
      sd.dashes = [la.hexRadius / 5, la.hexRadius / 5];
      lb.broken = !0;
      lb.size = 1.5 * la.hexRadius;
      lb.minSegment = la.hexRadius / 3;
      lb.offset = la.hexRadius / 3;
      lb.wobbleStep = 10;
      lb.wobbleDist = 1;
      Xb.minBoulder = 2;
      Xb.maxBoulder = la.hexRadius / 2;
      Xb.minPebble = 1;
      Xb.maxPebble = la.hexRadius / 4;
      Xb.boulderCache = [];
      Xb.pebbleCache = [];
      K.__pool = new pb(
        function () {
          return new K();
        },
        function (a) {
          a.setTo(0, 0);
        },
      );
      ja.colorPage = 13417379;
      ja.colorFloor = 15459283;
      ja.colorWater = 12365984;
      ja.colorInk = 0;
      ja.outShadeAlpha = 0.2;
      ja.inShadeAlpha = 0.4;
      ja.inShadeDist = 1;
      ja.strokeWall = 3;
      ja.strokeDetail = 2;
      ja.strokeHatch = 1.2;
      ja.strokeGrid = 0.3;
      ja.shadowDir = K.polar(1, Math.PI / 6);
      L.TREE_SHAPE = ['Cotton', 'Conifer', 'Palm'];
      L.colorGround = 10269317;
      L.colorThicket = 1978929;
      L.colorInk = 66054;
      L.colorMarks = 13559223;
      L.colorTree = [6258538];
      L.colorTreeDetails = L.colorInk;
      L.treeVariance = 0.3;
      L.nBands = 3;
      L.treeShape = 'Conifer';
      L.colorDeep = 4028569;
      L.colorShallow = 7055026;
      L.colorSand = 2967372;
      L.colorShadow = 9869742;
      L.shadowLength = 1;
      L.shadowDir = Math.PI / 3;
      L.strokeNormal = 1;
      L.strokeThin = 0.5;
      L.strokeGrid = 0.3;
      L.grassLength = 8;
      L.colorRoad = 13418915;
      L.colorRoadOutline = 5334599;
      L.roadWidth = 0.4;
      L.roadWiggle = 0.6;
      L.shadowNorm = K.polar(1, L.shadowDir);
      L.shadowScaled = K.polar(L.shadowLength, L.shadowDir);
      vb.showGrass = !0;
      vb.showSteps = !0;
      vb.smallTrees = !0;
      vb.shadeTrees = !0;
      vb.edgeTrees = !0;
      Jd.STEP = 3;
      n.seed = 1;
      n.saved = -1;
      G.cloud = new G(G.getCloudCrown, mb.bloat, G.drawShaded1, G.drawShaded1);
      G.pine = new G(G.getPineCrown, mb.bloat, G.drawShaded2, G.drawShaded1);
      G.palm = new G(G.getPalmCrown, x.bent, G.drawShaded4, G.drawShaded4);
      G.BALL_BANDS = [0.8, 0.5];
      G.CONE_BANDS = [0.6, 0.2];
      G.PALM_BANDS = [0.6];
      ba.treeType = G.palm;
      ba.cachedShadowLen = 0;
      ba.cachedShadowAng = 0;
      ba.crownCache = new ac();
      ba.shadowCache = new na();
      kc.queue = [0, 1, 2, 3];
      za.wallsDistortion = 1;
      za.wallsBumpiness = 1;
      za.wallsRoughness = 1;
      Kb.cache = new Ia();
      zb.SIZE = ['large', 'medium', 'small'];
      zb.EXITS = ['sealed', 'entrance', 'passage', 'junction'];
      zb.SHAPE = ['cavities', 'coral', 'chaotic', 'varied'];
      zb.GRAPH = ['connected', 'tree', 'string'];
      zb.WATER = ['dry', 'wet', 'flooded'];
      zb.all = ['burrows', 'hub', 'chambers', 'road', 'tight']
        .concat(zb.SIZE)
        .concat(zb.EXITS)
        .concat(zb.SHAPE)
        .concat(zb.GRAPH)
        .concat(zb.WATER);
      fb.showGlade = !1;
      fb.showTitle = !0;
      fb.embeddedScanned = !1;
      fb.embedded = (function (a) {
        a = new Ia();
        a.h.title = {
          name: 'Marcellus',
          url: 'https://fonts.googleapis.com/css2?family=Marcellus&display=swap',
        };
        return a;
      })(this);
      Ac.offset = 10;
      Ac.delay = 4;
      Ka.windows = [];
      ia.black = 0;
      ia.dark = 4473924;
      ia.medium = 8947848;
      ia.light = 13421772;
      ia.white = 16777215;
      ia.uiFont = '_sans';
      ia.uiFontMono = '_typewriter';
      ia.smallSize = 20;
      ia.normalSize = 24;
      Pc.okCancel = ['OK', 'Cancel'];
      $b.lastTab = 0;
      pe.hintText = '* Shift+click a tag to learn its effect.';
      La._p0 = new K(-819.2, 0);
      La._p1 = new K(819.2, 0);
      Vb.lx = 0;
      Vb.ly = 0;
      Ma.JOINTS = (function (a) {
        a = new ac();
        a.h[2] = 'round';
        a.h[1] = 'miter';
        a.h[0] = 'bevel';
        return a;
      })(this);
      Ma.CAPS = (function (a) {
        a = new ac();
        a.h[1] = 'round';
        a.h[2] = 'square';
        a.h[0] = 'butt';
        return a;
      })(this);
      Ma.BLEND_MODES = (function (a) {
        a = new ac();
        a.h[10] = 'normal';
        a.h[9] = 'multiply';
        a.h[0] = 'plus-lighter';
        return a;
      })(this);
      Ma.gradients = [];
      Ma.imports = [];
      Ma.substituteFont = Ma.substituteGenerics;
      yc.__meta__ = { obj: { generic: null } };
      Fb.EDGE_STACK = new Uint32Array(512);
      Fb.EPSILON = Math.pow(2, -52);
      kd.VOWELS =
        'you ye yo ya ie ee oo ea ei ey oi ou ai ay au oi oy ue ua u o a e i y'.split(
          ' ',
        );
      kd.CONSONANTS =
        'wh th ck ch sh gh ph qu b c d f g h j k l m n p q r s t v w x z'.split(
          ' ',
        );
      Ra.baseURL = 'https://watabou.github.io/';
      db.plurals = (function (a) {
        a = new Ia();
        a.h.child = 'children';
        a.h.fish = 'fish';
        return a;
      })(this);
      Yd.rng = Math.random;
      ah.values = (function (a) {
        a = new Ia();
        a.h.aliceblue = 15792383;
        a.h.antiquewhite = 16444375;
        a.h.aqua = 65535;
        a.h.aquamarine = 8388564;
        a.h.azure = 15794175;
        a.h.beige = 16119260;
        a.h.bisque = 16770244;
        a.h.black = 0;
        a.h.blanchedalmond = 16772045;
        a.h.blue = 255;
        a.h.blueviolet = 9055202;
        a.h.brown = 10824234;
        a.h.burlywood = 14596231;
        a.h.cadetblue = 6266528;
        a.h.chartreuse = 8388352;
        a.h.chocolate = 13789470;
        a.h.coral = 16744272;
        a.h.cornflowerblue = 6591981;
        a.h.cornsilk = 16775388;
        a.h.crimson = 14423100;
        a.h.cyan = 65535;
        a.h.darkblue = 139;
        a.h.darkcyan = 35723;
        a.h.darkgoldenrod = 12092939;
        a.h.darkgreen = 25600;
        a.h.darkgrey = 11119017;
        a.h.darkkhaki = 12433259;
        a.h.darkmagenta = 9109643;
        a.h.darkolivegreen = 5597999;
        a.h.darkorange = 16747520;
        a.h.darkorchid = 10040012;
        a.h.darkred = 9109504;
        a.h.darksalmon = 15308410;
        a.h.darkseagreen = 9419919;
        a.h.darkslateblue = 4734347;
        a.h.darkslategrey = 3100495;
        a.h.darkturquoise = 52945;
        a.h.darkviolet = 9699539;
        a.h.deeppink = 16716947;
        a.h.deepskyblue = 49151;
        a.h.dimgrey = 6908265;
        a.h.dodgerblue = 2003199;
        a.h.firebrick = 11674146;
        a.h.floralwhite = 16775920;
        a.h.forestgreen = 2263842;
        a.h.fuchsia = 16711935;
        a.h.gainsboro = 14474460;
        a.h.ghostwhite = 16316671;
        a.h.goldenrod = 14329120;
        a.h.gold = 16766720;
        a.h.green = 32768;
        a.h.greenyellow = 11403055;
        a.h.grey = 8421504;
        a.h.honeydew = 15794160;
        a.h.hotpink = 16738740;
        a.h.indianred = 13458524;
        a.h.indigo = 4915330;
        a.h.ivory = 16777200;
        a.h.khaki = 15787660;
        a.h.lavenderblush = 16773365;
        a.h.lavender = 15132410;
        a.h.lawngreen = 8190976;
        a.h.lemonchiffon = 16775885;
        a.h.lightblue = 11393254;
        a.h.lightcoral = 15761536;
        a.h.lightcyan = 14745599;
        a.h.lightgoldenrodyellow = 16448210;
        a.h.lightgreen = 9498256;
        a.h.lightgrey = 13882323;
        a.h.lightpink = 16758465;
        a.h.lightsalmon = 16752762;
        a.h.lightseagreen = 2142890;
        a.h.lightskyblue = 8900346;
        a.h.lightslategrey = 7833753;
        a.h.lightsteelblue = 11584734;
        a.h.lightyellow = 16777184;
        a.h.lime = 65280;
        a.h.limegreen = 3329330;
        a.h.linen = 16445670;
        a.h.magenta = 16711935;
        a.h.maroon = 8388608;
        a.h.mediumaquamarine = 6737322;
        a.h.mediumblue = 205;
        a.h.mediumorchid = 12211667;
        a.h.mediumpurple = 9662683;
        a.h.mediumseagreen = 3978097;
        a.h.mediumslateblue = 8087790;
        a.h.mediumspringgreen = 64154;
        a.h.mediumturquoise = 4772300;
        a.h.mediumvioletred = 13047173;
        a.h.midnightblue = 1644912;
        a.h.mintcream = 16121850;
        a.h.mistyrose = 16770273;
        a.h.moccasin = 16770229;
        a.h.navajowhite = 16768685;
        a.h.navy = 128;
        a.h.oldlace = 16643558;
        a.h.olive = 8421376;
        a.h.olivedrab = 7048739;
        a.h.orange = 16753920;
        a.h.orangered = 16729344;
        a.h.orchid = 14315734;
        a.h.palegoldenrod = 15657130;
        a.h.palegreen = 10025880;
        a.h.paleturquoise = 11529966;
        a.h.palevioletred = 14381203;
        a.h.papayawhip = 16773077;
        a.h.peachpuff = 16767673;
        a.h.peru = 13468991;
        a.h.pink = 16761035;
        a.h.plum = 14524637;
        a.h.powderblue = 11591910;
        a.h.purple = 8388736;
        a.h.rebeccapurple = 6697881;
        a.h.red = 16711680;
        a.h.rosybrown = 12357519;
        a.h.royalblue = 4286945;
        a.h.saddlebrown = 9127187;
        a.h.salmon = 16416882;
        a.h.sandybrown = 16032864;
        a.h.seagreen = 3050327;
        a.h.seashell = 16774638;
        a.h.sienna = 10506797;
        a.h.silver = 12632256;
        a.h.skyblue = 8900331;
        a.h.slateblue = 6970061;
        a.h.slategrey = 7372944;
        a.h.snow = 16775930;
        a.h.springgreen = 65407;
        a.h.steelblue = 4620980;
        a.h.tan = 13808780;
        a.h.teal = 32896;
        a.h.thistle = 14204888;
        a.h.tomato = 16737095;
        a.h.turquoise = 4251856;
        a.h.violet = 15631086;
        a.h.wheat = 16113331;
        a.h.white = 16777215;
        a.h.whitesmoke = 16119285;
        a.h.yellow = 16776960;
        a.h.yellowgreen = 10145074;
        return a;
      })(this);
      $f.DELAY = 1;
      ae.permutation = [
        151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225,
        140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247,
        120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57,
        177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74,
        165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122,
        60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54,
        65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169,
        200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3,
        64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85,
        212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170,
        213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43,
        172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185,
        112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191,
        179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31,
        181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150,
        254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195,
        78, 66, 215, 61, 156, 180,
      ];
      ec.weights = new Ia();
      Xa._tick = new tc();
      Xa.lastTime = 0;
      Xa.timeScale = 1;
      ad.USE_CACHE = !1;
      ad.USE_ENUM_INDEX = !1;
      ad.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      Rc.DEFAULT_RESOLVER = new lh();
      Rc.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      le.escapes = (function (a) {
        a = new Ia();
        a.h.lt = '<';
        a.h.gt = '>';
        a.h.amp = '&';
        a.h.quot = '"';
        a.h.apos = "'";
        return a;
      })(this);
      Jc.LEN_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, -1, -1,
      ];
      Jc.LEN_BASE_VAL_TBL = [
        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
        67, 83, 99, 115, 131, 163, 195, 227, 258,
      ];
      Jc.DIST_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, -1, -1,
      ];
      Jc.DIST_BASE_VAL_TBL = [
        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
        513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577,
      ];
      Jc.CODE_LENGTHS_POS = [
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ];
      Aa.activeRequests = 0;
      Aa.requestLimit = 17;
      Aa.requestQueue = new Ya();
      bd.__current = new bd(y.location.href);
      bd.__isWorker = 'undefined' == typeof window;
      bd.__messages = new Ya();
      bd.__resolveMethods = new Ya();
      Pa.dummyCharacter = '\u007f';
      Pa.windowID = 0;
      Pd.DICTIONARY =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split(
          '',
        );
      Pd.EXTENDED_DICTIONARY = (function (a) {
        a = [];
        for (var b = 0, c = Pd.DICTIONARY; b < c.length; ) {
          var d = c[b];
          ++b;
          for (var f = 0, h = Pd.DICTIONARY; f < h.length; ) {
            var g = h[f];
            ++f;
            a.push(d + g);
          }
        }
        return a;
      })(this);
      cd.MUL_TABLE = [
        1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265,
        497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269,
        261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369,
        361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69,
        271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446,
        55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371,
        367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317,
        157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277,
        275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491,
        61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221,
        439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202,
        401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185,
        23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341,
        339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79,
        315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295,
        147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69,
        275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130,
        259, 129, 257, 1,
      ];
      cd.SHG_TABLE = [
        0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14,
        14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15,
        15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15,
        12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14,
        16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16,
        14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16,
        15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16,
        17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16,
        17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15,
        16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17,
        17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17,
        16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14,
        17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16,
        17, 16, 17, 9,
      ];
      ib.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      ic.onUpdate = new nc();
      ic.__updated = !1;
      Vd.sensorByID = new ac();
      Vd.sensors = [];
      fc.devices = new ac();
      fc.onConnect = new dj();
      bc.devices = new ac();
      bc.onConnect = new ej();
      Tb.onCancel = new Bf();
      Tb.onEnd = new Bf();
      Tb.onMove = new Bf();
      Tb.onStart = new Bf();
      Ca.cache = new hj();
      Ca.onChange = new nc();
      Ca.bundlePaths = new Ia();
      Ca.libraries = new Ia();
      Ca.libraryPaths = new Ia();
      Na.throwErrors = !0;
      Ja.__lastTimerID = 0;
      Ja.__timers = new ac();
      de.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Eh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Wd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Fh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Uf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      df.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Rf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Wb.__meta__ = {
        fields: {
          image: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __framebufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __indexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __surface: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __vertexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __fromImage: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Wb.__tempVector = new gf();
      Sc.__meta__ = {
        fields: {
          __context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __type: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Hh.__meta__ = {
        fields: {
          cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix3: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applyMatrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeCairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ee.__meta__ = {
        fields: {
          context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applySmoothing: { SuppressWarnings: ['checkstyle:Dynamic'] },
          setTransform: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Lh.__meta__ = {
        fields: {
          __element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      tg.__meta__ = {
        fields: {
          element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      dd.__meta__ = {
        fields: { glProgram: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Ed.__meta__ = {
        statics: {
          create: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
        fields: { parameters: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Ed.__rootURL = xe.get_supported() ? window.document.URL : '';
      qa.__pool = new pb(
        function () {
          return new qa();
        },
        function (a) {
          a.setTo(0, 0, 0, 0);
        },
      );
      Ta.__meta__ = {
        fields: {
          gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projection: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projectionFlipped: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Ta.__alphaValue = [1];
      Ta.__colorMultipliersValue = [0, 0, 0, 0];
      Ta.__colorOffsetsValue = [0, 0, 0, 0];
      Ta.__emptyColorValue = [0, 0, 0, 0];
      Ta.__hasColorTransformValue = [!1];
      Ta.__scissorRectangle = new qa();
      Ta.__textureSizeValue = [0, 0];
      Ig.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { onComplete: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Sf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Oh.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Ef.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Hf.__meta__ = {
        fields: {
          __broadcastEvent: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __dispatchEvent: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchStack: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchTarget: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __handleError: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ci.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      rg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { _: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      sg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Se.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Uc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { o: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Uc.empty = new Uc();
      B.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          windingRule: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createBitmapFill: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createGradientPattern: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      B.fillCommands = new Uc();
      B.strokeCommands = new Uc();
      P.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      fe.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          renderTileContainer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Te.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      nd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      zg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      We.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      wa.__meta__ = {
        fields: {
          equals: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      wa.__identity = new wa();
      wa.__pool = new pb(
        function () {
          return new wa();
        },
        function (a) {
          a.identity();
        },
      );
      Hb.__pool = new pb(
        function () {
          return new Hb();
        },
        function (a) {
          a.__identity();
        },
      );
      Lb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Lb.blankBitmapData = new Wb(1, 1, !1, 0);
      Lb.tempColorTransform = new Hb(1, 1, 1, 1, 0, 0, 0, 0);
      Ve.opaqueBitmapData = new Wb(1, 1, !1, 0);
      Sd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ie.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      T.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      od.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      od.__textureSizeValue = [0, 0];
      Nb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Tc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      De.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Be.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ce.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ge.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Fd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      $e.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Qh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          overrideIntValues: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ob.__glDepthStencil = -1;
      ob.__glMaxTextureMaxAnisotropy = -1;
      ob.__glMaxViewportDims = -1;
      ob.__glMemoryCurrentAvailable = -1;
      ob.__glMemoryTotalAvailable = -1;
      ob.__glTextureMaxAnisotropy = -1;
      gi.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Cg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Lc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Lc.limitedProfile = !0;
      If.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      hi.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Jf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      af.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ag.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      xb.__meta__ = {
        fields: {
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __getGLFramebuffer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Tf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ie.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ie.supportsWeakReference = Object.prototype.hasOwnProperty.call(
        y,
        'WeakRef',
      );
      Qc.__invertAlphaShader = new qi();
      Qc.__blurAlphaShader = new li();
      Qc.__combineShader = new ni();
      Qc.__innerCombineShader = new pi();
      Qc.__combineKnockoutShader = new mi();
      Qc.__innerCombineKnockoutShader = new oi();
      bf.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      Gd.__soundChannels = [];
      Gd.__soundTransform = new bf();
      Ic.defaultObjectEncoding = 10;
      Ee.followRedirects = !0;
      Ee.idleTimeout = 0;
      Ee.manageCookies = !0;
      Ff.currentDomain = new Ff(null);
      $d.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      Gg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Da.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Da.__regexAlign = new xa('align\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Da.__regexBreakTag = new xa('<br\\s*/?>', 'gi');
      Da.__regexBlockIndent = new xa(
        'blockindent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Da.__regexClass = new xa('class\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Da.__regexColor = new xa('color\\s?=\\s?("#([^"]+)"|\'#([^\']+)\')', 'i');
      Da.__regexEntityApos = new xa('&apos;', 'g');
      Da.__regexEntityNbsp = new xa('&nbsp;', 'g');
      Da.__regexCharEntity = new xa('&#(?:([0-9]+)|(x[0-9a-fA-F]+));', 'g');
      Da.__regexFace = new xa('face\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Da.__regexHTMLTag = new xa('<.*?>', 'g');
      Da.__regexHref = new xa('href\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Da.__regexIndent = new xa(
        ' indent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Da.__regexLeading = new xa(
        'leading\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Da.__regexLeftMargin = new xa(
        'leftmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Da.__regexRightMargin = new xa(
        'rightmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Da.__regexSize = new xa('size\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Da.__regexTabStops = new xa(
        'tabstops\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Pf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Db.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ri.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ba.__meta__ = {
        fields: {
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Ba.numDevices = 0;
      Ba.__deviceList = [];
      Ba.__instances = [];
      Ba.__devices = new na();
      mj.__cursor = 'auto';
      pa.__meta__ = {
        obj: {
          SuppressWarnings: [
            ['checkstyle:ConstantName', 'checkstyle:FieldDocComment'],
          ],
        },
      };
      pa.OPMAP = new Ia();
      pa.REGMAP = new Ia();
      pa.SAMPLEMAP = new Ia();
      pa.initialized = !1;
      kb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      id.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ob.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Zb.cache = new ti();
      Cc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Cc.defaultObjectEncoding = 10;
      jd.__meta__ = {
        statics: {
          __get: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      ui.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      vi.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      qc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ze.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { touch: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Ze.__pool = new pb(
        function () {
          return new Ze();
        },
        function (a) {
          a.reset();
        },
      );
      Z.main();
    })(
      'undefined' != typeof r
        ? r
        : 'undefined' != typeof window
          ? window
          : 'undefined' != typeof self
            ? self
            : this,
      'undefined' != typeof window
        ? window
        : 'undefined' != typeof y
          ? y
          : 'undefined' != typeof self
            ? self
            : this,
    );
  };
  'undefined' !== typeof self && self.constructor.name.includes('Worker')
    ? y({}, r)
    : ((A.lime = A.lime || {}),
      (A.lime.$scripts = A.lime.$scripts || {}),
      (A.lime.$scripts.Cave = y),
      (A.lime.embed = function (y) {
        var J = {},
          E = A.lime.$scripts[y];
        if (!E) throw Error('Cannot find project name "' + y + '"');
        E(J, r);
        for (var Z in J) A[Z] = A[Z] || J[Z];
        (E = J.lime || window.lime) &&
          E.embed &&
          this !== E.embed &&
          E.embed.apply(E, arguments);
        return J;
      }));
  'function' === typeof define &&
    define.amd &&
    (define([], function () {
      return A.lime;
    }),
    (define.__amd = define.amd),
    (define.amd = null));
};
$lime_init(
  'undefined' !== typeof exports
    ? exports
    : 'function' === typeof define && define.amd
      ? {}
      : 'undefined' !== typeof window
        ? window
        : 'undefined' !== typeof self
          ? self
          : this,
  'undefined' !== typeof window
    ? window
    : 'undefined' !== typeof global
      ? global
      : 'undefined' !== typeof self
        ? self
        : this,
);
('undefined' !== typeof self && self.constructor.name.includes('Worker')) ||
  (!(function () {
    var A = function () {
      this.init();
    };
    A.prototype = {
      init: function () {
        var g = this || r;
        return (
          (g._counter = 1e3),
          (g._html5AudioPool = []),
          (g.html5PoolSize = 10),
          (g._codecs = {}),
          (g._howls = []),
          (g._muted = !1),
          (g._volume = 1),
          (g._canPlayEvent = 'canplaythrough'),
          (g._navigator =
            'undefined' != typeof window && window.navigator
              ? window.navigator
              : null),
          (g.masterGain = null),
          (g.noAudio = !1),
          (g.usingWebAudio = !0),
          (g.autoSuspend = !0),
          (g.ctx = null),
          (g.autoUnlock = !0),
          g._setup(),
          g
        );
      },
      volume: function (g) {
        var q = this || r;
        if (
          ((g = parseFloat(g)), q.ctx || l(), void 0 !== g && 0 <= g && 1 >= g)
        ) {
          if (((q._volume = g), q._muted)) return q;
          q.usingWebAudio &&
            q.masterGain.gain.setValueAtTime(g, r.ctx.currentTime);
          for (var F = 0; F < q._howls.length; F++)
            if (!q._howls[F]._webAudio)
              for (
                var H = q._howls[F]._getSoundIds(), u = 0;
                u < H.length;
                u++
              ) {
                var N = q._howls[F]._soundById(H[u]);
                N && N._node && (N._node.volume = N._volume * g);
              }
          return q;
        }
        return q._volume;
      },
      mute: function (g) {
        var q = this || r;
        q.ctx || l();
        q._muted = g;
        q.usingWebAudio &&
          q.masterGain.gain.setValueAtTime(
            g ? 0 : q._volume,
            r.ctx.currentTime,
          );
        for (var F = 0; F < q._howls.length; F++)
          if (!q._howls[F]._webAudio)
            for (var u = q._howls[F]._getSoundIds(), y = 0; y < u.length; y++) {
              var N = q._howls[F]._soundById(u[y]);
              N && N._node && (N._node.muted = !!g || N._muted);
            }
        return q;
      },
      stop: function () {
        for (var g = this || r, q = 0; q < g._howls.length; q++)
          g._howls[q].stop();
        return g;
      },
      unload: function () {
        for (var g = this || r, q = g._howls.length - 1; 0 <= q; q--)
          g._howls[q].unload();
        return (
          g.usingWebAudio &&
            g.ctx &&
            void 0 !== g.ctx.close &&
            (g.ctx.close(), (g.ctx = null), l()),
          g
        );
      },
      codecs: function (g) {
        return (this || r)._codecs[g.replace(/^x-/, '')];
      },
      _setup: function () {
        var g = this || r;
        if (
          ((g.state = g.ctx ? g.ctx.state || 'suspended' : 'suspended'),
          g._autoSuspend(),
          !g.usingWebAudio)
        )
          if ('undefined' != typeof Audio)
            try {
              var q = new Audio();
              void 0 === q.oncanplaythrough && (g._canPlayEvent = 'canplay');
            } catch (F) {
              g.noAudio = !0;
            }
          else g.noAudio = !0;
        try {
          ((q = new Audio()), q.muted && (g.noAudio = !0));
        } catch (F) {}
        return (g.noAudio || g._setupCodecs(), g);
      },
      _setupCodecs: function () {
        var g = this || r,
          q = null;
        try {
          q = 'undefined' != typeof Audio ? new Audio() : null;
        } catch (Ab) {
          return g;
        }
        if (!q || 'function' != typeof q.canPlayType) return g;
        var l = q.canPlayType('audio/mpeg;').replace(/^no$/, ''),
          u = g._navigator ? g._navigator.userAgent : '',
          y = u.match(/OPR\/(\d+)/g);
        y = y && 33 > parseInt(y[0].split('/')[1], 10);
        var N = -1 !== u.indexOf('Safari') && -1 === u.indexOf('Chrome');
        u = u.match(/Version\/(.*?) /);
        u = N && u && 15 > parseInt(u[1], 10);
        return (
          (g._codecs = {
            mp3: !(
              y ||
              (!l && !q.canPlayType('audio/mp3;').replace(/^no$/, ''))
            ),
            mpeg: !!l,
            opus: !!q
              .canPlayType('audio/ogg; codecs="opus"')
              .replace(/^no$/, ''),
            ogg: !!q
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            oga: !!q
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            wav: !!(
              q.canPlayType('audio/wav; codecs="1"') ||
              q.canPlayType('audio/wav')
            ).replace(/^no$/, ''),
            aac: !!q.canPlayType('audio/aac;').replace(/^no$/, ''),
            caf: !!q.canPlayType('audio/x-caf;').replace(/^no$/, ''),
            m4a: !!(
              q.canPlayType('audio/x-m4a;') ||
              q.canPlayType('audio/m4a;') ||
              q.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            m4b: !!(
              q.canPlayType('audio/x-m4b;') ||
              q.canPlayType('audio/m4b;') ||
              q.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            mp4: !!(
              q.canPlayType('audio/x-mp4;') ||
              q.canPlayType('audio/mp4;') ||
              q.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            weba: !(
              u ||
              !q.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            webm: !(
              u ||
              !q.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            dolby: !!q
              .canPlayType('audio/mp4; codecs="ec-3"')
              .replace(/^no$/, ''),
            flac: !!(
              q.canPlayType('audio/x-flac;') || q.canPlayType('audio/flac;')
            ).replace(/^no$/, ''),
          }),
          g
        );
      },
      _unlockAudio: function () {
        var g = this || r;
        if (!g._audioUnlocked && g.ctx) {
          g._audioUnlocked = !1;
          g.autoUnlock = !1;
          g._mobileUnloaded ||
            44100 === g.ctx.sampleRate ||
            ((g._mobileUnloaded = !0), g.unload());
          g._scratchBuffer = g.ctx.createBuffer(1, 1, 22050);
          var q = function (l) {
            for (; g._html5AudioPool.length < g.html5PoolSize; )
              try {
                var F = new Audio();
                F._unlocked = !0;
                g._releaseHtml5Audio(F);
              } catch (Bb) {
                g.noAudio = !0;
                break;
              }
            for (l = 0; l < g._howls.length; l++)
              if (!g._howls[l]._webAudio) {
                F = g._howls[l]._getSoundIds();
                for (var r = 0; r < F.length; r++) {
                  var u = g._howls[l]._soundById(F[r]);
                  u &&
                    u._node &&
                    !u._node._unlocked &&
                    ((u._node._unlocked = !0), u._node.load());
                }
              }
            g._autoResume();
            var y = g.ctx.createBufferSource();
            y.buffer = g._scratchBuffer;
            y.connect(g.ctx.destination);
            void 0 === y.start ? y.noteOn(0) : y.start(0);
            'function' == typeof g.ctx.resume && g.ctx.resume();
            y.onended = function () {
              y.disconnect(0);
              g._audioUnlocked = !0;
              document.removeEventListener('touchstart', q, !0);
              document.removeEventListener('touchend', q, !0);
              document.removeEventListener('click', q, !0);
              document.removeEventListener('keydown', q, !0);
              for (var l = 0; l < g._howls.length; l++)
                g._howls[l]._emit('unlock');
            };
          };
          return (
            document.addEventListener('touchstart', q, !0),
            document.addEventListener('touchend', q, !0),
            document.addEventListener('click', q, !0),
            document.addEventListener('keydown', q, !0),
            g
          );
        }
      },
      _obtainHtml5Audio: function () {
        var g = this || r;
        if (g._html5AudioPool.length) return g._html5AudioPool.pop();
        g = new Audio().play();
        return (
          g &&
            'undefined' != typeof Promise &&
            (g instanceof Promise || 'function' == typeof g.then) &&
            g.catch(function () {
              console.warn(
                'HTML5 Audio pool exhausted, returning potentially locked audio object.',
              );
            }),
          new Audio()
        );
      },
      _releaseHtml5Audio: function (g) {
        var q = this || r;
        return (g._unlocked && q._html5AudioPool.push(g), q);
      },
      _autoSuspend: function () {
        var g = this;
        if (
          g.autoSuspend &&
          g.ctx &&
          void 0 !== g.ctx.suspend &&
          r.usingWebAudio
        ) {
          for (var q = 0; q < g._howls.length; q++)
            if (g._howls[q]._webAudio)
              for (var l = 0; l < g._howls[q]._sounds.length; l++)
                if (!g._howls[q]._sounds[l]._paused) return g;
          return (
            g._suspendTimer && clearTimeout(g._suspendTimer),
            (g._suspendTimer = setTimeout(function () {
              if (g.autoSuspend) {
                g._suspendTimer = null;
                g.state = 'suspending';
                var q = function () {
                  g.state = 'suspended';
                  g._resumeAfterSuspend &&
                    (delete g._resumeAfterSuspend, g._autoResume());
                };
                g.ctx.suspend().then(q, q);
              }
            }, 3e4)),
            g
          );
        }
      },
      _autoResume: function () {
        var g = this;
        if (g.ctx && void 0 !== g.ctx.resume && r.usingWebAudio)
          return (
            'running' === g.state &&
            'interrupted' !== g.ctx.state &&
            g._suspendTimer
              ? (clearTimeout(g._suspendTimer), (g._suspendTimer = null))
              : 'suspended' === g.state ||
                  ('running' === g.state && 'interrupted' === g.ctx.state)
                ? (g.ctx.resume().then(function () {
                    g.state = 'running';
                    for (var q = 0; q < g._howls.length; q++)
                      g._howls[q]._emit('resume');
                  }),
                  g._suspendTimer &&
                    (clearTimeout(g._suspendTimer), (g._suspendTimer = null)))
                : 'suspending' === g.state && (g._resumeAfterSuspend = !0),
            g
          );
      },
    };
    var r = new A(),
      y = function (g) {
        if (!g.src || 0 === g.src.length)
          return void console.error(
            'An array of source files must be passed with any new Howl.',
          );
        this.init(g);
      };
    y.prototype = {
      init: function (g) {
        var q = this;
        return (
          r.ctx || l(),
          (q._autoplay = g.autoplay || !1),
          (q._format = 'string' != typeof g.format ? g.format : [g.format]),
          (q._html5 = g.html5 || !1),
          (q._muted = g.mute || !1),
          (q._loop = g.loop || !1),
          (q._pool = g.pool || 5),
          (q._preload =
            ('boolean' != typeof g.preload && 'metadata' !== g.preload) ||
            g.preload),
          (q._rate = g.rate || 1),
          (q._sprite = g.sprite || {}),
          (q._src = 'string' != typeof g.src ? g.src : [g.src]),
          (q._volume = void 0 !== g.volume ? g.volume : 1),
          (q._xhr = {
            method: g.xhr && g.xhr.method ? g.xhr.method : 'GET',
            headers: g.xhr && g.xhr.headers ? g.xhr.headers : null,
            withCredentials:
              !(!g.xhr || !g.xhr.withCredentials) && g.xhr.withCredentials,
          }),
          (q._duration = 0),
          (q._state = 'unloaded'),
          (q._sounds = []),
          (q._endTimers = {}),
          (q._queue = []),
          (q._playLock = !1),
          (q._onend = g.onend ? [{ fn: g.onend }] : []),
          (q._onfade = g.onfade ? [{ fn: g.onfade }] : []),
          (q._onload = g.onload ? [{ fn: g.onload }] : []),
          (q._onloaderror = g.onloaderror ? [{ fn: g.onloaderror }] : []),
          (q._onplayerror = g.onplayerror ? [{ fn: g.onplayerror }] : []),
          (q._onpause = g.onpause ? [{ fn: g.onpause }] : []),
          (q._onplay = g.onplay ? [{ fn: g.onplay }] : []),
          (q._onstop = g.onstop ? [{ fn: g.onstop }] : []),
          (q._onmute = g.onmute ? [{ fn: g.onmute }] : []),
          (q._onvolume = g.onvolume ? [{ fn: g.onvolume }] : []),
          (q._onrate = g.onrate ? [{ fn: g.onrate }] : []),
          (q._onseek = g.onseek ? [{ fn: g.onseek }] : []),
          (q._onunlock = g.onunlock ? [{ fn: g.onunlock }] : []),
          (q._onresume = []),
          (q._webAudio = r.usingWebAudio && !q._html5),
          void 0 !== r.ctx && r.ctx && r.autoUnlock && r._unlockAudio(),
          r._howls.push(q),
          q._autoplay &&
            q._queue.push({
              event: 'play',
              action: function () {
                q.play();
              },
            }),
          q._preload && 'none' !== q._preload && q.load(),
          q
        );
      },
      load: function () {
        var g = null;
        if (r.noAudio)
          return void this._emit('loaderror', null, 'No audio support.');
        'string' == typeof this._src && (this._src = [this._src]);
        for (var q = 0; q < this._src.length; q++) {
          var l;
          if (this._format && this._format[q]) var u = this._format[q];
          else {
            if ('string' != typeof (l = this._src[q])) {
              this._emit(
                'loaderror',
                null,
                'Non-string found in selected audio sources - ignoring.',
              );
              continue;
            }
            (u = /^data:audio\/([^;,]+);/i.exec(l)) ||
              (u = /\.([^.]+)$/.exec(l.split('?', 1)[0]));
            u && (u = u[1].toLowerCase());
          }
          if (
            (u ||
              console.warn(
                'No file extension was found. Consider using the "format" property or specify an extension.',
              ),
            u && r.codecs(u))
          ) {
            g = this._src[q];
            break;
          }
        }
        return g
          ? ((this._src = g),
            (this._state = 'loading'),
            'https:' === window.location.protocol &&
              'http:' === g.slice(0, 5) &&
              ((this._html5 = !0), (this._webAudio = !1)),
            new E(this),
            this._webAudio && Q(this),
            this)
          : void this._emit(
              'loaderror',
              null,
              'No codec support for selected audio sources.',
            );
      },
      play: function (g, q) {
        var l = this,
          u = null;
        if ('number' == typeof g) ((u = g), (g = null));
        else {
          if ('string' == typeof g && 'loaded' === l._state && !l._sprite[g])
            return null;
          if (void 0 === g && ((g = '__default'), !l._playLock)) {
            for (var y = 0, N = 0; N < l._sounds.length; N++)
              l._sounds[N]._paused &&
                !l._sounds[N]._ended &&
                (y++, (u = l._sounds[N]._id));
            1 === y ? (g = null) : (u = null);
          }
        }
        var A = u ? l._soundById(u) : l._inactiveSound();
        if (!A) return null;
        if (
          (u && !g && (g = A._sprite || '__default'), 'loaded' !== l._state)
        ) {
          A._sprite = g;
          A._ended = !1;
          var E = A._id;
          return (
            l._queue.push({
              event: 'play',
              action: function () {
                l.play(E);
              },
            }),
            E
          );
        }
        if (u && !A._paused) return (q || l._loadQueue('play'), A._id);
        l._webAudio && r._autoResume();
        var J = Math.max(0, 0 < A._seek ? A._seek : l._sprite[g][0] / 1e3),
          Z = Math.max(0, (l._sprite[g][0] + l._sprite[g][1]) / 1e3 - J),
          da = (1e3 * Z) / Math.abs(A._rate),
          Q = l._sprite[g][0] / 1e3,
          X = (l._sprite[g][0] + l._sprite[g][1]) / 1e3;
        A._sprite = g;
        A._ended = !1;
        var pb = function () {
          A._paused = !1;
          A._seek = J;
          A._start = Q;
          A._stop = X;
          A._loop = !(!A._loop && !l._sprite[g][2]);
        };
        if (J >= X) return void l._ended(A);
        var ka = A._node;
        if (l._webAudio)
          ((u = function () {
            l._playLock = !1;
            pb();
            l._refreshBuffer(A);
            ka.gain.setValueAtTime(
              A._muted || l._muted ? 0 : A._volume,
              r.ctx.currentTime,
            );
            A._playStart = r.ctx.currentTime;
            void 0 === ka.bufferSource.start
              ? A._loop
                ? ka.bufferSource.noteGrainOn(0, J, 86400)
                : ka.bufferSource.noteGrainOn(0, J, Z)
              : A._loop
                ? ka.bufferSource.start(0, J, 86400)
                : ka.bufferSource.start(0, J, Z);
            da !== 1 / 0 &&
              (l._endTimers[A._id] = setTimeout(l._ended.bind(l, A), da));
            q ||
              setTimeout(function () {
                l._emit('play', A._id);
                l._loadQueue();
              }, 0);
          }),
            'running' === r.state && 'interrupted' !== r.ctx.state
              ? u()
              : ((l._playLock = !0),
                l.once('resume', u),
                l._clearTimer(A._id)));
        else {
          var na = function () {
            ka.currentTime = J;
            ka.muted = A._muted || l._muted || r._muted || ka.muted;
            ka.volume = A._volume * r.volume();
            ka.playbackRate = A._rate;
            try {
              var F = ka.play();
              if (
                (F &&
                'undefined' != typeof Promise &&
                (F instanceof Promise || 'function' == typeof F.then)
                  ? ((l._playLock = !0),
                    pb(),
                    F.then(function () {
                      l._playLock = !1;
                      ka._unlocked = !0;
                      q ? l._loadQueue() : l._emit('play', A._id);
                    }).catch(function () {
                      l._playLock = !1;
                      l._emit(
                        'playerror',
                        A._id,
                        'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                      );
                      A._ended = !0;
                      A._paused = !0;
                    }))
                  : q || ((l._playLock = !1), pb(), l._emit('play', A._id)),
                (ka.playbackRate = A._rate),
                ka.paused)
              )
                return void l._emit(
                  'playerror',
                  A._id,
                  'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                );
              '__default' !== g || A._loop
                ? (l._endTimers[A._id] = setTimeout(l._ended.bind(l, A), da))
                : ((l._endTimers[A._id] = function () {
                    l._ended(A);
                    ka.removeEventListener('ended', l._endTimers[A._id], !1);
                  }),
                  ka.addEventListener('ended', l._endTimers[A._id], !1));
            } catch (sa) {
              l._emit('playerror', A._id, sa);
            }
          };
          'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA' ===
            ka.src && ((ka.src = l._src), ka.load());
          u =
            (window && window.ejecta) ||
            (!ka.readyState && r._navigator.isCocoonJS);
          if (3 <= ka.readyState || u) na();
          else {
            l._playLock = !0;
            l._state = 'loading';
            var Ya = function () {
              l._state = 'loaded';
              na();
              ka.removeEventListener(r._canPlayEvent, Ya, !1);
            };
            ka.addEventListener(r._canPlayEvent, Ya, !1);
            l._clearTimer(A._id);
          }
        }
        return A._id;
      },
      pause: function (g, q) {
        var l = this;
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'pause',
              action: function () {
                l.pause(g);
              },
            }),
            l
          );
        for (var r = l._getSoundIds(g), u = 0; u < r.length; u++) {
          l._clearTimer(r[u]);
          var A = l._soundById(r[u]);
          if (
            A &&
            !A._paused &&
            ((A._seek = l.seek(r[u])),
            (A._rateSeek = 0),
            (A._paused = !0),
            l._stopFade(r[u]),
            A._node)
          )
            if (l._webAudio) {
              if (!A._node.bufferSource) continue;
              void 0 === A._node.bufferSource.stop
                ? A._node.bufferSource.noteOff(0)
                : A._node.bufferSource.stop(0);
              l._cleanBuffer(A._node);
            } else
              (isNaN(A._node.duration) && A._node.duration !== 1 / 0) ||
                A._node.pause();
          q || l._emit('pause', A ? A._id : null);
        }
        return l;
      },
      stop: function (g, q) {
        var l = this;
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'stop',
              action: function () {
                l.stop(g);
              },
            }),
            l
          );
        for (var r = l._getSoundIds(g), u = 0; u < r.length; u++) {
          l._clearTimer(r[u]);
          var A = l._soundById(r[u]);
          A &&
            ((A._seek = A._start || 0),
            (A._rateSeek = 0),
            (A._paused = !0),
            (A._ended = !0),
            l._stopFade(r[u]),
            A._node &&
              (l._webAudio
                ? A._node.bufferSource &&
                  (void 0 === A._node.bufferSource.stop
                    ? A._node.bufferSource.noteOff(0)
                    : A._node.bufferSource.stop(0),
                  l._cleanBuffer(A._node))
                : (isNaN(A._node.duration) && A._node.duration !== 1 / 0) ||
                  ((A._node.currentTime = A._start || 0),
                  A._node.pause(),
                  A._node.duration === 1 / 0 && l._clearSound(A._node))),
            q || l._emit('stop', A._id));
        }
        return l;
      },
      mute: function (g, q) {
        var l = this;
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'mute',
              action: function () {
                l.mute(g, q);
              },
            }),
            l
          );
        if (void 0 === q) {
          if ('boolean' != typeof g) return l._muted;
          l._muted = g;
        }
        for (var u = l._getSoundIds(q), A = 0; A < u.length; A++) {
          var y = l._soundById(u[A]);
          y &&
            ((y._muted = g),
            y._interval && l._stopFade(y._id),
            l._webAudio && y._node
              ? y._node.gain.setValueAtTime(
                  g ? 0 : y._volume,
                  r.ctx.currentTime,
                )
              : y._node && (y._node.muted = !!r._muted || g),
            l._emit('mute', y._id));
        }
        return l;
      },
      volume: function () {
        var g,
          q,
          l = this,
          u = arguments;
        if (0 === u.length) return l._volume;
        1 === u.length || (2 === u.length && void 0 === u[1])
          ? 0 <= l._getSoundIds().indexOf(u[0])
            ? (q = parseInt(u[0], 10))
            : (g = parseFloat(u[0]))
          : 2 <= u.length && ((g = parseFloat(u[0])), (q = parseInt(u[1], 10)));
        var A;
        if (!(void 0 !== g && 0 <= g && 1 >= g))
          return ((A = q ? l._soundById(q) : l._sounds[0]), A ? A._volume : 0);
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'volume',
              action: function () {
                l.volume.apply(l, u);
              },
            }),
            l
          );
        void 0 === q && (l._volume = g);
        q = l._getSoundIds(q);
        for (var y = 0; y < q.length; y++)
          (A = l._soundById(q[y])) &&
            ((A._volume = g),
            u[2] || l._stopFade(q[y]),
            l._webAudio && A._node && !A._muted
              ? A._node.gain.setValueAtTime(g, r.ctx.currentTime)
              : A._node && !A._muted && (A._node.volume = g * r.volume()),
            l._emit('volume', A._id));
        return l;
      },
      fade: function (g, q, l, u) {
        var F = this;
        if ('loaded' !== F._state || F._playLock)
          return (
            F._queue.push({
              event: 'fade',
              action: function () {
                F.fade(g, q, l, u);
              },
            }),
            F
          );
        g = Math.min(Math.max(0, parseFloat(g)), 1);
        q = Math.min(Math.max(0, parseFloat(q)), 1);
        l = parseFloat(l);
        F.volume(g, u);
        for (var A = F._getSoundIds(u), H = 0; H < A.length; H++) {
          var y = F._soundById(A[H]);
          if (y) {
            if ((u || F._stopFade(A[H]), F._webAudio && !y._muted)) {
              var E = r.ctx.currentTime,
                J = E + l / 1e3;
              y._volume = g;
              y._node.gain.setValueAtTime(g, E);
              y._node.gain.linearRampToValueAtTime(q, J);
            }
            F._startFadeInterval(y, g, q, l, A[H], void 0 === u);
          }
        }
        return F;
      },
      _startFadeInterval: function (g, q, l, u, r, A) {
        var F = this,
          H = q,
          y = l - q;
        r = Math.abs(y / 0.01);
        r = Math.max(4, 0 < r ? u / r : u);
        var N = Date.now();
        g._fadeTo = l;
        g._interval = setInterval(function () {
          var r = (Date.now() - N) / u;
          N = Date.now();
          H += y * r;
          H = Math.round(100 * H) / 100;
          H = 0 > y ? Math.max(l, H) : Math.min(l, H);
          F._webAudio ? (g._volume = H) : F.volume(H, g._id, !0);
          A && (F._volume = H);
          ((l < q && H <= l) || (l > q && H >= l)) &&
            (clearInterval(g._interval),
            (g._interval = null),
            (g._fadeTo = null),
            F.volume(l, g._id),
            F._emit('fade', g._id));
        }, r);
      },
      _stopFade: function (g) {
        var l = this._soundById(g);
        return (
          l &&
            l._interval &&
            (this._webAudio &&
              l._node.gain.cancelScheduledValues(r.ctx.currentTime),
            clearInterval(l._interval),
            (l._interval = null),
            this.volume(l._fadeTo, g),
            (l._fadeTo = null),
            this._emit('fade', g)),
          this
        );
      },
      loop: function () {
        var g,
          l,
          u,
          r = arguments;
        if (0 === r.length) return this._loop;
        if (1 === r.length) {
          if ('boolean' != typeof r[0])
            return !!(u = this._soundById(parseInt(r[0], 10))) && u._loop;
          this._loop = g = r[0];
        } else 2 === r.length && ((g = r[0]), (l = parseInt(r[1], 10)));
        l = this._getSoundIds(l);
        for (r = 0; r < l.length; r++)
          (u = this._soundById(l[r])) &&
            ((u._loop = g),
            this._webAudio &&
              u._node &&
              u._node.bufferSource &&
              ((u._node.bufferSource.loop = g),
              g &&
                ((u._node.bufferSource.loopStart = u._start || 0),
                (u._node.bufferSource.loopEnd = u._stop),
                this.playing(l[r]) &&
                  (this.pause(l[r], !0), this.play(l[r], !0)))));
        return this;
      },
      rate: function () {
        var g,
          l,
          u = this,
          A = arguments;
        0 === A.length
          ? (l = u._sounds[0]._id)
          : 1 === A.length
            ? 0 <= u._getSoundIds().indexOf(A[0])
              ? (l = parseInt(A[0], 10))
              : (g = parseFloat(A[0]))
            : 2 === A.length &&
              ((g = parseFloat(A[0])), (l = parseInt(A[1], 10)));
        var y;
        if ('number' != typeof g)
          return ((y = u._soundById(l)), y ? y._rate : u._rate);
        if ('loaded' !== u._state || u._playLock)
          return (
            u._queue.push({
              event: 'rate',
              action: function () {
                u.rate.apply(u, A);
              },
            }),
            u
          );
        void 0 === l && (u._rate = g);
        l = u._getSoundIds(l);
        for (var N = 0; N < l.length; N++)
          if ((y = u._soundById(l[N]))) {
            u.playing(l[N]) &&
              ((y._rateSeek = u.seek(l[N])),
              (y._playStart = u._webAudio ? r.ctx.currentTime : y._playStart));
            y._rate = g;
            u._webAudio && y._node && y._node.bufferSource
              ? y._node.bufferSource.playbackRate.setValueAtTime(
                  g,
                  r.ctx.currentTime,
                )
              : y._node && (y._node.playbackRate = g);
            var E = u.seek(l[N]);
            E =
              (1e3 *
                ((u._sprite[y._sprite][0] + u._sprite[y._sprite][1]) / 1e3 -
                  E)) /
              Math.abs(y._rate);
            (!u._endTimers[l[N]] && y._paused) ||
              (u._clearTimer(l[N]),
              (u._endTimers[l[N]] = setTimeout(u._ended.bind(u, y), E)));
            u._emit('rate', y._id);
          }
        return u;
      },
      seek: function () {
        var g,
          l,
          u = this,
          A = arguments;
        0 === A.length
          ? u._sounds.length && (l = u._sounds[0]._id)
          : 1 === A.length
            ? 0 <= u._getSoundIds().indexOf(A[0])
              ? (l = parseInt(A[0], 10))
              : u._sounds.length &&
                ((l = u._sounds[0]._id), (g = parseFloat(A[0])))
            : 2 === A.length &&
              ((g = parseFloat(A[0])), (l = parseInt(A[1], 10)));
        if (void 0 === l) return 0;
        if ('number' == typeof g && ('loaded' !== u._state || u._playLock))
          return (
            u._queue.push({
              event: 'seek',
              action: function () {
                u.seek.apply(u, A);
              },
            }),
            u
          );
        var y = u._soundById(l);
        if (y) {
          if (!('number' == typeof g && 0 <= g))
            return u._webAudio
              ? ((g = u.playing(l) ? r.ctx.currentTime - y._playStart : 0),
                y._seek +
                  ((y._rateSeek ? y._rateSeek - y._seek : 0) +
                    g * Math.abs(y._rate)))
              : y._node.currentTime;
          var N = u.playing(l);
          N && u.pause(l, !0);
          y._seek = g;
          y._ended = !1;
          u._clearTimer(l);
          u._webAudio ||
            !y._node ||
            isNaN(y._node.duration) ||
            (y._node.currentTime = g);
          var E = function () {
            N && u.play(l, !0);
            u._emit('seek', l);
          };
          if (N && !u._webAudio) {
            var J = function () {
              u._playLock ? setTimeout(J, 0) : E();
            };
            setTimeout(J, 0);
          } else E();
        }
        return u;
      },
      playing: function (g) {
        if ('number' == typeof g)
          return ((g = this._soundById(g)), !!g && !g._paused);
        for (g = 0; g < this._sounds.length; g++)
          if (!this._sounds[g]._paused) return !0;
        return !1;
      },
      duration: function (g) {
        var l = this._duration;
        g = this._soundById(g);
        return (g && (l = this._sprite[g._sprite][1] / 1e3), l);
      },
      state: function () {
        return this._state;
      },
      unload: function () {
        for (var g = this._sounds, l = 0; l < g.length; l++)
          (g[l]._paused || this.stop(g[l]._id),
            this._webAudio ||
              (this._clearSound(g[l]._node),
              g[l]._node.removeEventListener('error', g[l]._errorFn, !1),
              g[l]._node.removeEventListener(r._canPlayEvent, g[l]._loadFn, !1),
              g[l]._node.removeEventListener('ended', g[l]._endFn, !1),
              r._releaseHtml5Audio(g[l]._node)),
            delete g[l]._node,
            this._clearTimer(g[l]._id));
        l = r._howls.indexOf(this);
        0 <= l && r._howls.splice(l, 1);
        g = !0;
        for (l = 0; l < r._howls.length; l++)
          if (
            r._howls[l]._src === this._src ||
            0 <= this._src.indexOf(r._howls[l]._src)
          ) {
            g = !1;
            break;
          }
        return (
          J && g && delete J[this._src],
          (r.noAudio = !1),
          (this._state = 'unloaded'),
          (this._sounds = []),
          null
        );
      },
      on: function (g, l, u, r) {
        g = this['_on' + g];
        return (
          'function' == typeof l &&
            g.push(r ? { id: u, fn: l, once: r } : { id: u, fn: l }),
          this
        );
      },
      off: function (g, l, u) {
        var q = this['_on' + g];
        if (('number' == typeof l && ((u = l), (l = null)), l || u))
          for (g = 0; g < q.length; g++) {
            var r = u === q[g].id;
            if ((l === q[g].fn && r) || (!l && r)) {
              q.splice(g, 1);
              break;
            }
          }
        else if (g) this['_on' + g] = [];
        else
          for (l = Object.keys(this), g = 0; g < l.length; g++)
            0 === l[g].indexOf('_on') &&
              Array.isArray(this[l[g]]) &&
              (this[l[g]] = []);
        return this;
      },
      once: function (g, l, u) {
        return (this.on(g, l, u, 1), this);
      },
      _emit: function (g, l, u) {
        for (var q = this['_on' + g], r = q.length - 1; 0 <= r; r--)
          (q[r].id && q[r].id !== l && 'load' !== g) ||
            (setTimeout(
              function (g) {
                g.call(this, l, u);
              }.bind(this, q[r].fn),
              0,
            ),
            q[r].once && this.off(g, q[r].fn, q[r].id));
        return (this._loadQueue(g), this);
      },
      _loadQueue: function (g) {
        if (0 < this._queue.length) {
          var l = this._queue[0];
          l.event === g && (this._queue.shift(), this._loadQueue());
          g || l.action();
        }
        return this;
      },
      _ended: function (g) {
        var l = g._sprite;
        if (
          !this._webAudio &&
          g._node &&
          !g._node.paused &&
          !g._node.ended &&
          g._node.currentTime < g._stop
        )
          return (setTimeout(this._ended.bind(this, g), 100), this);
        l = !(!g._loop && !this._sprite[l][2]);
        if (
          (this._emit('end', g._id),
          !this._webAudio && l && this.stop(g._id, !0).play(g._id),
          this._webAudio && l)
        ) {
          this._emit('play', g._id);
          g._seek = g._start || 0;
          g._rateSeek = 0;
          g._playStart = r.ctx.currentTime;
          var u = (1e3 * (g._stop - g._start)) / Math.abs(g._rate);
          this._endTimers[g._id] = setTimeout(this._ended.bind(this, g), u);
        }
        return (
          this._webAudio &&
            !l &&
            ((g._paused = !0),
            (g._ended = !0),
            (g._seek = g._start || 0),
            (g._rateSeek = 0),
            this._clearTimer(g._id),
            this._cleanBuffer(g._node),
            r._autoSuspend()),
          this._webAudio || l || this.stop(g._id, !0),
          this
        );
      },
      _clearTimer: function (g) {
        if (this._endTimers[g]) {
          if ('function' != typeof this._endTimers[g])
            clearTimeout(this._endTimers[g]);
          else {
            var l = this._soundById(g);
            l &&
              l._node &&
              l._node.removeEventListener('ended', this._endTimers[g], !1);
          }
          delete this._endTimers[g];
        }
        return this;
      },
      _soundById: function (g) {
        for (var l = 0; l < this._sounds.length; l++)
          if (g === this._sounds[l]._id) return this._sounds[l];
        return null;
      },
      _inactiveSound: function () {
        this._drain();
        for (var g = 0; g < this._sounds.length; g++)
          if (this._sounds[g]._ended) return this._sounds[g].reset();
        return new E(this);
      },
      _drain: function () {
        var g = this._pool,
          l = 0,
          u;
        if (!(this._sounds.length < g)) {
          for (u = 0; u < this._sounds.length; u++)
            this._sounds[u]._ended && l++;
          for (u = this._sounds.length - 1; 0 <= u && !(l <= g); u--)
            this._sounds[u]._ended &&
              (this._webAudio &&
                this._sounds[u]._node &&
                this._sounds[u]._node.disconnect(0),
              this._sounds.splice(u, 1),
              l--);
        }
      },
      _getSoundIds: function (g) {
        if (void 0 === g) {
          g = [];
          for (var l = 0; l < this._sounds.length; l++)
            g.push(this._sounds[l]._id);
          return g;
        }
        return [g];
      },
      _refreshBuffer: function (g) {
        return (
          (g._node.bufferSource = r.ctx.createBufferSource()),
          (g._node.bufferSource.buffer = J[this._src]),
          g._panner
            ? g._node.bufferSource.connect(g._panner)
            : g._node.bufferSource.connect(g._node),
          (g._node.bufferSource.loop = g._loop),
          g._loop &&
            ((g._node.bufferSource.loopStart = g._start || 0),
            (g._node.bufferSource.loopEnd = g._stop || 0)),
          g._node.bufferSource.playbackRate.setValueAtTime(
            g._rate,
            r.ctx.currentTime,
          ),
          this
        );
      },
      _cleanBuffer: function (g) {
        var l = r._navigator && 0 <= r._navigator.vendor.indexOf('Apple');
        if (!g.bufferSource) return this;
        if (
          r._scratchBuffer &&
          g.bufferSource &&
          ((g.bufferSource.onended = null), g.bufferSource.disconnect(0), l)
        )
          try {
            g.bufferSource.buffer = r._scratchBuffer;
          } catch (F) {}
        return ((g.bufferSource = null), this);
      },
      _clearSound: function (g) {
        /MSIE |Trident\//.test(r._navigator && r._navigator.userAgent) ||
          (g.src =
            'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA');
      },
    };
    var E = function (g) {
      this._parent = g;
      this.init();
    };
    E.prototype = {
      init: function () {
        var g = this._parent;
        return (
          (this._muted = g._muted),
          (this._loop = g._loop),
          (this._volume = g._volume),
          (this._rate = g._rate),
          (this._seek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++r._counter),
          g._sounds.push(this),
          this.create(),
          this
        );
      },
      create: function () {
        var g = this._parent,
          l = r._muted || this._muted || this._parent._muted ? 0 : this._volume;
        return (
          g._webAudio
            ? ((this._node =
                void 0 === r.ctx.createGain
                  ? r.ctx.createGainNode()
                  : r.ctx.createGain()),
              this._node.gain.setValueAtTime(l, r.ctx.currentTime),
              (this._node.paused = !0),
              this._node.connect(r.masterGain))
            : r.noAudio ||
              ((this._node = r._obtainHtml5Audio()),
              (this._errorFn = this._errorListener.bind(this)),
              this._node.addEventListener('error', this._errorFn, !1),
              (this._loadFn = this._loadListener.bind(this)),
              this._node.addEventListener(r._canPlayEvent, this._loadFn, !1),
              (this._endFn = this._endListener.bind(this)),
              this._node.addEventListener('ended', this._endFn, !1),
              (this._node.src = g._src),
              (this._node.preload = !0 === g._preload ? 'auto' : g._preload),
              (this._node.volume = l * r.volume()),
              this._node.load()),
          this
        );
      },
      reset: function () {
        var g = this._parent;
        return (
          (this._muted = g._muted),
          (this._loop = g._loop),
          (this._volume = g._volume),
          (this._rate = g._rate),
          (this._seek = 0),
          (this._rateSeek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++r._counter),
          this
        );
      },
      _errorListener: function () {
        this._parent._emit(
          'loaderror',
          this._id,
          this._node.error ? this._node.error.code : 0,
        );
        this._node.removeEventListener('error', this._errorFn, !1);
      },
      _loadListener: function () {
        var g = this._parent;
        g._duration = Math.ceil(10 * this._node.duration) / 10;
        0 === Object.keys(g._sprite).length &&
          (g._sprite = { __default: [0, 1e3 * g._duration] });
        'loaded' !== g._state &&
          ((g._state = 'loaded'), g._emit('load'), g._loadQueue());
        this._node.removeEventListener(r._canPlayEvent, this._loadFn, !1);
      },
      _endListener: function () {
        var g = this._parent;
        g._duration === 1 / 0 &&
          ((g._duration = Math.ceil(10 * this._node.duration) / 10),
          g._sprite.__default[1] === 1 / 0 &&
            (g._sprite.__default[1] = 1e3 * g._duration),
          g._ended(this));
        this._node.removeEventListener('ended', this._endFn, !1);
      },
    };
    var J = {},
      Q = function (g) {
        var l = g._src;
        if (J[l]) return ((g._duration = J[l].duration), void da(g));
        if (/^data:[^;]+;base64,/.test(l)) {
          for (
            var r = atob(l.split(',')[1]), A = new Uint8Array(r.length), y = 0;
            y < r.length;
            ++y
          )
            A[y] = r.charCodeAt(y);
          u(A.buffer, g);
        } else {
          var E = new XMLHttpRequest();
          E.open(g._xhr.method, l, !0);
          E.withCredentials = g._xhr.withCredentials;
          E.responseType = 'arraybuffer';
          g._xhr.headers &&
            Object.keys(g._xhr.headers).forEach(function (l) {
              E.setRequestHeader(l, g._xhr.headers[l]);
            });
          E.onload = function () {
            var l = (E.status + '')[0];
            if ('0' !== l && '2' !== l && '3' !== l)
              return void g._emit(
                'loaderror',
                null,
                'Failed loading audio file with status: ' + E.status + '.',
              );
            u(E.response, g);
          };
          E.onerror = function () {
            g._webAudio &&
              ((g._html5 = !0),
              (g._webAudio = !1),
              (g._sounds = []),
              delete J[l],
              g.load());
          };
          Z(E);
        }
      },
      Z = function (g) {
        try {
          g.send();
        } catch (q) {
          g.onerror();
        }
      },
      u = function (g, l) {
        var q = function () {
            l._emit('loaderror', null, 'Decoding audio data failed.');
          },
          u = function (g) {
            g && 0 < l._sounds.length ? ((J[l._src] = g), da(l, g)) : q();
          };
        'undefined' != typeof Promise && 1 === r.ctx.decodeAudioData.length
          ? r.ctx.decodeAudioData(g).then(u).catch(q)
          : r.ctx.decodeAudioData(g, u, q);
      },
      da = function (g, l) {
        l && !g._duration && (g._duration = l.duration);
        0 === Object.keys(g._sprite).length &&
          (g._sprite = { __default: [0, 1e3 * g._duration] });
        'loaded' !== g._state &&
          ((g._state = 'loaded'), g._emit('load'), g._loadQueue());
      },
      l = function () {
        if (r.usingWebAudio) {
          try {
            'undefined' != typeof AudioContext
              ? (r.ctx = new AudioContext())
              : 'undefined' != typeof webkitAudioContext
                ? (r.ctx = new webkitAudioContext())
                : (r.usingWebAudio = !1);
          } catch (F) {
            r.usingWebAudio = !1;
          }
          r.ctx || (r.usingWebAudio = !1);
          var g = /iP(hone|od|ad)/.test(r._navigator && r._navigator.platform),
            l =
              r._navigator &&
              r._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
          l = l ? parseInt(l[1], 10) : null;
          g &&
            l &&
            9 > l &&
            ((g = /safari/.test(
              r._navigator && r._navigator.userAgent.toLowerCase(),
            )),
            r._navigator && !g && (r.usingWebAudio = !1));
          r.usingWebAudio &&
            ((r.masterGain =
              void 0 === r.ctx.createGain
                ? r.ctx.createGainNode()
                : r.ctx.createGain()),
            r.masterGain.gain.setValueAtTime(
              r._muted ? 0 : r._volume,
              r.ctx.currentTime,
            ),
            r.masterGain.connect(r.ctx.destination));
          r._setup();
        }
      };
    'function' == typeof define &&
      define.amd &&
      define([], function () {
        return { Howler: r, Howl: y };
      });
    'undefined' != typeof exports && ((exports.Howler = r), (exports.Howl = y));
    'undefined' != typeof global
      ? ((global.HowlerGlobal = A),
        (global.Howler = r),
        (global.Howl = y),
        (global.Sound = E))
      : 'undefined' != typeof window &&
        ((window.HowlerGlobal = A),
        (window.Howler = r),
        (window.Howl = y),
        (window.Sound = E));
  })(),
  !(function () {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function (r) {
      if (!this.ctx || !this.ctx.listener) return this;
      for (var A = this._howls.length - 1; 0 <= A; A--)
        this._howls[A].stereo(r);
      return this;
    };
    HowlerGlobal.prototype.pos = function (r, A, E) {
      return this.ctx && this.ctx.listener
        ? ((A = 'number' != typeof A ? this._pos[1] : A),
          (E = 'number' != typeof E ? this._pos[2] : E),
          'number' != typeof r
            ? this._pos
            : ((this._pos = [r, A, E]),
              void 0 !== this.ctx.listener.positionX
                ? (this.ctx.listener.positionX.setTargetAtTime(
                    this._pos[0],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionY.setTargetAtTime(
                    this._pos[1],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionZ.setTargetAtTime(
                    this._pos[2],
                    Howler.ctx.currentTime,
                    0.1,
                  ))
                : this.ctx.listener.setPosition(
                    this._pos[0],
                    this._pos[1],
                    this._pos[2],
                  ),
              this))
        : this;
    };
    HowlerGlobal.prototype.orientation = function (r, A, E, J, Q, Z) {
      if (!this.ctx || !this.ctx.listener) return this;
      var u = this._orientation;
      return (
        (A = 'number' != typeof A ? u[1] : A),
        (E = 'number' != typeof E ? u[2] : E),
        (J = 'number' != typeof J ? u[3] : J),
        (Q = 'number' != typeof Q ? u[4] : Q),
        (Z = 'number' != typeof Z ? u[5] : Z),
        'number' != typeof r
          ? u
          : ((this._orientation = [r, A, E, J, Q, Z]),
            void 0 !== this.ctx.listener.forwardX
              ? (this.ctx.listener.forwardX.setTargetAtTime(
                  r,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardY.setTargetAtTime(
                  A,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardZ.setTargetAtTime(
                  E,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upX.setTargetAtTime(
                  J,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upY.setTargetAtTime(
                  Q,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upZ.setTargetAtTime(
                  Z,
                  Howler.ctx.currentTime,
                  0.1,
                ))
              : this.ctx.listener.setOrientation(r, A, E, J, Q, Z),
            this)
      );
    };
    Howl.prototype.init = (function (r) {
      return function (A) {
        return (
          (this._orientation = A.orientation || [1, 0, 0]),
          (this._stereo = A.stereo || null),
          (this._pos = A.pos || null),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== A.coneInnerAngle ? A.coneInnerAngle : 360,
            coneOuterAngle:
              void 0 !== A.coneOuterAngle ? A.coneOuterAngle : 360,
            coneOuterGain: void 0 !== A.coneOuterGain ? A.coneOuterGain : 0,
            distanceModel:
              void 0 !== A.distanceModel ? A.distanceModel : 'inverse',
            maxDistance: void 0 !== A.maxDistance ? A.maxDistance : 1e4,
            panningModel: void 0 !== A.panningModel ? A.panningModel : 'HRTF',
            refDistance: void 0 !== A.refDistance ? A.refDistance : 1,
            rolloffFactor: void 0 !== A.rolloffFactor ? A.rolloffFactor : 1,
          }),
          (this._onstereo = A.onstereo ? [{ fn: A.onstereo }] : []),
          (this._onpos = A.onpos ? [{ fn: A.onpos }] : []),
          (this._onorientation = A.onorientation
            ? [{ fn: A.onorientation }]
            : []),
          r.call(this, A)
        );
      };
    })(Howl.prototype.init);
    Howl.prototype.stereo = function (r, y) {
      var E = this;
      if (!E._webAudio) return E;
      if ('loaded' !== E._state)
        return (
          E._queue.push({
            event: 'stereo',
            action: function () {
              E.stereo(r, y);
            },
          }),
          E
        );
      var J = void 0 === Howler.ctx.createStereoPanner ? 'spatial' : 'stereo';
      if (void 0 === y) {
        if ('number' != typeof r) return E._stereo;
        E._stereo = r;
        E._pos = [r, 0, 0];
      }
      for (var Q = E._getSoundIds(y), Z = 0; Z < Q.length; Z++) {
        var u = E._soundById(Q[Z]);
        if (u) {
          if ('number' != typeof r) return u._stereo;
          u._stereo = r;
          u._pos = [r, 0, 0];
          u._node &&
            ((u._pannerAttr.panningModel = 'equalpower'),
            (u._panner && u._panner.pan) || A(u, J),
            'spatial' === J
              ? void 0 !== u._panner.positionX
                ? (u._panner.positionX.setValueAtTime(
                    r,
                    Howler.ctx.currentTime,
                  ),
                  u._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                  u._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime))
                : u._panner.setPosition(r, 0, 0)
              : u._panner.pan.setValueAtTime(r, Howler.ctx.currentTime));
          E._emit('stereo', u._id);
        }
      }
      return E;
    };
    Howl.prototype.pos = function (r, y, E, J) {
      var Q = this;
      if (!Q._webAudio) return Q;
      if ('loaded' !== Q._state)
        return (
          Q._queue.push({
            event: 'pos',
            action: function () {
              Q.pos(r, y, E, J);
            },
          }),
          Q
        );
      if (
        ((y = 'number' != typeof y ? 0 : y),
        (E = 'number' != typeof E ? -0.5 : E),
        void 0 === J)
      ) {
        if ('number' != typeof r) return Q._pos;
        Q._pos = [r, y, E];
      }
      for (var Z = Q._getSoundIds(J), u = 0; u < Z.length; u++) {
        var da = Q._soundById(Z[u]);
        if (da) {
          if ('number' != typeof r) return da._pos;
          da._pos = [r, y, E];
          da._node &&
            ((da._panner && !da._panner.pan) || A(da, 'spatial'),
            void 0 !== da._panner.positionX
              ? (da._panner.positionX.setValueAtTime(r, Howler.ctx.currentTime),
                da._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime),
                da._panner.positionZ.setValueAtTime(E, Howler.ctx.currentTime))
              : da._panner.setPosition(r, y, E));
          Q._emit('pos', da._id);
        }
      }
      return Q;
    };
    Howl.prototype.orientation = function (r, y, E, J) {
      var Q = this;
      if (!Q._webAudio) return Q;
      if ('loaded' !== Q._state)
        return (
          Q._queue.push({
            event: 'orientation',
            action: function () {
              Q.orientation(r, y, E, J);
            },
          }),
          Q
        );
      if (
        ((y = 'number' != typeof y ? Q._orientation[1] : y),
        (E = 'number' != typeof E ? Q._orientation[2] : E),
        void 0 === J)
      ) {
        if ('number' != typeof r) return Q._orientation;
        Q._orientation = [r, y, E];
      }
      for (var Z = Q._getSoundIds(J), u = 0; u < Z.length; u++) {
        var da = Q._soundById(Z[u]);
        if (da) {
          if ('number' != typeof r) return da._orientation;
          da._orientation = [r, y, E];
          da._node &&
            (da._panner ||
              (da._pos || (da._pos = Q._pos || [0, 0, -0.5]), A(da, 'spatial')),
            void 0 !== da._panner.orientationX
              ? (da._panner.orientationX.setValueAtTime(
                  r,
                  Howler.ctx.currentTime,
                ),
                da._panner.orientationY.setValueAtTime(
                  y,
                  Howler.ctx.currentTime,
                ),
                da._panner.orientationZ.setValueAtTime(
                  E,
                  Howler.ctx.currentTime,
                ))
              : da._panner.setOrientation(r, y, E));
          Q._emit('orientation', da._id);
        }
      }
      return Q;
    };
    Howl.prototype.pannerAttr = function () {
      var r,
        y,
        E = arguments;
      if (!this._webAudio) return this;
      if (0 === E.length) return this._pannerAttr;
      if (1 === E.length) {
        if ('object' != typeof E[0])
          return (
            (y = this._soundById(parseInt(E[0], 10))),
            y ? y._pannerAttr : this._pannerAttr
          );
        var J = E[0];
        void 0 === r &&
          (J.pannerAttr ||
            (J.pannerAttr = {
              coneInnerAngle: J.coneInnerAngle,
              coneOuterAngle: J.coneOuterAngle,
              coneOuterGain: J.coneOuterGain,
              distanceModel: J.distanceModel,
              maxDistance: J.maxDistance,
              refDistance: J.refDistance,
              rolloffFactor: J.rolloffFactor,
              panningModel: J.panningModel,
            }),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== J.pannerAttr.coneInnerAngle
                ? J.pannerAttr.coneInnerAngle
                : this._coneInnerAngle,
            coneOuterAngle:
              void 0 !== J.pannerAttr.coneOuterAngle
                ? J.pannerAttr.coneOuterAngle
                : this._coneOuterAngle,
            coneOuterGain:
              void 0 !== J.pannerAttr.coneOuterGain
                ? J.pannerAttr.coneOuterGain
                : this._coneOuterGain,
            distanceModel:
              void 0 !== J.pannerAttr.distanceModel
                ? J.pannerAttr.distanceModel
                : this._distanceModel,
            maxDistance:
              void 0 !== J.pannerAttr.maxDistance
                ? J.pannerAttr.maxDistance
                : this._maxDistance,
            refDistance:
              void 0 !== J.pannerAttr.refDistance
                ? J.pannerAttr.refDistance
                : this._refDistance,
            rolloffFactor:
              void 0 !== J.pannerAttr.rolloffFactor
                ? J.pannerAttr.rolloffFactor
                : this._rolloffFactor,
            panningModel:
              void 0 !== J.pannerAttr.panningModel
                ? J.pannerAttr.panningModel
                : this._panningModel,
          }));
      } else 2 === E.length && ((J = E[0]), (r = parseInt(E[1], 10)));
      r = this._getSoundIds(r);
      for (E = 0; E < r.length; E++)
        if ((y = this._soundById(r[E]))) {
          var Q = y._pannerAttr;
          Q = {
            coneInnerAngle:
              void 0 !== J.coneInnerAngle ? J.coneInnerAngle : Q.coneInnerAngle,
            coneOuterAngle:
              void 0 !== J.coneOuterAngle ? J.coneOuterAngle : Q.coneOuterAngle,
            coneOuterGain:
              void 0 !== J.coneOuterGain ? J.coneOuterGain : Q.coneOuterGain,
            distanceModel:
              void 0 !== J.distanceModel ? J.distanceModel : Q.distanceModel,
            maxDistance:
              void 0 !== J.maxDistance ? J.maxDistance : Q.maxDistance,
            refDistance:
              void 0 !== J.refDistance ? J.refDistance : Q.refDistance,
            rolloffFactor:
              void 0 !== J.rolloffFactor ? J.rolloffFactor : Q.rolloffFactor,
            panningModel:
              void 0 !== J.panningModel ? J.panningModel : Q.panningModel,
          };
          var Z = y._panner;
          Z ||
            (y._pos || (y._pos = this._pos || [0, 0, -0.5]),
            A(y, 'spatial'),
            (Z = y._panner));
          Z.coneInnerAngle = Q.coneInnerAngle;
          Z.coneOuterAngle = Q.coneOuterAngle;
          Z.coneOuterGain = Q.coneOuterGain;
          Z.distanceModel = Q.distanceModel;
          Z.maxDistance = Q.maxDistance;
          Z.refDistance = Q.refDistance;
          Z.rolloffFactor = Q.rolloffFactor;
          Z.panningModel = Q.panningModel;
        }
      return this;
    };
    Sound.prototype.init = (function (r) {
      return function () {
        var A = this._parent;
        this._orientation = A._orientation;
        this._stereo = A._stereo;
        this._pos = A._pos;
        this._pannerAttr = A._pannerAttr;
        r.call(this);
        this._stereo
          ? A.stereo(this._stereo)
          : this._pos &&
            A.pos(this._pos[0], this._pos[1], this._pos[2], this._id);
      };
    })(Sound.prototype.init);
    Sound.prototype.reset = (function (r) {
      return function () {
        var A = this._parent;
        return (
          (this._orientation = A._orientation),
          (this._stereo = A._stereo),
          (this._pos = A._pos),
          (this._pannerAttr = A._pannerAttr),
          this._stereo
            ? A.stereo(this._stereo)
            : this._pos
              ? A.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
              : this._panner &&
                (this._panner.disconnect(0),
                (this._panner = void 0),
                A._refreshBuffer(this)),
          r.call(this)
        );
      };
    })(Sound.prototype.reset);
    var A = function (r, A) {
      'spatial' === (A || 'spatial')
        ? ((r._panner = Howler.ctx.createPanner()),
          (r._panner.coneInnerAngle = r._pannerAttr.coneInnerAngle),
          (r._panner.coneOuterAngle = r._pannerAttr.coneOuterAngle),
          (r._panner.coneOuterGain = r._pannerAttr.coneOuterGain),
          (r._panner.distanceModel = r._pannerAttr.distanceModel),
          (r._panner.maxDistance = r._pannerAttr.maxDistance),
          (r._panner.refDistance = r._pannerAttr.refDistance),
          (r._panner.rolloffFactor = r._pannerAttr.rolloffFactor),
          (r._panner.panningModel = r._pannerAttr.panningModel),
          void 0 !== r._panner.positionX
            ? (r._panner.positionX.setValueAtTime(
                r._pos[0],
                Howler.ctx.currentTime,
              ),
              r._panner.positionY.setValueAtTime(
                r._pos[1],
                Howler.ctx.currentTime,
              ),
              r._panner.positionZ.setValueAtTime(
                r._pos[2],
                Howler.ctx.currentTime,
              ))
            : r._panner.setPosition(r._pos[0], r._pos[1], r._pos[2]),
          void 0 !== r._panner.orientationX
            ? (r._panner.orientationX.setValueAtTime(
                r._orientation[0],
                Howler.ctx.currentTime,
              ),
              r._panner.orientationY.setValueAtTime(
                r._orientation[1],
                Howler.ctx.currentTime,
              ),
              r._panner.orientationZ.setValueAtTime(
                r._orientation[2],
                Howler.ctx.currentTime,
              ))
            : r._panner.setOrientation(
                r._orientation[0],
                r._orientation[1],
                r._orientation[2],
              ))
        : ((r._panner = Howler.ctx.createStereoPanner()),
          r._panner.pan.setValueAtTime(r._stereo, Howler.ctx.currentTime));
      r._panner.connect(r._node);
      r._paused || r._parent.pause(r._id, !0).play(r._id, !0);
    };
  })());
!(function (A) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = A())
    : 'function' == typeof define && define.amd
      ? define([], A)
      : (('undefined' != typeof window
          ? window
          : 'undefined' != typeof global
            ? global
            : 'undefined' != typeof self
              ? self
              : this
        ).pako = A());
})(function () {
  return (function J(r, y, E) {
    function Q(u, l) {
      if (!y[u]) {
        if (!r[u]) {
          var g = 'function' == typeof require && require;
          if (!l && g) return g(u, !0);
          if (Z) return Z(u, !0);
          l = Error("Cannot find module '" + u + "'");
          throw ((l.code = 'MODULE_NOT_FOUND'), l);
        }
        l = y[u] = { exports: {} };
        r[u][0].call(
          l.exports,
          function (g) {
            var l = r[u][1][g];
            return Q(l ? l : g);
          },
          l,
          l.exports,
          J,
          r,
          y,
          E,
        );
      }
      return y[u].exports;
    }
    for (
      var Z = 'function' == typeof require && require, u = 0;
      u < E.length;
      u++
    )
      Q(E[u]);
    return Q;
  })(
    {
      1: [
        function (r, y, E) {
          function J(r) {
            if (!(this instanceof J)) return new J(r);
            r = this.options = u.assign(
              {
                level: H,
                method: N,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: Ea,
                to: '',
              },
              r || {},
            );
            r.raw && 0 < r.windowBits
              ? (r.windowBits = -r.windowBits)
              : r.gzip &&
                0 < r.windowBits &&
                16 > r.windowBits &&
                (r.windowBits += 16);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new g();
            this.strm.avail_out = 0;
            var y = Z.deflateInit2(
              this.strm,
              r.level,
              r.method,
              r.windowBits,
              r.memLevel,
              r.strategy,
            );
            if (y !== F) throw Error(l[y]);
            if (
              (r.header && Z.deflateSetHeader(this.strm, r.header),
              r.dictionary)
            ) {
              var E;
              if (
                ((E =
                  'string' == typeof r.dictionary
                    ? da.string2buf(r.dictionary)
                    : '[object ArrayBuffer]' === q.call(r.dictionary)
                      ? new Uint8Array(r.dictionary)
                      : r.dictionary),
                (y = Z.deflateSetDictionary(this.strm, E)),
                y !== F)
              )
                throw Error(l[y]);
              this._dict_set = !0;
            }
          }
          function Q(g, l) {
            l = new J(l);
            if ((l.push(g, !0), l.err)) throw l.msg;
            return l.result;
          }
          var Z = r('./zlib/deflate'),
            u = r('./utils/common'),
            da = r('./utils/strings'),
            l = r('./zlib/messages'),
            g = r('./zlib/zstream'),
            q = Object.prototype.toString,
            F = 0,
            H = -1,
            Ea = 0,
            N = 8;
          J.prototype.push = function (g, l) {
            var r,
              H = this.strm,
              y = this.options.chunkSize;
            if (this.ended) return !1;
            l = l === ~~l ? l : !0 === l ? 4 : 0;
            'string' == typeof g
              ? (H.input = da.string2buf(g))
              : '[object ArrayBuffer]' === q.call(g)
                ? (H.input = new Uint8Array(g))
                : (H.input = g);
            H.next_in = 0;
            H.avail_in = H.input.length;
            do {
              if (
                (0 === H.avail_out &&
                  ((H.output = new u.Buf8(y)),
                  (H.next_out = 0),
                  (H.avail_out = y)),
                (r = Z.deflate(H, l)),
                1 !== r && r !== F)
              )
                return (this.onEnd(r), (this.ended = !0), !1);
              (0 !== H.avail_out &&
                (0 !== H.avail_in || (4 !== l && 2 !== l))) ||
                ('string' === this.options.to
                  ? this.onData(
                      da.buf2binstring(u.shrinkBuf(H.output, H.next_out)),
                    )
                  : this.onData(u.shrinkBuf(H.output, H.next_out)));
            } while ((0 < H.avail_in || 0 === H.avail_out) && 1 !== r);
            return 4 === l
              ? ((r = Z.deflateEnd(this.strm)),
                this.onEnd(r),
                (this.ended = !0),
                r === F)
              : 2 !== l || (this.onEnd(F), (H.avail_out = 0), !0);
          };
          J.prototype.onData = function (g) {
            this.chunks.push(g);
          };
          J.prototype.onEnd = function (g) {
            g === F &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = u.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = g;
            this.msg = this.strm.msg;
          };
          E.Deflate = J;
          E.deflate = Q;
          E.deflateRaw = function (g, l) {
            return ((l = l || {}), (l.raw = !0), Q(g, l));
          };
          E.gzip = function (g, l) {
            return ((l = l || {}), (l.gzip = !0), Q(g, l));
          };
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/deflate': 8,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      2: [
        function (r, y, E) {
          function J(r) {
            if (!(this instanceof J)) return new J(r);
            var H = (this.options = u.assign(
              { chunkSize: 16384, windowBits: 0, to: '' },
              r || {},
            ));
            H.raw &&
              0 <= H.windowBits &&
              16 > H.windowBits &&
              ((H.windowBits = -H.windowBits),
              0 === H.windowBits && (H.windowBits = -15));
            !(0 <= H.windowBits && 16 > H.windowBits) ||
              (r && r.windowBits) ||
              (H.windowBits += 32);
            15 < H.windowBits &&
              48 > H.windowBits &&
              0 === (15 & H.windowBits) &&
              (H.windowBits |= 15);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new q();
            this.strm.avail_out = 0;
            r = Z.inflateInit2(this.strm, H.windowBits);
            if (r !== l.Z_OK) throw Error(g[r]);
            this.header = new F();
            Z.inflateGetHeader(this.strm, this.header);
          }
          function Q(g, l) {
            l = new J(l);
            if ((l.push(g, !0), l.err)) throw l.msg;
            return l.result;
          }
          var Z = r('./zlib/inflate'),
            u = r('./utils/common'),
            da = r('./utils/strings'),
            l = r('./zlib/constants'),
            g = r('./zlib/messages'),
            q = r('./zlib/zstream'),
            F = r('./zlib/gzheader'),
            H = Object.prototype.toString;
          J.prototype.push = function (g, q) {
            var r,
              F,
              y,
              E,
              J,
              N = this.strm,
              Q = this.options.chunkSize,
              Ea = this.options.dictionary,
              ka = !1;
            if (this.ended) return !1;
            q = q === ~~q ? q : !0 === q ? l.Z_FINISH : l.Z_NO_FLUSH;
            'string' == typeof g
              ? (N.input = da.binstring2buf(g))
              : '[object ArrayBuffer]' === H.call(g)
                ? (N.input = new Uint8Array(g))
                : (N.input = g);
            N.next_in = 0;
            N.avail_in = N.input.length;
            do {
              if (
                (0 === N.avail_out &&
                  ((N.output = new u.Buf8(Q)),
                  (N.next_out = 0),
                  (N.avail_out = Q)),
                (r = Z.inflate(N, l.Z_NO_FLUSH)),
                r === l.Z_NEED_DICT &&
                  Ea &&
                  ((J =
                    'string' == typeof Ea
                      ? da.string2buf(Ea)
                      : '[object ArrayBuffer]' === H.call(Ea)
                        ? new Uint8Array(Ea)
                        : Ea),
                  (r = Z.inflateSetDictionary(this.strm, J))),
                r === l.Z_BUF_ERROR && !0 === ka && ((r = l.Z_OK), (ka = !1)),
                r !== l.Z_STREAM_END && r !== l.Z_OK)
              )
                return (this.onEnd(r), (this.ended = !0), !1);
              N.next_out &&
                ((0 !== N.avail_out &&
                  r !== l.Z_STREAM_END &&
                  (0 !== N.avail_in ||
                    (q !== l.Z_FINISH && q !== l.Z_SYNC_FLUSH))) ||
                  ('string' === this.options.to
                    ? ((F = da.utf8border(N.output, N.next_out)),
                      (y = N.next_out - F),
                      (E = da.buf2string(N.output, F)),
                      (N.next_out = y),
                      (N.avail_out = Q - y),
                      y && u.arraySet(N.output, N.output, F, y, 0),
                      this.onData(E))
                    : this.onData(u.shrinkBuf(N.output, N.next_out))));
              0 === N.avail_in && 0 === N.avail_out && (ka = !0);
            } while (
              (0 < N.avail_in || 0 === N.avail_out) &&
              r !== l.Z_STREAM_END
            );
            return (
              r === l.Z_STREAM_END && (q = l.Z_FINISH),
              q === l.Z_FINISH
                ? ((r = Z.inflateEnd(this.strm)),
                  this.onEnd(r),
                  (this.ended = !0),
                  r === l.Z_OK)
                : q !== l.Z_SYNC_FLUSH ||
                  (this.onEnd(l.Z_OK), (N.avail_out = 0), !0)
            );
          };
          J.prototype.onData = function (g) {
            this.chunks.push(g);
          };
          J.prototype.onEnd = function (g) {
            g === l.Z_OK &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = u.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = g;
            this.msg = this.strm.msg;
          };
          E.Inflate = J;
          E.inflate = Q;
          E.inflateRaw = function (g, l) {
            return ((l = l || {}), (l.raw = !0), Q(g, l));
          };
          E.ungzip = Q;
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/constants': 6,
          './zlib/gzheader': 9,
          './zlib/inflate': 11,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      3: [
        function (r, y, E) {
          r =
            'undefined' != typeof Uint8Array &&
            'undefined' != typeof Uint16Array &&
            'undefined' != typeof Int32Array;
          E.assign = function (r) {
            for (var u = Array.prototype.slice.call(arguments, 1); u.length; ) {
              var y = u.shift();
              if (y) {
                if ('object' != typeof y)
                  throw new TypeError(y + 'must be non-object');
                for (var l in y) y.hasOwnProperty(l) && (r[l] = y[l]);
              }
            }
            return r;
          };
          E.shrinkBuf = function (r, u) {
            return r.length === u
              ? r
              : r.subarray
                ? r.subarray(0, u)
                : ((r.length = u), r);
          };
          var J = {
              arraySet: function (r, u, y, l, g) {
                if (u.subarray && r.subarray)
                  return void r.set(u.subarray(y, y + l), g);
                for (var q = 0; q < l; q++) r[g + q] = u[y + q];
              },
              flattenChunks: function (r) {
                var u, y;
                var l = (y = 0);
                for (u = r.length; l < u; l++) y += r[l].length;
                var g = new Uint8Array(y);
                l = y = 0;
                for (u = r.length; l < u; l++) {
                  var q = r[l];
                  g.set(q, y);
                  y += q.length;
                }
                return g;
              },
            },
            Q = {
              arraySet: function (r, u, y, l, g) {
                for (var q = 0; q < l; q++) r[g + q] = u[y + q];
              },
              flattenChunks: function (r) {
                return [].concat.apply([], r);
              },
            };
          E.setTyped = function (r) {
            r
              ? ((E.Buf8 = Uint8Array),
                (E.Buf16 = Uint16Array),
                (E.Buf32 = Int32Array),
                E.assign(E, J))
              : ((E.Buf8 = Array),
                (E.Buf16 = Array),
                (E.Buf32 = Array),
                E.assign(E, Q));
          };
          E.setTyped(r);
        },
        {},
      ],
      4: [
        function (r, y, E) {
          function J(l, g) {
            if (65537 > g && ((l.subarray && u) || (!l.subarray && Z)))
              return String.fromCharCode.apply(null, Q.shrinkBuf(l, g));
            for (var q = '', r = 0; r < g; r++) q += String.fromCharCode(l[r]);
            return q;
          }
          var Q = r('./common'),
            Z = !0,
            u = !0;
          try {
            String.fromCharCode.apply(null, [0]);
          } catch (l) {
            Z = !1;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (l) {
            u = !1;
          }
          var da = new Q.Buf8(256);
          for (r = 0; 256 > r; r++)
            da[r] =
              252 <= r
                ? 6
                : 248 <= r
                  ? 5
                  : 240 <= r
                    ? 4
                    : 224 <= r
                      ? 3
                      : 192 <= r
                        ? 2
                        : 1;
          da[254] = da[254] = 1;
          E.string2buf = function (l) {
            var g,
              q,
              r,
              u = l.length,
              y = 0;
            for (q = 0; q < u; q++) {
              var E = l.charCodeAt(q);
              55296 === (64512 & E) &&
                q + 1 < u &&
                ((g = l.charCodeAt(q + 1)),
                56320 === (64512 & g) &&
                  ((E = 65536 + ((E - 55296) << 10) + (g - 56320)), q++));
              y += 128 > E ? 1 : 2048 > E ? 2 : 65536 > E ? 3 : 4;
            }
            var J = new Q.Buf8(y);
            for (q = r = 0; r < y; q++)
              ((E = l.charCodeAt(q)),
                55296 === (64512 & E) &&
                  q + 1 < u &&
                  ((g = l.charCodeAt(q + 1)),
                  56320 === (64512 & g) &&
                    ((E = 65536 + ((E - 55296) << 10) + (g - 56320)), q++)),
                128 > E
                  ? (J[r++] = E)
                  : 2048 > E
                    ? ((J[r++] = 192 | (E >>> 6)), (J[r++] = 128 | (63 & E)))
                    : 65536 > E
                      ? ((J[r++] = 224 | (E >>> 12)),
                        (J[r++] = 128 | ((E >>> 6) & 63)),
                        (J[r++] = 128 | (63 & E)))
                      : ((J[r++] = 240 | (E >>> 18)),
                        (J[r++] = 128 | ((E >>> 12) & 63)),
                        (J[r++] = 128 | ((E >>> 6) & 63)),
                        (J[r++] = 128 | (63 & E))));
            return J;
          };
          E.buf2binstring = function (l) {
            return J(l, l.length);
          };
          E.binstring2buf = function (l) {
            for (var g = new Q.Buf8(l.length), q = 0, r = g.length; q < r; q++)
              g[q] = l.charCodeAt(q);
            return g;
          };
          E.buf2string = function (l, g) {
            var q,
              r,
              u,
              y = g || l.length,
              E = Array(2 * y);
            for (g = q = 0; g < y; )
              if (((r = l[g++]), 128 > r)) E[q++] = r;
              else if (((u = da[r]), 4 < u)) ((E[q++] = 65533), (g += u - 1));
              else {
                for (r &= 2 === u ? 31 : 3 === u ? 15 : 7; 1 < u && g < y; )
                  ((r = (r << 6) | (63 & l[g++])), u--);
                1 < u
                  ? (E[q++] = 65533)
                  : 65536 > r
                    ? (E[q++] = r)
                    : ((r -= 65536),
                      (E[q++] = 55296 | ((r >> 10) & 1023)),
                      (E[q++] = 56320 | (1023 & r)));
              }
            return J(E, q);
          };
          E.utf8border = function (l, g) {
            var q;
            g = g || l.length;
            g > l.length && (g = l.length);
            for (q = g - 1; 0 <= q && 128 === (192 & l[q]); ) q--;
            return 0 > q ? g : 0 === q ? g : q + da[l[q]] > g ? q : g;
          };
        },
        { './common': 3 },
      ],
      5: [
        function (r, y, E) {
          y.exports = function (r, y, E, u) {
            var J = (65535 & r) | 0;
            r = ((r >>> 16) & 65535) | 0;
            for (var l; 0 !== E; ) {
              l = 2e3 < E ? 2e3 : E;
              E -= l;
              do ((J = (J + y[u++]) | 0), (r = (r + J) | 0));
              while (--l);
              J %= 65521;
              r %= 65521;
            }
            return J | (r << 16) | 0;
          };
        },
        {},
      ],
      6: [
        function (r, y, E) {
          y.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        },
        {},
      ],
      7: [
        function (r, y, E) {
          var J = (function () {
            for (var r, y = [], u = 0; 256 > u; u++) {
              r = u;
              for (var E = 0; 8 > E; E++)
                r = 1 & r ? 3988292384 ^ (r >>> 1) : r >>> 1;
              y[u] = r;
            }
            return y;
          })();
          y.exports = function (r, y, u, E) {
            u = E + u;
            for (r ^= -1; E < u; E++) r = (r >>> 8) ^ J[255 & (r ^ y[E])];
            return r ^ -1;
          };
        },
        {},
      ],
      8: [
        function (r, y, E) {
          function J(g, l) {
            return ((g.msg = pb[l]), l);
          }
          function Q(g) {
            for (var l = g.length; 0 <= --l; ) g[l] = 0;
          }
          function Z(g) {
            var l = g.state,
              q = l.pending;
            q > g.avail_out && (q = g.avail_out);
            0 !== q &&
              (eb.arraySet(
                g.output,
                l.pending_buf,
                l.pending_out,
                q,
                g.next_out,
              ),
              (g.next_out += q),
              (l.pending_out += q),
              (g.total_out += q),
              (g.avail_out -= q),
              (l.pending -= q),
              0 === l.pending && (l.pending_out = 0));
          }
          function u(g, l) {
            ma._tr_flush_block(
              g,
              0 <= g.block_start ? g.block_start : -1,
              g.strstart - g.block_start,
              l,
            );
            g.block_start = g.strstart;
            Z(g.strm);
          }
          function da(g, l) {
            g.pending_buf[g.pending++] = l;
          }
          function l(g, l) {
            g.pending_buf[g.pending++] = (l >>> 8) & 255;
            g.pending_buf[g.pending++] = 255 & l;
          }
          function g(g, l) {
            var q,
              z,
              r = g.max_chain_length,
              u = g.strstart,
              C = g.prev_length,
              F = g.nice_match,
              H = g.strstart > g.w_size - Ga ? g.strstart - (g.w_size - Ga) : 0,
              y = g.window,
              I = g.w_mask,
              E = g.prev,
              M = g.strstart + Fa,
              ka = y[u + C - 1],
              J = y[u + C];
            g.prev_length >= g.good_match && (r >>= 2);
            F > g.lookahead && (F = g.lookahead);
            do
              if (
                ((q = l),
                y[q + C] === J &&
                  y[q + C - 1] === ka &&
                  y[q] === y[u] &&
                  y[++q] === y[u + 1])
              ) {
                u += 2;
                for (
                  q++;
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  y[++u] === y[++q] &&
                  u < M;

                );
                if (((z = Fa - (M - u)), (u = M - Fa), z > C)) {
                  if (((g.match_start = l), (C = z), z >= F)) break;
                  ka = y[u + C - 1];
                  J = y[u + C];
                }
              }
            while ((l = E[l & I]) > H && 0 !== --r);
            return C <= g.lookahead ? C : g.lookahead;
          }
          function q(g) {
            var l,
              q,
              w = g.w_size;
            do {
              if (
                ((q = g.window_size - g.lookahead - g.strstart),
                g.strstart >= w + (w - Ga))
              ) {
                eb.arraySet(g.window, g.window, w, w, 0);
                g.match_start -= w;
                g.strstart -= w;
                g.block_start -= w;
                var z = (l = g.hash_size);
                do {
                  var r = g.head[--z];
                  g.head[z] = r >= w ? r - w : 0;
                } while (--l);
                z = l = w;
                do ((r = g.prev[--z]), (g.prev[z] = r >= w ? r - w : 0));
                while (--l);
                q += w;
              }
              if (0 === g.strm.avail_in) break;
              z = g.strm;
              r = g.window;
              var u = g.strstart + g.lookahead,
                C = z.avail_in;
              if (
                ((l =
                  (C > q && (C = q),
                  0 === C
                    ? 0
                    : ((z.avail_in -= C),
                      eb.arraySet(r, z.input, z.next_in, C, u),
                      1 === z.state.wrap
                        ? (z.adler = $a(z.adler, r, C, u))
                        : 2 === z.state.wrap && (z.adler = X(z.adler, r, C, u)),
                      (z.next_in += C),
                      (z.total_in += C),
                      C))),
                (g.lookahead += l),
                g.lookahead + g.insert >= Oa)
              )
                for (
                  q = g.strstart - g.insert,
                    g.ins_h = g.window[q],
                    g.ins_h =
                      ((g.ins_h << g.hash_shift) ^ g.window[q + 1]) &
                      g.hash_mask;
                  g.insert &&
                  ((g.ins_h =
                    ((g.ins_h << g.hash_shift) ^ g.window[q + Oa - 1]) &
                    g.hash_mask),
                  (g.prev[q & g.w_mask] = g.head[g.ins_h]),
                  (g.head[g.ins_h] = q),
                  q++,
                  g.insert--,
                  !(g.lookahead + g.insert < Oa));

                );
            } while (g.lookahead < Ga && 0 !== g.strm.avail_in);
          }
          function F(l, r) {
            for (var D, w; ; ) {
              if (l.lookahead < Ga) {
                if ((q(l), l.lookahead < Ga && r === ka)) return U;
                if (0 === l.lookahead) break;
              }
              if (
                ((D = 0),
                l.lookahead >= Oa &&
                  ((l.ins_h =
                    ((l.ins_h << l.hash_shift) ^
                      l.window[l.strstart + Oa - 1]) &
                    l.hash_mask),
                  (D = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                  (l.head[l.ins_h] = l.strstart)),
                0 !== D &&
                  l.strstart - D <= l.w_size - Ga &&
                  (l.match_length = g(l, D)),
                l.match_length >= Oa)
              )
                if (
                  ((w = ma._tr_tally(
                    l,
                    l.strstart - l.match_start,
                    l.match_length - Oa,
                  )),
                  (l.lookahead -= l.match_length),
                  l.match_length <= l.max_lazy_match && l.lookahead >= Oa)
                ) {
                  l.match_length--;
                  do
                    (l.strstart++,
                      (l.ins_h =
                        ((l.ins_h << l.hash_shift) ^
                          l.window[l.strstart + Oa - 1]) &
                        l.hash_mask),
                      (D = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                      (l.head[l.ins_h] = l.strstart));
                  while (0 !== --l.match_length);
                  l.strstart++;
                } else
                  ((l.strstart += l.match_length),
                    (l.match_length = 0),
                    (l.ins_h = l.window[l.strstart]),
                    (l.ins_h =
                      ((l.ins_h << l.hash_shift) ^ l.window[l.strstart + 1]) &
                      l.hash_mask));
              else
                ((w = ma._tr_tally(l, 0, l.window[l.strstart])),
                  l.lookahead--,
                  l.strstart++);
              if (w && (u(l, !1), 0 === l.strm.avail_out)) return U;
            }
            return (
              (l.insert = l.strstart < Oa - 1 ? l.strstart : Oa - 1),
              r === na
                ? (u(l, !0), 0 === l.strm.avail_out ? ya : I)
                : l.last_lit && (u(l, !1), 0 === l.strm.avail_out)
                  ? U
                  : Mc
            );
          }
          function H(l, r) {
            for (var D, w, z; ; ) {
              if (l.lookahead < Ga) {
                if ((q(l), l.lookahead < Ga && r === ka)) return U;
                if (0 === l.lookahead) break;
              }
              if (
                ((D = 0),
                l.lookahead >= Oa &&
                  ((l.ins_h =
                    ((l.ins_h << l.hash_shift) ^
                      l.window[l.strstart + Oa - 1]) &
                    l.hash_mask),
                  (D = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                  (l.head[l.ins_h] = l.strstart)),
                (l.prev_length = l.match_length),
                (l.prev_match = l.match_start),
                (l.match_length = Oa - 1),
                0 !== D &&
                  l.prev_length < l.max_lazy_match &&
                  l.strstart - D <= l.w_size - Ga &&
                  ((l.match_length = g(l, D)),
                  5 >= l.match_length &&
                    (l.strategy === hb ||
                      (l.match_length === Oa &&
                        4096 < l.strstart - l.match_start)) &&
                    (l.match_length = Oa - 1)),
                l.prev_length >= Oa && l.match_length <= l.prev_length)
              ) {
                z = l.strstart + l.lookahead - Oa;
                w = ma._tr_tally(
                  l,
                  l.strstart - 1 - l.prev_match,
                  l.prev_length - Oa,
                );
                l.lookahead -= l.prev_length - 1;
                l.prev_length -= 2;
                do
                  ++l.strstart <= z &&
                    ((l.ins_h =
                      ((l.ins_h << l.hash_shift) ^
                        l.window[l.strstart + Oa - 1]) &
                      l.hash_mask),
                    (D = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                    (l.head[l.ins_h] = l.strstart));
                while (0 !== --l.prev_length);
                if (
                  ((l.match_available = 0),
                  (l.match_length = Oa - 1),
                  l.strstart++,
                  w && (u(l, !1), 0 === l.strm.avail_out))
                )
                  return U;
              } else if (l.match_available) {
                if (
                  ((w = ma._tr_tally(l, 0, l.window[l.strstart - 1])),
                  w && u(l, !1),
                  l.strstart++,
                  l.lookahead--,
                  0 === l.strm.avail_out)
                )
                  return U;
              } else ((l.match_available = 1), l.strstart++, l.lookahead--);
            }
            return (
              l.match_available &&
                (ma._tr_tally(l, 0, l.window[l.strstart - 1]),
                (l.match_available = 0)),
              (l.insert = l.strstart < Oa - 1 ? l.strstart : Oa - 1),
              r === na
                ? (u(l, !0), 0 === l.strm.avail_out ? ya : I)
                : l.last_lit && (u(l, !1), 0 === l.strm.avail_out)
                  ? U
                  : Mc
            );
          }
          function Ea(g, l, q, w, r) {
            this.good_length = g;
            this.max_lazy = l;
            this.nice_length = q;
            this.max_chain = w;
            this.func = r;
          }
          function N() {
            this.strm = null;
            this.status = 0;
            this.pending_buf = null;
            this.wrap =
              this.pending =
              this.pending_out =
              this.pending_buf_size =
                0;
            this.gzhead = null;
            this.gzindex = 0;
            this.method = rc;
            this.last_flush = -1;
            this.w_mask = this.w_bits = this.w_size = 0;
            this.window = null;
            this.window_size = 0;
            this.head = this.prev = null;
            this.nice_match =
              this.good_match =
              this.strategy =
              this.level =
              this.max_lazy_match =
              this.max_chain_length =
              this.prev_length =
              this.lookahead =
              this.match_start =
              this.strstart =
              this.match_available =
              this.prev_match =
              this.match_length =
              this.block_start =
              this.hash_shift =
              this.hash_mask =
              this.hash_bits =
              this.hash_size =
              this.ins_h =
                0;
            this.dyn_ltree = new eb.Buf16(2 * jb);
            this.dyn_dtree = new eb.Buf16(2 * (2 * O + 1));
            this.bl_tree = new eb.Buf16(2 * (2 * C + 1));
            Q(this.dyn_ltree);
            Q(this.dyn_dtree);
            Q(this.bl_tree);
            this.bl_desc = this.d_desc = this.l_desc = null;
            this.bl_count = new eb.Buf16(bb + 1);
            this.heap = new eb.Buf16(2 * xa + 1);
            Q(this.heap);
            this.heap_max = this.heap_len = 0;
            this.depth = new eb.Buf16(2 * xa + 1);
            Q(this.depth);
            this.bi_valid =
              this.bi_buf =
              this.insert =
              this.matches =
              this.static_len =
              this.opt_len =
              this.d_buf =
              this.last_lit =
              this.lit_bufsize =
              this.l_buf =
                0;
          }
          function Ab(g) {
            var l;
            return g && g.state
              ? ((g.total_in = g.total_out = 0),
                (g.data_type = gb),
                (l = g.state),
                (l.pending = 0),
                (l.pending_out = 0),
                0 > l.wrap && (l.wrap = -l.wrap),
                (l.status = l.wrap ? ea : aa),
                (g.adler = 2 === l.wrap ? 0 : 1),
                (l.last_flush = ka),
                ma._tr_init(l),
                Ya)
              : J(g, S);
          }
          function Bb(g) {
            var l = Ab(g);
            l === Ya &&
              ((g = g.state),
              (g.window_size = 2 * g.w_size),
              Q(g.head),
              (g.max_lazy_match = qb[g.level].max_lazy),
              (g.good_match = qb[g.level].good_length),
              (g.nice_match = qb[g.level].nice_length),
              (g.max_chain_length = qb[g.level].max_chain),
              (g.strstart = 0),
              (g.block_start = 0),
              (g.lookahead = 0),
              (g.insert = 0),
              (g.match_length = g.prev_length = Oa - 1),
              (g.match_available = 0),
              (g.ins_h = 0));
            return l;
          }
          function cc(g, l, q, w, r, u) {
            if (!g) return S;
            var D = 1;
            if (
              (l === sa && (l = 6),
              0 > w ? ((D = 0), (w = -w)) : 15 < w && ((D = 2), (w -= 16)),
              1 > r ||
                r > Gb ||
                q !== rc ||
                8 > w ||
                15 < w ||
                0 > l ||
                9 < l ||
                0 > u ||
                u > fa)
            )
              return J(g, S);
            8 === w && (w = 9);
            var z = new N();
            return (
              (g.state = z),
              (z.strm = g),
              (z.wrap = D),
              (z.gzhead = null),
              (z.w_bits = w),
              (z.w_size = 1 << z.w_bits),
              (z.w_mask = z.w_size - 1),
              (z.hash_bits = r + 7),
              (z.hash_size = 1 << z.hash_bits),
              (z.hash_mask = z.hash_size - 1),
              (z.hash_shift = ~~((z.hash_bits + Oa - 1) / Oa)),
              (z.window = new eb.Buf8(2 * z.w_size)),
              (z.head = new eb.Buf16(z.hash_size)),
              (z.prev = new eb.Buf16(z.w_size)),
              (z.lit_bufsize = 1 << (r + 6)),
              (z.pending_buf_size = 4 * z.lit_bufsize),
              (z.pending_buf = new eb.Buf8(z.pending_buf_size)),
              (z.d_buf = 1 * z.lit_bufsize),
              (z.l_buf = 3 * z.lit_bufsize),
              (z.level = l),
              (z.strategy = u),
              (z.method = q),
              Bb(g)
            );
          }
          var eb = r('../utils/common'),
            ma = r('./trees'),
            $a = r('./adler32'),
            X = r('./crc32'),
            pb = r('./messages'),
            ka = 0,
            na = 4,
            Ya = 0,
            S = -2,
            sa = -1,
            hb = 1,
            fa = 4,
            gb = 2,
            rc = 8,
            Gb = 9,
            xa = 286,
            O = 30,
            C = 19,
            jb = 2 * xa + 1,
            bb = 15,
            Oa = 3,
            Fa = 258,
            Ga = Fa + Oa + 1,
            ea = 42,
            aa = 113,
            U = 1,
            Mc = 2,
            ya = 3,
            I = 4;
          var qb = [
            new Ea(0, 0, 0, 0, function (g, l) {
              var r = 65535;
              for (
                r > g.pending_buf_size - 5 && (r = g.pending_buf_size - 5);
                ;

              ) {
                if (1 >= g.lookahead) {
                  if ((q(g), 0 === g.lookahead && l === ka)) return U;
                  if (0 === g.lookahead) break;
                }
                g.strstart += g.lookahead;
                g.lookahead = 0;
                var w = g.block_start + r;
                if (
                  ((0 === g.strstart || g.strstart >= w) &&
                    ((g.lookahead = g.strstart - w),
                    (g.strstart = w),
                    u(g, !1),
                    0 === g.strm.avail_out)) ||
                  (g.strstart - g.block_start >= g.w_size - Ga &&
                    (u(g, !1), 0 === g.strm.avail_out))
                )
                  return U;
              }
              return (
                (g.insert = 0),
                l === na
                  ? (u(g, !0), 0 === g.strm.avail_out ? ya : I)
                  : (g.strstart > g.block_start && u(g, !1), U)
              );
            }),
            new Ea(4, 4, 8, 4, F),
            new Ea(4, 5, 16, 8, F),
            new Ea(4, 6, 32, 32, F),
            new Ea(4, 4, 16, 16, H),
            new Ea(8, 16, 32, 32, H),
            new Ea(8, 16, 128, 128, H),
            new Ea(8, 32, 128, 256, H),
            new Ea(32, 128, 258, 1024, H),
            new Ea(32, 258, 258, 4096, H),
          ];
          E.deflateInit = function (g, l) {
            return cc(g, l, rc, 15, 8, 0);
          };
          E.deflateInit2 = cc;
          E.deflateReset = Bb;
          E.deflateResetKeep = Ab;
          E.deflateSetHeader = function (g, l) {
            return g && g.state
              ? 2 !== g.state.wrap
                ? S
                : ((g.state.gzhead = l), Ya)
              : S;
          };
          E.deflate = function (g, r) {
            var D, w;
            if (!g || !g.state || 5 < r || 0 > r) return g ? J(g, S) : S;
            if (
              ((w = g.state),
              !g.output ||
                (!g.input && 0 !== g.avail_in) ||
                (666 === w.status && r !== na))
            )
              return J(g, 0 === g.avail_out ? -5 : S);
            if (
              ((w.strm = g),
              (D = w.last_flush),
              (w.last_flush = r),
              w.status === ea)
            )
              if (2 === w.wrap)
                ((g.adler = 0),
                  da(w, 31),
                  da(w, 139),
                  da(w, 8),
                  w.gzhead
                    ? (da(
                        w,
                        (w.gzhead.text ? 1 : 0) +
                          (w.gzhead.hcrc ? 2 : 0) +
                          (w.gzhead.extra ? 4 : 0) +
                          (w.gzhead.name ? 8 : 0) +
                          (w.gzhead.comment ? 16 : 0),
                      ),
                      da(w, 255 & w.gzhead.time),
                      da(w, (w.gzhead.time >> 8) & 255),
                      da(w, (w.gzhead.time >> 16) & 255),
                      da(w, (w.gzhead.time >> 24) & 255),
                      da(
                        w,
                        9 === w.level
                          ? 2
                          : 2 <= w.strategy || 2 > w.level
                            ? 4
                            : 0,
                      ),
                      da(w, 255 & w.gzhead.os),
                      w.gzhead.extra &&
                        w.gzhead.extra.length &&
                        (da(w, 255 & w.gzhead.extra.length),
                        da(w, (w.gzhead.extra.length >> 8) & 255)),
                      w.gzhead.hcrc &&
                        (g.adler = X(g.adler, w.pending_buf, w.pending, 0)),
                      (w.gzindex = 0),
                      (w.status = 69))
                    : (da(w, 0),
                      da(w, 0),
                      da(w, 0),
                      da(w, 0),
                      da(w, 0),
                      da(
                        w,
                        9 === w.level
                          ? 2
                          : 2 <= w.strategy || 2 > w.level
                            ? 4
                            : 0,
                      ),
                      da(w, 3),
                      (w.status = aa)));
              else {
                var z = (rc + ((w.w_bits - 8) << 4)) << 8;
                z |=
                  (2 <= w.strategy || 2 > w.level
                    ? 0
                    : 6 > w.level
                      ? 1
                      : 6 === w.level
                        ? 2
                        : 3) << 6;
                0 !== w.strstart && (z |= 32);
                w.status = aa;
                l(w, z + (31 - (z % 31)));
                0 !== w.strstart &&
                  (l(w, g.adler >>> 16), l(w, 65535 & g.adler));
                g.adler = 1;
              }
            if (69 === w.status)
              if (w.gzhead.extra) {
                for (
                  z = w.pending;
                  w.gzindex < (65535 & w.gzhead.extra.length) &&
                  (w.pending !== w.pending_buf_size ||
                    (w.gzhead.hcrc &&
                      w.pending > z &&
                      (g.adler = X(g.adler, w.pending_buf, w.pending - z, z)),
                    Z(g),
                    (z = w.pending),
                    w.pending !== w.pending_buf_size));

                )
                  (da(w, 255 & w.gzhead.extra[w.gzindex]), w.gzindex++);
                w.gzhead.hcrc &&
                  w.pending > z &&
                  (g.adler = X(g.adler, w.pending_buf, w.pending - z, z));
                w.gzindex === w.gzhead.extra.length &&
                  ((w.gzindex = 0), (w.status = 73));
              } else w.status = 73;
            if (73 === w.status)
              if (w.gzhead.name) {
                z = w.pending;
                do {
                  if (
                    w.pending === w.pending_buf_size &&
                    (w.gzhead.hcrc &&
                      w.pending > z &&
                      (g.adler = X(g.adler, w.pending_buf, w.pending - z, z)),
                    Z(g),
                    (z = w.pending),
                    w.pending === w.pending_buf_size)
                  ) {
                    var C = 1;
                    break;
                  }
                  C =
                    w.gzindex < w.gzhead.name.length
                      ? 255 & w.gzhead.name.charCodeAt(w.gzindex++)
                      : 0;
                  da(w, C);
                } while (0 !== C);
                w.gzhead.hcrc &&
                  w.pending > z &&
                  (g.adler = X(g.adler, w.pending_buf, w.pending - z, z));
                0 === C && ((w.gzindex = 0), (w.status = 91));
              } else w.status = 91;
            if (91 === w.status)
              if (w.gzhead.comment) {
                z = w.pending;
                do {
                  if (
                    w.pending === w.pending_buf_size &&
                    (w.gzhead.hcrc &&
                      w.pending > z &&
                      (g.adler = X(g.adler, w.pending_buf, w.pending - z, z)),
                    Z(g),
                    (z = w.pending),
                    w.pending === w.pending_buf_size)
                  ) {
                    C = 1;
                    break;
                  }
                  C =
                    w.gzindex < w.gzhead.comment.length
                      ? 255 & w.gzhead.comment.charCodeAt(w.gzindex++)
                      : 0;
                  da(w, C);
                } while (0 !== C);
                w.gzhead.hcrc &&
                  w.pending > z &&
                  (g.adler = X(g.adler, w.pending_buf, w.pending - z, z));
                0 === C && (w.status = 103);
              } else w.status = 103;
            if (
              (103 === w.status &&
                (w.gzhead.hcrc
                  ? (w.pending + 2 > w.pending_buf_size && Z(g),
                    w.pending + 2 <= w.pending_buf_size &&
                      (da(w, 255 & g.adler),
                      da(w, (g.adler >> 8) & 255),
                      (g.adler = 0),
                      (w.status = aa)))
                  : (w.status = aa)),
              0 !== w.pending)
            ) {
              if ((Z(g), 0 === g.avail_out)) return ((w.last_flush = -1), Ya);
            } else if (
              0 === g.avail_in &&
              (r << 1) - (4 < r ? 9 : 0) <= (D << 1) - (4 < D ? 9 : 0) &&
              r !== na
            )
              return J(g, -5);
            if (666 === w.status && 0 !== g.avail_in) return J(g, -5);
            if (
              0 !== g.avail_in ||
              0 !== w.lookahead ||
              (r !== ka && 666 !== w.status)
            ) {
              if (2 === w.strategy)
                a: {
                  for (var y; ; ) {
                    if (0 === w.lookahead && (q(w), 0 === w.lookahead)) {
                      if (r === ka) {
                        var F = U;
                        break a;
                      }
                      break;
                    }
                    if (
                      ((w.match_length = 0),
                      (y = ma._tr_tally(w, 0, w.window[w.strstart])),
                      w.lookahead--,
                      w.strstart++,
                      y && (u(w, !1), 0 === w.strm.avail_out))
                    ) {
                      F = U;
                      break a;
                    }
                  }
                  F =
                    ((w.insert = 0),
                    r === na
                      ? (u(w, !0), 0 === w.strm.avail_out ? ya : I)
                      : w.last_lit && (u(w, !1), 0 === w.strm.avail_out)
                        ? U
                        : Mc);
                }
              else if (3 === w.strategy)
                a: {
                  var H, E;
                  for (y = w.window; ; ) {
                    if (w.lookahead <= Fa) {
                      if ((q(w), w.lookahead <= Fa && r === ka)) {
                        F = U;
                        break a;
                      }
                      if (0 === w.lookahead) break;
                    }
                    if (
                      ((w.match_length = 0),
                      w.lookahead >= Oa &&
                        0 < w.strstart &&
                        ((E = w.strstart - 1),
                        (H = y[E]),
                        H === y[++E] && H === y[++E] && H === y[++E]))
                    ) {
                      for (
                        D = w.strstart + Fa;
                        H === y[++E] &&
                        H === y[++E] &&
                        H === y[++E] &&
                        H === y[++E] &&
                        H === y[++E] &&
                        H === y[++E] &&
                        H === y[++E] &&
                        H === y[++E] &&
                        E < D;

                      );
                      w.match_length = Fa - (D - E);
                      w.match_length > w.lookahead &&
                        (w.match_length = w.lookahead);
                    }
                    if (
                      (w.match_length >= Oa
                        ? ((F = ma._tr_tally(w, 1, w.match_length - Oa)),
                          (w.lookahead -= w.match_length),
                          (w.strstart += w.match_length),
                          (w.match_length = 0))
                        : ((F = ma._tr_tally(w, 0, w.window[w.strstart])),
                          w.lookahead--,
                          w.strstart++),
                      F && (u(w, !1), 0 === w.strm.avail_out))
                    ) {
                      F = U;
                      break a;
                    }
                  }
                  F =
                    ((w.insert = 0),
                    r === na
                      ? (u(w, !0), 0 === w.strm.avail_out ? ya : I)
                      : w.last_lit && (u(w, !1), 0 === w.strm.avail_out)
                        ? U
                        : Mc);
                }
              else F = qb[w.level].func(w, r);
              if (
                ((F !== ya && F !== I) || (w.status = 666), F === U || F === ya)
              )
                return (0 === g.avail_out && (w.last_flush = -1), Ya);
              if (
                F === Mc &&
                (1 === r
                  ? ma._tr_align(w)
                  : 5 !== r &&
                    (ma._tr_stored_block(w, 0, 0, !1),
                    3 === r &&
                      (Q(w.head),
                      0 === w.lookahead &&
                        ((w.strstart = 0),
                        (w.block_start = 0),
                        (w.insert = 0)))),
                Z(g),
                0 === g.avail_out)
              )
                return ((w.last_flush = -1), Ya);
            }
            return r !== na
              ? Ya
              : 0 >= w.wrap
                ? 1
                : (2 === w.wrap
                    ? (da(w, 255 & g.adler),
                      da(w, (g.adler >> 8) & 255),
                      da(w, (g.adler >> 16) & 255),
                      da(w, (g.adler >> 24) & 255),
                      da(w, 255 & g.total_in),
                      da(w, (g.total_in >> 8) & 255),
                      da(w, (g.total_in >> 16) & 255),
                      da(w, (g.total_in >> 24) & 255))
                    : (l(w, g.adler >>> 16), l(w, 65535 & g.adler)),
                  Z(g),
                  0 < w.wrap && (w.wrap = -w.wrap),
                  0 !== w.pending ? Ya : 1);
          };
          E.deflateEnd = function (g) {
            var l;
            return g && g.state
              ? ((l = g.state.status),
                l !== ea &&
                69 !== l &&
                73 !== l &&
                91 !== l &&
                103 !== l &&
                l !== aa &&
                666 !== l
                  ? J(g, S)
                  : ((g.state = null), l === aa ? J(g, -3) : Ya))
              : S;
          };
          E.deflateSetDictionary = function (g, l) {
            var r, w, u;
            var z = l.length;
            if (
              !g ||
              !g.state ||
              ((r = g.state),
              (w = r.wrap),
              2 === w || (1 === w && r.status !== ea) || r.lookahead)
            )
              return S;
            1 === w && (g.adler = $a(g.adler, l, z, 0));
            r.wrap = 0;
            z >= r.w_size &&
              (0 === w &&
                (Q(r.head),
                (r.strstart = 0),
                (r.block_start = 0),
                (r.insert = 0)),
              (u = new eb.Buf8(r.w_size)),
              eb.arraySet(u, l, z - r.w_size, r.w_size, 0),
              (l = u),
              (z = r.w_size));
            u = g.avail_in;
            var C = g.next_in;
            var y = g.input;
            g.avail_in = z;
            g.next_in = 0;
            g.input = l;
            for (q(r); r.lookahead >= Oa; ) {
              l = r.strstart;
              z = r.lookahead - (Oa - 1);
              do
                ((r.ins_h =
                  ((r.ins_h << r.hash_shift) ^ r.window[l + Oa - 1]) &
                  r.hash_mask),
                  (r.prev[l & r.w_mask] = r.head[r.ins_h]),
                  (r.head[r.ins_h] = l),
                  l++);
              while (--z);
              r.strstart = l;
              r.lookahead = Oa - 1;
              q(r);
            }
            return (
              (r.strstart += r.lookahead),
              (r.block_start = r.strstart),
              (r.insert = r.lookahead),
              (r.lookahead = 0),
              (r.match_length = r.prev_length = Oa - 1),
              (r.match_available = 0),
              (g.next_in = C),
              (g.input = y),
              (g.avail_in = u),
              (r.wrap = w),
              Ya
            );
          };
          E.deflateInfo = 'pako deflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './messages': 13,
          './trees': 14,
        },
      ],
      9: [
        function (r, y, E) {
          y.exports = function () {
            this.os = this.xflags = this.time = this.text = 0;
            this.extra = null;
            this.extra_len = 0;
            this.comment = this.name = '';
            this.hcrc = 0;
            this.done = !1;
          };
        },
        {},
      ],
      10: [
        function (r, y, E) {
          y.exports = function (r, y) {
            var E, u, J;
            var l = r.state;
            var g = r.next_in;
            var q = r.input;
            var F = g + (r.avail_in - 5);
            var H = r.next_out;
            var Q = r.output;
            y = H - (y - r.avail_out);
            var N = H + (r.avail_out - 257);
            var Ab = l.dmax;
            var Bb = l.wsize;
            var cc = l.whave;
            var eb = l.wnext;
            var ma = l.window;
            var $a = l.hold;
            var X = l.bits;
            var pb = l.lencode;
            var ka = l.distcode;
            var na = (1 << l.lenbits) - 1;
            var Ya = (1 << l.distbits) - 1;
            a: do {
              15 > X &&
                (($a += q[g++] << X), (X += 8), ($a += q[g++] << X), (X += 8));
              var S = pb[$a & na];
              b: for (;;) {
                if (
                  ((E = S >>> 24),
                  ($a >>>= E),
                  (X -= E),
                  (E = (S >>> 16) & 255),
                  0 === E)
                )
                  Q[H++] = 65535 & S;
                else {
                  if (!(16 & E)) {
                    if (0 === (64 & E)) {
                      S = pb[(65535 & S) + ($a & ((1 << E) - 1))];
                      continue b;
                    }
                    if (32 & E) {
                      l.mode = 12;
                      break a;
                    }
                    r.msg = 'invalid literal/length code';
                    l.mode = 30;
                    break a;
                  }
                  var sa = 65535 & S;
                  (E &= 15) &&
                    (X < E && (($a += q[g++] << X), (X += 8)),
                    (sa += $a & ((1 << E) - 1)),
                    ($a >>>= E),
                    (X -= E));
                  15 > X &&
                    (($a += q[g++] << X),
                    (X += 8),
                    ($a += q[g++] << X),
                    (X += 8));
                  S = ka[$a & Ya];
                  c: for (;;) {
                    if (
                      ((E = S >>> 24),
                      ($a >>>= E),
                      (X -= E),
                      (E = (S >>> 16) & 255),
                      !(16 & E))
                    ) {
                      if (0 === (64 & E)) {
                        S = ka[(65535 & S) + ($a & ((1 << E) - 1))];
                        continue c;
                      }
                      r.msg = 'invalid distance code';
                      l.mode = 30;
                      break a;
                    }
                    if (
                      ((u = 65535 & S),
                      (E &= 15),
                      X < E &&
                        (($a += q[g++] << X),
                        (X += 8),
                        X < E && (($a += q[g++] << X), (X += 8))),
                      (u += $a & ((1 << E) - 1)),
                      u > Ab)
                    ) {
                      r.msg = 'invalid distance too far back';
                      l.mode = 30;
                      break a;
                    }
                    if ((($a >>>= E), (X -= E), (E = H - y), u > E)) {
                      if (((E = u - E), E > cc && l.sane)) {
                        r.msg = 'invalid distance too far back';
                        l.mode = 30;
                        break a;
                      }
                      if (((S = 0), (J = ma), 0 === eb)) {
                        if (((S += Bb - E), E < sa)) {
                          sa -= E;
                          do Q[H++] = ma[S++];
                          while (--E);
                          S = H - u;
                          J = Q;
                        }
                      } else if (eb < E) {
                        if (((S += Bb + eb - E), (E -= eb), E < sa)) {
                          sa -= E;
                          do Q[H++] = ma[S++];
                          while (--E);
                          if (((S = 0), eb < sa)) {
                            E = eb;
                            sa -= E;
                            do Q[H++] = ma[S++];
                            while (--E);
                            S = H - u;
                            J = Q;
                          }
                        }
                      } else if (((S += eb - E), E < sa)) {
                        sa -= E;
                        do Q[H++] = ma[S++];
                        while (--E);
                        S = H - u;
                        J = Q;
                      }
                      for (; 2 < sa; )
                        ((Q[H++] = J[S++]),
                          (Q[H++] = J[S++]),
                          (Q[H++] = J[S++]),
                          (sa -= 3));
                      sa && ((Q[H++] = J[S++]), 1 < sa && (Q[H++] = J[S++]));
                    } else {
                      S = H - u;
                      do
                        ((Q[H++] = Q[S++]),
                          (Q[H++] = Q[S++]),
                          (Q[H++] = Q[S++]),
                          (sa -= 3));
                      while (2 < sa);
                      sa && ((Q[H++] = Q[S++]), 1 < sa && (Q[H++] = Q[S++]));
                    }
                    break;
                  }
                }
                break;
              }
            } while (g < F && H < N);
            sa = X >> 3;
            g -= sa;
            X -= sa << 3;
            r.next_in = g;
            r.next_out = H;
            r.avail_in = g < F ? 5 + (F - g) : 5 - (g - F);
            r.avail_out = H < N ? 257 + (N - H) : 257 - (H - N);
            l.hold = $a & ((1 << X) - 1);
            l.bits = X;
          };
        },
        {},
      ],
      11: [
        function (r, y, E) {
          function J(g) {
            return (
              ((g >>> 24) & 255) +
              ((g >>> 8) & 65280) +
              ((65280 & g) << 8) +
              ((255 & g) << 24)
            );
          }
          function Q() {
            this.mode = 0;
            this.last = !1;
            this.wrap = 0;
            this.havedict = !1;
            this.total = this.check = this.dmax = this.flags = 0;
            this.head = null;
            this.wnext = this.whave = this.wsize = this.wbits = 0;
            this.window = null;
            this.extra = this.offset = this.length = this.bits = this.hold = 0;
            this.distcode = this.lencode = null;
            this.have =
              this.ndist =
              this.nlen =
              this.ncode =
              this.distbits =
              this.lenbits =
                0;
            this.next = null;
            this.lens = new H.Buf16(320);
            this.work = new H.Buf16(288);
            this.distdyn = this.lendyn = null;
            this.was = this.back = this.sane = 0;
          }
          function Z(g) {
            var l;
            return g && g.state
              ? ((l = g.state),
                (g.total_in = g.total_out = l.total = 0),
                (g.msg = ''),
                l.wrap && (g.adler = 1 & l.wrap),
                (l.mode = ma),
                (l.last = 0),
                (l.havedict = 0),
                (l.dmax = 32768),
                (l.head = null),
                (l.hold = 0),
                (l.bits = 0),
                (l.lencode = l.lendyn = new H.Buf32($a)),
                (l.distcode = l.distdyn = new H.Buf32(X)),
                (l.sane = 1),
                (l.back = -1),
                cc)
              : eb;
          }
          function u(g) {
            var l;
            return g && g.state
              ? ((l = g.state),
                (l.wsize = 0),
                (l.whave = 0),
                (l.wnext = 0),
                Z(g))
              : eb;
          }
          function da(g, l) {
            var q, r;
            return g && g.state
              ? ((r = g.state),
                0 > l
                  ? ((q = 0), (l = -l))
                  : ((q = (l >> 4) + 1), 48 > l && (l &= 15)),
                l && (8 > l || 15 < l)
                  ? eb
                  : (null !== r.window && r.wbits !== l && (r.window = null),
                    (r.wrap = q),
                    (r.wbits = l),
                    u(g)))
              : eb;
          }
          function l(g, l) {
            var q, r;
            return g
              ? ((r = new Q()),
                (g.state = r),
                (r.window = null),
                (q = da(g, l)),
                q !== cc && (g.state = null),
                q)
              : eb;
          }
          function g(g, l, q, r) {
            var u;
            g = g.state;
            return (
              null === g.window &&
                ((g.wsize = 1 << g.wbits),
                (g.wnext = 0),
                (g.whave = 0),
                (g.window = new H.Buf8(g.wsize))),
              r >= g.wsize
                ? (H.arraySet(g.window, l, q - g.wsize, g.wsize, 0),
                  (g.wnext = 0),
                  (g.whave = g.wsize))
                : ((u = g.wsize - g.wnext),
                  u > r && (u = r),
                  H.arraySet(g.window, l, q - r, u, g.wnext),
                  (r -= u),
                  r
                    ? (H.arraySet(g.window, l, q - r, r, 0),
                      (g.wnext = r),
                      (g.whave = g.wsize))
                    : ((g.wnext += u),
                      g.wnext === g.wsize && (g.wnext = 0),
                      g.whave < g.wsize && (g.whave += u))),
              0
            );
          }
          var q,
            F,
            H = r('../utils/common'),
            Ea = r('./adler32'),
            N = r('./crc32'),
            Ab = r('./inffast'),
            Bb = r('./inftrees'),
            cc = 0,
            eb = -2,
            ma = 1,
            $a = 852,
            X = 592,
            pb = !0;
          E.inflateReset = u;
          E.inflateReset2 = da;
          E.inflateResetKeep = Z;
          E.inflateInit = function (g) {
            return l(g, 15);
          };
          E.inflateInit2 = l;
          E.inflate = function (l, r) {
            var u,
              y,
              E,
              Q,
              ka,
              Z,
              da,
              na = 0,
              xa = new H.Buf8(4),
              O = [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];
            if (!l || !l.state || !l.output || (!l.input && 0 !== l.avail_in))
              return eb;
            var C = l.state;
            12 === C.mode && (C.mode = 13);
            var X = l.next_out;
            var bb = l.output;
            var Oa = l.avail_out;
            var Fa = l.next_in;
            var Ga = l.input;
            var ea = l.avail_in;
            var aa = C.hold;
            var U = C.bits;
            var $a = ea;
            var ya = Oa;
            var I = cc;
            a: for (;;)
              switch (C.mode) {
                case ma:
                  if (0 === C.wrap) {
                    C.mode = 13;
                    break;
                  }
                  for (; 16 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  if (2 & C.wrap && 35615 === aa) {
                    C.check = 0;
                    xa[0] = 255 & aa;
                    xa[1] = (aa >>> 8) & 255;
                    C.check = N(C.check, xa, 2, 0);
                    U = aa = 0;
                    C.mode = 2;
                    break;
                  }
                  if (
                    ((C.flags = 0),
                    C.head && (C.head.done = !1),
                    !(1 & C.wrap) || (((255 & aa) << 8) + (aa >> 8)) % 31)
                  ) {
                    l.msg = 'incorrect header check';
                    C.mode = 30;
                    break;
                  }
                  if (8 !== (15 & aa)) {
                    l.msg = 'unknown compression method';
                    C.mode = 30;
                    break;
                  }
                  if (
                    ((aa >>>= 4), (U -= 4), (Z = (15 & aa) + 8), 0 === C.wbits)
                  )
                    C.wbits = Z;
                  else if (Z > C.wbits) {
                    l.msg = 'invalid window size';
                    C.mode = 30;
                    break;
                  }
                  C.dmax = 1 << Z;
                  l.adler = C.check = 1;
                  C.mode = 512 & aa ? 10 : 12;
                  U = aa = 0;
                  break;
                case 2:
                  for (; 16 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  if (((C.flags = aa), 8 !== (255 & C.flags))) {
                    l.msg = 'unknown compression method';
                    C.mode = 30;
                    break;
                  }
                  if (57344 & C.flags) {
                    l.msg = 'unknown header flags set';
                    C.mode = 30;
                    break;
                  }
                  C.head && (C.head.text = (aa >> 8) & 1);
                  512 & C.flags &&
                    ((xa[0] = 255 & aa),
                    (xa[1] = (aa >>> 8) & 255),
                    (C.check = N(C.check, xa, 2, 0)));
                  U = aa = 0;
                  C.mode = 3;
                case 3:
                  for (; 32 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  C.head && (C.head.time = aa);
                  512 & C.flags &&
                    ((xa[0] = 255 & aa),
                    (xa[1] = (aa >>> 8) & 255),
                    (xa[2] = (aa >>> 16) & 255),
                    (xa[3] = (aa >>> 24) & 255),
                    (C.check = N(C.check, xa, 4, 0)));
                  U = aa = 0;
                  C.mode = 4;
                case 4:
                  for (; 16 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  C.head && ((C.head.xflags = 255 & aa), (C.head.os = aa >> 8));
                  512 & C.flags &&
                    ((xa[0] = 255 & aa),
                    (xa[1] = (aa >>> 8) & 255),
                    (C.check = N(C.check, xa, 2, 0)));
                  U = aa = 0;
                  C.mode = 5;
                case 5:
                  if (1024 & C.flags) {
                    for (; 16 > U; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    C.length = aa;
                    C.head && (C.head.extra_len = aa);
                    512 & C.flags &&
                      ((xa[0] = 255 & aa),
                      (xa[1] = (aa >>> 8) & 255),
                      (C.check = N(C.check, xa, 2, 0)));
                    U = aa = 0;
                  } else C.head && (C.head.extra = null);
                  C.mode = 6;
                case 6:
                  if (
                    1024 & C.flags &&
                    ((u = C.length),
                    u > ea && (u = ea),
                    u &&
                      (C.head &&
                        ((Z = C.head.extra_len - C.length),
                        C.head.extra ||
                          (C.head.extra = Array(C.head.extra_len)),
                        H.arraySet(C.head.extra, Ga, Fa, u, Z)),
                      512 & C.flags && (C.check = N(C.check, Ga, u, Fa)),
                      (ea -= u),
                      (Fa += u),
                      (C.length -= u)),
                    C.length)
                  )
                    break a;
                  C.length = 0;
                  C.mode = 7;
                case 7:
                  if (2048 & C.flags) {
                    if (0 === ea) break a;
                    u = 0;
                    do
                      ((Z = Ga[Fa + u++]),
                        C.head &&
                          Z &&
                          65536 > C.length &&
                          (C.head.name += String.fromCharCode(Z)));
                    while (Z && u < ea);
                    if (
                      (512 & C.flags && (C.check = N(C.check, Ga, u, Fa)),
                      (ea -= u),
                      (Fa += u),
                      Z)
                    )
                      break a;
                  } else C.head && (C.head.name = null);
                  C.length = 0;
                  C.mode = 8;
                case 8:
                  if (4096 & C.flags) {
                    if (0 === ea) break a;
                    u = 0;
                    do
                      ((Z = Ga[Fa + u++]),
                        C.head &&
                          Z &&
                          65536 > C.length &&
                          (C.head.comment += String.fromCharCode(Z)));
                    while (Z && u < ea);
                    if (
                      (512 & C.flags && (C.check = N(C.check, Ga, u, Fa)),
                      (ea -= u),
                      (Fa += u),
                      Z)
                    )
                      break a;
                  } else C.head && (C.head.comment = null);
                  C.mode = 9;
                case 9:
                  if (512 & C.flags) {
                    for (; 16 > U; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    if (aa !== (65535 & C.check)) {
                      l.msg = 'header crc mismatch';
                      C.mode = 30;
                      break;
                    }
                    U = aa = 0;
                  }
                  C.head &&
                    ((C.head.hcrc = (C.flags >> 9) & 1), (C.head.done = !0));
                  l.adler = C.check = 0;
                  C.mode = 12;
                  break;
                case 10:
                  for (; 32 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  l.adler = C.check = J(aa);
                  U = aa = 0;
                  C.mode = 11;
                case 11:
                  if (0 === C.havedict)
                    return (
                      (l.next_out = X),
                      (l.avail_out = Oa),
                      (l.next_in = Fa),
                      (l.avail_in = ea),
                      (C.hold = aa),
                      (C.bits = U),
                      2
                    );
                  l.adler = C.check = 1;
                  C.mode = 12;
                case 12:
                  if (5 === r || 6 === r) break a;
                case 13:
                  if (C.last) {
                    aa >>>= 7 & U;
                    U -= 7 & U;
                    C.mode = 27;
                    break;
                  }
                  for (; 3 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  switch (((C.last = 1 & aa), (aa >>>= 1), --U, 3 & aa)) {
                    case 0:
                      C.mode = 14;
                      break;
                    case 1:
                      var qb = C;
                      if (pb) {
                        q = new H.Buf32(512);
                        F = new H.Buf32(32);
                        for (E = 0; 144 > E; ) qb.lens[E++] = 8;
                        for (; 256 > E; ) qb.lens[E++] = 9;
                        for (; 280 > E; ) qb.lens[E++] = 7;
                        for (; 288 > E; ) qb.lens[E++] = 8;
                        Bb(1, qb.lens, 0, 288, q, 0, qb.work, { bits: 9 });
                        for (E = 0; 32 > E; ) qb.lens[E++] = 5;
                        Bb(2, qb.lens, 0, 32, F, 0, qb.work, { bits: 5 });
                        pb = !1;
                      }
                      qb.lencode = q;
                      qb.lenbits = 9;
                      qb.distcode = F;
                      qb.distbits = 5;
                      if (((C.mode = 20), 6 === r)) {
                        aa >>>= 2;
                        U -= 2;
                        break a;
                      }
                      break;
                    case 2:
                      C.mode = 17;
                      break;
                    case 3:
                      ((l.msg = 'invalid block type'), (C.mode = 30));
                  }
                  aa >>>= 2;
                  U -= 2;
                  break;
                case 14:
                  aa >>>= 7 & U;
                  for (U -= 7 & U; 32 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  if ((65535 & aa) !== ((aa >>> 16) ^ 65535)) {
                    l.msg = 'invalid stored block lengths';
                    C.mode = 30;
                    break;
                  }
                  if (
                    ((C.length = 65535 & aa),
                    (aa = 0),
                    (U = 0),
                    (C.mode = 15),
                    6 === r)
                  )
                    break a;
                case 15:
                  C.mode = 16;
                case 16:
                  if ((u = C.length)) {
                    if ((u > ea && (u = ea), u > Oa && (u = Oa), 0 === u))
                      break a;
                    H.arraySet(bb, Ga, Fa, u, X);
                    ea -= u;
                    Fa += u;
                    Oa -= u;
                    X += u;
                    C.length -= u;
                    break;
                  }
                  C.mode = 12;
                  break;
                case 17:
                  for (; 14 > U; ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  if (
                    ((C.nlen = (31 & aa) + 257),
                    (aa >>>= 5),
                    (U -= 5),
                    (C.ndist = (31 & aa) + 1),
                    (aa >>>= 5),
                    (U -= 5),
                    (C.ncode = (15 & aa) + 4),
                    (aa >>>= 4),
                    (U -= 4),
                    286 < C.nlen || 30 < C.ndist)
                  ) {
                    l.msg = 'too many length or distance symbols';
                    C.mode = 30;
                    break;
                  }
                  C.have = 0;
                  C.mode = 18;
                case 18:
                  for (; C.have < C.ncode; ) {
                    for (; 3 > U; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    C.lens[O[C.have++]] = 7 & aa;
                    aa >>>= 3;
                    U -= 3;
                  }
                  for (; 19 > C.have; ) C.lens[O[C.have++]] = 0;
                  if (
                    ((C.lencode = C.lendyn),
                    (C.lenbits = 7),
                    (da = { bits: C.lenbits }),
                    (I = Bb(0, C.lens, 0, 19, C.lencode, 0, C.work, da)),
                    (C.lenbits = da.bits),
                    I)
                  ) {
                    l.msg = 'invalid code lengths set';
                    C.mode = 30;
                    break;
                  }
                  C.have = 0;
                  C.mode = 19;
                case 19:
                  for (; C.have < C.nlen + C.ndist; ) {
                    for (
                      ;
                      (na = C.lencode[aa & ((1 << C.lenbits) - 1)]),
                        (Q = na >>> 24),
                        (qb = 65535 & na),
                        !(Q <= U);

                    ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    if (16 > qb)
                      ((aa >>>= Q), (U -= Q), (C.lens[C.have++] = qb));
                    else {
                      if (16 === qb) {
                        for (E = Q + 2; U < E; ) {
                          if (0 === ea) break a;
                          ea--;
                          aa += Ga[Fa++] << U;
                          U += 8;
                        }
                        if (((aa >>>= Q), (U -= Q), 0 === C.have)) {
                          l.msg = 'invalid bit length repeat';
                          C.mode = 30;
                          break;
                        }
                        Z = C.lens[C.have - 1];
                        u = 3 + (3 & aa);
                        aa >>>= 2;
                        U -= 2;
                      } else if (17 === qb) {
                        for (E = Q + 3; U < E; ) {
                          if (0 === ea) break a;
                          ea--;
                          aa += Ga[Fa++] << U;
                          U += 8;
                        }
                        aa >>>= Q;
                        U -= Q;
                        Z = 0;
                        u = 3 + (7 & aa);
                        aa >>>= 3;
                        U -= 3;
                      } else {
                        for (E = Q + 7; U < E; ) {
                          if (0 === ea) break a;
                          ea--;
                          aa += Ga[Fa++] << U;
                          U += 8;
                        }
                        aa >>>= Q;
                        U -= Q;
                        Z = 0;
                        u = 11 + (127 & aa);
                        aa >>>= 7;
                        U -= 7;
                      }
                      if (C.have + u > C.nlen + C.ndist) {
                        l.msg = 'invalid bit length repeat';
                        C.mode = 30;
                        break;
                      }
                      for (; u--; ) C.lens[C.have++] = Z;
                    }
                  }
                  if (30 === C.mode) break;
                  if (0 === C.lens[256]) {
                    l.msg = 'invalid code -- missing end-of-block';
                    C.mode = 30;
                    break;
                  }
                  if (
                    ((C.lenbits = 9),
                    (da = { bits: C.lenbits }),
                    (I = Bb(1, C.lens, 0, C.nlen, C.lencode, 0, C.work, da)),
                    (C.lenbits = da.bits),
                    I)
                  ) {
                    l.msg = 'invalid literal/lengths set';
                    C.mode = 30;
                    break;
                  }
                  if (
                    ((C.distbits = 6),
                    (C.distcode = C.distdyn),
                    (da = { bits: C.distbits }),
                    (I = Bb(
                      2,
                      C.lens,
                      C.nlen,
                      C.ndist,
                      C.distcode,
                      0,
                      C.work,
                      da,
                    )),
                    (C.distbits = da.bits),
                    I)
                  ) {
                    l.msg = 'invalid distances set';
                    C.mode = 30;
                    break;
                  }
                  if (((C.mode = 20), 6 === r)) break a;
                case 20:
                  C.mode = 21;
                case 21:
                  if (6 <= ea && 258 <= Oa) {
                    l.next_out = X;
                    l.avail_out = Oa;
                    l.next_in = Fa;
                    l.avail_in = ea;
                    C.hold = aa;
                    C.bits = U;
                    Ab(l, ya);
                    X = l.next_out;
                    bb = l.output;
                    Oa = l.avail_out;
                    Fa = l.next_in;
                    Ga = l.input;
                    ea = l.avail_in;
                    aa = C.hold;
                    U = C.bits;
                    12 === C.mode && (C.back = -1);
                    break;
                  }
                  for (
                    C.back = 0;
                    (na = C.lencode[aa & ((1 << C.lenbits) - 1)]),
                      (Q = na >>> 24),
                      (E = (na >>> 16) & 255),
                      (qb = 65535 & na),
                      !(Q <= U);

                  ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  if (E && 0 === (240 & E)) {
                    var z = Q;
                    var M = E;
                    for (
                      ka = qb;
                      (na = C.lencode[ka + ((aa & ((1 << (z + M)) - 1)) >> z)]),
                        (Q = na >>> 24),
                        (E = (na >>> 16) & 255),
                        (qb = 65535 & na),
                        !(z + Q <= U);

                    ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    aa >>>= z;
                    U -= z;
                    C.back += z;
                  }
                  if (
                    ((aa >>>= Q),
                    (U -= Q),
                    (C.back += Q),
                    (C.length = qb),
                    0 === E)
                  ) {
                    C.mode = 26;
                    break;
                  }
                  if (32 & E) {
                    C.back = -1;
                    C.mode = 12;
                    break;
                  }
                  if (64 & E) {
                    l.msg = 'invalid literal/length code';
                    C.mode = 30;
                    break;
                  }
                  C.extra = 15 & E;
                  C.mode = 22;
                case 22:
                  if (C.extra) {
                    for (E = C.extra; U < E; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    C.length += aa & ((1 << C.extra) - 1);
                    aa >>>= C.extra;
                    U -= C.extra;
                    C.back += C.extra;
                  }
                  C.was = C.length;
                  C.mode = 23;
                case 23:
                  for (
                    ;
                    (na = C.distcode[aa & ((1 << C.distbits) - 1)]),
                      (Q = na >>> 24),
                      (E = (na >>> 16) & 255),
                      (qb = 65535 & na),
                      !(Q <= U);

                  ) {
                    if (0 === ea) break a;
                    ea--;
                    aa += Ga[Fa++] << U;
                    U += 8;
                  }
                  if (0 === (240 & E)) {
                    z = Q;
                    M = E;
                    for (
                      ka = qb;
                      (na =
                        C.distcode[ka + ((aa & ((1 << (z + M)) - 1)) >> z)]),
                        (Q = na >>> 24),
                        (E = (na >>> 16) & 255),
                        (qb = 65535 & na),
                        !(z + Q <= U);

                    ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    aa >>>= z;
                    U -= z;
                    C.back += z;
                  }
                  if (((aa >>>= Q), (U -= Q), (C.back += Q), 64 & E)) {
                    l.msg = 'invalid distance code';
                    C.mode = 30;
                    break;
                  }
                  C.offset = qb;
                  C.extra = 15 & E;
                  C.mode = 24;
                case 24:
                  if (C.extra) {
                    for (E = C.extra; U < E; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    C.offset += aa & ((1 << C.extra) - 1);
                    aa >>>= C.extra;
                    U -= C.extra;
                    C.back += C.extra;
                  }
                  if (C.offset > C.dmax) {
                    l.msg = 'invalid distance too far back';
                    C.mode = 30;
                    break;
                  }
                  C.mode = 25;
                case 25:
                  if (0 === Oa) break a;
                  if (((u = ya - Oa), C.offset > u)) {
                    if (((u = C.offset - u), u > C.whave && C.sane)) {
                      l.msg = 'invalid distance too far back';
                      C.mode = 30;
                      break;
                    }
                    u > C.wnext
                      ? ((u -= C.wnext), (y = C.wsize - u))
                      : (y = C.wnext - u);
                    u > C.length && (u = C.length);
                    E = C.window;
                  } else ((E = bb), (y = X - C.offset), (u = C.length));
                  u > Oa && (u = Oa);
                  Oa -= u;
                  C.length -= u;
                  do bb[X++] = E[y++];
                  while (--u);
                  0 === C.length && (C.mode = 21);
                  break;
                case 26:
                  if (0 === Oa) break a;
                  bb[X++] = C.length;
                  Oa--;
                  C.mode = 21;
                  break;
                case 27:
                  if (C.wrap) {
                    for (; 32 > U; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa |= Ga[Fa++] << U;
                      U += 8;
                    }
                    if (
                      ((ya -= Oa),
                      (l.total_out += ya),
                      (C.total += ya),
                      ya &&
                        (l.adler = C.check =
                          C.flags
                            ? N(C.check, bb, ya, X - ya)
                            : Ea(C.check, bb, ya, X - ya)),
                      (ya = Oa),
                      (C.flags ? aa : J(aa)) !== C.check)
                    ) {
                      l.msg = 'incorrect data check';
                      C.mode = 30;
                      break;
                    }
                    U = aa = 0;
                  }
                  C.mode = 28;
                case 28:
                  if (C.wrap && C.flags) {
                    for (; 32 > U; ) {
                      if (0 === ea) break a;
                      ea--;
                      aa += Ga[Fa++] << U;
                      U += 8;
                    }
                    if (aa !== (4294967295 & C.total)) {
                      l.msg = 'incorrect length check';
                      C.mode = 30;
                      break;
                    }
                    U = aa = 0;
                  }
                  C.mode = 29;
                case 29:
                  I = 1;
                  break a;
                case 30:
                  I = -3;
                  break a;
                case 31:
                  return -4;
                default:
                  return eb;
              }
            return (
              (l.next_out = X),
              (l.avail_out = Oa),
              (l.next_in = Fa),
              (l.avail_in = ea),
              (C.hold = aa),
              (C.bits = U),
              (C.wsize ||
                (ya !== l.avail_out &&
                  30 > C.mode &&
                  (27 > C.mode || 4 !== r))) &&
              g(l, l.output, l.next_out, ya - l.avail_out)
                ? ((C.mode = 31), -4)
                : (($a -= l.avail_in),
                  (ya -= l.avail_out),
                  (l.total_in += $a),
                  (l.total_out += ya),
                  (C.total += ya),
                  C.wrap &&
                    ya &&
                    (l.adler = C.check =
                      C.flags
                        ? N(C.check, bb, ya, l.next_out - ya)
                        : Ea(C.check, bb, ya, l.next_out - ya)),
                  (l.data_type =
                    C.bits +
                    (C.last ? 64 : 0) +
                    (12 === C.mode ? 128 : 0) +
                    (20 === C.mode || 15 === C.mode ? 256 : 0)),
                  ((0 === $a && 0 === ya) || 4 === r) && I === cc && (I = -5),
                  I)
            );
          };
          E.inflateEnd = function (g) {
            if (!g || !g.state) return eb;
            var l = g.state;
            return (l.window && (l.window = null), (g.state = null), cc);
          };
          E.inflateGetHeader = function (g, l) {
            var q;
            return g && g.state
              ? ((q = g.state),
                0 === (2 & q.wrap) ? eb : ((q.head = l), (l.done = !1), cc))
              : eb;
          };
          E.inflateSetDictionary = function (l, q) {
            var r,
              u,
              E = q.length;
            return l && l.state
              ? ((r = l.state),
                0 !== r.wrap && 11 !== r.mode
                  ? eb
                  : 11 === r.mode &&
                      ((u = 1), (u = Ea(u, q, E, 0)), u !== r.check)
                    ? -3
                    : g(l, q, E, E)
                      ? ((r.mode = 31), -4)
                      : ((r.havedict = 1), cc))
              : eb;
          };
          E.inflateInfo = 'pako inflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './inffast': 10,
          './inftrees': 12,
        },
      ],
      12: [
        function (r, y, E) {
          var J = r('../utils/common'),
            Q = [
              3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43,
              51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
            ],
            Z = [
              16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
              19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
            ],
            u = [
              1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257,
              385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289,
              16385, 24577, 0, 0,
            ],
            da = [
              16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
              23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
            ];
          y.exports = function (l, g, q, r, E, y, N, Ab) {
            var F,
              H,
              Ea,
              ma,
              $a,
              X,
              pb = Ab.bits,
              ka,
              na,
              Ya,
              S,
              sa,
              hb = 0,
              fa,
              gb = null,
              rc = 0,
              Gb = new J.Buf16(16);
            var xa = new J.Buf16(16);
            var O = null,
              C = 0;
            for (ka = 0; 15 >= ka; ka++) Gb[ka] = 0;
            for (na = 0; na < r; na++) Gb[g[q + na]]++;
            var jb = pb;
            for (Ya = 15; 1 <= Ya && 0 === Gb[Ya]; Ya--);
            if ((jb > Ya && (jb = Ya), 0 === Ya))
              return (
                (E[y++] = 20971520),
                (E[y++] = 20971520),
                (Ab.bits = 1),
                0
              );
            for (pb = 1; pb < Ya && 0 === Gb[pb]; pb++);
            jb < pb && (jb = pb);
            for (ka = F = 1; 15 >= ka; ka++)
              if (((F <<= 1), (F -= Gb[ka]), 0 > F)) return -1;
            if (0 < F && (0 === l || 1 !== Ya)) return -1;
            xa[1] = 0;
            for (ka = 1; 15 > ka; ka++) xa[ka + 1] = xa[ka] + Gb[ka];
            for (na = 0; na < r; na++)
              0 !== g[q + na] && (N[xa[g[q + na]]++] = na);
            if (
              (0 === l
                ? ((gb = O = N), (ma = 19))
                : 1 === l
                  ? ((gb = Q), (rc -= 257), (O = Z), (C -= 257), (ma = 256))
                  : ((gb = u), (O = da), (ma = -1)),
              (fa = 0),
              (na = 0),
              (ka = pb),
              (xa = y),
              (S = jb),
              (sa = 0),
              (Ea = -1),
              (hb = 1 << jb),
              (r = hb - 1),
              (1 === l && 852 < hb) || (2 === l && 592 < hb))
            )
              return 1;
            for (var bb = 0; ; ) {
              bb++;
              var Oa = ka - sa;
              N[na] < ma
                ? (($a = 0), (X = N[na]))
                : N[na] > ma
                  ? (($a = O[C + N[na]]), (X = gb[rc + N[na]]))
                  : (($a = 96), (X = 0));
              F = 1 << (ka - sa);
              pb = H = 1 << S;
              do
                ((H -= F),
                  (E[xa + (fa >> sa) + H] = (Oa << 24) | ($a << 16) | X | 0));
              while (0 !== H);
              for (F = 1 << (ka - 1); fa & F; ) F >>= 1;
              if (
                (0 !== F ? ((fa &= F - 1), (fa += F)) : (fa = 0),
                na++,
                0 === --Gb[ka])
              ) {
                if (ka === Ya) break;
                ka = g[q + N[na]];
              }
              if (ka > jb && (fa & r) !== Ea) {
                0 === sa && (sa = jb);
                xa += pb;
                S = ka - sa;
                for (
                  F = 1 << S;
                  S + sa < Ya && ((F -= Gb[S + sa]), !(0 >= F));

                )
                  (S++, (F <<= 1));
                if (
                  ((hb += 1 << S),
                  (1 === l && 852 < hb) || (2 === l && 592 < hb))
                )
                  return 1;
                Ea = fa & r;
                E[Ea] = (jb << 24) | (S << 16) | (xa - y) | 0;
              }
            }
            return (
              0 !== fa && (E[xa + fa] = ((ka - sa) << 24) | 4194304),
              (Ab.bits = jb),
              0
            );
          };
        },
        { '../utils/common': 3 },
      ],
      13: [
        function (r, y, E) {
          y.exports = {
            2: 'need dictionary',
            1: 'stream end',
            0: '',
            '-1': 'file error',
            '-2': 'stream error',
            '-3': 'data error',
            '-4': 'insufficient memory',
            '-5': 'buffer error',
            '-6': 'incompatible version',
          };
        },
        {},
      ],
      14: [
        function (r, y, E) {
          function J(g) {
            for (var l = g.length; 0 <= --l; ) g[l] = 0;
          }
          function Q(g, l, q, r, u) {
            this.static_tree = g;
            this.extra_bits = l;
            this.extra_base = q;
            this.elems = r;
            this.max_length = u;
            this.has_stree = g && g.length;
          }
          function Z(g, l) {
            this.dyn_tree = g;
            this.max_code = 0;
            this.stat_desc = l;
          }
          function u(g, l) {
            g.pending_buf[g.pending++] = 255 & l;
            g.pending_buf[g.pending++] = (l >>> 8) & 255;
          }
          function da(g, l, q) {
            g.bi_valid > rc - q
              ? ((g.bi_buf |= (l << g.bi_valid) & 65535),
                u(g, g.bi_buf),
                (g.bi_buf = l >> (rc - g.bi_valid)),
                (g.bi_valid += q - rc))
              : ((g.bi_buf |= (l << g.bi_valid) & 65535), (g.bi_valid += q));
          }
          function l(g, l, q) {
            da(g, q[2 * l], q[2 * l + 1]);
          }
          function g(g, l) {
            var q = 0;
            do ((q |= 1 & g), (g >>>= 1), (q <<= 1));
            while (0 < --l);
            return q >>> 1;
          }
          function q(l, q, r) {
            var u,
              w = Array(gb + 1),
              D = 0;
            for (u = 1; u <= gb; u++) w[u] = D = (D + r[u - 1]) << 1;
            for (r = 0; r <= q; r++)
              ((u = l[2 * r + 1]), 0 !== u && (l[2 * r] = g(w[u]++, u)));
          }
          function F(g) {
            var l;
            for (l = 0; l < S; l++) g.dyn_ltree[2 * l] = 0;
            for (l = 0; l < sa; l++) g.dyn_dtree[2 * l] = 0;
            for (l = 0; l < hb; l++) g.bl_tree[2 * l] = 0;
            g.dyn_ltree[2 * Gb] = 1;
            g.opt_len = g.static_len = 0;
            g.last_lit = g.matches = 0;
          }
          function H(g) {
            8 < g.bi_valid
              ? u(g, g.bi_buf)
              : 0 < g.bi_valid && (g.pending_buf[g.pending++] = g.bi_buf);
            g.bi_buf = 0;
            g.bi_valid = 0;
          }
          function Ea(g, l, q, r) {
            var u = 2 * l,
              w = 2 * q;
            return g[u] < g[w] || (g[u] === g[w] && r[l] <= r[q]);
          }
          function N(g, l, q) {
            for (
              var r = g.heap[q], u = q << 1;
              u <= g.heap_len &&
              (u < g.heap_len &&
                Ea(l, g.heap[u + 1], g.heap[u], g.depth) &&
                u++,
              !Ea(l, r, g.heap[u], g.depth));

            )
              ((g.heap[q] = g.heap[u]), (q = u), (u <<= 1));
            g.heap[q] = r;
          }
          function Ab(g, q, r) {
            var u,
              w,
              D = 0;
            if (0 !== g.last_lit) {
              do {
                var z =
                  (g.pending_buf[g.d_buf + 2 * D] << 8) |
                  g.pending_buf[g.d_buf + 2 * D + 1];
                var C = g.pending_buf[g.l_buf + D];
                D++;
                0 === z
                  ? l(g, C, q)
                  : ((u = U[C]),
                    l(g, u + Ya + 1, q),
                    (w = jb[u]),
                    0 !== w && ((C -= Mc[u]), da(g, C, w)),
                    z--,
                    (u = 256 > z ? aa[z] : aa[256 + (z >>> 7)]),
                    l(g, u, r),
                    (w = bb[u]),
                    0 !== w && ((z -= ya[u]), da(g, z, w)));
              } while (D < g.last_lit);
            }
            l(g, Gb, q);
          }
          function Bb(g, l) {
            var r,
              u = l.dyn_tree;
            var w = l.stat_desc.static_tree;
            var D = l.stat_desc.has_stree,
              z = l.stat_desc.elems,
              C = -1;
            g.heap_len = 0;
            g.heap_max = fa;
            for (r = 0; r < z; r++)
              0 !== u[2 * r]
                ? ((g.heap[++g.heap_len] = C = r), (g.depth[r] = 0))
                : (u[2 * r + 1] = 0);
            for (; 2 > g.heap_len; ) {
              var E = (g.heap[++g.heap_len] = 2 > C ? ++C : 0);
              u[2 * E] = 1;
              g.depth[E] = 0;
              g.opt_len--;
              D && (g.static_len -= w[2 * E + 1]);
            }
            l.max_code = C;
            for (r = g.heap_len >> 1; 1 <= r; r--) N(g, u, r);
            E = z;
            do
              ((r = g.heap[1]),
                (g.heap[1] = g.heap[g.heap_len--]),
                N(g, u, 1),
                (w = g.heap[1]),
                (g.heap[--g.heap_max] = r),
                (g.heap[--g.heap_max] = w),
                (u[2 * E] = u[2 * r] + u[2 * w]),
                (g.depth[E] =
                  (g.depth[r] >= g.depth[w] ? g.depth[r] : g.depth[w]) + 1),
                (u[2 * r + 1] = u[2 * w + 1] = E),
                (g.heap[1] = E++),
                N(g, u, 1));
            while (2 <= g.heap_len);
            g.heap[--g.heap_max] = g.heap[1];
            var y, F;
            r = l.dyn_tree;
            E = l.max_code;
            z = l.stat_desc.static_tree;
            var H = l.stat_desc.has_stree,
              I = l.stat_desc.extra_bits,
              J = l.stat_desc.extra_base,
              M = l.stat_desc.max_length,
              K = 0;
            for (D = 0; D <= gb; D++) g.bl_count[D] = 0;
            r[2 * g.heap[g.heap_max] + 1] = 0;
            for (l = g.heap_max + 1; l < fa; l++)
              ((w = g.heap[l]),
                (D = r[2 * r[2 * w + 1] + 1] + 1),
                D > M && ((D = M), K++),
                (r[2 * w + 1] = D),
                w > E ||
                  (g.bl_count[D]++,
                  (y = 0),
                  w >= J && (y = I[w - J]),
                  (F = r[2 * w]),
                  (g.opt_len += F * (D + y)),
                  H && (g.static_len += F * (z[2 * w + 1] + y))));
            if (0 !== K) {
              do {
                for (D = M - 1; 0 === g.bl_count[D]; ) D--;
                g.bl_count[D]--;
                g.bl_count[D + 1] += 2;
                g.bl_count[M]--;
                K -= 2;
              } while (0 < K);
              for (D = M; 0 !== D; D--)
                for (w = g.bl_count[D]; 0 !== w; )
                  ((y = g.heap[--l]),
                    y > E ||
                      (r[2 * y + 1] !== D &&
                        ((g.opt_len += (D - r[2 * y + 1]) * r[2 * y]),
                        (r[2 * y + 1] = D)),
                      w--));
            }
            q(u, C, g.bl_count);
          }
          function cc(g, l, q) {
            var r,
              u = -1,
              w = l[1],
              D = 0,
              z = 7,
              E = 4;
            0 === w && ((z = 138), (E = 3));
            l[2 * (q + 1) + 1] = 65535;
            for (r = 0; r <= q; r++) {
              var y = w;
              w = l[2 * (r + 1) + 1];
              (++D < z && y === w) ||
                (D < E
                  ? (g.bl_tree[2 * y] += D)
                  : 0 !== y
                    ? (y !== u && g.bl_tree[2 * y]++, g.bl_tree[2 * xa]++)
                    : 10 >= D
                      ? g.bl_tree[2 * O]++
                      : g.bl_tree[2 * C]++,
                (D = 0),
                (u = y),
                0 === w
                  ? ((z = 138), (E = 3))
                  : y === w
                    ? ((z = 6), (E = 3))
                    : ((z = 7), (E = 4)));
            }
          }
          function eb(g, q, r) {
            var u,
              w,
              D = -1,
              z = q[1],
              E = 0,
              y = 7,
              F = 4;
            0 === z && ((y = 138), (F = 3));
            for (u = 0; u <= r; u++)
              if (((w = z), (z = q[2 * (u + 1) + 1]), !(++E < y && w === z))) {
                if (E < F) {
                  do l(g, w, g.bl_tree);
                  while (0 !== --E);
                } else
                  0 !== w
                    ? (w !== D && (l(g, w, g.bl_tree), E--),
                      l(g, xa, g.bl_tree),
                      da(g, E - 3, 2))
                    : 10 >= E
                      ? (l(g, O, g.bl_tree), da(g, E - 3, 3))
                      : (l(g, C, g.bl_tree), da(g, E - 11, 7));
                E = 0;
                D = w;
                0 === z
                  ? ((y = 138), (F = 3))
                  : w === z
                    ? ((y = 6), (F = 3))
                    : ((y = 7), (F = 4));
              }
          }
          function ma(g) {
            var l,
              q = 4093624447;
            for (l = 0; 31 >= l; l++, q >>>= 1)
              if (1 & q && 0 !== g.dyn_ltree[2 * l]) return pb;
            if (
              0 !== g.dyn_ltree[18] ||
              0 !== g.dyn_ltree[20] ||
              0 !== g.dyn_ltree[26]
            )
              return ka;
            for (l = 32; l < Ya; l++) if (0 !== g.dyn_ltree[2 * l]) return ka;
            return pb;
          }
          function $a(g, l, q, r) {
            da(g, (na << 1) + (r ? 1 : 0), 3);
            H(g);
            u(g, q);
            u(g, ~q);
            X.arraySet(g.pending_buf, g.window, l, q, g.pending);
            g.pending += q;
          }
          var X = r('../utils/common'),
            pb = 0,
            ka = 1,
            na = 0,
            Ya = 256,
            S = Ya + 1 + 29,
            sa = 30,
            hb = 19,
            fa = 2 * S + 1,
            gb = 15,
            rc = 16,
            Gb = 256,
            xa = 16,
            O = 17,
            C = 18,
            jb = [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ],
            bb = [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ],
            Oa = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
            Fa = [
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ],
            Ga = Array(2 * (S + 2));
          J(Ga);
          var ea = Array(2 * sa);
          J(ea);
          var aa = Array(512);
          J(aa);
          var U = Array(256);
          J(U);
          var Mc = Array(29);
          J(Mc);
          var ya = Array(sa);
          J(ya);
          var I,
            qb,
            z,
            M = !1;
          E._tr_init = function (l) {
            if (!M) {
              var r,
                u,
                D,
                C = Array(gb + 1);
              for (D = u = 0; 28 > D; D++)
                for (Mc[D] = u, r = 0; r < 1 << jb[D]; r++) U[u++] = D;
              U[u - 1] = D;
              for (D = u = 0; 16 > D; D++)
                for (ya[D] = u, r = 0; r < 1 << bb[D]; r++) aa[u++] = D;
              for (u >>= 7; D < sa; D++)
                for (ya[D] = u << 7, r = 0; r < 1 << (bb[D] - 7); r++)
                  aa[256 + u++] = D;
              for (r = 0; r <= gb; r++) C[r] = 0;
              for (r = 0; 143 >= r; ) ((Ga[2 * r + 1] = 8), r++, C[8]++);
              for (; 255 >= r; ) ((Ga[2 * r + 1] = 9), r++, C[9]++);
              for (; 279 >= r; ) ((Ga[2 * r + 1] = 7), r++, C[7]++);
              for (; 287 >= r; ) ((Ga[2 * r + 1] = 8), r++, C[8]++);
              q(Ga, S + 1, C);
              for (r = 0; r < sa; r++)
                ((ea[2 * r + 1] = 5), (ea[2 * r] = g(r, 5)));
              I = new Q(Ga, jb, Ya + 1, S, gb);
              qb = new Q(ea, bb, 0, sa, gb);
              z = new Q([], Oa, 0, hb, 7);
              M = !0;
            }
            l.l_desc = new Z(l.dyn_ltree, I);
            l.d_desc = new Z(l.dyn_dtree, qb);
            l.bl_desc = new Z(l.bl_tree, z);
            l.bi_buf = 0;
            l.bi_valid = 0;
            F(l);
          };
          E._tr_stored_block = $a;
          E._tr_flush_block = function (g, l, q, r) {
            var u = 0;
            if (0 < g.level) {
              2 === g.strm.data_type && (g.strm.data_type = ma(g));
              Bb(g, g.l_desc);
              Bb(g, g.d_desc);
              cc(g, g.dyn_ltree, g.l_desc.max_code);
              cc(g, g.dyn_dtree, g.d_desc.max_code);
              Bb(g, g.bl_desc);
              for (u = hb - 1; 3 <= u && 0 === g.bl_tree[2 * Fa[u] + 1]; u--);
              u = ((g.opt_len += 3 * (u + 1) + 14), u);
              var w = (g.opt_len + 3 + 7) >>> 3;
              var z = (g.static_len + 3 + 7) >>> 3;
              z <= w && (w = z);
            } else w = z = q + 5;
            if (q + 4 <= w && -1 !== l) $a(g, l, q, r);
            else if (4 === g.strategy || z === w)
              (da(g, 2 + (r ? 1 : 0), 3), Ab(g, Ga, ea));
            else {
              da(g, 4 + (r ? 1 : 0), 3);
              l = g.l_desc.max_code + 1;
              q = g.d_desc.max_code + 1;
              u += 1;
              da(g, l - 257, 5);
              da(g, q - 1, 5);
              da(g, u - 4, 4);
              for (w = 0; w < u; w++) da(g, g.bl_tree[2 * Fa[w] + 1], 3);
              eb(g, g.dyn_ltree, l - 1);
              eb(g, g.dyn_dtree, q - 1);
              Ab(g, g.dyn_ltree, g.dyn_dtree);
            }
            F(g);
            r && H(g);
          };
          E._tr_tally = function (g, l, q) {
            return (
              (g.pending_buf[g.d_buf + 2 * g.last_lit] = (l >>> 8) & 255),
              (g.pending_buf[g.d_buf + 2 * g.last_lit + 1] = 255 & l),
              (g.pending_buf[g.l_buf + g.last_lit] = 255 & q),
              g.last_lit++,
              0 === l
                ? g.dyn_ltree[2 * q]++
                : (g.matches++,
                  l--,
                  g.dyn_ltree[2 * (U[q] + Ya + 1)]++,
                  g.dyn_dtree[2 * (256 > l ? aa[l] : aa[256 + (l >>> 7)])]++),
              g.last_lit === g.lit_bufsize - 1
            );
          };
          E._tr_align = function (g) {
            da(g, 2, 3);
            l(g, Gb, Ga);
            16 === g.bi_valid
              ? (u(g, g.bi_buf), (g.bi_buf = 0), (g.bi_valid = 0))
              : 8 <= g.bi_valid &&
                ((g.pending_buf[g.pending++] = 255 & g.bi_buf),
                (g.bi_buf >>= 8),
                (g.bi_valid -= 8));
          };
        },
        { '../utils/common': 3 },
      ],
      15: [
        function (r, y, E) {
          y.exports = function () {
            this.input = null;
            this.total_in = this.avail_in = this.next_in = 0;
            this.output = null;
            this.total_out = this.avail_out = this.next_out = 0;
            this.msg = '';
            this.state = null;
            this.data_type = 2;
            this.adler = 0;
          };
        },
        {},
      ],
      '/': [
        function (r, y, E) {
          E = r('./lib/utils/common').assign;
          var J = r('./lib/deflate'),
            Q = r('./lib/inflate');
          r = r('./lib/zlib/constants');
          var Z = {};
          E(Z, J, Q, r);
          y.exports = Z;
        },
        {
          './lib/deflate': 1,
          './lib/inflate': 2,
          './lib/utils/common': 3,
          './lib/zlib/constants': 6,
        },
      ],
    },
    {},
    [],
  )('/');
});
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var e = (function () {
    function A(g) {
      var l = [];
      return ((l[g - 1] = void 0), l);
    }
    function r(g, l) {
      return J(g[0] + l[0], g[1] + l[1]);
    }
    function y(g, l) {
      var t = Z(g) & Z(l),
        n,
        x;
      return (
        (n =
          (~~Math.max(Math.min(g[1] / sc, 2147483647), -2147483648) &
            ~~Math.max(Math.min(l[1] / sc, 2147483647), -2147483648)) *
          sc),
        (x = t),
        0 > t && (x += sc),
        [x, n]
      );
    }
    function E(g, l) {
      var t, n;
      return g[0] == l[0] && g[1] == l[1]
        ? 0
        : ((t = 0 > g[1]),
          (n = 0 > l[1]),
          t && !n
            ? -1
            : !t && n
              ? 1
              : 0 > J(g[0] - l[0], g[1] - l[1])[1]
                ? -1
                : 1);
    }
    function J(g, l) {
      l %= 1.8446744073709552e19;
      g %= 1.8446744073709552e19;
      var t = l % sc;
      var n = Math.floor(g / sc) * sc;
      l = l - t + n;
      for (g = g - n + t; 0 > g; ) ((g += sc), (l -= sc));
      for (; 4294967295 < g; ) ((g -= sc), (l += sc));
      for (l %= 1.8446744073709552e19; 0x7fffffff00000000 < l; )
        l -= 1.8446744073709552e19;
      for (; -9223372036854775808 > l; ) l += 1.8446744073709552e19;
      return [g, l];
    }
    function Q(g) {
      return 0 <= g ? [g, 0] : [g + sc, -sc];
    }
    function Z(g) {
      return 2147483648 <= g[0]
        ? ~~Math.max(Math.min(g[0] - sc, 2147483647), -2147483648)
        : ~~Math.max(Math.min(g[0], 2147483647), -2147483648);
    }
    function u(g) {
      return 30 >= g ? 1 << g : u(30) * u(g - 30);
    }
    function da(g, l) {
      var t, n, x, q;
      if (((l &= 63), g[0] == vb[0] && g[1] == vb[1])) return l ? Fc : g;
      if (0 > g[1]) throw Error('Neg');
      return (
        (q = u(l)),
        (n = (g[1] * q) % 1.8446744073709552e19),
        (x = g[0] * q),
        (t = x - (x % sc)),
        (n += t),
        (x -= t),
        0x7fffffffffffffff <= n && (n -= 1.8446744073709552e19),
        [x, n]
      );
    }
    function l(g, l) {
      var t;
      return ((l &= 63), (t = u(l)), J(Math.floor(g[0] / t), g[1] / t));
    }
    function g(g, l) {
      return ((g.Mc = l), (g.Lc = 0), (g.Yb = l.length), g);
    }
    function q(g) {
      return g.Lc >= g.Yb ? -1 : 255 & g.Mc[g.Lc++];
    }
    function F(g) {
      return ((g.Mc = A(32)), (g.Yb = 0), g);
    }
    function H(g) {
      var l = g.Mc;
      return ((l.length = g.Yb), l);
    }
    function Ea(g, l, n, q, r) {
      for (var t = 0; r > t; ++t) n[q + t] = g[l + t];
    }
    function N(t, n, q) {
      t.Nb = F({});
      var x = g({}, n),
        r = t.Nb,
        u = Q(n.length);
      if (0 > E(u, L)) throw Error('invalid length ' + u);
      t.Tb = u;
      n = {};
      var G;
      n.v = A(4);
      n.a = [];
      n.d = {};
      n.C = A(192);
      n.bb = A(12);
      n.hb = A(12);
      n.Ub = A(12);
      n.vc = A(12);
      n._ = A(192);
      n.K = [];
      n.Sb = A(114);
      n.S = ub({}, 4);
      n.$ = I({});
      n.i = I({});
      n.A = {};
      n.m = [];
      n.P = [];
      n.lb = [];
      n.nc = A(16);
      n.x = A(4);
      n.Q = A(4);
      n.Xb = [Fc];
      n.uc = [Fc];
      n.Kc = [0];
      n.fc = A(5);
      n.yc = A(128);
      n.vb = 0;
      n.X = 1;
      n.D = 0;
      n.Hb = -1;
      for (G = n.mb = 0; 4096 > G; ++G) n.a[G] = {};
      for (G = 0; 4 > G; ++G) n.K[G] = ub({}, 6);
      G = 1 << q.s;
      n.ab = G;
      for (var w = 0; G > 1 << w; ++w);
      n.$b = 2 * w;
      n.n = q.f;
      G = n.X;
      n.X = q.m;
      n.b && G != n.X && ((n.wb = -1), (n.b = null));
      n.eb = 0;
      n.fb = 3;
      n.Y = 2;
      n.y = 3;
      n.Gc = void 0 === e.disableEndMark;
      n.fc[0] = ((9 * (5 * n.Y + n.eb) + n.fb) << 24) >> 24;
      for (q = 0; 4 > q; ++q) n.fc[1 + q] = ((n.ab >> (8 * q)) << 24) >> 24;
      Ea(n.fc, 0, r.Mc, r.Yb, 5);
      r.Yb += 5;
      for (q = 0; 64 > q; q += 8)
        ((G = 255 & Z(l(u, q))), (r.Mc[r.Yb++] = (G << 24) >> 24));
      n.W = 0;
      n.oc = x;
      n.pc = 0;
      n.b ||
        ((x = {}),
        (u = 4),
        n.X || (u = 2),
        (x.qb = 2 < u),
        x.qb
          ? ((x.w = 0), (x.xb = 4), (x.R = 66560))
          : ((x.w = 2), (x.xb = 3), (x.R = 0)),
        (n.b = x));
      x = n.A;
      u = n.eb;
      q = n.fb;
      if (null == x.V || x.u != q || x.I != u)
        for (
          x.I = u,
            x.qc = (1 << u) - 1,
            x.u = q,
            q = 1 << (x.u + x.I),
            x.V = A(q),
            u = 0;
          q > u;
          ++u
        ) {
          G = x.V;
          w = u;
          var z = {};
          z = ((z.tb = A(768)), z);
          G[w] = z;
        }
      if (n.ab != n.wb || n.Hb != n.n)
        ((x = n.b),
          (u = n.ab),
          (q = n.n),
          1073741567 > u &&
            ((x.Fc = 16 + (q >> 1)),
            (w = u + 4096),
            (G = q + 274),
            (x.Bc = w),
            (x._b = G),
            (w = w + G + (~~((u + 4096 + q + 274) / 2) + 256)),
            (null == x.c || x.Kb != w) &&
              ((x.c = null), (x.Kb = w), (x.c = A(x.Kb))),
            (x.H = x.Kb - G),
            (x.ob = q),
            (q = u + 1),
            x.p != q && (x.L = A(2 * (x.p = q))),
            (q = 65536),
            x.qb &&
              ((q = u - 1),
              (q |= q >> 1),
              (q |= q >> 2),
              (q |= q >> 4),
              (q |= q >> 8),
              (q >>= 1),
              (q |= 65535),
              16777216 < q && (q >>= 1),
              (x.Ec = q),
              ++q,
              (q += x.R)),
            q != x.rc && (x.ub = A((x.rc = q)))),
          (n.wb = n.ab),
          (n.Hb = n.n));
      n.d.Ab = r;
      n.l = 0;
      for (r = n.J = 0; 4 > r; ++r) n.v[r] = 0;
      r = n.d;
      r.mc = Fc;
      r.xc = Fc;
      r.E = -1;
      r.Jb = 1;
      r.Oc = 0;
      Za(n.C);
      Za(n._);
      Za(n.bb);
      Za(n.hb);
      Za(n.Ub);
      Za(n.vc);
      Za(n.Sb);
      r = n.A;
      u = 1 << (r.u + r.I);
      for (x = 0; u > x; ++x) Za(r.V[x].tb);
      for (r = 0; 4 > r; ++r) Za(n.K[r].G);
      U(n.$, 1 << n.Y);
      U(n.i, 1 << n.Y);
      Za(n.S.G);
      n.N = 0;
      n.jb = 0;
      n.q = 0;
      n.s = 0;
      C(n);
      O(n);
      n.$.rb = n.n + 1 - 2;
      qb(n.$, 1 << n.Y);
      n.i.rb = n.n + 1 - 2;
      qb(n.i, 1 << n.Y);
      void (n.g = Fc);
      r = {};
      n = ((r.cb = n), (r.Z = null), (r.zc = 1), r);
      t.yb = n;
      return t;
    }
    function Ab(l, n) {
      l.Nb = F({});
      var t = g({}, n),
        r = l.Nb,
        x,
        u,
        z,
        C = '',
        E = [];
      for (x = 0; 5 > x; ++x) {
        if (((u = q(t)), -1 == u)) throw Error('truncated input');
        E[x] = (u << 24) >> 24;
      }
      n = { B: {}, e: {} };
      n.Gb = A(192);
      n.Zb = A(12);
      n.Cb = A(12);
      n.Db = A(12);
      n.Eb = A(12);
      n.pb = A(192);
      n.kb = A(4);
      n.kc = A(114);
      n.Fb = w({}, 4);
      n.Rb = rc({});
      n.sb = rc({});
      n.gb = {};
      for (x = 0; 4 > x; ++x) n.kb[x] = w({}, 6);
      var D;
      if (5 > E.length) x = 0;
      else {
        x = 255 & E[0];
        var y = x % 9;
        x = ~~(x / 9);
        var H = x % 5;
        var I = ~~(x / 5);
        for (D = x = 0; 4 > D; ++D) x += (255 & E[1 + D]) << (8 * D);
        if (!(E = 99999999 < x)) {
          if (8 < y || 4 < H || 4 < I) I = 0;
          else {
            E = n.gb;
            if (null == E.V || E.u != y || E.I != H)
              for (
                E.I = H,
                  E.qc = (1 << H) - 1,
                  E.u = y,
                  H = 1 << (E.u + E.I),
                  E.V = A(H),
                  y = 0;
                H > y;
                ++y
              ) {
                D = E.V;
                var J = y;
                var M = {};
                M = ((M.Ib = A(768)), M);
                D[J] = M;
              }
            I = 1 << I;
            I = (fa(n.Rb, I), fa(n.sb, I), (n.Dc = I - 1), 1);
          }
          E = !I;
        }
        E
          ? (x = 0)
          : 0 > x
            ? (x = 0)
            : (n.Ob != x &&
                ((n.Ob = x),
                (n.nb = Math.max(n.Ob, 1)),
                (x = n.B),
                (I = Math.max(n.nb, 4096)),
                (null != x.Lb && x.M == I) || (x.Lb = A(I)),
                (x.M = I),
                (x.o = 0),
                (x.h = 0)),
              (x = 1));
      }
      if (!x) throw Error('corrupted input');
      for (x = 0; 64 > x; x += 8) {
        if (((u = q(t)), -1 == u)) throw Error('truncated input');
        u = u.toString(16);
        1 == u.length && (u = '0' + u);
        C = u + '' + C;
      }
      /^0+$|^f+$/i.test(C)
        ? (l.Tb = L)
        : ((z = parseInt(C, 16)), (l.Tb = 4294967295 < z ? L : Q(z)));
      u = l.Tb;
      n.e.Ab = t;
      t = n.B;
      na(t);
      t.cc = null;
      n.B.cc = r;
      n.B.h = 0;
      n.B.o = 0;
      Za(n.Gb);
      Za(n.pb);
      Za(n.Zb);
      Za(n.Cb);
      Za(n.Db);
      Za(n.Eb);
      Za(n.kc);
      r = n.gb;
      z = 1 << (r.u + r.I);
      for (t = 0; z > t; ++t) Za(r.V[t].Ib);
      for (r = 0; 4 > r; ++r) Za(n.kb[r].G);
      Gb(n.Rb);
      Gb(n.sb);
      Za(n.Fb.G);
      r = n.e;
      r.Bb = 0;
      r.E = -1;
      for (t = 0; 5 > t; ++t) r.Bb = (r.Bb << 8) | q(r.Ab);
      n.U = 0;
      n.ib = 0;
      n.Jc = 0;
      n.Ic = 0;
      n.Qc = 0;
      n.Nc = u;
      n.g = Fc;
      n.jc = 0;
      r = {};
      n = ((r.Z = n), (r.cb = null), (r.zc = 1), r);
      l.yb = n;
      return l;
    }
    function Bb(g, l) {
      return g.c[g.f + g.o + l];
    }
    function cc(g, l, n, q) {
      g.T && g.o + l + q > g.h && (q = g.h - (g.o + l));
      ++n;
      var t = g.f + g.o + l;
      for (l = 0; q > l && g.c[t + l] == g.c[t + l - n]; ++l);
      return l;
    }
    function eb(g) {
      return g.h - g.o;
    }
    function ma(g) {
      var l, t, n;
      if (!g.T)
        for (; (n = -g.f + g.Kb - g.h), n; ) {
          var q = g.cc,
            r = n;
          if (
            ((l =
              q.Lc >= q.Yb
                ? -1
                : ((r = Math.min(r, q.Yb - q.Lc)),
                  Ea(q.Mc, q.Lc, g.c, g.f + g.h, r),
                  (q.Lc += r),
                  r)),
            -1 == l)
          )
            return (
              (g.zb = g.h),
              (t = g.f + g.zb),
              t > g.H && (g.zb = g.H - g.f),
              void (g.T = 1)
            );
          g.h += l;
          g.h >= g.o + g._b && (g.zb = g.h - g._b);
        }
    }
    function $a(g, l) {
      g.f += l;
      g.zb -= l;
      g.o -= l;
      g.h -= l;
    }
    function X(g) {
      var l;
      ++g.k >= g.p && (g.k = 0);
      ++g.o;
      if (g.o > g.zb) {
        var n = g.f + g.o;
        if (n > g.H) {
          var t = g.f + g.o - g.Bc;
          0 < t && --t;
          var q = g.f + g.h - t;
          for (n = 0; q > n; ++n) g.c[n] = g.c[t + n];
          g.f -= t;
        }
        ma(g);
      }
      1073741823 == g.o &&
        ((l = g.o - g.p), pb(g.L, 2 * g.p, l), pb(g.ub, g.rc, l), $a(g, l));
    }
    function pb(g, l, n) {
      var t;
      for (t = 0; l > t; ++t) {
        var q = g[t] || 0;
        n >= q ? (q = 0) : (q -= n);
        g[t] = q;
      }
    }
    function ka(g, l) {
      var n, t, q, r, x, u, w, z, E, C;
      do {
        if (g.h >= g.o + g.ob) var A = g.ob;
        else if (((A = g.h - g.o), g.xb > A)) {
          X(g);
          continue;
        }
        var D = g.o > g.p ? g.o - g.p : 0;
        var y = g.f + g.o;
        g.qb
          ? ((C = Xc[255 & g.c[y]] ^ (255 & g.c[y + 1])),
            (r = 1023 & C),
            (g.ub[r] = g.o),
            (C ^= (255 & g.c[y + 2]) << 8),
            (x = 65535 & C),
            (g.ub[1024 + x] = g.o),
            (u = (C ^ (Xc[255 & g.c[y + 3]] << 5)) & g.Ec))
          : (u = (255 & g.c[y]) ^ ((255 & g.c[y + 1]) << 8));
        var F = g.ub[g.R + u];
        g.ub[g.R + u] = g.o;
        var H = (g.k << 1) + 1;
        var I = g.k << 1;
        var J = (z = g.w);
        for (n = g.Fc; ; ) {
          if (D >= F || 0 == n--) {
            g.L[H] = g.L[I] = 0;
            break;
          }
          if (
            ((q = g.o - F),
            (t = (g.k >= q ? g.k - q : g.k - q + g.p) << 1),
            (E = g.f + F),
            (w = z > J ? J : z),
            g.c[E + w] == g.c[y + w])
          ) {
            for (; ++w != A && g.c[E + w] == g.c[y + w]; );
            if (w == A) {
              g.L[I] = g.L[t];
              g.L[H] = g.L[t + 1];
              break;
            }
          }
          (255 & g.c[y + w]) > (255 & g.c[E + w])
            ? ((g.L[I] = F), (I = t + 1), (F = g.L[I]), (z = w))
            : ((g.L[H] = F), (H = t), (F = g.L[H]), (J = w));
        }
        X(g);
      } while (0 != --l);
    }
    function na(g) {
      var l = g.o - g.h;
      if (l) {
        var n = g.cc;
        Ea(g.Lb, g.h, n.Mc, n.Yb, l);
        n.Yb += l;
        g.o >= g.M && (g.o = 0);
        g.h = g.o;
      }
    }
    function Ya(g, l) {
      l = g.o - l - 1;
      return (0 > l && (l += g.M), g.Lb[l]);
    }
    function S(g) {
      return ((g -= 2), 4 > g ? g : 3);
    }
    function sa(g) {
      return 4 > g ? 0 : 10 > g ? g - 3 : g - 6;
    }
    function hb(g) {
      if (!g.zc) throw Error('bad state');
      if (g.cb) {
        a: {
          var l = g.cb,
            n = g.cb.Xb,
            t = g.cb.uc,
            u = g.cb.Kc,
            w,
            A;
          n[0] = Fc;
          t[0] = Fc;
          u[0] = 1;
          if (l.oc) {
            l.b.cc = l.oc;
            var D = l.b;
            D.f = 0;
            D.o = 0;
            D.h = 0;
            D.T = 0;
            ma(D);
            D.k = 0;
            $a(D, -1);
            l.W = 1;
            l.oc = null;
          }
          if (!l.pc) {
            l.pc = 1;
            var y = (D = l.g);
            if (y[0] == Fc[0] && y[1] == Fc[1]) {
              if (!eb(l.b)) {
                jb(l, Z(l.g));
                break a;
              }
              Ga(l);
              var F = Z(l.g) & l.y;
              rb(l.d, l.C, (l.l << 4) + F, 0);
              l.l = sa(l.l);
              y = Bb(l.b, -l.s);
              M(z(l.A, Z(l.g), l.J), l.d, y);
              l.J = y;
              --l.s;
              l.g = r(l.g, Jd);
            }
            if (eb(l.b))
              for (;;) {
                if (
                  ((w = bb(l, Z(l.g))),
                  (A = l.mb),
                  (F = Z(l.g) & l.y),
                  (y = (l.l << 4) + F),
                  1 == w && -1 == A)
                ) {
                  rb(l.d, l.C, y, 0);
                  y = Bb(l.b, -l.s);
                  var H = z(l.A, Z(l.g), l.J);
                  if (7 > l.l) M(H, l.d, y);
                  else {
                    var I = Bb(l.b, -l.v[0] - 1 - l.s);
                    var K = void 0;
                    var N;
                    var U = l.d;
                    var da = I,
                      ka = y,
                      la = 1,
                      ja = 1;
                    for (N = 7; 0 <= N; --N) {
                      var ha = (ka >> N) & 1;
                      I = ja;
                      la &&
                        ((K = (da >> N) & 1),
                        (I += (1 + K) << 8),
                        (la = K == ha));
                      rb(U, H.tb, I, ha);
                      ja = (ja << 1) | ha;
                    }
                  }
                  l.J = y;
                  l.l = sa(l.l);
                } else {
                  if ((rb(l.d, l.C, y, 1), 4 > A)) {
                    if (
                      (rb(l.d, l.bb, l.l, 1),
                      A
                        ? (rb(l.d, l.hb, l.l, 1),
                          1 == A
                            ? rb(l.d, l.Ub, l.l, 0)
                            : (rb(l.d, l.Ub, l.l, 1),
                              rb(l.d, l.vc, l.l, A - 2)))
                        : (rb(l.d, l.hb, l.l, 0),
                          1 == w ? rb(l.d, l._, y, 0) : rb(l.d, l._, y, 1)),
                      1 == w
                        ? (l.l = 7 > l.l ? 9 : 11)
                        : (ya(l.i, l.d, w - 2, F), (l.l = 7 > l.l ? 8 : 11)),
                      (y = l.v[A]),
                      0 != A)
                    ) {
                      for (K = A; 1 <= K; --K) l.v[K] = l.v[K - 1];
                      l.v[0] = y;
                    }
                  } else {
                    rb(l.d, l.bb, l.l, 0);
                    l.l = 7 > l.l ? 7 : 10;
                    ya(l.$, l.d, w - 2, F);
                    A -= 4;
                    K = aa(A);
                    y = S(w);
                    Y(l.K[y], l.d, K);
                    if (4 <= K)
                      if (
                        ((U = (K >> 1) - 1),
                        (H = (2 | (1 & K)) << U),
                        (I = A - H),
                        14 > K)
                      )
                        for (
                          y = l.Sb,
                            K = H - K - 1,
                            H = l.d,
                            ha = I,
                            da = 1,
                            I = 0;
                          U > I;
                          ++I
                        )
                          ((N = 1 & ha),
                            rb(H, y, K + da, N),
                            (da = (da << 1) | N),
                            (ha >>= 1));
                      else
                        (wb(l.d, I >> 4, U - 4), Eb(l.S, l.d, 15 & I), ++l.Qb);
                    y = A;
                    for (K = 3; 1 <= K; --K) l.v[K] = l.v[K - 1];
                    l.v[0] = y;
                    ++l.Mb;
                  }
                  l.J = Bb(l.b, w - 1 - l.s);
                }
                if (((l.s -= w), (l.g = r(l.g, Q(w))), !l.s)) {
                  128 <= l.Mb && C(l);
                  16 <= l.Qb && O(l);
                  n[0] = l.g;
                  y = l.d;
                  y = r(r(Q(y.Jb), y.mc), [4, 0]);
                  if (((t[0] = y), !eb(l.b))) {
                    jb(l, Z(l.g));
                    break a;
                  }
                  y = l.g;
                  y = J(y[0] - D[0], y[1] - D[1]);
                  if (0 <= E(y, [4096, 0])) {
                    l.pc = 0;
                    u[0] = 0;
                    break a;
                  }
                }
              }
            else jb(l, Z(l.g));
          }
        }
        g.Pb = g.cb.Xb[0];
        g.cb.Kc[0] && ((w = g.cb), ea(w), (w.d.Ab = null), (g.zc = 0));
      } else {
        a: {
          w = g.Z;
          if (((K = Z(w.g) & w.Dc), Va(w.e, w.Gb, (w.U << 4) + K))) {
            if (Va(w.e, w.Zb, w.U))
              ((l = 0),
                Va(w.e, w.Cb, w.U)
                  ? (Va(w.e, w.Db, w.U)
                      ? (Va(w.e, w.Eb, w.U)
                          ? ((y = w.Qc), (w.Qc = w.Ic))
                          : (y = w.Ic),
                        (w.Ic = w.Jc))
                      : (y = w.Jc),
                    (w.Jc = w.ib),
                    (w.ib = y))
                  : Va(w.e, w.pb, (w.U << 4) + K) ||
                    ((w.U = 7 > w.U ? 9 : 11), (l = 1)),
                l || ((l = gb(w.sb, w.e, K) + 2), (w.U = 7 > w.U ? 8 : 11)));
            else if (
              ((w.Qc = w.Ic),
              (w.Ic = w.Jc),
              (w.Jc = w.ib),
              (l = 2 + gb(w.Rb, w.e, K)),
              (w.U = 7 > w.U ? 7 : 10),
              (D = oa(w.kb[S(l)], w.e)),
              4 <= D)
            )
              if (((n = (D >> 1) - 1), (w.ib = (2 | (1 & D)) << n), 14 > D)) {
                A = w.ib;
                F = w.kc;
                t = w.ib - D - 1;
                u = w.e;
                K = 1;
                for (y = H = 0; n > y; ++y)
                  ((D = Va(u, F, t + K)), (K <<= 1), (K += D), (H |= D << y));
                w.ib = A + H;
              } else {
                A = w.ib;
                F = w.e;
                t = 0;
                for (n -= 4; 0 != n; --n)
                  ((F.E >>>= 1),
                    (u = (F.Bb - F.E) >>> 31),
                    (F.Bb -= F.E & (u - 1)),
                    (t = (t << 1) | (1 - u)),
                    -16777216 & F.E ||
                      ((F.Bb = (F.Bb << 8) | q(F.Ab)), (F.E <<= 8)));
                w.ib = A + (t << 4);
                A = w.ib;
                F = w.Fb;
                n = w.e;
                D = 1;
                for (u = y = 0; F.F > u; ++u)
                  ((t = Va(n, F.G, D)), (D <<= 1), (D += t), (y |= t << u));
                if (((w.ib = A + y), 0 > w.ib)) {
                  w = -1 == w.ib ? 1 : -1;
                  break a;
                }
              }
            else w.ib = D;
            if (0 <= E(Q(w.ib), w.g) || w.ib >= w.nb) {
              w = -1;
              break a;
            }
            A = w.B;
            F = l;
            n = A.o - w.ib - 1;
            for (0 > n && (n += A.M); 0 != F; --F)
              (n >= A.M && (n = 0),
                (A.Lb[A.o++] = A.Lb[n++]),
                A.o >= A.M && na(A));
            w.g = r(w.g, Q(l));
            w.jc = Ya(w.B, 0);
          } else {
            A = w.gb;
            F = Z(w.g);
            A = A.V[((F & A.qc) << A.u) + ((255 & w.jc) >>> (8 - A.u))];
            if (7 > w.U) {
              F = w.e;
              l = 1;
              do l = (l << 1) | Va(F, A.Ib, l);
              while (256 > l);
              A = (l << 24) >> 24;
            } else {
              F = w.e;
              l = Ya(w.B, w.ib);
              n = 1;
              do
                if (
                  ((u = (l >> 7) & 1),
                  (l <<= 1),
                  (t = Va(F, A.Ib, ((1 + u) << 8) + n)),
                  (n = (n << 1) | t),
                  u != t)
                ) {
                  for (; 256 > n; ) n = (n << 1) | Va(F, A.Ib, n);
                  break;
                }
              while (256 > n);
              A = (n << 24) >> 24;
            }
            w.jc = A;
            A = w.B;
            F = w.jc;
            A.Lb[A.o++] = F;
            A.o >= A.M && na(A);
            w.U = sa(w.U);
            w.g = r(w.g, Jd);
          }
          w = 0;
        }
        if (-1 == w) throw Error('corrupted input');
        g.Pb = L;
        g.Pc = g.Z.g;
        if (w || (0 <= E(g.Z.Nc, Fc) && 0 <= E(g.Z.g, g.Z.Nc)))
          (na(g.Z.B),
            (w = g.Z.B),
            na(w),
            (w.cc = null),
            (g.Z.e.Ab = null),
            (g.zc = 0));
      }
      return g.zc;
    }
    function fa(g, l) {
      for (; l > g.O; ++g.O) ((g.ec[g.O] = w({}, 3)), (g.hc[g.O] = w({}, 3)));
    }
    function gb(g, l, n) {
      return Va(l, g.wc, 0)
        ? 8 + (Va(l, g.wc, 1) ? 8 + oa(g.tc, l) : oa(g.hc[n], l))
        : oa(g.ec[n], l);
    }
    function rc(g) {
      return (
        (g.wc = A(2)),
        (g.ec = A(16)),
        (g.hc = A(16)),
        (g.tc = w({}, 8)),
        (g.O = 0),
        g
      );
    }
    function Gb(g) {
      Za(g.wc);
      for (var l = 0; g.O > l; ++l) (Za(g.ec[l].G), Za(g.hc[l].G));
      Za(g.tc.G);
    }
    function xa(g, l) {
      g.jb = l;
      var n = g.a[l].r;
      var t = g.a[l].j;
      do {
        if (g.a[l].t) {
          var q = g.a[n];
          q.j = -1;
          q.t = 0;
          g.a[n].r = n - 1;
          g.a[l].Ac &&
            ((g.a[n - 1].t = 0),
            (g.a[n - 1].r = g.a[l].r2),
            (g.a[n - 1].j = g.a[l].j2));
        }
        var r = n;
        q = t;
        t = g.a[r].j;
        n = g.a[r].r;
        g.a[r].j = q;
        g.a[r].r = l;
        l = r;
      } while (0 < l);
      return ((g.mb = g.a[0].j), (g.q = g.a[0].r));
    }
    function O(g) {
      for (var l = 0; 16 > l; ++l) {
        var n = g.nc,
          t = l,
          q,
          r = g.S,
          u = l,
          w = 1,
          z = 0;
        for (q = r.F; 0 != q; --q) {
          var A = 1 & u;
          u >>>= 1;
          z += sd(r.G[w], A);
          w = (w << 1) | A;
        }
        n[t] = z;
      }
      g.Qb = 0;
    }
    function C(g) {
      var l;
      for (l = 4; 128 > l; ++l) {
        var n = aa(l);
        var t = (n >> 1) - 1;
        var q = (2 | (1 & n)) << t;
        var r = g.yc;
        for (var u = l, w, z = l - q, A = 1, y = 0; 0 != t; --t)
          ((w = 1 & z),
            (z >>>= 1),
            (y += mb[(2047 & ((g.Sb[q - n - 1 + A] - w) ^ -w)) >>> 2]),
            (A = (A << 1) | w));
        r[u] = y;
      }
      for (q = 0; 4 > q; ++q) {
        l = g.K[q];
        r = q << 6;
        for (n = 0; g.$b > n; ++n) g.P[r + n] = Jb(l, n);
        for (n = 14; g.$b > n; ++n) g.P[r + n] += ((n >> 1) - 1 - 4) << 6;
        n = 128 * q;
        for (l = 0; 4 > l; ++l) g.lb[n + l] = g.P[r + l];
        for (; 128 > l; ++l) g.lb[n + l] = g.P[r + aa(l)] + g.yc[l];
      }
      g.Mb = 0;
    }
    function jb(g, l) {
      ea(g);
      l &= g.y;
      g.Gc &&
        (rb(g.d, g.C, (g.l << 4) + l, 1),
        rb(g.d, g.bb, g.l, 0),
        (g.l = 7 > g.l ? 7 : 10),
        ya(g.$, g.d, 0, l),
        (l = S(2)),
        Y(g.K[l], g.d, 63),
        wb(g.d, 67108863, 26),
        Eb(g.S, g.d, 15));
      for (l = 0; 5 > l; ++l) la(g.d);
    }
    function bb(g, l) {
      var n,
        t,
        q,
        r,
        u,
        w,
        x,
        A,
        y,
        E,
        C,
        F,
        H,
        I,
        J,
        K,
        L,
        M,
        N,
        Q,
        S,
        O,
        U,
        Y,
        Z,
        aa,
        da,
        la;
      if (g.jb != g.q)
        return (
          (E = g.a[g.q].r - g.q),
          (g.mb = g.a[g.q].j),
          (g.q = g.a[g.q].r),
          E
        );
      if (
        ((g.q = g.jb = 0),
        g.N ? ((y = g.vb), (g.N = 0)) : (y = Ga(g)),
        (E = g.D),
        (L = eb(g.b) + 1),
        2 > L)
      )
        return ((g.mb = -1), 1);
      273 < L && (L = 273);
      for (w = x = 0; 4 > w; ++w)
        ((g.x[w] = g.v[w]),
          (g.Q[w] = cc(g.b, -1, g.x[w], 273)),
          g.Q[w] > g.Q[x] && (x = w));
      if (g.Q[x] >= g.n)
        return (
          (g.mb = x),
          (E = g.Q[x]),
          (l = E - 1),
          0 < l && (ka(g.b, l), (g.s += l)),
          E
        );
      if (y >= g.n)
        return (
          (g.mb = g.m[E - 1] + 4),
          (l = y - 1),
          0 < l && (ka(g.b, l), (g.s += l)),
          y
        );
      if (
        ((u = Bb(g.b, -1)),
        (I = Bb(g.b, -g.v[0] - 1 - 1)),
        2 > y && u != I && 2 > g.Q[x])
      )
        return ((g.mb = -1), 1);
      g.a[0].Hc = g.l;
      var ea = l & g.y;
      g.a[1].z =
        mb[g.C[(g.l << 4) + ea] >>> 2] + D(z(g.A, l, g.J), 7 <= g.l, I, u);
      var ja = g.a[1];
      ja.j = -1;
      ja.t = 0;
      ja = mb[(2048 - g.C[(g.l << 4) + ea]) >>> 2];
      var ma = ja + mb[(2048 - g.bb[g.l]) >>> 2];
      if (I == u) {
        var na = g.l;
        na = ma + (mb[g.hb[na] >>> 2] + mb[g._[(na << 4) + ea] >>> 2]);
        g.a[1].z > na && ((g.a[1].z = na), (w = g.a[1]), (w.j = 0), (w.t = 0));
      }
      if (((A = y >= g.Q[x] ? y : g.Q[x]), 2 > A))
        return ((g.mb = g.a[1].j), 1);
      g.a[1].r = 0;
      g.a[0].bc = g.x[0];
      g.a[0].ac = g.x[1];
      g.a[0].dc = g.x[2];
      g.a[0].lc = g.x[3];
      x = A;
      do g.a[x--].z = 268435455;
      while (2 <= x);
      for (w = 0; 4 > w; ++w)
        if (((H = g.Q[w]), !(2 > H))) {
          var oa = ma + Fa(g, w, g.l, ea);
          do {
            var fa = oa + g.i.Cc[272 * ea + (H - 2)];
            var X = g.a[H];
            X.z > fa && ((X.z = fa), (X.r = 0), (X.j = w), (X.t = 0));
          } while (2 <= --H);
        }
      if (
        ((H = ja + mb[g.bb[g.l] >>> 2]),
        (x = 2 <= g.Q[0] ? g.Q[0] + 1 : 2),
        y >= x)
      ) {
        for (y = 0; x > g.m[y]; ) y += 2;
        for (
          ;
          (n = g.m[y + 1]),
            (fa = H + Oa(g, n, x, ea)),
            (X = g.a[x]),
            X.z > fa && ((X.z = fa), (X.r = 0), (X.j = n + 4), (X.t = 0)),
            x != g.m[y] || ((y += 2), y != E);
          ++x
        );
      }
      for (n = 0; ; ) {
        if ((++n, n == A)) return xa(g, n);
        if (((J = Ga(g)), (E = g.D), J >= g.n))
          return ((g.vb = J), (g.N = 1), xa(g, n));
        if (
          (++l,
          (S = g.a[n].r),
          g.a[n].t
            ? (--S,
              g.a[n].Ac
                ? ((O = g.a[g.a[n].r2].Hc),
                  (O = 4 > g.a[n].j2 ? (7 > O ? 8 : 11) : 7 > O ? 7 : 10))
                : (O = g.a[S].Hc),
              (O = sa(O)))
            : (O = g.a[S].Hc),
          S == n - 1
            ? (O = g.a[n].j ? sa(O) : 7 > O ? 9 : 11)
            : (g.a[n].t && g.a[n].Ac
                ? ((S = g.a[n].r2), (Q = g.a[n].j2), (O = 7 > O ? 8 : 11))
                : ((Q = g.a[n].j),
                  (O = 4 > Q ? (7 > O ? 8 : 11) : 7 > O ? 7 : 10)),
              (N = g.a[S]),
              4 > Q
                ? Q
                  ? 1 == Q
                    ? ((g.x[0] = N.ac),
                      (g.x[1] = N.bc),
                      (g.x[2] = N.dc),
                      (g.x[3] = N.lc))
                    : 2 == Q
                      ? ((g.x[0] = N.dc),
                        (g.x[1] = N.bc),
                        (g.x[2] = N.ac),
                        (g.x[3] = N.lc))
                      : ((g.x[0] = N.lc),
                        (g.x[1] = N.bc),
                        (g.x[2] = N.ac),
                        (g.x[3] = N.dc))
                  : ((g.x[0] = N.bc),
                    (g.x[1] = N.ac),
                    (g.x[2] = N.dc),
                    (g.x[3] = N.lc))
                : ((g.x[0] = Q - 4),
                  (g.x[1] = N.bc),
                  (g.x[2] = N.ac),
                  (g.x[3] = N.dc))),
          (g.a[n].Hc = O),
          (g.a[n].bc = g.x[0]),
          (g.a[n].ac = g.x[1]),
          (g.a[n].dc = g.x[2]),
          (g.a[n].lc = g.x[3]),
          (r = g.a[n].z),
          (u = Bb(g.b, -1)),
          (I = Bb(g.b, -g.x[0] - 1 - 1)),
          (ea = l & g.y),
          (t =
            r +
            mb[g.C[(O << 4) + ea] >>> 2] +
            D(z(g.A, l, Bb(g.b, -2)), 7 <= O, I, u)),
          (K = g.a[n + 1]),
          (y = 0),
          K.z > t && ((K.z = t), (K.r = n), (K.j = -1), (K.t = 0), (y = 1)),
          (ja = r + mb[(2048 - g.C[(O << 4) + ea]) >>> 2]),
          (ma = ja + mb[(2048 - g.bb[O]) >>> 2]),
          I != u ||
            (n > K.r && !K.j) ||
            ((na = ma + (mb[g.hb[O] >>> 2] + mb[g._[(O << 4) + ea] >>> 2])),
            K.z >= na &&
              ((K.z = na), (K.r = n), (K.j = 0), (K.t = 0), (y = 1))),
          (M = eb(g.b) + 1),
          (M = M > 4095 - n ? 4095 - n : M),
          (L = M),
          !(2 > L))
        ) {
          if (
            (L > g.n && (L = g.n),
            !y &&
              I != u &&
              ((U = Math.min(M - 1, g.n)), (F = cc(g.b, 0, g.x[0], U)), 2 <= F))
          ) {
            w = sa(O);
            X = (l + 1) & g.y;
            fa =
              t +
              mb[(2048 - g.C[(w << 4) + X]) >>> 2] +
              mb[(2048 - g.bb[w]) >>> 2];
            for (oa = n + 1 + F; oa > A; ) g.a[++A].z = 268435455;
            fa += ((Y = g.i.Cc[272 * X + (F - 2)]), Y + Fa(g, 0, w, X));
            X = g.a[oa];
            X.z > fa &&
              ((X.z = fa), (X.r = n + 1), (X.j = 0), (X.t = 1), (X.Ac = 0));
          }
          x = 2;
          for (y = 0; 4 > y; ++y)
            if (((C = cc(g.b, -1, g.x[y], L)), !(2 > C))) {
              H = C;
              do {
                for (; n + C > A; ) g.a[++A].z = 268435455;
                fa =
                  ma + ((Z = g.i.Cc[272 * ea + (C - 2)]), Z + Fa(g, y, O, ea));
                X = g.a[n + C];
                X.z > fa && ((X.z = fa), (X.r = n), (X.j = y), (X.t = 0));
              } while (2 <= --C);
              if (
                ((C = H),
                y || (x = C + 1),
                M > C &&
                  ((U = Math.min(M - 1 - C, g.n)),
                  (F = cc(g.b, C, g.x[y], U)),
                  2 <= F))
              ) {
                w = 7 > O ? 8 : 11;
                X = (l + C) & g.y;
                fa =
                  ma +
                  ((aa = g.i.Cc[272 * ea + (C - 2)]), aa + Fa(g, y, O, ea)) +
                  mb[g.C[(w << 4) + X] >>> 2] +
                  D(
                    z(g.A, l + C, Bb(g.b, C - 1 - 1)),
                    1,
                    Bb(g.b, C - 1 - (g.x[y] + 1)),
                    Bb(g.b, C - 1),
                  );
                w = sa(w);
                X = (l + C + 1) & g.y;
                fa += mb[(2048 - g.C[(w << 4) + X]) >>> 2];
                fa += mb[(2048 - g.bb[w]) >>> 2];
                for (oa = C + 1 + F; n + oa > A; ) g.a[++A].z = 268435455;
                fa += ((da = g.i.Cc[272 * X + (F - 2)]), da + Fa(g, 0, w, X));
                X = g.a[n + oa];
                X.z > fa &&
                  ((X.z = fa),
                  (X.r = n + C + 1),
                  (X.j = 0),
                  (X.t = 1),
                  (X.Ac = 1),
                  (X.r2 = n),
                  (X.j2 = y));
              }
            }
          if (J > L) {
            J = L;
            for (E = 0; J > g.m[E]; E += 2);
            g.m[E] = J;
            E += 2;
          }
          if (J >= x) {
            for (H = ja + mb[g.bb[O] >>> 2]; n + J > A; )
              g.a[++A].z = 268435455;
            for (y = 0; x > g.m[y]; ) y += 2;
            for (C = x; ; ++C)
              if (
                ((q = g.m[y + 1]),
                (fa = H + Oa(g, q, C, ea)),
                (X = g.a[n + C]),
                X.z > fa && ((X.z = fa), (X.r = n), (X.j = q + 4), (X.t = 0)),
                C == g.m[y])
              ) {
                if (
                  M > C &&
                  ((U = Math.min(M - 1 - C, g.n)),
                  (F = cc(g.b, C, q, U)),
                  2 <= F)
                ) {
                  w = 7 > O ? 7 : 10;
                  X = (l + C) & g.y;
                  fa =
                    fa +
                    mb[g.C[(w << 4) + X] >>> 2] +
                    D(
                      z(g.A, l + C, Bb(g.b, C - 1 - 1)),
                      1,
                      Bb(g.b, C - (q + 1) - 1),
                      Bb(g.b, C - 1),
                    );
                  w = sa(w);
                  X = (l + C + 1) & g.y;
                  fa += mb[(2048 - g.C[(w << 4) + X]) >>> 2];
                  fa += mb[(2048 - g.bb[w]) >>> 2];
                  for (oa = C + 1 + F; n + oa > A; ) g.a[++A].z = 268435455;
                  fa += ((la = g.i.Cc[272 * X + (F - 2)]), la + Fa(g, 0, w, X));
                  X = g.a[n + oa];
                  X.z > fa &&
                    ((X.z = fa),
                    (X.r = n + C + 1),
                    (X.j = 0),
                    (X.t = 1),
                    (X.Ac = 1),
                    (X.r2 = n),
                    (X.j2 = q + 4));
                }
                if (((y += 2), y == E)) break;
              }
          }
        }
      }
    }
    function Oa(g, l, q, r) {
      var t,
        u = S(q);
      return (
        (t =
          128 > l
            ? g.lb[128 * u + l]
            : g.P[
                (u << 6) +
                  (131072 > l
                    ? n[l >> 6] + 12
                    : 134217728 > l
                      ? n[l >> 16] + 32
                      : n[l >> 26] + 52)
              ] + g.nc[15 & l]),
        t + g.$.Cc[272 * r + (q - 2)]
      );
    }
    function Fa(g, l, n, q) {
      var t;
      return (
        l
          ? ((t = mb[(2048 - g.hb[n]) >>> 2]),
            1 == l
              ? (t += mb[g.Ub[n] >>> 2])
              : ((t += mb[(2048 - g.Ub[n]) >>> 2]), (t += sd(g.vc[n], l - 2))))
          : ((t = mb[g.hb[n] >>> 2]),
            (t += mb[(2048 - g._[(n << 4) + q]) >>> 2])),
        t
      );
    }
    function Ga(g) {
      var l = 0;
      a: {
        var n = g.b;
        var q = g.m,
          t,
          r,
          u,
          w,
          z,
          A,
          y,
          C;
        if (n.h >= n.o + n.ob) var E = n.ob;
        else if (((E = n.h - n.o), n.xb > E)) {
          n = (X(n), 0);
          break a;
        }
        var D = 0;
        var F = n.o > n.p ? n.o - n.p : 0;
        var H = n.f + n.o;
        var I = 1;
        var J = (z = 0);
        n.qb
          ? ((r = Xc[255 & n.c[H]] ^ (255 & n.c[H + 1])),
            (z = 1023 & r),
            (r ^= (255 & n.c[H + 2]) << 8),
            (J = 65535 & r),
            (A = (r ^ (Xc[255 & n.c[H + 3]] << 5)) & n.Ec))
          : (A = (255 & n.c[H]) ^ ((255 & n.c[H + 1]) << 8));
        r = n.ub[n.R + A] || 0;
        n.qb &&
          ((t = n.ub[z] || 0),
          (u = n.ub[1024 + J] || 0),
          (n.ub[z] = n.o),
          (n.ub[1024 + J] = n.o),
          t > F &&
            n.c[n.f + t] == n.c[H] &&
            ((q[D++] = I = 2), (q[D++] = n.o - t - 1)),
          u > F &&
            n.c[n.f + u] == n.c[H] &&
            (u == t && (D -= 2),
            (q[D++] = I = 3),
            (q[D++] = n.o - u - 1),
            (t = u)),
          0 != D && t == r && ((D -= 2), (I = 1)));
        n.ub[n.R + A] = n.o;
        A = (n.k << 1) + 1;
        var K = n.k << 1;
        z = J = n.w;
        0 != n.w &&
          r > F &&
          n.c[n.f + r + n.w] != n.c[H + n.w] &&
          ((q[D++] = I = n.w), (q[D++] = n.o - r - 1));
        for (t = n.Fc; ; ) {
          if (F >= r || 0 == t--) {
            n.L[A] = n.L[K] = 0;
            break;
          }
          if (
            ((w = n.o - r),
            (u = (n.k >= w ? n.k - w : n.k - w + n.p) << 1),
            (C = n.f + r),
            (y = J > z ? z : J),
            n.c[C + y] == n.c[H + y])
          ) {
            for (; ++y != E && n.c[C + y] == n.c[H + y]; );
            if (y > I && ((q[D++] = I = y), (q[D++] = w - 1), y == E)) {
              n.L[K] = n.L[u];
              n.L[A] = n.L[u + 1];
              break;
            }
          }
          (255 & n.c[H + y]) > (255 & n.c[C + y])
            ? ((n.L[K] = r), (K = u + 1), (r = n.L[K]), (J = y))
            : ((n.L[A] = r), (A = u), (r = n.L[A]), (z = y));
        }
        n = (X(n), D);
      }
      return (
        (g.D = n),
        0 < g.D &&
          ((l = g.m[g.D - 2]),
          l == g.n && (l += cc(g.b, l - 1, g.m[g.D - 1], 273 - l))),
        ++g.s,
        l
      );
    }
    function ea(g) {
      g.b && g.W && ((g.b.cc = null), (g.W = 0));
    }
    function aa(g) {
      return 2048 > g ? n[g] : 2097152 > g ? n[g >> 10] + 20 : n[g >> 20] + 40;
    }
    function U(g, l) {
      Za(g.db);
      for (var n = 0; l > n; ++n) (Za(g.Vb[n].G), Za(g.Wb[n].G));
      Za(g.ic.G);
    }
    function Mc(g, l, n, q, r) {
      var t;
      var u = mb[g.db[0] >>> 2];
      var w = mb[(2048 - g.db[0]) >>> 2];
      var x = w + mb[g.db[1] >>> 2];
      w += mb[(2048 - g.db[1]) >>> 2];
      for (t = 0; 8 > t; ++t) {
        if (t >= n) return;
        q[r + t] = u + Jb(g.Vb[l], t);
      }
      for (; 16 > t; ++t) {
        if (t >= n) return;
        q[r + t] = x + Jb(g.Wb[l], t - 8);
      }
      for (; n > t; ++t) q[r + t] = w + Jb(g.ic, t - 8 - 8);
    }
    function ya(g, l, n, q) {
      8 > n
        ? (rb(l, g.db, 0, 0), Y(g.Vb[q], l, n))
        : ((n -= 8),
          rb(l, g.db, 0, 1),
          8 > n
            ? (rb(l, g.db, 1, 0), Y(g.Wb[q], l, n))
            : (rb(l, g.db, 1, 1), Y(g.ic, l, n - 8)));
      0 == --g.sc[q] && (Mc(g, q, g.rb, g.Cc, 272 * q), (g.sc[q] = g.rb));
    }
    function I(g) {
      g.db = A(2);
      g.Vb = A(16);
      g.Wb = A(16);
      g.ic = ub({}, 8);
      for (var l = 0; 16 > l; ++l)
        ((g.Vb[l] = ub({}, 3)), (g.Wb[l] = ub({}, 3)));
      return ((g.Cc = []), (g.sc = []), g);
    }
    function qb(g, l) {
      for (var n = 0; l > n; ++n)
        (Mc(g, n, g.rb, g.Cc, 272 * n), (g.sc[n] = g.rb));
    }
    function z(g, l, n) {
      return g.V[((l & g.qc) << g.u) + ((255 & n) >>> (8 - g.u))];
    }
    function M(g, l, n) {
      var q,
        r = 1;
      for (q = 7; 0 <= q; --q) {
        var t = (n >> q) & 1;
        rb(l, g.tb, r, t);
        r = (r << 1) | t;
      }
    }
    function D(g, l, n, q) {
      var r,
        t,
        u = 1,
        w = 7,
        x = 0;
      if (l)
        for (; 0 <= w; --w)
          if (
            ((t = (n >> w) & 1),
            (r = (q >> w) & 1),
            (x += sd(g.tb[((1 + t) << 8) + u], r)),
            (u = (u << 1) | r),
            t != r)
          ) {
            --w;
            break;
          }
      for (; 0 <= w; --w)
        ((r = (q >> w) & 1), (x += sd(g.tb[u], r)), (u = (u << 1) | r));
      return x;
    }
    function w(g, l) {
      return ((g.F = l), (g.G = A(1 << l)), g);
    }
    function oa(g, l) {
      var n,
        q = 1;
      for (n = g.F; 0 != n; --n) q = (q << 1) + Va(l, g.G, q);
      return q - (1 << g.F);
    }
    function ub(g, l) {
      return ((g.F = l), (g.G = A(1 << l)), g);
    }
    function Y(g, l, n) {
      var q,
        r = 1;
      for (q = g.F; 0 != q; ) {
        --q;
        var t = (n >>> q) & 1;
        rb(l, g.G, r, t);
        r = (r << 1) | t;
      }
    }
    function Jb(g, l) {
      var n,
        q = 1,
        r = 0;
      for (n = g.F; 0 != n; ) {
        --n;
        var t = (l >>> n) & 1;
        r += sd(g.G[q], t);
        q = (q << 1) + t;
      }
      return r;
    }
    function Eb(g, l, n) {
      var q,
        r = 1;
      for (q = 0; g.F > q; ++q) {
        var t = 1 & n;
        rb(l, g.G, r, t);
        r = (r << 1) | t;
        n >>= 1;
      }
    }
    function Va(g, l, n) {
      var r,
        t = l[n];
      return (
        (r = (g.E >>> 11) * t),
        (-2147483648 ^ r) > (-2147483648 ^ g.Bb)
          ? ((g.E = r),
            (l[n] = ((t + ((2048 - t) >>> 5)) << 16) >> 16),
            -16777216 & g.E || ((g.Bb = (g.Bb << 8) | q(g.Ab)), (g.E <<= 8)),
            0)
          : ((g.E -= r),
            (g.Bb -= r),
            (l[n] = ((t - (t >>> 5)) << 16) >> 16),
            -16777216 & g.E || ((g.Bb = (g.Bb << 8) | q(g.Ab)), (g.E <<= 8)),
            1)
      );
    }
    function Za(g) {
      for (var l = g.length - 1; 0 <= l; --l) g[l] = 1024;
    }
    function rb(g, l, n, q) {
      var t = l[n];
      var u = (g.E >>> 11) * t;
      q
        ? ((g.xc = r(g.xc, y(Q(u), [4294967295, 0]))),
          (g.E -= u),
          (l[n] = ((t - (t >>> 5)) << 16) >> 16))
        : ((g.E = u), (l[n] = ((t + ((2048 - t) >>> 5)) << 16) >> 16));
      -16777216 & g.E || ((g.E <<= 8), la(g));
    }
    function wb(g, l, n) {
      for (--n; 0 <= n; --n)
        ((g.E >>>= 1),
          1 == ((l >>> n) & 1) && (g.xc = r(g.xc, Q(g.E))),
          -16777216 & g.E || ((g.E <<= 8), la(g)));
    }
    function la(g) {
      var n = g.xc;
      var q = 32,
        t;
      n =
        ((q &= 63),
        (t = l(n, q)),
        0 > n[1] && (t = r(t, da([2, 0], 63 - q))),
        t);
      q = Z(n);
      if (0 != q || 0 > E(g.xc, [4278190080, 0])) {
        g.mc = r(g.mc, Q(g.Jb));
        n = g.Oc;
        do ((t = g.Ab), (n += q), (t.Mc[t.Yb++] = (n << 24) >> 24), (n = 255));
        while (0 != --g.Jb);
        g.Oc = Z(g.xc) >>> 24;
      }
      ++g.Jb;
      g.xc = da(y(g.xc, [16777215, 0]), 8);
    }
    function sd(g, l) {
      return mb[(2047 & ((g - l) ^ -l)) >>> 2];
    }
    function lb(g) {
      for (
        var l, n, q, r = 0, t = 0, u = g.length, w = [], y = [];
        u > r;
        ++r, ++t
      ) {
        if (((l = 255 & g[r]), 128 & l))
          if (192 == (224 & l)) {
            if (r + 1 >= u || ((n = 255 & g[++r]), 128 != (192 & n))) return g;
            y[t] = ((31 & l) << 6) | (63 & n);
          } else {
            if (
              224 != (240 & l) ||
              r + 2 >= u ||
              ((n = 255 & g[++r]), 128 != (192 & n)) ||
              ((q = 255 & g[++r]), 128 != (192 & q))
            )
              return g;
            y[t] = ((15 & l) << 12) | ((63 & n) << 6) | (63 & q);
          }
        else {
          if (!l) return g;
          y[t] = l;
        }
        16383 == t && (w.push(String.fromCharCode.apply(String, y)), (t = -1));
      }
      return (
        0 < t && ((y.length = t), w.push(String.fromCharCode.apply(String, y))),
        w.join('')
      );
    }
    function Xb(g) {
      var l,
        n,
        q = [],
        r = 0,
        t = g.length;
      if ('object' == typeof g) return g;
      for (n = l = 0; t > n; ++n) q[l++] = g.charCodeAt(n);
      for (n = 0; t > n; ++n)
        ((g = q[n]),
          1 <= g && 127 >= g
            ? ++r
            : (r += !g || (128 <= g && 2047 >= g) ? 2 : 3));
      l = [];
      for (n = r = 0; t > n; ++n)
        ((g = q[n]),
          1 <= g && 127 >= g
            ? (l[r++] = (g << 24) >> 24)
            : !g || (128 <= g && 2047 >= g)
              ? ((l[r++] = ((192 | ((g >> 6) & 31)) << 24) >> 24),
                (l[r++] = ((128 | (63 & g)) << 24) >> 24))
              : ((l[r++] = ((224 | ((g >> 12) & 15)) << 24) >> 24),
                (l[r++] = ((128 | ((g >> 6) & 63)) << 24) >> 24),
                (l[r++] = ((128 | (63 & g)) << 24) >> 24)));
      return l;
    }
    function K(g) {
      return g[1] + g[0];
    }
    var ja = 'function' == typeof setImmediate ? setImmediate : setTimeout,
      sc = 4294967296,
      L = [4294967295, -sc],
      vb = [0, -9223372036854775808],
      Fc = [0, 0],
      Jd = [1, 0],
      Xc = (function () {
        var g,
          l,
          n = [];
        for (g = 0; 256 > g; ++g) {
          var q = g;
          for (l = 0; 8 > l; ++l)
            0 != (1 & q) ? (q = (q >>> 1) ^ -306674912) : (q >>>= 1);
          n[g] = q;
        }
        return n;
      })(),
      n = (function () {
        var g,
          l,
          n = 2,
          q = [0, 1];
        for (l = 2; 22 > l; ++l) {
          var r = 1 << ((l >> 1) - 1);
          for (g = 0; r > g; ++g, ++n) q[n] = (l << 24) >> 24;
        }
        return q;
      })(),
      mb = (function () {
        var g,
          l,
          n = [];
        for (l = 8; 0 <= l; --l) {
          var q = 1 << (9 - l - 1);
          for (g = 1 << (9 - l); g > q; ++q)
            n[q] = (l << 6) + (((g - q) << 6) >>> (9 - l - 1));
        }
        return n;
      })(),
      cb = (function () {
        var g = [
          { s: 16, f: 64, m: 0 },
          { s: 20, f: 64, m: 0 },
          { s: 19, f: 64, m: 1 },
          { s: 20, f: 64, m: 1 },
          { s: 21, f: 128, m: 1 },
          { s: 22, f: 128, m: 1 },
          { s: 23, f: 128, m: 1 },
          { s: 24, f: 255, m: 1 },
          { s: 25, f: 255, m: 1 },
        ];
        return function (l) {
          return g[l - 1] || g[6];
        };
      })();
    return (
      'undefined' == typeof onmessage ||
        ('undefined' != typeof window && void 0 !== window.document) ||
        !(function () {
          onmessage = function (g) {
            g &&
              g.gc &&
              (2 == g.gc.action
                ? e.decompress(g.gc.gc, g.gc.cbn)
                : 1 == g.gc.action && e.compress(g.gc.gc, g.gc.Rc, g.gc.cbn));
          };
        })(),
      {
        compress: function (g, l, n, q) {
          function r() {
            try {
              for (var g, l = new Date().getTime(); hb(w.c.yb); )
                if (
                  ((t = K(w.c.yb.Pb) / K(w.c.Tb)),
                  200 < new Date().getTime() - l)
                )
                  return (q(t), ja(r, 0), 0);
              q(1);
              g = H(w.c.Nb);
              ja(n.bind(null, g), 0);
            } catch (lc) {
              n(null, lc);
            }
          }
          var t,
            u,
            w = {},
            x = void 0 === n && void 0 === q;
          if (
            ('function' != typeof n && ((u = n), (n = q = 0)),
            (q =
              q ||
              function (g) {
                void 0 !== u && postMessage({ action: 3, cbn: u, result: g });
              }),
            (n =
              n ||
              function (g, l) {
                return void 0 !== u
                  ? postMessage({ action: 1, cbn: u, result: g, error: l })
                  : void 0;
              }),
            x)
          ) {
            for (w.c = N({}, Xb(g), cb(l)); hb(w.c.yb); );
            return H(w.c.Nb);
          }
          try {
            ((w.c = N({}, Xb(g), cb(l))), q(0));
          } catch (Ec) {
            return n(null, Ec);
          }
          ja(r, 0);
        },
        decompress: function (g, l, n) {
          function q() {
            try {
              for (var g, t = 0, w = new Date().getTime(); hb(u.d.yb); )
                if (0 == ++t % 1e3 && 200 < new Date().getTime() - w)
                  return (y && ((r = K(u.d.yb.Z.g) / x), n(r)), ja(q, 0), 0);
              n(1);
              g = lb(H(u.d.Nb));
              ja(l.bind(null, g), 0);
            } catch (zb) {
              l(null, zb);
            }
          }
          var r,
            t,
            u = {},
            w = void 0 === l && void 0 === n;
          if (
            ('function' != typeof l && ((t = l), (l = n = 0)),
            (n =
              n ||
              function (g) {
                void 0 !== t &&
                  postMessage({ action: 3, cbn: t, result: y ? g : -1 });
              }),
            (l =
              l ||
              function (g, l) {
                return void 0 !== t
                  ? postMessage({ action: 2, cbn: t, result: g, error: l })
                  : void 0;
              }),
            w)
          ) {
            for (u.d = Ab({}, g); hb(u.d.yb); );
            return lb(H(u.d.Nb));
          }
          try {
            u.d = Ab({}, g);
            var x = K(u.d.Tb);
            var y = -1 < x;
            n(0);
          } catch (Kb) {
            return l(null, Kb);
          }
          ja(q, 0);
        },
      }
    );
  })();
  this.LZMA = this.LZMA_WORKER = e;
}
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var saveAs =
    saveAs ||
    (function (A) {
      if (
        !(
          'undefined' === typeof A ||
          ('undefined' !== typeof navigator &&
            /MSIE [1-9]\./.test(navigator.userAgent))
        )
      ) {
        var r = A.document.createElementNS('http://www.w3.org/1999/xhtml', 'a'),
          y = 'download' in r,
          E = /constructor/i.test(A.HTMLElement) || A.safari,
          J = /CriOS\/[\d]+/.test(navigator.userAgent),
          Q = function (g) {
            (A.setImmediate || A.setTimeout)(function () {
              throw g;
            }, 0);
          },
          Z = function (g) {
            setTimeout(function () {
              'string' === typeof g
                ? (A.URL || A.webkitURL || A).revokeObjectURL(g)
                : g.remove();
            }, 4e4);
          },
          u = function (g) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
              g.type,
            )
              ? new Blob([String.fromCharCode(65279), g], { type: g.type })
              : g;
          },
          da = function (g, l, F) {
            F || (g = u(g));
            var q = this,
              da = 'application/octet-stream' === g.type,
              N = function () {
                var g = ['writestart', 'progress', 'write', 'writeend'];
                g = [].concat(g);
                for (var l = g.length; l--; ) {
                  var r = q['on' + g[l]];
                  if ('function' === typeof r)
                    try {
                      r.call(q, q);
                    } catch (ma) {
                      Q(ma);
                    }
                }
              };
            q.readyState = q.INIT;
            if (y) {
              var Ab = (A.URL || A.webkitURL || A).createObjectURL(g);
              setTimeout(function () {
                r.href = Ab;
                r.download = l;
                var g = new MouseEvent('click');
                r.dispatchEvent(g);
                N();
                Z(Ab);
                q.readyState = q.DONE;
              });
            } else
              (function () {
                if ((J || (da && E)) && A.FileReader) {
                  var l = new FileReader();
                  l.onloadend = function () {
                    var g = J
                      ? l.result
                      : l.result.replace(
                          /^data:[^;]*;/,
                          'data:attachment/file;',
                        );
                    A.open(g, '_blank') || (A.location.href = g);
                    q.readyState = q.DONE;
                    N();
                  };
                  l.readAsDataURL(g);
                  q.readyState = q.INIT;
                } else
                  (Ab || (Ab = (A.URL || A.webkitURL || A).createObjectURL(g)),
                    da
                      ? (A.location.href = Ab)
                      : A.open(Ab, '_blank') || (A.location.href = Ab),
                    (q.readyState = q.DONE),
                    N(),
                    Z(Ab));
              })();
          },
          l = da.prototype;
        if ('undefined' !== typeof navigator && navigator.msSaveOrOpenBlob)
          return function (g, l, r) {
            l = l || g.name || 'download';
            r || (g = u(g));
            return navigator.msSaveOrOpenBlob(g, l);
          };
        l.abort = function () {};
        l.readyState = l.INIT = 0;
        l.WRITING = 1;
        l.DONE = 2;
        l.error =
          l.onwritestart =
          l.onprogress =
          l.onwrite =
          l.onabort =
          l.onerror =
          l.onwriteend =
            null;
        return function (g, l, r) {
          return new da(g, l || g.name || 'download', r);
        };
      }
    })(
      ('undefined' !== typeof self && self) ||
        ('undefined' !== typeof window && window) ||
        this.content,
    );
  'undefined' !== typeof module && module.exports
    ? (module.exports.saveAs = saveAs)
    : 'undefined' !== typeof define &&
      null !== define &&
      null !== define.amd &&
      define('FileSaver.js', function () {
        return saveAs;
      });
}
'function' === typeof define &&
  define.__amd &&
  ((define.amd = define.__amd), delete define.__amd);
