/*
 howler.js v2.2.4 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function (A) {
  var t = 0;
  return function () {
    return t < A.length ? { done: !1, value: A[t++] } : { done: !0 };
  };
};
$jscomp.arrayIterator = function (A) {
  return { next: $jscomp.arrayIteratorImpl(A) };
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || 'function' == typeof Object.defineProperties
    ? Object.defineProperty
    : function (A, t, E) {
        A != Array.prototype && A != Object.prototype && (A[t] = E.value);
      };
$jscomp.getGlobal = function (A) {
  A = [
    'object' == typeof window && window,
    'object' == typeof self && self,
    'object' == typeof global && global,
    A,
  ];
  for (var t = 0; t < A.length; ++t) {
    var E = A[t];
    if (E && E.Math == Math) return E;
  }
  throw Error('Cannot find global object');
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.SymbolClass = function (A, t) {
  this.$jscomp$symbol$id_ = A;
  $jscomp.defineProperty(this, 'description', {
    configurable: !0,
    writable: !0,
    value: t,
  });
};
$jscomp.SymbolClass.prototype.toString = function () {
  return this.$jscomp$symbol$id_;
};
$jscomp.Symbol = (function () {
  function A(E) {
    if (this instanceof A) throw new TypeError('Symbol is not a constructor');
    return new $jscomp.SymbolClass(
      $jscomp.SYMBOL_PREFIX + (E || '') + '_' + t++,
      E,
    );
  }
  var t = 0;
  return A;
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var A = $jscomp.global.Symbol.iterator;
  A ||
    (A = $jscomp.global.Symbol.iterator =
      $jscomp.global.Symbol('Symbol.iterator'));
  'function' != typeof Array.prototype[A] &&
    $jscomp.defineProperty(Array.prototype, A, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.initSymbolAsyncIterator = function () {
  $jscomp.initSymbol();
  var A = $jscomp.global.Symbol.asyncIterator;
  A ||
    (A = $jscomp.global.Symbol.asyncIterator =
      $jscomp.global.Symbol('Symbol.asyncIterator'));
  $jscomp.initSymbolAsyncIterator = function () {};
};
$jscomp.iteratorPrototype = function (A) {
  $jscomp.initSymbolIterator();
  A = { next: A };
  A[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return A;
};
$jscomp.iteratorFromArray = function (A, t) {
  $jscomp.initSymbolIterator();
  A instanceof String && (A += '');
  var E = 0,
    B = {
      next: function () {
        if (E < A.length) {
          var L = E++;
          return { value: t(L, A[L]), done: !1 };
        }
        B.next = function () {
          return { done: !0, value: void 0 };
        };
        return B.next();
      },
    };
  B[Symbol.iterator] = function () {
    return B;
  };
  return B;
};
$jscomp.polyfill = function (A, t, E, B) {
  if (t) {
    E = $jscomp.global;
    A = A.split('.');
    for (B = 0; B < A.length - 1; B++) {
      var L = A[B];
      L in E || (E[L] = {});
      E = E[L];
    }
    A = A[A.length - 1];
    B = E[A];
    t = t(B);
    t != B &&
      null != t &&
      $jscomp.defineProperty(E, A, {
        configurable: !0,
        writable: !0,
        value: t,
      });
  }
};
$jscomp.polyfill(
  'Array.prototype.keys',
  function (A) {
    return A
      ? A
      : function () {
          return $jscomp.iteratorFromArray(this, function (t) {
            return t;
          });
        };
  },
  'es6',
  'es3',
);
$jscomp.checkStringArgs = function (A, t, E) {
  if (null == A)
    throw new TypeError(
      "The 'this' value for String.prototype." +
        E +
        ' must not be null or undefined',
    );
  if (t instanceof RegExp)
    throw new TypeError(
      'First argument to String.prototype.' +
        E +
        ' must not be a regular expression',
    );
  return A + '';
};
$jscomp.polyfill(
  'String.prototype.endsWith',
  function (A) {
    return A
      ? A
      : function (t, E) {
          var B = $jscomp.checkStringArgs(this, t, 'endsWith');
          t += '';
          void 0 === E && (E = B.length);
          E = Math.max(0, Math.min(E | 0, B.length));
          for (var L = t.length; 0 < L && 0 < E; )
            if (B[--E] != t[--L]) return !1;
          return 0 >= L;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.fromCodePoint',
  function (A) {
    return A
      ? A
      : function (t) {
          for (var E = '', B = 0; B < arguments.length; B++) {
            var L = Number(arguments[B]);
            if (0 > L || 1114111 < L || L !== Math.floor(L))
              throw new RangeError('invalid_code_point ' + L);
            65535 >= L
              ? (E += String.fromCharCode(L))
              : ((L -= 65536),
                (E += String.fromCharCode(((L >>> 10) & 1023) | 55296)),
                (E += String.fromCharCode((L & 1023) | 56320)));
          }
          return E;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.values',
  function (A) {
    return A
      ? A
      : function () {
          return $jscomp.iteratorFromArray(this, function (t, E) {
            return E;
          });
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.fill',
  function (A) {
    return A
      ? A
      : function (t, E, B) {
          var L = this.length || 0;
          0 > E && (E = Math.max(0, L + E));
          if (null == B || B > L) B = L;
          B = Number(B);
          0 > B && (B = Math.max(0, L + B));
          for (E = Number(E || 0); E < B; E++) this[E] = t;
          return this;
        };
  },
  'es6',
  'es3',
);
$jscomp.findInternal = function (A, t, E) {
  A instanceof String && (A = String(A));
  for (var B = A.length, L = 0; L < B; L++) {
    var M = A[L];
    if (t.call(E, M, L, A)) return { i: L, v: M };
  }
  return { i: -1, v: void 0 };
};
$jscomp.polyfill(
  'Array.prototype.find',
  function (A) {
    return A
      ? A
      : function (t, E) {
          return $jscomp.findInternal(this, t, E).v;
        };
  },
  'es6',
  'es3',
);
$jscomp.underscoreProtoCanBeSet = function () {
  var A = { a: !0 },
    t = {};
  try {
    return ((t.__proto__ = A), t.a);
  } catch (E) {}
  return !1;
};
$jscomp.setPrototypeOf =
  'function' == typeof Object.setPrototypeOf
    ? Object.setPrototypeOf
    : $jscomp.underscoreProtoCanBeSet()
      ? function (A, t) {
          A.__proto__ = t;
          if (A.__proto__ !== t) throw new TypeError(A + ' is not extensible');
          return A;
        }
      : null;
$jscomp.polyfill(
  'Object.setPrototypeOf',
  function (A) {
    return A || $jscomp.setPrototypeOf;
  },
  'es6',
  'es5',
);
$jscomp.owns = function (A, t) {
  return Object.prototype.hasOwnProperty.call(A, t);
};
$jscomp.polyfill(
  'Object.values',
  function (A) {
    return A
      ? A
      : function (t) {
          var E = [],
            B;
          for (B in t) $jscomp.owns(t, B) && E.push(t[B]);
          return E;
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.startsWith',
  function (A) {
    return A
      ? A
      : function (t, E) {
          var B = $jscomp.checkStringArgs(this, t, 'startsWith');
          t += '';
          var L = B.length,
            A = t.length;
          E = Math.max(0, Math.min(E | 0, B.length));
          for (var aa = 0; aa < A && E < L; ) if (B[E++] != t[aa++]) return !1;
          return aa >= A;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Object.is',
  function (A) {
    return A
      ? A
      : function (t, E) {
          return t === E ? 0 !== t || 1 / t === 1 / E : t !== t && E !== E;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.includes',
  function (A) {
    return A
      ? A
      : function (t, E) {
          var B = this;
          B instanceof String && (B = String(B));
          var L = B.length;
          E = E || 0;
          for (0 > E && (E = Math.max(E + L, 0)); E < L; E++) {
            var A = B[E];
            if (A === t || Object.is(A, t)) return !0;
          }
          return !1;
        };
  },
  'es7',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.includes',
  function (A) {
    return A
      ? A
      : function (t, E) {
          return (
            -1 !==
            $jscomp.checkStringArgs(this, t, 'includes').indexOf(t, E || 0)
          );
        };
  },
  'es6',
  'es3',
);
var $lime_init = function (A, t) {
  var E = function (t, E) {
    (function (t, E) {
      function v(a, b) {
        a = Object.create(a);
        for (var c in b) a[c] = b[c];
        b.toString !== Object.prototype.toString && (a.toString = b.toString);
        return a;
      }
      function L(a) {
        return a instanceof Array ? new yf(a) : a.iterator();
      }
      function l(a, b) {
        if (null == b) return null;
        null == b.__id__ && (b.__id__ = E.$haxeUID++);
        var c;
        null == a.hx__closures__
          ? (a.hx__closures__ = {})
          : (c = a.hx__closures__[b.__id__]);
        null == c && ((c = b.bind(a)), (a.hx__closures__[b.__id__] = c));
        return c;
      }
      t.lime = t.lime || {};
      var g = {},
        r = function () {
          return va.__string_rec(this, '');
        },
        y = y || {},
        G,
        $a = function () {};
      g['lime.app.IModule'] = $a;
      $a.__name__ = 'lime.app.IModule';
      $a.__isInterface__ = !0;
      $a.prototype = { __class__: $a };
      var sa = function () {
        this.onExit = new zf();
      };
      g['lime.app.Module'] = sa;
      sa.__name__ = 'lime.app.Module';
      sa.__interfaces__ = [$a];
      sa.prototype = {
        __registerLimeModule: function (a) {},
        __unregisterLimeModule: function (a) {},
        __class__: sa,
      };
      var B = function (a) {
        this.gameDeviceCache = new mc();
        this.parent = a;
        this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
        this.framePeriod = -1;
        Ge.init();
        this.accelerometer = He.registerSensor(tl.ACCELEROMETER, 0);
      };
      g['lime._internal.backend.html5.HTML5Application'] = B;
      B.__name__ = 'lime._internal.backend.html5.HTML5Application';
      B.prototype = {
        convertKeyCode: function (a) {
          if (65 <= a && 90 >= a) return a + 32;
          switch (a) {
            case 12:
              return 1073741980;
            case 16:
              return 1073742049;
            case 17:
              return 1073742048;
            case 18:
              return 1073742050;
            case 19:
              return 1073741896;
            case 20:
              return 1073741881;
            case 33:
              return 1073741899;
            case 34:
              return 1073741902;
            case 35:
              return 1073741901;
            case 36:
              return 1073741898;
            case 37:
              return 1073741904;
            case 38:
              return 1073741906;
            case 39:
              return 1073741903;
            case 40:
              return 1073741905;
            case 41:
              return 1073741943;
            case 43:
              return 1073741940;
            case 44:
              return 1073741894;
            case 45:
              return 1073741897;
            case 46:
              return 127;
            case 91:
              return 1073742051;
            case 92:
              return 1073742055;
            case 93:
              return 1073742055;
            case 95:
              return 1073742106;
            case 96:
              return 1073741922;
            case 97:
              return 1073741913;
            case 98:
              return 1073741914;
            case 99:
              return 1073741915;
            case 100:
              return 1073741916;
            case 101:
              return 1073741917;
            case 102:
              return 1073741918;
            case 103:
              return 1073741919;
            case 104:
              return 1073741920;
            case 105:
              return 1073741921;
            case 106:
              return 1073741909;
            case 107:
              return 1073741911;
            case 108:
              return 1073741923;
            case 109:
              return 1073741910;
            case 110:
              return 1073741923;
            case 111:
              return 1073741908;
            case 112:
              return 1073741882;
            case 113:
              return 1073741883;
            case 114:
              return 1073741884;
            case 115:
              return 1073741885;
            case 116:
              return 1073741886;
            case 117:
              return 1073741887;
            case 118:
              return 1073741888;
            case 119:
              return 1073741889;
            case 120:
              return 1073741890;
            case 121:
              return 1073741891;
            case 122:
              return 1073741892;
            case 123:
              return 1073741893;
            case 124:
              return 1073741928;
            case 125:
              return 1073741929;
            case 126:
              return 1073741930;
            case 127:
              return 1073741931;
            case 128:
              return 1073741932;
            case 129:
              return 1073741933;
            case 130:
              return 1073741934;
            case 131:
              return 1073741935;
            case 132:
              return 1073741936;
            case 133:
              return 1073741937;
            case 134:
              return 1073741938;
            case 135:
              return 1073741939;
            case 144:
              return 1073741907;
            case 145:
              return 1073741895;
            case 160:
              return 94;
            case 161:
              return 33;
            case 163:
              return 35;
            case 164:
              return 36;
            case 166:
              return 1073742094;
            case 167:
              return 1073742095;
            case 168:
              return 1073742097;
            case 169:
              return 41;
            case 170:
              return 42;
            case 171:
              return 96;
            case 172:
              return 1073741898;
            case 173:
              return 45;
            case 174:
              return 1073741953;
            case 175:
              return 1073741952;
            case 176:
              return 1073742082;
            case 177:
              return 1073742083;
            case 178:
              return 1073742084;
            case 179:
              return 1073742085;
            case 180:
              return 1073742089;
            case 181:
              return 1073742086;
            case 182:
              return 1073741953;
            case 183:
              return 1073741952;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 193:
              return 63;
            case 194:
              return 1073741923;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
            case 223:
              return 96;
            case 224:
              return 1073742051;
            case 226:
              return 92;
          }
          return a;
        },
        exec: function () {
          window.addEventListener('keydown', l(this, this.handleKeyEvent), !1);
          window.addEventListener('keyup', l(this, this.handleKeyEvent), !1);
          window.addEventListener('focus', l(this, this.handleWindowEvent), !1);
          window.addEventListener('blur', l(this, this.handleWindowEvent), !1);
          window.addEventListener(
            'resize',
            l(this, this.handleWindowEvent),
            !1,
          );
          window.addEventListener(
            'beforeunload',
            l(this, this.handleWindowEvent),
            !1,
          );
          Object.prototype.hasOwnProperty.call(window, 'Accelerometer') &&
            window.addEventListener(
              'devicemotion',
              l(this, this.handleSensorEvent),
              !1,
            );
          CanvasRenderingContext2D.prototype.isPointInStroke ||
            (CanvasRenderingContext2D.prototype.isPointInStroke = function (
              a,
              b,
              c,
            ) {
              return !1;
            });
          CanvasRenderingContext2D.prototype.isPointInPath ||
            (CanvasRenderingContext2D.prototype.isPointInPath = function (
              a,
              b,
              c,
            ) {
              return !1;
            });
          0 == 'performance' in window && (window.performance = {});
          if (0 == 'now' in window.performance) {
            var a = Date.now();
            performance.timing &&
              performance.timing.navigationStart &&
              (a = performance.timing.navigationStart);
            window.performance.now = function () {
              return Date.now() - a;
            };
          }
          for (
            var b = 0, c = ['ms', 'moz', 'webkit', 'o'], d = 0;
            d < c.length && !window.requestAnimationFrame;
            ++d
          )
            ((window.requestAnimationFrame =
              window[c[d] + 'RequestAnimationFrame']),
              (window.cancelAnimationFrame =
                window[c[d] + 'CancelAnimationFrame'] ||
                window[c[d] + 'CancelRequestAnimationFrame']));
          window.requestAnimationFrame ||
            (window.requestAnimationFrame = function (a, c) {
              var d = window.performance.now(),
                f = Math.max(0, 16 - (d - b));
              c = window.setTimeout(function () {
                a(d + f);
              }, f);
              b = d + f;
              return c;
            });
          window.cancelAnimationFrame ||
            (window.cancelAnimationFrame = function (a) {
              clearTimeout(a);
            });
          window.requestAnimFrame = window.requestAnimationFrame;
          this.lastUpdate = window.performance.now();
          this.handleApplicationEvent();
          return 0;
        },
        exit: function () {},
        handleApplicationEvent: function (a) {
          a = 0;
          for (var b = this.parent.__windows; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__backend.updateSize();
          }
          this.updateGameDevices();
          this.currentUpdate = window.performance.now();
          if (this.currentUpdate >= this.nextUpdate) {
            this.deltaTime = this.currentUpdate - this.lastUpdate;
            a = 0;
            for (b = this.parent.__windows; a < b.length; )
              ((c = b[a]),
                ++a,
                this.parent.onUpdate.dispatch(this.deltaTime | 0),
                null != c.context && c.onRender.dispatch(c.context));
            this.nextUpdate =
              0 > this.framePeriod
                ? this.currentUpdate
                : this.currentUpdate -
                  (this.currentUpdate % this.framePeriod) +
                  this.framePeriod;
            this.lastUpdate = this.currentUpdate;
          }
          window.requestAnimationFrame(l(this, this.handleApplicationEvent));
        },
        handleKeyEvent: function (a) {
          if (null != this.parent.__window) {
            var b = this.convertKeyCode(
                null != a.keyCode ? a.keyCode : a.which,
              ),
              c =
                (a.shiftKey ? 3 : 0) |
                (a.ctrlKey ? 192 : 0) |
                (a.altKey ? 768 : 0) |
                (a.metaKey ? 3072 : 0);
            'keydown' == a.type
              ? (this.parent.__window.onKeyDown.dispatch(b, c),
                this.parent.__window.onKeyDown.canceled &&
                  a.cancelable &&
                  a.preventDefault())
              : (this.parent.__window.onKeyUp.dispatch(b, c),
                this.parent.__window.onKeyUp.canceled &&
                  a.cancelable &&
                  a.preventDefault());
          }
        },
        handleSensorEvent: function (a) {
          this.accelerometer.onUpdate.dispatch(
            a.accelerationIncludingGravity.x,
            a.accelerationIncludingGravity.y,
            a.accelerationIncludingGravity.z,
          );
        },
        handleWindowEvent: function (a) {
          if (null != this.parent.__window)
            switch (a.type) {
              case 'blur':
                this.hidden ||
                  (this.parent.__window.onFocusOut.dispatch(),
                  this.parent.__window.onDeactivate.dispatch(),
                  (this.hidden = !0));
                break;
              case 'focus':
                this.hidden &&
                  (this.parent.__window.onFocusIn.dispatch(),
                  this.parent.__window.onActivate.dispatch(),
                  (this.hidden = !1));
                break;
              case 'resize':
                this.parent.__window.__backend.handleResizeEvent(a);
                break;
              case 'visibilitychange':
                window.document.hidden
                  ? this.hidden ||
                    (this.parent.__window.onFocusOut.dispatch(),
                    this.parent.__window.onDeactivate.dispatch(),
                    (this.hidden = !0))
                  : this.hidden &&
                    (this.parent.__window.onFocusIn.dispatch(),
                    this.parent.__window.onActivate.dispatch(),
                    (this.hidden = !1));
            }
        },
        updateGameDevices: function () {
          var a = nc.__getDeviceData();
          if (null != a)
            for (var b, c, d, f, h, k = 0, n = a.length; k < n; )
              if (((b = k++), (f = a[b]), null != f)) {
                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                  h = new Qj();
                  h.id = b;
                  h.connected = f.connected;
                  c = 0;
                  for (d = f.buttons.length; c < d; ) {
                    var p = c++;
                    h.buttons.push(f.buttons[p].value);
                  }
                  c = 0;
                  for (d = f.axes.length; c < d; )
                    ((p = c++), h.axes.push(f.axes[p]));
                  'standard' == f.mapping && (h.isGamepad = !0);
                  this.gameDeviceCache.h[b] = h;
                  f.connected &&
                    (nc.__connect(b), h.isGamepad && qc.__connect(b));
                }
                h = this.gameDeviceCache.h[b];
                d = nc.devices.h[b];
                c = qc.devices.h[b];
                if (f.connected) {
                  for (var P = 0, g = f.buttons.length; P < g; ) {
                    var m = P++;
                    p = f.buttons[m].value;
                    if (p != h.buttons[m]) {
                      if (6 == m)
                        (d.onAxisMove.dispatch(f.axes.length, p),
                          null != c && c.onAxisMove.dispatch(4, p));
                      else if (7 == m)
                        (d.onAxisMove.dispatch(f.axes.length + 1, p),
                          null != c && c.onAxisMove.dispatch(5, p));
                      else if (
                        (0 < p
                          ? d.onButtonDown.dispatch(m)
                          : d.onButtonUp.dispatch(m),
                        null != c)
                      ) {
                        switch (m) {
                          case 0:
                            b = 0;
                            break;
                          case 1:
                            b = 1;
                            break;
                          case 2:
                            b = 2;
                            break;
                          case 3:
                            b = 3;
                            break;
                          case 4:
                            b = 9;
                            break;
                          case 5:
                            b = 10;
                            break;
                          case 8:
                            b = 4;
                            break;
                          case 9:
                            b = 6;
                            break;
                          case 10:
                            b = 7;
                            break;
                          case 11:
                            b = 8;
                            break;
                          case 12:
                            b = 11;
                            break;
                          case 13:
                            b = 12;
                            break;
                          case 14:
                            b = 13;
                            break;
                          case 15:
                            b = 14;
                            break;
                          case 16:
                            b = 5;
                            break;
                          default:
                            continue;
                        }
                        0 < p
                          ? c.onButtonDown.dispatch(b)
                          : c.onButtonUp.dispatch(b);
                      }
                      h.buttons[m] = p;
                    }
                  }
                  b = 0;
                  for (p = f.axes.length; b < p; )
                    ((P = b++),
                      f.axes[P] != h.axes[P] &&
                        (d.onAxisMove.dispatch(P, f.axes[P]),
                        null != c && c.onAxisMove.dispatch(P, f.axes[P]),
                        (h.axes[P] = f.axes[P])));
                } else
                  h.connected &&
                    ((h.connected = !1),
                    nc.__disconnect(b),
                    qc.__disconnect(b));
              }
        },
        __class__: B,
      };
      var A = function () {
        this.onCreateWindow = new Rj();
        this.onUpdate = new zf();
        this.onExit = new zf();
        null == A.current && (A.current = this);
        this.meta = new Pa();
        this.modules = [];
        this.__windowByID = new mc();
        this.__windows = [];
        this.__backend = new B(this);
        this.__registerLimeModule(this);
        this.__preloader = new Sj();
        this.__preloader.onProgress.add(l(this, this.onPreloadProgress));
        this.__preloader.onComplete.add(l(this, this.onPreloadComplete));
      };
      g['lime.app.Application'] = A;
      A.__name__ = 'lime.app.Application';
      A.__super__ = sa;
      A.prototype = v(sa.prototype, {
        addModule: function (a) {
          a.__registerLimeModule(this);
          this.modules.push(a);
        },
        exec: function () {
          A.current = this;
          return this.__backend.exec();
        },
        onGamepadAxisMove: function (a, b, c) {},
        onGamepadButtonDown: function (a, b) {},
        onGamepadButtonUp: function (a, b) {},
        onGamepadConnect: function (a) {},
        onGamepadDisconnect: function (a) {},
        onJoystickAxisMove: function (a, b, c) {},
        onJoystickButtonDown: function (a, b) {},
        onJoystickButtonUp: function (a, b) {},
        onJoystickConnect: function (a) {},
        onJoystickDisconnect: function (a) {},
        onJoystickHatMove: function (a, b, c) {},
        onKeyDown: function (a, b) {},
        onKeyUp: function (a, b) {},
        onModuleExit: function (a) {},
        onMouseDown: function (a, b, c) {},
        onMouseMove: function (a, b) {},
        onMouseMoveRelative: function (a, b) {},
        onMouseUp: function (a, b, c) {},
        onMouseWheel: function (a, b, c) {},
        onPreloadComplete: function () {},
        onPreloadProgress: function (a, b) {},
        onRenderContextLost: function () {},
        onRenderContextRestored: function (a) {},
        onTextEdit: function (a, b, c) {},
        onTextInput: function (a) {},
        onTouchCancel: function (a) {},
        onTouchEnd: function (a) {},
        onTouchMove: function (a) {},
        onTouchStart: function (a) {},
        onWindowActivate: function () {},
        onWindowClose: function () {},
        onWindowCreate: function () {},
        onWindowDeactivate: function () {},
        onWindowDropFile: function (a) {},
        onWindowEnter: function () {},
        onWindowExpose: function () {},
        onWindowFocusIn: function () {},
        onWindowFocusOut: function () {},
        onWindowFullscreen: function () {},
        onWindowLeave: function () {},
        onWindowMove: function (a, b) {},
        onWindowMinimize: function () {},
        onWindowResize: function (a, b) {},
        onWindowRestore: function () {},
        removeModule: function (a) {
          null != a &&
            (a.__unregisterLimeModule(this), N.remove(this.modules, a));
        },
        render: function (a) {},
        update: function (a) {},
        __registerLimeModule: function (a) {
          a.onUpdate.add(l(this, this.update));
          a.onExit.add(l(this, this.onModuleExit), !1, 0);
          a.onExit.add(l(this, this.__onModuleExit), !1, -1e3);
          for (a = qc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onGamepadConnect(b);
          }
          qc.onConnect.add(l(this, this.__onGamepadConnect));
          for (a = nc.devices.iterator(); a.hasNext(); )
            ((b = a.next()), this.__onJoystickConnect(b));
          nc.onConnect.add(l(this, this.__onJoystickConnect));
          dc.onCancel.add(l(this, this.onTouchCancel));
          dc.onStart.add(l(this, this.onTouchStart));
          dc.onMove.add(l(this, this.onTouchMove));
          dc.onEnd.add(l(this, this.onTouchEnd));
        },
        __removeWindow: function (a) {
          null != a &&
            this.__windowByID.h.hasOwnProperty(a.id) &&
            (this.__window == a && (this.__window = null),
            N.remove(this.__windows, a),
            this.__windowByID.remove(a.id),
            a.close(),
            this.__checkForAllWindowsClosed());
        },
        __checkForAllWindowsClosed: function () {
          0 == this.__windows.length && Cc.exit(0);
        },
        __onGamepadConnect: function (a) {
          this.onGamepadConnect(a);
          var b = this,
            c = function (c, d) {
              b.onGamepadAxisMove(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = this;
          c = function (b) {
            d.onGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(c);
          var f = this;
          c = function (b) {
            f.onGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(c);
          var h = this;
          a.onDisconnect.add(function () {
            h.onGamepadDisconnect(a);
          });
        },
        __onJoystickConnect: function (a) {
          this.onJoystickConnect(a);
          var b = this,
            c = function (c, d) {
              b.onJoystickAxisMove(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = this;
          c = function (b) {
            d.onJoystickButtonDown(a, b);
          };
          a.onButtonDown.add(c);
          var f = this;
          c = function (b) {
            f.onJoystickButtonUp(a, b);
          };
          a.onButtonUp.add(c);
          var h = this;
          a.onDisconnect.add(function () {
            h.onJoystickDisconnect(a);
          });
          var k = this;
          c = function (b, c) {
            k.onJoystickHatMove(a, b, c);
          };
          a.onHatMove.add(c);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (this.__unregisterLimeModule(this),
            this.__backend.exit(),
            A.current == this && (A.current = null));
        },
        __onWindowClose: function (a) {
          if (this.__window == a) this.onWindowClose();
          this.__removeWindow(a);
        },
        __unregisterLimeModule: function (a) {
          a.onUpdate.remove(l(this, this.update));
          a.onExit.remove(l(this, this.__onModuleExit));
          a.onExit.remove(l(this, this.onModuleExit));
          qc.onConnect.remove(l(this, this.__onGamepadConnect));
          nc.onConnect.remove(l(this, this.__onJoystickConnect));
          dc.onCancel.remove(l(this, this.onTouchCancel));
          dc.onStart.remove(l(this, this.onTouchStart));
          dc.onMove.remove(l(this, this.onTouchMove));
          dc.onEnd.remove(l(this, this.onTouchEnd));
        },
        __class__: A,
      });
      var aa = function () {};
      g.ApplicationMain = aa;
      aa.__name__ = 'ApplicationMain';
      aa.main = function () {
        Cc.__registerEntryPoint('mfcg', aa.create);
      };
      aa.create = function (a) {
        var b = new Vg();
        Ab.init(a);
        b.meta.h.build = '2431';
        b.meta.h.company = 'Retronic Games';
        b.meta.h.file = 'mfcg';
        b.meta.h.name = 'Medieval Fantasy City Generator';
        b.meta.h.packageName = 'com.watabou.mfcg';
        b.meta.h.version = '0.11.5';
        var c = {
          allowHighDPI: !0,
          alwaysOnTop: !1,
          borderless: !1,
          element: null,
          frameRate: 60,
          height: 0,
          hidden: !1,
          maximized: !1,
          minimized: !1,
          parameters: {},
          resizable: !0,
          title: 'Medieval Fantasy City Generator',
          width: 0,
          x: null,
          y: null,
          context: {
            antialiasing: 0,
            background: 13419960,
            colorDepth: 32,
            depth: !0,
            hardware: !0,
            stencil: !0,
            type: null,
            vsync: !0,
          },
        };
        if (null == b.__window && null != a)
          for (var d = 0, f = ya.fields(a); d < f.length; ) {
            var h = f[d];
            ++d;
            Object.prototype.hasOwnProperty.call(c, h)
              ? (c[h] = ya.field(a, h))
              : Object.prototype.hasOwnProperty.call(c.context, h) &&
                (c.context[h] = ya.field(a, h));
          }
        b.createWindow(c);
        var k = new Kh(new Wg());
        b.__preloader.onProgress.add(function (a, b) {
          k.update(a, b);
        });
        b.__preloader.onComplete.add(function () {
          k.start();
        });
        var n = b.__window.stage;
        k.onComplete.add(function () {
          aa.start(n);
        });
        d = 0;
        for (f = Ab.preloadLibraries; d < f.length; )
          ((a = f[d]), ++d, b.__preloader.addLibrary(a));
        d = 0;
        for (f = Ab.preloadLibraryNames; d < f.length; )
          ((a = f[d]), ++d, b.__preloader.addLibraryName(a));
        b.__preloader.load();
        b.exec();
      };
      aa.start = function (a) {
        if (a.__uncaughtErrorEvents.__enabled)
          try {
            var b = a.getChildAt(0);
            (null != b && b instanceof lb) || ((b = new Af()), a.addChild(b));
            new rc(b);
            a.dispatchEvent(new wa('resize', !1, !1));
            a.window.__fullscreen &&
              a.dispatchEvent(new df('fullScreen', !1, !1, !0, !0));
          } catch (c) {
            ((Ta.lastError = c),
              (b = X.caught(c).unwrap()),
              a.__handleError(b));
          }
        else
          ((b = a.getChildAt(0)),
            (null != b && b instanceof lb) || ((b = new Af()), a.addChild(b)),
            new rc(b),
            a.dispatchEvent(new wa('resize', !1, !1)),
            a.window.__fullscreen &&
              a.dispatchEvent(new df('fullScreen', !1, !1, !0, !0)));
      };
      var M = function () {};
      g['openfl.events.IEventDispatcher'] = M;
      M.__name__ = 'openfl.events.IEventDispatcher';
      M.__isInterface__ = !0;
      var oa = function (a) {
        null != a && (this.__targetDispatcher = a);
      };
      g['openfl.events.EventDispatcher'] = oa;
      oa.__name__ = 'openfl.events.EventDispatcher';
      oa.__interfaces__ = [M];
      oa.prototype = {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          if (null != b)
            if (
              (null == this.__eventMap &&
                ((this.__eventMap = new Pa()), (this.__iterators = new Pa())),
              Object.prototype.hasOwnProperty.call(this.__eventMap.h, a))
            ) {
              p = this.__eventMap.h[a];
              for (var h = 0, k = p.length; h < k; ) {
                var n = h++;
                if (p[n].match(b, c)) return;
              }
              a = this.__iterators.h[a];
              for (h = 0; h < a.length; )
                ((k = a[h]), ++h, k.active && k.copy());
              this.__addListenerByPriority(p, new Bf(b, c, d, f));
            } else {
              var p = [];
              p.push(new Bf(b, c, d, f));
              k = new Xg(p);
              this.__eventMap.h[a] = p;
              this.__iterators.h[a] = [k];
            }
        },
        dispatchEvent: function (a) {
          a.target =
            null != this.__targetDispatcher ? this.__targetDispatcher : this;
          return this.__dispatchEvent(a);
        },
        hasEventListener: function (a) {
          return null == this.__eventMap
            ? !1
            : Object.prototype.hasOwnProperty.call(this.__eventMap.h, a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          if (null != this.__eventMap && null != b) {
            var d = this.__eventMap.h[a];
            if (null != d) {
              for (
                var f = this.__iterators.h[a], h = 0, k = d.length;
                h < k;

              ) {
                var n = h++;
                if (d[n].match(b, c)) {
                  for (b = 0; b < f.length; )
                    ((c = f[b]), ++b, c.remove(d[n], n));
                  d.splice(n, 1);
                  break;
                }
              }
              0 == d.length &&
                ((d = this.__eventMap),
                (f = a),
                Object.prototype.hasOwnProperty.call(d.h, f) && delete d.h[f],
                (d = this.__iterators),
                (f = a),
                Object.prototype.hasOwnProperty.call(d.h, f) && delete d.h[f]);
              0 >= Object.keys(this.__eventMap.h).length &&
                (this.__iterators = this.__eventMap = null);
            }
          }
        },
        __dispatchEvent: function (a) {
          if (null == this.__eventMap || null == a) return !0;
          var b = a.type,
            c = this.__eventMap.h[b];
          if (null == c) return !0;
          null == a.target &&
            (a.target =
              null != this.__targetDispatcher ? this.__targetDispatcher : this);
          a.currentTarget = this;
          var d = 1 == a.eventPhase;
          b = this.__iterators.h[b];
          var f = b[0];
          f.active && ((f = new Xg(c)), b.push(f));
          f.start();
          for (var h = f; h.hasNext(); ) {
            var k = h.next();
            if (null != k && k.useCapture == d) {
              if (k.useWeakReference && null != k.weakRefCallback) {
                var n = k.weakRefCallback.deref();
                if (null == n)
                  ((n = f.index - 1), c.splice(n, 1), f.remove(k, n));
                else if (
                  null != Ra.get_current() &&
                  null != Ra.get_current().stage &&
                  Ra.get_current().stage.__uncaughtErrorEvents.__enabled
                )
                  try {
                    n(a);
                  } catch (p) {
                    ((Ta.lastError = p),
                      (k = X.caught(p).unwrap()),
                      a instanceof dg ||
                        Ra.get_current().stage.__handleError(k));
                  }
                else n(a);
              } else if (
                null != Ra.get_current() &&
                null != Ra.get_current().stage &&
                Ra.get_current().stage.__uncaughtErrorEvents.__enabled
              )
                try {
                  k.callback(a);
                } catch (p) {
                  ((Ta.lastError = p),
                    (k = X.caught(p).unwrap()),
                    a instanceof dg || Ra.get_current().stage.__handleError(k));
                }
              else k.callback(a);
              if (a.__isCanceledNow) break;
            }
          }
          f.stop();
          f != b[0] ? N.remove(b, f) : f.reset(c);
          return !a.isDefaultPrevented();
        },
        __addListenerByPriority: function (a, b) {
          for (var c = a.length, d = c, f = 0; f < c; ) {
            var h = f++;
            if (a[h].priority < b.priority) {
              d = h;
              break;
            }
          }
          a.splice(d, 0, b);
        },
        __class__: oa,
      };
      var mb = function () {};
      g['openfl.display.IBitmapDrawable'] = mb;
      mb.__name__ = 'openfl.display.IBitmapDrawable';
      mb.__isInterface__ = !0;
      mb.prototype = { __class__: mb };
      var la = {
          toIntVector: function (a, b, c, d) {
            return new Yg(b, c, d);
          },
          toFloatVector: function (a, b, c, d) {
            return new Ie(b, c, d, !0);
          },
          toObjectVector: function (a, b, c, d) {
            return new eg(b, c, d, !0);
          },
        },
        nb = function (a, b, c) {
          this.__pool = new pa();
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList = new bb();
          null != a && (this.create = a);
          null != b && (this.clean = b);
          null != c && this.set_size(c);
        };
      g['lime.utils.ObjectPool'] = nb;
      nb.__name__ = 'lime.utils.ObjectPool';
      nb.prototype = {
        clean: function (a) {},
        create: function () {
          return null;
        },
        get: function () {
          var a = null;
          if (0 < this.inactiveObjects)
            (null != this.__inactiveObject0
              ? ((a = this.__inactiveObject0), (this.__inactiveObject0 = null))
              : null != this.__inactiveObject1
                ? ((a = this.__inactiveObject1),
                  (this.__inactiveObject1 = null))
                : ((a = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject1 = this.__inactiveObjectList.pop())),
              this.inactiveObjects--,
              this.activeObjects++);
          else if (null == this.__size || this.activeObjects < this.__size)
            ((a = this.create()),
              null != a && (this.__pool.set(a, !0), this.activeObjects++));
          return a;
        },
        release: function (a) {
          this.activeObjects--;
          null == this.__size ||
          this.activeObjects + this.inactiveObjects < this.__size
            ? (this.clean(a),
              null == this.__inactiveObject0
                ? (this.__inactiveObject0 = a)
                : null == this.__inactiveObject1
                  ? (this.__inactiveObject1 = a)
                  : this.__inactiveObjectList.add(a),
              this.inactiveObjects++)
            : this.__pool.remove(a);
        },
        __removeInactive: function (a) {
          if (
            !(0 >= a || 0 == this.inactiveObjects) &&
            (null != this.__inactiveObject0 &&
              (this.__pool.remove(this.__inactiveObject0),
              (this.__inactiveObject0 = null),
              this.inactiveObjects--,
              --a),
            0 != a &&
              0 != this.inactiveObjects &&
              (null != this.__inactiveObject1 &&
                (this.__pool.remove(this.__inactiveObject1),
                (this.__inactiveObject1 = null),
                this.inactiveObjects--,
                --a),
              0 != a && 0 != this.inactiveObjects))
          )
            for (var b = this.__inactiveObjectList.h; null != b; ) {
              var c = b.item;
              b = b.next;
              this.__pool.remove(c);
              this.__inactiveObjectList.remove(c);
              this.inactiveObjects--;
              --a;
              if (0 == a || 0 == this.inactiveObjects) break;
            }
        },
        set_size: function (a) {
          if (null == a) this.__size = null;
          else {
            var b = this.inactiveObjects + this.activeObjects;
            this.__size = a;
            if (b > a) this.__removeInactive(b - a);
            else if (a > b)
              for (var c = 0, d = a - b; c < d; )
                if ((c++, (b = this.create()), null != b))
                  (this.__pool.set(b, !1),
                    this.__inactiveObjectList.add(b),
                    this.inactiveObjects++);
                else break;
          }
          return a;
        },
        __class__: nb,
        __properties__: { set_size: 'set_size' },
      };
      var Y = function () {};
      g['haxe.IMap'] = Y;
      Y.__name__ = 'haxe.IMap';
      Y.__isInterface__ = !0;
      Y.prototype = { __class__: Y };
      var pa = function () {
        this.h = { __keys__: {} };
      };
      g['haxe.ds.ObjectMap'] = pa;
      pa.__name__ = 'haxe.ds.ObjectMap';
      pa.__interfaces__ = [Y];
      pa.prototype = {
        set: function (a, b) {
          var c = a.__id__;
          null == c && (c = a.__id__ = E.$haxeUID++);
          this.h[c] = b;
          this.h.__keys__[c] = a;
        },
        get: function (a) {
          return this.h[a.__id__];
        },
        remove: function (a) {
          a = a.__id__;
          if (null == this.h.__keys__[a]) return !1;
          delete this.h[a];
          delete this.h.__keys__[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h.__keys__)
            this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
          return new yf(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a.__id__];
            },
          };
        },
        __class__: pa,
      };
      var bb = function () {
        this.length = 0;
      };
      g['haxe.ds.List'] = bb;
      bb.__name__ = 'haxe.ds.List';
      bb.prototype = {
        add: function (a) {
          a = new Lh(a, null);
          null == this.h ? (this.h = a) : (this.q.next = a);
          this.q = a;
          this.length++;
        },
        push: function (a) {
          this.h = a = new Lh(a, this.h);
          null == this.q && (this.q = a);
          this.length++;
        },
        pop: function () {
          if (null == this.h) return null;
          var a = this.h.item;
          this.h = this.h.next;
          null == this.h && (this.q = null);
          this.length--;
          return a;
        },
        isEmpty: function () {
          return null == this.h;
        },
        clear: function () {
          this.q = this.h = null;
          this.length = 0;
        },
        remove: function (a) {
          for (var b = null, c = this.h; null != c; ) {
            if (c.item == a)
              return (
                null == b ? (this.h = c.next) : (b.next = c.next),
                this.q == c && (this.q = b),
                this.length--,
                !0
              );
            b = c;
            c = c.next;
          }
          return !1;
        },
        iterator: function () {
          return new Tj(this.h);
        },
        __class__: bb,
      };
      var S = function () {
        oa.call(this);
        this.__alpha = this.__drawableType = 1;
        this.__blendMode = 10;
        this.__cacheAsBitmap = !1;
        this.__transform = new ua();
        this.__visible = !0;
        this.__rotationSine = this.__rotation = 0;
        this.__worldAlpha =
          this.__scaleY =
          this.__scaleX =
          this.__rotationCosine =
            1;
        this.__worldBlendMode = 10;
        this.__worldTransform = new ua();
        this.__worldColorTransform = new Tb();
        this.__renderTransform = new ua();
        this.__worldVisible = !0;
        this.set_name('instance' + ++S.__instanceCount);
        null != S.__initStage &&
          ((this.stage = S.__initStage),
          (S.__initStage = null),
          this.stage.addChild(this));
      };
      g['openfl.display.DisplayObject'] = S;
      S.__name__ = 'openfl.display.DisplayObject';
      S.__interfaces__ = [mb];
      S.__super__ = oa;
      S.prototype = v(oa.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              Object.prototype.hasOwnProperty.call(S.__broadcastEvents.h, a) ||
                (S.__broadcastEvents.h[a] = []);
              var h = S.__broadcastEvents.h[a];
              -1 == h.indexOf(this) && h.push(this);
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              null == this.__customRenderEvent &&
                ((this.__customRenderEvent = new Mh(null)),
                (this.__customRenderEvent.objectColorTransform = new Tb()),
                (this.__customRenderEvent.objectMatrix = new ua()),
                (this.__customRenderClear = !0));
          }
          oa.prototype.addEventListener.call(this, a, b, c, d, f);
        },
        dispatchEvent: function (a) {
          if (a instanceof Ob) {
            var b = this.__getRenderTransform();
            a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
            b = this.__getRenderTransform();
            a.stageY = a.localX * b.b + a.localY * b.d + b.ty;
          } else
            a instanceof Zd &&
              ((b = this.__getRenderTransform()),
              (a.stageX = a.localX * b.a + a.localY * b.c + b.tx),
              (b = this.__getRenderTransform()),
              (a.stageY = a.localX * b.b + a.localY * b.d + b.ty));
          a.target = this;
          return this.__dispatchWithCapture(a);
        },
        getBounds: function (a) {
          var b = ua.__pool.get();
          if (null != a && a != this) {
            b.copyFrom(this.__getWorldTransform());
            var c = ua.__pool.get();
            c.copyFrom(a.__getWorldTransform());
            c.invert();
            b.concat(c);
            ua.__pool.release(c);
          } else b.identity();
          a = new na();
          this.__getBounds(a, b);
          ua.__pool.release(b);
          return a;
        },
        getRect: function (a) {
          return this.getBounds(a);
        },
        globalToLocal: function (a) {
          return this.__globalToLocal(a, new I());
        },
        hitTestPoint: function (a, b, c) {
          null == c && (c = !1);
          return null != this.stage
            ? this.__hitTest(a, b, c, null, !1, this)
            : !1;
        },
        localToGlobal: function (a) {
          return this.__getRenderTransform().transformPoint(a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          oa.prototype.removeEventListener.call(this, a, b, c);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              this.hasEventListener(a) ||
                (Object.prototype.hasOwnProperty.call(
                  S.__broadcastEvents.h,
                  a,
                ) &&
                  N.remove(S.__broadcastEvents.h[a], this));
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              this.hasEventListener('clearDOM') ||
                this.hasEventListener('renderCairo') ||
                this.hasEventListener('renderCanvas') ||
                this.hasEventListener('renderDOM') ||
                this.hasEventListener('renderOpenGL') ||
                (this.__customRenderEvent = null);
          }
        },
        __cleanup: function () {
          this.__context = this.__canvas = this.__cairo = null;
          null != this.__graphics && this.__graphics.__cleanup();
          null != this.__cacheBitmap &&
            (this.__cacheBitmap.__cleanup(), (this.__cacheBitmap = null));
          null != this.__cacheBitmapData &&
            (this.__cacheBitmapData.dispose(), (this.__cacheBitmapData = null));
        },
        __dispatch: function (a) {
          if (null != this.__eventMap && this.hasEventListener(a.type)) {
            var b = oa.prototype.__dispatchEvent.call(this, a);
            return a.__isCanceled ? !0 : b;
          }
          return !0;
        },
        __dispatchChildren: function (a) {},
        __dispatchEvent: function (a) {
          var b = a.bubbles ? this.parent : null,
            c = oa.prototype.__dispatchEvent.call(this, a);
          if (a.__isCanceled) return !0;
          null != b &&
            b != this &&
            ((a.eventPhase = 3),
            null == a.target && (a.target = this),
            b.__dispatchEvent(a));
          return c;
        },
        __dispatchWithCapture: function (a) {
          null == a.target && (a.target = this);
          if (null != this.parent)
            if (((a.eventPhase = 1), this.parent == this.stage))
              this.parent.__dispatch(a);
            else {
              for (
                var b = S.__tempStack.get(), c = this.parent, d = 0;
                null != c;

              )
                (b.set(d, c), (c = c.parent), ++d);
              c = 0;
              for (var f = d; c < f; ) {
                var h = c++;
                b.get(d - h - 1).__dispatch(a);
              }
              S.__tempStack.release(b);
            }
          a.eventPhase = 2;
          return this.__dispatchEvent(a);
        },
        __enterFrame: function (a) {},
        __getBounds: function (a, b) {
          null != this.__graphics && this.__graphics.__getBounds(a, b);
        },
        __getCursor: function () {
          return null;
        },
        __getFilterBounds: function (a, b) {
          this.__getRenderBounds(a, b);
          if (null != this.__filters) {
            b = na.__pool.get();
            for (var c = 0, d = this.__filters; c < d.length; ) {
              var f = d[c];
              ++c;
              b.__expand(
                -f.__leftExtension,
                -f.__topExtension,
                f.__leftExtension + f.__rightExtension,
                f.__topExtension + f.__bottomExtension,
              );
            }
            a.width += b.width;
            a.height += b.height;
            a.x += b.x;
            a.y += b.y;
            na.__pool.release(b);
          }
        },
        __getInteractive: function (a) {
          return !1;
        },
        __getLocalBounds: function (a) {
          this.__getBounds(a, this.__transform);
          a.x -= this.__transform.tx;
          a.y -= this.__transform.ty;
        },
        __getRenderBounds: function (a, b) {
          if (null == this.__scrollRect) this.__getBounds(a, b);
          else {
            var c = na.__pool.get();
            c.copyFrom(this.__scrollRect);
            c.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            na.__pool.release(c);
          }
        },
        __getRenderTransform: function () {
          this.__getWorldTransform();
          return this.__renderTransform;
        },
        __getWorldTransform: function () {
          if (this.__transformDirty || this.__worldTransformInvalid) {
            var a = [],
              b = this;
            if (null == this.parent) this.__update(!0, !1);
            else
              for (
                ;
                b != this.stage && (a.push(b), (b = b.parent), null != b);

              );
            for (var c = a.length; 0 <= --c; ) ((b = a[c]), b.__update(!0, !1));
          }
          return this.__worldTransform;
        },
        __globalToLocal: function (a, b) {
          this.__getRenderTransform();
          if (a == b) {
            var c = this.__renderTransform,
              d = c.a * c.d - c.b * c.c;
            if (0 == d) ((a.x = -c.tx), (a.y = -c.ty));
            else {
              var f = (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
              a.y = (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
              a.x = f;
            }
          } else
            ((c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.x =
                0 == d
                  ? -c.tx
                  : (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx))),
              (c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.y =
                0 == d
                  ? -c.ty
                  : (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x))));
          return b;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (null != this.__graphics) {
            if (
              !h.__visible ||
              this.__isMask ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
            )
              return !1;
            if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()))
              return (null == d || f || d.push(h), !0);
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          return null != this.__graphics &&
            this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform())
            ? !0
            : !1;
        },
        __readGraphicsData: function (a, b) {
          null != this.__graphics && this.__graphics.__readGraphicsData(a);
        },
        __setParentRenderDirty: function () {
          var a =
            null != this.__renderParent ? this.__renderParent : this.parent;
          null == a ||
            a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty());
        },
        __setStageReference: function (a) {
          this.stage = a;
        },
        __setTransformDirty: function () {
          this.__transformDirty ||
            ((this.__transformDirty = !0),
            this.__setWorldTransformInvalid(),
            this.__setParentRenderDirty());
        },
        __setWorldTransformInvalid: function () {
          this.__worldTransformInvalid = !0;
        },
        __update: function (a, b) {
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          this.__isMask && null == c && (c = this.__maskTarget);
          this.__renderable =
            this.__visible &&
            0 != this.__scaleX &&
            0 != this.__scaleY &&
            !this.__isMask &&
            (null == c || !c.__isMask);
          this.__updateTransforms();
          this.__worldTransformInvalid = this.__transformDirty = !1;
          if (!a)
            if (
              (S.__supportDOM &&
                ((this.__renderTransformChanged =
                  !this.__renderTransform.equals(this.__renderTransformCache)),
                null == this.__renderTransformCache
                  ? (this.__renderTransformCache =
                      this.__renderTransform.clone())
                  : this.__renderTransformCache.copyFrom(
                      this.__renderTransform,
                    )),
              null != c)
            ) {
              if (S.__supportDOM) {
                var d = c.__worldVisible && this.__visible;
                this.__worldVisibleChanged = this.__worldVisible != d;
                this.__worldVisible = d;
              }
              d = this.get_alpha() * c.__worldAlpha;
              this.__worldAlphaChanged = this.__worldAlpha != d;
              this.__worldAlpha = d;
              null != this.__objectTransform
                ? (this.__worldColorTransform.__copyFrom(
                    this.__objectTransform.__colorTransform,
                  ),
                  this.__worldColorTransform.__combine(c.__worldColorTransform))
                : this.__worldColorTransform.__copyFrom(
                    c.__worldColorTransform,
                  );
              this.__worldBlendMode =
                null == this.__blendMode || 10 == this.__blendMode
                  ? c.__worldBlendMode
                  : this.__blendMode;
              this.__worldShader =
                null == this.__shader ? c.__shader : this.__shader;
              this.__worldScale9Grid =
                null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid;
            } else
              ((this.__worldAlpha = this.get_alpha()),
                S.__supportDOM &&
                  ((this.__worldVisibleChanged =
                    this.__worldVisible != this.__visible),
                  (this.__worldVisible = this.__visible)),
                (this.__worldAlphaChanged =
                  this.__worldAlpha != this.get_alpha()),
                null != this.__objectTransform
                  ? this.__worldColorTransform.__copyFrom(
                      this.__objectTransform.__colorTransform,
                    )
                  : this.__worldColorTransform.__identity(),
                (this.__worldBlendMode = this.__blendMode),
                (this.__worldShader = this.__shader),
                (this.__worldScale9Grid = this.__scale9Grid));
          b && null != this.get_mask() && this.get_mask().__update(a, !0);
        },
        __updateTransforms: function (a) {
          var b = null != a;
          a = b ? a : this.__transform;
          null == this.__worldTransform && (this.__worldTransform = new ua());
          null == this.__renderTransform && (this.__renderTransform = new ua());
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          if (b || null == this.parent) this.__worldTransform.copyFrom(a);
          else {
            var d = this.parent.__worldTransform,
              f = this.__worldTransform;
            f.a = a.a * d.a + a.b * d.c;
            f.b = a.a * d.b + a.b * d.d;
            f.c = a.c * d.a + a.d * d.c;
            f.d = a.c * d.b + a.d * d.d;
            f.tx = a.tx * d.a + a.ty * d.c + d.tx;
            f.ty = a.tx * d.b + a.ty * d.d + d.ty;
          }
          b || null == c
            ? this.__renderTransform.copyFrom(a)
            : ((d = c.__renderTransform),
              (f = this.__renderTransform),
              (f.a = a.a * d.a + a.b * d.c),
              (f.b = a.a * d.b + a.b * d.d),
              (f.c = a.c * d.a + a.d * d.c),
              (f.d = a.c * d.b + a.d * d.d),
              (f.tx = a.tx * d.a + a.ty * d.c + d.tx),
              (f.ty = a.tx * d.b + a.ty * d.d + d.ty));
          null != this.__scrollRect &&
            ((b = this.__renderTransform),
            (a = -this.__scrollRect.x),
            (c = -this.__scrollRect.y),
            (b.tx = a * b.a + c * b.c + b.tx),
            (b.ty = a * b.b + c * b.d + b.ty));
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          1 < a && (a = 1);
          0 > a && (a = 0);
          a == this.__alpha ||
            this.get_cacheAsBitmap() ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__alpha = a);
        },
        get_blendMode: function () {
          return this.__blendMode;
        },
        get_cacheAsBitmap: function () {
          return null == this.__filters ? this.__cacheAsBitmap : !0;
        },
        set_cacheAsBitmap: function (a) {
          a == this.__cacheAsBitmap ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__cacheAsBitmap = a);
        },
        get_filters: function () {
          return null == this.__filters ? [] : this.__filters.slice();
        },
        set_filters: function (a) {
          if (null != a && 0 < a.length) {
            for (var b = [], c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              d = d.clone();
              d.__renderDirty = !0;
              b.push(d);
            }
            this.__filters = b;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          } else
            null != this.__filters &&
              ((this.__filters = null),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return a;
        },
        get_height: function () {
          var a = na.__pool.get();
          this.__getLocalBounds(a);
          var b = a.height;
          na.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = na.__pool.get(),
            c = ua.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
          na.__pool.release(b);
          ua.__pool.release(c);
          return a;
        },
        get_loaderInfo: function () {
          return null != this.stage ? Dc.current.__loaderInfo : null;
        },
        get_mask: function () {
          return this.__mask;
        },
        set_mask: function (a) {
          if (a == this.__mask) return a;
          a != this.__mask &&
            (this.__setTransformDirty(),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          if (null != this.__mask) {
            this.__mask.__isMask = !1;
            this.__mask.__maskTarget = null;
            this.__mask.__setTransformDirty();
            var b = this.__mask;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          null != a &&
            ((a.__isMask = !0),
            (a.__maskTarget = this),
            a.__setWorldTransformInvalid());
          null != this.__cacheBitmap &&
            this.__cacheBitmap.get_mask() != a &&
            this.__cacheBitmap.set_mask(a);
          return (this.__mask = a);
        },
        get_mouseX: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : Dc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : Dc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.tx
            : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
        },
        get_mouseY: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : Dc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : Dc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.ty
            : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
        },
        get_name: function () {
          return this.__name;
        },
        set_name: function (a) {
          return (this.__name = a);
        },
        get_root: function () {
          return null != this.stage ? Dc.current : null;
        },
        get_rotation: function () {
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            a %= 360;
            180 < a ? (a -= 360) : -180 > a && (a += 360);
            this.__rotation = a;
            var b = (Math.PI / 180) * this.__rotation;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            this.__transform.a = this.__rotationCosine * this.__scaleX;
            this.__transform.b = this.__rotationSine * this.__scaleX;
            this.__transform.c = -this.__rotationSine * this.__scaleY;
            this.__transform.d = this.__rotationCosine * this.__scaleY;
            this.__setTransformDirty();
          }
          return a;
        },
        get_scaleX: function () {
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX)
            if (((this.__scaleX = a), 0 == this.__transform.b))
              (a != this.__transform.a && this.__setTransformDirty(),
                (this.__transform.a = a));
            else {
              var b = this.__rotationCosine * a,
                c = this.__rotationSine * a;
              (this.__transform.a == b && this.__transform.b == c) ||
                this.__setTransformDirty();
              this.__transform.a = b;
              this.__transform.b = c;
            }
          return a;
        },
        get_scaleY: function () {
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY)
            if (((this.__scaleY = a), 0 == this.__transform.c))
              (a != this.__transform.d && this.__setTransformDirty(),
                (this.__transform.d = a));
            else {
              var b = -this.__rotationSine * a,
                c = this.__rotationCosine * a;
              (this.__transform.d == c && this.__transform.c == b) ||
                this.__setTransformDirty();
              this.__transform.c = b;
              this.__transform.d = c;
            }
          return a;
        },
        get_scrollRect: function () {
          return null == this.__scrollRect ? null : this.__scrollRect.clone();
        },
        get_transform: function () {
          null == this.__objectTransform &&
            (this.__objectTransform = new Nh(this));
          return this.__objectTransform;
        },
        set_transform: function (a) {
          if (null == a) throw new Cf('Parameter transform must be non-null.');
          null == this.__objectTransform &&
            (this.__objectTransform = new Nh(this));
          this.__setTransformDirty();
          this.__objectTransform.set_matrix(a.get_matrix());
          if (
            !this.__objectTransform.__colorTransform.__equals(
              a.__colorTransform,
              !0,
            ) ||
            (!this.get_cacheAsBitmap() &&
              this.__objectTransform.__colorTransform.alphaMultiplier !=
                a.__colorTransform.alphaMultiplier)
          )
            (this.__objectTransform.__colorTransform.__copyFrom(
              a.get_colorTransform(),
            ),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__objectTransform;
        },
        get_visible: function () {
          return this.__visible;
        },
        set_visible: function (a) {
          a == this.__visible ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__visible = a);
        },
        get_width: function () {
          var a = na.__pool.get();
          this.__getLocalBounds(a);
          var b = a.width;
          na.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = na.__pool.get(),
            c = ua.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
          na.__pool.release(b);
          ua.__pool.release(c);
          return a;
        },
        get_x: function () {
          return this.__transform.tx;
        },
        set_x: function (a) {
          a != this.__transform.tx && this.__setTransformDirty();
          return (this.__transform.tx = a);
        },
        get_y: function () {
          return this.__transform.ty;
        },
        set_y: function (a) {
          a != this.__transform.ty && this.__setTransformDirty();
          return (this.__transform.ty = a);
        },
        __class__: S,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          set_visible: 'set_visible',
          get_visible: 'get_visible',
          set_transform: 'set_transform',
          get_transform: 'get_transform',
          get_scrollRect: 'get_scrollRect',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          get_root: 'get_root',
          set_name: 'set_name',
          get_name: 'get_name',
          get_mouseY: 'get_mouseY',
          get_mouseX: 'get_mouseX',
          set_mask: 'set_mask',
          get_mask: 'get_mask',
          get_loaderInfo: 'get_loaderInfo',
          set_height: 'set_height',
          get_height: 'get_height',
          set_filters: 'set_filters',
          get_filters: 'get_filters',
          set_cacheAsBitmap: 'set_cacheAsBitmap',
          get_cacheAsBitmap: 'get_cacheAsBitmap',
          get_blendMode: 'get_blendMode',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      });
      var xa = function () {
        S.call(this);
        this.doubleClickEnabled = !1;
        this.mouseEnabled = !0;
        this.needsSoftKeyboard = !1;
        this.__tabEnabled = null;
        this.__tabIndex = -1;
      };
      g['openfl.display.InteractiveObject'] = xa;
      xa.__name__ = 'openfl.display.InteractiveObject';
      xa.__super__ = S;
      xa.prototype = v(S.prototype, {
        __allowMouseFocus: function () {
          return this.mouseEnabled ? this.get_tabEnabled() : !1;
        },
        __getInteractive: function (a) {
          null != a &&
            (a.push(this),
            null != this.parent && this.parent.__getInteractive(a));
          return !0;
        },
        __hitTest: function (a, b, c, d, f, h) {
          return !h.get_visible() || this.__isMask || (f && !this.mouseEnabled)
            ? !1
            : S.prototype.__hitTest.call(this, a, b, c, d, f, h);
        },
        __tabTest: function (a) {
          this.get_tabEnabled() && a.push(this);
        },
        get_tabEnabled: function () {
          return 1 == this.__tabEnabled ? !0 : !1;
        },
        get_tabIndex: function () {
          return this.__tabIndex;
        },
        __class__: xa,
        __properties__: v(S.prototype.__properties__, {
          get_tabIndex: 'get_tabIndex',
          get_tabEnabled: 'get_tabEnabled',
        }),
      });
      var lb = function () {
        xa.call(this);
        this.__tabChildren = this.mouseChildren = !0;
        this.__children = [];
        this.__removedChildren = la.toObjectVector(null);
      };
      g['openfl.display.DisplayObjectContainer'] = lb;
      lb.__name__ = 'openfl.display.DisplayObjectContainer';
      lb.__super__ = xa;
      lb.prototype = v(xa.prototype, {
        addChild: function (a) {
          return this.addChildAt(a, this.get_numChildren());
        },
        addChildAt: function (a, b) {
          if (null == a)
            throw (
              (a = new Cf('Error #2007: Parameter child must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (a == this)
            throw (
              (a = new fg(
                'Error #2024: An object cannot be added as a child of itself.',
              )),
              (a.errorID = 2024),
              a
            );
          if (a.stage == a)
            throw (
              (a = new fg(
                'Error #3783: A Stage object cannot be added as the child of another object.',
              )),
              (a.errorID = 3783),
              a
            );
          if (b > this.__children.length || 0 > b)
            throw X.thrown('Invalid index position ' + b);
          if (a.parent == this)
            this.__children[b] != a &&
              (N.remove(this.__children, a),
              this.__children.splice(b, 0, a),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else {
            null != a.parent && a.parent.removeChild(a);
            this.__children.splice(b, 0, a);
            a.parent = this;
            (b = null != this.stage && null == a.stage) &&
              a.__setStageReference(this.stage);
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var c = new wa('added');
            c.bubbles = !0;
            c.target = a;
            a.__dispatchWithCapture(c);
            b &&
              ((c = new wa('addedToStage', !1, !1)),
              a.__dispatchWithCapture(c),
              a.__dispatchChildren(c));
          }
          return a;
        },
        getChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.__children[a]
            : null;
        },
        getChildByName: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d.get_name() == a) return d;
          }
          return null;
        },
        getChildIndex: function (a) {
          for (var b = 0, c = this.__children.length; b < c; ) {
            var d = b++;
            if (this.__children[d] == a) return d;
          }
          return -1;
        },
        removeChild: function (a) {
          if (null != a && a.parent == this) {
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var b = new wa('removed', !0);
            a.__dispatchWithCapture(b);
            null != this.stage &&
              (null != a.stage &&
                this.stage.get_focus() == a &&
                this.stage.set_focus(null),
              (b = new wa('removedFromStage', !1, !1)),
              a.__dispatchWithCapture(b),
              a.__dispatchChildren(b),
              a.__setStageReference(null));
            a.parent = null;
            N.remove(this.__children, a);
            this.__removedChildren.push(a);
            a.__setTransformDirty();
          }
          return a;
        },
        removeChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.removeChild(this.__children[a])
            : null;
        },
        removeChildren: function (a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (2147483647 == b && ((b = this.__children.length - 1), 0 > b))
            return;
          if (!(a > this.__children.length - 1)) {
            if (b < a || 0 > a || b > this.__children.length)
              throw new Zg('The supplied index is out of bounds.');
            for (b -= a; 0 <= b; ) (this.removeChildAt(a), --b);
          }
        },
        __cleanup: function () {
          xa.prototype.__cleanup.call(this);
          for (var a = 0, b = this.__children; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__cleanup();
          }
          for (a = this.__removedChildren.iterator(); a.hasNext(); )
            ((b = a.next()), null == b.stage && b.__cleanup());
          this.__removedChildren.set_length(0);
        },
        __dispatchChildren: function (a) {
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              a.target = d;
              if (!d.__dispatchWithCapture(a)) break;
              d.__dispatchChildren(a);
            }
        },
        __enterFrame: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __getBounds: function (a, b) {
          xa.prototype.__getBounds.call(this, a, b);
          if (0 != this.__children.length) {
            for (
              var c = ua.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var h = f[d];
              ++d;
              if (0 != h.__scaleX && 0 != h.__scaleY) {
                var k = h.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                h.__getBounds(a, c);
              }
            }
            ua.__pool.release(c);
          }
        },
        __getFilterBounds: function (a, b) {
          xa.prototype.__getFilterBounds.call(this, a, b);
          if (null == this.__scrollRect && 0 != this.__children.length) {
            for (
              var c = ua.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var h = f[d];
              ++d;
              if (0 != h.__scaleX && 0 != h.__scaleY && !h.__isMask) {
                var k = h.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                k = na.__pool.get();
                h.__getFilterBounds(k, c);
                a.__expand(k.x, k.y, k.width, k.height);
                na.__pool.release(k);
              }
            }
            ua.__pool.release(c);
          }
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            xa.prototype.__getRenderBounds.call(this, a, b);
          else if (
            (xa.prototype.__getBounds.call(this, a, b),
            0 != this.__children.length)
          ) {
            for (
              var c = ua.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var h = f[d];
              ++d;
              if (0 != h.__scaleX && 0 != h.__scaleY && !h.__isMask) {
                var k = h.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                h.__getRenderBounds(a, c);
              }
            }
            ua.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (f && !this.mouseEnabled && !this.mouseChildren) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          if (null != this.__scrollRect) {
            var k = I.__pool.get();
            k.setTo(a, b);
            var n = this.__getRenderTransform(),
              p = n.a * n.d - n.b * n.c;
            if (0 == p) ((k.x = -n.tx), (k.y = -n.ty));
            else {
              var P = (1 / p) * (n.c * (n.ty - k.y) + n.d * (k.x - n.tx));
              k.y = (1 / p) * (n.a * (k.y - n.ty) + n.b * (n.tx - k.x));
              k.x = P;
            }
            if (!this.__scrollRect.containsPoint(k))
              return (I.__pool.release(k), !1);
            I.__pool.release(k);
          }
          k = this.__children.length;
          if (f)
            if (null == d || !this.mouseChildren)
              for (; 0 <= --k; ) {
                if (
                  this.__children[k].__hitTest(
                    a,
                    b,
                    c,
                    null,
                    !0,
                    this.__children[k],
                  )
                )
                  return (null != d && d.push(h), !0);
              }
            else {
              if (null != d) {
                f = d.length;
                for (
                  p = !1;
                  0 <= --k &&
                  !(
                    ((n = this.__children[k].__getInteractive(null)) ||
                      (this.mouseEnabled && !p)) &&
                    this.__children[k].__hitTest(
                      a,
                      b,
                      c,
                      d,
                      !0,
                      this.__children[k],
                    ) &&
                    ((p = !0), n && d.length > f)
                  );

                );
                if (p) return (d.splice(f, 0, h), !0);
              }
            }
          else {
            for (
              p = !1;
              0 <= --k &&
              (!this.__children[k].__hitTest(
                a,
                b,
                c,
                d,
                !1,
                this.__children[k],
              ) ||
                ((p = !0), null != d));

            );
            return p;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          for (var c = this.__children.length; 0 <= --c; )
            if (this.__children[c].__hitTestMask(a, b)) return !0;
          return !1;
        },
        __readGraphicsData: function (a, b) {
          xa.prototype.__readGraphicsData.call(this, a, b);
          if (b)
            for (var c = 0, d = this.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              f.__readGraphicsData(a, b);
            }
        },
        __setStageReference: function (a) {
          xa.prototype.__setStageReference.call(this, a);
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__setStageReference(a);
            }
        },
        __setWorldTransformInvalid: function () {
          if (
            !this.__worldTransformInvalid &&
            ((this.__worldTransformInvalid = !0), null != this.__children)
          )
            for (var a = 0, b = this.__children; a < b.length; ) {
              var c = b[a];
              ++a;
              c.__setWorldTransformInvalid();
            }
        },
        __tabTest: function (a) {
          xa.prototype.__tabTest.call(this, a);
          if (this.get_tabChildren())
            for (var b, c = 0, d = this.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              if ((b = f.__getInteractive(null))) ((b = f), b.__tabTest(a));
            }
        },
        __update: function (a, b) {
          xa.prototype.__update.call(this, a, b);
          if (b) {
            b = 0;
            for (var c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__update(a, !0);
            }
          }
        },
        get_numChildren: function () {
          return this.__children.length;
        },
        get_tabChildren: function () {
          return this.__tabChildren;
        },
        __class__: lb,
        __properties__: v(xa.prototype.__properties__, {
          get_tabChildren: 'get_tabChildren',
          get_numChildren: 'get_numChildren',
        }),
      });
      var ka = function () {
        lb.call(this);
        this.__drawableType = 4;
        this.__buttonMode = !1;
        this.useHandCursor = !0;
        if (null != this.__pendingBindLibrary) {
          var a = this.__pendingBindLibrary,
            b = this.__pendingBindClassName;
          this.__pendingBindClassName = this.__pendingBindLibrary = null;
          a.bind(b, this);
        } else
          null != ka.__constructor &&
            ((a = ka.__constructor), (ka.__constructor = null), a(this));
      };
      g['openfl.display.Sprite'] = ka;
      ka.__name__ = 'openfl.display.Sprite';
      ka.__super__ = lb;
      ka.prototype = v(lb.prototype, {
        stopDrag: function () {
          null != this.stage && this.stage.__stopDrag(this);
        },
        __setStageReference: function (a) {
          this.stage != a &&
            null != this.stage &&
            this.stage.__dragObject == this &&
            this.stopDrag();
          lb.prototype.__setStageReference.call(this, a);
        },
        __getCursor: function () {
          return this.__buttonMode && this.useHandCursor ? 'button' : null;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (f && !this.mouseEnabled && !this.mouseChildren) return !1;
          if (
            !h.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return this.__hitTestHitArea(a, b, c, d, f, h);
          if (null != this.__scrollRect) {
            var k = I.__pool.get();
            k.setTo(a, b);
            var n = this.__getRenderTransform(),
              p = n.a * n.d - n.b * n.c;
            if (0 == p) ((k.x = -n.tx), (k.y = -n.ty));
            else {
              var P = (1 / p) * (n.c * (n.ty - k.y) + n.d * (k.x - n.tx));
              k.y = (1 / p) * (n.a * (k.y - n.ty) + n.b * (n.tx - k.x));
              k.x = P;
            }
            if (!this.__scrollRect.containsPoint(k))
              return (
                I.__pool.release(k),
                this.__hitTestHitArea(a, b, c, d, !0, h)
              );
            I.__pool.release(k);
          }
          return lb.prototype.__hitTest.call(this, a, b, c, d, f, h)
            ? null != d
              ? f
              : !0
            : null == this.hitArea &&
                null != this.__graphics &&
                this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())
              ? (null == d || (f && !this.mouseEnabled) || d.push(h), !0)
              : this.__hitTestHitArea(a, b, c, d, f, h);
        },
        __hitTestHitArea: function (a, b, c, d, f, h) {
          return null == this.hitArea || this.hitArea.mouseEnabled
            ? !1
            : ((this.hitArea.mouseEnabled = !0),
              (a = this.hitArea.__hitTest(a, b, c, null, !0, h)),
              (this.hitArea.mouseEnabled = !1),
              null != d && a && (d[d.length] = h),
              a);
        },
        __hitTestMask: function (a, b) {
          return lb.prototype.__hitTestMask.call(this, a, b) ||
            (null != this.__graphics &&
              this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()))
            ? !0
            : !1;
        },
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new Ed(this));
          return this.__graphics;
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? this.__buttonMode
            : this.__tabEnabled;
        },
        get_buttonMode: function () {
          return this.__buttonMode;
        },
        set_buttonMode: function (a) {
          return (this.__buttonMode = a);
        },
        __class__: ka,
        __properties__: v(lb.prototype.__properties__, {
          get_graphics: 'get_graphics',
          set_buttonMode: 'set_buttonMode',
          get_buttonMode: 'get_buttonMode',
        }),
      });
      var Va = function (a) {
        Va.instance = this;
        ka.call(this);
        this.prepareStage();
        rb.useEnterFrame(this);
        Va.switchScene(a);
      };
      g['com.watabou.coogee.Game'] = Va;
      Va.__name__ = 'com.watabou.coogee.Game';
      Va.switchScene = function (a) {
        Va.instance.switchSceneImp(a);
      };
      Va.quit = function () {};
      Va.__super__ = ka;
      Va.prototype = v(ka.prototype, {
        prepareStage: function () {
          var a = this;
          this.stage.align = 6;
          this.stage.set_scaleMode(2);
          this.stage.addEventListener('resize', function (b) {
            a.layout();
          });
          this.stage.application.onExit.add(l(this, this.onExit));
          this.stage.application.__window.onActivate.add(
            l(this, this.onResume),
          );
          this.stage.application.__window.onDeactivate.add(
            l(this, this.onPause),
          );
        },
        onExit: function (a) {
          rb.stop();
        },
        onResume: function () {},
        onPause: function () {},
        layout: function () {
          if (null != Va.scene) {
            var a = this.stage.stageWidth,
              b = this.stage.stageHeight,
              c = this.getScale(a, b);
            Va.scene.set_scaleX(Va.scene.set_scaleY(c));
            Va.scene.setSize(a / c, b / c);
          }
        },
        getScale: function (a, b) {
          return 1;
        },
        switchSceneImp: function (a) {
          null != Va.scene &&
            (Va.scene.deactivate(),
            this.removeChild(Va.scene),
            (Va.scene = null));
          null != a &&
            ((Va.scene = w.createInstance(a, [])),
            this.addChild(Va.scene),
            this.layout(),
            Va.scene.activate());
          this.stage.set_focus(this.stage);
        },
        __class__: Va,
      });
      var sb = function () {
        C.reset();
        D.useDefault();
        Aa.baseURL = 'https://watabou.github.io/city-generator';
        sb.preview = Aa.getFlag('preview');
        ba.init(null, kd.prepare);
        K.restore();
        this.stage.showDefaultContextMenu = !1;
        var a = Fd.fromURL();
        null == a
          ? (a = Fd.create(25, C.seed))
          : null != a.style && K.setPalette(Xc.fromAsset(a.style));
        new Ub(a);
        Va.call(this, Ec);
      };
      g['com.watabou.mfcg.Main'] = sb;
      sb.__name__ = 'com.watabou.mfcg.Main';
      sb.__super__ = Va;
      sb.prototype = v(Va.prototype, {
        getScale: function (a, b) {
          Uj.get_screenDPI();
          return 1;
        },
        switchSceneImp: function (a) {
          null == u.layer && (u.layer = new U());
          Va.prototype.switchSceneImp.call(this, a);
          this.addChild(u.layer);
        },
        layout: function () {
          var a = this.stage.stageWidth,
            b = this.stage.stageHeight,
            c = this.getScale(a, b);
          u.layer.set_scaleX(u.layer.set_scaleY(c));
          u.layer.setSize(a / c, b / c);
          Va.prototype.layout.call(this);
        },
        __class__: sb,
      });
      var rc = function (a) {
        a.addChild(this);
        sb.call(this);
        this.dispatchEvent(new wa('addedToStage', !1, !1));
      };
      g.DocumentClass = rc;
      rc.__name__ = 'DocumentClass';
      rc.__super__ = sb;
      rc.prototype = v(sb.prototype, { __class__: rc });
      var ja = function (a, b) {
        this.r = new RegExp(a, b.split('u').join(''));
      };
      g.EReg = ja;
      ja.__name__ = 'EReg';
      ja.prototype = {
        match: function (a) {
          this.r.global && (this.r.lastIndex = 0);
          this.r.m = this.r.exec(a);
          this.r.s = a;
          return null != this.r.m;
        },
        matched: function (a) {
          if (null != this.r.m && 0 <= a && a < this.r.m.length)
            return this.r.m[a];
          throw X.thrown('EReg::matched');
        },
        matchedPos: function () {
          if (null == this.r.m) throw X.thrown('No string matched');
          return { pos: this.r.m.index, len: this.r.m[0].length };
        },
        matchSub: function (a, b, c) {
          null == c && (c = -1);
          if (this.r.global) {
            if (
              ((this.r.lastIndex = b),
              (this.r.m = this.r.exec(0 > c ? a : N.substr(a, 0, b + c))),
              (c = null != this.r.m))
            )
              this.r.s = a;
          } else if (
            (c = this.match(0 > c ? N.substr(a, b, null) : N.substr(a, b, c)))
          )
            ((this.r.s = a), (this.r.m.index += b));
          return c;
        },
        split: function (a) {
          return a.replace(this.r, '#__delim__#').split('#__delim__#');
        },
        map: function (a, b) {
          var c = 0,
            d = '';
          do {
            if (c >= a.length) break;
            else if (!this.matchSub(a, c)) {
              d += H.string(N.substr(a, c, null));
              break;
            }
            var f = this.matchedPos();
            d += H.string(N.substr(a, c, f.pos - c));
            d += H.string(b(this));
            0 == f.len
              ? ((d += H.string(N.substr(a, f.pos, 1))), (c = f.pos + 1))
              : (c = f.pos + f.len);
          } while (this.r.global);
          !this.r.global &&
            0 < c &&
            c < a.length &&
            (d += H.string(N.substr(a, c, null)));
          return d;
        },
        __class__: ja,
      };
      var N = function () {};
      g.HxOverrides = N;
      N.__name__ = 'HxOverrides';
      N.strDate = function (a) {
        switch (a.length) {
          case 8:
            a = a.split(':');
            var b = new Date();
            b.setTime(0);
            b.setUTCHours(a[0]);
            b.setUTCMinutes(a[1]);
            b.setUTCSeconds(a[2]);
            return b;
          case 10:
            return (
              (a = a.split('-')),
              new Date(a[0], a[1] - 1, a[2], 0, 0, 0)
            );
          case 19:
            return (
              (a = a.split(' ')),
              (b = a[0].split('-')),
              (a = a[1].split(':')),
              new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2])
            );
          default:
            throw X.thrown('Invalid date format : ' + a);
        }
      };
      N.cca = function (a, b) {
        a = a.charCodeAt(b);
        if (a == a) return a;
      };
      N.substr = function (a, b, c) {
        if (null == c) c = a.length;
        else if (0 > c)
          if (0 == b) c = a.length + c;
          else return '';
        return a.substr(b, c);
      };
      N.remove = function (a, b) {
        b = a.indexOf(b);
        if (-1 == b) return !1;
        a.splice(b, 1);
        return !0;
      };
      N.now = function () {
        return Date.now();
      };
      var F = function () {};
      g.Lambda = F;
      F.__name__ = 'Lambda';
      F.array = function (a) {
        var b = [];
        for (a = L(a); a.hasNext(); ) {
          var c = a.next();
          b.push(c);
        }
        return b;
      };
      var Ab = function () {};
      g.ManifestResources = Ab;
      Ab.__name__ = 'ManifestResources';
      Ab.init = function (a) {
        Ab.preloadLibraries = [];
        Ab.preloadLibraryNames = [];
        Ab.rootPath = null;
        null != a &&
          Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          ((Ab.rootPath = ya.field(a, 'rootPath')),
          O.endsWith(Ab.rootPath, '/') || (Ab.rootPath += '/'));
        null == Ab.rootPath && (Ab.rootPath = './');
        ha.registerFont(ca);
        ha.registerFont(T);
        ha.registerFont(cd);
        a = td.parse(
          '{"name":null,"assets":"aoy4:sizei212148y4:typey4:FONTy9:classNamey45:__ASSET__assets_imfellgreatprimer_regular_ttfy2:idy12:default_fonty7:preloadtgoR0i46596R1R2R3y37:__ASSET__assets_sharetech_regular_ttfR5y7:ui_fontR7tgoR0i42756R1R2R3y41:__ASSET__assets_sharetechmono_regular_ttfR5y12:ui_font_monoR7tgoy4:pathy21:Assets%2Fdefault.jsonR0i343R1y4:TEXTR5y7:defaultR7tgoR12y17:Assets%2Fink.jsonR0i343R1R14R5y3:inkR7tgoR12y16:Assets%2Fbw.jsonR0i341R1R14R5y2:bwR7tgoR12y19:Assets%2Fvivid.jsonR0i341R1R14R5y5:vividR7tgoR12y21:Assets%2Fnatural.jsonR0i341R1R14R5y7:naturalR7tgoR12y20:Assets%2Fmodern.jsonR0i340R1R14R5y6:modernR7tgoR12y21:Assets%2Fgrammar.jsonR0i4401R1R14R5y7:grammarR7tgoR12y20:Assets%2Fenglish.txtR0i6166R1R14R5y7:englishR7tgoR12y18:Assets%2Felven.txtR0i332R1R14R5y5:elvenR7tgoR12y23:Assets%2Fgiven_male.txtR0i808R1R14R5y4:maleR7tgoR12y25:Assets%2Fgiven_female.txtR0i665R1R14R5y6:femaleR7tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
          Ab.rootPath,
        );
        a = Wb.fromManifest(a);
        Fa.registerLibrary('default', a);
        a = Fa.getLibrary('default');
        null != a
          ? Ab.preloadLibraries.push(a)
          : Ab.preloadLibraryNames.push('default');
      };
      var hb = function (a) {
        null != a && (this.name = a);
        this.__init ||
          (void 0 == this.ascender && (this.ascender = 0),
          void 0 == this.descender && (this.descender = 0),
          void 0 == this.height && (this.height = 0),
          void 0 == this.numGlyphs && (this.numGlyphs = 0),
          void 0 == this.underlinePosition && (this.underlinePosition = 0),
          void 0 == this.underlineThickness && (this.underlineThickness = 0),
          void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
          null != this.__fontID
            ? Fa.isLocal(this.__fontID) &&
              this.__fromBytes(Fa.getBytes(this.__fontID))
            : null != this.__fontPath && this.__fromFile(this.__fontPath));
      };
      g['lime.text.Font'] = hb;
      hb.__name__ = 'lime.text.Font';
      hb.fromFile = function (a) {
        if (null == a) return null;
        var b = new hb();
        b.__fromFile(a);
        return b;
      };
      hb.loadFromName = function (a) {
        return new hb().__loadFromName(a);
      };
      hb.__measureFontNode = function (a) {
        var b = window.document.createElement('span');
        b.setAttribute('aria-hidden', 'true');
        var c = window.document.createTextNode('BESbswy');
        b.appendChild(c);
        c = b.style;
        c.display = 'block';
        c.position = 'absolute';
        c.top = '-9999px';
        c.left = '-9999px';
        c.fontSize = '300px';
        c.width = 'auto';
        c.height = 'auto';
        c.lineHeight = 'normal';
        c.margin = '0';
        c.padding = '0';
        c.fontVariant = 'normal';
        c.whiteSpace = 'nowrap';
        c.fontFamily = a;
        window.document.body.appendChild(b);
        return b;
      };
      hb.prototype = {
        __copyFrom: function (a) {
          null != a &&
            ((this.ascender = a.ascender),
            (this.descender = a.descender),
            (this.height = a.height),
            (this.name = a.name),
            (this.numGlyphs = a.numGlyphs),
            (this.src = a.src),
            (this.underlinePosition = a.underlinePosition),
            (this.underlineThickness = a.underlineThickness),
            (this.unitsPerEM = a.unitsPerEM),
            (this.__fontID = a.__fontID),
            (this.__fontPath = a.__fontPath),
            (this.__init = !0));
        },
        __fromBytes: function (a) {
          this.__fontPath = null;
        },
        __fromFile: function (a) {
          this.__fontPath = a;
        },
        __loadFromName: function (a) {
          var b = this,
            c = new Gd();
          this.name = a;
          var d = E.navigator.userAgent.toLowerCase(),
            f = 0 <= d.indexOf(' safari/') && 0 > d.indexOf(' chrome/');
          d = new ja('(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)', 'i').match(
            d,
          );
          if (
            !f &&
            !d &&
            window.document.fonts &&
            ((G = window.document.fonts), l(G, G.load))
          )
            window.document.fonts.load("1em '" + a + "'").then(
              function (a) {
                c.complete(b);
              },
              function (d) {
                Ga.warn('Could not load web font "' + a + '"', {
                  fileName: 'lime/text/Font.hx',
                  lineNumber: 640,
                  className: 'lime.text.Font',
                  methodName: '__loadFromName',
                });
                c.complete(b);
              },
            );
          else {
            var h = hb.__measureFontNode("'" + a + "', sans-serif"),
              k = hb.__measureFontNode("'" + a + "', serif"),
              n = h.offsetWidth,
              p = k.offsetWidth,
              P = -1,
              g = 0,
              m,
              q;
            P = window.setInterval(function () {
              g += 1;
              m = h.offsetWidth != n || k.offsetWidth != p;
              q = 3e3 <= 50 * g;
              if (m || q)
                (window.clearInterval(P),
                  h.parentNode.removeChild(h),
                  k.parentNode.removeChild(k),
                  (k = h = null),
                  q &&
                    Ga.warn('Could not load web font "' + a + '"', {
                      fileName: 'lime/text/Font.hx',
                      lineNumber: 675,
                      className: 'lime.text.Font',
                      methodName: '__loadFromName',
                    }),
                  c.complete(b));
            }, 50);
          }
          return c.future;
        },
        __class__: hb,
      };
      var za = (t.__ASSET__assets_imfellgreatprimer_regular_ttf = function () {
        this.ascender = 1942;
        this.descender = -562;
        this.height = 2504;
        this.numGlyphs = 369;
        this.underlinePosition = -200;
        this.underlineThickness = 84;
        this.unitsPerEM = 2048;
        this.name = 'IM FELL Great Primer Roman';
        hb.call(this);
      });
      g.__ASSET__assets_imfellgreatprimer_regular_ttf = za;
      za.__name__ = '__ASSET__assets_imfellgreatprimer_regular_ttf';
      za.__super__ = hb;
      za.prototype = v(hb.prototype, { __class__: za });
      var Ia = (t.__ASSET__assets_sharetech_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 256;
        this.underlinePosition = -100;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Regular';
        hb.call(this);
      });
      g.__ASSET__assets_sharetech_regular_ttf = Ia;
      Ia.__name__ = '__ASSET__assets_sharetech_regular_ttf';
      Ia.__super__ = hb;
      Ia.prototype = v(hb.prototype, { __class__: Ia });
      var Na = (t.__ASSET__assets_sharetechmono_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 268;
        this.underlinePosition = -135;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Mono';
        hb.call(this);
      });
      g.__ASSET__assets_sharetechmono_regular_ttf = Na;
      Na.__name__ = '__ASSET__assets_sharetechmono_regular_ttf';
      Na.__super__ = hb;
      Na.prototype = v(hb.prototype, { __class__: Na });
      var ha = function (a) {
        hb.call(this, a);
      };
      g['openfl.text.Font'] = ha;
      ha.__name__ = 'openfl.text.Font';
      ha.fromFile = function (a) {
        if (null == a) return null;
        var b = new ha();
        b.__fromFile(a);
        return b;
      };
      ha.loadFromName = function (a) {
        return hb.loadFromName(a).then(function (a) {
          var b = new ha();
          b.__fromLimeFont(a);
          return hc.withValue(b);
        });
      };
      ha.registerFont = function (a) {
        a =
          null == va.getClass(a)
            ? va.__cast(w.createInstance(a, []), ha)
            : va.__cast(a, ha);
        null != a &&
          (ha.__registeredFonts.push(a), (ha.__fontByName.h[a.name] = a));
      };
      ha.__super__ = hb;
      ha.prototype = v(hb.prototype, {
        __fromLimeFont: function (a) {
          this.__copyFrom(a);
        },
        __class__: ha,
      });
      var ca = (t.__ASSET__OPENFL__assets_imfellgreatprimer_regular_ttf =
        function () {
          this.__fromLimeFont(new za());
          hb.call(this, void 0);
        });
      g.__ASSET__OPENFL__assets_imfellgreatprimer_regular_ttf = ca;
      ca.__name__ = '__ASSET__OPENFL__assets_imfellgreatprimer_regular_ttf';
      ca.__super__ = ha;
      ca.prototype = v(ha.prototype, { __class__: ca });
      var T = (t.__ASSET__OPENFL__assets_sharetech_regular_ttf = function () {
        this.__fromLimeFont(new Ia());
        hb.call(this, void 0);
      });
      g.__ASSET__OPENFL__assets_sharetech_regular_ttf = T;
      T.__name__ = '__ASSET__OPENFL__assets_sharetech_regular_ttf';
      T.__super__ = ha;
      T.prototype = v(ha.prototype, { __class__: T });
      var cd = (t.__ASSET__OPENFL__assets_sharetechmono_regular_ttf =
        function () {
          this.__fromLimeFont(new Na());
          hb.call(this, void 0);
        });
      g.__ASSET__OPENFL__assets_sharetechmono_regular_ttf = cd;
      cd.__name__ = '__ASSET__OPENFL__assets_sharetechmono_regular_ttf';
      cd.__super__ = ha;
      cd.prototype = v(ha.prototype, { __class__: cd });
      Math.__name__ = 'Math';
      var ya = function () {};
      g.Reflect = ya;
      ya.__name__ = 'Reflect';
      ya.field = function (a, b) {
        try {
          return a[b];
        } catch (c) {
          return ((Ta.lastError = c), null);
        }
      };
      ya.getProperty = function (a, b) {
        var c;
        if (null == a) return null;
        var d = a.__properties__ ? (c = a.__properties__['get_' + b]) : !1;
        return d ? a[c]() : a[b];
      };
      ya.fields = function (a) {
        var b = [];
        if (null != a) {
          var c = Object.prototype.hasOwnProperty,
            d;
          for (d in a)
            '__id__' != d && 'hx__closures__' != d && c.call(a, d) && b.push(d);
        }
        return b;
      };
      ya.isFunction = function (a) {
        return 'function' == typeof a ? !(a.__name__ || a.__ename__) : !1;
      };
      ya.compare = function (a, b) {
        return a == b ? 0 : a > b ? 1 : -1;
      };
      ya.deleteField = function (a, b) {
        if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
        delete a[b];
        return !0;
      };
      var H = function () {};
      g.Std = H;
      H.__name__ = 'Std';
      H.string = function (a) {
        return va.__string_rec(a, '');
      };
      H.parseInt = function (a) {
        a = parseInt(a);
        return isNaN(a) ? null : a;
      };
      var wb = function () {};
      g['_String.String_Impl_'] = wb;
      wb.__name__ = '_String.String_Impl_';
      wb.fromCharCode = function (a) {
        return String.fromCodePoint(a);
      };
      var x = function () {
        this.b = '';
      };
      g.StringBuf = x;
      x.__name__ = 'StringBuf';
      x.prototype = { __class__: x };
      var O = function () {};
      g.StringTools = O;
      O.__name__ = 'StringTools';
      O.htmlEscape = function (a, b) {
        for (var c = '', d = 0, f = a; d < f.length; ) {
          a = f;
          var h = d++,
            k = a.charCodeAt(h);
          55296 <= k &&
            56319 >= k &&
            (k = ((k - 55232) << 10) | (a.charCodeAt(h + 1) & 1023));
          a = k;
          65536 <= a && ++d;
          switch (a) {
            case 34:
              c = b ? c + '&quot;' : c + String.fromCodePoint(a);
              break;
            case 38:
              c += '&amp;';
              break;
            case 39:
              c = b ? c + '&#039;' : c + String.fromCodePoint(a);
              break;
            case 60:
              c += '&lt;';
              break;
            case 62:
              c += '&gt;';
              break;
            default:
              c += String.fromCodePoint(a);
          }
        }
        return c;
      };
      O.htmlUnescape = function (a) {
        return a
          .split('&gt;')
          .join('>')
          .split('&lt;')
          .join('<')
          .split('&quot;')
          .join('"')
          .split('&#039;')
          .join("'")
          .split('&amp;')
          .join('&');
      };
      O.startsWith = function (a, b) {
        return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1;
      };
      O.endsWith = function (a, b) {
        var c = b.length,
          d = a.length;
        return d >= c ? a.indexOf(b, d - c) == d - c : !1;
      };
      O.isSpace = function (a, b) {
        a = N.cca(a, b);
        return 8 < a && 14 > a ? !0 : 32 == a;
      };
      O.ltrim = function (a) {
        for (var b = a.length, c = 0; c < b && O.isSpace(a, c); ) ++c;
        return 0 < c ? N.substr(a, c, b - c) : a;
      };
      O.rtrim = function (a) {
        for (var b = a.length, c = 0; c < b && O.isSpace(a, b - c - 1); ) ++c;
        return 0 < c ? N.substr(a, 0, b - c) : a;
      };
      O.trim = function (a) {
        return O.ltrim(O.rtrim(a));
      };
      O.replace = function (a, b, c) {
        return a.split(b).join(c);
      };
      O.hex = function (a, b) {
        var c = '';
        do ((c = '0123456789ABCDEF'.charAt(a & 15) + c), (a >>>= 4));
        while (0 < a);
        if (null != b) for (; c.length < b; ) c = '0' + c;
        return c;
      };
      var J = (y.ValueType = {
        __ename__: 'ValueType',
        __constructs__: null,
        TNull: {
          _hx_name: 'TNull',
          _hx_index: 0,
          __enum__: 'ValueType',
          toString: r,
        },
        TInt: {
          _hx_name: 'TInt',
          _hx_index: 1,
          __enum__: 'ValueType',
          toString: r,
        },
        TFloat: {
          _hx_name: 'TFloat',
          _hx_index: 2,
          __enum__: 'ValueType',
          toString: r,
        },
        TBool: {
          _hx_name: 'TBool',
          _hx_index: 3,
          __enum__: 'ValueType',
          toString: r,
        },
        TObject: {
          _hx_name: 'TObject',
          _hx_index: 4,
          __enum__: 'ValueType',
          toString: r,
        },
        TFunction: {
          _hx_name: 'TFunction',
          _hx_index: 5,
          __enum__: 'ValueType',
          toString: r,
        },
        TClass:
          ((G = function (a) {
            return { _hx_index: 6, c: a, __enum__: 'ValueType', toString: r };
          }),
          (G._hx_name = 'TClass'),
          (G.__params__ = ['c']),
          G),
        TEnum:
          ((G = function (a) {
            return { _hx_index: 7, e: a, __enum__: 'ValueType', toString: r };
          }),
          (G._hx_name = 'TEnum'),
          (G.__params__ = ['e']),
          G),
        TUnknown: {
          _hx_name: 'TUnknown',
          _hx_index: 8,
          __enum__: 'ValueType',
          toString: r,
        },
      });
      J.__constructs__ = [
        J.TNull,
        J.TInt,
        J.TFloat,
        J.TBool,
        J.TObject,
        J.TFunction,
        J.TClass,
        J.TEnum,
        J.TUnknown,
      ];
      var w = function () {};
      g.Type = w;
      w.__name__ = 'Type';
      w.resolveEnum = function (a) {
        return y[a];
      };
      w.createInstance = function (a, b) {
        return new (Function.prototype.bind.apply(a, [null].concat(b)))();
      };
      w.createEnum = function (a, b, c) {
        var d = ya.field(a, b);
        if (null == d) throw X.thrown('No such constructor ' + b);
        if (ya.isFunction(d)) {
          if (null == c)
            throw X.thrown('Constructor ' + b + ' need parameters');
          return d.apply(a, c);
        }
        if (null != c && 0 != c.length)
          throw X.thrown('Constructor ' + b + ' does not need parameters');
        return d;
      };
      w.typeof = function (a) {
        switch (typeof a) {
          case 'boolean':
            return J.TBool;
          case 'function':
            return a.__name__ || a.__ename__ ? J.TObject : J.TFunction;
          case 'number':
            return Math.ceil(a) == a % 2147483648 ? J.TInt : J.TFloat;
          case 'object':
            if (null == a) return J.TNull;
            var b = a.__enum__;
            if (null != b) return J.TEnum(y[b]);
            a = va.getClass(a);
            return null != a ? J.TClass(a) : J.TObject;
          case 'string':
            return J.TClass(String);
          case 'undefined':
            return J.TNull;
          default:
            return J.TUnknown;
        }
      };
      w.enumParameters = function (a) {
        var b = y[a.__enum__].__constructs__[a._hx_index].__params__;
        if (null != b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            c.push(a[f]);
          }
          return c;
        }
        return [];
      };
      var cb = {
          gt: function (a, b) {
            var c = 0 > a;
            return c != 0 > b ? c : a > b;
          },
          toFloat: function (a) {
            return 0 > a ? 4294967296 + a : a + 0;
          },
        },
        Cb = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'Element';
              case 1:
                return 'PCData';
              case 2:
                return 'CData';
              case 3:
                return 'Comment';
              case 4:
                return 'DocType';
              case 5:
                return 'ProcessingInstruction';
              case 6:
                return 'Document';
            }
          },
        },
        W = function (a) {
          this.nodeType = a;
          this.children = [];
          this.attributeMap = new Pa();
        };
      g.Xml = W;
      W.__name__ = 'Xml';
      W.parse = function (a) {
        return ef.parse(a);
      };
      W.createElement = function (a) {
        var b = new W(W.Element);
        if (b.nodeType != W.Element)
          throw X.thrown(
            'Bad node type, expected Element but found ' +
              (null == b.nodeType ? 'null' : Cb.toString(b.nodeType)),
          );
        b.nodeName = a;
        return b;
      };
      W.createPCData = function (a) {
        var b = new W(W.PCData);
        if (b.nodeType == W.Document || b.nodeType == W.Element)
          throw X.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : Cb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      W.createCData = function (a) {
        var b = new W(W.CData);
        if (b.nodeType == W.Document || b.nodeType == W.Element)
          throw X.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : Cb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      W.createComment = function (a) {
        var b = new W(W.Comment);
        if (b.nodeType == W.Document || b.nodeType == W.Element)
          throw X.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : Cb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      W.createDocType = function (a) {
        var b = new W(W.DocType);
        if (b.nodeType == W.Document || b.nodeType == W.Element)
          throw X.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : Cb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      W.createProcessingInstruction = function (a) {
        var b = new W(W.ProcessingInstruction);
        if (b.nodeType == W.Document || b.nodeType == W.Element)
          throw X.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : Cb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      W.createDocument = function () {
        return new W(W.Document);
      };
      W.prototype = {
        get: function (a) {
          if (this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          return this.attributeMap.h[a];
        },
        set: function (a, b) {
          if (this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          this.attributeMap.h[a] = b;
        },
        remove: function (a) {
          if (this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          var b = this.attributeMap;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
        },
        exists: function (a) {
          if (this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a);
        },
        attributes: function () {
          if (this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          return new Oh(this.attributeMap.h);
        },
        firstElement: function () {
          if (this.nodeType != W.Document && this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          for (var a = 0, b = this.children; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.nodeType == W.Element) return c;
          }
          return null;
        },
        addChild: function (a) {
          if (this.nodeType != W.Document && this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          null != a.parent && a.parent.removeChild(a);
          this.children.push(a);
          a.parent = this;
        },
        removeChild: function (a) {
          if (this.nodeType != W.Document && this.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : Cb.toString(this.nodeType)),
            );
          return N.remove(this.children, a) ? ((a.parent = null), !0) : !1;
        },
        toString: function () {
          return Df.print(this);
        },
        __class__: W,
      };
      var Pb = function () {
        this.keyShift = this.keyCtrl = this.isSolid = !1;
        this.rWidth = this.rHeight = 0;
        this.update = new ec();
        this.keyEvent = new $g();
        ka.call(this);
      };
      g['com.watabou.coogee.Scene'] = Pb;
      Pb.__name__ = 'com.watabou.coogee.Scene';
      Pb.__super__ = ka;
      Pb.prototype = v(ka.prototype, {
        activate: function () {
          rb.get_tick().add(l(this, this.onUpdate));
          this.stage.addEventListener('keyDown', l(this, this.onKeyDown));
          this.stage.addEventListener('keyUp', l(this, this.onKeyUp));
        },
        deactivate: function () {
          rb.get_tick().remove(l(this, this.onUpdate));
          this.stage.removeEventListener('keyDown', l(this, this.onKeyDown));
          this.stage.removeEventListener('keyUp', l(this, this.onKeyUp));
        },
        onEsc: function () {
          Va.quit();
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !0;
              break;
            case 16:
              this.keyShift = !0;
              break;
            case 27:
              this.onEsc();
          }
          this.keyEvent.dispatch(a.keyCode, !0);
          null == this.stage ||
            this.stage.get_focus() instanceof sc ||
            a.preventDefault();
        },
        onKeyUp: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !1;
              break;
            case 16:
              this.keyShift = !1;
          }
          this.keyEvent.dispatch(a.keyCode, !1);
          this.stage.get_focus() instanceof sc || a.preventDefault();
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        get_width: function () {
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        layout: function () {},
        onUpdate: function (a) {
          this.update.dispatch(a);
        },
        __hitTest: function (a, b, c, d, f, h) {
          a = ka.prototype.__hitTest.call(this, a, b, c, d, f, h);
          return this.isSolid ? (a || d.push(h), !0) : a;
        },
        __class__: Pb,
      });
      var U = function () {
        this.valign = 'top';
        this.halign = 'left';
        this.rWidth = this.rHeight = 0;
        ka.call(this);
      };
      g['com.watabou.coogee.ui.View'] = U;
      U.__name__ = 'com.watabou.coogee.ui.View';
      U.__super__ = ka;
      U.prototype = v(ka.prototype, {
        get_width: function () {
          return this.rWidth;
        },
        set_width: function (a) {
          this.setSize(a, this.rHeight);
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        set_height: function (a) {
          this.setSize(this.rWidth, a);
          return this.rHeight;
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        layout: function () {},
        add: function (a) {
          this.addChild(a);
        },
        wipe: function () {
          this.removeChildren();
        },
        set_enabled: function (a) {
          return (this.mouseEnabled = this.mouseChildren = a);
        },
        __class__: U,
        __properties__: v(ka.prototype.__properties__, {
          set_enabled: 'set_enabled',
        }),
      });
      var Hb = function () {
        this.click = new Nc();
        U.call(this);
        this.label = this.createLabel();
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.setSize(this.label.get_width() + 10, this.label.get_height() + 10);
      };
      g['com.watabou.coogee.ui.ButtonBase'] = Hb;
      Hb.__name__ = 'com.watabou.coogee.ui.ButtonBase';
      Hb.__super__ = U;
      Hb.prototype = v(U.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(D.black);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            10,
          );
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        createLabel: function () {
          return null;
        },
        onClick: function (a) {
          this.click.dispatch();
        },
        __class__: Hb,
      });
      var ib = function (a, b) {
        this.txtLabel = a;
        Hb.call(this);
        null != b && this.click.add(b);
      };
      g['com.watabou.coogee.ui.Button'] = ib;
      ib.__name__ = 'com.watabou.coogee.ui.Button';
      ib.__super__ = Hb;
      ib.prototype = v(Hb.prototype, {
        createLabel: function () {
          return ld.get(
            this.txtLabel,
            D.format(D.uiFont, D.smallSize, D.white),
          );
        },
        __class__: ib,
      });
      var fb = function () {
        this.snap = !0;
        this.margin = this.gap = 10;
        U.call(this);
      };
      g['com.watabou.coogee.ui.layouts.VBox'] = fb;
      fb.__name__ = 'com.watabou.coogee.ui.layouts.VBox';
      fb.__super__ = U;
      fb.prototype = v(U.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              c = !1,
              d = 0,
              f = this.get_numChildren();
            d < f;

          ) {
            var h = d++;
            h = this.getChildAt(h);
            'left' != h.halign && (c = !0);
            b < h.get_width() && (b = h.get_width());
            h.set_x(this.margin);
            h.set_y(a);
            a += h.get_height() + this.gap;
            this.snap && (a |= 0);
          }
          if (c)
            for (d = 0, f = this.get_numChildren(); d < f; )
              switch (((h = d++), (h = this.getChildAt(h)), h.halign)) {
                case 'center':
                  h.set_x(this.margin + (b - h.get_width()) / 2);
                  break;
                case 'fill':
                  h.set_width(b);
                  break;
                case 'right':
                  h.set_x(this.margin + (b - h.get_width()));
              }
          this.rHeight =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rWidth = b + 2 * this.margin;
        },
        add: function (a) {
          U.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: fb,
      });
      var oc = function () {
        fb.call(this);
        this.setMargins(0, 0);
        this.addEventListener('keyDown', l(this, this.onKeyDown));
        this.addEventListener('focusOut', l(this, this.onFocusOut));
      };
      g['com.watabou.coogee.ui.Form'] = oc;
      oc.__name__ = 'com.watabou.coogee.ui.Form';
      oc.__super__ = fb;
      oc.prototype = v(fb.prototype, {
        getTitle: function () {
          return null;
        },
        onShow: function () {},
        onHide: function () {},
        onKeyDown: function (a) {
          this.onKey(a.keyCode) && (a.stopPropagation(), a.preventDefault());
        },
        onKey: function (a) {
          switch (a) {
            case 13:
              this.onEnter();
              break;
            case 27:
              this.onEsc();
              break;
            default:
              return !1;
          }
          return !0;
        },
        onEsc: function () {
          this.dialog.hide();
        },
        onEnter: function () {},
        onFocusOut: function (a) {
          null == a.relatedObject && this.stage.set_focus(this);
        },
        __class__: oc,
      });
      var ic = function (a) {
        oc.call(this);
        this.buttons = new Ef(a);
        this.buttons.click.add(l(this, this.onButton));
        this.addChild(this.buttons);
      };
      g['com.watabou.coogee.ui.ButtonsForm'] = ic;
      ic.__name__ = 'com.watabou.coogee.ui.ButtonsForm';
      ic.__super__ = oc;
      ic.prototype = v(oc.prototype, {
        add: function (a) {
          this.addChild(a);
          this.addChild(this.buttons);
          this.layout();
        },
        layout: function () {
          oc.prototype.layout.call(this);
          this.buttons.set_width(this.rWidth);
          oc.prototype.layout.call(this);
        },
        onButton: function (a) {
          this.dialog.hide();
        },
        onEnter: function () {
          this.onButton('OK');
        },
        onEsc: function () {
          this.onButton('Cancel');
        },
        __class__: ic,
      });
      var ud = function (a) {
        this.changed = new ec();
        U.call(this);
        this.border = ta.black();
        this.add(this.border);
        this.empty = ta.white();
        this.add(this.empty);
        this.filled = ta.black();
        this.add(this.filled);
        null != a
          ? ((this.label = new Ib(a)),
            (this.label.mouseEnabled = !0),
            (this.label.mouseChildren = !0),
            this.add(this.label),
            this.setSize(
              24 + this.label.get_width(),
              Math.max(20, this.label.get_height()),
            ))
          : this.setSize(20, 20);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
      };
      g['com.watabou.coogee.ui.CheckBox'] = ud;
      ud.__name__ = 'com.watabou.coogee.ui.CheckBox';
      ud.__super__ = U;
      ud.prototype = v(U.prototype, {
        layout: function () {
          this.border.setSize(20, 20);
          this.border.set_x(
            null != this.label
              ? 0
              : ((this.rWidth - this.border.get_width()) / 2) | 0,
          );
          this.border.set_y(
            ((this.rHeight - this.border.get_height()) / 2) | 0,
          );
          this.empty.setSize(
            this.border.get_width() - 4,
            this.border.get_height() - 4,
          );
          this.empty.set_x(this.border.get_x() + 2);
          this.empty.set_y(this.border.get_y() + 2);
          this.filled.setSize(
            this.empty.get_width() - 4,
            this.empty.get_height() - 4,
          );
          this.filled.set_x(this.empty.get_x() + 2);
          this.filled.set_y(this.empty.get_y() + 2);
          null != this.label && this.label.set_x(this.border.get_width() + 4);
        },
        get_value: function () {
          return this.filled.get_visible();
        },
        set_value: function (a) {
          this.filled.set_visible(a);
          return a;
        },
        onClick: function (a) {
          this.set_value(!this.get_value());
          this.changed.dispatch(this.get_value());
        },
        get_text: function () {
          return null != this.label ? this.label.get_text() : null;
        },
        set_enabled: function (a) {
          U.prototype.set_enabled.call(this, a);
          var b = a ? D.black : D.light;
          this.border.bmp.get_bitmapData().setPixel(0, 0, b);
          this.filled.bmp.get_bitmapData().setPixel(0, 0, b);
          null != this.label && this.label.set_color(b);
          return a;
        },
        __class__: ud,
        __properties__: v(U.prototype.__properties__, {
          get_text: 'get_text',
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var gg = function (a, b) {
        null == b && (b = -1);
        var c = this;
        this.group = a;
        for (var d = 0, f = a.length; d < f; ) {
          var h = d++;
          a[h].set_value(h == b);
        }
        for (d = 0; d < a.length; )
          ((b = [a[d]]),
            ++d,
            b[0].changed.add(
              (function (a) {
                return function (b) {
                  c.changed(a[0], b);
                };
              })(b),
            ));
      };
      g['com.watabou.coogee.ui.RadioGroup'] = gg;
      gg.__name__ = 'com.watabou.coogee.ui.RadioGroup';
      gg.prototype = {
        changed: function (a, b) {
          if (null == this.origin) {
            this.origin = a;
            if (b) {
              b = 0;
              for (var c = this.group; b < c.length; ) {
                var d = c[b];
                ++b;
                d != a && d.set_value(!1);
              }
            } else a.set_value(!0);
            this.origin = null;
          }
        },
        __class__: gg,
      };
      var Hd = function (a, b) {
        this.onMinimize = new ec();
        this.onMove = new ec();
        this.onHide = new ec();
        this.minimized = this.minimizable = !1;
        U.call(this);
        this.bg1 = ta.black();
        this.addChild(this.bg1);
        this.bg2 = ta.white();
        this.addChild(this.bg2);
        this.addEventListener('mouseDown', l(this, this.onBringUp));
        this.header = new Ff(b);
        this.header.addEventListener('mouseDown', l(this, this.onStartDrag));
        this.header.addEventListener('click', l(this, this.onClick));
        this.addChild(this.header);
        this.content = a;
        this.addChild(a);
        this.resize();
      };
      g['com.watabou.coogee.ui.Window'] = Hd;
      Hd.__name__ = 'com.watabou.coogee.ui.Window';
      Hd.show = function (a, b, c, d) {
        c = null == d ? new Hd(b, c) : w.createInstance(d, [b, c]);
        c.set_x(((a.get_width() - c.get_width()) / 2) | 0);
        c.set_y(((a.get_height() - c.get_height()) / 2) | 0);
        a.addChild(c);
        null != b.stage && b.stage.set_focus(b);
        return c;
      };
      Hd.__super__ = U;
      Hd.prototype = v(U.prototype, {
        resize: function (a) {
          null == a && (a = !1);
          var b = this.content.get_width() + 4,
            c = this.header.get_height() + this.content.get_height() + 2,
            d = a ? ((this.rWidth - b) / 2) | 0 : 0;
          a = a ? ((this.rHeight - c) / 2) | 0 : 0;
          this.setSize(b, c);
          this.set_x(this.get_x() + d);
          this.set_y(this.get_y() + a);
        },
        layout: function () {
          this.header.set_width(this.rWidth);
          this.minimized
            ? (this.bg1.setSize(this.rWidth, this.header.get_height()),
              this.content.set_visible(!1),
              this.bg2.set_visible(!1))
            : (this.bg1.setSize(this.rWidth, this.rHeight),
              this.content.set_visible(!0),
              this.bg2.set_visible(!0),
              this.bg2.setSize(
                this.rWidth - 4,
                this.rHeight - this.header.get_height() - 2,
              ),
              this.content.set_x(this.bg2.set_x(2)),
              this.content.set_y(this.bg2.set_y(this.header.get_height())));
        },
        hide: function () {
          null != this.parent &&
            (this.stage.set_focus(this.stage),
            this.parent.removeChild(this),
            this.onHide.dispatch(this));
        },
        onBringUp: function (a) {
          this.parent.addChild(this);
        },
        onStartDrag: function (a) {
          this.clicked = !0;
          this.stage.addEventListener('mouseMove', l(this, this.onDrag));
          this.stage.addEventListener('mouseUp', l(this, this.onEndDrag));
          this.grabX = this.get_mouseX();
          this.grabY = this.get_mouseY();
        },
        onDrag: function (a) {
          this.clicked = !1;
          this.set_x(this.parent.get_mouseX() - this.grabX);
          this.set_y(this.parent.get_mouseY() - this.grabY);
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', l(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', l(this, this.onEndDrag));
          this.clicked || this.onMove.dispatch(this);
        },
        onClick: function (a) {
          this.clicked &&
            this.minimizable &&
            ((this.minimized = !this.minimized),
            this.layout(),
            this.onMinimize.dispatch(this));
        },
        setMinimized: function (a) {
          this.minimized != a && (this.minimized = a);
          this.layout();
        },
        setTitle: function (a) {
          this.header.setText(a);
        },
        getAdjustment: function () {
          if (null == this.parent) return null;
          var a = this.header.getRect(this.parent),
            b = a.height,
            c =
              a.get_right() <= b
                ? 0
                : a.get_left() >= this.parent.get_width() - b
                  ? this.parent.get_width() - a.width
                  : this.get_x();
          a =
            0 >= a.get_top()
              ? 0
              : a.get_top() >= this.parent.get_height() - b
                ? this.parent.get_height() - a.height
                : this.get_y();
          return c != this.get_x() || a != this.get_y() ? new I(c, a) : null;
        },
        __class__: Hd,
      });
      var ee = function (a, b) {
        a.dialog = this;
        Hd.call(this, a, b);
        this.header.close.add(function () {
          a.onEsc();
        });
      };
      g['com.watabou.coogee.ui.Dialog'] = ee;
      ee.__name__ = 'com.watabou.coogee.ui.Dialog';
      ee.show = function (a, b, c) {
        null == c && (c = b.getTitle());
        a = Hd.show(a, b, c, ee);
        b.onShow();
        return a;
      };
      ee.__super__ = Hd;
      ee.prototype = v(Hd.prototype, {
        hide: function () {
          if (null != this.parent) va.__cast(this.content, oc).onHide();
          Hd.prototype.hide.call(this);
        },
        __class__: ee,
      });
      var Rc = function (a, b) {
        this.update = new ec();
        var c = this;
        this.values = b;
        this.labels = a;
        U.call(this);
        this.border = ta.black();
        this.add(this.border);
        this.bg = ta.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = ld.get('', D.format(D.uiFont, D.normalSize, D.black));
        this.addChild(this.tf);
        this.btn = new Wa();
        this.btn.set_width(D.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        for (var d = 0, f = 0, h = 0; h < a.length; ) {
          var k = a[h];
          ++h;
          this.tf.set_text(k);
          d = Math.max(d, this.tf.get_width());
          f = Math.max(f, this.tf.get_height());
        }
        this.tf.set_autoSize(2);
        this.menu = new dd();
        h = [];
        k = 0;
        for (var n = a.length; k < n; ) {
          var p = [k++];
          h.push(
            this.menu.addItem(
              a[p[0]],
              (function (d) {
                return function () {
                  c.onSelect(a[d[0]], b[d[0]]);
                };
              })(p),
            ),
          );
        }
        this.items = h;
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.addEventListener('mouseWheel', l(this, this.onWheel));
        0 < a.length && this.set_text(a[0]);
        this.setSize(Math.ceil(d + this.btn.get_width()), Math.ceil(f));
      };
      g['com.watabou.coogee.ui.DropDown'] = Rc;
      Rc.__name__ = 'com.watabou.coogee.ui.DropDown';
      Rc.ofStrings = function (a) {
        return new Rc(a, a);
      };
      Rc.ofInts = function (a) {
        for (var b = [], c = 0, d = a.length; c < d; ) {
          var f = c++;
          b.push(f);
        }
        return new Rc(a, b);
      };
      Rc.__super__ = U;
      Rc.prototype = v(U.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        set_text: function (a) {
          this.tf.set_text(a);
          return a;
        },
        get_value: function () {
          var a = this.labels.indexOf(this.tf.get_text());
          return -1 == a ? null : this.values[a];
        },
        set_value: function (a) {
          for (var b = 0, c = this.values.length; b < c; ) {
            var d = b++;
            if (this.values[d] == a)
              return (this.tf.set_text(this.labels[d]), a);
          }
          return this.get_value();
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        onClick: function (a) {
          a = this.labels.indexOf(this.tf.get_text());
          for (var b = 0, c = this.items.length; b < c; ) {
            var d = b++;
            this.items[d].setCheck(d == a);
          }
          a = u.getRect(this);
          u.showMenuAt(this.menu, Math.ceil(a.get_left()), a.get_bottom() - 2);
        },
        onWheel: function (a) {
          u.hideMenu();
          var b = this.values.indexOf(this.get_value());
          if (
            -1 != b &&
            ((a = a.delta),
            (b += 0 == a ? 0 : 0 > a ? -1 : 1),
            0 <= b && b < this.values.length)
          )
            this.onSelect(this.labels[b], this.values[b]);
        },
        onSelect: function (a, b) {
          this.stage.set_focus(this);
          this.tf.set_text(a);
          this.update.dispatch(b);
        },
        __class__: Rc,
        __properties__: v(U.prototype.__properties__, {
          set_centered: 'set_centered',
          set_value: 'set_value',
          get_value: 'get_value',
          set_text: 'set_text',
        }),
      });
      var Ib = function (a, b) {
        null == b && (b = !1);
        U.call(this);
        this.tf = ld.get(
          a,
          D.format(D.uiFont, b ? D.smallSize : D.normalSize, D.black),
        );
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      g['com.watabou.coogee.ui.Label'] = Ib;
      Ib.__name__ = 'com.watabou.coogee.ui.Label';
      Ib.__super__ = U;
      Ib.prototype = v(U.prototype, {
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(this.tf.get_width(), this.tf.get_height());
          return a;
        },
        set_color: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.color = a;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        __class__: Ib,
        __properties__: v(U.prototype.__properties__, {
          set_color: 'set_color',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var dd = function () {
        U.call(this);
        this.bg = ta.black();
        this.addChild(this.bg);
        this.items = [];
        this.addEventListener('addedToStage', l(this, this.onAdded));
        this.addEventListener('removedFromStage', l(this, this.onRemoved));
      };
      g['com.watabou.coogee.ui.Menu'] = dd;
      dd.__name__ = 'com.watabou.coogee.ui.Menu';
      dd.__super__ = U;
      dd.prototype = v(U.prototype, {
        layout: function () {
          for (
            var a = (this.rHeight = this.rWidth = 0), b = this.items;
            a < b.length;

          ) {
            var c = b[a];
            ++a;
            this.rWidth = Math.max(this.rWidth, c.get_width());
            this.rHeight += c.get_height();
          }
          var d = 2;
          a = 0;
          for (b = this.items; a < b.length; )
            ((c = b[a]),
              ++a,
              c.set_width(this.rWidth),
              c.set_x(2),
              c.set_y(d),
              (d += c.get_height()));
          this.rWidth += 4;
          this.rHeight += 4;
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        add: function (a) {
          this.items.push(a);
          this.addChild(a);
          this.layout();
        },
        remove: function (a) {
          N.remove(this.items, a);
          this.removeChild(a);
          this.layout();
        },
        addItem: function (a, b, c) {
          null == c && (c = !1);
          a = new ff(a, null, b);
          a.setCheck(c);
          this.add(a);
          return a;
        },
        addSubmenu: function (a, b) {
          a = new ff(a, b);
          this.add(a);
          return a;
        },
        addSeparator: function () {
          0 < this.items.length &&
            !(this.items[this.items.length - 1] instanceof Je) &&
            this.add(new Je());
        },
        hide: function () {
          null != this.submenu && (this.submenu.hide(), (this.submenu = null));
          null != this.parent &&
            (null != this.stage && this.stage.set_focus(this.stage),
            this.parent.removeChild(this));
        },
        getRoot: function () {
          return null != this.parentMenu ? this.parentMenu.getRoot() : this;
        },
        onMouseDown: function (a) {
          this.hitTestPoint(this.stage.get_mouseX(), this.stage.get_mouseY()) ||
            this.hide();
        },
        onAdded: function (a) {
          this.stage.addEventListener('mouseDown', l(this, this.onMouseDown));
          this.stage.addEventListener(
            'rightMouseDown',
            l(this, this.onMouseDown),
          );
        },
        onRemoved: function (a) {
          this.stage.removeEventListener(
            'mouseDown',
            l(this, this.onMouseDown),
          );
          this.stage.removeEventListener(
            'rightMouseDown',
            l(this, this.onMouseDown),
          );
        },
        cancel: function () {
          null != this.submenu &&
            (this.submenu.cancel(),
            this.parent.removeChild(this.submenu),
            (this.submenu = null));
        },
        hover: function (a, b) {
          this.cancel();
          if (null != b) {
            b.parentMenu = this;
            this.submenu = b;
            var c = a.get_x() + a.rWidth,
              d = a.get_y() - 2,
              f = new I(c, d);
            f = this.parent.globalToLocal(this.localToGlobal(f));
            if (this.parent == u.layer) {
              var h = !1;
              f.x + b.get_width() > this.parent.get_width() &&
                ((c = a.get_x() - b.get_width()), (h = !0));
              f.y + b.get_height() > this.parent.get_height() &&
                ((d = a.get_y() + a.rHeight - b.get_height() + 2), (h = !0));
              h &&
                ((f.x = c),
                (f.y = d),
                (f = this.parent.globalToLocal(this.localToGlobal(f))));
            }
            b.set_x(f.x);
            b.set_y(f.y);
            this.parent.addChild(b);
          }
        },
        __class__: dd,
      });
      var ff = function (a, b, c) {
        var d = this;
        U.call(this);
        this.submenu = b;
        this.callback = c;
        this.bg = ta.white();
        this.addChild(this.bg);
        this.bullet = ta.black();
        this.bullet.set_visible(!1);
        this.bullet.setSize(8, 8);
        this.addChild(this.bullet);
        c = null == c && null == b;
        this.formatNormal = D.format(
          D.uiFont,
          D.smallSize,
          c ? D.medium : D.black,
        );
        this.formatHover = D.format(D.uiFont, D.smallSize, D.white);
        this.tf = ld.get(a, this.formatNormal);
        this.addChild(this.tf);
        null != b &&
          ((this.sub = ld.get(' >', this.formatNormal)),
          this.addChild(this.sub));
        this.addEventListener('mouseDown', function (a) {
          a.stopPropagation();
        });
        c ||
          (this.set_buttonMode(!0),
          this.addEventListener('rollOver', function (a) {
            d.hover(!0);
          }),
          this.addEventListener('rollOut', function (a) {
            d.hover(!1);
          }),
          this.addEventListener('click', l(this, this.onClick)));
        a = Math.round(D.normalSize / 4);
        this.bullet.set_x(a);
        this.tf.set_x(a + this.bullet.get_width() + a - 2);
        null != b
          ? (this.sub.set_x(this.tf.get_x() + this.tf.get_width() - 4),
            (this.rWidth = this.sub.get_x() + (this.sub.get_width() - 4) + a))
          : (this.rWidth =
              a + this.bullet.get_width() + a + (this.tf.get_width() - 4) + a);
        this.rHeight = 1.5 * D.normalSize;
        this.rWidth = Math.ceil(this.rWidth);
        this.rHeight = Math.ceil(this.rHeight);
        this.layout();
      };
      g['com.watabou.coogee.ui.MenuItem'] = ff;
      ff.__name__ = 'com.watabou.coogee.ui.MenuItem';
      ff.__super__ = U;
      ff.prototype = v(U.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.bullet.set_y((this.rHeight - this.bullet.get_height()) / 2);
          this.tf.set_y((this.rHeight - this.tf.get_height()) / 2);
          null != this.sub &&
            (this.sub.set_y(this.tf.get_y()),
            this.sub.set_x(
              this.rWidth - this.bullet.get_x() - this.sub.get_width() + 2,
            ));
        },
        hover: function (a) {
          null != this.get_root() &&
            (this.highlight(a),
            va.__cast(this.parent, dd).hover(this, this.submenu));
        },
        highlight: function (a) {
          var b = a ? this.formatHover : this.formatNormal;
          this.tf.set_defaultTextFormat(b);
          var c = a ? D.black : D.white;
          this.bg.bmp.get_bitmapData().setPixel(0, 0, c);
          c = a ? D.white : D.black;
          this.bullet.bmp.get_bitmapData().setPixel(0, 0, c);
          null != this.submenu && this.sub.set_defaultTextFormat(b);
        },
        onClick: function (a) {
          null == this.submenu
            ? (a.stopPropagation(),
              this.highlight(!1),
              va.__cast(this.parent, dd).getRoot().hide(),
              null != this.callback && this.callback())
            : va
                .__cast(this.parent, dd)
                .hover(this, null == this.submenu.parent ? this.submenu : null);
        },
        setCheck: function (a) {
          this.bullet.set_visible(a);
          return this;
        },
        __class__: ff,
      });
      var ta = function (a, b) {
        null == b && (b = 1);
        U.call(this);
        this.set_alpha(b);
        this.bmp = new Nd(new Fb(1, 1, !1, a));
        this.addChild(this.bmp);
      };
      g['com.watabou.coogee.ui.SolidRect'] = ta;
      ta.__name__ = 'com.watabou.coogee.ui.SolidRect';
      ta.black = function () {
        return new ta(D.black);
      };
      ta.light = function () {
        return new ta(D.light);
      };
      ta.white = function () {
        return new ta(D.white);
      };
      ta.__super__ = U;
      ta.prototype = v(U.prototype, {
        layout: function () {
          this.bmp.set_width(this.rWidth);
          this.bmp.set_height(this.rHeight);
        },
        __class__: ta,
      });
      var Je = function () {
        ta.call(this, D.black);
        this.setSize(2, 2);
      };
      g['com.watabou.coogee.ui.MenuSeparator'] = Je;
      Je.__name__ = 'com.watabou.coogee.ui.MenuSeparator';
      Je.__super__ = ta;
      Je.prototype = v(ta.prototype, { __class__: Je });
      var fe = function (a, b, c) {
        this.action = new ec();
        var d = this;
        this.txtLabel = a;
        Hb.call(this);
        this.menu = new dd();
        a = 0;
        for (var f = b.length; a < f; ) {
          var h = a++,
            k = b[h];
          this.menu.addItem(
            k,
            (function (a) {
              return function () {
                d.action.dispatch(a[0]);
              };
            })([null != c ? c[h] : k]),
          );
        }
      };
      g['com.watabou.coogee.ui.MultiAction'] = fe;
      fe.__name__ = 'com.watabou.coogee.ui.MultiAction';
      fe.__super__ = Hb;
      fe.prototype = v(Hb.prototype, {
        createLabel: function () {
          var a = this,
            b = new ed();
          b.setMargins(2, 4);
          var c = new Ib(this.txtLabel, !0);
          c.set_color(D.white);
          b.add(c);
          c = new Wa(D.white);
          c.click.add(function () {
            a.onClick(null);
          });
          c.valign = 'fill';
          b.add(c);
          return b;
        },
        onClick: function (a) {
          Hb.prototype.onClick.call(this, a);
          a = u.getRect(this);
          u.showMenuAt(this.menu, a.get_left(), a.get_bottom());
        },
        __class__: fe,
      });
      var $d = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 100);
        null == a && (a = 0);
        this.submit = new ec();
        this.change = new ec();
        this.cycled = !1;
        U.call(this);
        this.min = a;
        this.max = b;
        this.rounding = Math.pow(10, c);
        this.bg = new ka();
        this.bg.addEventListener('mouseDown', l(this, this.onPage));
        this.addChild(this.bg);
        this.scale = ta.black();
        this.scale.mouseEnabled = !1;
        this.add(this.scale);
        this.thumb = ta.black();
        this.thumb.set_buttonMode(!0);
        this.thumb.addEventListener('mouseDown', l(this, this.onStartDrag));
        this.add(this.thumb);
        this.addEventListener('mouseWheel', l(this, this.onWheel));
        this._value = a;
        this._prev = NaN;
        this.setSize(200, 20);
      };
      g['com.watabou.coogee.ui.Slider'] = $d;
      $d.__name__ = 'com.watabou.coogee.ui.Slider';
      $d.__super__ = U;
      $d.prototype = v(U.prototype, {
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = this.cycled
            ? Fc.cycle(a, this.min, this.max)
            : Fc.gate(a, this.min, this.max);
          this._value = Math.round(this._value * this.rounding) / this.rounding;
          this._prev != this._value &&
            ((this._prev = this._value),
            this.placeThumb(),
            this.change.dispatch(this._value));
          return a;
        },
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(16711680, 0);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.scale.setSize(this.rWidth, 2);
          this.scale.set_y(((this.rHeight - this.scale.get_height()) / 2) | 0);
          this.thumb.setSize(10, this.rHeight);
          this.thumb.set_y(((this.rHeight - this.thumb.get_height()) / 2) | 0);
          this.placeThumb();
        },
        placeThumb: function () {
          this.thumb.set_x(
            ((this.rWidth - this.thumb.get_width()) *
              (this.get_value() - this.min)) /
              (this.max - this.min),
          );
        },
        onStartDrag: function (a) {
          this.stage.addEventListener('mouseMove', l(this, this.onDrag));
          this.stage.addEventListener('mouseUp', l(this, this.onEndDrag));
          this.grabX = this.thumb.get_mouseX();
        },
        onDrag: function (a) {
          this.set_value(
            ((this.get_mouseX() - this.grabX) /
              (this.rWidth - this.thumb.get_width())) *
              (this.max - this.min) +
              this.min,
          );
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', l(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', l(this, this.onEndDrag));
          this.submit.dispatch(this.get_value());
        },
        onPage: function (a) {
          a = this.get_value();
          this.get_mouseX() < this.thumb.get_x()
            ? this.set_value(this.get_value() - 0.1 * (this.max - this.min))
            : this.get_mouseX() > this.thumb.get_x() + this.thumb.get_width() &&
              this.set_value(this.get_value() + 0.1 * (this.max - this.min));
          a != this.get_value() && this.submit.dispatch(this.get_value());
        },
        onWheel: function (a) {
          var b = this.get_value(),
            c = this.get_value();
          a = a.delta;
          this.set_value(c + (0 == a ? 0 : 0 > a ? -1 : 1) * this.rounding);
          b != this.get_value() && this.submit.dispatch(this.get_value());
        },
        __class__: $d,
        __properties__: v(U.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Jb = function (a) {
        this.enter = new ec();
        this.update = new ec();
        U.call(this);
        this.tf = ld.get(
          a,
          D.format(D.uiFont, D.normalSize, D.black),
          l(this, this.onUpdate),
        );
        this.tf.set_border(!0);
        this.tf.set_borderColor(D.black);
        this.tf.set_autoSize(2);
        this.tf.set_wordWrap(!0);
        this.addChild(this.tf);
        this.addEventListener('focusIn', l(this, this.onFocusIn));
        this.tf.addEventListener('keyDown', l(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      g['com.watabou.coogee.ui.TextArea'] = Jb;
      Jb.__name__ = 'com.watabou.coogee.ui.TextArea';
      Jb.__super__ = U;
      Jb.prototype = v(U.prototype, {
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
          this.tf.setSelection(
            this.tf.get_text().length,
            this.tf.get_text().length,
          );
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onUpdate: function () {
          this.update.dispatch(this.tf.get_text());
        },
        __class__: Jb,
      });
      var tc = function (a, b) {
        null == b && (b = !1);
        null == a && (a = '');
        this.leave = new Nc();
        this.enter = new ec();
        this.update = new ec();
        U.call(this);
        this.tf = ld.input(
          a,
          D.format(b ? D.uiFontMono : D.uiFont, D.normalSize, D.black),
          l(this, this.onUpdate),
        );
        this.tf.set_backgroundColor(D.white);
        this.tf.set_borderColor(D.black);
        this.addChild(this.tf);
        this.addEventListener('focusIn', l(this, this.onFocusIn));
        this.addEventListener('focusOut', l(this, this.onFocusOut));
        this.addEventListener('keyDown', l(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      g['com.watabou.coogee.ui.TextInput'] = tc;
      tc.__name__ = 'com.watabou.coogee.ui.TextInput';
      tc.__super__ = U;
      tc.prototype = v(U.prototype, {
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
        },
        onFocusOut: function (a) {
          this.leave.dispatch();
        },
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
          this.layoutPrompt();
        },
        layoutPrompt: function () {
          if (null != this.label) {
            var a = this.get_centered();
            this.label.set_x(
              a ? (this.rWidth - this.label.get_width()) / 2 : 2,
            );
            this.label.set_y(
              a ? (this.rHeight - this.label.get_height()) / 2 : 2,
            );
          }
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.updatePrompt();
          return a;
        },
        get_centered: function () {
          return 0 == this.tf.get_defaultTextFormat().align;
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          this.layoutPrompt();
          return a;
        },
        set_restrict: function (a) {
          return this.tf.set_restrict(a);
        },
        onUpdate: function () {
          this.updatePrompt();
          this.update.dispatch(this.tf.get_text());
        },
        updatePrompt: function () {
          null != this.label &&
            (this.layoutPrompt(),
            this.label.set_visible('' == this.tf.get_text()));
        },
        set_prompt: function (a) {
          null == this.label &&
            ((this.label = new Ib(a)),
            this.label.set_enabled(!1),
            this.label.set_color(D.medium),
            this.add(this.label),
            this.updatePrompt());
          this.label.set_text(a);
          return a;
        },
        selecteAll: function () {
          this.tf.setSelection(0, this.tf.get_length());
        },
        set_enabled: function (a) {
          U.prototype.set_enabled.call(this, a);
          this.tf.set_alpha(a ? 1 : 0.6);
          return (this.tf.mouseEnabled = a);
        },
        __class__: tc,
        __properties__: v(U.prototype.__properties__, {
          set_prompt: 'set_prompt',
          set_restrict: 'set_restrict',
          set_centered: 'set_centered',
          get_centered: 'get_centered',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var q = function (a) {
        var b = this;
        U.call(this);
        a = ld.get(a, D.format(D.uiFont, D.normalSize, D.white));
        a.set_x(10);
        a.set_y(10);
        this.addChild(a);
        this.rWidth = 10 + a.get_width() + 10;
        this.rHeight = 10 + a.get_height() + 10;
        this.get_graphics().beginFill(D.black);
        this.get_graphics().drawRoundRect(0, 0, this.rWidth, this.rHeight, 10);
        Ke.run(q.delay, function (a) {
          b.set_alpha(q.delay * (1 - a));
        }).onComplete(function () {
          null != b.parent && b.parent.removeChild(b);
        });
      };
      g['com.watabou.coogee.ui.Toast'] = q;
      q.__name__ = 'com.watabou.coogee.ui.Toast';
      q.show = function (a) {
        q.hide();
        var b = u.layer;
        a = q.instance = new q(a);
        a.set_x(((b.get_width() - a.get_width()) / 2) | 0);
        a.set_y((b.get_height() - a.get_height() - q.offset) | 0);
        b.addChild(a);
        return a;
      };
      q.hide = function () {
        null != q.instance &&
          null != q.instance.parent &&
          q.instance.parent.removeChild(q.instance);
      };
      q.__super__ = U;
      q.prototype = v(U.prototype, { __class__: q });
      var u = function () {};
      g['com.watabou.coogee.ui.UI'] = u;
      u.__name__ = 'com.watabou.coogee.ui.UI';
      u.showMenu = function (a) {
        u.showMenuAt(a, u.layer.get_mouseX(), u.layer.get_mouseY());
      };
      u.showMenuAt = function (a, b, c) {
        var d = a.items;
        0 < d.length &&
          d[d.length - 1] instanceof Je &&
          a.remove(d[d.length - 1]);
        u.menu = a;
        a.set_x(
          (b + a.get_width() <= u.layer.get_width() ? b : b - a.get_width()) |
            0,
        );
        a.set_y(
          (c + a.get_height() <= u.layer.get_height()
            ? c
            : c - a.get_height()) | 0,
        );
        0 > a.get_x() && a.set_x(0);
        0 > a.get_y() && a.set_y(0);
        u.layer.addChild(a);
      };
      u.hideMenu = function () {
        return null != u.menu && null != u.menu.stage
          ? (u.menu.hide(), (u.menu = null), !0)
          : !1;
      };
      u.showDialog = function (a, b) {
        a = ee.show(u.layer, a, b);
        a.onHide.add(function (a) {
          N.remove(u.windows, a);
        });
        u.windows.push(a);
        return a;
      };
      u.wipe = function () {
        u.hideMenu();
        for (var a = 0, b = u.windows.slice(); a < b.length; ) {
          var c = b[a];
          ++a;
          c.hide();
        }
        u.windows = [];
      };
      u.findWidnow = function (a) {
        for (var b = 0, c = u.windows; b < c.length; ) {
          var d = c[b];
          ++b;
          if (va.__instanceof(d.content, a)) return d;
        }
        return null;
      };
      u.findForm = function (a) {
        for (var b = 0, c = u.windows; b < c.length; ) {
          var d = c[b];
          ++b;
          if (va.__instanceof(d.content, a)) return d.content;
        }
        return null;
      };
      u.getRect = function (a) {
        var b = new I(a.get_x(), a.get_y()),
          c = new I(a.get_x() + a.rWidth, a.get_y() + a.rHeight);
        b = u.layer.globalToLocal(a.parent.localToGlobal(b));
        c = u.layer.globalToLocal(a.parent.localToGlobal(c));
        return new na(b.x, b.y, c.x - b.x, c.y - b.y);
      };
      var D = function () {};
      g['com.watabou.coogee.ui.UIStyle'] = D;
      D.__name__ = 'com.watabou.coogee.ui.UIStyle';
      D.format = function (a, b, c) {
        null == c && (c = 0);
        return new we('_' == a.charAt(0) ? a : ac.getFont(a).name, b, c);
      };
      D.useDefault = function () {
        D.black = 4012352;
        D.dark = 5725031;
        D.medium = 7569526;
        D.light = 10064002;
        D.white = 14276035;
        D.smallSize = 18;
        D.normalSize = 20;
        D.uiFont = 'ui_font';
        D.uiFontMono = 'ui_font_mono';
      };
      var kb = function () {
        this.click = new Nc();
        U.call(this);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.setSize(12, 12);
      };
      g['com.watabou.coogee.ui.elements.CloseButton'] = kb;
      kb.__name__ = 'com.watabou.coogee.ui.elements.CloseButton';
      kb.__super__ = U;
      kb.prototype = v(U.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(D.white);
          this.get_graphics().drawCircle(this.rWidth / 2, this.rHeight / 2, 6);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: kb,
      });
      var Wa = function (a) {
        null == a && (a = 0);
        this.click = new Nc();
        U.call(this);
        this.bg = new ta(0, 0);
        this.addChild(this.bg);
        0 == a && (a = D.black);
        var b = D.smallSize / 4;
        this.image = new ka();
        var c = this.image.get_graphics();
        c.beginFill(a);
        c.moveTo(-b, -b);
        c.lineTo(b, -b);
        c.lineTo(0, b);
        this.addChild(this.image);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.setSize(2 * b, 2 * b);
      };
      g['com.watabou.coogee.ui.elements.DropDownButton'] = Wa;
      Wa.__name__ = 'com.watabou.coogee.ui.elements.DropDownButton';
      Wa.__super__ = U;
      Wa.prototype = v(U.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.image.set_x(this.rWidth / 2);
          this.image.set_y(this.rHeight / 2);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: Wa,
      });
      var eb = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1e3);
        null == b && (b = 0);
        var f = this;
        if (0 == d) tc.call(this, null == c ? 'null' : '' + c, !0);
        else {
          for (var h = '0.', k = 0, n = d; k < n; ) (k++, (h += '0'));
          tc.call(this, h, !0);
        }
        this.min = b;
        this.max = c;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('-0-9.');
        var p = Math.pow(10, Math.floor(Math.log(c - b) / Math.log(10)) - 1),
          P = 0 < d ? Math.pow(10, d) : 0;
        this.addEventListener('mouseWheel', function (a) {
          var d = parseFloat(f.get_text());
          d = Fc.gate(d + (0 < a.delta ? 1 : -1) * p, b, c);
          0 < P && (d = Math.round(d * P) / P);
          f.set_text(null == d ? 'null' : '' + d);
        });
      };
      g['com.watabou.coogee.ui.elements.FloatInput'] = eb;
      eb.__name__ = 'com.watabou.coogee.ui.elements.FloatInput';
      eb.__super__ = tc;
      eb.prototype = v(tc.prototype, { __class__: eb });
      var Ef = function (a) {
        this.click = new ec();
        var b = this;
        U.call(this);
        this.bg = ta.light();
        this.add(this.bg);
        this.hbox = new ed();
        this.add(this.hbox);
        for (var c = 0; c < a.length; ) {
          var d = [a[c]];
          ++c;
          var f = new ib(d[0]);
          f.click.add(
            (function (a) {
              return function () {
                b.click.dispatch(a[0]);
              };
            })(d),
          );
          f.set_width(100);
          this.hbox.add(f);
        }
        this.setSize(this.hbox.get_width(), this.hbox.get_height());
      };
      g['com.watabou.coogee.ui.elements.FormButtons'] = Ef;
      Ef.__name__ = 'com.watabou.coogee.ui.elements.FormButtons';
      Ef.__super__ = U;
      Ef.prototype = v(U.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.hbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.hbox.set_x(this.rWidth - this.hbox.get_width());
          this.hbox.set_y(((this.rHeight - this.hbox.get_height()) / 2) | 0);
        },
        __class__: Ef,
      });
      var Od = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1e3);
        null == b && (b = 0);
        var f = this,
          h = '0';
        if (0 == d) for (var k = c; 10 <= k; ) ((h += '0'), (k = (k / 10) | 0));
        else for (k = 1; k < d; ) (k++, (h += '0'));
        tc.call(this, h, !0);
        this.min = b;
        this.max = c;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('0-9');
        this.addEventListener('mouseWheel', function (a) {
          a = 0 < a.delta ? 1 : -1;
          f.update.dispatch(H.string(f.set_value(f.get_value() + a)));
        });
      };
      g['com.watabou.coogee.ui.elements.IntInput'] = Od;
      Od.__name__ = 'com.watabou.coogee.ui.elements.IntInput';
      Od.__super__ = tc;
      Od.prototype = v(tc.prototype, {
        get_value: function () {
          return Fc.gatei(H.parseInt(this.get_text()), this.min, this.max);
        },
        set_value: function (a) {
          a = Fc.gatei(a, this.min, this.max);
          this.tf.set_text(null == a ? 'null' : '' + a);
          return a;
        },
        __class__: Od,
        __properties__: v(tc.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Oc = function (a, b) {
        U.call(this);
        this.border2 = ta.black();
        this.add(this.border2);
        this.paint2 = ta.white();
        this.add(this.paint2);
        this.border = ta.black();
        this.add(this.border);
        this.paint = ta.white();
        this.add(this.paint);
        this.colors = a;
        a = this.colors[0];
        this.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        a = 1 < this.colors.length ? this.colors[1] : D.white;
        this.paint2.bmp.get_bitmapData().setPixel(0, 0, a);
        this.setSize(b, b);
        this.addEventListener('click', l(this, this.onClickEvent));
      };
      g['com.watabou.coogee.ui.elements.MultiSwatch'] = Oc;
      Oc.__name__ = 'com.watabou.coogee.ui.elements.MultiSwatch';
      Oc.__super__ = U;
      Oc.prototype = v(U.prototype, {
        layout: function () {
          var a = this.rWidth - 4 - 1,
            b = this.rHeight - 4 - 1;
          this.border.setSize(a, b);
          this.paint.setSize(a - 2, b - 2);
          this.paint.set_x(this.paint.set_y(1));
          this.border2.setSize(a, b);
          this.border2.set_x(this.border2.set_y(5));
          this.paint2.setSize(a - 2, b - 2);
          this.paint2.set_x(this.border2.get_x() + 1);
          this.paint2.set_y(this.border2.get_y() + 1);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: Oc,
      });
      var vd = function (a, b) {
        U.call(this);
        this.border = ta.black();
        this.add(this.border);
        this.paint = new ta(a);
        this.add(this.paint);
        this.setSize(b, b);
        this.addEventListener('click', l(this, this.onClickEvent));
      };
      g['com.watabou.coogee.ui.elements.Swatch'] = vd;
      vd.__name__ = 'com.watabou.coogee.ui.elements.Swatch';
      vd.__super__ = U;
      vd.prototype = v(U.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.paint.setSize(this.rWidth - 2, this.rHeight - 2);
          this.paint.set_x(this.paint.set_y(1));
        },
        onClick: function (a) {
          this.callback = a;
          this.set_buttonMode(null != a);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: vd,
      });
      var fd = function (a, b, c, d) {
        null == c && (c = !1);
        this.update = new ec();
        this.edit = function (a) {
          gb.trace(a.get_value(), {
            fileName: 'com/watabou/coogee/ui/elements/TextView.hx',
            lineNumber: 22,
            className: 'com.watabou.coogee.ui.elements.TextView',
            methodName: 'edit',
          });
        };
        this.data2text = function (a) {
          return H.string(a);
        };
        this._value = null;
        var f = this;
        null != b && (this.data2text = b);
        null != d && (this.edit = d);
        this._value = a;
        U.call(this);
        this.border = ta.black();
        this.add(this.border);
        this.bg = ta.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = ld.get(
          this.data2text(a),
          D.format(D.uiFont, c ? D.smallSize : D.normalSize, D.black),
        );
        this.addChild(this.tf);
        this.btn = new Wa();
        this.btn.set_width(D.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        this.tf.mouseEnabled = !1;
        this.set_buttonMode(!0);
        this.addEventListener('click', function (a) {
          f.edit(f);
        });
        this.setSize(
          Math.ceil(this.tf.get_width() + this.btn.get_width()),
          Math.ceil(this.tf.get_height()),
        );
      };
      g['com.watabou.coogee.ui.elements.TextView'] = fd;
      fd.__name__ = 'com.watabou.coogee.ui.elements.TextView';
      fd.editInForm = function (a, b, c) {
        return function (d) {
          var f = u.findForm(a);
          null == f && ((f = w.createInstance(a, [])), u.showDialog(f));
          f.link(
            b,
            d.get_value(),
            function (a) {
              d.set_value(a);
              d.update.dispatch(a);
            },
            c,
          );
        };
      };
      fd.__super__ = U;
      fd.prototype = v(U.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_autoSize(2);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.tf.set_scrollH(0);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = a;
          this.tf.set_text(this.data2text(a));
          return a;
        },
        __class__: fd,
        __properties__: v(U.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var xc = function (a) {
        ic.call(this, null != a ? a.concat(xc.okCancel) : xc.okCancel);
      };
      g['com.watabou.coogee.ui.elements.EditForm'] = xc;
      xc.__name__ = 'com.watabou.coogee.ui.elements.EditForm';
      xc.__super__ = ic;
      xc.prototype = v(ic.prototype, {
        getTitle: function () {
          return 'Edit';
        },
        onButton: function (a) {
          if ('OK' == a) {
            if (null != this.onOK) this.onOK(this.get());
            this.dialog.hide();
          } else ic.prototype.onButton.call(this, a);
        },
        set: function (a) {},
        get: function () {
          return null;
        },
        link: function (a, b, c, d) {
          null != a && this.dialog.setTitle(a);
          this.set(b);
          this.onOK = c;
          null != this.host &&
            this.host.dialog.onHide.remove(l(this, this.onHostHidden));
          this.host = d;
          null != d && d.dialog.onHide.add(l(this, this.onHostHidden));
        },
        onHostHidden: function (a) {
          this.dialog.hide();
        },
        __class__: xc,
      });
      var Ff = function (a) {
        this.close = new Nc();
        var b = this;
        U.call(this);
        this.bg = ta.black();
        this.add(this.bg);
        this.btn = new kb();
        this.btn.click.add(function () {
          b.close.dispatch();
        });
        this.add(this.btn);
        this.tf = ld.get(a, D.format(D.uiFont, D.smallSize, D.white));
        this.tf.mouseEnabled = !1;
        this.addChild(this.tf);
        this.setSize(this.tf.get_width(), 36);
      };
      g['com.watabou.coogee.ui.elements.WindowHeader'] = Ff;
      Ff.__name__ = 'com.watabou.coogee.ui.elements.WindowHeader';
      Ff.__super__ = U;
      Ff.prototype = v(U.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.btn.setSize(this.rHeight, this.rHeight);
          this.btn.set_x(this.rWidth - this.rHeight);
          this.tf.set_x(
            this.tf.set_y(((this.rHeight - this.tf.get_height()) / 2) | 0),
          );
        },
        setText: function (a) {
          this.tf.set_text(a);
        },
        __class__: Ff,
      });
      var Le = function () {
        var a = this;
        xc.call(this);
        var b = new ed();
        this.swatch = new vd(0, 60);
        this.swatch.valign = 'fill';
        b.add(this.swatch);
        var c = new Pd(3);
        c.setMargins(0, 10);
        var d = function (b, d) {
          b = new Ib(b);
          b.valign = 'center';
          c.add(b);
          var f = new $d(0, d);
          f.valign = 'center';
          c.add(f);
          var h = new Od(0, 0, d, 3);
          c.add(h);
          h.update.add(function (a) {
            f.set_value(h.get_value());
          });
          f.change.add(function (b) {
            h.set_value(Math.round(b));
            a.updateSwatch();
          });
          return f;
        };
        this.hue = d('Hue', 359);
        this.hue.cycled = !0;
        this.sat = d('Sat', 100);
        this.val = d('Val', 100);
        b.add(c);
        this.add(b);
      };
      g['com.watabou.coogee.ui.forms.ColorForm'] = Le;
      Le.__name__ = 'com.watabou.coogee.ui.forms.ColorForm';
      Le.__super__ = xc;
      Le.prototype = v(xc.prototype, {
        set: function (a) {
          this.setColor(a);
        },
        get: function () {
          return this.color;
        },
        setColor: function (a) {
          a = Gc.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
        },
        updateSwatch: function () {
          var a = (this.color = Gc.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        },
        __class__: Le,
      });
      var Id = function () {
        var a = this;
        xc.call(this);
        var b = new fb(),
          c = new ed();
        c.setMargins(0, 10);
        this.face = new tc('');
        this.face.set_width(300);
        this.face.set_prompt('Font name');
        this.face.update.add(function (b) {
          a.updatePreview();
        });
        c.add(this.face);
        this.size = new Od(18, 8, 96);
        this.size.set_restrict('0-9');
        this.size.update.add(function (b) {
          a.updatePreview();
        });
        c.add(this.size);
        var d = new ed();
        d.setMargins(0, 10);
        this.bold = new ud('Bold');
        this.bold.changed.add(function (b) {
          a.updatePreview();
        });
        d.add(this.bold);
        this.italic = new ud('Italic');
        this.italic.changed.add(function (b) {
          a.updatePreview();
        });
        d.add(this.italic);
        this.preview = new Ph();
        this.preview.halign = 'fill';
        this.preview.set_height(100);
        b.add(c);
        b.add(d);
        b.add(this.preview);
        this.add(b);
      };
      g['com.watabou.coogee.ui.forms.FontForm'] = Id;
      Id.__name__ = 'com.watabou.coogee.ui.forms.FontForm';
      Id.font2text = function (a) {
        if (null == a) return 'Default';
        if (null != a.face) {
          var b = a.face;
          b =
            b.length <= Id.maxFaceLength
              ? b
              : N.substr(b, 0, Id.maxFaceLength - 1) + '...';
        } else
          null != a.embedded && ac.exists(a.embedded)
            ? ((b = ac.getFont(a.embedded).name),
              (b =
                '[' +
                (b.length <= Id.maxFaceLength
                  ? b
                  : N.substr(b, 0, Id.maxFaceLength - 1) + '...') +
                ']'))
            : (b = '[default]');
        b += ' ' + a.size;
        a.bold && (b += ', bold');
        a.italic && (b += ', italic');
        return b;
      };
      Id.__super__ = xc;
      Id.prototype = v(xc.prototype, {
        set: function (a) {
          this.face.set_text(null != a.face ? a.face : '');
          this.size.set_value(a.size);
          this.bold.set_value(a.bold);
          this.italic.set_value(a.italic);
          this.embedded = a.embedded;
          this.face.set_prompt(
            null != this.embedded && ac.exists(this.embedded)
              ? ac.getFont(this.embedded).name
              : 'Font name',
          );
          this.preview.setFont(a);
          this.face.selecteAll();
          null != this.stage && this.stage.set_focus(this.face);
        },
        get: function () {
          return {
            face: '' == this.face.get_text() ? null : this.face.get_text(),
            embedded: this.embedded,
            size: this.size.get_value(),
            bold: this.bold.get_value(),
            italic: this.italic.get_value(),
          };
        },
        updatePreview: function () {
          this.preview.setFont(this.get());
        },
        __class__: Id,
      });
      var Ph = function (a) {
        null == a && (a = 'Sample Text');
        U.call(this);
        this.border = ta.black();
        this.addChild(this.border);
        this.bg = ta.white();
        this.bg.set_x(this.bg.set_y(1));
        this.addChild(this.bg);
        this.tf = new sc();
        this.tf.set_text(a);
        this.fixText();
        this.addChild(this.tf);
        this.maskRect = new md();
        this.addChild(this.maskRect);
        this.tf.set_mask(this.maskRect);
      };
      g['com.watabou.coogee.ui.forms._FontForm.FontPreview'] = Ph;
      Ph.__name__ = 'com.watabou.coogee.ui.forms._FontForm.FontPreview';
      Ph.__super__ = U;
      Ph.prototype = v(U.prototype, {
        layout: function () {
          var a = this.maskRect.get_graphics();
          a.clear();
          a.beginFill(16711680);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.border.set_width(this.rWidth);
          this.border.set_height(this.rHeight);
          this.bg.set_width(this.rWidth - 2);
          this.bg.set_height(this.rHeight - 2);
          this.tf.set_x(Math.max((this.rWidth - this.tf.get_width()) / 2, 0));
          this.tf.set_y(Math.max((this.rHeight - this.tf.get_height()) / 2, 0));
        },
        setFont: function (a) {
          a = Xc.font2format(a);
          null == a && (a = new we());
          a.color = D.black;
          this.tf.setTextFormat(a);
          this.fixText();
          this.layout();
        },
        fixText: function () {
          this.tf.set_autoSize(1);
          var a = this.tf.get_width(),
            b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(Math.ceil(a));
          this.tf.set_height(Math.ceil(b));
        },
        __class__: Ph,
      });
      var Vj = function (a) {
        ic.call(this, ['OK']);
        var b = new ah();
        a = new Jb(a);
        a.mouseEnabled = !1;
        a.mouseChildren = !1;
        a.set_width(360);
        b.add(a);
        this.add(b);
      };
      g['com.watabou.coogee.ui.forms.Message'] = Vj;
      Vj.__name__ = 'com.watabou.coogee.ui.forms.Message';
      Vj.__super__ = ic;
      Vj.prototype = v(ic.prototype, {
        getTitle: function () {
          return 'Message';
        },
        __class__: Vj,
      });
      var Wj = function () {
        xc.call(this);
        this.content = new fb();
        this.content.setMargins(12, 12);
        this.add(this.content);
      };
      g['com.watabou.coogee.ui.forms.MultiColorForm'] = Wj;
      Wj.__name__ = 'com.watabou.coogee.ui.forms.MultiColorForm';
      Wj.__super__ = xc;
      Wj.prototype = v(xc.prototype, {
        onButton: function (a) {
          'Add' == a
            ? ((a = this.get()), a.push(a[a.length - 1]), this.set(a))
            : xc.prototype.onButton.call(this, a);
        },
        set: function (a) {
          this.content.removeChildren();
          for (var b = [], c = 0, d = a.length; c < d; ) {
            var f = c++,
              h = a[f];
            if (0 < f) {
              var k = new ta(D.black);
              k.halign = 'fill';
              k.setSize(2, 2);
              this.content.add(k);
            }
            f = new Xj(this.content, h, 0 == f, f == a.length - 1);
            f.action.add(l(this, this.onItemAction));
            b.push(f);
          }
          this.items = b;
          this.add(this.content);
          va.__cast(this.parent, Hd).resize(!0);
        },
        get: function () {
          for (var a = [], b = 0, c = this.items; b < c.length; ) {
            var d = c[b];
            ++b;
            a.push(d.color);
          }
          return a;
        },
        onItemAction: function (a, b) {
          var c = this.items.indexOf(a),
            d = this.get();
          d.splice(c, 1);
          switch (b) {
            case 'Duplicate':
              d.splice(c, 0, a.color);
              d.splice(c, 0, a.color);
              break;
            case 'Move down':
              d.splice(c + 1, 0, a.color);
              break;
            case 'Move up':
              d.splice(c - 1, 0, a.color);
          }
          this.set(d);
        },
        __class__: Wj,
      });
      var Xj = function (a, b, c, d) {
        this.action = new $g();
        var f = this;
        this.color = b;
        var h = new ed();
        h.setMargins(0, 10);
        var k = new fb();
        k.setMargins(0, 10);
        this.hex = new tc('#000000', !0);
        this.hex.set_text(O.hex(b, 6));
        this.hex.set_restrict('#0-9a-fA-F');
        this.hex.update.add(l(this, this.onHex));
        k.add(this.hex);
        this.swatch = new vd(b, 10 + 2 * this.hex.get_height());
        this.swatch.halign = 'fill';
        k.add(this.swatch);
        h.add(k);
        k = new Pd(4);
        k.setMargins(0, 10);
        var n = ['Duplicate'];
        c || n.push('Move up');
        d || n.push('Move down');
        (c && d) || n.push('Delete');
        c = new fe('...', n);
        c.action.add(function (a) {
          f.action.dispatch(f, a);
        });
        c.valign = 'fill';
        b = Gc.rgb2hsv(b);
        this.hue = this.addRow(k, 'Hue', 359, b.x, c);
        this.sat = this.addRow(k, 'Sat', 100, 100 * b.y);
        this.val = this.addRow(k, 'Val', 100, 100 * b.z);
        h.add(k);
        a.add(h);
      };
      g['com.watabou.coogee.ui.forms.ColorItem'] = Xj;
      Xj.__name__ = 'com.watabou.coogee.ui.forms.ColorItem';
      Xj.prototype = {
        addRow: function (a, b, c, d, f) {
          var h = this;
          c |= 0;
          d |= 0;
          b = new Ib(b);
          b.valign = 'center';
          a.add(b);
          var k = new $d(0, c);
          k.set_value(d);
          k.valign = 'center';
          a.add(k);
          var n = new Od(d, 0, c, 3);
          a.add(n);
          n.update.add(function (a) {
            k.set_value(n.get_value());
          });
          k.change.add(function (a) {
            n.set_value(Math.round(a));
            h.updateSwatch();
          });
          null != f ? a.add(f) : a.addEmpty();
          return k;
        },
        onHex: function (a) {
          '#' == a.charAt(0) && (a = N.substr(a, 1, null));
          if (3 == a.length) {
            var b = [];
            b.push(a.charAt(0) + a.charAt(0));
            b.push(a.charAt(1) + a.charAt(1));
            b.push(a.charAt(2) + a.charAt(2));
            a = b.join('');
          }
          6 < a.length && (a = N.substr(a, 0, 6));
          a = H.parseInt('0x' + a);
          a = Gc.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
          this.updateSwatch();
        },
        updateSwatch: function () {
          var a = (this.color = Gc.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          this.hex.set_text(O.hex(this.color, 6));
        },
        __class__: Xj,
      };
      var Hc = function (a, b) {
        this.onNullAsset = function (a, b) {
          gb.trace('No ' + a + ' palette!', {
            fileName: 'com/watabou/coogee/ui/forms/PaletteForm.hx',
            lineNumber: 38,
            className: 'com.watabou.coogee.ui.forms.PaletteForm',
            methodName: 'onNullAsset',
          });
        };
        this.getName = function (a) {
          return 'palette';
        };
        var c = this;
        oc.call(this);
        this.form = new ed();
        this.form.setMargins(0, 0);
        this.add(this.form);
        this.tabs = new hg();
        this.form.add(this.tabs);
        var d = [
          new ib('Load', l(this, this.onLoad)),
          new ib('Apply', function () {
            a(c.getPalette());
          }),
          new ib('Save', function () {
            c.onSave(c.getPalette());
          }),
        ];
        if (null != b) {
          for (var f = [], h = []; 0 < b.length; )
            (f.push(b.shift()), h.push(b.shift()));
          b = new fe('Preset', f, h);
          b.action.add(function (a) {
            c.loadPreset(a);
          });
          d.unshift(b);
        }
        this.buttons = new Qh(d);
        this.form.add(this.buttons);
        this.onApply = a;
        this.values = [];
      };
      g['com.watabou.coogee.ui.forms.PaletteForm'] = Hc;
      Hc.__name__ = 'com.watabou.coogee.ui.forms.PaletteForm';
      Hc.txt2color = function (a) {
        '#' == a.charAt(0) && (a = N.substr(a, 1, null));
        if (3 == a.length) {
          var b = [];
          b.push(a.charAt(0) + a.charAt(0));
          b.push(a.charAt(1) + a.charAt(1));
          b.push(a.charAt(2) + a.charAt(2));
          a = b.join('');
        }
        6 < a.length && (a = N.substr(a, 0, 6));
        return H.parseInt('0x' + a);
      };
      Hc.txt2float = function (a, b, c) {
        return Fc.gate(parseFloat(a), b, c);
      };
      Hc.txt2int = function (a, b, c) {
        return Fc.gatei(H.parseInt(a), b | 0, c | 0);
      };
      Hc.swatches = function (a, b) {
        return function (c) {
          for (
            var d = null != a ? a + '_' : '', f = [], h = 0;
            h < b.length;

          ) {
            var k = b[h];
            ++h;
            f.push(Rh.get(c.getColor(k)));
          }
          return d + f.join('_');
        };
      };
      Hc.__super__ = oc;
      Hc.prototype = v(oc.prototype, {
        onShow: function () {
          oc.prototype.onShow.call(this);
          this.tabs.onTab(Hc.lastTab);
          this.tabs.change.add(function (a) {
            Hc.lastTab = a;
          });
        },
        onEnter: function () {
          this.onApply(this.getPalette());
        },
        layout: function () {
          null != this.tabs && this.tabs.layout();
          this.form.layout();
          oc.prototype.layout.call(this);
        },
        onKey: function (a) {
          var b = this.tabs.getTab();
          switch (a) {
            case 33:
              if (b < this.tabs.getTabCount() - 1) this.tabs.onTab(b + 1);
              break;
            case 34:
              if (0 < b) this.tabs.onTab(this.tabs.getTab() - 1);
              break;
            default:
              return oc.prototype.onKey.call(this, a);
          }
          return !0;
        },
        addTab: function (a) {
          this.grid = new Pd(2);
          this.tabs.addTab(a, this.grid);
        },
        addColor: function (a, b, c) {
          var d = this;
          null == this.grid && this.addTab(null);
          var f = new Ib(b);
          this.grid.add(f);
          b = new ed();
          b.setMargins(0, 10);
          var h = new tc('#000000', !0);
          h.set_text(O.hex(c, 6));
          h.set_restrict('#0-9a-fA-F');
          b.add(h);
          var k = new vd(c, h.get_height());
          b.add(k);
          h.update.add(function (a) {
            a = Hc.txt2color(a);
            k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          });
          k.onClick(function () {
            d.onColor(f.get_text(), k, function (a) {
              h.set_text(O.hex(a, 6));
              k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
            });
          });
          this.grid.add(b);
          this.values.push({ id: a, type: jc.COLOR, view: h, swatch: k });
          this.layout();
        },
        addInt: function (a, b, c, d, f) {
          null == this.grid && this.addTab(null);
          b = new Ib(b);
          this.grid.add(b);
          c = new Od(c, d, f, 7);
          this.grid.add(c);
          this.values.push({ id: a, type: jc.INT, view: c, min: d, max: f });
          this.layout();
        },
        addEnum: function (a, b, c, d) {
          null == this.grid && this.addTab(null);
          b = new Ib(b);
          this.grid.add(b);
          c = Rc.ofStrings(c);
          c.set_text(d);
          c.halign = 'fill';
          this.grid.add(c);
          this.values.push({ id: a, type: jc.STRING, view: c });
          this.layout();
        },
        onColor: function (a, b, c) {
          var d = u.findForm(Le);
          null == d && ((d = new Le()), u.showDialog(d));
          d.link(a, b.paint.bmp.get_bitmapData().getPixel(0, 0), c, this);
        },
        onLoad: function () {
          var a = this,
            b = new Gf();
          b.addEventListener('select', function (c) {
            b.addEventListener('complete', l(a, a.onPaletteLoaded));
            b.load();
          });
          var c = [new Sh('Palette', '*.json')];
          b.browse(c);
        },
        loadPreset: function (a) {
          if (ac.exists(a)) this.loadPalette(Xc.fromJSON(ac.getText(a)));
          else this.onNullAsset(a, this);
        },
        onPaletteLoaded: function (a) {
          try {
            this.loadPalette(
              Xc.fromJSON(va.__cast(a.target, Gf).data.toString()),
            );
          } catch (b) {
            q.show('Invalid palette file');
          }
        },
        loadPalette: function (a) {
          for (var b = 0, c = this.values; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                var f = d.view,
                  h = a.getColor(d.id, Hc.txt2color(f.get_text()));
                d.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, h);
                f.set_text(O.hex(h, 6));
                break;
              case 1:
                f = d.view;
                h = a.getMulti(d.id, Hc.txt2color(f.get_text()));
                d = d.multi;
                d.colors = h;
                var k = d.colors[0];
                d.paint.bmp.get_bitmapData().setPixel(0, 0, k);
                k = 1 < d.colors.length ? d.colors[1] : D.white;
                d.paint2.bmp.get_bitmapData().setPixel(0, 0, k);
                f.set_text(O.hex(h[0], 6));
                break;
              case 2:
                f = d.view;
                d = a.getFont(d.id, f.get_value());
                f.set_value(d);
                break;
              case 3:
                f = d.view;
                d = a.getFloat(d.id, Hc.txt2float(f.get_text(), d.min, d.max));
                f.set_text(null == d ? 'null' : '' + d);
                break;
              case 4:
                f = d.view;
                d = a.getInt(d.id, Hc.txt2int(f.get_text(), d.min, d.max));
                f.set_text(null == d ? 'null' : '' + d);
                break;
              case 5:
                d.view instanceof Rc
                  ? ((f = d.view),
                    (d = a.getString(d.id, f.get_value())),
                    f.set_value(d))
                  : ((f = d.view),
                    (d = a.getString(d.id, f.get_text())),
                    f.set_text(d));
                break;
              case 6:
                ((f = d.view), f.set_value(a.getBool(d.id, f.get_value())));
            }
          }
        },
        getPalette: function () {
          for (var a = new Xc(), b = 0, c = this.values; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                var f = d.view,
                  h = Hc.txt2color(f.get_text());
                a.setColor(d.id, h);
                f.set_text(O.hex(h, 6));
                break;
              case 1:
                f = d.view;
                h = d.multi.colors;
                a.setMulti(d.id, h);
                f.set_text(O.hex(h[0], 6));
                break;
              case 2:
                f = d.view.get_value();
                a.setFont(d.id, f);
                break;
              case 3:
                f = d.view;
                h = Hc.txt2float(f.get_text(), d.min, d.max);
                a.setFloat(d.id, h);
                f.set_text(null == h ? 'null' : '' + h);
                break;
              case 4:
                f = d.view;
                h = Hc.txt2int(f.get_text(), d.min, d.max);
                a.setInt(d.id, h);
                f.set_text(null == h ? 'null' : '' + h);
                break;
              case 5:
                d.view instanceof Rc
                  ? a.setString(d.id, d.view.get_value())
                  : a.setString(d.id, d.view.get_text());
                break;
              case 6:
                a.setBool(d.id, d.view.get_value());
            }
          }
          return a;
        },
        onSave: function (a) {
          ge.saveText(a.json(), this.getName(a) + '.json', 'application/json');
        },
        __class__: Hc,
      });
      var Qh = function (a) {
        U.call(this);
        this.bg = ta.light();
        this.add(this.bg);
        this.vbox = new fb();
        this.add(this.vbox);
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          c.set_width(100);
          this.vbox.add(c);
        }
        this.setSize(this.vbox.get_width(), this.vbox.get_height());
        this.valign = 'fill';
      };
      g['com.watabou.coogee.ui.forms.ButtonColumn'] = Qh;
      Qh.__name__ = 'com.watabou.coogee.ui.forms.ButtonColumn';
      Qh.__super__ = U;
      Qh.prototype = v(U.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.vbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.vbox.set_x(((this.rWidth - this.vbox.get_width()) / 2) | 0);
          this.vbox.set_y(0);
        },
        __class__: Qh,
      });
      var Pd = function (a) {
        null == a && (a = 2);
        this.margin = this.gap = 10;
        U.call(this);
        this.cols = a;
      };
      g['com.watabou.coogee.ui.layouts.Grid'] = Pd;
      Pd.__name__ = 'com.watabou.coogee.ui.layouts.Grid';
      Pd.__super__ = U;
      Pd.prototype = v(U.prototype, {
        layout: function () {
          for (var a = [], b = 0, c = this.cols; b < c; ) (b++, a.push(0));
          c = a;
          var d = [];
          a = 0;
          for (b = this.get_numChildren(); a < b; ) {
            var f = a++;
            var h = f % this.cols,
              k = (f / this.cols) | 0;
            d.length <= k && d.push(0);
            f = this.getChildAt(f);
            var n = f.get_width();
            c[h] < n && (c[h] = n);
            h = f.get_height();
            d[k] < h && (d[k] = h);
          }
          var p = (n = this.margin);
          a = k = h = 0;
          for (b = this.get_numChildren(); a < b; ) {
            f = a++;
            f = this.getChildAt(f);
            var P = n,
              g = p;
            if (f instanceof U) {
              var m = va.__cast(f, U);
              switch (m.halign) {
                case 'center':
                  P += (c[h] - m.get_width()) / 2;
                  break;
                case 'fill':
                  m.set_width(c[h]);
                  break;
                case 'right':
                  P += c[h] - m.get_width();
              }
              switch (m.valign) {
                case 'bottom':
                  g += d[k] - m.get_height();
                  break;
                case 'center':
                  g += (d[k] - m.get_height()) / 2;
                  break;
                case 'fill':
                  m.set_height(d[k]);
              }
            }
            f.set_x(P);
            f.set_y(g);
            n += c[h] + this.gap;
            ++h;
            h == this.cols &&
              ((n = this.margin), (p += d[k] + this.gap), ++k, (h = 0));
          }
          this.rHeight = 2 * this.margin + (d.length - 1) * this.gap;
          for (a = 0; a < d.length; ) ((h = d[a]), ++a, (this.rHeight += h));
          this.rWidth = 2 * this.margin + (c.length - 1) * this.gap;
          for (a = 0; a < c.length; ) ((n = c[a]), ++a, (this.rWidth += n));
        },
        add: function (a) {
          U.prototype.add.call(this, a);
          this.layout();
        },
        addEmpty: function () {
          this.add(new ta(0, 0));
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: Pd,
      });
      var ed = function () {
        this.margin = this.gap = 10;
        U.call(this);
      };
      g['com.watabou.coogee.ui.layouts.HBox'] = ed;
      ed.__name__ = 'com.watabou.coogee.ui.layouts.HBox';
      ed.__super__ = U;
      ed.prototype = v(U.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              c = !1,
              d = 0,
              f = this.get_numChildren();
            d < f;

          ) {
            var h = d++;
            h = this.getChildAt(h);
            'top' != h.valign && (c = !0);
            'fill' != h.valign && b < h.get_height() && (b = h.get_height());
            h.set_x(a);
            h.set_y(this.margin);
            a += h.get_width() + this.gap;
          }
          if (c)
            for (d = 0, f = this.get_numChildren(); d < f; )
              switch (((h = d++), (h = this.getChildAt(h)), h.valign)) {
                case 'bottom':
                  h.set_y(this.margin + (b - h.get_height()));
                  break;
                case 'center':
                  h.set_y(this.margin + (b - h.get_height()) / 2);
                  break;
                case 'fill':
                  h.set_height(b);
              }
          this.rWidth =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          U.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: ed,
      });
      var ah = function () {
        this.margin = 10;
        U.call(this);
      };
      g['com.watabou.coogee.ui.layouts.SimpleBox'] = ah;
      ah.__name__ = 'com.watabou.coogee.ui.layouts.SimpleBox';
      ah.__super__ = U;
      ah.prototype = v(U.prototype, {
        layout: function () {
          for (var a = 0, b = 0, c = 0, d = this.get_numChildren(); c < d; ) {
            var f = c++;
            f = this.getChildAt(f);
            a < f.get_width() && (a = f.get_width());
            b < f.get_height() && (b = f.get_height());
            f.set_x(this.margin);
            f.set_y(this.margin);
          }
          this.rWidth = a + 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          U.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a) {
          this.margin = a;
        },
        __class__: ah,
      });
      var hg = function () {
        this.change = new ec();
        fb.call(this);
        this.setMargins(0, 0);
        this.tabRow = new Th();
        this.tabRow.click.add(l(this, this.onTab));
        this.tabRow.halign = 'fill';
        this.add(this.tabRow);
        this.stack = new ah();
        this.stack.setMargins(0);
        this.add(this.stack);
      };
      g['com.watabou.coogee.ui.layouts.Tabs'] = hg;
      hg.__name__ = 'com.watabou.coogee.ui.layouts.Tabs';
      hg.__super__ = fb;
      hg.prototype = v(fb.prototype, {
        layout: function () {
          null != this.stack && this.stack.layout();
          fb.prototype.layout.call(this);
        },
        addTab: function (a, b) {
          null != a && this.tabRow.addTab(a);
          this.stack.add(b);
          this.tabRow.get_selected() != this.stack.get_numChildren() - 1 &&
            null != a &&
            b.set_visible(!1);
          this.layout();
        },
        onTab: function (a) {
          var b = this.tabRow.get_selected();
          -1 != b && this.stack.getChildAt(b).set_visible(!1);
          this.stack.getChildAt(a).set_visible(!0);
          this.tabRow.set_selected(a);
          this.change.dispatch(a);
        },
        getTab: function () {
          return this.tabRow.get_selected();
        },
        getTabCount: function () {
          return this.tabRow.get_size();
        },
        set_rowSize: function (a) {
          return (this.tabRow.rowSize = a);
        },
        __class__: hg,
        __properties__: v(fb.prototype.__properties__, {
          set_rowSize: 'set_rowSize',
        }),
      });
      var ae = function () {
        this._selected = -1;
        this.tabs = [];
        this.rowSize = 256;
        this.click = new ec();
        U.call(this);
        this.bg = ta.light();
        this.add(this.bg);
      };
      g['com.watabou.coogee.ui.layouts._Tabs.TabButtons'] = ae;
      ae.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabButtons';
      ae.__super__ = U;
      ae.prototype = v(U.prototype, {
        get_selected: function () {
          return this._selected;
        },
        set_selected: function (a) {
          return (this._selected = a);
        },
        get_size: function () {
          return this.tabs.length;
        },
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        addTab: function (a) {
          a = new Uh(a);
          a.click.add(l(this, this.onTab));
          this.tabs.push(a);
          return a;
        },
        onTab: function (a) {
          this.click.dispatch(this.tabs.indexOf(a));
        },
        __class__: ae,
        __properties__: v(U.prototype.__properties__, {
          get_size: 'get_size',
          set_selected: 'set_selected',
          get_selected: 'get_selected',
        }),
      });
      var Yj = function () {
        this.first = 0;
        ae.call(this);
        this.stripe = new ed();
        this.stripe.setMargins(0, 0);
        this.add(this.stripe);
        this.more = new ib('...');
        this.more.click.add(l(this, this.showList));
        this.more.set_visible(!1);
        this.add(this.more);
      };
      g['com.watabou.coogee.ui.layouts._Tabs.TabRow'] = Yj;
      Yj.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabRow';
      Yj.__super__ = ae;
      Yj.prototype = v(ae.prototype, {
        layout: function () {
          ae.prototype.layout.call(this);
          this.more.set_height(this.rHeight - 8);
          this.more.set_x(this.rWidth - this.more.get_width());
          this.more.set_y(4);
        },
        addTab: function (a) {
          a = ae.prototype.addTab.call(this, a);
          this.stripe.add(a);
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (this.tabs.length > this.rowSize) {
            this.first > a
              ? (this.first = a)
              : a >= this.first + this.rowSize &&
                (this.first = a - this.rowSize + 1);
            for (var b = 0, c = this.tabs.length; b < c; )
              ((a = b++),
                this.tabs[a].set_visible(
                  a >= this.first && a < this.first + this.rowSize,
                ));
            this.stripe.set_x(-this.tabs[this.first].get_x());
          }
          -1 != this._selected && this.tabs[this._selected].set_selected(!0);
          return this.get_selected();
        },
        updateSize: function () {
          if (this.tabs.length <= this.rowSize)
            (this.more.set_visible(!1),
              (this.rWidth = this.stripe.get_width()));
          else {
            this.more.set_visible(!0);
            for (
              var a = (this.rWidth = 0),
                b = this.tabs.length - this.rowSize + 1;
              a < b;

            ) {
              for (var c = a++, d = 0, f = 0, h = this.rowSize; f < h; ) {
                var k = f++;
                d += this.tabs[c + k].get_width();
              }
              this.rWidth < d && (this.rWidth = d);
            }
            this.rWidth += 4 + this.more.get_width();
          }
          this.rHeight = this.stripe.get_height();
        },
        showList: function () {
          for (
            var a = this, b = new dd(), c = 0, d = this.tabs.length;
            c < d;

          ) {
            var f = [c++];
            b.addItem(
              this.tabs[f[0]].get_text(),
              (function (b) {
                return function () {
                  a.click.dispatch(b[0]);
                };
              })(f),
              this.get_selected() == f[0],
            );
          }
          c = u.getRect(this.more);
          u.showMenuAt(b, Math.ceil(c.x), c.get_bottom());
        },
        __class__: Yj,
      });
      var Th = function () {
        ae.call(this);
        this.stripes = new fb();
        this.stripes.setMargins(0, 0);
        this.add(this.stripes);
      };
      g['com.watabou.coogee.ui.layouts._Tabs.TabMultiRow'] = Th;
      Th.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabMultiRow';
      Th.__super__ = ae;
      Th.prototype = v(ae.prototype, {
        addTab: function (a) {
          a = ae.prototype.addTab.call(this, a);
          null == this.lastRow &&
            ((this.lastRow = new ed()),
            this.lastRow.setMargins(0, 0),
            this.stripes.add(this.lastRow));
          this.lastRow.add(a);
          this.lastRow.get_numChildren() >= this.rowSize &&
            (this.lastRow = null);
          this.stripes.layout();
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (-1 != this._selected) {
            a = this.tabs[this._selected];
            a.set_selected(!0);
            for (
              var b = this.stripes.getChildAt(
                this.stripes.get_numChildren() - 1,
              );
              -1 == b.getChildIndex(a);

            )
              ((b = this.stripes.removeChildAt(0)), this.stripes.add(b));
          }
          return this.get_selected();
        },
        updateSize: function () {
          this.rWidth = this.stripes.get_width();
          this.rHeight = this.stripes.get_height();
        },
        __class__: Th,
      });
      var Uh = function (a) {
        this.click = new ec();
        U.call(this);
        this.bg = new ka();
        this.addChild(this.bg);
        this.tf = ld.get('', D.format(D.uiFont, D.smallSize, D.black));
        this.tf.set_x(4);
        this.tf.set_y(8);
        this.addChild(this.tf);
        this.set_text(a);
        this.set_selected(!1);
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
      };
      g['com.watabou.coogee.ui.layouts.Tab'] = Uh;
      Uh.__name__ = 'com.watabou.coogee.ui.layouts.Tab';
      Uh.__super__ = U;
      Uh.prototype = v(U.prototype, {
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(D.white);
          a.drawRoundRectComplex(
            0,
            4,
            this.rWidth,
            this.rHeight - 4,
            4,
            4,
            0,
            0,
          );
        },
        onClick: function (a) {
          this.click.dispatch(this);
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(
            this.tf.get_width() + 8,
            Math.ceil(this.tf.get_height() + 8),
          );
          return a;
        },
        set_selected: function (a) {
          this.mouseEnabled = !a;
          this.bg.set_alpha(a ? 1 : 0);
          return a;
        },
        __class__: Uh,
        __properties__: v(U.prototype.__properties__, {
          set_selected: 'set_selected',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var ld = function () {};
      g['com.watabou.coogee.ui.utils.Text'] = ld;
      ld.__name__ = 'com.watabou.coogee.ui.utils.Text';
      ld.get = function (a, b, c, d) {
        null == a && (a = '');
        var f = new sc();
        null != c || null != d ? ld.activate(f, c, d) : f.set_selectable(!1);
        f.set_autoSize(1);
        null != b && f.set_defaultTextFormat(b);
        f.set_htmlText(a);
        return f;
      };
      ld.input = function (a, b, c) {
        null == a && (a = '');
        var d = new sc();
        d.set_type(1);
        d.set_borderColor(d.get_defaultTextFormat().color);
        d.set_background(!0);
        d.set_border(!0);
        d.addEventListener('change', function (a) {
          null != c && c();
        });
        d.set_defaultTextFormat(b);
        d.set_text('' != a ? a : ' ');
        d.set_autoSize(1);
        d.set_height(d.get_height());
        d.set_autoSize(2);
        d.set_text(a);
        return d;
      };
      ld.activate = function (a, b, c) {
        a.set_type(1);
        a.addEventListener('focusIn', function (b) {
          a.set_borderColor(a.get_defaultTextFormat().color);
          a.set_border(!0);
        });
        a.addEventListener('focusOut', function (b) {
          a.set_border(!1);
          null != c && c();
        });
        a.addEventListener('keyDown', function (b) {
          if (13 == b.keyCode || 27 == b.keyCode)
            (a.stage.set_focus(a.stage), b.stopPropagation());
        });
        a.addEventListener('change', function (a) {
          null != b && b();
        });
      };
      var Xa = function (a, b) {
        this.type = a;
        null != b ? ((a = new Pa()), (a.h.id = b), (b = a)) : (b = new Pa());
        this.props = b;
        this.coords = [];
        this.items = [];
      };
      g['com.watabou.formats.GeoJSON'] = Xa;
      Xa.__name__ = 'com.watabou.formats.GeoJSON';
      Xa.lineString = function (a, b) {
        a = new Xa('LineString', a);
        a.coords = [[b]];
        return a;
      };
      Xa.polygon = function (a, b) {
        a = new Xa('Polygon', a);
        a.coords = [[b]];
        return a;
      };
      Xa.multiPoint = function (a, b) {
        a = new Xa('MultiPoint', a);
        a.coords = [[b]];
        return a;
      };
      Xa.multiPolygon = function (a, b) {
        a = new Xa('MultiPolygon', a);
        for (var c = [], d = 0; d < b.length; ) {
          var f = b[d];
          ++d;
          c.push([f]);
        }
        a.coords = c;
        return a;
      };
      Xa.geometryCollection = function (a, b) {
        a = new Xa('GeometryCollection', a);
        a.items = b;
        return a;
      };
      Xa.featureCollection = function (a, b) {
        var c = new Xa('FeatureCollection');
        c.items = a;
        c.props = b;
        return c;
      };
      Xa.feature = function (a, b) {
        var c = new Xa('Feature');
        c.items = null != a ? [a] : [];
        c.props = b;
        return c;
      };
      Xa.replacer = function (a, b) {
        if (b instanceof Xa) {
          var c = { type: b.type };
          if (null != b.props)
            for (
              var d = b.props.h, f = Object.keys(d), h = f.length, k = 0;
              k < h;

            )
              ((a = f[k++]), (c[a] = d[a]));
          switch (b.type) {
            case 'Feature':
              0 < b.items.length && (c.geometry = b.items[0]);
              break;
            case 'FeatureCollection':
              c.features = b.items;
              break;
            case 'GeometryCollection':
              c.geometries = b.items;
              break;
            case 'LineString':
              c.coordinates = Xa.arrPoly(b.coords[0][0]);
              break;
            case 'MultiLineString':
              a = [];
              d = 0;
              for (b = b.coords[0]; d < b.length; )
                ((f = b[d]), ++d, a.push(Xa.arrPoly(f)));
              c.coordinates = a;
              break;
            case 'MultiPoint':
              c.coordinates = Xa.arrPoly(b.coords[0][0]);
              break;
            case 'MultiPolygon':
              a = [];
              d = 0;
              for (b = b.coords; d < b.length; ) {
                f = b[d];
                ++d;
                h = [];
                for (k = 0; k < f.length; ) {
                  var n = f[k];
                  ++k;
                  h.push(Xa.arrPoly(n));
                }
                a.push(h);
              }
              c.coordinates = a;
              break;
            case 'Polygon':
              a = [];
              d = 0;
              for (b = b.coords[0]; d < b.length; )
                ((n = b[d]), ++d, a.push(Xa.arrPoly(n)));
              c.coordinates = a;
          }
          return c;
        }
        return b;
      };
      Xa.arrPoly = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(Xa.arrPoint(d));
        }
        return b;
      };
      Xa.arrPoint = function (a) {
        return [
          Math.round(1e3 * (Xa.CX + a.x * Xa.SCALE)) / 1e3,
          Math.round(1e3 * (Xa.CY - a.y * Xa.SCALE)) / 1e3,
        ];
      };
      Xa.prototype = {
        stringify: function () {
          return JSON.stringify(this, Xa.replacer, '  ');
        },
        __class__: Xa,
      };
      var I = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      g['openfl.geom.Point'] = I;
      I.__name__ = 'openfl.geom.Point';
      I.distance = function (a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(c * c + a * a);
      };
      I.polar = function (a, b) {
        return new I(a * Math.cos(b), a * Math.sin(b));
      };
      I.prototype = {
        add: function (a) {
          return new I(a.x + this.x, a.y + this.y);
        },
        clone: function () {
          return new I(this.x, this.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
        },
        normalize: function (a) {
          if (0 != this.x || 0 != this.y)
            ((a /= Math.sqrt(this.x * this.x + this.y * this.y)),
              (this.x *= a),
              (this.y *= a));
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setTo: function (a, b) {
          this.x = a;
          this.y = b;
        },
        subtract: function (a) {
          return new I(this.x - a.x, this.y - a.y);
        },
        __toLimeVector2: function () {
          null == I.__limeVector2 && (I.__limeVector2 = new ig());
          var a = I.__limeVector2;
          a.x = this.x;
          a.y = this.y;
          return I.__limeVector2;
        },
        get_length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        __class__: I,
        __properties__: { get_length: 'get_length' },
      };
      var Qa = function (a, b) {
        this.width = a;
        this.height = b;
        this.root = W.createElement('svg');
        this.root.set('width', H.string(Math.round(1e3 * a) / 1e3));
        this.root.set('height', H.string(Math.round(1e3 * b) / 1e3));
        this.root.set('xmlns', 'http://www.w3.org/2000/svg');
      };
      g['com.watabou.formats.SVG'] = Qa;
      Qa.__name__ = 'com.watabou.formats.SVG';
      Qa.setOpacity = function (a, b) {
        a.set('opacity', null == b ? 'null' : '' + b);
        return a;
      };
      Qa.setFill = function (a, b, c) {
        null == c && (c = 1);
        a.set('fill', '#' + O.hex(b, 6));
        1 > c && a.set('fill-opacity', null == c ? 'null' : '' + c);
        return a;
      };
      Qa.noFill = function (a) {
        a.set('fill', 'none');
        return a;
      };
      Qa.fillRule = function (a, b) {
        a.set('fill-rule', b);
        return a;
      };
      Qa.setStroke = function (a, b, c, d, f) {
        null == c && (c = 0);
        a.set('stroke', '#' + O.hex(b, 6));
        0 != c && a.set('stroke-width', H.string(Math.round(1e3 * c) / 1e3));
        Qa.joinNcap(a, d, f);
        return a;
      };
      Qa.strokeOpacity = function (a, b) {
        a.set('stroke-opacity', null == b ? 'null' : '' + b);
        return a;
      };
      Qa.joinNcap = function (a, b, c) {
        null != b && a.set('stroke-linejoin', b);
        null != c && a.set('stroke-linecap', c);
        return a;
      };
      Qa.style = function (a, b) {
        a.set('style', b);
        return a;
      };
      Qa.clearTransform = function (a) {
        a.remove('transform');
        return a;
      };
      Qa.addTransform = function (a, b) {
        var c = a.get('transform');
        a.set('transform', null == c ? b : '' + b + ' ' + c);
        return a;
      };
      Qa.translate = function (a, b, c) {
        return Qa.addTransform(
          a,
          'translate(' +
            H.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            H.string(Math.round(1e3 * c) / 1e3) +
            ')',
        );
      };
      Qa.scale = function (a, b, c) {
        return Qa.addTransform(
          a,
          'scale(' +
            H.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            H.string(Math.round(1e3 * c) / 1e3) +
            ')',
        );
      };
      Qa.rotate = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        return Qa.addTransform(
          a,
          'rotate(' +
            H.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            H.string(Math.round(1e3 * c) / 1e3) +
            ' ' +
            H.string(Math.round(1e3 * d) / 1e3) +
            ')',
        );
      };
      Qa.x = function (a, b) {
        a.set('x', H.string(Math.round(1e3 * b) / 1e3));
      };
      Qa.y = function (a, b) {
        a.set('y', H.string(Math.round(1e3 * b) / 1e3));
      };
      Qa.linearGradient = function (a, b, c) {
        null == b && (b = 'userSpaceOnUse');
        var d = W.createElement('linearGradient');
        d.set('id', a);
        d.set('gradientUnits', b);
        null != c &&
          ((a = c.transformPoint(Qa._p0)),
          (c = c.transformPoint(Qa._p1)),
          d.set('x1', H.string(Math.round(1e3 * a.x) / 1e3)),
          d.set('y1', H.string(Math.round(1e3 * a.y) / 1e3)),
          d.set('x2', H.string(Math.round(1e3 * c.x) / 1e3)),
          d.set('y2', H.string(Math.round(1e3 * c.y) / 1e3)));
        return d;
      };
      Qa.radialGradient = function (a, b, c) {
        null == b && (b = 'userSpaceOnUse');
        var d = W.createElement('radialGradient');
        d.set('id', a);
        d.set('gradientUnits', b);
        null != c &&
          (d.set('cx', H.string(Math.round(1e3 * c.tx) / 1e3)),
          d.set('cy', H.string(Math.round(1e3 * c.ty) / 1e3)),
          d.set('r', H.string(Math.round(819200 * c.a) / 1e3)));
        return d;
      };
      Qa.stop = function (a, b, c) {
        null == c && (c = 1);
        var d = W.createElement('stop');
        d.set('offset', Math.round(100 * a) + '%');
        d.set('stop-color', '#' + O.hex(b, 6));
        1 > c && d.set('stop-opacity', null == c ? 'null' : '' + c);
        return d;
      };
      Qa.group = function (a) {
        var b = W.createElement('g');
        null != a && b.set('id', a);
        return b;
      };
      Qa.clipPath = function (a) {
        var b = W.createElement('clipPath');
        b.set('id', a);
        Qa.setFill(b, 16777215);
        return b;
      };
      Qa.text = function (a, b, c) {
        var d = W.createElement('text');
        a = W.createPCData(a);
        d.addChild(a);
        null != b && d.set('text-anchor', b);
        null != c && d.set('dominant-baseline', c);
        return d;
      };
      Qa.tspan = function (a) {
        var b = W.createElement('tspan');
        a = W.createPCData(a);
        b.addChild(a);
        return b;
      };
      Qa.rect = function (a, b, c, d) {
        var f = W.createElement('rect');
        f.set('x', H.string(Math.round(1e3 * a) / 1e3));
        f.set('y', H.string(Math.round(1e3 * b) / 1e3));
        f.set('width', H.string(Math.round(1e3 * c) / 1e3));
        f.set('height', H.string(Math.round(1e3 * d) / 1e3));
        return f;
      };
      Qa.prototype = { __class__: Qa };
      var fc = function () {
        this.buff = new x();
      };
      g['com.watabou.formats.SVGPath'] = fc;
      fc.__name__ = 'com.watabou.formats.SVGPath';
      fc.prototype = {
        xml: function () {
          var a = W.createElement('path');
          a.set('d', this.buff.b);
          return a;
        },
        __class__: fc,
      };
      var Ja = function () {};
      g['com.watabou.formats.Sprite2SVG'] = Ja;
      Ja.__name__ = 'com.watabou.formats.Sprite2SVG';
      Ja.create = function (a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = -1);
        d && (Ja.resetGradients(), Ja.resetImports());
        d = new Qa(a, b);
        Ja.defaultAttributes(d.root);
        -1 != c &&
          ((a = Qa.rect(0, 0, a, b)), Qa.setFill(a, c), d.root.addChild(a));
        return d;
      };
      Ja.defaultAttributes = function (a) {
        Qa.joinNcap(a, 'round', 'round');
        Qa.fillRule(a, 'evenodd');
        Qa.noFill(a);
      };
      Ja.drawSprite = function (a) {
        var b = a.__isMask ? Qa.clipPath(a.get_name()) : Qa.group();
        Ja.copyAttributes(a, b);
        Ja.drawGraphics(a.get_graphics(), b);
        Ja.drawChildren(a, b);
        return b;
      };
      Ja.drawShape = function (a) {
        var b = a.__isMask ? Qa.clipPath(a.get_name()) : Qa.group();
        Ja.copyAttributes(a, b);
        Ja.drawGraphics(a.get_graphics(), b);
        return b;
      };
      Ja.copyAttributes = function (a, b) {
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          Qa.scale(b, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && Qa.rotate(b, a.get_rotation());
        (0 == a.get_x() && 0 == a.get_y()) ||
          Qa.translate(b, a.get_x(), a.get_y());
        1 > a.get_alpha() && Qa.setOpacity(b, a.get_alpha());
        if (10 != a.get_blendMode()) {
          var c = Ja.BLEND_MODES,
            d = a.get_blendMode();
          Qa.style(b, 'mix-blend-mode: ' + c.h[d]);
        }
        null != a.get_mask() &&
          b.set('clip-path', 'url(#' + a.get_mask().get_name() + ')');
      };
      Ja.drawGraphics = function (a, b) {
        var c = !1,
          d = 0,
          f = 1,
          h = 1,
          k = 2,
          n = 1,
          p = !1,
          P = 0,
          g = 1,
          m = null;
        for (a = a.readGraphicsData(!1).iterator(); a.hasNext(); ) {
          var q = a.next();
          switch (q.__graphicsDataType) {
            case 0:
              c = q;
              f = c.thickness;
              h = c.fill;
              d = h.color;
              h = h.alpha;
              k = c.joints;
              n = c.caps;
              c = !0;
              break;
            case 1:
              m = null;
              p = q;
              P = p.color;
              g = p.alpha;
              p = !0;
              break;
            case 2:
              m = q;
              Ja.gradients.push(m);
              p = !0;
              break;
            case 3:
              q = Ja.drawPath(q.commands, q.data, q.winding);
              p &&
                (null == m
                  ? Qa.setFill(q, P, g)
                  : q.set('fill', 'url(#grad' + Ja.gradients.length + ')'));
              c &&
                (Qa.setStroke(q, d, f),
                (2 == k && 1 == n) ||
                  Qa.joinNcap(q, Ja.JOINTS.h[k], Ja.CAPS.h[n]),
                1 > h && Qa.strokeOpacity(q, h));
              b.addChild(q);
              break;
            case 5:
              ((p = c = !1), (m = null));
          }
        }
      };
      Ja.drawPath = function (a, b, c) {
        c = new fc();
        var d = 0;
        a = a.iterator();
        a: for (; a.hasNext(); )
          switch (a.next()) {
            case 1:
              var f = b.get(d),
                h = (fc.ly = b.get(d + 1));
              c.buff.b += H.string(
                ' M ' +
                  (H.string(Math.round(1e3 * (fc.lx = f)) / 1e3) +
                    ',' +
                    H.string(Math.round(1e3 * h) / 1e3)),
              );
              d += 2;
              break;
            case 2:
              f = b.get(d);
              h = b.get(d + 1);
              if (0 == c.buff.b.length) {
                var k = (fc.ly = fc.ly);
                c.buff.b += H.string(
                  ' M ' +
                    (H.string(Math.round(1e3 * (fc.lx = fc.lx)) / 1e3) +
                      ',' +
                      H.string(Math.round(1e3 * k) / 1e3)),
                );
              }
              h = fc.ly = h;
              c.buff.b += H.string(
                ' L ' +
                  (H.string(Math.round(1e3 * (fc.lx = f)) / 1e3) +
                    ',' +
                    H.string(Math.round(1e3 * h) / 1e3)),
              );
              d += 2;
              break;
            case 3:
              k = b.get(d);
              var n = b.get(d + 1);
              f = b.get(d + 2);
              h = b.get(d + 3);
              if (0 == c.buff.b.length) {
                var p = (fc.ly = fc.ly);
                c.buff.b += H.string(
                  ' M ' +
                    (H.string(Math.round(1e3 * (fc.lx = fc.lx)) / 1e3) +
                      ',' +
                      H.string(Math.round(1e3 * p) / 1e3)),
                );
              }
              k =
                'Q ' +
                (H.string(Math.round(1e3 * k) / 1e3) +
                  ',' +
                  H.string(Math.round(1e3 * n) / 1e3)) +
                ' ';
              h = fc.ly = h;
              c.buff.b += H.string(
                ' ' +
                  (k +
                    (H.string(Math.round(1e3 * (fc.lx = f)) / 1e3) +
                      ',' +
                      H.string(Math.round(1e3 * h) / 1e3))),
              );
              d += 4;
              break;
            case 4:
              a = b.get(d + 2);
              b = fc.ly = b.get(d + 3);
              c.buff.b += H.string(
                ' M ' +
                  (H.string(Math.round(1e3 * (fc.lx = a)) / 1e3) +
                    ',' +
                    H.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 5:
              a = b.get(d + 2);
              b = b.get(d + 3);
              0 == c.buff.b.length &&
                ((d = fc.ly = fc.ly),
                (c.buff.b += H.string(
                  ' M ' +
                    (H.string(Math.round(1e3 * (fc.lx = fc.lx)) / 1e3) +
                      ',' +
                      H.string(Math.round(1e3 * d) / 1e3)),
                )));
              b = fc.ly = b;
              c.buff.b += H.string(
                ' L ' +
                  (H.string(Math.round(1e3 * (fc.lx = a)) / 1e3) +
                    ',' +
                    H.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 6:
              f = b.get(d);
              h = b.get(d + 1);
              k = b.get(d + 2);
              n = b.get(d + 3);
              p = b.get(d + 4);
              var P = b.get(d + 5);
              c.buff.b += H.string(
                ' C ' + (f + ',' + h + ' ' + k + ',' + n + ' ' + p + ',' + P),
              );
              d += 6;
          }
        return c.xml();
      };
      Ja.drawChildren = function (a, b) {
        for (var c = 0, d = a.get_numChildren(); c < d; ) {
          var f = c++;
          f = a.getChildAt(f);
          if (f.get_visible()) {
            var h = null;
            null != Ja.handleObject && (h = Ja.handleObject(f));
            null == h &&
              (f instanceof ka
                ? (h = Ja.drawSprite(f))
                : f instanceof md
                  ? (h = Ja.drawShape(f))
                  : f instanceof sc && (h = Ja.drawText(f)));
            if (null != h) {
              for (var k = 0, n = f.get_filters(); k < n.length; ) {
                var p = n[k];
                ++k;
                Ja.handleFilter(f, p, h, b);
              }
              b.addChild(h);
            }
          }
        }
      };
      Ja.drawText = function (a) {
        var b = a.get_defaultTextFormat(),
          c = 1 < a.get_numLines(),
          d = Qa.text(c ? '' : a.get_text(), null, 'text-before-edge');
        Qa.style(d, Ja.svgFont(b));
        Qa.setFill(d, b.color);
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          Qa.scale(d, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && Qa.rotate(d, a.get_rotation());
        1 > a.get_alpha() && Qa.setOpacity(d, a.get_alpha());
        if (c)
          for (
            Qa.translate(d, a.get_x(), a.get_y()), b = 0, c = a.get_numLines();
            b < c;

          ) {
            var f = b++,
              h = Qa.tspan(a.getLineText(f));
            f = a.getCharBoundaries(a.getLineOffset(f));
            Qa.x(h, f.x * a.get_scaleX());
            Qa.y(h, f.y * a.get_scaleY());
            d.addChild(h);
          }
        else
          ((f = a.getCharBoundaries(a.getLineOffset(0))),
            Qa.translate(
              d,
              a.get_x() + f.x * a.get_scaleX(),
              a.get_y() + f.y * a.get_scaleY(),
            ));
        return d;
      };
      Ja.substituteGenerics = function (a) {
        switch (a) {
          case '_sans':
            return 'sans-serif';
          case '_serif':
            return 'serif';
          case '_typewriter':
            return 'monospace';
          default:
            return a;
        }
      };
      Ja.svgFont = function (a) {
        var b = Ja.substituteFont(a.font),
          c = 'font: ';
        a.bold && (c += 'bold ');
        a.italic && (c += 'italic ');
        c += '' + a.size + 'px ' + b;
        0 != a.letterSpacing &&
          (c += '; letter-spacing: ' + a.letterSpacing + 'px');
        return c;
      };
      Ja.resetGradients = function () {
        Ja.gradients = [];
      };
      Ja.getGradients = function () {
        for (
          var a = W.createElement('defs'), b = 0, c = Ja.gradients.length;
          b < c;

        ) {
          var d = b++,
            f = 'grad' + (d + 1);
          d = Ja.gradients[d];
          if (0 == d.type) {
            f = Qa.linearGradient(f, null, d.matrix);
            for (var h = 0, k = d.colors.length; h < k; ) {
              var n = h++;
              f.addChild(Qa.stop(d.ratios[n] / 255, d.colors[n], d.alphas[n]));
            }
            a.addChild(f);
          } else {
            f = Qa.radialGradient(f, null, d.matrix);
            h = 0;
            for (k = d.colors.length; h < k; )
              ((n = h++),
                f.addChild(
                  Qa.stop(d.ratios[n] / 255, d.colors[n], d.alphas[n]),
                ));
            a.addChild(f);
          }
        }
        return a;
      };
      Ja.resetImports = function () {
        Ja.imports = [];
      };
      Ja.addImport = function (a) {
        -1 == Ja.imports.indexOf(a) && Ja.imports.push(a);
      };
      Ja.getImports = function () {
        for (
          var a = W.createElement('style'), b = '', c = 0, d = Ja.imports;
          c < d.length;

        ) {
          var f = d[c];
          ++c;
          b += H.string('@import url("' + f + '");');
        }
        a.addChild(W.createCData(b));
        return a;
      };
      Ja.handleFilter = function (a, b, c, d) {
        if (b instanceof Sc) {
          for (var f = 1; null != a.parent; )
            ((f *= a.get_scaleX()), (a = a.parent));
          f = a.get_scaleX();
          a = W.parse(Df.print(c)).firstElement();
          Qa.setStroke(a, b.get_color(), (2 * b.get_blurX()) / f);
          1 > b.get_alpha() && Qa.strokeOpacity(a, b.get_alpha());
          d.addChild(a);
        }
      };
      var Hf = function () {};
      g['com.watabou.geom.Chaikin'] = Hf;
      Hf.__name__ = 'com.watabou.geom.Chaikin';
      Hf.render = function (a, b, c, d) {
        null == c && (c = 1);
        for (var f = 0; f < c; ) {
          f++;
          for (var h = [], k = a.length, n = 1, p = k - 1; n < p; ) {
            var P = n++,
              g = a[P];
            null == d || -1 == d.indexOf(g)
              ? (h.push(qa.lerp(g, a[P - 1], 0.25)),
                h.push(qa.lerp(g, a[P + 1], 0.25)))
              : h.push(g);
          }
          b
            ? ((n = a[k - 1]),
              null == d || -1 == d.indexOf(n)
                ? (h.push(qa.lerp(n, a[k - 2], 0.25)),
                  h.push(qa.lerp(n, a[0], 0.25)))
                : h.push(n),
              (n = a[0]),
              null == d || -1 == d.indexOf(n)
                ? (h.push(qa.lerp(n, a[k - 1], 0.25)),
                  h.push(qa.lerp(n, a[1], 0.25)))
                : h.push(n))
            : (h.unshift(a[0]), h.push(a[k - 1]));
          a = h;
        }
        return a;
      };
      var Ea = function (a, b) {
        null == b && (b = 0);
        this.c = a;
        this.r = b;
      };
      g['com.watabou.geom.Circle'] = Ea;
      Ea.__name__ = 'com.watabou.geom.Circle';
      Ea.prototype = { __class__: Ea };
      var Gc = function () {};
      g['com.watabou.geom.Color'] = Gc;
      Gc.__name__ = 'com.watabou.geom.Color';
      Gc.rgbfSafe = function (a, b, c) {
        return (
          ((Fc.gate(255 * a, 0, 255) | 0) << 16) |
          ((Fc.gate(255 * b, 0, 255) | 0) << 8) |
          Fc.gate(255 * c, 0, 255) |
          0
        );
      };
      Gc.lerp = function (a, b, c) {
        null == c && (c = 0.5);
        var d = (a >>> 8) & 255,
          f = a & 255,
          h = b >>> 16,
          k = (b >>> 8) & 255;
        b &= 255;
        var n = 1 - c;
        return (
          (((cb.toFloat(a >>> 16) * n + cb.toFloat(h) * c) | 0) << 16) |
          (((cb.toFloat(d) * n + cb.toFloat(k) * c) | 0) << 8) |
          (cb.toFloat(f) * n + cb.toFloat(b) * c) |
          0
        );
      };
      Gc.scale = function (a, b) {
        return Gc.rgbfSafe(
          (cb.toFloat(a >>> 16) / cb.toFloat(255)) * b,
          (cb.toFloat((a >>> 8) & 255) / cb.toFloat(255)) * b,
          (cb.toFloat(a & 255) / cb.toFloat(255)) * b,
        );
      };
      Gc.hsv = function (a, b, c) {
        var d = function (a) {
            a -= 360 * Math.floor(a / 360);
            return Fc.gate(Math.abs(a / 60 - 3) - 1, 0, 1);
          },
          f = d(a),
          h = d(a - 120);
        a = d(a + 120);
        return Gc.rgbfSafe(
          (f * b + 1 - b) * c,
          (h * b + 1 - b) * c,
          (a * b + 1 - b) * c,
        );
      };
      Gc.rgb2hsv = function (a) {
        var b = cb.toFloat(a >>> 16) / cb.toFloat(255),
          c = cb.toFloat((a >>> 8) & 255) / cb.toFloat(255);
        a = cb.toFloat(a & 255) / cb.toFloat(255);
        var d = Math.min(b, Math.min(c, a)),
          f = Math.max(b, Math.max(c, a));
        return d == f
          ? new bh(0, 0, d)
          : new bh(
              60 *
                ((b == d ? 3 : a == d ? 1 : 5) -
                  (b == d ? c - a : a == d ? b - c : a - b) / (f - d)),
              (f - d) / f,
              f,
            );
      };
      var Me = function () {};
      g['com.watabou.geom.Cubic'] = Me;
      Me.__name__ = 'com.watabou.geom.Cubic';
      Me.smoothOpen = function (a, b) {
        null == b && (b = 4);
        var c = function (a, b, c) {
            a = b.subtract(a);
            b = c.subtract(b);
            var d = a.get_length() * b.get_length(),
              f = (a.x * b.y - a.y * b.x) / d;
            a = (a.x * b.x + a.y * b.y) / d;
            return c.add(new I(b.x * a - b.y * f, b.y * a + b.x * f));
          },
          d = a.length;
        if (2 >= d) return a;
        var f = c(a[2], a[1], a[0]);
        c = c(a[d - 3], a[d - 2], a[d - 1]);
        a = a.slice();
        a.unshift(f);
        a.push(c);
        f = [];
        c = 1;
        for (var h = a.length - 2; c < h; ) {
          var k = c++,
            n = a[k],
            p = a[k + 1],
            P = a[k + 2],
            g = n,
            m = p;
          k = n.subtract(a[k - 1]);
          k.normalize(1);
          n = p.subtract(n);
          n.normalize(1);
          p = P.subtract(p);
          p.normalize(1);
          P = k.add(n);
          P.normalize(1);
          p = n.add(p);
          p.normalize(1);
          k = I.distance(g, m);
          n = 1 / (1 + (P.x * n.x + P.y * n.y) + (p.x * n.x + p.y * n.y));
          var q = k * n;
          P = new I(g.x + P.x * q, g.y + P.y * q);
          n *= -k;
          n = new I(m.x + p.x * n, m.y + p.y * n);
          f.push(g);
          f.push(P);
          f.push(n);
          f.push(m);
        }
        b = Me.build(f, b);
        b.push(a[d].clone());
        return b;
      };
      Me.smoothClosed = function (a, b) {
        null == b && (b = 4);
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++,
            k = a[h],
            n = a[(h + 1) % c],
            p = a[(h + 2) % c],
            P = k,
            g = n;
          h = k.subtract(a[(h - 1 + c) % c]);
          h.normalize(1);
          k = n.subtract(k);
          k.normalize(1);
          n = p.subtract(n);
          n.normalize(1);
          p = h.add(k);
          p.normalize(1);
          n = k.add(n);
          n.normalize(1);
          h = I.distance(P, g);
          k = 1 / (1 + (p.x * k.x + p.y * k.y) + (n.x * k.x + n.y * k.y));
          var m = h * k;
          p = new I(P.x + p.x * m, P.y + p.y * m);
          k *= -h;
          k = new I(g.x + n.x * k, g.y + n.y * k);
          d.push(P);
          d.push(p);
          d.push(k);
          d.push(g);
        }
        return Me.build(d, b);
      };
      Me.build = function (a, b) {
        null == b && (b = 4);
        var c = a.length,
          d = [],
          f = 0;
        do {
          var h = a[f++],
            k = a[f++],
            n = a[f++],
            p = a[f++];
          d.push(h.clone());
          for (var P = 1, g = b; P < g; ) {
            var m = P++;
            d.push(Me.cubic(h, k, n, p, m / b));
          }
        } while (f < c);
        return d;
      };
      Me.cubic = function (a, b, c, d, f) {
        var h = 1 - f,
          k = h * h * h;
        a = new I(a.x * k, a.y * k);
        k = 3 * h * h * f;
        a.x += b.x * k;
        a.y += b.y * k;
        k = 3 * h * f * f;
        a.x += c.x * k;
        a.y += c.y * k;
        k = f * f * f;
        a.x += d.x * k;
        a.y += d.y * k;
        return a;
      };
      var Ic = function (a, b) {
        this.vertices = new pa();
        this.edges = [];
        this.faces = [];
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          for (var f = [], h = 0; h < d.length; ) {
            var k = d[h];
            ++h;
            k = new jg(this.addVertex(k));
            this.edges.push(k);
            f.push(k);
          }
          h = new Vh(f[0]);
          this.faces.push(h);
          var n = d.length;
          d = 0;
          for (var p = n; d < p; ) {
            k = d++;
            var P = f[k];
            P.next = f[(k + 1) % n];
            P.face = h;
          }
        }
        c = 0;
        for (h = this.edges; c < h.length; )
          if (((a = h[c]), ++c, null == a.twin))
            for (f = a.origin, k = a.next.origin.edges, d = 0; d < k.length; )
              if (((n = k[d]), ++d, n.next.origin == f)) {
                a.twin = n;
                n.twin = a;
                break;
              }
        if (null != b)
          for (c = 0, h = this.faces.length; c < h; )
            ((k = c++), (this.faces[k].data = b[k]));
      };
      g['com.watabou.geom.DCEL'] = Ic;
      Ic.__name__ = 'com.watabou.geom.DCEL';
      Ic.floodFill = function (a, b) {
        var c = [];
        a = [a];
        var d = new pa();
        for (
          null == b &&
          (b = function (a) {
            return !0;
          });
          0 < a.length;

        ) {
          var f = a.pop();
          if (b(f)) {
            c.push(f);
            for (var h = f.halfEdge, k = h, n = !0; n; ) {
              var p = k;
              k = k.next;
              n = k != h;
              null != p.twin &&
                ((p = p.twin.face),
                null == d.h.__keys__[p.__id__] && Z.add(a, p));
            }
          }
          d.set(f, !0);
        }
        return c;
      };
      Ic.floodFillEx = function (a, b) {
        for (var c = [a], d = [], f = (a = a.halfEdge), h = !0; h; ) {
          var k = f;
          f = f.next;
          h = f != a;
          null != k.twin && d.push(k);
        }
        for (; 0 < d.length; )
          if (((k = d.pop()), (a = k.twin.face), -1 == c.indexOf(a) && b(k)))
            for (c.push(a), f = a = a.halfEdge, h = !0; h; )
              ((k = f),
                (f = f.next),
                (h = f != a),
                null != k.twin && d.push(k));
        return c;
      };
      Ic.split = function (a) {
        for (var b = [], c = gf.fromArray(a); !gf.isEmpty(c); ) {
          for (var d = null, f = 0; f < a.length; ) {
            var h = a[f];
            ++f;
            if (null != c.h.__keys__[h.__id__]) {
              d = h;
              break;
            }
          }
          d = Ic.floodFill(d, function (a) {
            return null != c.h.__keys__[a.__id__];
          });
          gf.removeArr(c, d);
          b.push(d);
        }
        return b;
      };
      Ic.circumference = function (a, b) {
        var c = gf.fromArray(b);
        if (null == a)
          for (var d = Infinity, f = 0; f < b.length; ) {
            var h = b[f];
            ++f;
            for (var k = (h = h.halfEdge), n = !0; n; ) {
              var p = k;
              k = k.next;
              n = k != h;
              var P = p;
              if (null == P.twin || null == c.h.__keys__[P.twin.face.__id__])
                ((p = P.origin.point.x), d > p && ((d = p), (a = P)));
            }
          }
        p = [];
        P = a;
        do
          for (
            p.push(P), P = P.next;
            null != P.twin && null != c.h.__keys__[P.twin.face.__id__];

          )
            P = P.twin.next;
        while (P != a);
        return p;
      };
      Ic.outline = function (a) {
        for (var b = gf.fromArray(a), c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          for (var h = (f = f.halfEdge), k = !0; k; ) {
            var n = h;
            h = h.next;
            k = h != f;
            (null != n.twin && null != b.h.__keys__[n.twin.face.__id__]) ||
              c.push(n);
          }
        }
        b = null;
        for (d = []; !Z.isEmpty(c); )
          ((f = Ic.circumference(c[0], a)),
            Z.removeAll(c, f),
            0 < Sa.area(Ua.toPoly(f)) ? (b = f) : d.push(f));
        d.unshift(b);
        return d;
      };
      Ic.prototype = {
        addVertex: function (a) {
          var b = this.vertices.h[a.__id__];
          if (null == b) {
            b = this.vertices;
            var c = new Zj(a);
            b.set(a, c);
            return c;
          }
          return b;
        },
        addFace: function (a) {
          for (var b = a.length, c = [], d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            f = new jg(f);
            this.edges.push(f);
            c.push(f);
          }
          a = new Vh(c[0]);
          this.faces.push(a);
          d = 0;
          for (var h = b; d < h; ) {
            var k = d++;
            f = c[k];
            f.next = c[(k + 1) % b];
            f.face = a;
          }
          d = 0;
          for (h = b; d < h; ) {
            k = d++;
            f = c[k];
            b = f.origin;
            k = 0;
            for (var n = f.next.origin.edges; k < n.length; ) {
              var p = n[k];
              ++k;
              if (p.next.origin == b) {
                f.twin = p;
                p.twin = f;
                break;
              }
            }
          }
          return a;
        },
        removeFace: function (a) {
          N.remove(this.faces, a);
          var b = a.halfEdge;
          do {
            null != b.twin && (b.twin.twin = null);
            var c = b.origin,
              d = c.edges;
            N.remove(d, b);
            N.remove(this.edges, b);
            0 == d.length && this.vertices.remove(c.point);
            b = b.next;
          } while (b != a.halfEdge);
        },
        splitFace: function (a, b, c) {
          for (var d = null, f = 0, h = b.edges; f < h.length; ) {
            var k = h[f];
            ++f;
            if (k.face == a) {
              d = k;
              break;
            }
          }
          for (f = [c]; d.origin != c; ) (f.push(d.origin), (d = d.next));
          for (h = [b]; d.origin != b; ) (h.push(d.origin), (d = d.next));
          this.removeFace(a);
          this.addFace(f);
          this.addFace(h);
          f = 0;
          for (h = b.edges; f < h.length; )
            if (((k = h[f]), ++f, k.next.origin == c)) return k;
          return null;
        },
        splitEdge: function (a, b) {
          null == b && (b = qa.lerp(a.origin.point, a.next.origin.point));
          var c = this.addVertex(b);
          b = new jg(c);
          b.face = a.face;
          b.next = a.next;
          a.next = b;
          this.edges.push(b);
          var d = a.twin;
          null != d &&
            ((c = new jg(c)),
            (c.face = d.face),
            (c.next = d.next),
            (d.next = c),
            (a.twin = c),
            (b.twin = d),
            (d.twin = b),
            (c.twin = a),
            this.edges.push(c));
          return b;
        },
        collapseEdge: function (a) {
          var b = a.origin,
            c = a.next.origin;
          b.point.setTo(
            (b.point.x + c.point.x) / 2,
            (b.point.y + c.point.y) / 2,
          );
          a.face.halfEdge == a && (a.face.halfEdge = a.next);
          a.prev().next = a.next;
          N.remove(b.edges, a);
          N.remove(this.edges, a);
          a = a.twin;
          null != a &&
            (a.face.halfEdge == a && (a.face.halfEdge = a.next),
            (a.prev().next = a.next),
            N.remove(c.edges, a),
            N.remove(this.edges, a));
          a = 0;
          for (var d = c.edges; a < d.length; ) {
            var f = d[a];
            ++a;
            b.edges.push(f);
            f.origin = b;
          }
          this.vertices.remove(c.point);
          return b;
        },
        getEdge: function (a, b) {
          var c = 0;
          for (a = a.edges; c < a.length; ) {
            var d = a[c];
            ++c;
            if (d.next.origin == b) return d;
          }
          return null;
        },
        vertices2chain: function (a) {
          for (var b = [], c = 1, d = a.length; c < d; ) {
            var f = c++;
            b.push(this.getEdge(a[f - 1], a[f]));
          }
          return b;
        },
        __class__: Ic,
      };
      var jg = function (a) {
        this.origin = a;
        a.edges.push(this);
      };
      g['com.watabou.geom.HalfEdge'] = jg;
      jg.__name__ = 'com.watabou.geom.HalfEdge';
      jg.prototype = {
        prev: function () {
          for (var a = this; a.next != this; ) a = a.next;
          return a;
        },
        __class__: jg,
      };
      var Zj = function (a) {
        this.edges = [];
        this.point = a;
      };
      g['com.watabou.geom.Vertex'] = Zj;
      Zj.__name__ = 'com.watabou.geom.Vertex';
      Zj.prototype = { __class__: Zj };
      var Vh = function (a) {
        this.halfEdge = a;
      };
      g['com.watabou.geom.Face'] = Vh;
      Vh.__name__ = 'com.watabou.geom.Face';
      Vh.prototype = {
        getNeighbours: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            null != f.twin && a.push(f.twin.face);
          }
          return a;
        },
        getPoly: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            a.push(f.origin.point);
          }
          return a;
        },
        __class__: Vh,
      };
      var Qb = function (a) {
        this.points = a;
        a = a.length;
        var b = 2 * a - 5,
          c = 3 * b,
          d = null,
          f = null,
          h = null,
          k = null,
          n = null;
        this.triangles = c =
          null != c
            ? new Uint32Array(c)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == n
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, n)
                    : null;
        c = 3 * b;
        n = k = h = f = d = null;
        this.halfedges = c =
          null != c
            ? new Int32Array(c)
            : null != d
              ? new Int32Array(d)
              : null != f
                ? new Int32Array(f.__array)
                : null != h
                  ? new Int32Array(h)
                  : null != k
                    ? null == n
                      ? new Int32Array(k, 0)
                      : new Int32Array(k, 0, n)
                    : null;
        this.hashSize = Math.ceil(Math.sqrt(a));
        n = k = h = f = d = null;
        this.hullPrev = c =
          null != a
            ? new Uint32Array(a)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == n
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, n)
                    : null;
        n = k = h = f = d = null;
        this.hullNext = c =
          null != a
            ? new Uint32Array(a)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == n
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, n)
                    : null;
        n = k = h = f = d = null;
        this.hullTri = c =
          null != a
            ? new Uint32Array(a)
            : null != d
              ? new Uint32Array(d)
              : null != f
                ? new Uint32Array(f.__array)
                : null != h
                  ? new Uint32Array(h)
                  : null != k
                    ? null == n
                      ? new Uint32Array(k, 0)
                      : new Uint32Array(k, 0, n)
                    : null;
        c = this.hashSize;
        n = k = h = f = d = null;
        this.hullHash = c =
          null != c
            ? new Int32Array(c)
            : null != d
              ? new Int32Array(d)
              : null != f
                ? new Int32Array(f.__array)
                : null != h
                  ? new Int32Array(h)
                  : null != k
                    ? null == n
                      ? new Int32Array(k, 0)
                      : new Int32Array(k, 0, n)
                    : null;
        this.update();
      };
      g['com.watabou.geom.Delaunator'] = Qb;
      Qb.__name__ = 'com.watabou.geom.Delaunator';
      Qb.pseudoAngle = function (a, b) {
        a /= Math.abs(a) + Math.abs(b);
        return (0 < b ? 3 - a : 1 + a) / 4;
      };
      Qb.dist = function (a, b, c, d) {
        a -= c;
        b -= d;
        return a * a + b * b;
      };
      Qb.orientIfSure = function (a, b, c, d, f, h) {
        d = (d - b) * (f - a);
        a = (c - a) * (h - b);
        return Math.abs(d - a) >= 3.3306690738754716e-16 * Math.abs(d + a)
          ? d - a
          : 0;
      };
      Qb.orient = function (a, b, c, d, f, h) {
        var k = Qb.orientIfSure(a, b, c, d, f, h);
        if (0 != k) return 0 > k;
        k = Qb.orientIfSure(c, d, f, h, a, b);
        if (0 != k) return 0 > k;
        k = Qb.orientIfSure(f, h, a, b, c, d);
        return 0 != k ? 0 > k : !1;
      };
      Qb.inCircle = function (a, b, c, d, f, h, k, n) {
        a -= k;
        b -= n;
        c -= k;
        d -= n;
        f -= k;
        h -= n;
        n = c * c + d * d;
        k = f * f + h * h;
        return (
          0 >
          a * (d * k - n * h) -
            b * (c * k - n * f) +
            (a * a + b * b) * (c * h - d * f)
        );
      };
      Qb.circumradius2 = function (a, b, c, d, f, h) {
        c -= a;
        d -= b;
        a = f - a;
        var k = h - b;
        b = c * c + d * d;
        h = a * a + k * k;
        f = 0.5 / (c * k - d * a);
        d = (k * b - d * h) * f;
        c = (c * h - a * b) * f;
        return d * d + c * c;
      };
      Qb.circumcenter = function (a, b, c, d, f, h) {
        c -= a;
        d -= b;
        f -= a;
        h -= b;
        var k = c * c + d * d,
          n = f * f + h * h,
          p = 0.5 / (c * h - d * f);
        return new I(a + (h * k - d * n) * p, b + (c * n - f * k) * p);
      };
      Qb.triCircumcenter = function (a, b, c) {
        var d = a.x * a.x + a.y * a.y,
          f = b.x * b.x + b.y * b.y,
          h = c.x * c.x + c.y * c.y,
          k = 2 * (a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y));
        return new I(
          (1 / k) * (d * (b.y - c.y) + f * (c.y - a.y) + h * (a.y - b.y)),
          (1 / k) * (d * (c.x - b.x) + f * (a.x - c.x) + h * (b.x - a.x)),
        );
      };
      Qb.prototype = {
        update: function () {
          for (
            var a = Infinity,
              b = Infinity,
              c = -Infinity,
              d = -Infinity,
              f = 0,
              h = this.points;
            f < h.length;

          ) {
            var k = h[f];
            ++f;
            k.x < a && (a = k.x);
            k.y < b && (b = k.y);
            k.x > c && (c = k.x);
            k.y > d && (d = k.y);
          }
          c = (a + c) / 2;
          var n = (b + d) / 2;
          a = d = b = null;
          var p = Infinity;
          f = 0;
          for (h = this.points; f < h.length; ) {
            k = h[f];
            ++f;
            var P = Qb.dist(k.x, k.y, c, n);
            p > P && ((p = P), (b = k));
          }
          p = Infinity;
          f = 0;
          for (h = this.points; f < h.length; )
            ((k = h[f]),
              ++f,
              k != b &&
                ((P = Qb.dist(k.x, k.y, b.x, b.y)),
                p > P && ((p = P), (d = k))));
          c = Infinity;
          f = 0;
          for (h = this.points; f < h.length; )
            ((k = h[f]),
              ++f,
              k != b &&
                k != d &&
                ((n = Qb.circumradius2(b.x, b.y, d.x, d.y, k.x, k.y)),
                c > n && ((c = n), (a = k))));
          if (Qb.orient(b.x, b.y, d.x, d.y, a.x, a.y)) {
            var g = d;
            d = a;
            a = g;
          }
          this.center = Qb.circumcenter(b.x, b.y, d.x, d.y, a.x, a.y);
          f = [];
          h = 0;
          for (P = this.points.length; h < P; ) ((c = h++), f.push(c));
          n = f;
          f = [];
          h = 0;
          for (P = this.points; h < P.length; )
            ((k = P[h]), ++h, f.push(I.distance(k, this.center)));
          var m = f;
          n.sort(function (a, b) {
            a = m[a] - m[b];
            return 0 == a ? 0 : 0 > a ? -1 : 1;
          });
          f = [];
          h = 0;
          for (P = this.points.length; h < P; )
            ((c = h++), f.push(this.points[n[c]]));
          this.points = f;
          k = this.points.indexOf(b);
          p = this.points.indexOf(d);
          P = this.points.indexOf(a);
          this.hullStart = k;
          n = this.hullPrev[P] = p;
          this.hullNext[k] = n;
          n = this.hullPrev[k] = P;
          this.hullNext[p] = n;
          n = this.hullPrev[p] = k;
          this.hullNext[P] = n;
          this.hullTri[k] = 0;
          this.hullTri[p] = 1;
          this.hullTri[P] = 2;
          f = 0;
          for (h = this.hashSize; f < h; ) ((c = f++), (this.hullHash[c] = -1));
          this.hullHash[this.hashKey(b)] = k;
          this.hullHash[this.hashKey(d)] = p;
          this.hullHash[this.hashKey(a)] = P;
          this.trianglesLen = 0;
          this.addTriangle(k, p, P, -1, -1, -1);
          f = 0;
          for (h = this.points; f < h.length; )
            if (
              ((k = h[f]),
              ++f,
              k != b &&
                k != d &&
                k != a &&
                ((n = k.x),
                (p = k.y),
                !(
                  Math.abs(n - Infinity) <= Qb.EPSILON &&
                  Math.abs(p - -Infinity) <= Qb.EPSILON
                )))
            ) {
              c = this.points.indexOf(k);
              var q = -1;
              k = this.hashKey(k);
              P = 0;
              for (
                g = this.hashSize;
                P < g &&
                ((q = P++),
                (q = this.hullHash[(k + q) % this.hashSize]),
                -1 == q || q == this.hullNext[q]);

              );
              var u = this.hullPrev[q];
              P = u;
              for (
                q = this.hullNext[P];
                !Qb.orient(
                  n,
                  p,
                  this.points[P].x,
                  this.points[P].y,
                  this.points[q].x,
                  this.points[q].y,
                );

              ) {
                P = q;
                if (P == u) {
                  P = -1;
                  break;
                }
                q = this.hullNext[P];
              }
              if (-1 != P) {
                g = this.addTriangle(
                  P,
                  c,
                  this.hullNext[P],
                  -1,
                  -1,
                  this.hullTri[P],
                );
                this.hullTri[c] = this.legalize(g + 2);
                this.hullTri[P] = g;
                q = this.hullNext[P];
                for (
                  var r = this.hullNext[q];
                  Qb.orient(
                    n,
                    p,
                    this.points[q].x,
                    this.points[q].y,
                    this.points[r].x,
                    this.points[r].y,
                  );

                )
                  ((g = this.addTriangle(
                    q,
                    c,
                    r,
                    this.hullTri[c],
                    -1,
                    this.hullTri[q],
                  )),
                    (this.hullTri[c] = this.legalize(g + 2)),
                    (this.hullNext[q] = q),
                    (q = r),
                    (r = this.hullNext[q]));
                if (P == u)
                  for (
                    u = this.hullPrev[P];
                    Qb.orient(
                      n,
                      p,
                      this.points[u].x,
                      this.points[u].y,
                      this.points[P].x,
                      this.points[P].y,
                    );

                  )
                    ((g = this.addTriangle(
                      u,
                      c,
                      P,
                      -1,
                      this.hullTri[P],
                      this.hullTri[u],
                    )),
                      this.legalize(g + 2),
                      (this.hullTri[u] = g),
                      (this.hullNext[P] = P),
                      (P = u),
                      (u = this.hullPrev[P]));
                this.hullStart = this.hullPrev[c] = P;
                n = this.hullPrev[q] = c;
                this.hullNext[P] = n;
                this.hullNext[c] = q;
                this.hullHash[k] = c;
                this.hullHash[this.hashKey(this.points[P])] = P;
              }
            }
          this.triangles = this.triangles.subarray(0, this.trianglesLen);
          this.halfedges = this.halfedges.subarray(0, this.trianglesLen);
        },
        hashKey: function (a) {
          return (
            Math.floor(
              Qb.pseudoAngle(a.x - this.center.x, a.y - this.center.y) *
                this.hashSize,
            ) % this.hashSize
          );
        },
        legalize: function (a) {
          for (var b = 0, c; ; ) {
            var d = this.halfedges[a],
              f = a - (a % 3);
            c = f + ((a + 2) % 3);
            if (-1 == d) {
              if (0 == b) break;
              a = Qb.EDGE_STACK[--b];
            } else {
              var h = d - (d % 3),
                k = h + ((d + 2) % 3),
                n = this.triangles[c],
                p = this.triangles[a];
              f = this.triangles[f + ((a + 1) % 3)];
              var P = this.triangles[k];
              if (
                Qb.inCircle(
                  this.points[n].x,
                  this.points[n].y,
                  this.points[p].x,
                  this.points[p].y,
                  this.points[f].x,
                  this.points[f].y,
                  this.points[P].x,
                  this.points[P].y,
                )
              ) {
                this.triangles[a] = P;
                this.triangles[d] = n;
                n = this.halfedges[k];
                if (-1 == n) {
                  p = this.hullStart;
                  do {
                    if (this.hullTri[p] == k) {
                      this.hullTri[p] = a;
                      break;
                    }
                    p = this.hullPrev[p];
                  } while (p != this.hullStart);
                }
                this.link(a, n);
                this.link(d, this.halfedges[c]);
                this.link(c, k);
                c = h + ((d + 1) % 3);
                b < Qb.EDGE_STACK.length && (Qb.EDGE_STACK[b++] = c);
              } else {
                if (0 == b) break;
                a = Qb.EDGE_STACK[--b];
              }
            }
          }
          return c;
        },
        addTriangle: function (a, b, c, d, f, h) {
          var k = this.trianglesLen;
          this.triangles[k] = a;
          this.triangles[k + 1] = b;
          this.triangles[k + 2] = c;
          this.link(k, d);
          this.link(k + 1, f);
          this.link(k + 2, h);
          this.trianglesLen += 3;
          return k;
        },
        link: function (a, b) {
          this.halfedges[a] = b;
          -1 != b && (this.halfedges[b] = a);
        },
        getVoronoi: function () {
          for (
            var a = new pa(),
              b = this.triangles.length,
              c = [],
              d = 0,
              f = (b / 3) | 0;
            d < f;

          )
            (d++, c.push(null));
          var h = c;
          c = [];
          d = 0;
          for (f = this.points.length; d < f; ) (d++, c.push(!1));
          var k = c;
          c = 0;
          for (d = b; c < d; ) {
            var n = c++;
            b = this.triangles[2 == n % 3 ? n - 2 : n + 1];
            if (!k[b]) {
              k[b] = !0;
              f = [];
              var p = 0;
              for (n = this.edgesAroundPoint(n); p < n.length; ) {
                var P = n[p];
                ++p;
                P = (P / 3) | 0;
                var g = h[P];
                null == g && (g = h[P] = this.triangleCenter(P));
                f.push(g);
              }
              a.set(this.points[b], f);
            }
          }
          return a;
        },
        triangleCenter: function (a) {
          return Qb.triCircumcenter(
            this.points[this.triangles[3 * a]],
            this.points[this.triangles[3 * a + 1]],
            this.points[this.triangles[3 * a + 2]],
          );
        },
        edgesAroundPoint: function (a) {
          var b = [],
            c = a;
          do (b.push(c), (c = this.halfedges[2 == c % 3 ? c - 2 : c + 1]));
          while (-1 != c && c != a);
          return b;
        },
        __class__: Qb,
      };
      var Ua = function () {};
      g['com.watabou.geom.EdgeChain'] = Ua;
      Ua.__name__ = 'com.watabou.geom.EdgeChain';
      Ua.toPoly = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(d.origin.point);
        }
        return b;
      };
      Ua.toPolyline = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(d.origin.point);
        }
        b.push(a[a.length - 1].next.origin.point);
        return b;
      };
      Ua.assignData = function (a, b, c) {
        null == c && (c = !0);
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          if (c || null == f.data) f.data = b;
          null == f.twin || (!c && null != f.twin.data) || (f.twin.data = b);
        }
      };
      Ua.vertices = function (a, b) {
        null == b && (b = !1);
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          c.push(f.origin);
        }
        b && c.push(a[a.length - 1].next.origin);
        return c;
      };
      Ua.edgeByOrigin = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (d.origin == b) return d;
        }
        return null;
      };
      Ua.indexByOrigin = function (a, b) {
        for (var c = 0, d = a.length; c < d; ) {
          var f = c++;
          if (a[f].origin == b) return f;
        }
        return -1;
      };
      Ua.prev = function (a, b) {
        b = a.indexOf(b);
        return 0 < b ? a[b - 1] : a[a.length - 1];
      };
      var qa = function () {};
      g['com.watabou.geom.GeomUtils'] = qa;
      qa.__name__ = 'com.watabou.geom.GeomUtils';
      qa.intersectLines = function (a, b, c, d, f, h, k, n) {
        var p = c * n - d * k;
        if (0 == p) return null;
        p = (d * (f - a) - c * (h - b)) / p;
        return new I(
          Math.abs(c) > Math.abs(d) ? (f - a + k * p) / c : (h - b + n * p) / d,
          p,
        );
      };
      qa.lerp = function (a, b, c) {
        null == c && (c = 0.5);
        var d = a.x,
          f = c;
        null == f && (f = 0.5);
        var h = a.y;
        a = c;
        null == a && (a = 0.5);
        return new I(d + (b.x - d) * f, h + (b.y - h) * a);
      };
      qa.converge = function (a, b, c, d) {
        var f = b.x - a.x,
          h = b.y - a.y;
        a = b.x * a.y - b.y * a.x;
        return 1e-9 > Math.abs(f * c.y - h * c.x - a)
          ? 1e-9 > Math.abs(f * d.y - h * d.x - a)
          : !1;
      };
      qa.barycentric = function (a, b, c, d) {
        var f = a.subtract(d),
          h = b.subtract(d);
        d = c.subtract(d);
        a = (a.x - b.x) * (a.y - c.y) - (a.y - b.y) * (a.x - c.x);
        return new bh(
          (h.x * d.y - h.y * d.x) / a,
          (d.x * f.y - d.y * f.x) / a,
          (f.x * h.y - f.y * h.x) / a,
        );
      };
      qa.triArea = function (a, b, c) {
        return 0.5 * ((a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y));
      };
      var ak = function () {
        this.nodes = [];
      };
      g['com.watabou.geom.Graph'] = ak;
      ak.__name__ = 'com.watabou.geom.Graph';
      ak.prototype = {
        add: function (a) {
          this.nodes.push(a);
          return a;
        },
        aStar: function (a, b, c) {
          c = null != c ? c.slice() : [];
          var d = [a],
            f = new pa(),
            h = new pa();
          for (h.set(a, 0); 0 < d.length; ) {
            a = d.shift();
            if (a == b) return this.buildPath(f, a);
            N.remove(d, a);
            c.push(a);
            var k = h.h[a.__id__],
              n = a.links,
              p = n;
            for (n = n.keys(); n.hasNext(); ) {
              var P = n.next(),
                g = p.get(P);
              if (-1 == c.indexOf(P)) {
                g = k + g;
                if (-1 == d.indexOf(P)) d.push(P);
                else if (g >= h.h[P.__id__]) continue;
                f.set(P, a);
                h.set(P, g);
              }
            }
          }
          return null;
        },
        buildPath: function (a, b) {
          for (var c = [b]; null != a.h.__keys__[b.__id__]; )
            ((b = a.h[b.__id__]), c.push(b));
          return c;
        },
        __class__: ak,
      };
      var bk = function (a) {
        this.links = new pa();
        this.data = a;
      };
      g['com.watabou.geom.Node'] = bk;
      bk.__name__ = 'com.watabou.geom.Node';
      bk.prototype = {
        link: function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = 1);
          this.links.set(a, b);
          c && a.links.set(this, b);
        },
        unlink: function (a, b) {
          null == b && (b = !0);
          this.links.remove(a);
          b && a.links.remove(this);
        },
        unlinkAll: function () {
          for (var a = this.links.keys(); a.hasNext(); ) {
            var b = a.next();
            this.unlink(b);
          }
        },
        __class__: bk,
      };
      var ck = function (a, b, c, d) {
        null == d && (d = 0);
        this.width = a;
        this.height = b;
        this.dist = c;
        this.dist2 = c * c;
        this.cellSize = c / Math.sqrt(2);
        this.gridWidth = Math.ceil(this.width / this.cellSize);
        this.gridHeight = Math.ceil(this.height / this.cellSize);
        c = [];
        for (var f = 0, h = this.gridWidth * this.gridHeight; f < h; )
          (f++, c.push(null));
        this.grid = c;
        this.points = [];
        this.queue = [];
        for (
          this.emit(
            new I(
              a * ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
              b * ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
            ),
          );
          this.step();

        );
        0 < d && this.uneven(d);
      };
      g['com.watabou.geom.PoissonPattern'] = ck;
      ck.__name__ = 'com.watabou.geom.PoissonPattern';
      ck.prototype = {
        emit: function (a) {
          this.points.push(a);
          this.queue.push(a);
          this.grid[
            Math.floor(a.y / this.cellSize) * this.gridWidth +
              Math.floor(a.x / this.cellSize)
          ] = a;
        },
        step: function () {
          if (0 == this.queue.length) return !1;
          for (var a = Z.random(this.queue), b = !1, c = 0; 50 > c; ) {
            c++;
            var d = I.polar(
              this.dist *
                (1 +
                  0.1 *
                    ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                      2147483647)),
              6.28318530718 *
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
            );
            d.x += a.x;
            d.y += a.y;
            this.warp(d);
            this.validate(d) && ((b = !0), this.emit(d));
          }
          b || N.remove(this.queue, a);
          return 0 < this.queue.length;
        },
        warp: function (a) {
          0 > a.x
            ? (a.x += this.width)
            : a.x >= this.width && (a.x -= this.width);
          0 > a.y
            ? (a.y += this.height)
            : a.y >= this.height && (a.y -= this.height);
        },
        validate: function (a) {
          var b = a.x;
          a = a.y;
          for (
            var c = Math.floor(b / this.cellSize),
              d = Math.floor(a / this.cellSize),
              f = c - 2,
              h = c + 2 + 1,
              k = d - 2,
              n = d + 2 + 1;
            k < n;

          ) {
            d = k++;
            d = ((d + this.gridHeight) % this.gridHeight) * this.gridWidth;
            for (var p = f, P = h; p < P; ) {
              c = p++;
              var g = this.grid[d + ((c + this.gridWidth) % this.gridWidth)];
              if (
                null != g &&
                ((c = Math.abs(g.x - b)),
                (g = Math.abs(g.y - a)),
                c > this.width - c && (c = this.width - c),
                g > this.height - g && (g = this.height - g),
                c * c + g * g < this.dist2)
              )
                return !1;
            }
          }
          return !0;
        },
        uneven: function (a) {
          if (0 != a)
            for (var b = 0, c = this.points; b < c.length; ) {
              var d = c[b];
              ++b;
              var f = I.polar(
                this.dist *
                  a *
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
                6.28318530718 *
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
              );
              d.x += f.x;
              d.y += f.y;
              this.warp(d);
            }
        },
        fill: function (a) {
          var b = a.getBounds(),
            c = Math.floor(b.get_left() / this.width),
            d = Math.floor(b.get_top() / this.height),
            f = Math.ceil(b.get_right() / this.width);
          b = Math.ceil(b.get_bottom() / this.height);
          for (var h = []; d < b; )
            for (var k = d++, n = c, p = f; n < p; )
              for (
                var P = n++,
                  g = a.validateRect(
                    P * this.width,
                    k * this.height,
                    this.width,
                    this.height,
                  ),
                  m = 0,
                  q = this.points;
                m < q.length;

              ) {
                var u = q[m];
                ++m;
                if (0 != k || 0 != P)
                  u = new I(u.x + P * this.width, u.y + k * this.height);
                (g || a.validate(u)) && h.push(u);
              }
          return h;
        },
        __class__: ck,
      };
      var Wh = function () {};
      g['com.watabou.geom.IFillableShape'] = Wh;
      Wh.__name__ = 'com.watabou.geom.IFillableShape';
      Wh.__isInterface__ = !0;
      Wh.prototype = { __class__: Wh };
      var Xh = function (a) {
        this.poly = a;
        this.rect = Gb.rect(a);
      };
      g['com.watabou.geom.FillablePoly'] = Xh;
      Xh.__name__ = 'com.watabou.geom.FillablePoly';
      Xh.__interfaces__ = [Wh];
      Xh.prototype = {
        getBounds: function () {
          return this.rect;
        },
        validate: function (a) {
          return Gb.containsPoint(this.poly, a);
        },
        validateRect: function (a, b, c, d) {
          return !1;
        },
        __class__: Xh,
      };
      var hf = function (a, b) {
        this.start = a;
        this.end = b;
      };
      g['com.watabou.geom.Segment'] = hf;
      hf.__name__ = 'com.watabou.geom.Segment';
      hf.prototype = { __class__: hf };
      var jf = function (a, b) {
        null == b && (b = !1);
        this.height = 0;
        this.poly = a;
        for (var c = a.length, d = [], f = 0, h = c; f < h; ) {
          var k = f++;
          d.push(new dk(a[k], a[(k + 1) % c]));
        }
        this.segments = d;
        this.leaves = new pa();
        d = [];
        f = 0;
        for (h = c; f < h; ) {
          k = f++;
          var n = new Yh(a[k]);
          this.leaves.set(a[k], n);
          d.push(new ch(n, this.segments[k], this.segments[(k + c - 1) % c]));
        }
        this.ribs = d;
        this.bones = [];
        b && this.run();
      };
      g['com.watabou.geom.SkeletonBuilder'] = jf;
      jf.__name__ = 'com.watabou.geom.SkeletonBuilder';
      jf.intersect = function (a, b) {
        return qa.intersectLines(
          a.a.point.x,
          a.a.point.y,
          a.slope.x,
          a.slope.y,
          b.a.point.x,
          b.a.point.y,
          b.slope.x,
          b.slope.y,
        );
      };
      jf.prototype = {
        run: function () {
          for (; this.step(); );
        },
        step: function () {
          if (2 >= this.ribs.length)
            return (
              2 == this.ribs.length &&
                ((this.root = this.ribs[0]),
                (this.root.b = this.ribs[1].a),
                (this.root.b.parent = this.root),
                this.bones.push(this.root),
                (this.ribs = [])),
              !1
            );
          for (
            var a = Infinity,
              b = null,
              c = null,
              d = null,
              f = 0,
              h = this.ribs;
            f < h.length;

          ) {
            var k = h[f];
            ++f;
            var n = Infinity,
              p = null,
              P = null,
              g = k.right.lRib,
              m = jf.intersect(k, g);
            if (null != m && 0 <= m.x && 0 <= m.y) {
              var q = m.x + k.a.height;
              n > q && ((n = q), (P = m), (p = g));
            }
            m = k.left.rRib;
            g = jf.intersect(k, m);
            null != g &&
              0 <= g.x &&
              0 <= g.y &&
              n > g.x + k.a.height &&
              ((P = g), (p = m));
            null != P &&
              ((n = P.y + p.a.height),
              a > n && ((a = n), (b = k), (c = p), (d = P)));
          }
          return null != d
            ? ((this.height = a),
              (a = b.a.point),
              (f = b.slope),
              (m = d.x),
              (d = new I(a.x + f.x * m, a.y + f.y * m)),
              this.merge(b, c, d),
              !0)
            : !1;
        },
        merge: function (a, b, c) {
          c = new Yh(c, this.height, a, b);
          c =
            a.right == b.left
              ? new ch(c, a.left, b.right)
              : new ch(c, b.left, a.right);
          this.ribs.push(c);
          this.bones.push(a);
          N.remove(this.ribs, a);
          this.bones.push(b);
          N.remove(this.ribs, b);
          return c;
        },
        addGables: function () {
          this.gables = [];
          for (var a = 0, b = this.segments; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = this.leaves.h[c.p0.__id__].parent,
              f = this.leaves.h[c.p1.__id__].parent;
            if (d.b == f.b) {
              var h = d.b,
                k = h.point;
              d = (
                d == this.root
                  ? f == h.child1
                    ? h.child2
                    : f == h.child2
                      ? h.child1
                      : null
                  : f == this.root
                    ? d == h.child1
                      ? h.child2
                      : d == h.child2
                        ? h.child1
                        : null
                    : h.parent
              ).slope;
              h = qa.intersectLines(
                c.p0.x,
                c.p0.y,
                c.dir.x,
                c.dir.y,
                k.x,
                k.y,
                d.x,
                d.y,
              );
              null != h &&
                0 < h.x &&
                h.x < c.len &&
                ((d = c.p0),
                (f = c.dir),
                (h = h.x),
                (d = new I(d.x + f.x * h, d.y + f.y * h)),
                wd.set(k, d),
                this.gables.push(c));
            }
          }
        },
        getPath: function (a, b) {
          if (a == b) return [a];
          a = this.getPath2Root(a);
          b = this.getPath2Root(b);
          if (a[a.length - 1] == b[b.length - 1]) {
            for (; a[a.length - 1] == b[b.length - 1]; ) (a.pop(), b.pop());
            a.push(a[a.length - 1].parent.b);
          }
          return a.concat(Z.revert(b));
        },
        getPath2Root: function (a) {
          for (var b = [a]; this.root.a != a && this.root.b != a; )
            ((a = a.parent.b), b.push(a));
          return b;
        },
        __class__: jf,
      };
      var ch = function (a, b, c) {
        this.a = a;
        this.a.parent = this;
        this.left = b;
        this.right = c;
        b.lRib = this;
        c.rRib = this;
        a = c.dir;
        b = b.dir;
        c = a.x * b.x + a.y * b.y;
        0.99999 < c
          ? (this.slope = new I(-a.y, a.x))
          : ((c = Math.sqrt((1 + c) / 2)),
            (this.slope = b.subtract(a)),
            this.slope.normalize(1 / c),
            null == this.a.child1 &&
              0 > a.x * b.y - a.y * b.x &&
              ((a = this.slope), (a.x *= -1), (a.y *= -1)));
      };
      g['com.watabou.geom.Rib'] = ch;
      ch.__name__ = 'com.watabou.geom.Rib';
      ch.prototype = { __class__: ch };
      var Yh = function (a, b, c, d) {
        null == b && (b = 0);
        this.point = a;
        this.height = b;
        this.child1 = c;
        this.child2 = d;
        null != this.child1 && ((this.child1.b = this), (this.child2.b = this));
      };
      g['com.watabou.geom._SkeletonBuilder.Node'] = Yh;
      Yh.__name__ = 'com.watabou.geom._SkeletonBuilder.Node';
      Yh.prototype = { __class__: Yh };
      var dk = function (a, b) {
        this.p0 = a;
        this.p1 = b;
        this.dir = b.subtract(a);
        this.len = this.dir.get_length();
        a = this.dir;
        b = 1 / this.len;
        a.x *= b;
        a.y *= b;
      };
      g['com.watabou.geom._SkeletonBuilder.Segment'] = dk;
      dk.__name__ = 'com.watabou.geom._SkeletonBuilder.Segment';
      dk.prototype = { __class__: dk };
      var xe = function () {};
      g['com.watabou.geom.Triangulation'] = xe;
      xe.__name__ = 'com.watabou.geom.Triangulation';
      xe.earcut = function (a) {
        var b = [];
        xe.earcutLinked(xe.linkedList(a, 0, a.length), b);
        return b;
      };
      xe.linkedList = function (a, b, c) {
        for (var d = null; b < c; ) {
          var f = b++;
          d = new ek(f, a[f], d);
        }
        return d;
      };
      xe.earcutLinked = function (a, b) {
        if (null != a)
          for (var c = a; a.prev != a.next; ) {
            var d = a.prev,
              f = a.next;
            if (xe.isEar(a))
              (b.push([d.i, a.i, f.i]), a.remove(), (c = a = f.next));
            else if (((a = f), a == c)) break;
          }
      };
      xe.isEar = function (a) {
        var b = a.prev,
          c = a.next,
          d = b.p,
          f = a.p,
          h = c.p;
        if (0 <= (f.y - d.y) * (h.x - f.x) - (f.x - d.x) * (h.y - f.y))
          return !1;
        for (var k = a.next.next; k != a.prev; ) {
          xe.pointInTriangle(b.p, a.p, c.p, k.p)
            ? ((d = k.prev.p),
              (f = k.p),
              (h = k.next.p),
              (d = 0 <= (f.y - d.y) * (h.x - f.x) - (f.x - d.x) * (h.y - f.y)))
            : (d = !1);
          if (d) return !1;
          k = k.next;
        }
        return !0;
      };
      xe.pointInTriangle = function (a, b, c, d) {
        var f = a.x;
        a = a.y;
        var h = b.x;
        b = b.y;
        var k = c.x;
        c = c.y;
        var n = d.x;
        d = d.y;
        return 0 <= (k - n) * (a - d) - (f - n) * (c - d) &&
          0 <= (f - n) * (b - d) - (h - n) * (a - d)
          ? 0 <= (h - n) * (c - d) - (k - n) * (b - d)
          : !1;
      };
      var ek = function (a, b, c) {
        this.i = a;
        this.p = b;
        null == c
          ? ((this.prev = this), (this.next = this))
          : ((this.next = c.next),
            (this.prev = c),
            (c.next.prev = this),
            (c.next = this));
      };
      g['com.watabou.geom._Triangulation.Node'] = ek;
      ek.__name__ = 'com.watabou.geom._Triangulation.Node';
      ek.prototype = {
        remove: function () {
          this.next.prev = this.prev;
          this.prev.next = this.next;
        },
        __class__: ek,
      };
      var kf = function () {};
      g['com.watabou.geom.polygons.PolyAccess'] = kf;
      kf.__name__ = 'com.watabou.geom.polygons.PolyAccess';
      kf.longest = function (a) {
        for (var b = -1, c = 0, d = 0, f = a.length; d < f; ) {
          var h = d++,
            k = I.distance(a[h], a[(h + 1) % a.length]);
          c < k && ((c = k), (b = h));
        }
        return b;
      };
      kf.isConvexVertexi = function (a, b) {
        var c = a.length,
          d = a[(b + c - 1) % c],
          f = a[b];
        a = a[(b + 1) % c];
        return 0 < (f.x - d.x) * (a.y - f.y) - (f.y - d.y) * (a.x - f.x);
      };
      kf.forEdge = function (a, b) {
        for (var c = a.length, d = 0; d < c; ) {
          var f = d++;
          b(a[f], a[(f + 1) % c]);
        }
      };
      var ye = function () {};
      g['com.watabou.geom.polygons.PolyBool'] = ye;
      ye.__name__ = 'com.watabou.geom.polygons.PolyBool';
      ye.augmentPolygons = function (a, b) {
        for (var c = a.length, d = b.length, f = [], h = 0, k = c; h < k; ) {
          var n = h++;
          f.push([]);
        }
        var p = f;
        f = [];
        h = 0;
        for (k = d; h < k; ) {
          var P = h++;
          f.push([]);
        }
        var g = f;
        f = 0;
        for (h = c; f < h; ) {
          n = f++;
          var m = a[n],
            q = a[(n + 1) % c],
            u = m.x,
            r = m.y,
            l = q.x - u,
            D = q.y - r;
          k = 0;
          for (var x = d; k < x; ) {
            P = k++;
            var w = b[P],
              z = b[(P + 1) % d],
              J = w.x;
            w = w.y;
            z = qa.intersectLines(u, r, l, D, J, w, z.x - J, z.y - w);
            null != z &&
              0 <= z.x &&
              1 >= z.x &&
              0 <= z.y &&
              1 >= z.y &&
              ((z = { a: z.x, b: z.y, p: qa.lerp(m, q, z.x) }),
              p[n].push(z),
              g[P].push(z));
          }
        }
        P = [];
        f = 0;
        for (h = c; f < h; )
          if (((n = f++), P.push(a[n]), (n = p[n]), 0 < n.length))
            for (
              n.sort(function (a, b) {
                a = a.a - b.a;
                return 0 == a ? 0 : 0 > a ? -1 : 1;
              }),
                k = 0;
              k < n.length;

            )
              ((z = n[k]), ++k, P.push(z.p));
        a = [];
        f = 0;
        for (h = d; f < h; )
          if (((n = f++), a.push(b[n]), (d = g[n]), 0 < d.length))
            for (
              d.sort(function (a, b) {
                a = a.b - b.b;
                return 0 == a ? 0 : 0 > a ? -1 : 1;
              }),
                k = 0;
              k < d.length;

            )
              ((z = d[k]), ++k, a.push(z.p));
        return [P, a];
      };
      ye.and = function (a, b, c) {
        null == c && (c = !1);
        var d = ye.augmentPolygons(a, b),
          f = d[0],
          h = d[1];
        if (f.length == a.length)
          return Gb.containsPoint(a, b[0])
            ? c
              ? a
              : b
            : Gb.containsPoint(b, a[0], c)
              ? c
                ? null
                : a
              : c
                ? a
                : null;
        d = f;
        for (
          var k = h, n = [], p = -1, g = null, q = 0, m = f.length;
          q < m;

        ) {
          var u = q++;
          g = f[u];
          if (-1 == a.indexOf(f[u])) {
            p = u;
            break;
          }
        }
        a = qa.lerp(g, f[(p + 1) % f.length]);
        Gb.containsPoint(b, a, c) || ((d = h), (k = f), (p = h.indexOf(g)));
        for (;;) {
          n.push(d[p]);
          b = (p + 1) % d.length;
          c = d[b];
          if (c == n[0]) return n;
          c = k.indexOf(c);
          -1 != c ? ((p = c), (b = d), (d = k), (k = b)) : (p = b);
        }
      };
      var Gb = function () {};
      g['com.watabou.geom.polygons.PolyBounds'] = Gb;
      Gb.__name__ = 'com.watabou.geom.polygons.PolyBounds';
      Gb.rect = function (a) {
        for (
          var b = Infinity, c = Infinity, d = -Infinity, f = -Infinity, h = 0;
          h < a.length;

        ) {
          var k = a[h];
          ++h;
          var n = k.x;
          k = k.y;
          n < b && (b = n);
          k < c && (c = k);
          n > d && (d = n);
          k > f && (f = k);
        }
        return new na(b, c, d - b, f - c);
      };
      Gb.aabb = function (a) {
        for (
          var b = Infinity, c = Infinity, d = -Infinity, f = -Infinity, h = 0;
          h < a.length;

        ) {
          var k = a[h];
          ++h;
          var n = k.x;
          k = k.y;
          n < b && (b = n);
          k < c && (c = k);
          n > d && (d = n);
          k > f && (f = k);
        }
        return [new I(b, c), new I(d, c), new I(d, f), new I(b, f)];
      };
      Gb.obb = function (a) {
        a = Gb.convexHull(a);
        for (
          var b = Infinity, c = null, d = null, f = a.length, h = 0;
          h < f;

        ) {
          var k = h++,
            n = a[k];
          k = a[(k + 1) % f];
          if (n.x != k.x || n.y != k.y) {
            n = k.subtract(n);
            n.normalize(1);
            for (
              var p = n.x,
                g = -n.y,
                q = (k = Infinity),
                m = -Infinity,
                u = -Infinity,
                r = 0;
              r < a.length;

            ) {
              var xb = a[r];
              ++r;
              var l = xb.x * p - xb.y * g;
              xb = xb.y * p + xb.x * g;
              l < k && (k = l);
              xb < q && (q = xb);
              l > m && (m = l);
              xb > u && (u = xb);
            }
            p = (m - k) * (u - q);
            b > p &&
              ((b = p),
              (c = [new I(k, q), new I(m, q), new I(m, u), new I(k, u)]),
              (d = n));
          }
        }
        Yc.asRotateYX(c, d.y, d.x);
        return c;
      };
      Gb.lir = function (a, b) {
        var c = function (a, b, c, d, f, h, k) {
            b = (b - f) / k;
            return new I((d - a + h * b) / c, b);
          },
          d = a.length,
          f = a[b < a.length - 1 ? b + 1 : 0].subtract(a[b]);
        f = f.clone();
        f.normalize(1);
        var h = Yc.rotateYX(a, f.y, -f.x),
          k = h[b];
        a = k.y;
        k = k.x;
        b = h[(b + 1) % h.length].x;
        for (var n = k - b, p = [], g = [], q = 0, m = d; q < m; ) {
          var u = q++,
            r = h[u];
          u = h[(u + 1) % d];
          u.x > r.x &&
            (u.y < r.y && u.x > b && p.push(new hf(r, u)),
            u.y > r.y && r.x < k && g.push(new hf(r, u)));
        }
        h = d = 0;
        r = a;
        for (q = u = 0; q < p.length; ) {
          var xb = p[q];
          ++q;
          m = xb.start;
          var l = xb.end;
          xb = c(
            b,
            a,
            n,
            m.x,
            m.y,
            xb.end.subtract(xb.start).x,
            xb.end.subtract(xb.start).y,
          );
          xb = b + xb.x * n;
          var D = a,
            x = 0,
            w = 0;
          l.x > k
            ? ((x = k), (w = m.y + ((l.y - m.y) / (l.x - m.x)) * (k - m.x)))
            : ((x = l.x), (w = l.y));
          l = Math.max(Math.max((xb + x) / 2, m.x), b);
          xb = xb != x ? w + ((D - w) * (l - x)) / (xb - x) : w;
          D = k;
          for (m = 0; m < g.length; )
            ((x = g[m]),
              ++m,
              (x = c(
                b,
                xb,
                n,
                x.start.x,
                x.start.y,
                x.end.subtract(x.start).x,
                x.end.subtract(x.start).y,
              )),
              0 <= x.x &&
                1 >= x.x &&
                0 <= x.y &&
                1 >= x.y &&
                ((x = b + n * x.x), D > x && (D = x)));
          m = (a - xb) * (D - l);
          m > u && ((d = D), (h = l), (r = xb), (u = m));
        }
        for (q = 0; q < g.length; ) {
          xb = g[q];
          ++q;
          m = xb.start;
          l = xb.end;
          xb = c(
            b,
            a,
            n,
            m.x,
            m.y,
            xb.end.subtract(xb.start).x,
            xb.end.subtract(xb.start).y,
          );
          xb = b + xb.x * n;
          D = a;
          w = x = 0;
          m.x < b
            ? ((x = b), (w = m.y + ((l.y - m.y) / (l.x - m.x)) * (b - m.x)))
            : ((x = m.x), (w = m.y));
          l = Math.min(Math.min((xb + x) / 2, l.x), k);
          xb = xb != x ? w + ((D - w) * (l - x)) / (xb - x) : w;
          D = b;
          for (m = 0; m < p.length; )
            ((x = p[m]),
              ++m,
              (x = c(
                b,
                xb,
                n,
                x.start.x,
                x.start.y,
                x.end.subtract(x.start).x,
                x.end.subtract(x.start).y,
              )),
              0 <= x.x &&
                1 >= x.x &&
                0 <= x.y &&
                1 >= x.y &&
                ((x = b + n * x.x), D < x && (D = x)));
          m = (a - xb) * (l - D);
          m > u && ((d = l), (h = D), (r = xb), (u = m));
        }
        return Yc.rotateYX(
          [new I(d, a), new I(h, a), new I(h, r), new I(d, r)],
          -f.y,
          -f.x,
        );
      };
      Gb.lira = function (a) {
        for (var b = -Infinity, c = null, d = 0, f = a.length; d < f; ) {
          var h = d++;
          h = Gb.lir(a, h);
          var k = Sa.area(h);
          b < k && ((b = k), (c = h));
        }
        return c;
      };
      Gb.convexHull = function (a) {
        var b = a.length;
        if (3 > b) return null;
        if (3 == b) return a;
        var c = a[0],
          d = a[1],
          f = a[2];
        c =
          0 < (d.x - c.x) * (f.y - c.y) - (f.x - c.x) * (d.y - c.y)
            ? [f, c, d, f]
            : [f, d, c, f];
        for (d = 3; ; ) {
          if (d >= b) return (c[0] == c[c.length - 1] && c.pop(), c);
          f = a[d++];
          for (var h = c.length; ; ) {
            var k = c[0];
            var n = c[1];
            0 <= (k.x - f.x) * (n.y - f.y) - (n.x - f.x) * (k.y - f.y)
              ? ((k = c[h - 2]),
                (n = c[h - 1]),
                (k =
                  0 <= (n.x - k.x) * (f.y - k.y) - (f.x - k.x) * (n.y - k.y)))
              : (k = !1);
            if (!k) break;
            if (d >= b) return (c[0] == c[c.length - 1] && c.pop(), c);
            f = a[d++];
          }
          for (;;) {
            2 <= c.length
              ? ((h = c[c.length - 2]),
                (k = c[c.length - 1]),
                (h = 0 > (k.x - h.x) * (f.y - h.y) - (f.x - h.x) * (k.y - h.y)))
              : (h = !1);
            if (!h) break;
            c.pop();
          }
          for (c.push(f); ; ) {
            h = c[0];
            k = c[1];
            if (!(0 > (h.x - f.x) * (k.y - f.y) - (k.x - f.x) * (h.y - f.y)))
              break;
            c.shift();
          }
          c.unshift(f);
        }
      };
      Gb.containsPoint = function (a, b, c) {
        null == c && (c = !1);
        var d = b.x;
        b = b.y;
        for (var f = a.length, h = a[f - 1], k = 0; k < f; ) {
          var n = k++,
            p = h;
          h = a[n];
          n = p.x;
          p = p.y;
          var g = h.x - n,
            q = h.y - p;
          if (0 != q) {
            var m = (q * (d - n) - g * (b - p)) / q;
            0 >= m &&
              ((n = Math.abs(g) > Math.abs(q) ? (d - n - m) / g : (b - p) / q),
              0 <= n && 1 >= n && (c = !c));
          }
        }
        return c;
      };
      var Sa = function () {};
      g['com.watabou.geom.polygons.PolyCore'] = Sa;
      Sa.__name__ = 'com.watabou.geom.polygons.PolyCore';
      Sa.area = function (a) {
        for (
          var b = a.length,
            c = a[b - 1],
            d = a[0],
            f = c.x * d.y - d.x * c.y,
            h = 1;
          h < b;

        ) {
          var k = h++;
          c = d;
          d = a[k];
          f += c.x * d.y - d.x * c.y;
        }
        return 0.5 * f;
      };
      Sa.rectArea = function (a) {
        return I.distance(a[0], a[1]) * I.distance(a[1], a[2]);
      };
      Sa.perimeter = function (a) {
        for (
          var b = a.length, c = a[b - 1], d = a[0], f = I.distance(c, d), h = 1;
          h < b;

        ) {
          var k = h++;
          c = d;
          d = a[k];
          f += I.distance(c, d);
        }
        return f;
      };
      Sa.$length = function (a) {
        for (var b = 0, c = 1, d = a.length; c < d; ) {
          var f = c++;
          b += I.distance(a[f - 1], a[f]);
        }
        return b;
      };
      Sa.center = function (a) {
        for (var b = a.length, c = a[0].clone(), d = 1; d < b; ) {
          var f = d++;
          f = a[f];
          c.x += f.x;
          c.y += f.y;
        }
        a = 1 / b;
        c.x *= a;
        c.y *= a;
        return c;
      };
      Sa.centroid = function (a) {
        if (1 == a.length) return a[0];
        for (
          var b = 0, c = 0, d = 0, f = a[a.length - 1], h = 0, k = a.length;
          h < k;

        ) {
          var n = h++,
            p = f;
          f = a[n];
          n = p.x * f.y - p.y * f.x;
          d += n;
          b += (p.x + f.x) * n;
          c += (p.y + f.y) * n;
        }
        a = 1 / (3 * d);
        return new I(a * b, a * c);
      };
      Sa.compactness = function (a) {
        var b = Sa.perimeter(a);
        return (4 * Math.PI * Sa.area(a)) / (b * b);
      };
      Sa.simplifyClosed = function (a) {
        for (
          var b = -1,
            c = Infinity,
            d = a.length,
            f = a[d - 2],
            h = a[d - 1],
            k = 0;
          k < d;

        ) {
          var n = k++,
            p = f;
          f = h;
          h = a[n];
          p = Math.abs(
            p.x * (f.y - h.y) + f.x * (h.y - p.y) + h.x * (p.y - f.y),
          );
          c > p && ((c = p), (b = 0 == n ? d - 1 : n - 1));
        }
        a.splice(b, 1);
      };
      Sa.set = function (a, b) {
        for (var c = 0, d = a.length; c < d; ) {
          var f = c++;
          wd.set(a[f], b[f]);
        }
      };
      var Qd = function () {};
      g['com.watabou.geom.polygons.PolyCreate'] = Qd;
      Qd.__name__ = 'com.watabou.geom.polygons.PolyCreate';
      Qd.rect = function (a, b) {
        a /= 2;
        b /= 2;
        return [new I(-a, -b), new I(a, -b), new I(a, b), new I(-a, b)];
      };
      Qd.regular = function (a, b, c) {
        null == c && (c = 0);
        for (var d = [], f = 0; f < a; ) {
          var h = f++;
          d.push(I.polar(b, c + (2 * Math.PI * h) / a));
        }
        return d;
      };
      Qd.stripe = function (a, b, c) {
        null == c && (c = 1);
        var d = b / 2,
          f = a.length;
        b = [];
        var h = [],
          k = a[0],
          n = a[1],
          p = n.subtract(k);
        p.normalize(1);
        if (0 < c) {
          var g = new I(p.x * d, p.y * d),
            q = new I(-g.y, g.x);
          k = k.subtract(new I(g.x * c, g.y * c));
          b.unshift(k.subtract(q));
          h.unshift(k.add(q));
        } else {
          var m = new I(p.x * d, p.y * d);
          q = new I(-m.y, m.x);
          b.unshift(k.subtract(q));
          h.unshift(k.add(q));
        }
        q = 1;
        for (--f; q < f; )
          ((g = q++),
            (k = n),
            (n = a[g + 1]),
            (m = p),
            (p = n.subtract(k)),
            p.normalize(1),
            (g = m.x * p.x + m.y * p.y),
            (m = m.add(p)),
            (m = new I(-m.y, m.x)),
            m.normalize(d * Math.sqrt(2 / (1 + g))),
            b.push(k.subtract(m)),
            h.push(k.add(m)));
        0 < c
          ? ((g = new I(p.x * d, p.y * d)),
            (q = new I(-g.y, g.x)),
            (a = n.add(new I(g.x * c, g.y * c))),
            b.push(a.subtract(q)),
            h.push(a.add(q)))
          : ((m = new I(p.x * d, p.y * d)),
            (q = new I(-m.y, m.x)),
            b.push(n.subtract(q)),
            h.push(n.add(q)));
        return b.concat(Z.revert(h));
      };
      var gd = function () {};
      g['com.watabou.geom.polygons.PolyCut'] = gd;
      gd.__name__ = 'com.watabou.geom.polygons.PolyCut';
      gd.pierce = function (a, b, c) {
        for (
          var d = b.x,
            f = b.y,
            h = c.x - d,
            k = c.y - f,
            n = a.length,
            p = [],
            g = 0,
            q = n;
          g < q;

        ) {
          var m = g++,
            u = a[m];
          m = a[(m + 1) % n];
          var r = u.x;
          u = u.y;
          u = qa.intersectLines(d, f, h, k, r, u, m.x - r, m.y - u);
          null != u && 0 <= u.y && 1 >= u.y && p.push(u.x);
        }
        p.sort(function (a, b) {
          a -= b;
          return 0 == a ? 0 : 0 > a ? -1 : 1;
        });
        g = [];
        for (q = 0; q < p.length; ) ((u = p[q]), ++q, g.push(qa.lerp(b, c, u)));
        return g;
      };
      gd.cut = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        var h = b.x,
          k = b.y,
          n = c.x - h,
          p = c.y - k,
          g = a.length,
          q = 0,
          m = 0,
          u = 0,
          r = 0;
        q = [];
        u = new pa();
        for (m = 0; m < g; ) {
          r = m++;
          var l = a[r],
            D = a[(r + 1) % g],
            x = l.x;
          l = l.y;
          D = qa.intersectLines(h, k, n, p, x, l, D.x - x, D.y - l);
          null != D && 0 <= D.y && 1 >= D.y && (q.push(D), u.set(D, r));
        }
        return 2 <= q.length
          ? (q.sort(function (a, b) {
              a = a.x - b.x;
              return 0 == a ? 0 : 0 > a ? -1 : 1;
            }),
            (m = q[0]),
            (r = q[1]),
            (q = u.h[m.__id__]),
            (u = u.h[r.__id__]),
            0 == f
              ? ((h = qa.lerp(b, c, m.x)),
                (c = qa.lerp(b, c, r.x)),
                (b =
                  q < u
                    ? a.slice(q + 1, u + 1)
                    : a.slice(q + 1).concat(a.slice(0, u + 1))),
                b.unshift(h),
                b.push(c),
                (f =
                  q < u
                    ? a.slice(u + 1).concat(a.slice(0, q + 1))
                    : a.slice(u + 1, q + 1)),
                f.unshift(c),
                f.push(h))
              : ((h =
                  m.y < f
                    ? a[q]
                    : m.y > 1 - f
                      ? a[(q + 1) % g]
                      : qa.lerp(b, c, m.x)),
                (c =
                  r.y < f
                    ? a[u]
                    : r.y > 1 - f
                      ? a[(u + 1) % g]
                      : qa.lerp(b, c, r.x)),
                (b =
                  q < u
                    ? a.slice(q + 1, u + 1)
                    : a.slice(q + 1).concat(a.slice(0, u + 1))),
                h != b[0] && b.unshift(h),
                c != b[b.length - 1] && b.push(c),
                (f =
                  q < u
                    ? a.slice(u + 1).concat(a.slice(0, q + 1))
                    : a.slice(u + 1, q + 1)),
                c != f[0] && f.unshift(c),
                h != f[f.length - 1] && f.push(h)),
            0 < d && ((b = gd.peel(b, c, d / 2)), (f = gd.peel(f, h, d / 2))),
            (a = a[q < a.length - 1 ? q + 1 : 0].subtract(a[q])),
            0 < n * a.y - p * a.x ? [b, f] : [f, b])
          : [a];
      };
      gd.peel = function (a, b, c) {
        var d = a.indexOf(b);
        d = a[d == a.length - 1 ? 0 : d + 1];
        var f = d.subtract(b);
        f = new I(-f.y, f.x);
        null == c && (c = 1);
        f = f.clone();
        f.normalize(c);
        c = f;
        return gd.cut(a, b.add(c), d.add(c))[0];
      };
      gd.shrink = function (a, b) {
        for (var c = a.slice(), d = a.length, f = 0; f < d; ) {
          var h = f++,
            k = b[h];
          if (0 < k) {
            var n = a[h];
            h = a[(h + 1) % d];
            var p = h.subtract(n);
            p = new I(-p.y, p.x);
            null == k && (k = 1);
            p = p.clone();
            p.normalize(k);
            k = p;
            c = gd.cut(c, n.add(k), h.add(k))[0];
          }
        }
        return c;
      };
      gd.shrinkEq = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) (++d, c.push(b));
        return gd.shrink(a, c);
      };
      var Yc = function () {};
      g['com.watabou.geom.polygons.PolyTransform'] = Yc;
      Yc.__name__ = 'com.watabou.geom.polygons.PolyTransform';
      Yc.translate = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          d.push(new I(h.x + b, h.y + c));
        }
        return d;
      };
      Yc.asTranslate = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.x += b;
          f.y += c;
        }
      };
      Yc.asAdd = function (a, b) {
        Yc.asTranslate(a, b.x, b.y);
      };
      Yc.rotateYX = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var h = a[f];
          ++f;
          d.push(new I(h.x * c - h.y * b, h.y * c + h.x * b));
        }
        return d;
      };
      Yc.asRotateYX = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.setTo(f.x * c - f.y * b, f.y * c + f.x * b);
        }
      };
      var fk = function () {};
      g['com.watabou.mfcg.Buffer'] = fk;
      fk.__name__ = 'com.watabou.mfcg.Buffer';
      fk.write = function (a) {
        E.navigator.clipboard.writeText(a);
      };
      var kd = function () {};
      g['com.watabou.mfcg.Values'] = kd;
      kd.__name__ = 'com.watabou.mfcg.Values';
      kd.prepare = function (a) {
        a.random = !0;
        a.citadel = !0;
        a.urban_castle = !1;
        a.walls = !0;
        a.river = !1;
        a.coast = !0;
        a.temple = !0;
        a.plaza = !0;
        a.shantytown = !1;
        a.farms = !0;
        a.green = !1;
        a.hub = !1;
        a.gates = -1;
        a.display_mode = 'Lots';
        a.lots_method = 'Twisted';
        a.processing = 'Offset';
        a.towers = 'Round';
        a.landmarks = 'Icon';
      };
      var ze = function () {};
      g['com.watabou.mfcg.annotations.Equator'] = ze;
      ze.__name__ = 'com.watabou.mfcg.annotations.Equator';
      ze.build = function (a) {
        var b = Gb.aabb(a),
          c = b[0].subtract(b[3]);
        b = b[1].subtract(b[0]);
        var d = Sa.centroid(a);
        d = ze.largestSpan(gd.pierce(a, d, d.add(c)));
        c = d[0];
        d = d[1];
        for (var f = null, h = 0, k = 0, n = ze.marks; k < n.length; ) {
          var p = n[k];
          ++k;
          p = qa.lerp(c, d, p);
          p = ze.largestSpan(gd.pierce(a, p, p.add(b)));
          var g = I.distance(p[0], p[1]);
          h < g && ((h = g), (f = p));
        }
        return f;
      };
      ze.largestSpan = function (a) {
        for (var b = 0, c = null, d = null, f = 0; f < a.length; ) {
          var h = a[f],
            k = a[f + 1],
            n = I.distance(h, k);
          b < n && ((b = n), (c = h), (d = k));
          f += 2;
        }
        return [c, d];
      };
      var Xk = function () {};
      g['com.watabou.mfcg.annotations.Ridge'] = Xk;
      Xk.__name__ = 'com.watabou.mfcg.annotations.Ridge';
      Xk.build = function (a) {
        for (var b = new jf(a, !0); 0 < b.ribs.length; ) {
          for (var c = [], d = 0; d < a.length; )
            ((b = a[d]),
              ++d,
              c.push(
                b.add(
                  I.polar(
                    1,
                    2 *
                      Math.PI *
                      ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647),
                  ),
                ),
              ));
          a = c;
          b = new jf(a, !0);
        }
        var f = 0,
          h = null,
          k = null;
        c = 0;
        for (d = a.length - 1; c < d; )
          for (var n = c++, p = n + 1, g = a.length; p < g; ) {
            var q = p++,
              m = a[n];
            q = a[q];
            var u = I.distance(m, q) + Math.abs(m.x - q.x);
            f < u && ((f = u), (h = m), (k = q));
          }
        a = b.leaves.h[h.__id__];
        k = b.leaves.h[k.__id__];
        c = [];
        d = 0;
        for (p = b.getPath(a, k); d < p.length; )
          ((b = p[d]), ++d, c.push(b.point));
        return c;
      };
      var be = function () {};
      g['com.watabou.mfcg.export.Export'] = be;
      be.__name__ = 'com.watabou.mfcg.export.Export';
      be.asPNG = function () {
        var a = Ub.instance,
          b = a.getViewport(),
          c = 40 * (null != a.focus ? 0.25 : 1),
          d = b.width + c,
          f = b.height + c;
        b = gk.getMaxArea(ia.map);
        c = Math.sqrt(Math.min(16777216 / (d * f), 67108864 / b));
        var h = (c * d) | 0,
          k = (c * f) | 0;
        b = new Fb(h, k, !1, K.colorPaper);
        gb.trace(c, {
          fileName: 'Source/com/watabou/mfcg/export/Export.hx',
          lineNumber: 36,
          className: 'com.watabou.mfcg.export.Export',
          methodName: 'asPNG',
          customParams: [h, k],
        });
        c = ia.inst;
        k = c.rWidth;
        var n = c.rHeight;
        d *= c.get_mapScale();
        f *= c.get_mapScale();
        c.setSize(d, f);
        f = h / d;
        d = new ua();
        d.scale(f, f);
        f = ia.map;
        h = 0;
        for (var p = c.overlays; h < p.length; ) {
          var g = p[h];
          ++h;
          g.exportPNG(!0);
        }
        var q = f.get_transform().get_matrix().clone();
        q.concat(d);
        b.draw(f, q, null, null, null, !0);
        h = 0;
        for (p = c.overlays; h < p.length; )
          ((g = p[h]),
            ++h,
            g.get_visible() &&
              ((q = g.get_transform().get_matrix().clone()),
              q.concat(d),
              b.draw(g, q, null, null, null, !0)));
        c.setSize(k, n);
        c.resetOverlays();
        ge.savePNG(b, a.name);
      };
      be.asSVG = function () {
        var a = Ub.instance,
          b = Rd.export(a, ia.inst);
        a = a.name;
        ge.saveText(
          '<?xml version="1.0" encoding="UTF-8" standalone="no"?>' +
            Df.print(b.root),
          '' + a + '.svg',
          'image/svg+xml',
        );
      };
      be.asJSON = function () {
        var a = Ub.instance,
          b = kg.export(a);
        a = a.name;
        ge.saveText(b.stringify(), '' + a + '.json', 'application/json');
      };
      var kg = function () {};
      g['com.watabou.mfcg.export.JsonExporter'] = kg;
      kg.__name__ = 'com.watabou.mfcg.export.JsonExporter';
      kg.export = function (a) {
        Xa.SCALE = 4;
        for (
          var b = [],
            c = [],
            d = [],
            f = [],
            h = [],
            k = new pa(),
            n = 0,
            p = a.cells;
          n < p.length;

        ) {
          var g = p[n];
          ++n;
          var q = g.ward;
          switch (va.getClass(q)) {
            case Pc:
              if (q.group.core == g.face) {
                var m = q.group.blocks;
                switch (ba.get('display_mode', 'Lots')) {
                  case 'Block':
                    g = [];
                    for (var u = 0; u < m.length; )
                      ((q = m[u]), ++u, g.push(q.shape));
                    m = g;
                    for (var r = 0; r < m.length; )
                      ((u = m[r]), ++r, b.push(u));
                    break;
                  case 'Complex':
                    for (var l = [], D = 0; D < m.length; )
                      ((q = m[D]), ++D, l.push(q.buildings));
                    m = Z.collect(l);
                    for (q = 0; q < m.length; ) {
                      var x = m[q];
                      ++q;
                      b.push(x);
                    }
                    break;
                  case 'Lots':
                    q = [];
                    for (x = 0; x < m.length; )
                      ((g = m[x]), ++x, q.push(g.lots));
                    m = Z.collect(q);
                    for (q = 0; q < m.length; ) ((x = m[q]), ++q, b.push(x));
                    break;
                  case 'Simple':
                    q = [];
                    for (x = 0; x < m.length; )
                      ((g = m[x]), ++x, q.push(g.rects));
                    m = Z.collect(q);
                    for (q = 0; q < m.length; ) ((x = m[q]), ++q, b.push(x));
                }
              }
              break;
            case xd:
              b.push(va.__cast(q, xd).building);
              break;
            case Ne:
              m = va.__cast(q, Ne).building;
              for (q = 0; q < m.length; ) ((x = m[q]), ++q, b.push(x));
              break;
            case yd:
              m = va.__cast(q, yd);
              q = m.buildings;
              for (x = 0; x < q.length; ) ((g = q[x]), ++x, b.push(g));
              m = m.subPlots;
              for (q = 0; q < m.length; ) ((x = m[q]), ++q, h.push(x));
              break;
            case lf:
              m = 0;
              for (q = va.__cast(q, lf).piers; m < q.length; )
                ((x = q[m]), ++m, k.set(x, 1.2));
              break;
            case he:
              m = va.__cast(q, he);
              d.push(m.getAvailable());
              null != m.monument && c.push(m.monument);
              break;
            case ce:
              f.push(va.__cast(q, ce).green);
          }
        }
        n = [];
        p = 0;
        for (g = a.districts; p < g.length; )
          ((r = g[p]),
            ++p,
            (m = Xa.polygon(null, Ua.toPoly(r.border))),
            (u = new Pa()),
            (u.h.name = r.name),
            (m.props = u),
            n.push(m));
        m = Xa.geometryCollection('districts', n);
        n = new Pa();
        n.h.id = 'values';
        n.h.roadWidth = 2 * Xa.SCALE;
        n.h.towerRadius = pc.TOWER_RADIUS * Xa.SCALE;
        n.h.wallThickness = pc.THICKNESS * Xa.SCALE;
        n.h.generator = 'mfcg';
        n.h.version = A.current.meta.h.version;
        q = n;
        0 < a.canals.length && (q.h.riverWidth = a.canals[0].width * Xa.SCALE);
        n = 0;
        for (p = a.canals; n < p.length; )
          for (x = p[n], ++n, u = x.bridges.keys(); u.hasNext(); ) {
            var w = u.next();
            null == x.bridges.h[w.__id__] &&
              ((r = x.width + 1.2),
              (l = x.course),
              (D = Ua.indexByOrigin(l, w)),
              (g = l[D]),
              (g = g.next.origin.point.subtract(g.origin.point)),
              0 < D &&
                ((l = l[D - 1]),
                (l = l.next.origin.point.subtract(l.origin.point)),
                (g.x += l.x),
                (g.y += l.y)),
              (g = new I(-g.y, g.x)),
              (r /= 2),
              null == r && (r = 1),
              (g = g.clone()),
              g.normalize(r),
              (g = [w.point.subtract(g), w.point.add(g)]),
              k.set(g, 1.2));
          }
        x = [];
        if (ba.get('show_trees'))
          for (n = 0, p = a.cells; n < p.length; )
            if (((g = p[n]), ++n, (w = g.ward.spawnTrees()), null != w))
              for (g = 0; g < w.length; ) ((u = w[g]), ++g, x.push(u));
        n = [];
        p = 0;
        for (g = a.arteries; p < g.length; )
          ((D = g[p]),
            ++p,
            (w = Xa.lineString(null, Ua.toPolyline(D))),
            (u = new Pa()),
            (u.h.width = 2 * Xa.SCALE),
            (w.props = u),
            n.push(w));
        w = n;
        if (ba.get('show_alleys', !1))
          for (n = 0, p = a.districts; n < p.length; )
            for (r = p[n], ++n, g = 0, u = r.groups; g < u.length; )
              for (l = u[g], ++g, r = 0, l = l.alleys; r < l.length; ) {
                D = l[r];
                ++r;
                var z = Xa.lineString(null, D);
                D = new Pa();
                D.h.width = 1.2 * Xa.SCALE;
                z.props = D;
                w.push(z);
              }
        p = Xa.feature(null, q);
        q = Xa.polygon('earth', Ua.toPoly(a.earthEdgeE));
        u = Xa.geometryCollection('roads', w);
        w = kg.multiThick(
          'walls',
          a.walls,
          !0,
          function (a) {
            return a.shape;
          },
          function (a) {
            return pc.THICKNESS;
          },
        );
        r = kg.multiThick(
          'rivers',
          a.canals,
          null,
          function (a) {
            return Ua.toPolyline(a.course);
          },
          function (a) {
            return a.width;
          },
        );
        n = [];
        for (g = k.keys(); g.hasNext(); ) ((l = g.next()), n.push(l));
        b = Xa.featureCollection([
          p,
          q,
          u,
          w,
          r,
          kg.multiThick(
            'planks',
            n,
            null,
            function (a) {
              return a;
            },
            function (a) {
              return k.h[a.__id__];
            },
          ),
          Xa.multiPolygon('buildings', b),
          Xa.multiPolygon('prisms', c),
          Xa.multiPolygon('squares', d),
          Xa.multiPolygon('greens', f),
          Xa.multiPolygon('fields', h),
          Xa.multiPoint('trees', x),
          m,
        ]);
        0 < a.waterEdgeE.length &&
          b.items.push(Xa.multiPolygon('water', [Ua.toPoly(a.waterEdgeE)]));
        return b;
      };
      kg.multiThick = function (a, b, c, d, f) {
        null == c && (c = !1);
        for (var h = [], k = 0; k < b.length; ) {
          var n = b[k];
          ++k;
          var p = d(n);
          p = c ? Xa.polygon(null, p) : Xa.lineString(null, p);
          var g = new Pa();
          n = f(n) * Xa.SCALE;
          g.h.width = n;
          p.props = g;
          h.push(p);
        }
        return Xa.geometryCollection(a, h);
      };
      var Rd = function () {};
      g['com.watabou.mfcg.export.SvgExporter'] = Rd;
      Rd.__name__ = 'com.watabou.mfcg.export.SvgExporter';
      Rd.export = function (a, b) {
        Ja.substituteFont = Rd.fixFontNames;
        Ja.handleObject = Rd.detectEmblem;
        var c = a.getViewport(),
          d = 40 * (null != a.focus ? 0.25 : 1);
        a = c.height + d;
        d = (c.width + d) * b.get_mapScale();
        var f = a * b.get_mapScale();
        c = b.rWidth;
        a = b.rHeight;
        b.setSize(d, f);
        d = Ja.create(d, f, K.colorPaper);
        f = Ja.drawSprite(b);
        Qa.clearTransform(f);
        var h = Ja.getImports();
        d.root.addChild(h);
        h = Ja.getGradients();
        d.root.addChild(h);
        d.root.addChild(f);
        b.setSize(c, a);
        return d;
      };
      Rd.fixFontNames = function (a) {
        if (!Rd.embeddedScanned) {
          Rd.embeddedScanned = !0;
          for (
            var b = new Pa(),
              c = Rd.embedded.h,
              d = Object.keys(c),
              f = d.length,
              h = 0;
            h < f;

          ) {
            var k = d[h++],
              n = c[k];
            k = ac.getFont(k).name;
            -1 != n.name.indexOf(' ') && (n.name = "'" + n.name + "'");
            b.h[k] = { name: n.name, url: n.url, generic: n.generic };
          }
          Rd.embedded = b;
        }
        n = Rd.embedded.h[a];
        return null != n
          ? (Ja.addImport(n.url), n.name + ', ' + n.generic)
          : Ja.substituteGenerics(a);
      };
      Rd.detectEmblem = function (a) {
        return a instanceof ra && null != ra.svg ? ra.svg : null;
      };
      var Ma = function () {};
      g['com.watabou.mfcg.linguistics.Namer'] = Ma;
      Ma.__name__ = 'com.watabou.mfcg.linguistics.Namer';
      Ma.reset = function () {
        if (null == Ma.grammar) {
          Oe.rng = C.float;
          Ma.grammar = new hk(JSON.parse(ac.getText('grammar')));
          Ma.grammar.defaultSelector = Zh;
          Ma.grammar.addModifiers(jb.get());
          var a = Ma.grammar,
            b = new Pa();
          b.h.merge = Ma.merge;
          a.addModifiers(b);
          Ma.grammar.addExternal('word', Ma.word);
          Ma.grammar.addExternal('fantasy', Ma.fantasy);
          Ma.grammar.addExternal('given', Ma.given);
          Ma.english = new de(ac.getText('english').split(' '));
          Ma.elven = new de(ac.getText('elven').split(' '));
          Ma.male = new de(ac.getText('male').split(' '));
          Ma.female = new de(ac.getText('female').split(' '));
        }
        Ma.grammar.clearState();
      };
      Ma.given = function () {
        return (
          0.5 > (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647
            ? Ma.male
            : Ma.female
        ).generate(4);
      };
      Ma.word = function () {
        return Ma.generate(Ma.english, 4, 3);
      };
      Ma.fantasy = function () {
        return Ma.generate(Ma.elven);
      };
      Ma.generate = function (a, b, c) {
        null == c && (c = 4);
        for (null == b && (b = 1); ; ) {
          var d = a.generate(c);
          if (d.length >= b && -1 == a.source.indexOf(d)) return d;
        }
      };
      Ma.cityName = function (a) {
        var b = Ma.grammar,
          c = a.bp.citadel;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('CASTLE'))
          : Z.removeAll(b.flags, new ja(', +', '').split('CASTLE'));
        b = Ma.grammar;
        c = a.bp.walls;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('WALLS'))
          : Z.removeAll(b.flags, new ja(', +', '').split('WALLS'));
        b = Ma.grammar;
        c = a.bp.temple;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('TEMPLE'))
          : Z.removeAll(b.flags, new ja(', +', '').split('TEMPLE'));
        b = Ma.grammar;
        c = a.bp.plaza;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('PLAZA'))
          : Z.removeAll(b.flags, new ja(', +', '').split('PLAZA'));
        b = Ma.grammar;
        c = a.bp.shanty;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('SHANTY'))
          : Z.removeAll(b.flags, new ja(', +', '').split('SHANTY'));
        b = Ma.grammar;
        c = a.bp.coast;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('COAST'))
          : Z.removeAll(b.flags, new ja(', +', '').split('COAST'));
        b = Ma.grammar;
        c = a.bp.river;
        null == c && (c = !0);
        c
          ? Z.addAll(b.flags, new ja(', +', '').split('RIVER'))
          : Z.removeAll(b.flags, new ja(', +', '').split('RIVER'));
        return dh.capitalizeAll(Ma.grammar.flatten('#city#'));
      };
      Ma.nameDistricts = function (a) {
        if (1 == a.districts.length) a.districts[0].name = a.name;
        else {
          var b = 1 == a.name.split(' ').length ? a.name : 'city';
          Ma.grammar.pushRules('cityName', [
            null != b ? b : Ma.grammar.flatten('#cityName#'),
          ]);
          for (var c = 0, d = a.districts; c < d.length; ) {
            var f = [d[c]];
            ++c;
            b = Ma.getDistrictNoun(f[0]);
            Ma.grammar.pushRules('districtNoun', [
              null != b ? b : Ma.grammar.flatten('#districtNoun#'),
            ]);
            b = Ma.getDirection(f[0]);
            Ma.grammar.pushRules('dir', [
              null != b ? b : Ma.grammar.flatten('#dir#'),
            ]);
            b = Ma.grammar;
            var h = 1 == f[0].faces.length;
            null == h && (h = !0);
            h
              ? Z.addAll(b.flags, new ja(', +', '').split('COMPACT'))
              : Z.removeAll(b.flags, new ja(', +', '').split('COMPACT'));
            b = Ma.grammar;
            h =
              1 ==
              Z.count(
                a.districts,
                (function (a) {
                  return function (b) {
                    return b.type == a[0].type;
                  };
                })(f),
              );
            null == h && (h = !0);
            h
              ? Z.addAll(b.flags, new ja(', +', '').split('UNIQUE'))
              : Z.removeAll(b.flags, new ja(', +', '').split('UNIQUE'));
            switch (f[0].type._hx_index) {
              case 0:
                b = Ma.grammar.flatten('#centralDistrict#');
                break;
              case 1:
                b = Ma.grammar.flatten('#castleDistrict#');
                break;
              case 2:
                b = Ma.grammar.flatten('#docksDistrict#');
                break;
              case 3:
                b = Ma.grammar.flatten('#bridgeDistrict#');
                break;
              case 4:
                b = Ma.grammar.flatten('#gateDistrict#');
                break;
              case 5:
                b = Ma.grammar.flatten('#bankDistrict#');
                break;
              case 6:
                b = Ma.grammar.flatten('#parkDistrict#');
                break;
              case 7:
                b = Ma.grammar.flatten('#sprawlDistrict#');
                break;
              default:
                b = Ma.grammar.flatten('#district#');
            }
            Ma.grammar.popRules('dir');
            Ma.grammar.popRules('districtNoun');
            f[0].name = dh.capitalizeAll(b);
          }
          Ma.grammar.popRules('cityName');
        }
      };
      Ma.getDistrictNoun = function (a) {
        a =
          a.faces.length +
          Math.floor(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * 3,
          );
        return 2 >= a
          ? 'quarter'
          : 6 > a
            ? 'ward'
            : 12 > a
              ? 'district'
              : 'town';
      };
      Ma.getDirection = function (a) {
        var b = null,
          c = -Infinity;
        null == a.equator && (a.equator = ze.build(Ua.toPoly(a.border)));
        a = qa.lerp(a.equator[0], a.equator[1]);
        for (var d = Ma.dirs, f = d.keys(); f.hasNext(); ) {
          var h = f.next(),
            k = d.get(h);
          h = h.x * a.x + h.y * a.y;
          c < h && ((c = h), (b = k));
        }
        return Ma.grammar.flatten('#' + b + '#');
      };
      Ma.merge = function (a, b) {
        b = a.split(' ');
        if (1 == b.length) return a;
        for (var c = 0, d = 0; d < b.length; ) {
          var f = b[d];
          ++d;
          c += nd.split(f).length;
        }
        return 2 >= c ? b.join('') : a;
      };
      var hd = function () {};
      g['com.watabou.mfcg.mapping.BuildingPainter'] = hd;
      hd.__name__ = 'com.watabou.mfcg.mapping.BuildingPainter';
      hd.paint = function (a, b, c, d, f, h) {
        null == h && (h = !1);
        null == f && (f = 0.5);
        if (h && kc.drawSolid) hd.drawSolids(a, b);
        else {
          kc.raised || (f = 0);
          var k = K.getStrokeWidth(K.strokeNormal, !0),
            n = 0;
          if (0 < f) {
            n = -1.2 * f;
            var p = K.colorWall,
              g = function (b) {
                for (var c = [], d = 0; d < b.length; ) {
                  var f = b[d];
                  ++d;
                  c.push(new I(f.x, f.y + n));
                }
                c.reverse();
                a.beginFill(p);
                a.lineStyle(k, K.colorDark);
                Kb.drawPolygon(a, b.concat(c));
                a.endFill();
                if (K.colorDark != p) {
                  a.lineStyle(k, K.colorDark);
                  c = 1;
                  for (d = b.length - 1; c < d; )
                    ((f = c++),
                      (f = b[f]),
                      a.moveTo(f.x, f.y),
                      a.lineTo(f.x, f.y + n));
                  a.endFill();
                }
              };
            for (f = 0; f < b.length; ) {
              h = b[f];
              ++f;
              for (var q = null, m = h.length, u = 0, r = m; u < r; ) {
                var l = u++,
                  x = h[l];
                l = h[(l + 1) % m];
                l.x < x.x
                  ? null == q
                    ? (q = [x, l])
                    : q.push(l)
                  : null != q && (g(q), (q = null));
              }
              null != q && g(q);
            }
          }
          g =
            1 < b.length &&
            'Block' != kc.planMode &&
            ba.get('weathered_roofs', !1)
              ? K.weathering / 100
              : 0;
          for (f = 0; f < b.length; )
            ((h = b[f]),
              ++f,
              (q =
                0 == g
                  ? c
                  : Gc.scale(
                      c,
                      Math.pow(
                        2,
                        ((((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647 +
                          (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                            2147483647 +
                          (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                            2147483647) /
                          3) *
                          2 -
                          1) *
                          g,
                      ),
                    )),
              (m = hd.outlineNormal ? d : q),
              a.beginFill(q),
              0 != n
                ? (a.lineStyle(k, m), Kb.drawPolygonAt(a, h, 0, n))
                : (a.lineStyle(k, m, null, null, null, null, 1),
                  Kb.drawPolygon(a, h)),
              a.endFill(),
              hd.outlineNormal &&
                'Block' != kc.planMode &&
                hd.drawRoof(a, h, n, k, m));
        }
      };
      hd.drawSolids = function (a, b) {
        a.beginFill(K.colorWall);
        hd.outlineSolid &&
          K.colorDark != K.colorWall &&
          a.lineStyle(
            K.getStrokeWidth(K.strokeNormal, !0),
            K.colorDark,
            null,
            null,
            null,
            null,
            1,
          );
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          Kb.drawPolygon(a, d);
        }
        a.endFill();
      };
      hd.drawRoof = function (a, b, c, d, f) {
        if ('Plain' != kc.roofStyle && !sb.preview) {
          for (var h = [], k = 0; k < b.length; ) {
            var n = b[k];
            ++k;
            h.push(
              n.add(
                I.polar(
                  0.1 *
                    ((((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                      2147483647 +
                      (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647 +
                      (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1),
                  Math.PI *
                    ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
                ),
              ),
            );
          }
          k = new jf(h, !0);
          if ('Gable' == kc.roofStyle) {
            if (0 < k.ribs.length) return;
            k.addGables();
          }
          a.lineStyle(d, f);
          h = 0;
          for (k = k.bones; h < k.length; )
            ((d = k[h]),
              ++h,
              1.2 < d.slope.get_length() &&
                ((f = d.a.point),
                (b = d.b.point),
                0 != c &&
                  ((f = new I(f.x, f.y + (c - d.a.height / 3))),
                  (b = new I(b.x, b.y + (c - d.b.height / 3)))),
                a.moveTo(f.x, f.y),
                a.lineTo(b.x, b.y)));
          a.endFill();
        }
      };
      var Yk = function () {};
      g['com.watabou.mfcg.mapping.FarmPainter'] = Yk;
      Yk.__name__ = 'com.watabou.mfcg.mapping.FarmPainter';
      Yk.paint = function (a, b) {
        var c = ba.get('farm_fileds', 'Furrows');
        if ('Hidden' != c && !sb.preview) {
          a = a.get_graphics();
          var d = ba.get('outline_fields', !1);
          if ('Plain' == c) {
            a.beginFill(K.colorGreen);
            d && a.lineStyle(K.getStrokeWidth(K.strokeNormal, !0), K.colorDark);
            c = 0;
            for (var f = b.subPlots; c < f.length; )
              ((d = f[c]), ++c, Kb.drawPolygon(a, d));
          } else {
            a.lineStyle(
              K.getStrokeWidth(K.strokeNormal, !0),
              K.colorGreen,
              null,
              null,
              null,
              0,
            );
            c = 0;
            for (f = b.furrows; c < f.length; ) {
              var h = f[c];
              ++c;
              var k = h.start;
              h = h.end;
              a.moveTo(k.x, k.y);
              a.lineTo(h.x, h.y);
            }
            if (d)
              for (c = 0, f = b.subPlots; c < f.length; )
                ((d = f[c]), ++c, Kb.drawPolygon(a, d));
          }
          a.endFill();
          d = kc.planMode;
          'Block' != d &&
            'Hidden' != d &&
            hd.paint(a, b.buildings, K.colorRoof, K.colorDark, 0.3);
        }
      };
      var eh = function (a) {
        this.faces = a;
        this.edges = [];
        this.vertices = [];
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          for (var d = (c = c.halfEdge), f = !0; f; ) {
            var h = d;
            d = d.next;
            f = d != c;
            this.edges.push(h);
            Z.add(this.vertices, h.origin);
          }
        }
      };
      g['com.watabou.mfcg.mapping.Focus'] = eh;
      eh.__name__ = 'com.watabou.mfcg.mapping.Focus';
      eh.district = function (a) {
        return new eh(a.faces);
      };
      eh.prototype = {
        getBounds: function () {
          null == this.bounds && this.updateBounds();
          return this.bounds;
        },
        updateBounds: function () {
          for (
            var a = Infinity,
              b = Infinity,
              c = -Infinity,
              d = -Infinity,
              f = 0,
              h = this.vertices;
            f < h.length;

          ) {
            var k = h[f];
            ++f;
            k = k.point;
            a > k.x && (a = k.x);
            b > k.y && (b = k.y);
            c < k.x && (c = k.x);
            d < k.y && (d = k.y);
          }
          this.bounds = new na(a, b, c - a, d - b);
        },
        __class__: eh,
      };
      var $h = function (a) {
        ka.call(this);
        if (null != a) {
          var b = this.get_graphics(),
            c = 5 * K.lineInvScale;
          a = Ua.toPoly(a.faces[0].data.district.border);
          b.lineStyle(c, D.black, 0.4, !1, null, 0, 1);
          Kb.dashedPolyline(b, a, !0, [2 * c, 2 * c]);
        }
      };
      g['com.watabou.mfcg.mapping.FocusView'] = $h;
      $h.__name__ = 'com.watabou.mfcg.mapping.FocusView';
      $h.__super__ = ka;
      $h.prototype = v(ka.prototype, { __class__: $h });
      var ai = function (a) {
        ka.call(this);
        this.model = a;
        kc.planMode = sb.preview ? 'Lots' : ba.get('display_mode', 'Lots');
        kc.roofStyle = ba.get('roof_style', 'Plain');
        kc.raised = ba.get('raised', !0) && !sb.preview;
        kc.watercolours = ba.get('watercolours', !1);
        kc.drawSolid = ba.get('draw_solids', !0);
        hd.outlineNormal = ba.get('outline_buildings', !0) || sb.preview;
        hd.outlineSolid = ba.get('outline_solids', !0) || sb.preview;
        this.roads = new ie();
        this.roads.update(a);
        this.addChild(this.roads);
        for (var b = 0, c = a.canals; b < c.length; ) {
          var d = c[b];
          ++b;
          var f = new lg();
          f.update(a, d);
          this.addChild(f);
        }
        this.patches = [];
        if (null == a.focus) c = a.cells;
        else {
          b = [];
          c = 0;
          for (d = a.focus.faces; c < d.length; )
            ((f = d[c]), ++c, b.push(f.data));
          f = b;
          var h = [];
          b = 0;
          c = [];
          d = 0;
          for (var k = f; d < k.length; ) {
            var n = k[d];
            ++d;
            n.landing && c.push(n);
          }
          for (d = c; b < d.length; ) {
            n = d[b];
            ++b;
            c = 0;
            k = [];
            for (var p = (n = n.face.halfEdge), g = !0; g; ) {
              var q = p;
              p = p.next;
              g = p != n;
              null != q.twin && k.push(q.twin.face.data);
            }
            p = [];
            for (g = 0; g < k.length; )
              ((n = k[g]), ++g, n.waterbody && p.push(n));
            for (k = p; c < k.length; ) ((n = k[c]), ++c, Z.add(h, n));
          }
          c = f.concat(h);
        }
        for (b = 0; b < c.length; )
          ((n = c[b]),
            ++b,
            (d = new kc(n)),
            d.draw() && (this.patches.push(d), this.addChild(d)));
        ba.get('show_trees', !1) &&
          'Block' != kc.planMode &&
          !sb.preview &&
          this.addChild(new gc(a));
        b = new mg();
        this.addChild(b);
        null != a.wall && b.draw(a.wall, !1, a.focus);
        null != a.citadel &&
          b.draw(va.__cast(a.citadel.ward, xd).wall, !0, a.focus);
        null != a.focus && this.addChild(new $h(a.focus));
        this.mouseEnabled = !1;
      };
      g['com.watabou.mfcg.mapping.FormalMap'] = ai;
      ai.__name__ = 'com.watabou.mfcg.mapping.FormalMap';
      ai.__super__ = ka;
      ai.prototype = v(ka.prototype, {
        updateBounds: function (a, b, c, d) {
          0 < this.model.shoreE.length &&
            (null != this.water && this.removeChild(this.water),
            (this.water = new md()),
            this.drawWaterbody(this.water.get_graphics(), a, b, c, d),
            this.addChildAt(this.water, 0));
        },
        updateRoads: function () {
          this.roads.update(this.model);
        },
        updateTrees: function () {
          for (var a = 0, b = this.get_numChildren(); a < b; ) {
            var c = a++,
              d = this.getChildAt(c);
            if (d instanceof gc) {
              this.removeChild(d);
              this.addChildAt(new gc(this.model), c);
              break;
            }
          }
        },
        drawWaterbody: function (a, b, c, d, f) {
          for (
            var h = this.model.getOcean(),
              k = (b + c) / 2,
              n = (d + f) / 2,
              p = [],
              g = 0;
            g < h.length;

          ) {
            var q = h[g];
            ++g;
            -1 != this.model.horizon.indexOf(q)
              ? p.push(new I(q.x < k ? b : c, q.y < n ? d : f))
              : p.push(new I(Fc.gate(q.x, b, c), Fc.gate(q.y, d, f)));
          }
          h = p;
          ba.get('outline_water', !0) &&
            a.lineStyle(K.getStrokeWidth(K.strokeNormal, !0), K.colorDark);
          a.beginFill(K.colorWater);
          Kb.drawPolygon(a, h);
          a.endFill();
        },
        __class__: ai,
      });
      var md = function () {
        S.call(this);
        this.__drawableType = 3;
      };
      g['openfl.display.Shape'] = md;
      md.__name__ = 'openfl.display.Shape';
      md.__super__ = S;
      md.prototype = v(S.prototype, {
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new Ed(this));
          return this.__graphics;
        },
        __class__: md,
        __properties__: v(S.prototype.__properties__, {
          get_graphics: 'get_graphics',
        }),
      });
      var kc = function (a) {
        md.call(this);
        this.patch = a;
        a.view = this;
        this.g = this.get_graphics();
      };
      g['com.watabou.mfcg.mapping.PatchView'] = kc;
      kc.__name__ = 'com.watabou.mfcg.mapping.PatchView';
      kc.__super__ = md;
      kc.prototype = v(md.prototype, {
        draw: function () {
          this.g.clear();
          var a = va.getClass(this.patch.ward);
          switch (a) {
            case Pc:
            case xd:
            case Ne:
            case he:
              var b = K.colorRoof,
                c = K.colorDark;
              if (kc.watercolours) {
                var d = this.patch.ward.getColor();
                b = d;
                c = Gc.lerp(c, d, 0.3);
              }
              switch (a) {
                case Pc:
                  var f = va.__cast(this.patch.ward, Pc).group;
                  if (f.core == this.patch.face)
                    for (a = 0, d = f.blocks; a < d.length; ) {
                      var h = d[a];
                      ++a;
                      var k = h == f.church;
                      switch (kc.planMode) {
                        case 'Block':
                          h = [h.shape];
                          break;
                        case 'Complex':
                          null == h.buildings && h.createBuildings();
                          h = h.buildings;
                          break;
                        case 'Lots':
                          h = h.lots;
                          break;
                        case 'Simple':
                          null == h.rects && h.createRects();
                          h = h.rects;
                          break;
                        default:
                          h = [];
                      }
                      hd.paint(this.g, h, b, c, null, k);
                    }
                  break;
                case xd:
                  K.colorRoad != K.colorPaper &&
                    (this.g.beginFill(K.colorRoad),
                    Kb.drawPolygon(this.g, this.patch.shape));
                  a = va.__cast(this.patch.ward, xd).building;
                  hd.paint(this.g, [a], b, c, 1, !0);
                  break;
                case Ne:
                  a = va.__cast(this.patch.ward, Ne).building;
                  hd.paint(this.g, a, b, c, 1, !0);
                  break;
                case he:
                  ((a = va.__cast(this.patch.ward, he)),
                    'Block' != kc.planMode &&
                      hd.paint(this.g, [a.monument], b, c, 0, !0));
              }
              break;
            case yd:
              Yk.paint(this, this.patch.ward);
              break;
            case lf:
              b = ba.get('outline_water', !0);
              a = 0;
              for (d = va.__cast(this.patch.ward, lf).piers; a < d.length; )
                ((c = d[a]), ++a, this.drawPier(c, b));
              break;
            case ce:
              this.drawGreen(va.__cast(this.patch.ward, ce).green);
              break;
            default:
              return !1;
          }
          return !0;
        },
        drawGreen: function (a) {
          this.g.beginFill(K.colorGreen);
          Kb.drawPolygon(this.g, a);
        },
        drawPier: function (a, b) {
          var c = a[0],
            d = a[1];
          if (b)
            if (((b = K.getStrokeWidth(K.strokeNormal, !0)), 1.2 < b)) {
              this.g.lineStyle(b, K.colorDark, null, null, null, 0);
              var f = this.g;
              f.moveTo(c.x, c.y);
              f.lineTo(d.x, d.y);
            } else {
              c = c.subtract(d);
              c.normalize(b);
              this.g.lineStyle(1.2 + b, K.colorDark, null, null, null, 0);
              f = this.g;
              d = a[0];
              var h = a[1];
              f.moveTo(d.x, d.y);
              f.lineTo(h.x, h.y);
              this.g.lineStyle(1.2 - b, K.colorPaper, null, null, null, 0);
              f = this.g;
              d = a[0].add(c);
              h = a[1].add(c);
              f.moveTo(d.x, d.y);
              f.lineTo(h.x, h.y);
            }
          else
            (this.g.lineStyle(1.2, K.colorPaper, null, null, null, 0),
              (f = this.g),
              f.moveTo(c.x, c.y),
              f.lineTo(d.x, d.y));
        },
        __class__: kc,
      });
      var lg = function () {
        ka.call(this);
      };
      g['com.watabou.mfcg.mapping.RiverView'] = lg;
      lg.__name__ = 'com.watabou.mfcg.mapping.RiverView';
      lg.getSegments = function (a, b) {
        for (var c = [], d = null, f = 0, h = a.length; f < h; ) {
          var k = f++,
            n = a[k];
          -1 != b.edges.indexOf(n) || -1 != b.edges.indexOf(n.twin)
            ? null == d
              ? ((d = [n]), c.push(d), 0 < k && d.splice(0, 0, a[k - 1]))
              : d.push(n)
            : (null != d && d.push(n), (d = null));
        }
        return c;
      };
      lg.__super__ = ka;
      lg.prototype = v(ka.prototype, {
        update: function (a, b) {
          var c = 0 < a.shoreE.length,
            d = [],
            f = b.bridges,
            h = f;
          for (f = f.keys(); f.hasNext(); ) {
            var k = f.next();
            h.get(k);
            var n = k;
            d.push(n.point);
          }
          h = d;
          if (null != a.focus)
            for (f = lg.getSegments(b.course, a.focus), d = 0; d < f.length; )
              ((k = f[d]),
                ++d,
                (k = Ua.toPolyline(k)),
                (k = Hf.render(k, !1, 3, h)),
                this.drawCourse(k, b.width));
          else
            ((k = Ua.toPolyline(b.course)),
              c && (k[0] = qa.lerp(k[0], k[1])),
              (k = Hf.render(k, !1, 3, h)),
              this.drawCourse(k, b.width));
          !c ||
            (null != a.focus &&
              -1 == a.focus.vertices.indexOf(b.course[0].origin)) ||
            this.drawMouth(b);
          c = (b.width + 1.2) / 2;
          h = f = b.bridges;
          for (f = f.keys(); f.hasNext(); )
            if (
              ((k = f.next()),
              (d = h.get(k)),
              (n = k),
              (k = d),
              null == a.focus || -1 != a.focus.vertices.indexOf(n))
            ) {
              d = n.point;
              var p = Ua.indexByOrigin(b.course, n),
                g = b.course[p];
              g = g.next.origin.point.subtract(g.origin.point);
              0 < p &&
                ((p = b.course[p - 1]),
                (p = p.next.origin.point.subtract(p.origin.point)),
                (g.x += p.x),
                (g.y += p.y));
              if (null == k)
                ((k = new I(-g.y, g.x)),
                  (n = c),
                  null == n && (n = 1),
                  (k = k.clone()),
                  k.normalize(n),
                  this.drawBridge(d.subtract(k), d.add(k), 1.2));
              else {
                n = Ua.indexByOrigin(k, n);
                if (0 == n) {
                  g = new I(-g.y, g.x);
                  p = c;
                  null == p && (p = 1);
                  g = g.clone();
                  g.normalize(p);
                  p = d.add(g);
                  var q = d.subtract(g);
                  k = k[n];
                  k = k.next.origin.point.subtract(k.origin.point);
                  n = c;
                  null == n && (n = 1);
                  k = k.clone();
                  k.normalize(n);
                  g = d.add(k);
                  d = I.distance(g, p) > I.distance(g, q) ? p : q;
                } else
                  ((p = k[n - 1]),
                    (p = p.next.origin.point.subtract(p.origin.point)),
                    (q = k[n]),
                    (p = p.add(q.next.origin.point.subtract(q.origin.point))),
                    (g = Math.abs(
                      (p.x * g.y - p.y * g.x) / p.get_length() / g.get_length(),
                    )),
                    (p = c / g),
                    (g = k[n]),
                    (g = g.next.origin.point.subtract(g.origin.point)),
                    (q = p),
                    null == q && (q = 1),
                    (g = g.clone()),
                    g.normalize(q),
                    (g = d.add(g)),
                    (k = k[n - 1]),
                    (k = k.next.origin.point.subtract(k.origin.point)),
                    (n = p),
                    null == n && (n = 1),
                    (k = k.clone()),
                    k.normalize(n),
                    (d = d.subtract(k)));
                this.drawBridge(g, d, 2);
              }
            }
        },
        drawCourse: function (a, b) {
          var c = this.get_graphics();
          ba.get('outline_water', !0)
            ? (c.lineStyle(b, K.colorDark, null, !1, null, 0),
              Kb.drawPolyline(c, a),
              c.lineStyle(
                b - 2 * K.getStrokeWidth(K.strokeNormal, !0),
                K.colorWater,
              ))
            : c.lineStyle(b, K.colorWater);
          Kb.drawPolyline(c, a);
          c.endFill();
        },
        drawBridge: function (a, b, c) {
          var d = this.get_graphics();
          if (ba.get('outline_roads', !0) || ba.get('outline_water', !0)) {
            var f = K.getStrokeWidth(K.strokeNormal, !0);
            d.lineStyle(c + f, K.colorDark, null, !1, null, 0);
            d.moveTo(a.x, a.y);
            d.lineTo(b.x, b.y);
            d.lineStyle(c - f, K.colorRoad);
          } else d.lineStyle(c, K.colorRoad);
          d.moveTo(a.x, a.y);
          d.lineTo(b.x, b.y);
        },
        drawMouth: function (a) {
          var b = K.getStrokeWidth(K.strokeNormal, !0),
            c = a.width - b,
            d = a.course[0].origin.point,
            f = a.city.shore,
            h = f.indexOf(d),
            k = a.course[0],
            n = k.next.origin.point.subtract(k.origin.point),
            p = new I(0.5 * n.x, 0.5 * n.y);
          k = a.course[0];
          var g = qa.lerp(k.origin.point, k.next.origin.point, 0.5);
          n = new I(-p.y, p.x);
          var q = c / 2;
          null == q && (q = 1);
          n = n.clone();
          n.normalize(q);
          a = g.add(n);
          k = qa.lerp(f[(h + f.length - 1) % f.length], d);
          var m = a.subtract(p),
            u = qa.lerp(k, d);
          n = new I(-p.y, p.x);
          q = c / 2;
          null == q && (q = 1);
          n = n.clone();
          n.normalize(q);
          c = g.subtract(n);
          p = c.subtract(p);
          n = qa.lerp(f[(h + 1) % f.length], d);
          g = qa.lerp(n, d);
          q = this.get_graphics();
          q.beginFill(K.colorWater);
          q.moveTo(a.x, a.y);
          q.cubicCurveTo(m.x, m.y, u.x, u.y, k.x, k.y);
          kf.isConvexVertexi(f, h) && q.lineTo(d.x, d.y);
          q.lineTo(n.x, n.y);
          q.cubicCurveTo(g.x, g.y, p.x, p.y, c.x, c.y);
          q.endFill();
          ba.get('outline_water', !0) &&
            (q.lineStyle(b, K.colorDark),
            q.moveTo(a.x, a.y),
            q.cubicCurveTo(m.x, m.y, u.x, u.y, k.x, k.y),
            q.moveTo(c.x, c.y),
            q.cubicCurveTo(p.x, p.y, g.x, g.y, n.x, n.y),
            q.moveTo(0, 0),
            q.endFill());
        },
        __class__: lg,
      });
      var ie = function () {
        ka.call(this);
        this.outline = new ka();
        this.addChild(this.outline);
        this.fill = new ka();
        this.addChild(this.fill);
      };
      g['com.watabou.mfcg.mapping.RoadsView'] = ie;
      ie.__name__ = 'com.watabou.mfcg.mapping.RoadsView';
      ie.smoothRoad = function (a, b) {
        a = Hf.render(a, !1, 3, b);
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          ie.cutCorner(a, d, 1);
        }
        return a;
      };
      ie.cutCorner = function (a, b, c) {
        var d = a.indexOf(b);
        if (-1 != d && 0 != d && d != a.length - 1) {
          var f = a[d - 1],
            h = a[d + 1],
            k = I.distance(f, b),
            n = I.distance(b, h);
          k <= c / 2 ||
            n <= c / 2 ||
            ((f = qa.lerp(f, b, (k - c) / k)),
            (b = qa.lerp(h, b, (n - c) / n)),
            a.splice(d, 1),
            a.splice(d, 0, b),
            a.splice(d, 0, f));
        }
      };
      ie.getSegments = function (a, b) {
        for (var c = [], d = null, f = 0, h = a.length; f < h; ) {
          var k = f++,
            n = a[k];
          -1 != b.edges.indexOf(n) || -1 != b.edges.indexOf(n.twin)
            ? null == d
              ? ((d = [n]), c.push(d), 0 < k && d.splice(0, 0, a[k - 1]))
              : d.push(n)
            : (null != d && d.push(n), (d = null));
        }
        return c;
      };
      ie.__super__ = ka;
      ie.prototype = v(ka.prototype, {
        update: function (a) {
          this.outline.removeChildren();
          this.outline.get_graphics().clear();
          this.fill.removeChildren();
          this.fill.get_graphics().clear();
          var b = 'Hidden' != ba.get('display_mode', 'Lots'),
            c = ba.get('outline_roads', !0)
              ? K.getStrokeWidth(K.strokeNormal, !0)
              : 0;
          if (null == a.focus)
            for (var d = 0, f = a.arteries; d < f.length; ) {
              var h = f[d];
              ++d;
              this.drawRoad(h, c, b);
            }
          else
            for (d = 0, f = a.arteries; d < f.length; ) {
              h = f[d];
              ++d;
              for (var k = 0, n = ie.getSegments(h, a.focus); k < n.length; )
                ((h = n[k]), ++k, this.drawRoad(h, c, b));
            }
          if (K.colorRoad != K.colorPaper)
            for (
              h = this.fill.get_graphics(), d = 0, f = a.cells;
              d < f.length;

            )
              ((k = f[d]),
                ++d,
                k.ward instanceof he &&
                  ((k = va.__cast(k.ward, he).space),
                  h.beginFill(K.colorRoad),
                  h.lineStyle(2, K.colorRoad),
                  Kb.drawPolygon(h, k),
                  h.endFill()));
          if (ba.get('show_alleys', !1) && !sb.preview)
            for (
              h = 0 < c ? this.drawOutline(c) : this.drawFill(0.6),
                d = 0,
                f = a.districts;
              d < f.length;

            )
              for (n = f[d], ++d, k = 0, n = n.groups; k < n.length; ) {
                var p = n[k];
                ++k;
                if (null == a.focus || Z.intersects(p.faces, a.focus.faces))
                  if (!p.urban || 0 == c || !b) {
                    for (var g = 0, q = p.alleys; g < q.length; ) {
                      var m = q[g];
                      ++g;
                      Kb.drawPolyline(h, m);
                    }
                    g = 0;
                    for (p = p.border; g < p.length; )
                      ((m = p[g]),
                        ++g,
                        null == m.data &&
                          m.twin.face.data.ward instanceof Pc &&
                          ((q = m.origin.point),
                          (m = m.next.origin.point),
                          h.moveTo(q.x, q.y),
                          h.lineTo(m.x, m.y)));
                  }
              }
        },
        drawRoad: function (a, b, c) {
          for (
            var d = Ua.toPolyline(a), f = [], h = [], k = 0, n = a.length;
            k < n;

          ) {
            for (
              var p = k++, g = a[p].origin, q = !0, m = !0, u = 0, r = g.edges;
              u < r.length;

            ) {
              var l = r[u];
              ++u;
              l.face.data.withinCity ? (m = !1) : (q = !1);
            }
            m || f.push(g.point);
            q || h.push(p);
          }
          k = ie.smoothRoad(d, f);
          a = this.drawFill(2);
          Kb.drawPolyline(a, k);
          if (0 < b)
            if (((a = this.drawOutline(2 + 2 * b)), c)) {
              b = [];
              k = 0;
              for (n = h.length; k < n; )
                ((p = k++),
                  (0 != p && h[p] - 1 == h[p - 1]) || b.push([]),
                  b[b.length - 1].push(h[p]));
              for (k = 0; k < b.length; ) {
                h = b[k];
                ++k;
                0 < h[0] && h.unshift(h[0] - 1);
                h[h.length - 1] < d.length - 1 && h.push(h[h.length - 1] + 1);
                n = [];
                for (u = 0; u < h.length; ) ((p = h[u]), ++u, n.push(d[p]));
                h = ie.smoothRoad(n, f);
                Kb.drawPolyline(a, h);
              }
            } else Kb.drawPolyline(a, k);
        },
        drawOutline: function (a) {
          var b = new ka();
          this.outline.addChild(b);
          b = b.get_graphics();
          b.lineStyle(a, K.colorDark, null, null, null, 0);
          return b;
        },
        drawFill: function (a) {
          var b = new ka();
          this.fill.addChild(b);
          b = b.get_graphics();
          b.lineStyle(a, K.colorRoad);
          return b;
        },
        __class__: ie,
      });
      var K = function () {};
      g['com.watabou.mfcg.mapping.Style'] = K;
      K.__name__ = 'com.watabou.mfcg.mapping.Style';
      K.getStrokeWidth = function (a, b) {
        null == b && (b = !0);
        K.thinLines && (a /= 3);
        b && (a *= K.lineInvScale);
        return a;
      };
      K.getTint = function (a, b, c) {
        switch (K.tintMethod) {
          case 'Brightness':
            return K.brightness(a, b, c);
          case 'Spectrum':
            return K.spectrum(a, b, c);
          default:
            return K.overlay(a, b, c);
        }
      };
      K.spectrum = function (a, b, c) {
        a = Gc.rgb2hsv(a);
        return Gc.hsv(
          a.x -
            ((((360 * (c - 1)) / c) * K.tintStrength) / 100) *
              (b / (c - 1) - 0.5),
          a.y,
          a.z,
        );
      };
      K.brightness = function (a, b, c) {
        a = Gc.rgb2hsv(a);
        return Gc.hsv(
          a.x,
          a.y,
          a.z +
            ((Math.min(a.z, 1 - a.z) * K.tintStrength) / 50) *
              (b / (c - 1) - 0.5),
        );
      };
      K.overlay = function (a, b, c) {
        var d = Gc.rgb2hsv(a);
        return Gc.lerp(
          a,
          Gc.hsv(d.x + (360 * b) / c, d.y, d.z),
          K.tintStrength / 100,
        );
      };
      K.setPalette = function (a, b) {
        null == b && (b = !1);
        null != a &&
          ((K.colorPaper = a.getColor('colorPaper')),
          (K.colorLight = a.getColor('colorLight')),
          (K.colorDark = a.getColor('colorDark')),
          (K.colorRoof = a.getColor('colorRoof', K.colorLight)),
          (K.colorWater = a.getColor('colorWater', K.colorPaper)),
          (K.colorGreen = a.getColor('colorGreen', K.colorPaper)),
          (K.colorRoad = a.getColor('colorRoad', K.colorPaper)),
          (K.colorWall = a.getColor('colorWall', K.colorDark)),
          (K.colorTree = a.getColor('colorTree', K.colorDark)),
          (K.colorLabel = a.getColor('colorLabel', K.colorDark)),
          (K.tintMethod = a.getString('tintMethod', K.tintMethods[0])),
          (K.tintStrength = a.getInt('tintStrength', 50)),
          (K.weathering = a.getInt('weathering', 20)),
          b && ba.set('colors', a.data()));
      };
      K.fillForm = function (a) {
        a.addTab('Colors');
        a.addColor('colorPaper', 'Paper', K.colorPaper);
        a.addColor('colorDark', 'Ink', K.colorDark);
        a.addColor('colorRoof', 'Roofs', K.colorRoof);
        a.addColor('colorWater', 'Water', K.colorWater);
        a.addColor('colorGreen', 'Greens', K.colorGreen);
        a.addColor('colorRoad', 'Roads', K.colorRoad);
        a.addColor('colorWall', 'Walls', K.colorWall);
        a.addColor('colorTree', 'Trees', K.colorTree);
        a.addColor('colorLabel', 'Labels', K.colorLabel);
        a.addColor('colorLight', 'Elements', K.colorLight);
        a.addTab('Tints');
        a.addEnum('tintMethod', 'Method', K.tintMethods, K.tintMethod);
        a.addInt('tintStrength', 'Strength(%)', K.tintStrength, 0, 100);
        a.addInt('weathering', 'Weathering(%)', K.weathering, 0, 100);
      };
      K.restore = function () {
        K.thinLines = ba.get('thin_lines', !0) || sb.preview;
        var a = ba.get('colors');
        null != a && K.setPalette(Xc.fromData(a), !1);
      };
      var gc = function (a) {
        var b = this;
        ka.call(this);
        this.trees = [];
        this.treeGroups = [];
        this.addCityTrees(a);
        ba.get('show_forests', !1) && this.addForests(a);
        var c = ba.get('outline_trees', !0);
        a = function (a, d) {
          var f = b.addLayer();
          if (c) {
            f.lineStyle(2 * K.getStrokeWidth(K.strokeNormal, !0), K.colorDark);
            for (var h = 0; h < d.length; ) {
              var k = d[h];
              ++h;
              Kb.drawPolygon(f, k);
            }
            for (h = 0; h < a.length; )
              ((k = a[h]), ++h, Kb.drawPolygonAt(f, k.crown, k.pos.x, k.pos.y));
            f.endFill();
          }
          f.beginFill(K.colorTree);
          for (h = 0; h < d.length; ) ((k = d[h]), ++h, Kb.drawPolygon(f, k));
          for (h = 0; h < a.length; )
            ((k = a[h]),
              ++h,
              f.beginFill(K.colorTree),
              Kb.drawPolygonAt(f, k.crown, k.pos.x, k.pos.y));
        };
        a(this.trees, []);
        for (var d = 0, f = this.treeGroups; d < f.length; ) {
          var h = f[d];
          ++d;
          a(h.trees, h.polies);
        }
        this.mouseChildren = this.mouseEnabled = !1;
      };
      g['com.watabou.mfcg.mapping.TreesLayer'] = gc;
      gc.__name__ = 'com.watabou.mfcg.mapping.TreesLayer';
      gc.getForestFaces = function (a) {
        if (null == a.focus) return a.dcel.faces;
        var b = [],
          c = 0;
        for (a = a.focus.faces; c < a.length; ) {
          var d = a[c];
          ++c;
          d = d.getNeighbours();
          for (var f = 0; f < d.length; ) {
            var h = d[f];
            ++f;
            Z.add(b, h);
            Z.addAll(b, h.getNeighbours());
          }
        }
        return b;
      };
      gc.getForestOutlines = function (a) {
        for (var b = [], c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.data.ward instanceof ng && c.push(f);
        }
        for (; 0 < c.length; )
          ((a = Ic.floodFillEx(c[0], function (a) {
            return -1 != c.indexOf(a.twin.face)
              ? null != a.data
                ? a.data == Tc.ROAD
                : !0
              : !1;
          })),
            b.push(Ic.outline(a)),
            Z.removeAll(c, a));
        return b;
      };
      gc.getTree = function () {
        if (20 <= gc.cache.length) return Z.random(gc.cache);
        var a =
          1.5 *
          Math.pow(
            1.5,
            (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
        a = gc.getCrown(a);
        gc.cache.push(a);
        return a;
      };
      gc.getCrown = function (a) {
        for (var b = [], c = 0; 6 > c; ) {
          var d = c++;
          d =
            (2 *
              Math.PI *
              (d +
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3)) /
            6;
          b.push(
            I.polar(
              a *
                (1 -
                  (4 / 6) *
                    Math.abs(
                      ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647 +
                        (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647 +
                        (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647 +
                        (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    )),
              d,
            ),
          );
        }
        return mf.bloat(b, a * Math.sin((3 * Math.PI) / 6));
      };
      gc.resetForests = function () {
        gc.savedKey = null;
      };
      gc.__super__ = ka;
      gc.prototype = v(ka.prototype, {
        addLayer: function () {
          var a = new md();
          this.addChild(a);
          return a.get_graphics();
        },
        addCityTrees: function (a) {
          if (null == a.focus) {
            var b = 0;
            for (a = a.cells; b < a.length; ) {
              var c = a[b];
              ++b;
              this.addTrees(c.ward.spawnTrees());
            }
          } else
            for (b = 0, a = a.focus.faces; b < a.length; )
              ((c = a[b]), ++b, this.addTrees(c.data.ward.spawnTrees()));
        },
        addForests: function (a) {
          var b = null == a.focus ? a.dcel.faces : a.focus.faces;
          if (b == gc.savedKey) this.treeGroups = gc.savedGroups;
          else {
            for (
              var c = gc.getForestOutlines(gc.getForestFaces(a)), d = [], f = 0;
              f < c.length;

            ) {
              var h = c[f];
              ++f;
              for (var k = [], n = 0; n < h.length; ) {
                var p = h[n];
                ++n;
                var g = Ua.toPoly(p);
                g = uc.simpleInset(g, this.getForestInsets(a, p));
                g = uc.resampleClosed(g, 20);
                g = uc.fractalizeClosed(g, 2, 0.5);
                g = Me.smoothClosed(g, 5);
                k.push(g);
              }
              d.push({ trees: [], polies: k });
            }
            this.treeGroups = d;
            a = a.getViewport().clone();
            a.inflate(40, 40);
            d = 0;
            for (f = this.treeGroups; d < f.length; )
              for (c = f[d], ++d, k = 0, n = c.polies; k < n.length; )
                for (
                  g = n[k], ++k, g = uc.resampleClosed(g, 3), h = 0;
                  h < g.length;

                )
                  if (((p = g[h]), ++h, a.containsPoint(p))) {
                    var q = I.polar(
                      1.5 *
                        ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647),
                      2 *
                        Math.PI *
                        ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647),
                    );
                    p.x += q.x;
                    p.y += q.y;
                    c.trees.push({ pos: p, crown: gc.getTree() });
                  }
            gc.savedKey = b;
            gc.savedGroups = this.treeGroups;
          }
        },
        getForestInsets: function (a, b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            null == f
              ? c.push(0)
              : f.data == Tc.CANAL
                ? c.push((20 + a.getCanalWidth(f)) / 2)
                : c.push(10);
          }
          return c;
        },
        addTrees: function (a) {
          if (null != a)
            for (var b = 0; b < a.length; ) {
              var c = a[b];
              ++b;
              this.trees.push({ pos: c, crown: gc.getTree() });
            }
        },
        __class__: gc,
      });
      var mg = function () {
        ka.call(this);
        this.towers = ba.get('towers', 'Round');
        this.outline =
          ba.get('outline_solids', !0) && K.colorWall != K.colorDark;
        this.stroke = K.getStrokeWidth(K.strokeNormal, !0);
      };
      g['com.watabou.mfcg.mapping.WallsView'] = mg;
      mg.__name__ = 'com.watabou.mfcg.mapping.WallsView';
      mg.__super__ = ka;
      mg.prototype = v(ka.prototype, {
        draw: function (a, b, c) {
          for (
            var d = pc.TOWER_RADIUS,
              f = a.edges.length,
              h = new pa(),
              k = function (b, d) {
                if (null == c || -1 != c.vertices.indexOf(b)) {
                  var k = b.point,
                    n = Ua.indexByOrigin(a.edges, b),
                    p = a.edges[(n + f - 1) % f];
                  n = a.edges[n];
                  var m = p.next.origin.point.subtract(p.origin.point),
                    g = -d / 2;
                  null == g && (g = 1);
                  m = m.clone();
                  m.normalize(g);
                  p = k.add(m);
                  m = n.next.origin.point.subtract(n.origin.point);
                  g = d / 2;
                  null == g && (g = 1);
                  m = m.clone();
                  m.normalize(g);
                  d = k.add(m);
                  h.set(b, [p, d]);
                }
              },
              n = 0,
              p = a.gates;
            n < p.length;

          ) {
            var g = p[n];
            ++n;
            k(g, 2);
          }
          n = a.watergates;
          for (p = n.keys(); p.hasNext(); ) {
            g = p.next();
            var q = n.get(g);
            k(g, q.width);
          }
          k = this.get_graphics();
          k.lineStyle(pc.THICKNESS, K.colorWall);
          n = 0;
          for (p = f; n < p; )
            if (
              ((q = n++),
              (g = a.edges[q]),
              a.segments[q] &&
                (null == c ||
                  -1 != c.edges.indexOf(g) ||
                  -1 != c.edges.indexOf(g.twin)))
            ) {
              var m = g.origin;
              q = h.h[m.__id__];
              if (null == q) q = m.point;
              else {
                m = g.next.origin.point.subtract(g.origin.point);
                var u = d;
                null == u && (u = 1);
                m = m.clone();
                m.normalize(u);
                q = q[1].add(m);
              }
              u = g.next.origin;
              m = h.h[u.__id__];
              null == m
                ? (g = u.point)
                : ((g = g.next.origin.point.subtract(g.origin.point)),
                  (u = -d),
                  null == u && (u = 1),
                  (g = g.clone()),
                  g.normalize(u),
                  (g = m[0].add(g)));
              this.outline &&
                (k.lineStyle(pc.THICKNESS + this.stroke, K.colorDark),
                k.moveTo(q.x, q.y),
                k.lineTo(g.x, g.y),
                k.lineStyle(pc.THICKNESS - this.stroke, K.colorWall));
              k.moveTo(q.x, q.y);
              k.lineTo(g.x, g.y);
            }
          b = b ? pc.LTOWER_RADIUS : d;
          n = 0;
          for (p = a.towers; n < p.length; )
            ((d = p[n]),
              ++n,
              (null != c && -1 == c.vertices.indexOf(d)) ||
                this.drawNormalTower(a, d.point, b));
          for (g = h.iterator(); g.hasNext(); )
            ((b = g.next()), this.drawGate(b));
        },
        drawNormalTower: function (a, b, c) {
          var d = !0;
          if ('Round' != this.towers) {
            var f = a.shape;
            var h = f.length,
              k = f.indexOf(b);
            a.bothSegments(k)
              ? ((d = f[(k + 1) % h]),
                (f = f[(k + h - 1) % h].subtract(b)),
                f.normalize(1),
                (h = d.subtract(b)),
                h.normalize(1),
                (d = 0 > f.x * h.y - f.y * h.x),
                (f = f.add(h)),
                (h = d ? -1 : 1),
                null == h && (h = 1),
                (f = f.clone()),
                f.normalize(h))
              : (a.segments[k]
                  ? (f = f[k < f.length - 1 ? k + 1 : 0].subtract(f[k]))
                  : ((h = (k + h - 1) % h),
                    (f = f[h < f.length - 1 ? h + 1 : 0].subtract(f[h]))),
                (h = !0),
                null == h && (h = !1),
                f.setTo(f.y, -f.x),
                h && f.normalize(1));
          } else f = mg.drawNormalTower_unit;
          this.drawTower(b, f, d, c);
        },
        drawTower: function (a, b, c, d) {
          c = new ka();
          var f = c.get_graphics();
          f.beginFill(K.colorWall);
          this.outline && f.lineStyle(this.stroke, K.colorDark);
          switch (this.towers) {
            case 'Open':
              d *= 0.7;
              var h = [],
                k = I.polar(d, (-4 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (-3 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (-2 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (-1 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (0 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, Math.PI / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (2 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (3 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              k = I.polar(d, (4 * Math.PI) / 8);
              h.push(new I(k.x + 0.5 * d, k.y));
              h.push(new I(-1.5 * d, d));
              h.push(new I(-1.5 * d, -d));
              Kb.drawPolygon(f, h);
              break;
            case 'Square':
              d *= 0.9;
              f.drawRect(0.5 * (d - pc.THICKNESS / 2) - d, -d, 2 * d, 2 * d);
              break;
            default:
              f.drawCircle(0, 0, d);
          }
          c.set_rotation((Math.atan2(b.y, b.x) / Math.PI) * 180);
          c.set_x(a.x);
          c.set_y(a.y);
          this.addChild(c);
        },
        drawGate: function (a) {
          var b = 2 * pc.TOWER_RADIUS,
            c = a[1].subtract(a[0]),
            d = c.get_length();
          a = a[0];
          a = new I(a.x + 0.5 * c.x, a.y + 0.5 * c.y);
          c = Math.atan2(c.y, c.x);
          var f = new ka(),
            h = f.get_graphics();
          h.beginFill(K.colorWall);
          this.outline && h.lineStyle(this.stroke, K.colorDark);
          h.drawRect(-d / 2, -b / 2, -b, b);
          h.drawRect(d / 2, -b / 2, b, b);
          f.set_rotation((c / Math.PI) * 180);
          f.set_x(a.x);
          f.set_y(a.y);
          this.addChild(f);
        },
        __class__: mg,
      });
      var Fd = function (a, b) {
        this.export = this.style = null;
        this.coastDir = NaN;
        this.size = a;
        this.seed = b;
      };
      g['com.watabou.mfcg.model.Blueprint'] = Fd;
      Fd.__name__ = 'com.watabou.mfcg.model.Blueprint';
      Fd.create = function (a, b) {
        b = new Fd(a, b);
        b.name = null;
        b.pop = 0;
        b.greens = ba.get('green', !1);
        b.random = ba.get('random', !0);
        if (b.random) {
          var c = (a + 30) / 80;
          null == c && (c = 0.5);
          b.walls =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          c = a / 80;
          null == c && (c = 0.5);
          b.shanty =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          c = 0.5 + a / 100;
          null == c && (c = 0.5);
          b.citadel =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          c = b.walls ? a / (a + 30) : 0.5;
          null == c && (c = 0.5);
          b.inner =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          c = 0.9;
          null == c && (c = 0.5);
          b.plaza =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          c = a / 18;
          null == c && (c = 0.5);
          b.temple =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          c = 0.6666666666666666;
          null == c && (c = 0.5);
          b.river =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
          b.coast =
            0.5 > (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647;
        } else
          ((b.citadel = ba.get('citadel', !0)),
            (b.inner = ba.get('urban_castle', !1)),
            (b.plaza = ba.get('plaza', !0)),
            (b.temple = ba.get('temple', !0)),
            (b.walls = ba.get('walls', !0)),
            (b.shanty = ba.get('shantytown', !1)),
            (b.coast = ba.get('coast', !0)),
            (b.river = ba.get('river', !0)));
        b.hub = ba.get('hub', !1);
        b.gates = ba.get('gates', -1);
        return b;
      };
      Fd.similar = function (a) {
        var b = Fd.create(a.size, a.seed);
        b.name = a.name;
        return b;
      };
      Fd.fromURL = function () {
        var a = Aa.getInt('size', 0),
          b = Aa.getInt('seed', C.seed);
        if (0 == a || 0 == b) return null;
        a = new Fd(a, b);
        a.name = Aa.get('name');
        a.pop = Aa.getInt('population', 0);
        a.citadel = Aa.getFlag('citadel', !0);
        a.inner = Aa.getFlag('urban_castle', !1);
        a.plaza = Aa.getFlag('plaza', !0);
        a.temple = Aa.getFlag('temple', !0);
        a.walls = Aa.getFlag('walls', !0);
        a.shanty = Aa.getFlag('shantytown', !1);
        a.river = Aa.getFlag('river', !1);
        a.coast = Aa.getFlag('coast', !0);
        a.greens = Aa.getFlag('greens', !1);
        a.hub = Aa.getFlag('hub', !1);
        a.gates = Aa.getInt('gates', -1);
        a.coastDir = parseFloat(Aa.get('sea', '0.0'));
        a.export = Aa.get('export');
        a.style = Aa.get('style');
        return a;
      };
      Fd.prototype = {
        updateURL: function () {
          Aa.reset();
          Aa.set('size', this.size);
          Aa.set('seed', this.seed);
          null != this.name && Aa.set('name', this.name);
          0 < this.pop && Aa.set('population', this.pop);
          Aa.setFlag('citadel', this.citadel);
          Aa.setFlag('urban_castle', this.inner);
          Aa.setFlag('plaza', this.plaza);
          Aa.setFlag('temple', this.temple);
          Aa.setFlag('walls', this.walls);
          Aa.setFlag('shantytown', this.shanty);
          Aa.setFlag('coast', this.coast);
          Aa.setFlag('river', this.river);
          Aa.setFlag('greens', this.greens);
          this.hub ? Aa.setFlag('hub') : Aa.set('gates', this.gates);
          this.coast && Aa.set('sea', this.coastDir);
        },
        __class__: Fd,
      };
      var Jd = function () {};
      g['com.watabou.mfcg.model.Building'] = Jd;
      Jd.__name__ = 'com.watabou.mfcg.model.Building';
      Jd.create = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = !1);
        null == c && (c = !1);
        var h = Math.sqrt(b);
        b = I.distance(a[0], a[1]);
        var k = I.distance(a[1], a[2]),
          n = I.distance(a[2], a[3]),
          p = I.distance(a[3], a[0]);
        b = Math.ceil(Math.min(b, n) / h);
        h = Math.ceil(Math.min(k, p) / h);
        if (1 >= b || 1 >= h) return null;
        c = d
          ? Jd.getPlanSym(b, h)
          : c
            ? Jd.getPlanFront(b, h)
            : Jd.getPlan(b, h);
        for (d = k = 0; d < c.length; ) ((p = c[d]), ++d, p && ++k);
        if (k >= b * h) return null;
        a = Zk.grid(a, b, h, f);
        d = [];
        f = 0;
        for (b = a.length; f < b; ) ((h = f++), c[h] && d.push(a[h]));
        return Jd.circumference(d);
      };
      Jd.getPlan = function (a, b, c) {
        null == c && (c = 0.5);
        for (var d = a * b, f = [], h = 0, k = d; h < k; ) (h++, f.push(!1));
        var n = Math.floor(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * a,
          ),
          p = Math.floor(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * b,
          );
        f[n + p * a] = !0;
        --d;
        k = h = n;
        for (var g = p, q = p; ; ) {
          n = Math.floor(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * a,
          );
          p = Math.floor(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * b,
          );
          var m = n + p * a;
          !f[m] &&
            ((0 < n && f[m - 1]) ||
              (0 < p && f[m - a]) ||
              (n < a - 1 && f[m + 1]) ||
              (p < b - 1 && f[m + a])) &&
            (h > n && (h = n),
            k < n && (k = n),
            g > p && (g = p),
            q < p && (q = p),
            (f[m] = !0),
            --d);
          0 < h || k < a - 1 || 0 < g || q < b - 1
            ? (n = !0)
            : 0 < d
              ? ((n = c),
                null == n && (n = 0.5),
                (n =
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 <
                  n))
              : (n = !1);
          if (!n) break;
        }
        return f;
      };
      Jd.getPlanFront = function (a, b) {
        for (var c = a * b, d = [], f = 0, h = c; f < h; ) {
          var k = f++;
          d.push(k < a);
        }
        c -= a;
        for (f = 0; ; ) {
          h = Math.floor(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * a,
          );
          k = Math.floor(
            1 +
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                (b - 1),
          );
          var n = h + k * a;
          !d[n] &&
            ((0 < h && d[n - 1]) ||
              (0 < k && d[n - a]) ||
              (h < a - 1 && d[n + 1]) ||
              (k < b - 1 && d[n + a])) &&
            (f < k && (f = k), (d[n] = !0), --c);
          f >= b - 1
            ? 0 < c
              ? ((h = 0.5),
                null == h && (h = 0.5),
                (h =
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 <
                  h))
              : (h = !1)
            : (h = !0);
          if (!h) break;
        }
        return d;
      };
      Jd.getPlanSym = function (a, b) {
        for (var c = Jd.getPlan(a, b, 0), d = 0; d < b; )
          for (var f = d++, h = 0, k = a; h < k; ) {
            var n = h++,
              p = f * a + n;
            n = (f + 1) * a - 1 - n;
            c[p] = c[n] = c[p] || c[n];
          }
        return c;
      };
      Jd.circumference = function (a) {
        if (0 == a.length) return [];
        if (1 == a.length) return a[0];
        for (var b = [], c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          for (var h = 0, k = f.length; h < k; ) {
            var n = h++,
              p = f[n],
              g = f[(n + 1) % f.length],
              q = !0;
            n = 0;
            do
              if (((n = b.indexOf(g, n)), -1 == n)) break;
              else if (c[n] == p) {
                b.splice(n, 1);
                c.splice(n, 1);
                q = !1;
                break;
              } else n += 1;
            while (n < b.length);
            q && (b.push(p), c.push(g));
          }
        }
        d = f = 0;
        for (h = b.length; d < h; )
          if (((n = d++), b.lastIndexOf(b[n]) != n)) {
            f = n;
            break;
          }
        d = b[f];
        h = c[f];
        a = [d];
        do (a.push(h), (h = c[b.indexOf(h)]));
        while (h != d);
        b = [];
        d = 0;
        for (h = a.length; d < h; )
          ((n = d++),
            (c = a[(n + 1) % a.length]),
            (f = a[(n + 2) % a.length]),
            (n = c.subtract(a[n])),
            (f = f.subtract(c)),
            0.999 < (n.x * f.x + n.y * f.y) / n.get_length() / f.get_length() &&
              b.push(c));
        for (d = 0; d < b.length; ) ((f = b[d]), ++d, N.remove(a, f));
        return a;
      };
      var yb = function (a, b) {
        var c = Ua.toPolyline(b);
        if (0 < a.waterEdge.length) {
          var d = c[0];
          wd.set(d, qa.lerp(d, c[1]));
          var f = a.shore,
            h = f.indexOf(d);
          2 <= h && wd.set(f[h - 1], qa.lerp(f[h - 1], qa.lerp(f[h - 2], d)));
          h < f.length - 2 &&
            wd.set(f[h + 1], qa.lerp(f[h + 1], qa.lerp(f[h + 2], d)));
        }
        Sa.set(c, uc.smoothOpen(c, null, 1));
        Ua.assignData(b, Tc.CANAL);
        if (null != a.wall) {
          d = a.wall.shape;
          f = 1;
          for (var k = b.length; f < k; ) {
            h = f++;
            var n = c[h],
              p = d.indexOf(n);
            if (-1 != p) {
              var g = c[h - 1],
                q = c[h + 1].subtract(g),
                m = d.length,
                u = d[(p + m - 1) % m];
              p = d[(p + 1) % m];
              u = qa.intersectLines(
                g.x,
                g.y,
                q.x,
                q.y,
                u.x,
                u.y,
                p.x - u.x,
                p.y - u.y,
              ).x;
              g = new I(g.x + q.x * u, g.y + q.y * u);
              wd.set(c[h], qa.lerp(n, g));
            }
          }
        }
        this.city = a;
        this.course = b;
      };
      g['com.watabou.mfcg.model.Canal'] = yb;
      yb.__name__ = 'com.watabou.mfcg.model.Canal';
      yb.createRiver = function (a) {
        yb.buildTopology(a);
        var b = 0 < a.shoreE.length ? yb.deltaRiver(a) : yb.regularRiver(a);
        if (null != b) return new yb(a, b);
        throw new Vb('Unable to build a canal!');
      };
      yb.regularRiver = function (a) {
        for (
          var b = Ua.vertices(a.horizonE), c = [], d = 0, f = b;
          d < f.length;

        ) {
          var h = f[d];
          ++d;
          1 < a.cellsByVertex(h).length && c.push(h);
        }
        for (b = c; 1 < b.length; ) {
          var k = Z.random(b),
            n = null;
          d = Infinity;
          for (c = 0; c < b.length; ) {
            h = b[c];
            ++c;
            f = k.point;
            var p = h.point;
            p = p.clone();
            p.normalize(1);
            f = f.x * p.x + f.y * p.y;
            d > f && ((d = f), (n = h));
          }
          h = Z.random(a.dcel.vertices.h[a.center.__id__].edges).next.origin;
          c = yb.topology.buildPath(n, h);
          h = null != c ? yb.topology.buildPath(h, k) : null;
          if (null != c && null != h)
            for (d = 0, f = h.length; d < f; ) {
              p = d++;
              var g = c.indexOf(h[p]);
              if (-1 != g) {
                c = a.dcel.vertices2chain(h.slice(0, p).concat(c.slice(g)));
                if (yb.validateCourse(c)) return c;
                break;
              }
            }
          gb.trace('discard', {
            fileName: 'Source/com/watabou/mfcg/model/Canal.hx',
            lineNumber: 216,
            className: 'com.watabou.mfcg.model.Canal',
            methodName: 'regularRiver',
          });
          N.remove(b, k);
          N.remove(b, n);
        }
        return null;
      };
      yb.deltaRiver = function (a) {
        for (var b = [], c = 1, d = a.shoreE.length - 1; c < d; ) {
          var f = c++,
            h = a.shoreE[f].origin;
          1 <
            Z.count(a.cellsByVertex(h), function (a) {
              return !a.waterbody;
            }) && b.push(f);
        }
        b = Z.sortBy(b, function (b) {
          return a.shoreE[b].origin.point.get_length();
        });
        f = Ua.vertices(Z.difference(a.earthEdgeE, a.shoreE));
        c = [];
        for (d = 0; d < f.length; )
          ((h = f[d]), ++d, 1 < a.cellsByVertex(h).length && c.push(h));
        for (f = c; 0 < b.length; ) {
          c = b.shift();
          d = a.shoreE[c].origin;
          c = a.shoreE[c + 1].origin.point.subtract(
            a.shoreE[c - 1].origin.point,
          );
          c = c.clone();
          c.normalize(1);
          var k = new I(-c.y, c.x),
            n = null,
            p = -Infinity;
          for (c = 0; c < f.length; ) {
            h = f[c];
            ++c;
            var g = h.point.subtract(d.point);
            g = g.clone();
            g.normalize(1);
            g = k.x * g.x + k.y * g.y;
            p < g && ((p = g), (n = h));
          }
          c = yb.topology.buildPath(n, d);
          if (
            null != c &&
            ((c = a.dcel.vertices2chain(c)), yb.validateCourse(c))
          )
            return c;
          gb.trace('discard', {
            fileName: 'Source/com/watabou/mfcg/model/Canal.hx',
            lineNumber: 268,
            className: 'com.watabou.mfcg.model.Canal',
            methodName: 'deltaRiver',
          });
        }
        return null;
      };
      yb.validateCourse = function (a) {
        if (null == a || a.length < yb.model.earthEdge.length / 5) return !1;
        for (var b = 1, c = a.length - 1; b < c; ) {
          var d = b++;
          if (null != Ua.edgeByOrigin(yb.model.shoreE, a[d].origin)) return !1;
        }
        if (null != yb.model.wall) {
          var f = yb.model.wall.edges;
          b = 0;
          for (c = f.length; b < c; ) {
            d = b++;
            var h = f[d];
            d = Ua.indexByOrigin(a, h.origin);
            if (0 < d && d < a.length - 1 && !yb.intersect(f, h, a, a[d]))
              return !1;
          }
        }
        b = 0;
        for (c = yb.model.arteries; b < c.length; ) {
          f = c[b];
          ++b;
          h = 1;
          for (var k = f.length - 1; h < k; ) {
            d = h++;
            var n = f[d];
            d = Ua.indexByOrigin(a, n.origin);
            if (0 < d && d < a.length - 1 && !yb.intersect(f, n, a, a[d]))
              return !1;
          }
        }
        return !0;
      };
      yb.intersect = function (a, b, c, d) {
        a = Ua.prev(a, b);
        c = Ua.prev(c, d);
        do a = a.next.twin;
        while (a != c && a != b.twin && a != d.twin);
        if (a == b.twin) return !1;
        do a = a.next.twin;
        while (a != c && a != b.twin && a != d.twin);
        return a == b.twin ? !0 : !1;
      };
      yb.buildTopology = function (a) {
        if (a.cells != yb.patches) {
          yb.model = a;
          yb.patches = a.cells;
          for (var b = [], c = 0, d = a.cells; c < d.length; ) {
            var f = d[c];
            ++c;
            f.waterbody || b.push(f);
          }
          yb.topology = new fh(b);
          null != a.wall && yb.topology.excludePolygon(a.wall.edges);
          null != a.citadel &&
            yb.topology.excludePoints(
              Ua.vertices(va.__cast(a.citadel.ward, xd).wall.edges),
            );
          yb.topology.excludePoints(a.gates);
          b = 0;
          for (c = a.arteries; b < c.length; )
            ((a = c[b]), ++b, yb.topology.excludePolygon(a));
        }
      };
      yb.prototype = {
        updateState: function () {
          this.gates = new pa();
          if (null != yb.model.wall)
            for (var a = 0, b = yb.model.wall.edges; a < b.length; ) {
              var c = b[a];
              ++a;
              var d = c.origin,
                f = Ua.indexByOrigin(this.course, d);
              0 < f &&
                f < this.course.length - 1 &&
                (yb.model.wall.addWatergate(d, this),
                this.gates.set(d, yb.model.wall));
            }
          this.bridges = new pa();
          a = 0;
          for (b = yb.model.arteries; a < b.length; ) {
            c = b[a];
            ++a;
            var h = 0;
            for (d = c.length; h < d; ) {
              var k = h++,
                n = c[k];
              f = Ua.indexByOrigin(this.course, n.origin);
              0 < f &&
                f < this.course.length - 1 &&
                (0 == k
                  ? this.bridges.set(n.origin, c)
                  : yb.intersect(c, n, this.course, this.course[f]) &&
                    this.bridges.set(n.origin, c));
            }
          }
          n = yb.model.inner;
          c = [];
          a = 2;
          for (b = this.course.length - 1; a < b; )
            ((f = a++),
              (f = this.course[f]),
              (-1 == n.indexOf(f.face.data) &&
                -1 == n.indexOf(f.twin.face.data)) ||
                Z.add(c, f.origin));
          a = [];
          for (b = this.gates.keys(); b.hasNext(); )
            ((n = b.next()), a.push(n));
          Z.removeAll(c, a);
          f = c.length;
          this.rural = 0 == f;
          this.width =
            (3 + yb.model.inner.length / 5) *
            (0.8 +
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                0.4) *
            (this.rural ? 1.5 : 1);
          if (!this.rural) {
            h = 0;
            b = n = this.bridges;
            for (d = n.keys(); d.hasNext(); )
              ((n = d.next()), b.get(n), -1 != c.indexOf(n) && ++h);
            a = [];
            b = n = this.bridges;
            for (d = n.keys(); d.hasNext(); )
              ((n = d.next()), b.get(n), a.push(n));
            for (Z.removeAll(c, a); ; ) {
              a = 1 - (2 * h) / f;
              null == a && (a = 0.5);
              if (
                !((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a)
              )
                break;
              a = [];
              for (b = 0; b < c.length; )
                ((n = c[b]), ++b, a.push(1 / n.edges.length));
              n = Z.weighted(c, a);
              d = null;
              this.bridges.set(n, d);
              N.remove(c, n);
              ++h;
            }
          }
          Ua.assignData(this.course, Tc.CANAL);
        },
        __class__: yb,
      };
      var bi = function (a) {
        this.seed = -1;
        this.district = null;
        this.face = a;
        this.shape = a.getPoly();
        a.data = this;
        this.waterbody = this.withinWalls = this.withinCity = !1;
        this.seed = C.seed = (48271 * C.seed) % 2147483647 | 0;
      };
      g['com.watabou.mfcg.model.Cell'] = bi;
      bi.__name__ = 'com.watabou.mfcg.model.Cell';
      bi.prototype = {
        bordersInside: function (a) {
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            if (c.face == this.face) return !0;
          }
          return !1;
        },
        isRerollable: function () {
          return null != this.view ? null != this.view.parent : !1;
        },
        reroll: function () {
          var a = null != this.ward.group ? this.ward.group.core.data : this;
          a != this
            ? a.reroll()
            : this.isRerollable() &&
              ((this.seed = C.seed),
              this.ward.createGeometry(),
              this.view.draw(),
              ia.map.updateRoads(),
              ia.map.updateTrees(),
              Bb.geometryChanged.dispatch(this));
        },
        __class__: bi,
      };
      var Tc = (y['com.watabou.mfcg.model.Edge'] = {
        __ename__: 'com.watabou.mfcg.model.Edge',
        __constructs__: null,
        HORIZON: {
          _hx_name: 'HORIZON',
          _hx_index: 0,
          __enum__: 'com.watabou.mfcg.model.Edge',
          toString: r,
        },
        COAST: {
          _hx_name: 'COAST',
          _hx_index: 1,
          __enum__: 'com.watabou.mfcg.model.Edge',
          toString: r,
        },
        ROAD: {
          _hx_name: 'ROAD',
          _hx_index: 2,
          __enum__: 'com.watabou.mfcg.model.Edge',
          toString: r,
        },
        WALL: {
          _hx_name: 'WALL',
          _hx_index: 3,
          __enum__: 'com.watabou.mfcg.model.Edge',
          toString: r,
        },
        CANAL: {
          _hx_name: 'CANAL',
          _hx_index: 4,
          __enum__: 'com.watabou.mfcg.model.Edge',
          toString: r,
        },
      });
      Tc.__constructs__ = [Tc.HORIZON, Tc.COAST, Tc.ROAD, Tc.WALL, Tc.CANAL];
      var Ub = function (a) {
        this.bounds = new na();
        this.bp = a;
        var b = a.size,
          c = a.seed;
        if (0 != b) {
          0 < c && C.reset(c);
          -1 == b && (b = Ub.nextSize);
          this.nPatches = b;
          gb.trace('>> seed:' + C.seed + ' size:' + b, {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 124,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'new',
          });
          c = Ub.sizes.h;
          for (var d = Object.keys(c), f = d.length, h = 0; h < f; ) {
            var k = c[d[h++]];
            if (b >= k.min && b < k.max) {
              Ub.nextSize = (k.min + Math.random() * (k.max - k.min)) | 0;
              break;
            }
          }
          this.citadelNeeded = a.citadel;
          this.stadtburgNeeded = a.inner;
          this.plazaNeeded = a.plaza;
          this.templeNeeded = a.temple;
          this.wallsNeeded = a.walls;
          this.shantyNeeded = a.shanty;
          this.riverNeeded = a.river;
          this.coastNeeded = a.coast;
          this.maxDocks = (Math.sqrt(b / 2) | 0) + (this.riverNeeded ? 2 : 0);
          do
            try {
              (gb.trace('--\x3e> seed:' + C.seed + ' size:' + b, {
                fileName: 'Source/com/watabou/mfcg/model/City.hx',
                lineNumber: 151,
                className: 'com.watabou.mfcg.model.City',
                methodName: 'new',
              }),
                this.build(),
                (Ub.instance = this));
            } catch (n) {
              ((c = X.caught(n)),
                gb.trace('*** ' + H.string(c), {
                  fileName: 'Source/com/watabou/mfcg/model/City.hx',
                  lineNumber: 156,
                  className: 'com.watabou.mfcg.model.City',
                  methodName: 'new',
                }),
                (Ub.instance = null));
            }
          while (null == Ub.instance);
          a.updateURL();
          Bb.newModel.dispatch(this);
        }
      };
      g['com.watabou.mfcg.model.City'] = Ub;
      Ub.__name__ = 'com.watabou.mfcg.model.City';
      Ub.prototype = {
        rerollName: function () {
          return Ma.cityName(this);
        },
        setName: function (a, b) {
          this.bp.name = this.name = a;
          this.bp.updateURL();
          Bb.titleChanged.dispatch(this.name);
        },
        build: function () {
          this.streets = [];
          this.roads = [];
          this.walls = [];
          this.landmarks = [];
          this.north = 0;
          gb.trace('buildPatches ' + id.measure(l(this, this.buildPatches)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 183,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          gb.trace(
            'optimizeJunctions ' + id.measure(l(this, this.optimizeJunctions)),
            {
              fileName: 'Source/com/watabou/mfcg/model/City.hx',
              lineNumber: 184,
              className: 'com.watabou.mfcg.model.City',
              methodName: 'build',
            },
          );
          gb.trace('buildDomains ' + id.measure(l(this, this.buildDomains)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 185,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          gb.trace('buildWalls ' + id.measure(l(this, this.buildWalls)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 186,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          gb.trace('buildStreets ' + id.measure(l(this, this.buildStreets)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 187,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          gb.trace('buildCanals ' + id.measure(l(this, this.buildCanals)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 188,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          gb.trace('createWards ' + id.measure(l(this, this.createWards)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 189,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          gb.trace(
            'buildCityTowers ' + id.measure(l(this, this.buildCityTowers)),
            {
              fileName: 'Source/com/watabou/mfcg/model/City.hx',
              lineNumber: 190,
              className: 'com.watabou.mfcg.model.City',
              methodName: 'build',
            },
          );
          gb.trace('buildGeometry ' + id.measure(l(this, this.buildGeometry)), {
            fileName: 'Source/com/watabou/mfcg/model/City.hx',
            lineNumber: 191,
            className: 'com.watabou.mfcg.model.City',
            methodName: 'build',
          });
          this.updateDimensions();
        },
        buildPatches: function () {
          for (
            var a = this,
              b = 0,
              c = [new I()],
              d =
                2 *
                Math.PI *
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647),
              f = 1,
              h = 8 * this.nPatches;
            f < h;

          ) {
            var k = f++,
              n =
                10 +
                k *
                  (2 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647);
            k = d + 5 * Math.sqrt(k);
            c.push(I.polar(n, k));
            b < n && (b = n);
          }
          this.plazaNeeded &&
            (C.save(),
            (f =
              8 +
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * 8),
            (h =
              f *
              (1 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647)),
            (b = Math.max(b, h)),
            (c[1] = I.polar(f, d)),
            (c[2] = I.polar(h, d + Math.PI / 2)),
            (c[3] = I.polar(f, d + Math.PI)),
            (c[4] = I.polar(h, d + (3 * Math.PI) / 2)),
            C.restore());
          h = new Qb(c.concat(Qd.regular(6, 2 * b))).getVoronoi();
          for (f = h.keys(); f.hasNext(); )
            ((c = f.next()),
              (n = h.get(c)),
              Z.some(n, function (a) {
                return a.get_length() > b;
              }) && h.remove(c));
          this.cells = [];
          this.inner = [];
          f = [];
          for (n = h.iterator(); n.hasNext(); ) ((h = n.next()), f.push(h));
          this.dcel = new Ic(f);
          var p = new pa();
          f = 0;
          for (h = this.dcel.faces; f < h.length; ) {
            var g = h[f];
            ++f;
            c = new bi(g);
            n = Sa.centroid(c.shape);
            p.set(c, n);
            this.cells.push(c);
          }
          this.cells = Z.sortBy(this.cells, function (a) {
            a = p.h[a.__id__];
            return a.x * a.x + a.y * a.y;
          });
          if (this.coastNeeded) {
            C.save();
            d = og.fractal(6);
            f =
              20 +
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) * 40;
            k =
              0.3 *
              b *
              ((((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1);
            n =
              b *
              (0.2 +
                Math.abs(
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ));
            g = this.bp.coastDir;
            isNaN(g) &&
              (this.bp.coastDir =
                Math.floor(
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                    20,
                ) / 10);
            C.restore();
            h = this.bp.coastDir * Math.PI;
            var q = Math.cos(h),
              m = Math.sin(h);
            g = new I(n + f, k);
            f = 0;
            for (h = this.cells; f < h.length; ) {
              c = h[f];
              ++f;
              var u = p.h[c.__id__],
                r = new I(u.x * q - u.y * m, u.y * q + u.x * m);
              u = I.distance(g, r) - n;
              r.x > g.x && (u = Math.min(u, Math.abs(r.y - k) - n));
              r =
                d.get((r.x + b) / (2 * b), (r.y + b) / (2 * b)) *
                n *
                Math.sqrt(r.get_length() / b);
              0 > u + r && (c.waterbody = !0);
            }
          }
          f = n = 0;
          for (
            h = this.cells;
            f < h.length &&
            ((c = h[f]),
            ++f,
            c.waterbody ||
              ((c.withinCity = !0),
              (c.withinWalls = this.wallsNeeded),
              this.inner.push(c),
              !(++n > this.nPatches)));

          );
          this.center = Z.min(this.inner[0].shape, function (a) {
            return a.x * a.x + a.y * a.y;
          });
          this.plazaNeeded && new he(this, (this.plaza = this.inner[0]));
          if (this.citadelNeeded) {
            if (this.stadtburgNeeded) {
              f = [];
              h = 0;
              for (c = this.inner; h < c.length; )
                ((n = c[h]),
                  ++h,
                  (function (b) {
                    for (var c = b.face.halfEdge, d = c, f = !0; f; ) {
                      var h = d;
                      d = d.next;
                      f = d != c;
                      var k = 0;
                      for (h = a.cellsByVertex(h.origin); k < h.length; ) {
                        var n = h[k];
                        ++k;
                        if (n != b && !n.waterbody && !n.withinCity) return !1;
                      }
                    }
                    return !0;
                  })(n) && f.push(n));
              N.remove(f, this.plaza);
              0 < f.length
                ? (f = Z.random(f))
                : (gb.trace('Unable to build an uraban castle!', {
                    fileName: 'Source/com/watabou/mfcg/model/City.hx',
                    lineNumber: 332,
                    className: 'com.watabou.mfcg.model.City',
                    methodName: 'buildPatches',
                  }),
                  (k = this.inner),
                  (f = this.citadel = k[k.length - 1]));
              this.citadel = f;
            } else ((k = this.inner), (this.citadel = k[k.length - 1]));
            this.citadel.withinCity = !0;
            this.citadel.withinWalls = !0;
            N.remove(this.inner, this.citadel);
          }
        },
        optimizeJunctions: function () {
          var a = 3 * pc.LTOWER_RADIUS,
            b = this.citadel;
          for (b = null != b ? b.shape : null; ; ) {
            for (var c = !1, d = 0, f = this.dcel.faces; d < f.length; ) {
              var h = f[d];
              ++d;
              var k = h.data.shape;
              if (!(4 >= k.length)) {
                var n = Sa.perimeter(k);
                k = Math.max(a, n / k.length / 3);
                n = h = h.halfEdge;
                for (var p = !0; p; ) {
                  var g = n;
                  n = n.next;
                  p = n != h;
                  if (
                    !(
                      null == g.twin ||
                      4 >= g.twin.face.data.shape.length ||
                      (null != b &&
                        (-1 != b.indexOf(g.origin.point)) !=
                          (-1 != b.indexOf(g.next.origin.point)))
                    ) &&
                    I.distance(g.origin.point, g.next.origin.point) < k
                  ) {
                    c = 0;
                    for (k = this.dcel.collapseEdge(g).edges; c < k.length; )
                      ((h = k[c]), ++c, (h.face.data.shape = h.face.getPoly()));
                    c = !0;
                    break;
                  }
                }
              }
            }
            if (!c) break;
          }
          null == this.dcel.vertices.h[this.center.__id__] &&
            (this.center = Z.min(this.inner[0].shape, function (a) {
              return a.x * a.x + a.y * a.y;
            }));
        },
        buildWalls: function () {
          C.save();
          var a = this.waterEdge;
          null != this.citadel && (a = a.concat(this.citadel.shape));
          this.border = new pc(this.wallsNeeded, this, this.inner, a);
          this.wallsNeeded &&
            ((this.wall = this.border), this.walls.push(this.wall));
          this.gates = this.border.gates;
          null != this.citadel &&
            ((a = new xd(this, this.citadel)),
            a.wall.buildTowers(),
            this.walls.push(a.wall),
            (this.gates = this.gates.concat(a.wall.gates)));
          C.restore();
        },
        cellsByVertex: function (a) {
          var b = [],
            c = 0;
          for (a = a.edges; c < a.length; ) {
            var d = a[c];
            ++c;
            b.push(d.face.data);
          }
          return b;
        },
        buildDomains: function () {
          var a = Z.find(this.dcel.edges, function (a) {
            return null == a.twin;
          });
          this.horizonE = Ic.circumference(a, this.dcel.faces);
          if (6 > this.horizonE.length)
            throw X.thrown(
              'Failed to build the horizon: ' + this.horizonE.length,
            );
          Ua.assignData(this.horizonE, Tc.HORIZON);
          this.horizon = Ua.toPoly(this.horizonE);
          if (this.coastNeeded) {
            a = [];
            for (var b = [], c = 0, d = this.dcel.faces; c < d.length; ) {
              var f = d[c];
              ++c;
              f.data.waterbody ? a.push(f) : b.push(f);
            }
            b = Z.max(Ic.split(b), function (a) {
              return a.length;
            });
            a = Z.max(Ic.split(a), function (a) {
              return a.length;
            });
            this.earthEdgeE = Ic.circumference(null, b);
            this.earthEdge = Ua.toPoly(this.earthEdgeE);
            this.waterEdgeE = Ic.circumference(null, a);
            if (
              Z.every(this.waterEdgeE, function (a) {
                return null != a.twin;
              })
            )
              throw X.thrown("Required water doesn't touch the horizon");
            this.waterEdge = Ua.toPoly(this.waterEdgeE);
            Sa.set(
              this.waterEdge,
              uc.smooth(
                this.waterEdge,
                null,
                Math.floor(
                  1 +
                    ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                      2147483647) *
                      3,
                ),
              ),
            );
            for (a = 0; null != this.earthEdgeE[a].twin; )
              a = (a + 1) % this.earthEdgeE.length;
            for (; null == this.earthEdgeE[a].twin; )
              a = (a + 1) % this.earthEdgeE.length;
            this.shore = [];
            this.shoreE = [];
            do
              ((b = this.earthEdgeE[a]),
                this.shoreE.push(b),
                this.shore.push(b.origin.point),
                (a = (a + 1) % this.earthEdgeE.length));
            while (null != this.earthEdgeE[a].twin);
            Ua.assignData(this.shoreE, Tc.COAST);
          } else
            ((this.earthEdgeE = this.horizonE),
              (this.earthEdge = this.horizon),
              (this.waterEdgeE = []),
              (this.waterEdge = []),
              (this.shoreE = []),
              (this.shore = []));
        },
        buildStreets: function () {
          for (var a = [], b = 0, c = this.cells; b < c.length; ) {
            var d = c[b];
            ++b;
            d.withinCity && a.push(d);
          }
          var f = new fh(a);
          a = [];
          b = 0;
          for (c = this.cells; b < c.length; )
            ((d = c[b]), ++b, d.withinCity || d.waterbody || a.push(d));
          d = new fh(a);
          a = [];
          b = 0;
          for (c = this.shoreE; b < c.length; ) {
            var h = c[b];
            ++b;
            a.push(h.origin);
          }
          f.excludePoints(a);
          d.excludePoints(a);
          h = [];
          a = 0;
          for (b = this.walls; a < b.length; ) {
            var k = b[a];
            ++a;
            Z.addAll(h, Ua.vertices(k.edges));
          }
          0 < h.length &&
            (Z.removeAll(h, this.gates),
            f.excludePoints(h),
            d.excludePoints(h));
          h = Z.difference(this.earthEdgeE, this.shoreE);
          a = [];
          b = 0;
          for (c = h; b < c.length; ) {
            var n = c[b];
            ++b;
            null != d.pt2node.h.__keys__[n.origin.__id__] && a.push(n);
          }
          h = a;
          a = 0;
          for (b = this.gates; a < b.length; )
            if (
              ((k = [b[a]]),
              ++a,
              (c =
                null != this.plaza
                  ? Z.min(
                      this.plaza.shape,
                      (function (a) {
                        return function (b) {
                          var c = a[0].point,
                            d = b.x - c.x;
                          b = b.y - c.y;
                          return d * d + b * b;
                        };
                      })(k),
                    )
                  : this.center),
              (c = f.buildPath(k[0], this.dcel.vertices.h[c.__id__])),
              null != c)
            ) {
              if (
                ((c = this.dcel.vertices2chain(c)),
                this.streets.push(c),
                -1 != this.border.gates.indexOf(k[0]))
              ) {
                n = null;
                if (null != d.pt2node.h.__keys__[k[0].__id__])
                  for (
                    h = Z.sortBy(
                      h,
                      (function (a) {
                        return function (b) {
                          b = b.origin.point;
                          var c = a[0].point;
                          return -(c.x * b.x + c.y * b.y) / b.get_length();
                        };
                      })(k),
                    ),
                      c = 0;
                    c < h.length &&
                    ((n = h[c]),
                    ++c,
                    (n = d.buildPath(n.origin, k[0])),
                    null == n);

                  );
                c = n;
                if (null != c)
                  ((k = this.dcel.vertices2chain(c)),
                    d.excludePolygon(k),
                    this.roads.push(k));
                else if (null != this.wall) {
                  c = [];
                  n = 0;
                  for (k = this.cellsByVertex(k[0]); n < k.length; ) {
                    var p = k[n];
                    ++n;
                    !p.withinWalls && p.bordersInside(this.shoreE) && c.push(p);
                  }
                  k = c;
                  for (c = 0; c < k.length; )
                    ((n = k[c]),
                      ++c,
                      (n.landing = !0),
                      (n.withinCity = !0),
                      new Pc(this, n),
                      this.maxDocks--);
                }
              }
            } else
              gb.trace('Unable to build a street!', {
                fileName: 'Source/com/watabou/mfcg/model/City.hx',
                lineNumber: 591,
                className: 'com.watabou.mfcg.model.City',
                methodName: 'buildStreets',
              });
          this.tidyUpRoads();
          if (this.wallsNeeded) {
            a = [];
            b = 0;
            for (c = this.gates; b < c.length; )
              ((f = c[b]), ++b, a.push(f.point));
            f = a;
          } else f = null;
          a = 0;
          for (b = this.arteries; a < b.length; )
            ((d = b[a]),
              ++a,
              Ua.assignData(d, Tc.ROAD),
              (d = Ua.toPoly(d)),
              Sa.set(d, uc.smoothOpen(d, f, 2)));
        },
        tidyUpRoads: function () {
          for (var a = [], b = 0, c = this.streets; b < c.length; ) {
            var d = c[b];
            ++b;
            Z.addAll(a, d);
          }
          b = 0;
          for (c = this.roads; b < c.length; )
            ((d = c[b]), ++b, Z.addAll(a, d));
          for (this.arteries = []; 0 < a.length; ) {
            d = a.pop();
            var f = !1;
            b = 0;
            for (c = this.arteries; b < c.length; ) {
              var h = c[b];
              ++b;
              if (h[0].origin == d.next.origin) {
                h.unshift(d);
                f = !0;
                break;
              } else if (h[h.length - 1].next.origin == d.origin) {
                h.push(d);
                f = !0;
                break;
              }
            }
            f || this.arteries.push([d]);
          }
        },
        buildCanals: function () {
          C.save();
          this.canals = this.riverNeeded ? [yb.createRiver(this)] : [];
          C.restore();
        },
        addHarbour: function (a) {
          for (var b = 0, c = [], d = (a = a.face.halfEdge), f = !0; f; ) {
            var h = d;
            d = d.next;
            f = d != a;
            null != h.twin && c.push(h.twin.face.data);
          }
          for (; b < c.length; )
            ((a = c[b]), ++b, a.waterbody && null == a.ward && new lf(this, a));
        },
        createWards: function () {
          if (this.bp.greens) {
            var a = 0;
            if (null != this.citadel) {
              var b = this.cellsByVertex(this.citadel.ward.wall.gates[0]);
              if (3 == b.length) {
                var c = 1 - 2 / (this.nPatches - 1);
                null == c && (c = 0.5);
                var d =
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c;
              } else d = !1;
              if (d)
                for (d = 0; d < b.length; ) {
                  var f = b[d];
                  ++d;
                  null == f.ward && (new ce(this, f), ++a);
                }
            }
            d = (this.nPatches - 10) / 20;
            c = d - (d | 0);
            null == c && (c = 0.5);
            a =
              (d | 0) +
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < c
                ? 1
                : 0) -
              a;
            for (d = 0; d < a; )
              for (d++; ; )
                if (((f = Z.random(this.inner)), null == f.ward)) {
                  new ce(this, f);
                  break;
                }
          }
          if (0 < this.shoreE.length && 0 < this.maxDocks)
            for (
              d = 0, a = this.inner;
              d < a.length &&
              !((f = a[d]),
              ++d,
              f.bordersInside(this.shoreE) &&
                ((f.landing = !0), 0 >= --this.maxDocks));

            );
          this.templeNeeded &&
            ((f = Z.min(this.inner, function (a) {
              return null == a.ward
                ? Sa.center(a.shape).get_length()
                : Infinity;
            })),
            new Ne(this, f));
          d = 0;
          for (a = this.inner; d < a.length; )
            ((f = a[d]), ++d, null == f.ward && new Pc(this, f));
          if (null != this.wall)
            for (d = 0, a = this.wall.gates; d < a.length; )
              if (
                ((b = a[d]),
                ++d,
                (c = 1 / (this.nPatches - 5)),
                null == c && (c = 0.5),
                !(
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 <
                  c
                ))
              )
                for (c = 0, b = this.cellsByVertex(b); c < b.length; )
                  ((f = b[c]),
                    ++c,
                    null == f.ward &&
                      ((f.withinCity = !0),
                      f.bordersInside(this.shoreE) &&
                        0 < this.maxDocks-- &&
                        (f.landing = !0),
                      new Pc(this, f)));
          this.shantyNeeded && this.buildShantyTowns();
          d = 0;
          for (a = Ua.vertices(this.shoreE); d < a.length; )
            for (
              f = a[d], ++d, c = 0, b = this.cellsByVertex(f);
              c < b.length;

            ) {
              var h = b[c];
              ++c;
              if (h.withinCity && !h.landing) {
                for (var k = h.face.halfEdge; k.next.origin != f; ) k = k.next;
                if (k.twin.face.data.landing && k.next.twin.face.data.landing) {
                  h.landing = !0;
                  break;
                }
              }
            }
          d = 0;
          for (a = this.cells; d < a.length; )
            ((f = a[d]), ++d, f.landing && this.addHarbour(f));
          this.buildFarms();
        },
        updateDimensions: function () {
          for (
            var a = 0,
              b = 0,
              c = 0,
              d = 0,
              f = function (f) {
                for (var h = 0; h < f.length; ) {
                  var k = f[h];
                  ++h;
                  k.x < a ? (a = k.x) : k.x > b && (b = k.x);
                  k.y < c ? (c = k.y) : k.y > d && (d = k.y);
                }
              },
              h = 0,
              k = this.districts;
            h < k.length;

          ) {
            var n = k[h];
            ++h;
            var p = 0;
            for (n = n.groups; p < n.length; ) {
              var g = n[p];
              ++p;
              var q = 0;
              for (g = g.blocks; q < g.length; ) {
                var m = g[q];
                ++q;
                f(m.shape);
              }
            }
          }
          null != this.citadel &&
            f(va.__cast(this.citadel.ward, xd).wall.shape);
          this.bounds.setTo(a, c, b - a, d - c);
        },
        getViewport: function () {
          return null != this.focus ? this.focus.getBounds() : this.bounds;
        },
        buildFarms: function () {
          for (
            var a =
                (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                2,
              b =
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                3,
              c =
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                Math.PI *
                2,
              d =
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                Math.PI *
                2,
              f = 0,
              h = 0,
              k = this.inner;
            h < k.length;

          ) {
            var n = k[h];
            ++h;
            var p = 0;
            for (n = n.shape; p < n.length; ) {
              var g = n[p];
              ++p;
              f = Math.max(f, I.distance(g, this.center));
            }
          }
          h = 0;
          for (k = this.cells; h < k.length; )
            ((n = k[h]),
              ++h,
              null == n.ward &&
                (n.waterbody
                  ? new Rb(this, n)
                  : n.bordersInside(this.shoreE)
                    ? new ng(this, n)
                    : ((p = Sa.center(n.shape).subtract(this.center)),
                      (g = Math.atan2(p.y, p.x)),
                      (g = a * Math.sin(g + c) + b * Math.sin(2 * g + d)),
                      p.get_length() < (g + 1) * f
                        ? new yd(this, n)
                        : new ng(this, n))));
        },
        buildShantyTowns: function () {
          for (
            var a = this,
              b = [],
              c = [],
              d = function (b) {
                for (
                  var c = 3 * I.distance(b, a.center), d = 0, f = a.roads;
                  d < f.length;

                ) {
                  var h = f[d];
                  ++d;
                  for (var k = 0; k < h.length; ) {
                    var n = h[k];
                    ++k;
                    c = Math.min(c, 2 * I.distance(n.origin.point, b));
                  }
                }
                d = 0;
                for (f = a.shoreE; d < f.length; )
                  ((k = f[d]),
                    ++d,
                    (c = Math.min(c, I.distance(k.origin.point, b))));
                d = 0;
                for (f = a.canals; d < f.length; )
                  for (n = f[d], ++d, k = 0, h = n.course; k < h.length; )
                    ((n = h[k]),
                      ++k,
                      (c = Math.min(c, I.distance(n.origin.point, b))));
                return c * c;
              },
              f = function (f) {
                for (
                  var h = 0, k = [], n = f.face.halfEdge, p = n, g = !0;
                  g;

                ) {
                  var q = p;
                  p = p.next;
                  g = p != n;
                  null != q.twin && k.push(q.twin.face.data);
                }
                for (f = k; h < f.length; ) {
                  var P = f[h];
                  ++h;
                  if (
                    !P.withinCity &&
                    !P.waterbody &&
                    !P.bordersInside(a.horizonE)
                  ) {
                    k = [];
                    p = n = P.face.halfEdge;
                    for (g = !0; g; )
                      ((q = p),
                        (p = p.next),
                        (g = p != n),
                        null != q.twin && k.push(q.twin.face.data));
                    k = Z.count(k, function (a) {
                      return a.withinCity;
                    });
                    1 < k &&
                      Z.add(b, P) &&
                      c.push((k * k) / d(Sa.center(P.shape)));
                  }
                }
              },
              h = 0,
              k = this.cells;
            h < k.length;

          ) {
            var n = k[h];
            ++h;
            n.withinCity && f(n);
          }
          var p = (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647;
          for (
            p = this.nPatches * (1 + p * p * p) * 0.5;
            0 < p && 0 < b.length;

          ) {
            h = [];
            k = 0;
            for (n = c.length; k < n; ) {
              var g = k++;
              h.push(g);
            }
            h = Z.weighted(h, c);
            n = b[h];
            n.withinCity = !0;
            0 < this.maxDocks &&
              n.bordersInside(this.shoreE) &&
              ((n.landing = !0), this.maxDocks--);
            new Pc(this, n);
            c.splice(h, 1);
            N.remove(b, n);
            --p;
            f(n);
          }
        },
        buildCityTowers: function () {
          if (null != this.wall) {
            for (var a = 0, b = this.wall.edges.length; a < b; ) {
              var c = a++,
                d = this.wall.edges[c];
              if (d.data == Tc.COAST || d.twin.face.data == this.citadel)
                this.wall.segments[c] = !1;
            }
            this.wall.buildTowers();
            if (null != this.citadel)
              for (
                a = 0, b = va.__cast(this.citadel.ward, xd).wall.towers;
                a < b.length;

              )
                ((c = b[a]), ++a, N.remove(this.wall.towers, c));
          }
        },
        getOcean: function () {
          if (null != this.ocean) return this.ocean;
          for (var a = [], b = !1, c = 0, d = this.waterEdgeE; c < d.length; ) {
            var f = d[c];
            ++c;
            var h = f.origin.point;
            if (null == f.twin) a.push(h);
            else {
              f = f.twin.face.data;
              var k = !1,
                n = !1;
              f.landing
                ? (k = !0)
                : f.withinCity &&
                  kf.isConvexVertexi(
                    this.earthEdge,
                    this.earthEdge.indexOf(h),
                  ) &&
                  (n = !0);
              if (b || k) n = !0;
              b = k;
              n && a.push(h);
            }
          }
          return (this.ocean = Hf.render(this.waterEdge, !0, 3, a));
        },
        buildGeometry: function () {
          for (var a = 0, b = this.canals; a < b.length; ) {
            var c = b[a];
            ++a;
            c.updateState();
          }
          Ma.reset();
          this.name = null != this.bp.name ? this.bp.name : this.rerollName();
          a = new ik(this);
          a.build();
          this.districts = a.districts;
          Ma.nameDistricts(this);
          a = 0;
          for (b = this.cells; a < b.length; )
            ((c = b[a]), ++a, c.ward.createGeometry());
        },
        rerollDistricts: function () {
          Ma.reset();
          Ma.nameDistricts(this);
          Bb.districtsChanged.dispatch();
        },
        updateGeometry: function (a) {
          for (var b = [], c = [], d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            f.ward instanceof Pc
              ? Z.add(c, f.ward.group.core)
              : f.ward.createGeometry();
            null != f.district && Z.add(b, f.district);
          }
          for (d = 0; d < c.length; )
            ((f = c[d]), ++d, f.data.ward.createGeometry());
          for (d = 0; d < b.length; ) ((c = b[d]), ++d, c.updateGeometry());
          gc.resetForests();
          Bb.geometryChanged.dispatch(1 == a.length ? a[0] : null);
        },
        updateLots: function () {
          for (var a = 0, b = this.cells; a < b.length; ) {
            var c = b[a];
            ++a;
            c.ward instanceof Pc && c.ward.createGeometry();
          }
          Bb.geometryChanged.dispatch(null);
        },
        addLandmark: function (a) {
          a = new ci(this, a);
          this.landmarks.push(a);
          Bb.landmarksChanged.dispatch();
          return a;
        },
        updateLandmarks: function () {
          for (var a = 0, b = this.landmarks; a < b.length; ) {
            var c = b[a];
            ++a;
            c.update();
          }
        },
        addLandmarks: function (a) {
          for (var b = [], c = 0, d = this.districts; c < d.length; ) {
            var f = d[c];
            ++c;
            var h = 0;
            for (f = f.groups; h < f.length; ) {
              var k = f[h];
              ++h;
              var n = 0;
              for (k = k.blocks; n < k.length; ) {
                var p = k[n];
                ++n;
                p = p.lots;
                for (var g = 0; g < p.length; ) {
                  var q = p[g];
                  ++g;
                  b.push(q);
                }
              }
            }
          }
          for (c = 0; c < a.length; )
            ((h = a[c]),
              ++c,
              (d = Z.random(b)),
              (f = Sa.center(d)),
              (h = new ci(this, f, h)),
              this.landmarks.push(h),
              N.remove(b, d));
          Bb.landmarksChanged.dispatch();
        },
        removeLandmark: function (a) {
          N.remove(this.landmarks, a);
          Bb.landmarksChanged.dispatch();
        },
        removeLandmarks: function () {
          this.landmarks = [];
          Bb.landmarksChanged.dispatch();
        },
        countBuildings: function () {
          for (var a = 0, b = 0, c = this.districts; b < c.length; ) {
            var d = c[b];
            ++b;
            var f = 0;
            for (d = d.groups; f < d.length; ) {
              var h = d[f];
              ++f;
              var k = 0;
              for (h = h.blocks; k < h.length; ) {
                var n = h[k];
                ++k;
                a += n.lots.length;
              }
            }
          }
          return a;
        },
        getNeighbour: function (a, b) {
          for (var c = (a = a.face.halfEdge), d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != a;
            if (f.origin == b) {
              b = f.twin;
              b = null != b ? b.face : null;
              if (null != b) return b.data;
              break;
            }
          }
          return null;
        },
        getCell: function (a) {
          for (var b = 0, c = this.cells; b < c.length; ) {
            var d = c[b];
            ++b;
            if (Gb.containsPoint(d.shape, a)) return d;
          }
          return null;
        },
        getDetails: function (a) {
          for (var b = 0, c = 0, d = this.districts; c < d.length; ) {
            var f = d[c];
            ++c;
            var h = 0;
            for (f = f.groups; h < f.length; ) {
              var k = f[h];
              ++h;
              if (
                null == this.focus ||
                Z.intersects(k.faces, this.focus.faces)
              ) {
                var n = 0;
                for (k = k.blocks; n < k.length; ) {
                  var p = k[n];
                  ++n;
                  Gb.rect(p.shape).intersects(a) && ++b;
                }
              }
            }
          }
          c = 0;
          for (d = this.walls; c < d.length; )
            for (f = d[c], ++c, h = 0, f = f.towers; h < f.length; )
              ((n = f[h]),
                ++h,
                (null == this.focus || -1 != this.focus.vertices.indexOf(n)) &&
                  a.containsPoint(n.point) &&
                  ++b);
          return b;
        },
        splitEdge: function (a) {
          var b = this.dcel.splitEdge(a);
          a.face.data.shape = a.face.getPoly();
          a.twin.face.data.shape = a.twin.face.getPoly();
          return b;
        },
        getCanalWidth: function (a) {
          return this.canals[0].width;
        },
        getFMGParams: function () {
          return {
            size: this.nPatches,
            seed: this.bp.seed,
            name: this.name,
            coast: 0 < this.shoreE.length ? 1 : 0,
            port: Z.some(this.cells, function (a) {
              return a.landing;
            })
              ? 1
              : 0,
            river: 0 < this.canals.length ? 1 : 0,
            sea: 0 < this.shoreE.length ? this.bp.coastDir : 0,
          };
        },
        __class__: Ub,
      };
      var pc = function (a, b, c, d) {
        this.watergates = new pa();
        this.real = !0;
        this.patches = c;
        if (1 == c.length) {
          for (var f = [], h = c[0].face.halfEdge, k = h, n = !0; n; ) {
            var p = k;
            k = k.next;
            n = k != h;
            f.push(p);
          }
          this.edges = f;
          this.shape = c[0].shape;
        } else {
          f = [];
          for (h = 0; h < c.length; ) ((k = c[h]), ++h, f.push(k.face));
          this.edges = Ic.circumference(null, f);
          this.shape = Ua.toPoly(this.edges);
        }
        a &&
          (Ua.assignData(this.edges, Tc.WALL, !1),
          1 < c.length && Sa.set(this.shape, uc.smooth(this.shape, d, 3)));
        this.length = this.shape.length;
        1 == c.length
          ? this.buildCastleGate(b, d)
          : this.buildCityGates(a, b, d);
        f = [];
        h = 0;
        for (a = this.shape; h < a.length; ) (++h, f.push(!0));
        this.segments = f;
      };
      g['com.watabou.mfcg.model.CurtainWall'] = pc;
      pc.__name__ = 'com.watabou.mfcg.model.CurtainWall';
      pc.prototype = {
        buildCityGates: function (a, b, c) {
          this.gates = [];
          for (var d = [], f = 0, h = this.edges; f < h.length; ) {
            var k = h[f];
            ++f;
            d.push(
              -1 != c.indexOf(k.origin.point) ||
                2 > Z.intersect(b.cellsByVertex(k.origin), this.patches).length
                ? 0
                : 1,
            );
          }
          var n = d;
          if (0 == Z.sum(n))
            throw (
              gb.trace(
                '' +
                  this.length +
                  ' vertices of ' +
                  this.patches.length +
                  ' patches, ' +
                  c.length +
                  ' are reserved.',
                {
                  fileName: 'Source/com/watabou/mfcg/model/CurtainWall.hx',
                  lineNumber: 82,
                  className: 'com.watabou.mfcg.model.CurtainWall',
                  methodName: 'buildCityGates',
                },
              ),
              new Vb('No valid vertices to create gates!')
            );
          for (
            var p =
              -1 < b.bp.gates
                ? b.bp.gates
                : b.bp.hub
                  ? this.shape.length
                  : 2 +
                    (((this.patches.length / 12) *
                      (0 < b.shoreE.length ? 0.75 : 1)) |
                      0);
            this.gates.length < p && 0 < Z.sum(n);

          ) {
            d = [];
            f = 0;
            for (h = n.length; f < h; ) ((k = f++), d.push(k));
            d = Z.weighted(d, n);
            f = [this.edges[d].origin];
            this.gates.push(f[0]);
            if (
              a &&
              ((k = Z.difference(b.cellsByVertex(f[0]), this.patches)),
              1 == k.length)
            ) {
              k = k[0];
              h = Z.difference(k.shape, c);
              var g = this.shape,
                q = g.indexOf(f[0].point);
              if (-1 != q) {
                var m = g.length;
                g = g[(q + m - 1) % m];
              } else g = null;
              q = this.shape;
              m = q.indexOf(f[0].point);
              q = -1 != m ? q[(m + 1) % q.length] : null;
              Z.removeAll(h, this.shape);
              if (0 < h.length) {
                g = [f[0].point.subtract(qa.lerp(g, q))];
                h = Z.max(
                  h,
                  (function (a, b) {
                    return function (c) {
                      c = c.subtract(b[0].point);
                      return (c.x * a[0].x + c.y * a[0].y) / c.get_length();
                    };
                  })(g, f),
                );
                f = b.dcel.splitFace(k.face, f[0], b.dcel.vertices.h[h.__id__]);
                f = [f.face, f.twin.face];
                h = b.cells;
                g = [];
                for (q = 0; q < f.length; )
                  ((m = f[q]), ++q, g.push(new bi(m)));
                Z.replace(h, k, g);
                for (h = 0; h < f.length; )
                  for (k = f[h], ++h, q = g = k.halfEdge, m = !0; m; )
                    ((k = q),
                      (q = q.next),
                      (m = q != g),
                      null != k.twin &&
                        k.twin.data == Tc.WALL &&
                        (k.data = Tc.WALL));
              }
            }
            k = 0;
            for (f = n.length; k < f; )
              ((h = k++),
                (g = Math.abs(h - d)),
                g > n.length / 2 && (g = n.length - g),
                (n[h] *= 1 >= g ? 0 : g - 1));
          }
          if (0 == this.gates.length && 0 < p)
            throw new Vb('No gates created!');
          if (a)
            for (d = 0, f = this.gates; d < f.length; )
              ((a = f[d]),
                ++d,
                wd.set(a.point, uc.lerpVertex(this.shape, a.point)));
        },
        buildCastleGate: function (a, b) {
          for (var c = 0, d = this.edges; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.twin.face.data == a.plaza) {
              this.gates = [this.splitSegment(a, f)];
              return;
            }
          }
          c = Z.difference(this.shape, b);
          if (0 == c.length) {
            c = [];
            d = 0;
            for (b = this.edges; d < b.length; )
              ((f = b[d]), ++d, f.twin.face.data.withinCity && c.push(f));
            0 == c.length
              ? (gb.trace('No suitable edge to split', {
                  fileName: 'Source/com/watabou/mfcg/model/CurtainWall.hx',
                  lineNumber: 169,
                  className: 'com.watabou.mfcg.model.CurtainWall',
                  methodName: 'buildCastleGate',
                }),
                (this.gates = [
                  Z.min(this.edges, function (a) {
                    return I.distance(a.origin.point, a.next.origin.point);
                  }).origin,
                ]))
              : ((f = Z.min(c, function (a) {
                  return qa
                    .lerp(a.origin.point, a.next.origin.point, 0.5)
                    .get_length();
                })),
                (this.gates = [this.splitSegment(a, f)]));
          } else
            ((c = Z.min(c, function (a) {
              return a.get_length();
            })),
              wd.set(c, uc.lerpVertex(this.shape, c)),
              (this.gates = [a.dcel.vertices.h[c.__id__]]));
        },
        splitSegment: function (a, b) {
          a = a.splitEdge(b);
          for (
            var c = [], d = this.patches[0].face.halfEdge, f = d, h = !0;
            h;

          )
            ((b = f), (f = f.next), (h = f != d), c.push(b));
          this.edges = c;
          this.shape = this.patches[0].shape;
          this.length++;
          Ua.assignData(this.edges, Tc.WALL, !1);
          return a.origin;
        },
        buildTowers: function () {
          this.towers = [];
          this.coastTowers = [];
          if (this.real)
            for (var a = 0, b = this.length; a < b; ) {
              var c = a++,
                d = (c + this.length - 1) % this.length,
                f = this.edges[c].origin;
              if (
                -1 == this.gates.indexOf(f) &&
                (this.segments[d] || this.segments[c])
              ) {
                this.towers.push(f);
                for (
                  var h = null, k = null, n = 0, p = f.edges;
                  n < p.length;

                ) {
                  var g = p[n];
                  ++n;
                  g.data == Tc.COAST && (null == h ? (h = g) : (k = g));
                }
                null != k &&
                  ((h = h.face.data.waterbody
                    ? [k.next.origin, h.next.origin]
                    : [h.next.origin, k.next.origin]),
                  h.push(f),
                  h.push(
                    this.edges[this.segments[c] ? (c + 1) % this.length : d]
                      .origin,
                  ),
                  this.coastTowers.push(h));
              }
            }
        },
        bothSegments: function (a) {
          return this.segments[a]
            ? this.segments[(a + this.length - 1) % this.length]
            : !1;
        },
        addWatergate: function (a, b) {
          this.watergates.set(a, b);
          N.remove(this.towers, a);
        },
        getTowerRadius: function (a) {
          return this.real
            ? -1 != this.towers.indexOf(a)
              ? pc.LTOWER_RADIUS
              : -1 != this.gates.indexOf(a)
                ? 1 + 2 * pc.TOWER_RADIUS
                : 0
            : 0;
        },
        __class__: pc,
      };
      var lc = (y['com.watabou.mfcg.model.DistrictType'] = {
        __ename__: 'com.watabou.mfcg.model.DistrictType',
        __constructs__: null,
        CENTER:
          ((G = function (a) {
            return {
              _hx_index: 0,
              plaza: a,
              __enum__: 'com.watabou.mfcg.model.DistrictType',
              toString: r,
            };
          }),
          (G._hx_name = 'CENTER'),
          (G.__params__ = ['plaza']),
          G),
        CASTLE:
          ((G = function (a) {
            return {
              _hx_index: 1,
              castle: a,
              __enum__: 'com.watabou.mfcg.model.DistrictType',
              toString: r,
            };
          }),
          (G._hx_name = 'CASTLE'),
          (G.__params__ = ['castle']),
          G),
        DOCKS: {
          _hx_name: 'DOCKS',
          _hx_index: 2,
          __enum__: 'com.watabou.mfcg.model.DistrictType',
          toString: r,
        },
        BRIDGE:
          ((G = function (a) {
            return {
              _hx_index: 3,
              bridge: a,
              __enum__: 'com.watabou.mfcg.model.DistrictType',
              toString: r,
            };
          }),
          (G._hx_name = 'BRIDGE'),
          (G.__params__ = ['bridge']),
          G),
        GATE:
          ((G = function (a) {
            return {
              _hx_index: 4,
              gate: a,
              __enum__: 'com.watabou.mfcg.model.DistrictType',
              toString: r,
            };
          }),
          (G._hx_name = 'GATE'),
          (G.__params__ = ['gate']),
          G),
        BANK: {
          _hx_name: 'BANK',
          _hx_index: 5,
          __enum__: 'com.watabou.mfcg.model.DistrictType',
          toString: r,
        },
        PARK: {
          _hx_name: 'PARK',
          _hx_index: 6,
          __enum__: 'com.watabou.mfcg.model.DistrictType',
          toString: r,
        },
        SPRAWL: {
          _hx_name: 'SPRAWL',
          _hx_index: 7,
          __enum__: 'com.watabou.mfcg.model.DistrictType',
          toString: r,
        },
        REGULAR: {
          _hx_name: 'REGULAR',
          _hx_index: 8,
          __enum__: 'com.watabou.mfcg.model.DistrictType',
          toString: r,
        },
      });
      lc.__constructs__ = [
        lc.CENTER,
        lc.CASTLE,
        lc.DOCKS,
        lc.BRIDGE,
        lc.GATE,
        lc.BANK,
        lc.PARK,
        lc.SPRAWL,
        lc.REGULAR,
      ];
      var Pe = function (a, b) {
        this.type = b;
        this.city = a[0].ward.model;
        b = [];
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(d.face);
        }
        this.faces = b;
        for (b = 0; b < a.length; ) ((c = a[b]), ++b, (c.district = this));
        this.createParams();
      };
      g['com.watabou.mfcg.model.District'] = Pe;
      Pe.__name__ = 'com.watabou.mfcg.model.District';
      Pe.check4holes = function (a) {
        for (var b = [], c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          for (var h = f.halfEdge, k = h, n = !0; n; )
            if (
              ((f = k),
              (k = k.next),
              (n = k != h),
              null == f.twin || -1 == a.indexOf(f.twin.face))
            ) {
              if (-1 != c.indexOf(f.origin)) return !0;
              b.push(f);
              c.push(f.origin);
            }
        }
        a = 0;
        f = c = b[0];
        do for (++a, f = f.next; -1 == b.indexOf(f); ) f = f.twin.next;
        while (f != c);
        return b.length > a;
      };
      Pe.updateColors = function (a) {
        var b = a.length;
        if (1 == b) a[0].color = K.colorRoof;
        else
          for (var c = 0; c < b; ) {
            var d = c++;
            a[d].color = K.getTint(K.colorRoof, d, b);
          }
      };
      Pe.prototype = {
        createParams: function () {
          this.alleys = {
            minSq:
              15 +
              40 *
                Math.abs(
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
            gridChaos:
              0.2 +
              (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                0.8,
            sizeChaos:
              0.4 +
              (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                0.6,
            shapeFactor:
              0.25 +
              (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2,
            inset:
              0.6 *
              (1 -
                Math.abs(
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                )),
            blockSize:
              4 +
              10 *
                (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3),
          };
          this.alleys.minFront = Math.sqrt(this.alleys.minSq);
          this.greenery = Math.pow(
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
              3,
            this.type == lc.PARK ? 1 : 2,
          );
          this.type == lc.SPRAWL &&
            ((this.alleys.gridChaos *= 0.5),
            (this.alleys.blockSize *= 2),
            (this.greenery = (1 + this.greenery) / 2));
        },
        updateGeometry: function () {
          if (1 == this.faces.length) {
            var a = [];
            for (var b = this.faces[0].halfEdge, c = b, d = !0; d; ) {
              var f = c;
              c = c.next;
              d = c != b;
              a.push(f);
            }
          } else a = Ic.circumference(null, this.faces);
          this.border = a;
          this.equator = this.ridge = null;
        },
        createGroups: function () {
          for (var a = [], b = 0, c = this.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            d.data.ward instanceof Pc && a.push(d);
          }
          b = a;
          for (a = []; 0 < b.length; ) {
            var f = this.pickFaces(b);
            a.push(new Qe(f));
          }
          this.groups = a;
          a = 0;
          for (b = this.groups; a < b.length; )
            if (((f = b[a]), ++a, 1 < f.faces.length)) {
              c = [];
              for (var h = 0, k = f.border; h < k.length; )
                ((d = k[h]),
                  ++h,
                  (d = d.origin),
                  Z.some(d.edges, function (a) {
                    return null != a.data ? a.data != Tc.HORIZON : !1;
                  })
                    ? c.push(d.point)
                    : Z.some(this.city.cellsByVertex(d), function (a) {
                        return !(a.ward instanceof Pc);
                      }) && c.push(d.point));
              f = Ua.toPoly(f.border);
              c = uc.smooth(f, c, 2);
              Sa.set(f, c);
            }
        },
        pickFaces: function (a) {
          for (var b = [Z.pick(a)]; ; ) {
            var c = b.length;
            1 < a.length
              ? ((c = (c - 3) / c),
                null == c && (c = 0.5),
                (c =
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 <
                  c))
              : (c = !1);
            if (c) break;
            c = [];
            for (var d = 0; d < b.length; ) {
              var f = b[d];
              ++d;
              for (var h = (f = f.halfEdge), k = !0; k; ) {
                var n = h;
                h = h.next;
                k = h != f;
                null == n.data &&
                  ((n = n.twin.face),
                  -1 != a.indexOf(n) && -1 == b.indexOf(n) && c.push(n));
              }
            }
            if (Z.isEmpty(c)) break;
            else ((c = Z.pick(c)), N.remove(a, c), b.push(c));
          }
          1 < b.length &&
            Pe.check4holes(b) &&
            (gb.trace('Hole in a group, we need to split it', {
              fileName: 'Source/com/watabou/mfcg/model/District.hx',
              lineNumber: 175,
              className: 'com.watabou.mfcg.model.District',
              methodName: 'pickFaces',
            }),
            Z.addAll(a, b.slice(1)),
            (b = [b[0]]));
          return b;
        },
        getRidge: function () {
          var a = Ua.toPoly(this.border).slice();
          uc.simplify(a);
          if ('Curved' == ba.get('districts', 'Curved'))
            return (
              null == this.ridge && (this.ridge = Xk.build(a)),
              this.ridge
            );
          null == this.equator && (this.equator = ze.build(a));
          return this.equator;
        },
        __class__: Pe,
      };
      var ik = function (a) {
        this.model = a;
      };
      g['com.watabou.mfcg.model.DistrictBuilder'] = ik;
      ik.__name__ = 'com.watabou.mfcg.model.DistrictBuilder';
      ik.prototype = {
        build: function () {
          for (
            var a = this, b = [], c = 0, d = this.model.cells;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f.withinCity && b.push(f);
          }
          this.city = b;
          this.unassigned = this.city.slice();
          this.districts = [];
          var h = [],
            k = function (a, b) {
              h.push({ vertex: a, type: b });
            };
          d = function (b, c) {
            h.push({ patch: b, type: null != c ? c : a.getType(b) });
          };
          null != this.model.citadel &&
            k(
              va.__cast(this.model.citadel.ward, xd).wall.gates[0],
              lc.CASTLE(this.model.citadel),
            );
          null != this.model.plaza
            ? d(this.model.plaza, lc.CENTER(this.model.plaza))
            : k(
                this.model.dcel.vertices.h[this.model.center.__id__],
                lc.CENTER(null),
              );
          b = 0;
          for (c = this.unassigned; b < c.length; )
            ((f = c[b]), ++b, f.ward instanceof ce && d(f, lc.PARK));
          if (null != this.model.wall)
            for (b = 0, c = this.model.wall.gates; b < c.length; ) {
              var n = c[b];
              ++b;
              k(n, lc.GATE(n));
            }
          b = 0;
          for (c = this.model.canals; b < c.length; ) {
            n = c[b];
            ++b;
            var p = n.bridges;
            f = p;
            for (p = p.keys(); p.hasNext(); ) {
              var g = p.next();
              f.get(g);
              k(g, lc.BRIDGE(g));
            }
            f = Z.random(n.course);
            f.face.data.withinCity && d(f.face.data, lc.BANK);
            n = Z.random(n.course).twin;
            n.face.data.withinCity && d(n.face.data, lc.BANK);
          }
          b = 0;
          for (c = this.unassigned; b < c.length; )
            if (((f = c[b]), ++b, f.landing && f.ward instanceof Pc)) {
              d(f, lc.DOCKS);
              break;
            }
          b = 0;
          for (c = h.length; b < c; ) (b++, d(Z.random(this.city)));
          b = Math.sqrt(this.city.length) | 0;
          for (h = Z.subset(h, b); h.length < b; ) d(Z.random(this.city));
          b = [];
          c = 0;
          for (d = h; c < d.length; )
            ((k = d[c]), ++c, k.type == lc.DOCKS && b.push(k));
          1 < b.length && (Z.removeAll(h, b), h.push(Z.random(b)));
          for (b = 0; b < h.length; )
            ((c = h[b]),
              ++b,
              null != c.patch
                ? this.fromPatch(c.patch, c.type)
                : this.fromVertex(c.vertex, c.type));
          this.growAll();
          b = 0;
          for (c = this.districts; b < c.length; )
            ((d = c[b]), ++b, d.updateGeometry(), d.createGroups());
          this.sort(this.districts, this.model.cells[0]);
          Pe.updateColors(this.districts);
        },
        fromPatch: function (a, b) {
          return null == a.district
            ? ((b = new Pe([a], b)),
              this.districts.push(b),
              N.remove(this.unassigned, a),
              b)
            : null;
        },
        fromVertex: function (a, b, c) {
          null == c && (c = !0);
          var d = this.model.cellsByVertex(a);
          d = Z.intersect(d, this.city);
          a = [];
          for (var f = 0; f < d.length; ) {
            var h = d[f];
            ++f;
            null == h.district && a.push(h);
          }
          if (0 == a.length || (c && a.length < d.length)) return null;
          b = new Pe(a, b);
          this.districts.push(b);
          Z.removeAll(this.unassigned, a);
          return b;
        },
        getType: function (a) {
          return a.ward instanceof xd
            ? lc.CASTLE(a)
            : a.ward instanceof ce
              ? lc.PARK
              : a.landing && a.ward instanceof Pc
                ? lc.DOCKS
                : -1 != this.model.inner.indexOf(a)
                  ? lc.REGULAR
                  : lc.SPRAWL;
        },
        growAll: function () {
          for (var a = [], b = 0, c = this.districts; b < c.length; ) {
            var d = c[b];
            ++b;
            a.push(this.getGrower(d));
          }
          for (b = a; 0 < b.length; )
            for (c = Z.shuffle(b), a = 0; a < c.length; )
              if (
                ((d = c[a]),
                ++a,
                d.grow(this.unassigned) || N.remove(b, d),
                0 == this.unassigned.length)
              )
                return;
          for (; 0 < this.unassigned.length; )
            for (
              a = Z.random(this.unassigned),
                a = this.fromPatch(a, this.getType(a)),
                d = this.getGrower(a);
              d.grow(this.unassigned);

            );
        },
        getGrower: function (a) {
          switch (a.type._hx_index) {
            case 2:
              return new di(a);
            case 6:
              return new ei(a);
            default:
              return new Re(a);
          }
        },
        sort: function (a, b) {
          for (var c = new pa(), d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            null == f.equator && (f.equator = ze.build(Ua.toPoly(f.border)));
            c.set(f, qa.lerp(f.equator[0], f.equator[1]));
          }
          var h = c,
            k = Sa.centroid(b.shape);
          a.sort(function (a, b) {
            a = I.distance(k, h.h[a.__id__]);
            b = I.distance(k, h.h[b.__id__]);
            b = a - b;
            return 0 == b ? 0 : 0 > b ? -1 : 1;
          });
          for (c = 0; c < a.length; )
            if (((f = a[c]), ++c, -1 != f.faces.indexOf(b.face))) {
              N.remove(a, f);
              a.unshift(f);
              break;
            }
          var n = a.shift();
          for (b = [n]; 0 < a.length; )
            ((c = Z.min(a, function (a) {
              return I.distance(h.h[a.__id__], h.h[n.__id__]);
            })),
              (n =
                I.distance(h.h[n.__id__], h.h[c.__id__]) >
                I.distance(k, h.h[a[0].__id__])
                  ? a[0]
                  : c),
              N.remove(a, n),
              b.push(n));
          for (c = 0; c < b.length; ) ((d = b[c]), ++c, a.push(d));
        },
        __class__: ik,
      };
      var Re = function (a) {
        this.district = a;
        switch (a.type._hx_index) {
          case 1:
            a = 0.1;
            break;
          case 3:
            a = 0.1;
            break;
          case 4:
            a = 0.1;
            break;
          case 5:
            a = 0.5;
            break;
          default:
            a = 1;
        }
        this.rate = a;
      };
      g['com.watabou.mfcg.model.Grower'] = Re;
      Re.__name__ = 'com.watabou.mfcg.model.Grower';
      Re.prototype = {
        grow: function (a) {
          if (0 == this.rate) return !1;
          var b = 1 - this.rate;
          null == b && (b = 0.5);
          if ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < b)
            return !0;
          for (var c = [], d = 0, f = this.district.faces; d < f.length; ) {
            var h = f[d];
            ++d;
            for (var k = h.halfEdge, n = k, p = !0; p; ) {
              var g = n;
              n = n.next;
              p = n != k;
              b = g;
              g = b.twin;
              g = null != g ? g.face.data : null;
              -1 != a.indexOf(g) &&
                ((b =
                  this.validatePatch(h.data, g) * this.validateEdge(b.data)),
                null == b && (b = 0.5),
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < b &&
                  c.push(g));
            }
          }
          return 0 < c.length
            ? ((c = Z.random(c)),
              this.district.faces.push(c.face),
              (c.district = this.district),
              N.remove(a, c),
              !0)
            : !1;
        },
        validatePatch: function (a, b) {
          return a.landing == b.landing ? 1 : 0;
        },
        validateEdge: function (a) {
          if (null != a)
            switch (a._hx_index) {
              case 2:
                return 0.9;
              case 3:
                return 0;
              case 4:
                return 0;
              default:
                return 1;
            }
          else return 1;
        },
        __class__: Re,
      };
      var di = function (a) {
        Re.call(this, a);
      };
      g['com.watabou.mfcg.model.DocksGrower'] = di;
      di.__name__ = 'com.watabou.mfcg.model.DocksGrower';
      di.__super__ = Re;
      di.prototype = v(Re.prototype, {
        validatePatch: function (a, b) {
          return b.landing && b.ward instanceof Pc ? 1 : 0;
        },
        __class__: di,
      });
      var ei = function (a) {
        Re.call(this, a);
      };
      g['com.watabou.mfcg.model.ParkGrower'] = ei;
      ei.__name__ = 'com.watabou.mfcg.model.ParkGrower';
      ei.__super__ = Re;
      ei.prototype = v(Re.prototype, {
        validatePatch: function (a, b) {
          return b.ward instanceof ce ? 1 : 0;
        },
        __class__: ei,
      });
      var og = function () {
        this.components = [];
      };
      g['com.watabou.utils.Noise'] = og;
      og.__name__ = 'com.watabou.utils.Noise';
      og.fractal = function (a, b, c) {
        null == c && (c = 0.5);
        null == b && (b = 1);
        null == a && (a = 1);
        for (var d = new og(), f = 1, h = 0; h < a; ) {
          h++;
          var k = new Se((C.seed = (48271 * C.seed) % 2147483647 | 0));
          k.gridSize = b;
          k.amplitude = f;
          d.components.push(k);
          b *= 2;
          f *= c;
        }
        return d;
      };
      og.prototype = {
        get: function (a, b) {
          for (var c = 0, d = 0, f = this.components; d < f.length; ) {
            var h = f[d];
            ++d;
            c += h.get(a, b);
          }
          return c;
        },
        __class__: og,
      };
      var C = function () {};
      g['com.watabou.utils.Random'] = C;
      C.__name__ = 'com.watabou.utils.Random';
      C.reset = function (a) {
        null == a && (a = -1);
        C.seed = -1 != a ? a : new Date().getTime() % 2147483647 | 0;
      };
      C.save = function () {
        return (C.saved = C.seed);
      };
      C.restore = function (a) {
        null == a && (a = -1);
        -1 != a
          ? (C.seed = a)
          : -1 != C.saved && ((C.seed = C.saved), (C.saved = -1));
      };
      C.float = function () {
        return (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647;
      };
      var Se = function (a) {
        this.offsetX = this.offsetY = 0;
        this.gridSize = this.amplitude = 1;
        for (var b = [], c = 0; 256 > c; ) {
          var d = c++;
          b.push(Se.permutation[(d + a) % 256]);
        }
        this.p = b;
        this.p = this.p.concat(this.p);
        if (null == Se.smooth) {
          b = [];
          for (c = 0; 4096 > c; )
            ((d = c++),
              (a = d / 4096),
              b.push(a * a * a * (a * (6 * a - 15) + 10)));
          Se.smooth = b;
        }
      };
      g['com.watabou.utils.Perlin'] = Se;
      Se.__name__ = 'com.watabou.utils.Perlin';
      Se.prototype = {
        get: function (a, b) {
          a = a * this.gridSize + this.offsetX;
          0 > a && (a += 256);
          b = b * this.gridSize + this.offsetY;
          0 > b && (b += 256);
          var c = Math.floor(a),
            d = c + 1,
            f = a - c,
            h = Se.smooth[(4096 * f) | 0];
          a = Math.floor(b);
          var k = a + 1,
            n = b - a,
            p = Se.smooth[(4096 * n) | 0];
          b = this.p[this.p[d] + a];
          var g = this.p[this.p[c] + k];
          d = this.p[this.p[d] + k];
          switch (this.p[this.p[c] + a] & 3) {
            case 0:
              c = f + n;
              break;
            case 1:
              c = f - n;
              break;
            case 2:
              c = -f + n;
              break;
            case 3:
              c = -f - n;
              break;
            default:
              c = 0;
          }
          a = f - 1;
          switch (b & 3) {
            case 0:
              b = a + n;
              break;
            case 1:
              b = a - n;
              break;
            case 2:
              b = -a + n;
              break;
            case 3:
              b = -a - n;
              break;
            default:
              b = 0;
          }
          k = c + (b - c) * h;
          b = n - 1;
          switch (g & 3) {
            case 0:
              c = f + b;
              break;
            case 1:
              c = f - b;
              break;
            case 2:
              c = -f + b;
              break;
            case 3:
              c = -f - b;
              break;
            default:
              c = 0;
          }
          a = f - 1;
          b = n - 1;
          switch (d & 3) {
            case 0:
              b = a + b;
              break;
            case 1:
              b = a - b;
              break;
            case 2:
              b = -a + b;
              break;
            case 3:
              b = -a - b;
              break;
            default:
              b = 0;
          }
          return this.amplitude * (k + (c + (b - c) * h - k) * p);
        },
        __class__: Se,
      };
      var Ae = function () {};
      g['com.watabou.mfcg.model.Forester'] = Ae;
      Ae.__name__ = 'com.watabou.mfcg.model.Forester';
      Ae.fillArea = function (a, b) {
        null == b && (b = 1);
        a = Ae.pattern.fill(new Xh(a));
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          (Ae.noise.get(f.x, f.y) + 1) / 2 < b && c.push(f);
        }
        return c;
      };
      Ae.fillLine = function (a, b, c) {
        null == c && (c = 1);
        for (var d = Math.ceil(I.distance(a, b) / 3), f = [], h = 0; h < d; ) {
          var k = h++;
          k = qa.lerp(
            a,
            b,
            (k + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) / d,
          );
          (Ae.noise.get(k.x, k.y) + 1) / 2 < c && f.push(k);
        }
        return f;
      };
      var ci = function (a, b, c) {
        null == c && (c = 'Landmark');
        this.model = a;
        this.pos = b;
        this.name = c;
        this.assign();
      };
      g['com.watabou.mfcg.model.Landmark'] = ci;
      ci.__name__ = 'com.watabou.mfcg.model.Landmark';
      ci.prototype = {
        assign: function () {
          for (var a = 0, b = this.model.cells; a < b.length; ) {
            var c = b[a];
            ++a;
            if (this.assignPoly(c.shape)) break;
          }
        },
        assignPoly: function (a) {
          if (Gb.rect(a).containsPoint(this.pos)) {
            var b = a.length;
            this.p0 = a[0];
            for (var c = 2; c < b; ) {
              var d = c++;
              this.p1 = a[d - 1];
              this.p2 = a[d];
              d = qa.barycentric(this.p0, this.p1, this.p2, this.pos);
              if (0 <= d.x && 0 <= d.y && 0 <= d.z)
                return ((this.i0 = d.x), (this.i1 = d.y), (this.i2 = d.z), !0);
            }
          }
          return !1;
        },
        update: function () {
          var a = this.p0,
            b = this.i0,
            c = new I(a.x * b, a.y * b);
          a = this.p1;
          b = this.i1;
          c = c.add(new I(a.x * b, a.y * b));
          a = this.p2;
          b = this.i2;
          this.pos = c.add(new I(a.x * b, a.y * b));
        },
        __class__: ci,
      };
      var je = function (a) {
        null == a && (a = []);
        this.valueClasses = a;
        this.slots = zd.NIL;
        this.priorityBased = !1;
      };
      g['msignal.Signal'] = je;
      je.__name__ = 'msignal.Signal';
      je.prototype = {
        add: function (a) {
          return this.registerListener(a);
        },
        addOnce: function (a) {
          return this.registerListener(a, !0);
        },
        addWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !1, b);
        },
        addOnceWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !0, b);
        },
        remove: function (a) {
          var b = this.slots.find(a);
          if (null == b) return null;
          this.slots = this.slots.filterNot(a);
          return b;
        },
        removeAll: function () {
          this.slots = zd.NIL;
        },
        registerListener: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return this.registrationPossible(a, b)
            ? ((a = this.createSlot(a, b, c)),
              this.priorityBased || 0 == c || (this.priorityBased = !0),
              (this.slots =
                this.priorityBased || 0 != c
                  ? this.slots.insertWithPriority(a)
                  : this.slots.prepend(a)),
              a)
            : this.slots.find(a);
        },
        registrationPossible: function (a, b) {
          return this.slots.nonEmpty && null != this.slots.find(a) ? !1 : !0;
        },
        createSlot: function (a, b, c) {
          return null;
        },
        get_numListeners: function () {
          return this.slots.get_length();
        },
        __class__: je,
        __properties__: { get_numListeners: 'get_numListeners' },
      };
      var Nc = function () {
        je.call(this);
      };
      g['msignal.Signal0'] = Nc;
      Nc.__name__ = 'msignal.Signal0';
      Nc.__super__ = je;
      Nc.prototype = v(je.prototype, {
        dispatch: function () {
          for (var a = this.slots; a.nonEmpty; )
            (a.head.execute(), (a = a.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new fi(this, a, b, c);
        },
        __class__: Nc,
      });
      var zd = function (a, b) {
        this.nonEmpty = !1;
        null == a && null == b
          ? (this.nonEmpty = !1)
          : null != a &&
            ((this.head = a),
            (this.tail = null == b ? zd.NIL : b),
            (this.nonEmpty = !0));
      };
      g['msignal.SlotList'] = zd;
      zd.__name__ = 'msignal.SlotList';
      zd.prototype = {
        get_length: function () {
          if (!this.nonEmpty) return 0;
          if (this.tail == zd.NIL) return 1;
          for (var a = 0, b = this; b.nonEmpty; ) (++a, (b = b.tail));
          return a;
        },
        prepend: function (a) {
          return new zd(a, this);
        },
        insertWithPriority: function (a) {
          if (!this.nonEmpty) return new zd(a);
          var b = a.priority;
          if (b >= this.head.priority) return this.prepend(a);
          for (var c = new zd(this.head), d = c, f = this.tail; f.nonEmpty; ) {
            if (b > f.head.priority) return ((d.tail = f.prepend(a)), c);
            d = d.tail = new zd(f.head);
            f = f.tail;
          }
          d.tail = new zd(a);
          return c;
        },
        filterNot: function (a) {
          if (!this.nonEmpty || null == a) return this;
          if (this.head.listener == a) return this.tail;
          for (var b = new zd(this.head), c = b, d = this.tail; d.nonEmpty; ) {
            if (d.head.listener == a) return ((c.tail = d.tail), b);
            c = c.tail = new zd(d.head);
            d = d.tail;
          }
          return this;
        },
        find: function (a) {
          if (!this.nonEmpty) return null;
          for (var b = this; b.nonEmpty; ) {
            if (b.head.listener == a) return b.head;
            b = b.tail;
          }
          return null;
        },
        __class__: zd,
        __properties__: { get_length: 'get_length' },
      };
      var ec = function (a) {
        je.call(this, [a]);
      };
      g['msignal.Signal1'] = ec;
      ec.__name__ = 'msignal.Signal1';
      ec.__super__ = je;
      ec.prototype = v(je.prototype, {
        dispatch: function (a) {
          for (var b = this.slots; b.nonEmpty; )
            (b.head.execute(a), (b = b.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new gi(this, a, b, c);
        },
        __class__: ec,
      });
      var Bb = function () {};
      g['com.watabou.mfcg.model.ModelDispatcher'] = Bb;
      Bb.__name__ = 'com.watabou.mfcg.model.ModelDispatcher';
      var fh = function (a) {
        this.graph = new ak();
        this.pt2node = new pa();
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          for (var d = (c = c.face.halfEdge), f = !0; f; ) {
            var h = d;
            d = d.next;
            f = d != c;
            if (null == h.data) {
              var k = this.getNode(h.origin),
                n = this.getNode(h.next.origin);
              k.link(n, I.distance(h.origin.point, h.next.origin.point), !1);
            }
          }
        }
      };
      g['com.watabou.mfcg.model.Topology'] = fh;
      fh.__name__ = 'com.watabou.mfcg.model.Topology';
      fh.prototype = {
        getNode: function (a) {
          if (null != this.pt2node.h.__keys__[a.__id__])
            return this.pt2node.h[a.__id__];
          var b = this.pt2node,
            c = this.graph.add(new bk(a));
          b.set(a, c);
          return c;
        },
        buildPath: function (a, b) {
          var c = this.pt2node.h[b.__id__];
          if (null == this.pt2node.h[a.__id__] || null == c) return null;
          a = this.graph.aStar(
            this.pt2node.h[a.__id__],
            this.pt2node.h[b.__id__],
          );
          if (null == a) return null;
          b = [];
          for (c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            b.push(d.data);
          }
          return b;
        },
        excludePoints: function (a) {
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            c = this.pt2node.h[c.__id__];
            null != c && c.unlinkAll();
          }
        },
        excludePolygon: function (a) {
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = this.pt2node.h[c.origin.__id__];
            c = this.pt2node.h[c.next.origin.__id__];
            null != d && null != c && d.unlink(c);
          }
        },
        __class__: fh,
      };
      var Db = function (a, b, c) {
        this.unit = a;
        this.iu2unit = b;
        this.sub = c;
      };
      g['com.watabou.mfcg.model.UnitSystem'] = Db;
      Db.__name__ = 'com.watabou.mfcg.model.UnitSystem';
      Db.__properties__ = {
        set_current: 'set_current',
        get_current: 'get_current',
      };
      Db.toggle = function () {
        Db.set_current(Db.get_current() == Db.metric ? Db.imperial : Db.metric);
      };
      Db.get_current = function () {
        return Db._current;
      };
      Db.set_current = function (a) {
        Db._current = a;
        Bb.unitsChanged.dispatch();
        return Db._current;
      };
      Db.prototype = {
        measure: function (a) {
          for (var b = this; ; ) {
            var c = a / b.iu2unit;
            if (1 > c && null != b.sub) b = this.sub;
            else return { value: c, system: b };
          }
        },
        getPlank: function (a, b) {
          a = a.get_scaleX();
          for (var c, d, f = this; ; )
            if (
              ((d = f.iu2unit * a),
              (c = Math.pow(10, Math.ceil(Math.log(b / d) / Math.log(10)))),
              (d *= c),
              d > 5 * b
                ? (c /= 5)
                : d > 4 * b
                  ? (c /= 4)
                  : d > 2 * b && (c /= 2),
              1 >= c && null != f.sub)
            )
              f = f.sub;
            else break;
          return c * f.iu2unit;
        },
        __class__: Db,
      };
      var hi = function (a, b, c) {
        null == c && (c = !1);
        this.cacheOBB = new pa();
        this.cacheArea = new pa();
        this.group = a;
        this.shape = b;
        a = a.district.alleys;
        c
          ? (this.lots = [b])
          : (ba.get('no_triangles', !1),
            ba.get('lots_method', 'Twisted'),
            (this.lots = $k.createLots(this, a)));
        sb.preview ||
          'Offset' != ba.get('processing') ||
          this.indentFronts(this.lots);
      };
      g['com.watabou.mfcg.model.blocks.Block'] = hi;
      hi.__name__ = 'com.watabou.mfcg.model.blocks.Block';
      hi.prototype = {
        createRects: function () {
          this.rects = [];
          for (
            var a = this.group.district.alleys.inset,
              b = this.shape.length,
              c = 0,
              d = this.lots;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            var h = -1,
              k = !1,
              n = f.length;
            if (this.isRectangle(f)) k = !0;
            else
              for (var p = 0, g = n; p < g; ) {
                for (
                  var q = p++,
                    m = f[q],
                    u = f[(q + 1) % n],
                    r = -1,
                    l = 0,
                    x = b;
                  l < x;

                ) {
                  var D = l++;
                  if (
                    qa.converge(m, u, this.shape[D], this.shape[(D + 1) % b])
                  ) {
                    r = q;
                    break;
                  }
                }
                if (-1 != r)
                  if (-1 != h) {
                    k = !0;
                    break;
                  } else h = r;
              }
            k ||
              (null != this.cacheArea.h.__keys__[f.__id__]
                ? (k = this.cacheArea.h[f.__id__])
                : ((k = this.cacheArea),
                  (n = Sa.area(f)),
                  k.set(f, n),
                  (k = n)),
              (h = -1 != h ? Gb.lir(f, h) : Gb.lira(f)),
              (k = Math.max(1.2, Math.sqrt(k) / 2)),
              (f =
                I.distance(h[0], h[1 % h.length]) >= k &&
                I.distance(h[1], h[2 % h.length]) >= k
                  ? h
                  : f));
            if (
              'Shrink' == ba.get('processing') &&
              ((h =
                a *
                (1 -
                  Math.abs(
                    ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                      (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647 +
                      (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647 +
                      (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ))),
              0.3 < h)
            ) {
              k = f.length;
              n = [];
              p = 0;
              for (g = k; p < g; ) {
                m = p++;
                q = f[m];
                m = f[(m + 1) % k];
                u = !1;
                r = 0;
                for (l = b; r < l; )
                  if (
                    ((x = r++),
                    qa.converge(q, m, this.shape[x], this.shape[(x + 1) % b]))
                  ) {
                    u = !0;
                    break;
                  }
                n.push(u ? 0 : h);
              }
              f = gd.shrink(f, n);
            }
            this.rects.push(f);
          }
        },
        isRectangle: function (a) {
          if (4 != a.length) return !1;
          var b = Sa.area(a);
          a = Sa.rectArea(Gb.obb(a));
          return 0.75 < b / a;
        },
        createBuildings: function () {
          var a = this;
          null == this.rects && this.createRects();
          var b = this.group.district.alleys,
            c = (b.minSq / 4) * b.shapeFactor;
          this.buildings = [];
          b = 0;
          for (var d = this.rects; b < d.length; ) {
            var f = [d[b]];
            ++b;
            var h = (function (b) {
              return function (d) {
                d = Jd.create(d, c, !0, null, 0.6);
                a.buildings.push(null != d ? d : b[0]);
              };
            })(f);
            if (4 < f[0].length) {
              f = f[0].slice();
              do Sa.simplifyClosed(f);
              while (4 < f.length);
              h(f);
            } else 4 == f[0].length ? h(f[0]) : this.buildings.push(f[0]);
          }
        },
        filterInner: function (a) {
          for (var b = [], c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            a: {
              var f = d;
              var h = this.shape;
              h = h[h.length - 1];
              for (var k = 0, n = this.shape.length; k < n; ) {
                var p = k++,
                  g = h;
                h = this.shape[p];
                p = h.x - g.x;
                var q = h.y - g.y,
                  m = p * p + q * q;
                if (!(1e-9 > m))
                  for (var u = 0, r = f.length; u < r; ) {
                    var l = u++;
                    l = f[l];
                    var x = ((l.x - g.x) * p + (l.y - g.y) * q) / m;
                    if (
                      !(0 > x || 1 < x) &&
                      1e-9 > I.distance(l, qa.lerp(g, h, x))
                    ) {
                      f = !1;
                      break a;
                    }
                  }
              }
              f = !0;
            }
            f && b.push(d);
          }
          this.courtyard = b;
          return Z.difference(a, this.courtyard);
        },
        indentFronts: function (a) {
          for (var b = 0, c = a.length; b < c; ) {
            var d = b++,
              f = a[d];
            if (null != this.cacheArea.h.__keys__[f.__id__])
              var h = this.cacheArea.h[f.__id__];
            else {
              h = this.cacheArea;
              var k = Sa.area(f);
              h.set(f, k);
              h = k;
            }
            h =
              Math.min(Math.sqrt(h) / 3, 1.2) *
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647);
            0.5 > h ||
              ((k = Sa.center(f)),
              (k = (
                null == this.center
                  ? (this.center = Sa.centroid(this.shape))
                  : this.center
              ).subtract(k)),
              k.normalize(h),
              (h = Yc.translate(this.shape, k.x, k.y)),
              (f = ye.and(f, h)),
              null != f && 3 <= f.length && (a[d] = f));
          }
        },
        spawnTrees: function () {
          var a = [];
          if (null != this.courtyard) {
            var b = this.group.district.greenery;
            this.group.urban || (b *= 0.1);
            for (var c = 0, d = this.courtyard; c < d.length; ) {
              var f = d[c];
              ++c;
              f = Ae.fillArea(f, b);
              for (var h = 0; h < f.length; ) {
                var k = f[h];
                ++h;
                a.push(k);
              }
            }
          }
          return a;
        },
        __class__: hi,
      };
      var $k = function () {};
      g['com.watabou.mfcg.model.blocks.TwistedBlock'] = $k;
      $k.__name__ = 'com.watabou.mfcg.model.blocks.TwistedBlock';
      $k.createLots = function (a, b) {
        var c = new ii(a.shape, b.minSq, Math.max(4 * b.sizeChaos, 1.2));
        c.minTurnOffset = 0.5;
        var d = c.partition();
        d = a.filterInner(d);
        b = b.minSq / 4;
        c = [];
        for (var f = 0; f < d.length; ) {
          var h = d[f];
          ++f;
          if (null != a.cacheArea.h.__keys__[h.__id__])
            var k = a.cacheArea.h[h.__id__];
          else {
            k = a.cacheArea;
            var n = Sa.area(h);
            k.set(h, n);
            k = n;
          }
          if (4 > h.length || k < b) k = !1;
          else {
            if (null != a.cacheOBB.h.__keys__[h.__id__])
              var p = a.cacheOBB.h[h.__id__];
            else ((n = a.cacheOBB), (p = Gb.obb(h)), n.set(h, p));
            n = I.distance(p[0], p[1]);
            p = I.distance(p[1], p[2]);
            k = 1.2 <= n && 1.2 <= p && 0.5 < k / (n * p);
          }
          k && c.push(h);
        }
        return c;
      };
      var Rb = function (a, b) {
        this.model = a;
        this.patch = b;
        b.ward = this;
      };
      g['com.watabou.mfcg.model.wards.Ward'] = Rb;
      Rb.__name__ = 'com.watabou.mfcg.model.wards.Ward';
      Rb.inset = function (a, b, c) {
        var d = uc.inset(a, b);
        if (null == d) return null;
        for (var f = c.length, h = 0; h < f; ) {
          var k = h++,
            n = c[k],
            p = (k + f - 1) % f;
          n > b[k] &&
            n > b[p] &&
            ((k = a[k]),
            (n = Qd.regular(
              9,
              n,
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
            )),
            Yc.asTranslate(n, k.x, k.y),
            (n = ye.and(d, Z.revert(n), !0)),
            null != n && (d = n));
        }
        return d;
      };
      Rb.prototype = {
        createGeometry: function () {},
        spawnTrees: function () {
          return null;
        },
        getAvailable: function () {
          for (
            var a = this.patch.shape.length,
              b = [],
              c = this.patch.face.halfEdge,
              d = c,
              f = !0;
            f;

          ) {
            var h = d;
            d = d.next;
            f = d != c;
            var k = h.origin,
              n = 0,
              p = 0;
            for (h = this.model.walls; p < h.length; ) {
              var g = h[p];
              ++p;
              n = Math.max(n, g.getTowerRadius(k));
            }
            g = 0;
            for (var q = this.model.canals; g < q.length; ) {
              var m = q[g];
              ++g;
              null != Ua.edgeByOrigin(m.course, k) &&
                (n = Math.max(n, m.width));
            }
            b.push(n);
          }
          p = [];
          d = c = this.patch.face.halfEdge;
          for (f = !0; f; )
            ((h = d), (d = d.next), (f = d != c), (k = h), p.push(k));
          c = p;
          p = [];
          h = 0;
          for (g = a; h < g; ) {
            a = h++;
            k = c[a];
            q = 0;
            for (d = this.model.canals; q < d.length; )
              ((m = d[q]),
                ++q,
                null != Ua.edgeByOrigin(m.course, k.origin) &&
                  ((b[a] = m.width / 2 + 1.2),
                  k.origin == m.course[0].origin && (b[a] += 1.2)));
            if (null == k.data)
              p.push((k.twin.face.data == this.model.plaza ? 2 : 1.2) / 2);
            else {
              switch (k.data._hx_index) {
                case 1:
                  a = this.patch.landing ? 2 : 1.2;
                  break;
                case 2:
                  a = 1;
                  break;
                case 3:
                  a = pc.THICKNESS / 2 + 1.2;
                  break;
                case 4:
                  a = this.model.getCanalWidth(k) / 2 + 1.2;
                  break;
                default:
                  a = 0;
              }
              p.push(a);
            }
          }
          return Rb.inset(this.patch.shape, p, b);
        },
        getLabel: function () {
          return null != this.patch.district ? this.patch.district.name : null;
        },
        getColor: function () {
          return null != this.patch.district ? this.patch.district.color : 0;
        },
        onContext: function (a, b, c) {},
        __class__: Rb,
      };
      var Pc = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Alleys'] = Pc;
      Pc.__name__ = 'com.watabou.mfcg.model.wards.Alleys';
      Pc.__super__ = Rb;
      Pc.prototype = v(Rb.prototype, {
        createGeometry: function () {
          this.group.core == this.patch.face && this.group.createGeometry();
          this.trees = null;
        },
        spawnTrees: function () {
          if (this.group.core == this.patch.face && null == this.trees) {
            this.trees = [];
            for (var a = 0, b = this.group.blocks; a < b.length; ) {
              var c = b[a];
              ++a;
              var d = this.trees;
              c = c.spawnTrees();
              for (var f = 0; f < c.length; ) {
                var h = c[f];
                ++f;
                d.push(h);
              }
            }
          }
          return this.trees;
        },
        onContext: function (a, b, c) {
          var d = ba.get('display_mode', 'Lots');
          if ('Block' != d) {
            c = new I(b, c);
            for (var f = 0, h = this.group.blocks; f < h.length; )
              if (((b = h[f]), ++f, Gb.containsPoint(b.shape, c))) {
                switch (d) {
                  case 'Complex':
                    d = b.buildings;
                    break;
                  case 'Simple':
                    d = b.rects;
                    break;
                  default:
                    d = b.lots;
                }
                for (h = 0; h < d.length; )
                  if (((f = [d[h]]), ++h, Gb.containsPoint(f[0], c))) {
                    c = [this.model.bp.seed];
                    c[0] += this.model.cells.indexOf(this.patch);
                    c[0] += this.group.blocks.indexOf(b);
                    c[0] += d.indexOf(f[0]);
                    a.addItem(
                      'Open in Dwellings',
                      (function (a, b) {
                        return function () {
                          Te.openInDwellings(b[0], !0, a[0]);
                        };
                      })(c, f),
                    );
                    break;
                  }
                break;
              }
          }
        },
        __class__: Pc,
      });
      var xd = function (a, b) {
        Rb.call(this, a, b);
        for (var c = [], d = 0, f = b.shape; d < f.length; ) {
          var h = f[d];
          ++d;
          Z.some(
            this.model.cellsByVertex(this.model.dcel.vertices.h[h.__id__]),
            function (a) {
              return !a.withinCity;
            },
          ) && c.push(h);
        }
        this.wall = new pc(!0, a, [b], c);
        this.adjustShape(this.model);
      };
      g['com.watabou.mfcg.model.wards.Castle'] = xd;
      xd.__name__ = 'com.watabou.mfcg.model.wards.Castle';
      xd.__super__ = Rb;
      xd.prototype = v(Rb.prototype, {
        adjustShape: function (a) {
          var b = this.patch.shape,
            c = Sa.centroid(b),
            d = 0,
            f = 0,
            h = function () {
              d = Infinity;
              for (var a = (f = 0); a < b.length; ) {
                var h = b[a];
                ++a;
                var k = h.x - c.x;
                h = h.y - c.y;
                k = k * k + h * h;
                d > k && (d = k);
                f < k && (f = k);
              }
              d = Math.sqrt(d);
              f = Math.sqrt(f);
            };
          for (h(); 10 > d; ) {
            gb.trace('Bloating the citadel...', {
              fileName: 'Source/com/watabou/mfcg/model/wards/Castle.hx',
              lineNumber: 60,
              className: 'com.watabou.mfcg.model.wards.Castle',
              methodName: 'adjustShape',
            });
            var k = 2 * Math.max(15, f),
              n = a.dcel.vertices,
              p = n;
            for (n = n.keys(); n.hasNext(); ) {
              var g = n.next();
              p.get(g);
              var q = I.distance(g, c);
              if (q < k) {
                var m = g.subtract(c);
                q = Math.pow(q / k, -0.25);
                wd.set(g, new I(c.x + m.x * q, c.y + m.y * q));
              }
            }
            h();
          }
          h = this.wall.gates[0];
          a = [h.point];
          2 == h.edges.length &&
            (a.push(h.edges[0].next.origin.point),
            a.push(h.edges[1].next.origin.point));
          for (h = Sa.compactness(b); 0.75 > h; ) {
            gb.trace('Equalizing... ' + h, {
              fileName: 'Source/com/watabou/mfcg/model/wards/Castle.hx',
              lineNumber: 84,
              className: 'com.watabou.mfcg.model.wards.Castle',
              methodName: 'adjustShape',
            });
            this.equalize(c, 0.2, a);
            k = Sa.compactness(b);
            if (0.001 > Math.abs(k - h)) throw X.thrown('Bad citadel shape!');
            h = k;
          }
        },
        equalize: function (a, b, c) {
          for (
            var d = this.patch.shape,
              f = d.length,
              h = d[0].subtract(a),
              k = 1,
              n = f;
            k < n;

          ) {
            var p = k++,
              g = d[p].subtract(a),
              q = (2 * -Math.PI * p) / f,
              m = Math.sin(q);
            q = Math.cos(q);
            p = new I(g.x * q - g.y * m, g.y * q + g.x * m);
            h.x += p.x;
            h.y += p.y;
          }
          k = 1 / f;
          h.x *= k;
          h.y *= k;
          k = 0;
          for (n = f; k < n; )
            ((p = k++),
              -1 == c.indexOf(d[p]) &&
                ((q = (2 * Math.PI * p) / f),
                (m = Math.sin(q)),
                (q = Math.cos(q)),
                wd.set(
                  d[p],
                  qa.lerp(
                    d[p],
                    a.add(new I(h.x * q - h.y * m, h.y * q + h.x * m)),
                    b,
                  ),
                )));
        },
        createGeometry: function () {
          C.restore(this.patch.seed);
          var a = gd.shrinkEq(this.patch.shape, pc.THICKNESS + 2);
          a = Gb.lira(a);
          this.building = Jd.create(
            a,
            Sa.area(this.patch.shape) / 25,
            null,
            null,
            0.4,
          );
          null == this.building && (this.building = a);
        },
        getLabel: function () {
          return 'Castle';
        },
        onContext: function (a, b, c) {
          var d = this;
          if (Gb.containsPoint(this.building, new I(b, c))) {
            var f = this.model.bp.seed;
            f += this.model.cells.indexOf(this.patch);
            a.addItem('Open in Dwellings', function () {
              Te.openInDwellings(d.building, !0, f);
            });
          }
        },
        __class__: xd,
      });
      var Ne = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Cathedral'] = Ne;
      Ne.__name__ = 'com.watabou.mfcg.model.wards.Cathedral';
      Ne.__super__ = Rb;
      Ne.prototype = v(Rb.prototype, {
        createGeometry: function () {
          C.restore(this.patch.seed);
          var a = this.getAvailable();
          if (null == a) this.building = [];
          else {
            a = Gb.lira(a);
            var b = Jd.create(a, 20, !1, !0, 0.2);
            this.building = [null != b ? b : a];
          }
        },
        onContext: function (a, b, c) {
          b = new I(b, c);
          c = 0;
          for (var d = this.building; c < d.length; ) {
            var f = [d[c]];
            ++c;
            if (Gb.containsPoint(f[0], b)) {
              var h = [this.model.bp.seed];
              h[0] += this.model.cells.indexOf(this.patch);
              a.addItem(
                'Open in Dwellings',
                (function (a, b) {
                  return function () {
                    Te.openInDwellings(b[0], !1, a[0]);
                  };
                })(h, f),
              );
            }
          }
        },
        __class__: Ne,
      });
      var yd = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Farm'] = yd;
      yd.__name__ = 'com.watabou.mfcg.model.wards.Farm';
      yd.__super__ = Rb;
      yd.prototype = v(Rb.prototype, {
        getAvailable: function () {
          for (
            var a = this.patch.shape.length,
              b = [],
              c = this.patch.face.halfEdge,
              d = c,
              f = !0;
            f;

          ) {
            var h = d;
            d = d.next;
            f = d != c;
            var k = h,
              n = 0,
              p = 0;
            for (h = this.model.walls; p < h.length; ) {
              var g = h[p];
              ++p;
              n = Math.max(n, g.getTowerRadius(k.origin));
            }
            b.push(n);
          }
          p = [];
          d = c = this.patch.face.halfEdge;
          for (f = !0; f; )
            ((h = d), (d = d.next), (f = d != c), (k = h), p.push(k));
          c = p;
          p = [];
          for (h = 0; h < a; ) {
            d = h++;
            k = c[d];
            f = 0;
            for (n = this.model.canals; f < n.length; )
              ((g = n[f]),
                ++f,
                null != Ua.edgeByOrigin(g.course, k.origin) &&
                  ((b[d] = g.width / 2 + 1.2),
                  k.origin == g.course[0].origin && (b[d] += 1.2)));
            if (null == k.data)
              p.push(
                null != k.twin && k.twin.face.data.ward instanceof yd ? 1 : 0,
              );
            else {
              switch (k.data._hx_index) {
                case 2:
                  k = 3;
                  break;
                case 3:
                  k = 2 * pc.THICKNESS;
                  break;
                case 4:
                  k = this.model.getCanalWidth(k) / 2 + 1.2;
                  break;
                default:
                  k = 2;
              }
              p.push(k);
            }
          }
          return Rb.inset(this.patch.shape, p, b);
        },
        createGeometry: function () {
          C.restore(this.patch.seed);
          var a = this.getAvailable();
          this.furrows = [];
          this.subPlots = this.splitField(a);
          for (var b = [], c = (a = this.patch.face.halfEdge), d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != a;
            null != f.twin && f.twin.face.data.ward instanceof Rb && b.push(f);
          }
          if (0 < b.length) {
            a = [];
            c = 0;
            for (d = this.subPlots; c < d.length; ) {
              f = d[c];
              ++c;
              a: {
                var h = f;
                for (var k = h[h.length - 1], n = 0, p = h.length; n < p; ) {
                  var g = n++,
                    q = k;
                  k = h[g];
                  for (g = 0; g < b.length; ) {
                    var m = b[g];
                    ++g;
                    if (
                      qa.converge(q, k, m.origin.point, m.next.origin.point)
                    ) {
                      h = !1;
                      break a;
                    }
                  }
                }
                h = !0;
              }
              h && a.push(f);
            }
            this.subPlots = a;
          }
          a = 0;
          for (c = this.subPlots.length; a < c; )
            for (
              d = a++,
                b = this.subPlots[d],
                f = Gb.obb(b),
                b = this.subPlots[d] = this.round(b),
                d = I.distance(f[0], f[1 % f.length]),
                h = Math.ceil(d / yd.MIN_FURROW),
                d = 0,
                k = h;
              d < k;

            )
              for (
                p = (d++ + 0.5) / h,
                  n = qa.lerp(f[0], f[1], p),
                  p = qa.lerp(f[3], f[2], p),
                  n = gd.pierce(b, n, p);
                2 <= n.length;

              )
                ((p = n.shift()),
                  (q = n.shift()),
                  1.2 < I.distance(p, q) && this.furrows.push(new hf(p, q)));
          a = [];
          c = 0;
          for (d = this.subPlots; c < d.length; )
            ((b = d[c]),
              ++c,
              (f = 0.2),
              null == f && (f = 0.5),
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < f &&
                a.push(this.getHousing(b)));
          this.buildings = a;
          this.trees = null;
        },
        splitField: function (a) {
          if (
            Sa.area(a) <
            yd.MIN_SUBPLOT *
              (1 +
                Math.abs(
                  ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ))
          )
            return [a];
          var b = Gb.obb(a),
            c = I.distance(b[1], b[0]) > I.distance(b[2], b[1]) ? 0 : 1,
            d =
              0.5 +
              0.2 *
                ((((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1),
            f = 0.5;
          null == f && (f = 0.5);
          f =
            Math.PI / 2 +
            ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < f
              ? 0
              : (Math.PI / 8) *
                ((((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1));
          d = qa.lerp(b[c], b[c + 1], d);
          b = b[c < b.length - 1 ? c + 1 : 0].subtract(b[c]);
          c = Math.sin(f);
          f = Math.cos(f);
          f = d.add(new I(b.x * f - b.y * c, b.y * f + b.x * c));
          a = gd.cut(a, d, f, 2);
          d = [];
          for (f = 0; f < a.length; )
            for (b = a[f], ++f, b = this.splitField(b), c = 0; c < b.length; ) {
              var h = b[c];
              ++c;
              d.push(h);
            }
          return d;
        },
        round: function (a) {
          for (var b = [], c = a.length, d = 0; d < c; ) {
            var f = d++,
              h = a[f];
            f = a[(f + 1) % c];
            var k = I.distance(h, f);
            k < 2 * yd.MIN_FURROW
              ? b.push(qa.lerp(h, f))
              : (b.push(qa.lerp(h, f, yd.MIN_FURROW / k)),
                b.push(qa.lerp(f, h, yd.MIN_FURROW / k)));
          }
          return b;
        },
        getHousing: function (a) {
          var b = 4 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
            c = 2 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
            d = Qd.rect(b, c),
            f = kf.longest(a),
            h = a[f < a.length - 1 ? f + 1 : 0].subtract(a[f]);
          h = h.clone();
          h.normalize(1);
          var k = h;
          h = a[f];
          a = a[(f + 1) % a.length];
          0.5 > (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647
            ? ((b /= 2), (a = h.add(new I(k.x * b, k.y * b))))
            : ((b /= 2), (a = a.subtract(new I(k.x * b, k.y * b))));
          h = new I(-k.y, k.x);
          b = c / 2;
          c = new I(h.x * b, h.y * b);
          a.x += c.x;
          a.y += c.y;
          Yc.asRotateYX(d, k.y, k.x);
          Yc.asAdd(d, a);
          k = Jd.create(
            d,
            4 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
            null,
            null,
            0.4,
          );
          return null != k ? k : d;
        },
        spawnTrees: function () {
          if (null == this.trees) {
            this.trees = [];
            for (
              var a =
                  Math.max(this.model.bounds.width, this.model.bounds.height) *
                  (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    3),
                b = 0,
                c = this.subPlots;
              b < c.length;

            ) {
              var d = c[b];
              ++b;
              for (var f = d.length, h = d[f - 1], k = 0; k < f; ) {
                var n = k++,
                  p = h;
                h = d[n];
                var g = 1 - qa.lerp(p, h).get_length() / a;
                n = this.trees;
                p = Ae.fillLine(p, h, g);
                for (g = 0; g < p.length; ) {
                  var q = p[g];
                  ++g;
                  n.push(q);
                }
              }
            }
          }
          return this.trees;
        },
        getLabel: function () {
          return 'Farmland';
        },
        onContext: function (a, b, c) {
          if ('Block' != ba.get('display_mode', 'Lots')) {
            b = new I(b, c);
            c = 0;
            for (var d = this.buildings; c < d.length; ) {
              var f = [d[c]];
              ++c;
              if (Gb.containsPoint(f[0], b)) {
                var h = [this.model.bp.seed];
                h[0] += this.model.cells.indexOf(this.patch);
                h[0] += this.buildings.indexOf(f[0]);
                a.addItem(
                  'Open in Dwellings',
                  (function (a, b) {
                    return function () {
                      Te.openInDwellings(b[0], !1, a[0]);
                    };
                  })(h, f),
                );
              }
            }
          }
        },
        __class__: yd,
      });
      var lf = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Harbour'] = lf;
      lf.__name__ = 'com.watabou.mfcg.model.wards.Harbour';
      lf.__super__ = Rb;
      lf.prototype = v(Rb.prototype, {
        createGeometry: function () {
          for (var a = [], b = 0, c = this.model.canals; b < c.length; ) {
            var d = c[b];
            ++b;
            a.push(d.course[0].origin);
          }
          b = [];
          var f = this.patch.face.halfEdge;
          do {
            d = this.model.getNeighbour(this.patch, f.origin);
            if (null != d && d.landing) {
              d = f.origin.point;
              var h = f.next.origin.point;
              -1 != a.indexOf(f.origin)
                ? b.push(
                    new hf(
                      qa.lerp(f.origin.point, f.next.origin.point, 0.5),
                      h,
                    ),
                  )
                : -1 != a.indexOf(f.next.origin)
                  ? b.push(
                      new hf(
                        d,
                        qa.lerp(f.origin.point, f.next.origin.point, 0.5),
                      ),
                    )
                  : b.push(new hf(d, h));
            }
            f = f.next;
          } while (f != this.patch.face.halfEdge);
          if (0 < b.length) {
            f = Z.max(b, function (a) {
              return I.distance(a.start, a.end);
            });
            h = I.distance(f.start, f.end);
            d = (h / 6) | 0;
            a = 6 * (d - 1);
            var k = (1 - a / h) / 2,
              n = a / (d - 1) / h;
            a = [];
            b = 0;
            for (c = d; b < c; ) {
              b++;
              d = qa.lerp(f.start, f.end, k);
              h = f.end.subtract(f.start);
              var p = new I(-h.y, h.x);
              h = 8;
              null == h && (h = 1);
              p = p.clone();
              p.normalize(h);
              h = d.add(p);
              k += n;
              a.push([d, h]);
            }
            this.piers = a;
          } else this.piers = [];
        },
        getLabel: function () {
          return 'Harbour';
        },
        __class__: lf,
      });
      var Te = function () {};
      g['com.watabou.mfcg.model.wards.Mansion'] = Te;
      Te.__name__ = 'com.watabou.mfcg.model.wards.Mansion';
      Te.openInDwellings = function (a, b, c) {
        a = new jk(a);
        var d = Math.round(a.len0 / 1.5),
          f = Math.round(a.len1 / 1.5);
        11 < d && ((f = Math.round((f / d) * 11)), (d = 11));
        1 > f && ((d = Math.round(d / f)), (f = 1));
        d = Fc.gatei(d, 1, 11);
        f = Fc.gatei(f, 1, 11);
        var h = new If(Te.DWELLINGS_URL);
        h.data = {
          seed: c,
          w: d,
          h: f,
          plan: Te.getPlan(a, d, f),
          tags: b ? 'tall' : '',
          from: 'city',
        };
        Ra.navigateToURL(h, 'mfcg2pm_' + c);
      };
      Te.getPlan = function (a, b, c) {
        for (var d = '', f = 0, h = 0, k = 0; k < c; )
          for (var n = k++, p = 0, g = b; p < g; ) {
            var q = p++,
              m = a.o,
              u = a.v0,
              r = (b - q - 1 + 0.5) / b;
            m = new I(m.x + u.x * r, m.y + u.y * r);
            u = a.v1;
            r = (c - 1 - n + 0.5) / c;
            m = new I(m.x + u.x * r, m.y + u.y * r);
            Gb.containsPoint(a.poly, m) && (f |= 1 << (h & 3));
            if (3 == (h & 3) || (q == b - 1 && n == c - 1))
              ((d += O.hex(f)), (f = 0));
            ++h;
          }
        return d;
      };
      var jk = function (a) {
        this.poly = a;
        a = Gb.obb(a);
        this.o = a[0];
        this.v0 = a[1].subtract(this.o);
        this.v1 = a[3].subtract(this.o);
        this.len0 = this.v0.get_length();
        this.len1 = this.v1.get_length();
      };
      g['com.watabou.mfcg.model.wards._Mansion.Rect'] = jk;
      jk.__name__ = 'com.watabou.mfcg.model.wards._Mansion.Rect';
      jk.prototype = { __class__: jk };
      var he = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Market'] = he;
      he.__name__ = 'com.watabou.mfcg.model.wards.Market';
      he.__super__ = Rb;
      he.prototype = v(Rb.prototype, {
        createGeometry: function () {
          C.restore(this.patch.seed);
          this.space = this.getAvailable();
          var a = 0.6;
          null == a && (a = 0.5);
          var b = (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a;
          b
            ? (a = !0)
            : ((a = 0.3),
              null == a && (a = 0.5),
              (a =
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a));
          var c = null,
            d = null;
          if (b || a)
            ((d = kf.longest(this.space)),
              (c = this.space[d]),
              (d = this.space[(d + 1) % this.space.length]));
          if (b) {
            b = this.monument = Qd.rect(
              1 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
              1 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
            );
            var f = d.subtract(c);
            f = Math.atan2(f.y, f.x);
            Yc.asRotateYX(b, Math.sin(f), Math.cos(f));
          } else
            this.monument = Qd.regular(
              8,
              1 + (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647,
            );
          b = Sa.centroid(this.space);
          a
            ? ((a = qa.lerp(c, d)),
              Yc.asAdd(
                this.monument,
                qa.lerp(
                  b,
                  a,
                  0.2 +
                    ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                      2147483647) *
                      0.4,
                ),
              ))
            : Yc.asAdd(this.monument, b);
        },
        getAvailable: function () {
          for (var a = this.patch.shape.length, b = [], c = 0, d = a; c < d; )
            (c++, b.push(0));
          var f = b;
          b = [];
          d = c = this.patch.face.halfEdge;
          for (var h = !0; h; ) {
            var k = d;
            d = d.next;
            h = d != c;
            b.push(k);
          }
          h = b;
          b = [];
          c = 0;
          for (d = a; c < d; ) {
            a = c++;
            k = h[a];
            for (var n = 0, p = this.model.canals; n < p.length; ) {
              var g = p[n];
              ++n;
              null != Ua.edgeByOrigin(g.course, k.origin) &&
                ((f[a] = g.width / 2),
                k.origin == g.course[0].origin && (f[a] += 1.2));
            }
            b.push(k.data == Tc.CANAL ? this.model.getCanalWidth(k) / 2 : 0);
          }
          return Rb.inset(this.patch.shape, b, f);
        },
        __class__: he,
      });
      var ce = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Park'] = ce;
      ce.__name__ = 'com.watabou.mfcg.model.wards.Park';
      ce.__super__ = Rb;
      ce.prototype = v(Rb.prototype, {
        createGeometry: function () {
          for (
            var a = this.getAvailable(), b = [], c = 0, d = a.length;
            c < d;

          ) {
            var f = c++,
              h = a[f];
            b.push(h);
            b.push(qa.lerp(h, a[(f + 1) % a.length]));
          }
          this.green = Hf.render(b, !0, 3);
          this.trees = null;
        },
        spawnTrees: function () {
          null == this.trees &&
            (this.trees = Ae.fillArea(
              this.getAvailable(),
              this.patch.district.greenery,
            ));
          return this.trees;
        },
        __class__: ce,
      });
      var Qe = function (a) {
        this.faces = a;
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          va.__cast(c.data.ward, Pc).group = this;
        }
        this.core = a[0];
        this.model = this.core.data.ward.model;
        this.district = this.core.data.district;
        if (1 == a.length) {
          this.shape = this.core.data.shape;
          b = [];
          for (var d = (c = this.core.halfEdge), f = !0; f; )
            ((a = d), (d = d.next), (f = d != c), b.push(a));
          this.border = b;
        } else
          ((this.border =
            a.length < this.district.faces.length
              ? Ic.circumference(null, a)
              : this.district.border),
            (this.shape = Ua.toPoly(this.border)));
        this.inner = [];
        this.blockM = new pa();
        b = 0;
        for (c = this.border; b < c.length; )
          ((a = c[b]),
            ++b,
            (d = a.origin),
            a.face.data.withinWalls || this.isInnerVertex(d)
              ? (this.inner.push(d), this.blockM.set(d.point, 1))
              : this.blockM.set(d.point, 9));
        this.urban = this.inner.length == this.border.length;
      };
      g['com.watabou.mfcg.model.wards.WardGroup'] = Qe;
      Qe.__name__ = 'com.watabou.mfcg.model.wards.WardGroup';
      Qe.getCircle = function (a, b, c, d) {
        c = qa.intersectLines(a.x, a.y, -b.y, b.x, c.x, c.y, -d.y, d.x);
        a = new I(a.x - b.y * c.x, a.y + b.x * c.x);
        b = b.get_length() * c.x;
        return new Ea(a, b);
      };
      Qe.getArc = function (a, b, c, d) {
        b - c > Math.PI
          ? (b -= 2 * Math.PI)
          : c - b > Math.PI && (c -= 2 * Math.PI);
        var f = Math.abs(a.r);
        d = ((Math.abs(b - c) * f) / d) | 0;
        if (2 < d) {
          for (var h = [], k = 0; k < d; ) {
            var n = k++ / (d - 1);
            null == n && (n = 0.5);
            h.push(a.c.add(I.polar(f, b + (c - b) * n)));
          }
          return h;
        }
        return null;
      };
      Qe.prototype = {
        createGeometry: function () {
          C.restore(this.core.data.seed);
          var a = this.getAvailable();
          if (null == a)
            (gb.trace('Failed to calculate the available area', {
              fileName: 'Source/com/watabou/mfcg/model/wards/WardGroup.hx',
              lineNumber: 83,
              className: 'com.watabou.mfcg.model.wards.WardGroup',
              methodName: 'createGeometry',
            }),
              (this.alleys = []),
              (this.blocks = []));
          else {
            var b = 20;
            do {
              this.blocks = [];
              this.alleys = [];
              this.church = null;
              var c = a.slice(),
                d = Sa.area(c),
                f = this.district.alleys;
              d >
              f.minSq *
                Math.pow(
                  2,
                  f.sizeChaos *
                    (2 *
                      ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647) -
                      1),
                ) *
                f.blockSize
                ? this.createAlleys(c)
                : this.createBlock(c);
              this.urban || this.filter();
            } while (0 == this.blocks.length && 0 < b--);
          }
          0 == this.blocks.length &&
            gb.trace('Failed to create a non-empty alleys group', {
              fileName: 'Source/com/watabou/mfcg/model/wards/WardGroup.hx',
              lineNumber: 107,
              className: 'com.watabou.mfcg.model.wards.WardGroup',
              methodName: 'createGeometry',
            });
        },
        getAvailable: function () {
          for (
            var a = this.shape.length, b = [], c = 0, d = this.border;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            for (var h = 0, k = 0, n = this.model.walls; k < n.length; ) {
              var p = n[k];
              ++k;
              p = p.getTowerRadius(f.origin);
              0 < p && (p += 1.2);
              h = Math.max(h, p);
            }
            b.push(h);
          }
          c = [];
          d = 0;
          for (k = a; d < k; ) {
            a = d++;
            f = this.border[a];
            n = 0;
            for (h = this.model.canals; n < h.length; )
              ((p = h[n]),
                ++n,
                null != Ua.edgeByOrigin(p.course, f.origin) &&
                  ((b[a] = p.width / 2 + 1.2),
                  f.origin == p.course[0].origin && (b[a] += 1.2)));
            if (null == f.data)
              c.push(f.twin.face.data == this.model.plaza ? 1 : 0.6);
            else {
              switch (f.data._hx_index) {
                case 1:
                  n = f.face.data.landing ? 2 : 1.2;
                  break;
                case 2:
                  n = 1;
                  break;
                case 3:
                  n = pc.THICKNESS / 2 + 1.2;
                  break;
                case 4:
                  n = this.model.getCanalWidth(f) / 2 + 1.2;
                  break;
                default:
                  n = 0;
              }
              c.push(n);
            }
          }
          return Rb.inset(this.shape, c, b);
        },
        createAlleys: function (a) {
          var b = this.district.alleys,
            c = new ii(
              a,
              b.minSq * b.blockSize,
              16 * this.district.alleys.gridChaos,
            );
          c.getGap = function (a) {
            return 1.2;
          };
          c.processCut = l(this, this.semiSmooth);
          this.urban || (c.isAtomic = l(this, this.isBlockSized));
          a = 0;
          for (var d = c.partition(); a < d.length; ) {
            var f = d[a];
            ++a;
            var h = Sa.area(f);
            b = this.district.alleys;
            b =
              b.minSq *
              Math.pow(
                2,
                b.sizeChaos *
                  (2 *
                    ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                      2147483647) -
                    1),
              );
            h < b
              ? this.createBlock(f, !0)
              : null == this.church && h <= 4 * b
                ? this.createChurch(f)
                : this.createBlock(f);
          }
          b = this.alleys;
          c = c.cuts;
          for (a = 0; a < c.length; ) ((d = c[a]), ++a, b.push(d));
        },
        semiSmooth: function (a) {
          var b = a[0],
            c = a[1],
            d = a[2],
            f = I.distance(b, d),
            h = Math.abs(Sa.area(a));
          if (1 > h / f || 0.01 > h / (f * f)) return [b, d];
          h = c.subtract(b);
          var k = d.subtract(c),
            n = h.get_length(),
            p = k.get_length(),
            g = Math.min(n, p);
          f = this.district.alleys.minFront;
          var q = (1 - (h.x * k.x + h.y * k.y) / n / p) / 2;
          null == q && (q = 0.5);
          (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < q
            ? (g = !0)
            : ((q = f / g),
              null == q && (q = 0.5),
              (g =
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < q));
          if (g) return a;
          n < p
            ? ((n /= p),
              (c = new I(c.x + k.x * n, c.y + k.y * n)),
              (h = Qe.getCircle(b, h, c, k)),
              (n = b.subtract(h.c)),
              (k = Math.atan2(n.y, n.x)),
              (n = c.subtract(h.c)),
              (c = Math.atan2(n.y, n.x)),
              (f = Qe.getArc(h, k, c, f)),
              null != f ? f.push(d) : (f = a))
            : ((n = -p / n),
              (c = new I(c.x + h.x * n, c.y + h.y * n)),
              (h = Qe.getCircle(c, h, d, k)),
              (n = c.subtract(h.c)),
              (k = Math.atan2(n.y, n.x)),
              (n = d.subtract(h.c)),
              (c = Math.atan2(n.y, n.x)),
              (f = Qe.getArc(h, k, c, f)),
              null != f ? f.unshift(b) : (f = a));
          return f;
        },
        createBlock: function (a, b) {
          null == b && (b = !1);
          a = new hi(this, a, b);
          0 < a.lots.length && this.blocks.push(a);
        },
        createChurch: function (a) {
          var b = Gb.obb(a),
            c = b[0].subtract(b[1]),
            d = b[2].subtract(b[1]);
          c = c.get_length() > d.get_length() ? c : d;
          d = this.district.alleys.minFront / c.get_length();
          d =
            0.5 < d
              ? 0.5
              : d +
                (1 - 2 * d) *
                  (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    3);
          b = b[1];
          b = new I(b.x + c.x * d, b.y + c.y * d);
          c = b.add(new I(-c.y, c.x));
          a = gd.cut(a, b, c);
          a = Z.max(a, function (a) {
            return Sa.compactness(a);
          });
          this.church = new hi(this, a, !0);
          this.blocks.push(this.church);
        },
        filter: function () {
          var a = new pa(),
            b = this.border,
            c = b[b.length - 1],
            d = 0;
          for (b = this.border; d < b.length; ) {
            var f = b[d];
            ++d;
            var h = f.origin,
              k = h.point;
            if (-1 != this.inner.indexOf(h)) var n = 1;
            else {
              var p = [];
              h = c;
              if (null == h.data) h = 0;
              else
                switch (h.data._hx_index) {
                  case 2:
                    h = 0.3;
                    break;
                  case 3:
                    h = 0.5;
                    break;
                  case 4:
                    h = 0.1;
                    break;
                  default:
                    h = 0;
                }
              p.push(h);
              h = f;
              if (null == h.data) h = 0;
              else
                switch (h.data._hx_index) {
                  case 2:
                    h = 0.3;
                    break;
                  case 3:
                    h = 0.5;
                    break;
                  case 4:
                    h = 0.1;
                    break;
                  default:
                    h = 0;
                }
              p.push(h);
              n = Math.max(p[0], p[1]);
            }
            a.set(k, n);
            c = f;
          }
          f = Math.sqrt(this.faces.length);
          k = 0.5 * f - 0.5;
          d = 0;
          for (b = this.blocks; d < b.length; ) {
            c = b[d];
            ++d;
            p = [];
            for (var g = 0, q = c.lots; g < q.length; )
              ((h = q[g]),
                ++g,
                (n = Sa.center(h)),
                (n = this.interpolate(n, a)),
                isNaN(n)
                  ? (n = !1)
                  : ((n = n * f - k),
                    null == n && (n = 0.5),
                    (n =
                      (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647 <
                      n)),
                n && p.push(h));
            c.lots = p;
          }
          d = [];
          b = 0;
          for (p = this.blocks; b < p.length; )
            ((h = p[b]), ++b, 0 < h.lots.length && d.push(h));
          a = d;
          b = this.blocks;
          b.splice(0, b.length);
          b = this.blocks;
          for (d = 0; d < a.length; ) ((h = a[d]), ++d, b.push(h));
        },
        getTris: function () {
          if (null == this.tris) {
            for (var a = [], b = 0, c = xe.earcut(this.shape); b < c.length; ) {
              var d = c[b];
              ++b;
              a.push([this.shape[d[0]], this.shape[d[1]], this.shape[d[2]]]);
            }
            this.tris = a;
          }
          return this.tris;
        },
        interpolate: function (a, b) {
          for (var c = 0, d = this.getTris(); c < d.length; ) {
            var f = d[c];
            ++c;
            var h = qa.barycentric(f[0], f[1], f[2], a);
            if (0 <= h.x && 0 <= h.y && 0 <= h.z)
              return (
                h.x * b.h[f[0].__id__] +
                h.y * b.h[f[1].__id__] +
                h.z * b.h[f[2].__id__]
              );
          }
          return NaN;
        },
        isInnerVertex: function (a) {
          return Z.every(a.edges, function (a) {
            a = a.face.data;
            return a.withinCity ? !0 : a.waterbody;
          });
        },
        isBlockSized: function (a) {
          var b = Sa.center(a);
          a = Sa.area(a);
          var c = this.district.alleys;
          b = c.minSq * c.blockSize * this.interpolate(b, this.blockM);
          return a < b;
        },
        __class__: Qe,
      };
      var ng = function (a, b) {
        Rb.call(this, a, b);
      };
      g['com.watabou.mfcg.model.wards.Wilderness'] = ng;
      ng.__name__ = 'com.watabou.mfcg.model.wards.Wilderness';
      ng.__super__ = Rb;
      ng.prototype = v(Rb.prototype, { __class__: ng });
      var ia = function () {
        Pb.call(this);
        ia.inst = this;
        this.model = Ub.instance;
        this.createOverlays();
        this.updateOverlays();
        this.toggleOverlays();
        sb.preview || this.keyEvent.add(l(this, this.onKeyEvent));
      };
      g['com.watabou.mfcg.scenes.TownScene'] = ia;
      ia.__name__ = 'com.watabou.mfcg.scenes.TownScene';
      ia.getMenu = function () {
        null == ia.menu && (ia.menu = new dd());
        return ia.menu;
      };
      ia.applyPalette = function (a) {
        K.setPalette(a, !0);
        Pe.updateColors(Ub.instance.districts);
        Va.switchScene(Ec);
      };
      ia.editColors = function () {
        if (null == u.findWidnow(Hc)) {
          var a = new Hc(
            ia.applyPalette,
            'Default;default;Ink;ink;Black & White;bw;Vivid;vivid;Natural;natural;Modern;modern'.split(
              ';',
            ),
          );
          a.getName = Hc.swatches(null, [
            'colorPaper',
            'colorRoof',
            'colorDark',
          ]);
          K.fillForm(a);
          u.showDialog(a, 'Color scheme');
        }
      };
      ia.__super__ = Pb;
      ia.prototype = v(Pb.prototype, {
        get_mapScale: function () {
          var a = this.model.getViewport(),
            b = 40 * (null != this.model.focus ? 0.25 : 1),
            c = this.rWidth / (a.width + b);
          b = this.rHeight / (a.height + b);
          if (null != this.model.focus) return Math.min(c, b);
          a = Math.min(c, b);
          c = Math.max(c, b);
          return 2 < c / a ? c / 2 : a;
        },
        activate: function () {
          Pb.prototype.activate.call(this);
          this.stage.set_color(K.colorPaper);
          sb.preview ||
            this.stage.addEventListener(
              'rightClick',
              l(this, this.onRightClick),
            );
        },
        deactivate: function () {
          Pb.prototype.deactivate.call(this);
          ia.map = null;
          this.stage.removeEventListener(
            'rightClick',
            l(this, this.onRightClick),
          );
        },
        onRightClick: function (a) {
          a = ia.getMenu();
          a.addSeparator();
          this.onMapContext(a);
          a.addSeparator();
          this.onContext(a);
          this.showMenu();
        },
        onContext: function (a) {},
        onMapContext: function (a) {},
        onEsc: function () {
          u.hideMenu() ||
            (null != this.model.focus
              ? this.zoomIn(null)
              : Pb.prototype.onEsc.call(this));
        },
        onKeyEvent: function (a, b) {},
        createOverlays: function () {
          this.overlays = [];
          this.overlays.push((this.grid = new ji(this)));
          this.addChild(this.grid);
          this.overlays.push((this.pins = new ki(this)));
          this.addChild(this.pins);
          this.overlays.push((this.markers = new li(this)));
          this.addChild(this.markers);
          this.overlays.push((this.scBar = new mi(this)));
          this.addChild(this.scBar);
          this.overlays.push((this.compass = new pg(this)));
          this.addChild(this.compass);
          this.overlays.push((this.legend = new Uc(this)));
          this.addChild(this.legend);
          this.overlays.push((this.labels = new ni(this)));
          this.addChild(this.labels);
        },
        updateOverlays: function () {
          for (var a = 0, b = this.overlays; a < b.length; ) {
            var c = b[a];
            ++a;
            c.update(this.model);
          }
        },
        resetOverlays: function () {
          for (var a = 0, b = this.overlays; a < b.length; ) {
            var c = b[a];
            ++a;
            this.removeChild(c);
          }
          this.createOverlays();
          this.updateOverlays();
          this.toggleOverlays();
          a = 0;
          for (b = this.overlays; a < b.length; )
            ((c = b[a]), ++a, c.setSize(this.rWidth, this.rHeight));
        },
        layout: function () {
          this.layoutMap();
          for (var a = 0, b = this.overlays; a < b.length; ) {
            var c = b[a];
            ++a;
            c.setSize(this.rWidth, this.rHeight);
          }
          this.legend.update(Ub.instance);
        },
        recreateMap: function () {
          null != ia.map && this.removeChild(ia.map);
          ia.map = new ai(this.model);
          this.addChildAt(ia.map, 0);
        },
        layoutMap: function () {
          var a = this.model.getViewport(),
            b = this.get_mapScale(),
            c = 1 / b;
          if (null == ia.map || K.lineInvScale != c)
            ((K.lineInvScale = c), this.recreateMap());
          ia.map.set_scaleX(ia.map.set_scaleY(b));
          ia.map.set_x(
            this.rWidth / 2 - ((a.get_left() + a.get_right()) / 2) * b,
          );
          ia.map.set_y(
            this.rHeight / 2 - ((a.get_top() + a.get_bottom()) / 2) * b,
          );
          a = ia.map.globalToLocal(this.localToGlobal(new I(0, 0)));
          b = ia.map.globalToLocal(
            this.localToGlobal(new I(this.rWidth, this.rHeight)),
          );
          ia.map.updateBounds(a.x, b.x, a.y, b.y);
        },
        layoutLabels: function () {
          this.labels.setSize(this.rWidth, this.rHeight);
          this.toggleOverlays();
        },
        drawMap: function () {
          this.stage.set_color(K.colorPaper);
          this.recreateMap();
          this.layoutMap();
          this.layoutLabels();
        },
        showMenu: function (a) {
          null != a
            ? u.showMenuAt(
                ia.menu,
                a.get_x() + a.rWidth,
                a.get_y() + a.rHeight + 2,
              )
            : u.showMenu(ia.menu);
          ia.menu = null;
        },
        loadPreset: function (a) {
          ia.applyPalette(Xc.fromAsset(a));
        },
        toggleOverlays: function (a) {
          a =
            'Legend' == ba.get('districts', 'Curved') ||
            'Legend' == ba.get('landmarks');
          this.legend.set_visible(a);
          this.legend.get_visible() && this.legend.update(this.model);
          this.pins.set_visible('Legend' == ba.get('districts', 'Curved'));
          this.markers.set_visible('Hidden' != ba.get('landmarks'));
          var b = ba.get('districts', 'Curved');
          this.labels.set_visible('Straight' == b || 'Curved' == b);
          this.scBar.set_visible(ba.get('scale_bar', !0) && !a);
          this.compass.set_visible(ba.get('compass', !0));
          this.grid.set_visible(ba.get('grid', !0));
        },
        arrangeOverlays: function () {
          this.legend.get_visible() &&
          this.legend.get_position() == yc.BOTTOM_RIGHT
            ? this.compass.set_position(yc.BOTTOM_LEFT)
            : this.compass.set_position(yc.BOTTOM_RIGHT);
        },
        zoomIn: function (a) {
          a = null != a ? eh.district(a) : null;
          this.model.focus = a;
          this.recreateMap();
          this.labels.update(this.model);
          this.layout();
        },
        __class__: ia,
        __properties__: v(Pb.prototype.__properties__, {
          get_mapScale: 'get_mapScale',
        }),
      });
      var vc = function () {
        oc.call(this);
      };
      g['com.watabou.mfcg.ui.forms.ToolForm'] = vc;
      vc.__name__ = 'com.watabou.mfcg.ui.forms.ToolForm';
      vc.loadSaved = function (a) {
        vc.saved = ba.get('tools');
        null == vc.saved && (vc.saved = {});
        if (null != a)
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = vc.saved[c.__name__];
            null != d &&
              d.visible &&
              null == u.findWidnow(c) &&
              ((c = w.createInstance(c, [])), u.showDialog(c), c.restore());
          }
      };
      vc.__super__ = oc;
      vc.prototype = v(oc.prototype, {
        onShow: function () {
          var a = this;
          this.dialog.onMove.add(l(this, this.onMove));
          this.dialog.onMinimize.add(function (b) {
            a.save(!0);
          });
          this.dialog.minimizable = !0;
        },
        onHide: function () {
          this.save(!1);
        },
        onMove: function (a) {
          var b = a.getAdjustment();
          null != b && (a.set_x(b.x), a.set_y(b.y));
          this.save(!0);
        },
        onKey: function (a) {
          return !1;
        },
        id: function () {
          return va.getClass(this).__name__;
        },
        save: function (a) {
          var b = this.dialog;
          b = new I(b.get_x() + b.rWidth / 2, b.get_y() + b.rHeight / 2);
          vc.saved[this.id()] = {
            x: b.x / u.layer.get_width(),
            y: b.y / u.layer.get_height(),
            visible: a,
            minimized: this.dialog.minimized,
          };
          ba.set('tools', vc.saved);
        },
        restore: function () {
          var a = this.id();
          a = vc.saved[a];
          null != a &&
            (this.dialog.set_x(
              (a.x * u.layer.get_width() - this.dialog.get_width() / 2) | 0,
            ),
            this.dialog.set_y(
              (a.y * u.layer.get_height() - this.dialog.get_height() / 2) | 0,
            ),
            this.dialog.setMinimized(a.minimized),
            (a = this.dialog.getAdjustment()),
            null != a && (this.dialog.set_x(a.x), this.dialog.set_y(a.y)));
          this.save(!0);
        },
        forceDisplay: function () {
          vc.saved[this.id()].visible = !0;
        },
        __class__: vc,
      });
      var Kd = function () {
        var a = this;
        oc.call(this);
        var b = this.createFeaturesTab(),
          c = this.createRoadsTab();
        this.tabs = new hg();
        this.tabs.addTab('Features', b);
        this.tabs.addTab('Roads', c);
        this.buttons = new fb();
        this.buttons.setMargins(10, 8);
        b = new ib('Small');
        b.set_width(80);
        b.click.add(function () {
          a.build(
            Math.floor(
              10 +
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                  10,
            ),
          );
        });
        this.buttons.add(b);
        b = new ib('Medium');
        b.set_width(80);
        b.click.add(function () {
          a.build(
            Math.floor(
              20 +
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                  20,
            ),
          );
        });
        this.buttons.add(b);
        b = new ib('Large');
        b.set_width(80);
        b.click.add(function () {
          a.build(
            Math.floor(
              40 +
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
                  40,
            ),
          );
        });
        this.buttons.add(b);
        this.txtSize = new tc();
        this.txtSize.set_centered(!0);
        this.txtSize.set_width(80);
        this.txtSize.set_prompt('Size');
        this.txtSize.set_restrict('0-9');
        this.txtSize.enter.add(l(this, this.onCustomSize));
        this.buttons.add(this.txtSize);
        b = new ib('Rebuild');
        b.set_width(80);
        b.click.add(l(this, this.rebuild));
        this.buttons.add(b);
        this.bg = ta.light();
        this.add(this.tabs);
        this.add(this.bg);
        this.add(this.buttons);
      };
      g['com.watabou.mfcg.ui.forms.GenerateForm'] = Kd;
      Kd.__name__ = 'com.watabou.mfcg.ui.forms.GenerateForm';
      Kd.__super__ = vc;
      Kd.prototype = v(vc.prototype, {
        getTitle: function () {
          return 'Generate';
        },
        layout: function () {
          this.buttons.set_x(this.bg.set_x(this.tabs.get_width()));
          this.rWidth = this.tabs.get_width() + this.buttons.get_width();
          this.rHeight = Math.max(
            this.tabs.get_height(),
            this.buttons.get_height(),
          );
          this.bg.setSize(this.buttons.get_width(), this.rHeight);
        },
        onKey: function (a) {
          if (13 == a) this.build(Ub.nextSize);
          else return !1;
          return !0;
        },
        getCheckBox: function (a, b) {
          b = new ud(b);
          b.set_value(ba.get(a));
          return b;
        },
        createFeaturesTab: function () {
          var a = this,
            b = new fb();
          this.chkRandom = this.getCheckBox('random', 'Random');
          this.chkRandom.changed.add(l(this, this.onRandom));
          b.add(this.chkRandom);
          var c = ta.black();
          c.set_height(2);
          c.halign = 'fill';
          b.add(c);
          c = new Pd(2);
          c.setMargins(0, 8);
          var d = 0;
          for (this.chkFeatures = new Pa(); d < Kd.features.length; ) {
            var f = Kd.features[d],
              h = [Kd.features[d + 1]],
              k = this.getCheckBox(h[0], f);
            k.set_enabled(
              !this.chkRandom.get_value() || -1 != Kd.nonRandom.indexOf(f),
            );
            k.changed.add(
              (function (b) {
                return function (c) {
                  'citadel' != b[0] ||
                    c ||
                    a.chkFeatures.h.urban_castle.set_value(!1);
                  'urban_castle' == b[0] &&
                    c &&
                    a.chkFeatures.h.citadel.set_value(!0);
                };
              })(h),
            );
            this.chkFeatures.h[h[0]] = k;
            c.add(k);
            d += 2;
          }
          b.add(c);
          c = ta.black();
          c.set_height(2);
          c.halign = 'fill';
          return b;
        },
        onRandom: function (a) {
          for (
            var b = this.chkFeatures.h, c = Object.keys(b), d = c.length, f = 0;
            f < d;

          ) {
            var h = b[c[f++]];
            -1 == Kd.nonRandom.indexOf(h.get_text()) && h.set_enabled(!a);
          }
        },
        createRoadsTab: function () {
          var a = this,
            b = new Pd(2);
          b.setMargins(10, 8);
          this.chkDefault = new ud();
          b.add(this.chkDefault);
          b.add(new Ib('Default number'));
          this.chkMaximum = this.getCheckBox('hub', null);
          b.add(this.chkMaximum);
          b.add(new Ib('Maximum number'));
          this.chkSpecific = new ud();
          this.chkSpecific.valign = 'center';
          b.add(this.chkSpecific);
          var c = ba.get('gates');
          this.txtGates = new tc(-1 < c ? (null == c ? 'null' : '' + c) : '');
          this.txtGates.set_restrict('0-9');
          this.txtGates.set_prompt('Number');
          this.txtGates.set_width(100);
          this.txtGates.update.add(function (b) {
            a.chkDefault.set_value(!1);
            a.chkMaximum.set_value(!1);
            a.chkSpecific.set_value(!0);
          });
          this.txtGates.enter.add(function (b) {
            a.build(Ub.nextSize);
          });
          b.add(this.txtGates);
          c = -1 < c ? 2 : ba.get('hub') ? 1 : 0;
          new gg([this.chkDefault, this.chkMaximum, this.chkSpecific], c);
          return b;
        },
        onCustomSize: function (a) {
          a = H.parseInt(a);
          null != a && 5 <= a && 200 >= a && this.build(a);
        },
        saveFeatures: function () {
          ba.set('random', this.chkRandom.get_value());
          for (
            var a = this.chkFeatures.h, b = Object.keys(a), c = b.length, d = 0;
            d < c;

          ) {
            var f = b[d++];
            ba.set(f, a[f].get_value());
          }
          ba.set('hub', this.chkMaximum.get_value());
          ba.set(
            'gates',
            this.chkSpecific.get_value()
              ? H.parseInt(this.txtGates.get_text())
              : -1,
          );
        },
        build: function (a) {
          this.saveFeatures();
          new Ub(Fd.create(a, C.seed));
          Va.switchScene(Ec);
          this.stage.set_focus(this);
        },
        rebuild: function () {
          this.saveFeatures();
          new Ub(Fd.similar(Ub.instance.bp));
          Va.switchScene(Ec);
        },
        update: function () {
          this.chkRandom.set_value(ba.get('random', !0));
          for (
            var a = this.chkFeatures.h, b = Object.keys(a), c = b.length, d = 0;
            d < c;

          ) {
            var f = b[d++];
            a[f].set_value(ba.get(f, !0));
          }
          this.onRandom(this.chkRandom.get_value());
          a = ba.get('gates');
          this.chkDefault.set_value(!ba.get('hub') && -1 >= a);
          this.chkMaximum.set_value(ba.get('hub') && -1 >= a);
          this.chkSpecific.set_value(-1 < a) &&
            this.txtGates.set_text(null == a ? 'null' : '' + a);
        },
        __class__: Kd,
      });
      var qg = function () {
        var a = this;
        oc.call(this);
        this.setMargins(10, 8);
        this.model = Ub.instance;
        this.txtName = new tc(this.model.name);
        this.txtName.set_centered(!0);
        this.txtName.enter.add(l(this, this.onEnterName));
        this.txtName.leave.add(function () {
          a.txtName.set_text(a.model.name);
        });
        this.txtName.set_width(200);
        this.add(this.txtName);
        this.townInfo = new oi(this.model);
        this.townInfo.halign = 'center';
        this.add(this.townInfo);
        this.addSection('Reroll names');
        this.addButtonRow(
          'Town',
          l(this, this.rerollName),
          'Districts',
          ((G = this.model), l(G, G.rerollDistricts)),
        );
        this.addSection('Points of interest');
        this.addButtonRow(
          'Load',
          l(this, this.onLoadPOIs),
          'Clear',
          l(this, this.onClearPOIs),
        );
        this.addSeparator();
        this.addButtonRow(
          'Warp',
          l(this, this.onWarp),
          'Overworld',
          l(this, this.onOverworld),
        );
        var b = new ed();
        b.setMargins(0, 8);
        var c = new ib('Permalink');
        c.set_width(96);
        c.click.add(l(this, this.onCopyURL));
        b.add(c);
        c = new fe('Export', ['PNG', 'SVG', 'JSON']);
        c.set_width(96);
        c.action.add(l(this, this.onExport));
        b.add(c);
        this.add(b);
        Bb.newModel.add(l(this, this.onNewModel));
        Bb.titleChanged.add(l(this, this.onTitleChanged));
        Bb.geometryChanged.add(l(this, this.onGeometryChanged));
      };
      g['com.watabou.mfcg.ui.forms.TownForm'] = qg;
      qg.__name__ = 'com.watabou.mfcg.ui.forms.TownForm';
      qg.__super__ = vc;
      qg.prototype = v(vc.prototype, {
        onHide: function () {
          vc.prototype.onHide.call(this);
          Bb.newModel.remove(l(this, this.onNewModel));
          Bb.titleChanged.remove(l(this, this.onTitleChanged));
          Bb.geometryChanged.remove(l(this, this.onGeometryChanged));
        },
        getTitle: function () {
          return 'Settlement';
        },
        addSeparator: function () {
          var a = ta.black();
          a.set_height(2);
          a.halign = 'fill';
          this.add(a);
        },
        addSection: function (a) {
          this.addSeparator();
          this.add(new Ib(a));
        },
        addButtonRow: function (a, b, c, d) {
          var f = new ed();
          f.setMargins(0, 8);
          a = new ib(a);
          a.set_width(96);
          a.click.add(b);
          f.add(a);
          b = new ib(c);
          b.set_width(96);
          b.click.add(d);
          f.add(b);
          this.add(f);
        },
        onEnterName: function (a) {
          this.model.setName(a, !0);
          this.stage.set_focus(this);
        },
        rerollName: function () {
          this.model.setName(this.model.rerollName());
        },
        onLoadPOIs: function () {
          var a = this,
            b = new Gf();
          b.addEventListener('select', function (c) {
            b.addEventListener('complete', l(a, a.onPOIsLoaded));
            b.load();
          });
          b.browse([new Sh('JSON list', '*.json')]);
        },
        onPOIsLoaded: function (a) {
          a = va.__cast(a.target, Gf).data.toString();
          a = JSON.parse(a);
          this.model.addLandmarks(a);
        },
        onClearPOIs: function () {
          this.model.removeLandmarks();
        },
        onWarp: function () {
          Va.switchScene(jd);
        },
        onOverworld: function () {
          var a = new If('https://azgaar.github.io/Fantasy-Map-Generator/');
          a.method = 'GET';
          a.data = this.model.getFMGParams();
          a.data.from = 'MFCG';
          Ra.getURL(a, 'fmg');
        },
        onCopyURL: function () {
          fk.write(Aa.getURL());
          q.show('URL was copied to the clipboard');
        },
        onExport: function (a) {
          switch (a) {
            case 'JSON':
              be.asJSON();
              break;
            case 'PNG':
              be.asPNG();
              break;
            case 'SVG':
              be.asSVG();
          }
        },
        onNewModel: function (a) {
          this.model = a;
          this.txtName.set_text(a.name);
          this.townInfo.update(a);
        },
        onTitleChanged: function (a) {
          this.txtName.set_text(a);
        },
        onGeometryChanged: function (a) {
          this.townInfo.update(this.model);
        },
        __class__: qg,
      });
      var ke = function () {
        oc.call(this);
        this.tabs = new hg();
        this.tabs.set_rowSize(4);
        this.tabs.addTab('Graphics', this.colors());
        this.tabs.addTab('Elements', this.elements());
        this.tabs.addTab('Buildings', this.buildings());
        this.tabs.addTab('Outline', this.outline());
        this.tabs.addTab('Text', this.text());
        this.tabs.addTab('Misc', this.misc());
        this.add(this.tabs);
        this.tabs.change.add(function (a) {
          ke.lastTab = a;
        });
        this.tabs.onTab(ke.lastTab);
      };
      g['com.watabou.mfcg.ui.forms.StyleForm'] = ke;
      ke.__name__ = 'com.watabou.mfcg.ui.forms.StyleForm';
      ke.__super__ = vc;
      ke.prototype = v(vc.prototype, {
        getTitle: function () {
          return 'Style';
        },
        addCheckbox: function (a, b, c, d, f) {
          a = new ud(a);
          a.set_value(ba.get(b, c));
          a.changed.add(function (a) {
            ba.set(b, a);
            f(a);
          });
          d.add(a);
          return a;
        },
        addDropDown: function (a, b, c, d, f) {
          this.addLabel(a, d);
          a = Rc.ofStrings(c);
          a.set_value(ba.get(b));
          a.set_width(120);
          a.set_centered(!0);
          a.update.add(function (a) {
            ba.set(b, a);
            f(a);
          });
          d.add(a);
          return a;
        },
        addFont: function (a, b, c, d) {
          this.addLabel(a, d);
          a = new fd(
            ba.get(b, c),
            Id.font2text,
            null,
            fd.editInForm(Id, a, this),
          );
          a.set_width(180);
          a.update.add(function (a) {
            ba.set(b, a);
            Va.switchScene(Ec);
          });
          d.add(a);
        },
        addSeparator: function (a) {
          var b = ta.black();
          b.set_height(2);
          b.halign = 'fill';
          a.add(b);
        },
        addLabel: function (a, b) {
          a = new Ib(a);
          a.valign = 'center';
          b.add(a);
        },
        colors: function () {
          var a = new fb();
          a.setMargins(10, 8);
          var b = new ib('Color scheme', ia.editColors);
          a.add(b);
          this.addCheckbox('Thin lines', 'thin_lines', !1, a, function (a) {
            K.thinLines = a;
            Va.switchScene(Ec);
          });
          this.addCheckbox(
            'Tint districts',
            'watercolours',
            !1,
            a,
            function (a) {
              ia.inst.drawMap();
            },
          );
          this.addCheckbox(
            'Weathered roofs',
            'weathered_roofs',
            !1,
            a,
            function (a) {
              'Block' != ba.get('display_mode', 'Lots') && ia.inst.drawMap();
            },
          );
          return a;
        },
        elements: function () {
          var a = new fb();
          a.setMargins(10, 8);
          var b = new Pd(2);
          b.setMargins(0, 8);
          this.addLabel('Font size', b);
          var c = Rc.ofInts(['Small', 'Medium', 'Large']);
          c.set_value(ba.get('text_size', 1));
          c.set_width(120);
          c.set_centered(!0);
          c.update.add(function (a) {
            ba.set('text_size', a);
            Va.switchScene(Ec);
          });
          b.add(c);
          this.addDropDown(
            'Districts',
            'districts',
            kd.DISTRICTS_MODE,
            b,
            function (a) {
              ia.inst.layoutLabels();
            },
          );
          this.addDropDown(
            'Landmarks',
            'landmarks',
            kd.LANDMARK_MODES,
            b,
            function (a) {
              ia.inst.toggleOverlays();
            },
          );
          a.add(b);
          this.addSeparator(a);
          b = new Pd(3);
          b.setMargins(0, 10);
          this.addCheckbox('Title', 'city_name', !0, b, function (a) {
            ia.inst.toggleOverlays();
          });
          this.addCheckbox('Scale bar', 'scale_bar', !0, b, function (a) {
            ia.inst.toggleOverlays();
          });
          this.addCheckbox('Emblem', 'emblem', !1, b, function (a) {
            ia.inst.toggleOverlays();
          });
          this.addCheckbox('Grid', 'grid', !0, b, function (a) {
            ia.inst.toggleOverlays();
          });
          this.addCheckbox('Compass', 'compass', !0, b, function (a) {
            ia.inst.toggleOverlays();
          });
          a.add(b);
          return a;
        },
        buildings: function () {
          var a = new fb();
          a.setMargins(10, 8);
          var b = new Pd(2);
          b.setMargins(0, 8);
          this.addDropDown(
            'Display mode',
            'display_mode',
            kd.DISPLAY_MODES,
            b,
            function (a) {
              ia.inst.drawMap();
            },
          );
          this.addDropDown(
            'Processing',
            'processing',
            kd.PROCESSES,
            b,
            function (a) {
              Ub.instance.updateLots();
              ia.inst.drawMap();
            },
          );
          this.addDropDown(
            'Roofs',
            'roof_style',
            kd.ROOF_STYLES,
            b,
            function (a) {
              ia.inst.drawMap();
            },
          );
          a.add(b);
          this.addCheckbox('Raised', 'raised', !0, a, function (a) {
            ia.inst.drawMap();
          });
          this.addCheckbox('Solids', 'draw_solids', !0, a, function (a) {
            ia.inst.drawMap();
          });
          return a;
        },
        outline: function () {
          var a = new ed();
          a.setMargins(10, 20);
          var b = new fb();
          b.setMargins(0, 8);
          var c = Object.create(null),
            d = this.addCheckbox(
              'Buildings',
              'outline_buildings',
              !0,
              b,
              function (a) {
                ia.inst.drawMap();
              },
            );
          c.outline_buildings = d;
          d = !1;
          null == d && (d = !0);
          d = this.addCheckbox('Solids', 'outline_solids', d, b, function (a) {
            ia.inst.drawMap();
          });
          c.outline_solids = d;
          d = this.addCheckbox('Water', 'outline_water', !0, b, function (a) {
            ia.inst.drawMap();
          });
          c.outline_water = d;
          d = this.addCheckbox('Roads', 'outline_roads', !0, b, function (a) {
            ia.inst.drawMap();
          });
          c.outline_roads = d;
          d = this.addCheckbox('Trees', 'outline_trees', !0, b, function (a) {
            ia.inst.drawMap();
          });
          c.outline_trees = d;
          d = !1;
          null == d && (d = !0);
          d = this.addCheckbox('Fields', 'outline_fields', d, b, function (a) {
            ia.inst.drawMap();
          });
          c.outline_fields = d;
          a.add(b);
          b = new ib('Toggle all', function () {
            var a = c,
              b = a,
              d = Object.keys(a);
            a = 0;
            b = !b[d[a++]].get_value();
            d = a = c;
            a = Object.keys(a);
            for (var n = a.length, p = 0; p < n; ) {
              var g = a[p++],
                q = g;
              d[g].set_value(b);
              ba.set(q, b);
            }
            ia.inst.drawMap();
          });
          a.add(b);
          return a;
        },
        text: function () {
          var a = new Pd(2);
          a.setMargins(10, 8);
          this.addFont('Title', 'font_title', vb.fontTitle, a);
          this.addFont('Labels', 'font_label', vb.fontLabel, a);
          this.addFont('Legend', 'font_legend', vb.fontLegend, a);
          this.addFont('Pins', 'font_pin', vb.fontPin, a);
          this.addFont('Elements', 'font_element', vb.fontElement, a);
          return a;
        },
        misc: function () {
          var a = new fb();
          a.setMargins(10, 8);
          var b = null;
          this.addCheckbox('Show alleys', 'show_alleys', !1, a, function (a) {
            ia.map.updateRoads();
          });
          this.addCheckbox('Show trees', 'show_trees', !1, a, function (a) {
            b.set_enabled(a);
            ia.inst.drawMap();
          });
          b = this.addCheckbox(
            'Show forests',
            'show_forests',
            !1,
            a,
            function (a) {
              ia.inst.drawMap();
            },
          );
          b.set_enabled(ba.get('show_trees', !1));
          var c = new Pd(2);
          c.setMargins(0, 8);
          this.addDropDown(
            'Towers',
            'towers',
            kd.TOWER_SHAPES,
            c,
            function (a) {
              ia.inst.drawMap();
            },
          );
          this.addDropDown(
            'Farm fields',
            'farm_fileds',
            kd.FIELD_MODES,
            c,
            function (a) {
              ia.inst.drawMap();
            },
          );
          a.add(c);
          return a;
        },
        __class__: ke,
      });
      var Ec = function () {
        this.mouse = new I();
        ia.call(this);
        this.btnMenu = new ib('Menu', l(this, this.onMenu));
        sb.preview || u.layer.addChild(this.btnMenu);
        this.fader = Ke.create(1, l(this, this.onFadeOut));
      };
      g['com.watabou.mfcg.scenes.ViewScene'] = Ec;
      Ec.__name__ = 'com.watabou.mfcg.scenes.ViewScene';
      Ec.__super__ = ia;
      Ec.prototype = v(ia.prototype, {
        activate: function () {
          ia.prototype.activate.call(this);
          if (!sb.preview) {
            u.layer.addChild(new le());
            le.inst.awake.add(l(this, this.onAwake));
            this.stage.addEventListener('mouseMove', l(this, this.onMouseMove));
            this.stage.addEventListener('click', l(this, this.onClick));
            vc.loadSaved(Ec.tools);
            var a = Ub.instance.bp;
            if (null != a.export) {
              switch (a.export.toLowerCase()) {
                case 'json':
                  be.asJSON();
                  break;
                case 'png':
                  be.asPNG();
                  break;
                case 'svg':
                  be.asSVG();
              }
              a.export = null;
            }
          }
        },
        deactivate: function () {
          ia.prototype.deactivate.call(this);
          u.layer.removeChild(this.btnMenu);
          this.stage.removeEventListener(
            'mouseMove',
            l(this, this.onMouseMove),
          );
          this.stage.removeEventListener('click', l(this, this.onClick));
          null != le.inst && u.layer.removeChild(le.inst);
        },
        onKeyEvent: function (a, b) {
          if (b)
            switch (a) {
              case 9:
              case 71:
                this.toggleWindow(Kd);
                break;
              case 13:
                this.buildNew();
                break;
              case 49:
                this.loadPreset('default');
                break;
              case 50:
                this.loadPreset('ink');
                break;
              case 51:
                this.loadPreset('bw');
                break;
              case 52:
                this.loadPreset('vivid');
                break;
              case 53:
                this.loadPreset('natural');
                break;
              case 54:
                this.loadPreset('modern');
                break;
              case 65:
                this.toggleAlleys();
                break;
              case 66:
                this.keyShift ? this.toggleBuildings() : this.showBuildings();
                break;
              case 67:
                ia.editColors();
                break;
              case 68:
                this.toggleGrid();
                break;
              case 69:
                this.showElements();
                break;
              case 76:
                this.toggleDistricts();
                break;
              case 78:
                this.toggleThinLines();
                break;
              case 79:
                this.showOutlines();
                break;
              case 83:
                this.toggleWindow(ke);
                break;
              case 84:
                this.toggleWindow(qg);
                break;
              case 87:
                this.onWarp();
                break;
              default:
                ia.prototype.onKeyEvent.call(this, a, b);
            }
        },
        layout: function () {
          ia.prototype.layout.call(this);
          this.btnMenu.set_x(
            u.layer.get_width() - this.btnMenu.get_width() - 2,
          );
          this.btnMenu.set_y(2);
        },
        onFadeOut: function (a) {
          a = 1 - a;
          this.btnMenu.set_alpha(le.inst.set_alpha(a * a * (3 - 2 * a)));
        },
        onAwake: function (a) {
          a ? (this.fader.stop(), this.onFadeOut(0)) : this.fader.start();
        },
        onMouseMove: function (a) {
          Sd.__neq(a.target, this.stage) ||
            ((a = ia.map),
            this.mouse.setTo(a.get_mouseX(), a.get_mouseY()),
            (a = this.patch = this.model.getCell(this.mouse)),
            (a = null != a ? a.ward.getLabel() : null),
            le.inst.set(a));
        },
        onClick: function (a) {
          null != this.patch &&
            (a.commandKey || a.controlKey
              ? this.patch.reroll()
              : a.shiftKey &&
                (null != this.model.focus
                  ? this.zoomIn(null)
                  : null != this.patch.district &&
                    this.zoomIn(this.patch.district)));
        },
        onMenu: function () {
          this.onContext(ia.getMenu());
          this.showMenu(this.btnMenu);
        },
        onWarp: function () {
          Va.switchScene(jd);
        },
        createOverlays: function () {
          ia.prototype.createOverlays.call(this);
          this.overlays.push((this.title = new pi(this)));
          this.addChild(this.title);
          this.overlays.push((this.emblem = new nf(this)));
          this.addChild(this.emblem);
        },
        toggleOverlays: function (a) {
          null == a && (a = !1);
          ia.prototype.toggleOverlays.call(this, a);
          this.title.set_visible(
            ba.get('city_name', !0) && !this.legend.get_visible(),
          );
          this.emblem.set_visible(
            ba.get('emblem', !1) && !this.legend.get_visible(),
          );
          if (sb.preview) {
            a = 0;
            for (var b = this.overlays; a < b.length; ) {
              var c = b[a];
              ++a;
              c.set_visible(!1);
            }
          }
        },
        arrangeOverlays: function () {
          ia.prototype.arrangeOverlays.call(this);
          var a = this.emblem;
          if (this.legend.get_visible())
            switch (this.legend.get_position()._hx_index) {
              case 1:
              case 4:
                var b = yc.TOP_RIGHT;
                break;
              default:
                b = yc.TOP_LEFT;
            }
          else b = yc.TOP_LEFT;
          a.set_position(b);
        },
        onMapContext: function (a) {
          var b = this;
          a.addItem('Add landmark', l(this, this.addLandmark));
          null != this.patch &&
            this.patch.isRerollable() &&
            (a.addItem('Reroll geometry', ((G = this.patch), l(G, G.reroll))),
            this.patch.ward.onContext(a, this.mouse.x, this.mouse.y));
          if (null == this.model.focus) {
            var c = this.patch;
            c = null != (null != c ? c.district : null);
          } else c = !1;
          c &&
            a.addItem('Zoom in', function () {
              b.zoomIn(b.patch.district);
            });
        },
        onContext: function (a) {
          var b = this;
          null != this.model.focus &&
            (a.addItem('Zoom out', function () {
              b.zoomIn(null);
            }),
            a.addSeparator());
          a.addItem('New city', l(this, this.buildNew));
          a.addItem('Warp', l(this, this.onWarp));
          a.addItem('Colors...', ia.editColors);
          var c = new dd();
          c.addItem('PNG', be.asPNG);
          c.addItem('SVG', be.asSVG);
          c.addItem('JSON', be.asJSON);
          a.addSubmenu('Export as', c);
          a.addSeparator();
          c = function (c, f) {
            a.addItem(
              c,
              function () {
                b.toggleWindow(f);
              },
              null != u.findWidnow(f),
            );
          };
          c('Generate', Kd);
          c('Settlement', qg);
          c('Style', ke);
          a.addSeparator();
          a.addItem('Procgen Arcana', l(this, this.arcana));
        },
        toggleWindow: function (a) {
          var b = u.findWidnow(a);
          null == b
            ? ((a = w.createInstance(a, [])),
              u.showDialog(a),
              a instanceof vc && va.__cast(a, vc).restore())
            : b.hide();
        },
        addLandmark: function () {
          'Hidden' == ba.get('landmarks') &&
            (ba.set('landmarks', 'Icon'), this.toggleOverlays());
          u.showDialog(new gh(this.model.addLandmark(this.mouse.clone())));
        },
        buildNew: function () {
          new Ub(Fd.create(Ub.nextSize, C.seed));
          Va.switchScene(Ec);
        },
        toggleDistricts: function () {
          switch (ba.get('districts', 'Curved')) {
            case 'Curved':
              var a = 'Legend';
              break;
            case 'Hidden':
              a = 'Straight';
              break;
            case 'Legend':
              a = 'Hidden';
              break;
            default:
              a = 'Curved';
          }
          ba.set('districts', a);
          this.toggleOverlays();
          a = 0;
          for (var b = this.model.districts; a < b.length; ) {
            var c = b[a];
            ++a;
            c.updateGeometry();
          }
          this.layoutLabels();
        },
        toggleGrid: function () {
          ba.set('grid', !ba.get('grid', !0));
          this.toggleOverlays();
        },
        toggleBuildings: function () {
          'Hidden' == kc.planMode
            ? (kc.planMode = Ec.toggleBuildings_displayMode)
            : ((Ec.toggleBuildings_displayMode = kc.planMode),
              (kc.planMode = 'Hidden'));
          ba.set('display_mode', kc.planMode);
          ia.inst.drawMap();
        },
        toggleAlleys: function () {
          ba.set('show_alleys', !ba.get('show_alleys', !1));
          ia.map.updateRoads();
        },
        toggleThinLines: function () {
          ba.set('thin_lines', (K.thinLines = !K.thinLines));
          Va.switchScene(Ec);
        },
        showStyleTab: function (a) {
          var b = u.findWidnow(ke);
          null == b
            ? ((b = new ke()), u.showDialog(b), b.restore())
            : (b = b.content);
          b.tabs.onTab(a);
        },
        showElements: function () {
          this.showStyleTab(1);
        },
        showBuildings: function () {
          this.showStyleTab(2);
        },
        showOutlines: function () {
          this.showStyleTab(3);
        },
        arcana: function () {
          var a = new If('https://watabou.github.io/');
          Ra.navigateToURL(a, 'arcana');
        },
        __class__: Ec,
      });
      var ig = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      g['lime.math.Vector2'] = ig;
      ig.__name__ = 'lime.math.Vector2';
      ig.prototype = {
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        __toFlashPoint: function () {
          return null;
        },
        __class__: ig,
      };
      var Fb = function (a, b, c, d) {
        null == d && (d = -1);
        null == c && (c = !0);
        this.__drawableType = 0;
        this.transparent = c;
        null == a && (a = 0);
        null == b && (b = 0);
        0 > a && (a = 0);
        0 > b && (b = 0);
        this.width = a;
        this.height = b;
        this.rect = new na(0, 0, a, b);
        this.__textureWidth = a;
        this.__textureHeight = b;
        0 < a &&
          0 < b &&
          (c
            ? 0 == (d & -16777216) && (d = 0)
            : (d = -16777216 | (d & 16777215)),
          (this.image = new Xb(
            null,
            0,
            0,
            a,
            b,
            (d << 8) | ((d >>> 24) & 255),
          )),
          this.image.set_transparent(c),
          (this.readable = this.__isValid = !0));
        this.__renderTransform = new ua();
        this.__worldAlpha = 1;
        this.__worldTransform = new ua();
        this.__worldColorTransform = new Tb();
        this.__renderable = !0;
      };
      g['openfl.display.BitmapData'] = Fb;
      Fb.__name__ = 'openfl.display.BitmapData';
      Fb.__interfaces__ = [mb];
      Fb.fromCanvas = function (a, b) {
        null == b && (b = !0);
        if (null == a) return null;
        var c = new Fb(0, 0, b, 0);
        c.__fromImage(Xb.fromCanvas(a));
        c.image.set_transparent(b);
        return c;
      };
      Fb.fromImage = function (a, b) {
        null == b && (b = !0);
        if (null == a || null == a.buffer) return null;
        var c = new Fb(0, 0, b, 0);
        c.__fromImage(a);
        c.image.set_transparent(b);
        return null != c.image ? c : null;
      };
      Fb.loadFromFile = function (a) {
        return Xb.loadFromFile(a).then(function (a) {
          return hc.withValue(Fb.fromImage(a));
        });
      };
      Fb.prototype = {
        colorTransform: function (a, b) {
          this.readable &&
            this.image.colorTransform(
              a.__toLimeRectangle(),
              b.__toLimeColorMatrix(),
            );
        },
        copyPixels: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          this.readable &&
            null != a &&
            (null != f &&
              ((Fb.__tempVector.x = f.x), (Fb.__tempVector.y = f.y)),
            this.image.copyPixels(
              a.image,
              b.__toLimeRectangle(),
              c.__toLimeVector2(),
              null != d ? d.image : null,
              null != f ? Fb.__tempVector : null,
              h,
            ));
        },
        dispose: function () {
          this.image = null;
          this.height = this.width = 0;
          this.rect = null;
          this.readable = this.__isValid = !1;
          this.__textureContext =
            this.__texture =
            this.__framebufferContext =
            this.__framebuffer =
            this.__vertexBuffer =
            this.__surface =
              null;
        },
        draw: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          if (null != a) {
            var k = !0,
              n = null;
            a instanceof S &&
              ((n = va.__cast(a, S)),
              n.get_visible() || ((k = !1), n.set_visible(!0)));
            a.__update(!1, !0);
            var p = ua.__pool.get();
            p.copyFrom(a.__renderTransform);
            p.invert();
            null != b && p.concat(b);
            b = null;
            null != f && ((b = ua.__pool.get()), b.copyFrom(p), b.invert());
            var g = new Tb();
            g.__copyFrom(a.__worldColorTransform);
            g.__invert();
            if (this.readable || null == Ra.get_current().stage.context3D) {
              if (null != c) {
                var q = na.__pool.get(),
                  m = ua.__pool.get();
                a.__getBounds(q, m);
                var u = Math.ceil(q.width),
                  r = Math.ceil(q.height);
                m.tx = -q.x;
                m.ty = -q.y;
                u = new Fb(u, r, !0, 0);
                u.draw(a, m);
                u.colorTransform(u.rect, c);
                u.__renderTransform.identity();
                u.__renderTransform.tx = q.x;
                u.__renderTransform.ty = q.y;
                u.__renderTransform.concat(a.__renderTransform);
                u.__worldAlpha = a.__worldAlpha;
                u.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                a = u;
                na.__pool.release(q);
                ua.__pool.release(m);
              }
              Ka.convertToCanvas(this.image);
              c = new Ue(this.image.buffer.__srcContext);
              c.__allowSmoothing = h;
              c.__overrideBlendMode = d;
              c.__worldTransform = p;
              c.__worldAlpha = 1 / a.__worldAlpha;
              c.__worldColorTransform = g;
              null != f && c.__pushMaskRect(f, b);
              this.__drawCanvas(a, c);
            } else
              (null == this.__textureContext &&
                (this.__textureContext = A.current.__window.context),
                null != c && g.__combine(c),
                (c = new db(Ra.get_current().stage.context3D, this)),
                (c.__allowSmoothing = h),
                (c.__pixelRatio = Ra.get_current().stage.window.__scale),
                (c.__overrideBlendMode = d),
                (c.__worldTransform = p),
                (c.__worldAlpha = 1 / a.__worldAlpha),
                (c.__worldColorTransform = g),
                c.__resize(this.width, this.height),
                null != f && c.__pushMaskRect(f, b),
                this.__drawGL(a, c));
            null != f && (c.__popMaskRect(), ua.__pool.release(b));
            ua.__pool.release(p);
            null == n || k || n.set_visible(!1);
          }
        },
        encode: function (a, b, c) {
          if (!this.readable || null == a) return null;
          null == c && (c = new Vc(0));
          var d = this.image;
          if (!a.equals(this.rect)) {
            var f = ua.__pool.get();
            f.tx = Math.round(-a.x);
            f.ty = Math.round(-a.y);
            a = new Fb(Math.ceil(a.width), Math.ceil(a.height), !0, 0);
            a.draw(this, f);
            d = a.image;
            ua.__pool.release(f);
          }
          return b instanceof qi
            ? (c.writeBytes(Td.fromBytes(d.encode(ri.PNG)), 0, 0), c)
            : b instanceof si
              ? (c.writeBytes(
                  Td.fromBytes(d.encode(ri.JPEG, va.__cast(b, si).quality)),
                  0,
                  0,
                ),
                c)
              : null;
        },
        fillRect: function (a, b) {
          this.__fillRect(a, b, !0);
        },
        getIndexBuffer: function (a, b) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context ||
            (null != b && null == this.__indexBufferGrid) ||
            (null != this.__indexBufferGrid &&
              !this.__indexBufferGrid.equals(b))
          ) {
            this.__indexBufferContext = a.__context;
            this.__indexBuffer = null;
            if (null != b) {
              null == this.__indexBufferGrid &&
                (this.__indexBufferGrid = new na());
              this.__indexBufferGrid.copyFrom(b);
              var c = b.width;
              b = b.height;
              0 != c && 0 != b
                ? ((this.__indexBufferData = new Uint16Array(54)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 0),
                  (this.__indexBufferData[8] = 5),
                  (this.__indexBufferData[9] = 5),
                  (this.__indexBufferData[10] = 0),
                  (this.__indexBufferData[11] = 2),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 4),
                  (this.__indexBufferData[14] = 7),
                  (this.__indexBufferData[15] = 7),
                  (this.__indexBufferData[16] = 4),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBufferData[18] = 8),
                  (this.__indexBufferData[19] = 9),
                  (this.__indexBufferData[20] = 0),
                  (this.__indexBufferData[21] = 0),
                  (this.__indexBufferData[22] = 9),
                  (this.__indexBufferData[23] = 1),
                  (this.__indexBufferData[24] = 10),
                  (this.__indexBufferData[25] = 8),
                  (this.__indexBufferData[26] = 4),
                  (this.__indexBufferData[27] = 4),
                  (this.__indexBufferData[28] = 8),
                  (this.__indexBufferData[29] = 0),
                  (this.__indexBufferData[30] = 11),
                  (this.__indexBufferData[31] = 10),
                  (this.__indexBufferData[32] = 6),
                  (this.__indexBufferData[33] = 6),
                  (this.__indexBufferData[34] = 10),
                  (this.__indexBufferData[35] = 4),
                  (this.__indexBufferData[36] = 12),
                  (this.__indexBufferData[37] = 13),
                  (this.__indexBufferData[38] = 8),
                  (this.__indexBufferData[39] = 8),
                  (this.__indexBufferData[40] = 13),
                  (this.__indexBufferData[41] = 9),
                  (this.__indexBufferData[42] = 14),
                  (this.__indexBufferData[43] = 12),
                  (this.__indexBufferData[44] = 10),
                  (this.__indexBufferData[45] = 10),
                  (this.__indexBufferData[46] = 12),
                  (this.__indexBufferData[47] = 8),
                  (this.__indexBufferData[48] = 15),
                  (this.__indexBufferData[49] = 14),
                  (this.__indexBufferData[50] = 11),
                  (this.__indexBufferData[51] = 11),
                  (this.__indexBufferData[52] = 14),
                  (this.__indexBufferData[53] = 10),
                  (this.__indexBuffer = a.createIndexBuffer(54)))
                : 0 == c && 0 != b
                  ? ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 5),
                    (this.__indexBufferData[8] = 0),
                    (this.__indexBufferData[9] = 0),
                    (this.__indexBufferData[10] = 5),
                    (this.__indexBufferData[11] = 1),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 7),
                    (this.__indexBufferData[14] = 4),
                    (this.__indexBufferData[15] = 4),
                    (this.__indexBufferData[16] = 7),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)))
                  : 0 != c &&
                    0 == b &&
                    ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 0),
                    (this.__indexBufferData[8] = 5),
                    (this.__indexBufferData[9] = 5),
                    (this.__indexBufferData[10] = 0),
                    (this.__indexBufferData[11] = 2),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 4),
                    (this.__indexBufferData[14] = 7),
                    (this.__indexBufferData[15] = 7),
                    (this.__indexBufferData[16] = 4),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)));
            } else this.__indexBufferGrid = null;
            null == this.__indexBuffer &&
              ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBuffer = a.createIndexBuffer(6)));
            this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
          }
          return this.__indexBuffer;
        },
        getVertexBuffer: function (a, b, c) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            (null != b && null == this.__vertexBufferGrid) ||
            (null != this.__vertexBufferGrid &&
              !this.__vertexBufferGrid.equals(b)) ||
            (null != c &&
              (this.__vertexBufferWidth != c.get_width() ||
                this.__vertexBufferHeight != c.get_height() ||
                this.__vertexBufferScaleX != c.get_scaleX() ||
                this.__vertexBufferScaleY != c.get_scaleY()))
          ) {
            this.__uvRect = new na(0, 0, this.width, this.height);
            this.__vertexBufferContext = a.__context;
            this.__vertexBuffer = null;
            null != c &&
              ((this.__vertexBufferWidth = c.get_width()),
              (this.__vertexBufferHeight = c.get_height()),
              (this.__vertexBufferScaleX = c.get_scaleX()),
              (this.__vertexBufferScaleY = c.get_scaleY()));
            if (null != b && null != c) {
              null == this.__vertexBufferGrid &&
                (this.__vertexBufferGrid = new na());
              this.__vertexBufferGrid.copyFrom(b);
              this.__vertexBufferWidth = c.get_width();
              this.__vertexBufferHeight = c.get_height();
              this.__vertexBufferScaleX = c.get_scaleX();
              this.__vertexBufferScaleY = c.get_scaleY();
              var d = b.width,
                f = b.height;
              if (0 != d && 0 != f) {
                this.__vertexBufferData = new Float32Array(224);
                var h = b.x,
                  k = b.y,
                  n = this.width - d - h,
                  p = this.height - f - k;
                b = h / this.width;
                var g = k / this.height;
                d /= this.width;
                f /= this.height;
                h /= c.get_scaleX();
                k /= c.get_scaleY();
                n /= c.get_scaleX();
                var q = p / c.get_scaleY();
                p = c.get_width() / c.get_scaleX() - h - n;
                n = c.get_height() / c.get_scaleY() - k - q;
                this.__vertexBufferData[0] = h;
                this.__vertexBufferData[1] = k;
                this.__vertexBufferData[3] = 1 * b;
                this.__vertexBufferData[4] = 1 * g;
                this.__vertexBufferData[15] = k;
                this.__vertexBufferData[18] = 1 * g;
                this.__vertexBufferData[28] = h;
                this.__vertexBufferData[31] = 1 * b;
                this.__vertexBufferData[56] = h + p;
                this.__vertexBufferData[57] = k;
                this.__vertexBufferData[59] = 1 * (b + d);
                this.__vertexBufferData[60] = 1 * g;
                this.__vertexBufferData[70] = h + p;
                this.__vertexBufferData[73] = 1 * (b + d);
                this.__vertexBufferData[84] = this.width;
                this.__vertexBufferData[85] = k;
                this.__vertexBufferData[87] = 1;
                this.__vertexBufferData[88] = 1 * g;
                this.__vertexBufferData[98] = this.width;
                this.__vertexBufferData[101] = 1;
                this.__vertexBufferData[112] = h;
                this.__vertexBufferData[113] = k + n;
                this.__vertexBufferData[115] = 1 * b;
                this.__vertexBufferData[116] = 1 * (g + f);
                this.__vertexBufferData[127] = k + n;
                this.__vertexBufferData[130] = 1 * (g + f);
                this.__vertexBufferData[140] = h + p;
                this.__vertexBufferData[141] = k + n;
                this.__vertexBufferData[143] = 1 * (b + d);
                this.__vertexBufferData[144] = 1 * (g + f);
                this.__vertexBufferData[154] = this.width;
                this.__vertexBufferData[155] = k + n;
                this.__vertexBufferData[157] = 1;
                this.__vertexBufferData[158] = 1 * (g + f);
                this.__vertexBufferData[168] = h;
                this.__vertexBufferData[169] = this.height;
                this.__vertexBufferData[171] = 1 * b;
                this.__vertexBufferData[172] = 1;
                this.__vertexBufferData[183] = this.height;
                this.__vertexBufferData[186] = 1;
                this.__vertexBufferData[196] = h + p;
                this.__vertexBufferData[197] = this.height;
                this.__vertexBufferData[199] = 1 * (b + d);
                this.__vertexBufferData[200] = 1;
                this.__vertexBufferData[210] = this.width;
                this.__vertexBufferData[211] = this.height;
                this.__vertexBufferData[213] = 1;
                this.__vertexBufferData[214] = 1;
                this.__vertexBuffer = a.createVertexBuffer(16, 14);
              } else
                0 == d && 0 != f
                  ? ((this.__vertexBufferData = new Float32Array(112)),
                    (k = b.y),
                    (p = this.height - f - k),
                    (g = k / this.height),
                    (f /= this.height),
                    (k /= c.get_scaleY()),
                    (q = p / c.get_scaleY()),
                    (n = c.get_height() / c.get_scaleY() - k - q),
                    (c = c.get_width() / c.get_scaleX()),
                    (this.__vertexBufferData[0] = c),
                    (this.__vertexBufferData[1] = k),
                    (this.__vertexBufferData[3] = 1),
                    (this.__vertexBufferData[4] = 1 * g),
                    (this.__vertexBufferData[15] = k),
                    (this.__vertexBufferData[18] = 1 * g),
                    (this.__vertexBufferData[28] = c),
                    (this.__vertexBufferData[31] = 1),
                    (this.__vertexBufferData[56] = c),
                    (this.__vertexBufferData[57] = k + n),
                    (this.__vertexBufferData[59] = 1),
                    (this.__vertexBufferData[60] = 1 * (g + f)),
                    (this.__vertexBufferData[71] = k + n),
                    (this.__vertexBufferData[74] = 1 * (g + f)),
                    (this.__vertexBufferData[84] = c),
                    (this.__vertexBufferData[85] = this.height),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[99] = this.height),
                    (this.__vertexBufferData[102] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)))
                  : 0 == f &&
                    0 != d &&
                    ((this.__vertexBufferData = new Float32Array(112)),
                    (h = b.x),
                    (n = this.width - d - h),
                    (b = h / this.width),
                    (d /= this.width),
                    (h /= c.get_scaleX()),
                    (n /= c.get_scaleX()),
                    (p = c.get_width() / c.get_scaleX() - h - n),
                    (c = c.get_height() / c.get_scaleY()),
                    (this.__vertexBufferData[0] = h),
                    (this.__vertexBufferData[1] = c),
                    (this.__vertexBufferData[3] = 1 * b),
                    (this.__vertexBufferData[4] = 1),
                    (this.__vertexBufferData[15] = c),
                    (this.__vertexBufferData[18] = 1),
                    (this.__vertexBufferData[28] = h),
                    (this.__vertexBufferData[31] = 1 * b),
                    (this.__vertexBufferData[56] = h + p),
                    (this.__vertexBufferData[57] = c),
                    (this.__vertexBufferData[59] = 1 * (b + d)),
                    (this.__vertexBufferData[60] = 1),
                    (this.__vertexBufferData[70] = h + p),
                    (this.__vertexBufferData[73] = 1 * (b + d)),
                    (this.__vertexBufferData[84] = this.width),
                    (this.__vertexBufferData[85] = c),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[98] = this.width),
                    (this.__vertexBufferData[101] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)));
            } else this.__vertexBufferGrid = null;
            null == this.__vertexBuffer &&
              ((this.__vertexBufferData = new Float32Array(56)),
              (this.__vertexBufferData[0] = this.width),
              (this.__vertexBufferData[1] = this.height),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[15] = this.height),
              (this.__vertexBufferData[18] = 1),
              (this.__vertexBufferData[28] = this.width),
              (this.__vertexBufferData[31] = 1),
              (this.__vertexBuffer = a.createVertexBuffer(3, 14)));
            this.__vertexBuffer.uploadFromTypedArray(
              hh.toArrayBufferView(this.__vertexBufferData),
            );
          }
          return this.__vertexBuffer;
        },
        getPixel: function (a, b) {
          return this.readable ? this.image.getPixel(a, b, 1) : 0;
        },
        getTexture: function (a) {
          if (!this.__isValid) return null;
          if (null == this.__texture || this.__textureContext != a.__context)
            ((this.__textureContext = a.__context),
              (this.__texture = a.createRectangleTexture(
                this.width,
                this.height,
                1,
                !1,
              )),
              (this.__textureVersion = -1));
          Ka.sync(this.image, !1);
          null != this.image &&
            this.image.version > this.__textureVersion &&
            (null != this.__surface && El.flush(this.__surface),
            (a = this.image),
            Eb.__supportsBGRA ||
              0 == a.get_format() ||
              ((a = a.clone()), a.set_format(0)),
            this.__texture.__uploadFromImage(a),
            (this.__textureVersion = this.image.version),
            (this.__textureWidth = a.buffer.width),
            (this.__textureHeight = a.buffer.height));
          this.readable ||
            null == this.image ||
            (this.image = this.__surface = null);
          return this.__texture;
        },
        setPixel: function (a, b, c) {
          this.readable && this.image.setPixel(a, b, c, 1);
        },
        __drawCanvas: function (a, b) {
          var c = this.image.buffer;
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
          b.__render(a);
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
          c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
          c.__srcImageData = null;
          c.data = null;
          this.image.dirty = !0;
          this.image.version++;
        },
        __drawGL: function (a, b) {
          var c = b.__context3D,
            d = c.__state.renderToTexture,
            f = c.__state.renderToTextureDepthStencil,
            h = c.__state.renderToTextureAntiAlias,
            k = c.__state.renderToTextureSurfaceSelector;
          c.setRenderToTexture(this.getTexture(c), !0);
          b.__render(a);
          null != d
            ? c.setRenderToTexture(d, f, h, k)
            : c.setRenderToBackBuffer();
        },
        __fillRect: function (a, b, c) {
          if (null != a)
            if (
              (this.transparent && 0 == (b & -16777216) && (b = 0),
              c &&
                null != this.__texture &&
                null != this.__texture.__glFramebuffer &&
                'opengl' == Ra.get_current().stage.__renderer.__type)
            ) {
              c = Ra.get_current().stage.__renderer.__context3D;
              var d = !this.rect.equals(a),
                f = c.__state.renderToTexture,
                h = c.__state.renderToTextureDepthStencil,
                k = c.__state.renderToTextureAntiAlias,
                n = c.__state.renderToTextureSurfaceSelector;
              c.setRenderToTexture(this.__texture);
              d && c.setScissorRectangle(a);
              c.clear(
                ((b >>> 16) & 255) / 255,
                ((b >>> 8) & 255) / 255,
                (b & 255) / 255,
                this.transparent ? ((b >>> 24) & 255) / 255 : 1,
                0,
                0,
                1,
              );
              d && c.setScissorRectangle(null);
              null != f
                ? c.setRenderToTexture(f, h, k, n)
                : c.setRenderToBackBuffer();
            } else
              this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1);
        },
        __fromImage: function (a) {
          null != a &&
            null != a.buffer &&
            ((this.image = a),
            (this.width = a.width),
            (this.height = a.height),
            (this.rect = new na(0, 0, a.width, a.height)),
            (this.__textureWidth = this.width),
            (this.__textureHeight = this.height),
            (this.__isValid = this.readable = !0));
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          this.rect.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __setUVRect: function (a, b, c, d, f) {
          if (
            null != this.getVertexBuffer(a) &&
            (d != this.__uvRect.width ||
              f != this.__uvRect.height ||
              b != this.__uvRect.x ||
              c != this.__uvRect.y)
          ) {
            null == this.__uvRect && (this.__uvRect = new na());
            this.__uvRect.setTo(b, c, d, f);
            a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
            c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
            b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
            var h = 0 < this.__textureHeight ? f / this.__textureHeight : 0;
            this.__vertexBufferData[0] = d;
            this.__vertexBufferData[1] = f;
            this.__vertexBufferData[3] = a + b;
            this.__vertexBufferData[4] = c + h;
            this.__vertexBufferData[15] = f;
            this.__vertexBufferData[17] = a;
            this.__vertexBufferData[18] = c + h;
            this.__vertexBufferData[28] = d;
            this.__vertexBufferData[31] = a + b;
            this.__vertexBufferData[32] = c;
            this.__vertexBufferData[45] = a;
            this.__vertexBufferData[46] = c;
            this.__vertexBuffer.uploadFromTypedArray(
              hh.toArrayBufferView(this.__vertexBufferData),
            );
          }
        },
        __update: function (a, b) {
          this.__updateTransforms();
        },
        __updateTransforms: function (a) {
          null == a
            ? this.__worldTransform.identity()
            : this.__worldTransform.copyFrom(a);
          this.__renderTransform.copyFrom(this.__worldTransform);
        },
        __class__: Fb,
      };
      var na = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      g['openfl.geom.Rectangle'] = na;
      na.__name__ = 'openfl.geom.Rectangle';
      na.prototype = {
        clone: function () {
          return new na(this.x, this.y, this.width, this.height);
        },
        contains: function (a, b) {
          return a >= this.x && b >= this.y && a < this.get_right()
            ? b < this.get_bottom()
            : !1;
        },
        containsPoint: function (a) {
          return this.contains(a.x, a.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height;
        },
        equals: function (a) {
          return a == this
            ? !0
            : null != a &&
                this.x == a.x &&
                this.y == a.y &&
                this.width == a.width
              ? this.height == a.height
              : !1;
        },
        inflate: function (a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -= b;
          this.height += 2 * b;
        },
        intersects: function (a) {
          var b = this.x < a.x ? a.x : this.x;
          if (
            (this.get_right() > a.get_right()
              ? a.get_right()
              : this.get_right()) <= b
          )
            return !1;
          b = this.y < a.y ? a.y : this.y;
          return (
            (this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom()) > b
          );
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        __contract: function (a, b, c, d) {
          if (0 != this.width || 0 != this.height) {
            var f = 0,
              h = 0,
              k = 0,
              n = 0;
            this.x < a && (f = a - this.x);
            this.y < b && (h = b - this.y);
            this.get_right() > a + c && (k = a + c - this.get_right());
            this.get_bottom() > b + d && (n = b + d - this.get_bottom());
            this.x += f;
            this.y += h;
            this.width += k - f;
            this.height += n - h;
          }
        },
        __expand: function (a, b, c, d) {
          if (0 == this.width && 0 == this.height)
            ((this.x = a), (this.y = b), (this.width = c), (this.height = d));
          else {
            var f = this.get_right(),
              h = this.get_bottom();
            this.x > a && ((this.x = a), (this.width = f - a));
            this.y > b && ((this.y = b), (this.height = h - b));
            f < a + c && (this.width = a + c - this.x);
            h < b + d && (this.height = b + d - this.y);
          }
        },
        __toLimeRectangle: function () {
          null == na.__limeRectangle && (na.__limeRectangle = new Ld());
          na.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
          return na.__limeRectangle;
        },
        __transform: function (a, b) {
          var c = b.a * this.x + b.c * this.y,
            d = c,
            f = b.b * this.x + b.d * this.y,
            h = f,
            k = b.a * (this.x + this.width) + b.c * this.y,
            n = b.b * (this.x + this.width) + b.d * this.y;
          k < c && (c = k);
          n < f && (f = n);
          k > d && (d = k);
          n > h && (h = n);
          k = b.a * (this.x + this.width) + b.c * (this.y + this.height);
          n = b.b * (this.x + this.width) + b.d * (this.y + this.height);
          k < c && (c = k);
          n < f && (f = n);
          k > d && (d = k);
          n > h && (h = n);
          k = b.a * this.x + b.c * (this.y + this.height);
          n = b.b * this.x + b.d * (this.y + this.height);
          k < c && (c = k);
          n < f && (f = n);
          k > d && (d = k);
          n > h && (h = n);
          a.setTo(c + b.tx, f + b.ty, d - c, h - f);
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_left: function () {
          return this.x;
        },
        get_right: function () {
          return this.x + this.width;
        },
        get_top: function () {
          return this.y;
        },
        __class__: na,
        __properties__: {
          get_top: 'get_top',
          get_right: 'get_right',
          get_left: 'get_left',
          get_bottom: 'get_bottom',
        },
      };
      var Xb = function (a, b, c, d, f, h, k) {
        null == f && (f = -1);
        null == d && (d = -1);
        null == c && (c = 0);
        null == b && (b = 0);
        this.offsetX = b;
        this.offsetY = c;
        this.width = d;
        this.height = f;
        this.version = 0;
        null == k &&
          ((k = Zc.CANVAS), null != Ad.__current.__worker || Ad.__isWorker) &&
          (k = Zc.DATA);
        this.type = k;
        if (null == a) {
          if (0 < d && 0 < f)
            switch (this.type._hx_index) {
              case 0:
                this.buffer = new Ve(null, d, f);
                Ka.createCanvas(this, d, f);
                null != h && 0 != h && this.fillRect(new Ld(0, 0, d, f), h);
                break;
              case 1:
                ((a = d * f * 4),
                  (a = null != a ? new Uint8Array(a) : null),
                  (this.buffer = new Ve(a, d, f)),
                  null != h && 0 != h && this.fillRect(new Ld(0, 0, d, f), h));
            }
        } else this.__fromImageBuffer(a);
      };
      g['lime.graphics.Image'] = Xb;
      Xb.__name__ = 'lime.graphics.Image';
      Xb.fromCanvas = function (a) {
        if (null == a) return null;
        var b = new Ve(null, a.width, a.height);
        b.set_src(a);
        a = new Xb(b);
        a.type = Zc.CANVAS;
        return a;
      };
      Xb.fromFile = function (a) {
        if (null == a) return null;
        var b = new Xb();
        return b.__fromFile(a) ? b : null;
      };
      Xb.loadFromBytes = function (a) {
        if (null == a) return hc.withValue(null);
        if (Xb.__isPNG(a)) var b = 'image/png';
        else if (Xb.__isJPG(a)) b = 'image/jpeg';
        else if (Xb.__isGIF(a)) b = 'image/gif';
        else if (Xb.__isWebP(a)) b = 'image/webp';
        else return hc.withValue(null);
        return Ba.loadImageFromBytes(a, b);
      };
      Xb.loadFromFile = function (a) {
        return null == a ? hc.withValue(null) : Ba.loadImage(a);
      };
      Xb.__isGIF = function (a) {
        if (null == a || 6 > a.length) return !1;
        a = a.getString(0, 6);
        return 'GIF87a' != a ? 'GIF89a' == a : !0;
      };
      Xb.__isJPG = function (a) {
        return null == a || 4 > a.length
          ? !1
          : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2]
            ? 217 == a.b[a.length - 1]
            : !1;
      };
      Xb.__isPNG = function (a) {
        return null == a || 8 > a.length
          ? !1
          : 137 == a.b[0] &&
              80 == a.b[1] &&
              78 == a.b[2] &&
              71 == a.b[3] &&
              13 == a.b[4] &&
              10 == a.b[5] &&
              26 == a.b[6]
            ? 10 == a.b[7]
            : !1;
      };
      Xb.__isWebP = function (a) {
        return null == a || 16 > a.length
          ? !1
          : 'RIFF' == a.getString(0, 4)
            ? 'WEBP' == a.getString(8, 4)
            : !1;
      };
      Xb.prototype = {
        clone: function () {
          if (null != this.buffer) {
            this.type == Zc.CANVAS
              ? Ka.convertToCanvas(this)
              : Ka.convertToData(this);
            var a = new Xb(
              this.buffer.clone(),
              this.offsetX,
              this.offsetY,
              this.width,
              this.height,
              null,
              this.type,
            );
            a.version = this.version;
            return a;
          }
          return new Xb(
            null,
            this.offsetX,
            this.offsetY,
            this.width,
            this.height,
            null,
            this.type,
          );
        },
        colorTransform: function (a, b) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Ka.colorTransform(this, a, b);
                break;
              case 1:
                Ka.convertToData(this);
                bc.colorTransform(this, a, b);
                break;
              case 2:
                (a.offset(this.offsetX, this.offsetY),
                  this.buffer.__srcBitmapData.colorTransform(
                    a.__toFlashRectangle(),
                    Qc.__toFlashColorTransform(b),
                  ));
            }
        },
        copyChannel: function (a, b, c, d, f) {
          b = this.__clipRect(b);
          if (
            null != this.buffer &&
            null != b &&
            !(
              (f == rg.ALPHA && !this.get_transparent()) ||
              0 >= b.width ||
              0 >= b.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              this.type._hx_index)
            ) {
              case 0:
                Ka.copyChannel(this, a, b, c, d, f);
                break;
              case 1:
                Ka.convertToData(this);
                Ka.convertToData(a);
                bc.copyChannel(this, a, b, c, d, f);
                break;
              case 2:
                switch (d._hx_index) {
                  case 0:
                    var h = 1;
                    break;
                  case 1:
                    h = 2;
                    break;
                  case 2:
                    h = 4;
                    break;
                  case 3:
                    h = 8;
                }
                switch (f._hx_index) {
                  case 0:
                    var k = 1;
                    break;
                  case 1:
                    k = 2;
                    break;
                  case 2:
                    k = 4;
                    break;
                  case 3:
                    k = 8;
                }
                b.offset(a.offsetX, a.offsetY);
                c.offset(this.offsetX, this.offsetY);
                this.buffer.__srcBitmapData.copyChannel(
                  a.buffer.get_src(),
                  b.__toFlashRectangle(),
                  c.__toFlashPoint(),
                  h,
                  k,
                );
            }
        },
        copyPixels: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          if (
            null != this.buffer &&
            null != a &&
            !(
              0 >= b.width ||
              0 >= b.height ||
              0 >= this.width ||
              0 >= this.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              0 > b.x && ((b.width += b.x), (b.x = 0)),
              0 > b.y && ((b.height += b.y), (b.y = 0)),
              c.x + b.width > this.width && (b.width = this.width - c.x),
              c.y + b.height > this.height && (b.height = this.height - c.y),
              0 > c.x && ((b.width += c.x), (b.x -= c.x), (c.x = 0)),
              0 > c.y && ((b.height += c.y), (b.y -= c.y), (c.y = 0)),
              a == this &&
                c.x < b.get_right() &&
                c.y < b.get_bottom() &&
                (a = this.clone()),
              d == a && (null == f || (0 == f.x && 0 == f.y)) && (f = d = null),
              this.type._hx_index)
            ) {
              case 0:
                null != d
                  ? (Ka.convertToData(this),
                    Ka.convertToData(a),
                    null != d && Ka.convertToData(d),
                    bc.copyPixels(this, a, b, c, d, f, h))
                  : (Ka.convertToCanvas(this),
                    Ka.convertToCanvas(a),
                    Ka.copyPixels(this, a, b, c, d, f, h));
                break;
              case 1:
                Ka.convertToData(this);
                Ka.convertToData(a);
                null != d && Ka.convertToData(d);
                bc.copyPixels(this, a, b, c, d, f, h);
                break;
              case 2:
                (b.offset(a.offsetX, a.offsetY),
                  c.offset(this.offsetX, this.offsetY),
                  null != d && null != f && f.offset(d.offsetX, d.offsetY),
                  this.buffer.__srcBitmapData.copyPixels(
                    a.buffer.__srcBitmapData,
                    b.__toFlashRectangle(),
                    c.__toFlashPoint(),
                    null != d ? d.buffer.get_src() : null,
                    null != f ? f.__toFlashPoint() : null,
                    h,
                  ));
            }
        },
        encode: function (a, b) {
          null == b && (b = 90);
          if (null == a) return kk.encode(this);
          switch (a._hx_index) {
            case 0:
              return al.encode(this);
            case 1:
              return bl.encode(this, b);
            case 2:
              return kk.encode(this);
          }
        },
        fillRect: function (a, b, c) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Ka.fillRect(this, a, b, c);
                break;
              case 1:
                Ka.convertToData(this);
                if (0 == this.buffer.data.length) break;
                bc.fillRect(this, a, b, c);
                break;
              case 2:
                a.offset(this.offsetX, this.offsetY);
                if (null == c)
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 24) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 8) & 255);
                else
                  switch (c) {
                    case 1:
                      break;
                    case 2:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 8) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 24) & 255);
                      break;
                    default:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 24) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b);
            }
        },
        getPixel: function (a, b, c) {
          if (
            null == this.buffer ||
            0 > a ||
            0 > b ||
            a >= this.width ||
            b >= this.height
          )
            return 0;
          switch (this.type._hx_index) {
            case 0:
              return Ka.getPixel(this, a, b, c);
            case 1:
              return (Ka.convertToData(this), bc.getPixel(this, a, b, c));
            case 2:
              a = this.buffer.__srcBitmapData.getPixel(
                a + this.offsetX,
                b + this.offsetY,
              );
              if (null == c)
                return (
                  (((a >>> 16) & 255) << 24) |
                  (((a >>> 8) & 255) << 16) |
                  ((a & 255) << 8) |
                  ((a >>> 24) & 255)
                );
              switch (c) {
                case 1:
                  return a;
                case 2:
                  return (
                    ((a & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    (((a >>> 16) & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
                default:
                  return (
                    (((a >>> 16) & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    ((a & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
              }
            default:
              return 0;
          }
        },
        getPixels: function (a, b) {
          if (null == this.buffer) return null;
          switch (this.type._hx_index) {
            case 0:
              return Ka.getPixels(this, a, b);
            case 1:
              return (Ka.convertToData(this), bc.getPixels(this, a, b));
            case 2:
              return null;
            default:
              return null;
          }
        },
        setPixel: function (a, b, c, d) {
          if (
            !(
              null == this.buffer ||
              0 > a ||
              0 > b ||
              a >= this.width ||
              b >= this.height
            )
          )
            switch (this.type._hx_index) {
              case 0:
                Ka.setPixel(this, a, b, c, d);
                break;
              case 1:
                Ka.convertToData(this);
                bc.setPixel(this, a, b, c, d);
                break;
              case 2:
                if (null == d)
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
                else
                  switch (d) {
                    case 1:
                      break;
                    case 2:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 8) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 24) & 255);
                      break;
                    default:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 24) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.setPixel(
                  a + this.offsetX,
                  b + this.offsetX,
                  c,
                );
            }
        },
        __clipRect: function (a) {
          return null == a ||
            (0 > a.x && ((a.width -= -a.x), (a.x = 0), 0 >= a.x + a.width)) ||
            (0 > a.y && ((a.height -= -a.y), (a.y = 0), 0 >= a.y + a.height)) ||
            (a.x + a.width >= this.width &&
              ((a.width -= a.x + a.width - this.width), 0 >= a.width)) ||
            (a.y + a.height >= this.height &&
              ((a.height -= a.y + a.height - this.height), 0 >= a.height))
            ? null
            : a;
        },
        __fromBase64: function (a, b, c) {
          var d = this,
            f = new window.Image();
          f.addEventListener(
            'load',
            function (a) {
              d.buffer = new Ve(null, f.width, f.height);
              d.buffer.__srcImage = f;
              d.offsetX = 0;
              d.offsetY = 0;
              d.width = d.buffer.width;
              d.height = d.buffer.height;
              null != c && c(d);
            },
            !1,
          );
          f.src = 'data:' + b + ';base64,' + a;
        },
        __fromBytes: function (a, b) {
          if (Xb.__isPNG(a)) var c = 'image/png';
          else if (Xb.__isJPG(a)) c = 'image/jpeg';
          else if (Xb.__isGIF(a)) c = 'image/gif';
          else return !1;
          this.__fromBase64(Be.encode(a), c, b);
          return !0;
        },
        __fromFile: function (a, b, c) {
          var d = this,
            f = new window.Image();
          Ba.__isSameOrigin(a) || (f.crossOrigin = 'Anonymous');
          f.onload = function (a) {
            d.buffer = new Ve(null, f.width, f.height);
            d.buffer.__srcImage = f;
            d.width = f.width;
            d.height = f.height;
            null != b && b(d);
          };
          f.onerror = function (a) {
            null != c && c();
          };
          f.src = a;
          return !0;
        },
        __fromImageBuffer: function (a) {
          this.buffer = a;
          null != a &&
            (-1 == this.width && (this.width = a.width),
            -1 == this.height && (this.height = a.height));
        },
        get_data: function () {
          null == this.buffer.data &&
            0 < this.buffer.width &&
            0 < this.buffer.height &&
            Ka.convertToData(this);
          return this.buffer.data;
        },
        get_format: function () {
          return this.buffer.format;
        },
        set_format: function (a) {
          this.buffer.format != a &&
            1 == this.type._hx_index &&
            bc.setFormat(this, a);
          return (this.buffer.format = a);
        },
        get_premultiplied: function () {
          return this.buffer.premultiplied;
        },
        set_premultiplied: function (a) {
          if (a && !this.buffer.premultiplied)
            switch (this.type._hx_index) {
              case 0:
              case 1:
                (Ka.convertToData(this), bc.multiplyAlpha(this));
            }
          else
            !a &&
              this.buffer.premultiplied &&
              1 == this.type._hx_index &&
              (Ka.convertToData(this), bc.unmultiplyAlpha(this));
          return a;
        },
        get_rect: function () {
          return new Ld(0, 0, this.width, this.height);
        },
        get_src: function () {
          null != this.buffer.__srcCanvas ||
            (null == this.buffer.data && this.type != Zc.DATA) ||
            Ka.convertToCanvas(this);
          return this.buffer.get_src();
        },
        get_transparent: function () {
          return null == this.buffer ? !1 : this.buffer.transparent;
        },
        set_transparent: function (a) {
          return null == this.buffer ? !1 : (this.buffer.transparent = a);
        },
        __class__: Xb,
        __properties__: {
          set_transparent: 'set_transparent',
          get_transparent: 'get_transparent',
          get_src: 'get_src',
          get_rect: 'get_rect',
          set_premultiplied: 'set_premultiplied',
          get_premultiplied: 'get_premultiplied',
          set_format: 'set_format',
          get_format: 'get_format',
          get_data: 'get_data',
        },
      };
      var Zc = (y['lime.graphics.ImageType'] = {
        __ename__: 'lime.graphics.ImageType',
        __constructs__: null,
        CANVAS: {
          _hx_name: 'CANVAS',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
        DATA: {
          _hx_name: 'DATA',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
        FLASH: {
          _hx_name: 'FLASH',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
        CUSTOM: {
          _hx_name: 'CUSTOM',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
      });
      Zc.__constructs__ = [Zc.CANVAS, Zc.DATA, Zc.FLASH, Zc.CUSTOM];
      var lk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Dynamic_Void'] = lk;
      lk.__name__ = 'lime.app._Event_Dynamic_Void';
      lk.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: lk,
      };
      var ul = {
          disablePreserveClasses: function (a) {
            null != a &&
              a instanceof Object &&
              1 != ya.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              (a.__skipPrototype__ = !0);
          },
          restoreClasses: function (a, b) {
            null == b &&
              ((b = (2147483647 * Math.random()) | 0),
              ya.field(a, '__restoreFlag__') == b && ++b);
            if (
              null != a &&
              a instanceof Object &&
              1 != ya.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              ya.field(a, '__restoreFlag__') != b
            ) {
              try {
                a.__restoreFlag__ = b;
              } catch (f) {
                Ta.lastError = f;
                return;
              }
              if (null != ya.field(a, '__prototype__'))
                try {
                  Object.setPrototypeOf(
                    a,
                    g[ya.field(a, '__prototype__')].prototype,
                  );
                } catch (f) {
                  Ta.lastError = f;
                }
              var c = 0;
              for (a = Object.values(a); c < a.length; ) {
                var d = a[c];
                ++c;
                ul.restoreClasses(d, b);
              }
            }
          },
        },
        Fl = {
          toFunction: function (a) {
            if (null != a.func) return a.func;
            if (null != a.classPath && null != a.functionName)
              return ((a.func = g[a.classPath][a.functionName]), a.func);
            if (null != a.sourceCode)
              return (
                (a.func = new Function('return ' + a.sourceCode)()),
                a.func
              );
            throw X.thrown(
              'Object is not a valid WorkFunction: ' + H.string(a),
            );
          },
        },
        va = function () {};
      g['js.Boot'] = va;
      va.__name__ = 'js.Boot';
      va.getClass = function (a) {
        if (null == a) return null;
        if (a instanceof Array) return Array;
        var b = a.__class__;
        if (null != b) return b;
        a = va.__nativeClassName(a);
        return null != a ? va.__resolveNativeClass(a) : null;
      };
      va.__string_rec = function (a, b) {
        if (null == a) return 'null';
        if (5 <= b.length) return '<...>';
        var c = typeof a;
        'function' == c && (a.__name__ || a.__ename__) && (c = 'object');
        switch (c) {
          case 'function':
            return '<function>';
          case 'object':
            if (a.__enum__) {
              var d = y[a.__enum__].__constructs__[a._hx_index];
              c = d._hx_name;
              if (d.__params__) {
                b += '\t';
                var f = [],
                  h = 0;
                for (d = d.__params__; h < d.length; ) {
                  var k = d[h];
                  h += 1;
                  f.push(va.__string_rec(a[k], b));
                }
                return c + '(' + f.join(',') + ')';
              }
              return c;
            }
            if (a instanceof Array) {
              c = '[';
              b += '\t';
              f = 0;
              for (h = a.length; f < h; )
                ((d = f++),
                  (c += (0 < d ? ',' : '') + va.__string_rec(a[d], b)));
              return c + ']';
            }
            try {
              f = a.toString;
            } catch (n) {
              return ((Ta.lastError = n), '???');
            }
            if (
              null != f &&
              f != Object.toString &&
              'function' == typeof f &&
              ((c = a.toString()), '[object Object]' != c)
            )
              return c;
            c = '{\n';
            b += '\t';
            f = null != a.hasOwnProperty;
            h = null;
            for (h in a)
              (f && !a.hasOwnProperty(h)) ||
                'prototype' == h ||
                '__class__' == h ||
                '__super__' == h ||
                '__interfaces__' == h ||
                '__properties__' == h ||
                (2 != c.length && (c += ', \n'),
                (c += b + h + ' : ' + va.__string_rec(a[h], b)));
            b = b.substring(1);
            return c + ('\n' + b + '}');
          case 'string':
            return a;
          default:
            return String(a);
        }
      };
      va.__interfLoop = function (a, b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var c = a.__interfaces__;
        if (null != c)
          for (var d = 0, f = c.length; d < f; ) {
            var h = d++;
            h = c[h];
            if (h == b || va.__interfLoop(h, b)) return !0;
          }
        return va.__interfLoop(a.__super__, b);
      };
      va.__instanceof = function (a, b) {
        if (null == b) return !1;
        switch (b) {
          case Array:
            return a instanceof Array;
          case Gl:
            return 'boolean' == typeof a;
          case Hl:
            return null != a;
          case Il:
            return 'number' == typeof a;
          case vl:
            return 'number' == typeof a ? (a | 0) === a : !1;
          case String:
            return 'string' == typeof a;
          default:
            if (null != a)
              if ('function' == typeof b) {
                if (va.__downcastCheck(a, b)) return !0;
              } else {
                if (
                  'object' == typeof b &&
                  va.__isNativeObj(b) &&
                  a instanceof b
                )
                  return !0;
              }
            else return !1;
            return (b == xl && null != a.__name__) ||
              (b == yl && null != a.__ename__)
              ? !0
              : null != a.__enum__
                ? y[a.__enum__] == b
                : !1;
        }
      };
      va.__downcastCheck = function (a, b) {
        return a instanceof b
          ? !0
          : b.__isInterface__
            ? va.__interfLoop(va.getClass(a), b)
            : !1;
      };
      va.__cast = function (a, b) {
        if (null == a || va.__instanceof(a, b)) return a;
        throw X.thrown('Cannot cast ' + H.string(a) + ' to ' + H.string(b));
      };
      va.__nativeClassName = function (a) {
        a = va.__toStr.call(a).slice(8, -1);
        return 'Object' == a || 'Function' == a || 'Math' == a || 'JSON' == a
          ? null
          : a;
      };
      va.__isNativeObj = function (a) {
        return null != va.__nativeClassName(a);
      };
      va.__resolveNativeClass = function (a) {
        return E[a];
      };
      var Ad = function (a, b) {
        this.__href = a;
        null != b &&
          ((this.__worker = b),
          (this.__worker.onmessage = l(this, this.dispatchMessage)),
          (this.onMessage = new lk()));
        ul.disablePreserveClasses(this);
      };
      g['lime._internal.backend.html5.HTML5Thread'] = Ad;
      Ad.__name__ = 'lime._internal.backend.html5.HTML5Thread';
      Ad.prototype = {
        dispatchMessage: function (a) {
          a = a.data;
          ul.restoreClasses(a);
          null != this.onMessage && this.onMessage.dispatch(a);
          Ad.__resolveMethods.isEmpty()
            ? Ad.__messages.add(a)
            : Ad.__resolveMethods.pop()(a);
        },
        destroy: function () {
          if (null != this.__worker) this.__worker.terminate();
          else if (Ad.__isWorker)
            try {
              E.close();
            } catch (a) {
              Ta.lastError = a;
            }
        },
        __class__: Ad,
      };
      var Ve = function (a, b, c, d, f) {
        null == d && (d = 32);
        null == c && (c = 0);
        null == b && (b = 0);
        this.data = a;
        this.width = b;
        this.height = c;
        this.bitsPerPixel = d;
        this.format = null == f ? 0 : f;
        this.premultiplied = !1;
        this.transparent = !0;
      };
      g['lime.graphics.ImageBuffer'] = Ve;
      Ve.__name__ = 'lime.graphics.ImageBuffer';
      Ve.prototype = {
        clone: function () {
          var a = new Ve(this.data, this.width, this.height, this.bitsPerPixel);
          if (null != this.data) {
            var b = this.data.byteLength,
              c = null,
              d = null,
              f = null,
              h = null,
              k = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != h
                        ? null == k
                          ? new Uint8Array(h, 0)
                          : new Uint8Array(h, 0, k)
                        : null;
            a.data = b;
            d = c = b = null;
            f = this.data;
            k = h = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != h
                        ? null == k
                          ? new Uint8Array(h, 0)
                          : new Uint8Array(h, 0, k)
                        : null;
            a.data.set(b);
          } else
            null != this.__srcImageData
              ? ((a.__srcCanvas = window.document.createElement('canvas')),
                (a.__srcContext = a.__srcCanvas.getContext('2d')),
                (a.__srcCanvas.width = this.__srcImageData.width),
                (a.__srcCanvas.height = this.__srcImageData.height),
                (a.__srcImageData = a.__srcContext.createImageData(
                  this.__srcImageData.width,
                  this.__srcImageData.height,
                )),
                (b = new Uint8ClampedArray(this.__srcImageData.data)),
                a.__srcImageData.data.set(b))
              : null != this.__srcCanvas
                ? ((a.__srcCanvas = window.document.createElement('canvas')),
                  (a.__srcContext = a.__srcCanvas.getContext('2d')),
                  (a.__srcCanvas.width = this.__srcCanvas.width),
                  (a.__srcCanvas.height = this.__srcCanvas.height),
                  a.__srcContext.drawImage(this.__srcCanvas, 0, 0))
                : (a.__srcImage = this.__srcImage);
          a.bitsPerPixel = this.bitsPerPixel;
          a.format = this.format;
          a.premultiplied = this.premultiplied;
          a.transparent = this.transparent;
          return a;
        },
        get_src: function () {
          return null != this.__srcImage ? this.__srcImage : this.__srcCanvas;
        },
        set_src: function (a) {
          a instanceof Image
            ? (this.__srcImage = a)
            : a instanceof HTMLCanvasElement &&
              ((this.__srcCanvas = a),
              (this.__srcContext = this.__srcCanvas.getContext('2d')));
          return a;
        },
        get_stride: function () {
          return this.width * ((this.bitsPerPixel / 8) | 0);
        },
        __class__: Ve,
        __properties__: {
          get_stride: 'get_stride',
          set_src: 'set_src',
          get_src: 'get_src',
        },
      };
      var Ka = function () {};
      g['lime._internal.graphics.ImageCanvasUtil'] = Ka;
      Ka.__name__ = 'lime._internal.graphics.ImageCanvasUtil';
      Ka.colorTransform = function (a, b, c) {
        Ka.convertToData(a);
        bc.colorTransform(a, b, c);
      };
      Ka.convertToCanvas = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage
          ? (null == c.__srcCanvas &&
              (Ka.createCanvas(a, c.__srcImage.width, c.__srcImage.height),
              c.__srcContext.drawImage(c.__srcImage, 0, 0)),
            (c.__srcImage = null))
          : null == c.__srcCanvas && null != c.data
            ? (a.set_transparent(!0),
              Ka.createCanvas(a, c.width, c.height),
              Ka.createImageData(a),
              c.__srcContext.putImageData(c.__srcImageData, 0, 0))
            : a.type == Zc.DATA &&
              null != c.__srcImageData &&
              a.dirty &&
              (c.__srcContext.putImageData(c.__srcImageData, 0, 0),
              (a.dirty = !1));
        b
          ? ((c.data = null), (c.__srcImageData = null))
          : null == c.data &&
            null != c.__srcImageData &&
            (c.data = c.__srcImageData.data);
        a.type = Zc.CANVAS;
      };
      Ka.convertToData = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage && Ka.convertToCanvas(a);
        if (null != c.__srcCanvas && null == c.data)
          (Ka.createImageData(a), a.type == Zc.CANVAS && (a.dirty = !1));
        else if (a.type == Zc.CANVAS && null != c.__srcCanvas && a.dirty) {
          if (null == c.__srcImageData) Ka.createImageData(a);
          else {
            c.__srcImageData = c.__srcContext.getImageData(
              0,
              0,
              c.width,
              c.height,
            );
            var d = c.__srcImageData.data.buffer;
            d = null != d ? new Uint8Array(d) : null;
            c.data = d;
          }
          a.dirty = !1;
        }
        b && ((a.buffer.__srcCanvas = null), (a.buffer.__srcContext = null));
        a.type = Zc.DATA;
      };
      Ka.copyChannel = function (a, b, c, d, f, h) {
        Ka.convertToData(b);
        Ka.convertToData(a);
        bc.copyChannel(a, b, c, d, f, h);
      };
      Ka.copyPixels = function (a, b, c, d, f, h, k) {
        null == k && (k = !1);
        null == d ||
          d.x >= a.width ||
          d.y >= a.height ||
          null == c ||
          1 > c.width ||
          1 > c.height ||
          (null != f &&
            f.get_transparent() &&
            (null == h && (h = new ig()),
            (b = b.clone()),
            b.copyChannel(
              f,
              new Ld(c.x + h.x, c.y + h.y, c.width, c.height),
              new ig(c.x, c.y),
              rg.ALPHA,
              rg.ALPHA,
            )),
          Ka.convertToCanvas(a, !0),
          k ||
            (a.get_transparent() &&
              b.get_transparent() &&
              a.buffer.__srcContext.clearRect(
                d.x + a.offsetX,
                d.y + a.offsetY,
                c.width + a.offsetX,
                c.height + a.offsetY,
              )),
          Ka.convertToCanvas(b),
          null != b.buffer.get_src() &&
            ((a.buffer.__srcContext.globalCompositeOperation = 'source-over'),
            a.buffer.__srcContext.drawImage(
              b.buffer.get_src(),
              (c.x + b.offsetX) | 0,
              (c.y + b.offsetY) | 0,
              c.width | 0,
              c.height | 0,
              (d.x + a.offsetX) | 0,
              (d.y + a.offsetY) | 0,
              c.width | 0,
              c.height | 0,
            )),
          (a.dirty = !0),
          a.version++);
      };
      Ka.createCanvas = function (a, b, c) {
        var d = a.buffer;
        null == d.__srcCanvas &&
          ((d.__srcCanvas = window.document.createElement('canvas')),
          (d.__srcCanvas.width = b),
          (d.__srcCanvas.height = c),
          a.get_transparent()
            ? (d.__srcContext = d.__srcCanvas.getContext('2d'))
            : (a.get_transparent() ||
                d.__srcCanvas.setAttribute('moz-opaque', 'true'),
              (d.__srcContext = d.__srcCanvas.getContext('2d', {
                alpha: !1,
              }))));
      };
      Ka.createImageData = function (a) {
        a = a.buffer;
        if (null == a.__srcImageData) {
          null == a.data
            ? (a.__srcImageData = a.__srcContext.getImageData(
                0,
                0,
                a.width,
                a.height,
              ))
            : ((a.__srcImageData = a.__srcContext.createImageData(
                a.width,
                a.height,
              )),
              a.__srcImageData.data.set(a.data));
          var b = a.__srcImageData.data.buffer;
          b = null != b ? new Uint8Array(b) : null;
          a.data = b;
        }
      };
      Ka.fillRect = function (a, b, c, d) {
        Ka.convertToCanvas(a);
        if (1 == d) {
          d = (c >> 16) & 255;
          var f = (c >> 8) & 255;
          var h = c & 255;
          c = a.get_transparent() ? (c >> 24) & 255 : 255;
        } else
          ((d = (c >> 24) & 255),
            (f = (c >> 16) & 255),
            (h = (c >> 8) & 255),
            (c = a.get_transparent() ? c & 255 : 255));
        0 == b.x &&
        0 == b.y &&
        b.width == a.width &&
        b.height == a.height &&
        a.get_transparent() &&
        0 == c
          ? (a.buffer.__srcCanvas.width = a.buffer.width)
          : (255 > c &&
              a.buffer.__srcContext.clearRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              ),
            0 < c &&
              ((a.buffer.__srcContext.fillStyle =
                'rgba(' + d + ', ' + f + ', ' + h + ', ' + c / 255 + ')'),
              a.buffer.__srcContext.fillRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              )),
            (a.dirty = !0),
            a.version++);
      };
      Ka.getPixel = function (a, b, c, d) {
        Ka.convertToData(a);
        return bc.getPixel(a, b, c, d);
      };
      Ka.getPixels = function (a, b, c) {
        Ka.convertToData(a);
        return bc.getPixels(a, b, c);
      };
      Ka.setPixel = function (a, b, c, d, f) {
        Ka.convertToData(a);
        bc.setPixel(a, b, c, d, f);
      };
      Ka.sync = function (a, b) {
        null != a &&
          (a.type != Zc.CANVAS ||
          (null == a.buffer.__srcCanvas && null == a.buffer.data)
            ? a.type == Zc.DATA && Ka.convertToData(a, b)
            : Ka.convertToCanvas(a, b));
      };
      var Ld = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      g['lime.math.Rectangle'] = Ld;
      Ld.__name__ = 'lime.math.Rectangle';
      Ld.prototype = {
        intersection: function (a, b) {
          null == b && (b = new Ld());
          var c = this.x < a.x ? a.x : this.x,
            d =
              this.get_right() > a.get_right()
                ? a.get_right()
                : this.get_right();
          if (d <= c) return (b.setEmpty(), b);
          var f = this.y < a.y ? a.y : this.y;
          a =
            this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          if (a <= f) return (b.setEmpty(), b);
          b.x = c;
          b.y = f;
          b.width = d - c;
          b.height = a - f;
          return b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setEmpty: function () {
          this.x = this.y = this.width = this.height = 0;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        __toFlashRectangle: function () {
          return null;
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_right: function () {
          return this.x + this.width;
        },
        __class__: Ld,
        __properties__: { get_right: 'get_right', get_bottom: 'get_bottom' },
      };
      var ua = function (a, b, c, d, f, h) {
        null == h && (h = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = f;
        this.ty = h;
      };
      g['openfl.geom.Matrix'] = ua;
      ua.__name__ = 'openfl.geom.Matrix';
      ua.prototype = {
        clone: function () {
          return new ua(this.a, this.b, this.c, this.d, this.tx, this.ty);
        },
        concat: function (a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty * a.d + a.ty;
          this.tx = b;
        },
        copyFrom: function (a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty;
        },
        equals: function (a) {
          return null != a &&
            this.tx == a.tx &&
            this.ty == a.ty &&
            this.a == a.a &&
            this.b == a.b &&
            this.c == a.c
            ? this.d == a.d
            : !1;
        },
        identity: function () {
          this.a = 1;
          this.c = this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0;
        },
        invert: function () {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a)
            ((this.a = this.b = this.c = this.d = 0),
              (this.tx = -this.tx),
              (this.ty = -this.ty));
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a;
          }
          return this;
        },
        scale: function (a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b;
        },
        setTo: function (a, b, c, d, f, h) {
          this.a = a;
          this.b = b;
          this.c = c;
          this.d = d;
          this.tx = f;
          this.ty = h;
        },
        transformPoint: function (a) {
          return new I(
            a.x * this.a + a.y * this.c + this.tx,
            a.x * this.b + a.y * this.d + this.ty,
          );
        },
        translate: function (a, b) {
          this.tx += a;
          this.ty += b;
        },
        __class__: ua,
      };
      var Tb = function (a, b, c, d, f, h, k, n) {
        null == n && (n = 0);
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.redMultiplier = a;
        this.greenMultiplier = b;
        this.blueMultiplier = c;
        this.alphaMultiplier = d;
        this.redOffset = f;
        this.greenOffset = h;
        this.blueOffset = k;
        this.alphaOffset = n;
      };
      g['openfl.geom.ColorTransform'] = Tb;
      Tb.__name__ = 'openfl.geom.ColorTransform';
      Tb.prototype = {
        __clone: function () {
          return new Tb(
            this.redMultiplier,
            this.greenMultiplier,
            this.blueMultiplier,
            this.alphaMultiplier,
            this.redOffset,
            this.greenOffset,
            this.blueOffset,
            this.alphaOffset,
          );
        },
        __copyFrom: function (a) {
          this.redMultiplier = a.redMultiplier;
          this.greenMultiplier = a.greenMultiplier;
          this.blueMultiplier = a.blueMultiplier;
          this.alphaMultiplier = a.alphaMultiplier;
          this.redOffset = a.redOffset;
          this.greenOffset = a.greenOffset;
          this.blueOffset = a.blueOffset;
          this.alphaOffset = a.alphaOffset;
        },
        __combine: function (a) {
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *= a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier;
          this.redOffset += a.redOffset;
          this.greenOffset += a.greenOffset;
          this.blueOffset += a.blueOffset;
          this.alphaOffset += a.alphaOffset;
        },
        __identity: function () {
          this.alphaMultiplier =
            this.blueMultiplier =
            this.greenMultiplier =
            this.redMultiplier =
              1;
          this.alphaOffset =
            this.blueOffset =
            this.greenOffset =
            this.redOffset =
              0;
        },
        __invert: function () {
          this.redMultiplier =
            0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
          this.greenMultiplier =
            0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
          this.blueMultiplier =
            0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
          this.alphaMultiplier =
            0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
          this.redOffset = -this.redOffset;
          this.greenOffset = -this.greenOffset;
          this.blueOffset = -this.blueOffset;
          this.alphaOffset = -this.alphaOffset;
        },
        __equals: function (a, b) {
          return null == a ||
            this.redMultiplier != a.redMultiplier ||
            this.greenMultiplier != a.greenMultiplier ||
            this.blueMultiplier != a.blueMultiplier ||
            (!b && this.alphaMultiplier != a.alphaMultiplier) ||
            this.redOffset != a.redOffset ||
            this.greenOffset != a.greenOffset ||
            this.blueOffset != a.blueOffset
            ? !1
            : this.alphaOffset == a.alphaOffset;
        },
        __isDefault: function (a) {
          return a
            ? 1 == this.redMultiplier &&
              1 == this.greenMultiplier &&
              1 == this.blueMultiplier &&
              0 == this.redOffset &&
              0 == this.greenOffset &&
              0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1
            : 1 == this.redMultiplier &&
                1 == this.greenMultiplier &&
                1 == this.blueMultiplier &&
                1 == this.alphaMultiplier &&
                0 == this.redOffset &&
                0 == this.greenOffset &&
                0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1;
        },
        __setArrays: function (a, b) {
          a[0] = this.redMultiplier;
          a[1] = this.greenMultiplier;
          a[2] = this.blueMultiplier;
          a[3] = this.alphaMultiplier;
          b[0] = this.redOffset;
          b[1] = this.greenOffset;
          b[2] = this.blueOffset;
          b[3] = this.alphaOffset;
        },
        get_color: function () {
          return (
            ((this.redOffset | 0) << 16) |
            ((this.greenOffset | 0) << 8) |
            this.blueOffset |
            0
          );
        },
        set_color: function (a) {
          this.redOffset = (a >> 16) & 255;
          this.greenOffset = (a >> 8) & 255;
          this.blueOffset = a & 255;
          this.blueMultiplier = this.greenMultiplier = this.redMultiplier = 0;
          return this.get_color();
        },
        __toLimeColorMatrix: function () {
          null == Tb.__limeColorMatrix &&
            (Tb.__limeColorMatrix = new Float32Array(20));
          Tb.__limeColorMatrix[0] = this.redMultiplier;
          Tb.__limeColorMatrix[4] = this.redOffset / 255;
          Tb.__limeColorMatrix[6] = this.greenMultiplier;
          Tb.__limeColorMatrix[9] = this.greenOffset / 255;
          Tb.__limeColorMatrix[12] = this.blueMultiplier;
          Tb.__limeColorMatrix[14] = this.blueOffset / 255;
          Tb.__limeColorMatrix[18] = this.alphaMultiplier;
          Tb.__limeColorMatrix[19] = this.alphaOffset / 255;
          return Tb.__limeColorMatrix;
        },
        __class__: Tb,
        __properties__: { set_color: 'set_color', get_color: 'get_color' },
      };
      var jd = function () {
        this.keyMap = new mc();
        ia.call(this);
        this.brush = new md();
        this.brush.set_cacheAsBitmap(!0);
        this.addChild(this.brush);
        this.btnMenu = new ib('Menu');
        this.btnMenu.click.add(l(this, this.onMenu));
        this.addChild(this.btnMenu);
        this.nodePatches = new pa();
        this.prevState = new pa();
        for (var a = 0, b = this.model.cells; a < b.length; ) {
          var c = b[a];
          ++a;
          for (var d = 0, f = c.shape; d < f.length; ) {
            var h = f[d];
            ++d;
            if (null == this.nodePatches.h.__keys__[h.__id__]) {
              this.nodePatches.set(h, [c]);
              var k = this.prevState,
                n = h.clone();
              k.set(h, n);
            } else this.nodePatches.h[h.__id__].push(c);
          }
        }
        k = this.keyMap;
        h = new Jf(this);
        k.h[68] = h;
        k = this.keyMap;
        h = new ti(this);
        k.h[82] = h;
        k = this.keyMap;
        h = new Kf(this);
        k.h[76] = h;
        k = this.keyMap;
        h = new Lf(this);
        k.h[88] = h;
        k = this.keyMap;
        h = new me(this);
        k.h[66] = h;
        k = this.keyMap;
        h = new ui(this);
        k.h[80] = h;
        k = this.keyMap;
        h = new vi(this);
        k.h[77] = h;
        k = this.keyMap;
        h = new wi(this);
        k.h[69] = h;
        if (null == jd.lastTool) this.switchTool(this.keyMap.h[68]);
        else
          for (a = this.keyMap.iterator(); a.hasNext(); )
            if (((b = a.next()), va.getClass(b) == va.getClass(jd.lastTool))) {
              this.switchTool(b);
              break;
            }
        this.mesh = new ka();
      };
      g['com.watabou.mfcg.scenes.WarpScene'] = jd;
      jd.__name__ = 'com.watabou.mfcg.scenes.WarpScene';
      jd.__super__ = ia;
      jd.prototype = v(ia.prototype, {
        onEsc: function () {
          this.onDiscard();
        },
        onKeyEvent: function (a, b) {
          if (!b || !this.tool.onKey(a))
            if (13 == a) {
              if (b) this.onSave();
            } else
              b && this.keyMap.h.hasOwnProperty(a)
                ? this.switchTool(this.keyMap.h[a])
                : ia.prototype.onKeyEvent.call(this, a, b);
        },
        switchTool: function (a) {
          jd.lastTool = this.tool = a;
          var b = ia.map;
          null != b &&
            (a.activate(),
            a.onMove(b.get_mouseX(), b.get_mouseY()),
            q.show(a.getName()));
        },
        layout: function () {
          ia.prototype.layout.call(this);
          this.brush.set_x(this.get_mouseX());
          this.brush.set_y(this.get_mouseY());
          this.tool.activate();
          this.btnMenu.set_x(this.rWidth - this.btnMenu.get_width() - 2);
          this.btnMenu.set_y(2);
        },
        recreateMap: function () {
          ia.prototype.recreateMap.call(this);
          ia.map.addChild(this.mesh);
          ia.map.mouseChildren = !1;
        },
        createOverlays: function () {
          ia.prototype.createOverlays.call(this);
          for (var a = 0, b = this.overlays; a < b.length; ) {
            var c = b[a];
            ++a;
            c.mouseEnabled = !1;
            c.mouseChildren = !1;
          }
        },
        activate: function () {
          ia.prototype.activate.call(this);
          for (var a = [], b = 0, c = Ec.tools; b < c.length; ) {
            var d = c[b];
            ++b;
            d = u.findWidnow(d);
            null != d && a.push(d.content);
          }
          b = a;
          u.wipe();
          for (a = 0; a < b.length; ) ((c = b[a]), ++a, c.forceDisplay());
          this.stage.addEventListener('mouseWheel', l(this, this.onMouseWheel));
          this.stage.addEventListener('mouseDown', l(this, this.onMouseDown));
          this.stage.addEventListener('mouseUp', l(this, this.onMouseUp));
          this.stage.addEventListener('mouseMove', l(this, this.onMouseMove));
          this.brush.set_x(this.get_mouseX());
          this.brush.set_y(this.get_mouseY());
          q.show(this.tool.getName());
        },
        deactivate: function () {
          this.stage.removeEventListener(
            'mouseWheel',
            l(this, this.onMouseWheel),
          );
          this.stage.removeEventListener(
            'mouseDown',
            l(this, this.onMouseDown),
          );
          this.stage.removeEventListener('mouseUp', l(this, this.onMouseUp));
          this.stage.removeEventListener(
            'mouseMove',
            l(this, this.onMouseMove),
          );
          ia.prototype.deactivate.call(this);
        },
        updateBrush: function (a, b) {
          null == b && (b = 0.5);
          this.brush.get_graphics().clear();
          0 < a &&
            (this.brush.get_graphics().lineStyle(1, 52224),
            this.brush.get_graphics().drawCircle(0, 0, a * ia.map.get_scaleX()),
            this.brush.get_graphics().lineStyle(2, 52224),
            this.brush
              .get_graphics()
              .drawCircle(0, 0, a * ia.map.get_scaleX() * b));
        },
        onMouseWheel: function (a) {
          this.tool.onWheel(ia.map.get_mouseX(), ia.map.get_mouseY(), a.delta);
        },
        onMouseMove: function (a) {
          this.brush.set_x(this.get_mouseX());
          this.brush.set_y(this.get_mouseY());
          a = ia.map.get_mouseX();
          var b = ia.map.get_mouseY();
          if (this.down) this.tool.onDrag(a, b);
          else this.tool.onMove(a, b);
        },
        onMouseDown: function (a) {
          this.down = !0;
          this.tool.onPress(ia.map.get_mouseX(), ia.map.get_mouseY());
        },
        onMouseUp: function (a) {
          this.tool.onRelease();
          this.down = !1;
        },
        onMenu: function () {
          this.onContext(ia.getMenu());
          this.showMenu(this.btnMenu);
        },
        onContext: function (a) {
          for (var b = this, c = this.keyMap.iterator(); c.hasNext(); ) {
            var d = [c.next()];
            a.addItem(
              d[0].getName(),
              (function (a) {
                return function () {
                  b.switchTool(a[0]);
                };
              })(d),
              d[0] == this.tool,
            );
          }
          a.addSeparator();
          a.addItem('Apply', l(this, this.onSave));
          a.addItem('Discard', l(this, this.onDiscard));
        },
        submit: function (a, b) {
          this.model.updateGeometry(a);
          b && (this.model.ocean = null);
          this.drawMap();
          this.layoutLabels();
          this.model.updateLandmarks();
          this.markers.setSize(this.rWidth, this.rHeight);
        },
        clearMesh: function () {
          for (var a = 0, b = this.mesh.get_numChildren(); a < b; ) {
            var c = a++;
            jd.cache.push(this.mesh.getChildAt(c));
          }
          this.mesh.removeChildren();
        },
        drawEdge: function (a, b, c) {
          var d = 0 < jd.cache.length ? jd.cache.pop() : new Nd(jd.pixel);
          d.set_x(a.x);
          d.set_y(a.y);
          d.set_rotation((Math.atan2(b.y - a.y, b.x - a.x) / Math.PI) * 180);
          d.set_scaleX(I.distance(a, b));
          0.5 <= c
            ? (d.set_scaleY(c * K.lineInvScale), d.set_alpha(1))
            : (d.set_scaleY(0.5 * K.lineInvScale), d.set_alpha(c / 0.5));
          this.mesh.addChild(d);
        },
        drawNode: function (a, b) {
          b *= K.lineInvScale;
          var c = 0 < jd.cache.length ? jd.cache.pop() : new Nd(jd.pixel);
          c.set_alpha(1);
          c.set_rotation(0);
          c.set_scaleX(c.set_scaleY(2 * b));
          c.set_x(a.x - b);
          c.set_y(a.y - b);
          this.mesh.addChild(c);
        },
        onSave: function () {
          this.model.updateDimensions();
          Va.switchScene(Ec);
        },
        onDiscard: function () {
          for (var a = this.prevState.keys(); a.hasNext(); ) {
            var b = a.next(),
              c = this.prevState.h[b.__id__];
            b.setTo(c.x, c.y);
          }
          this.model.updateGeometry(this.model.cells);
          this.model.ocean = null;
          Va.switchScene(Ec);
        },
        __class__: jd,
      });
      var tb = function (a) {
        ka.call(this);
        0 == tb.convexity && this.reroll();
        this.radius = a;
        this.update();
        this.label = new ka();
        this.addChild(this.label);
        a = vb.getFormat(
          'font_element',
          vb.fontElement,
          K.colorDark,
          1.2857142857142858,
        );
        this.tf = vb.get('N', a);
        this.tf.mouseEnabled = !1;
        this.label.addChild(this.tf);
        this.addEventListener('click', l(this, this.reset));
        this.addEventListener('mouseWheel', l(this, this.rotate));
      };
      g['com.watabou.mfcg.scenes.overlays.Compass'] = tb;
      tb.__name__ = 'com.watabou.mfcg.scenes.overlays.Compass';
      tb.__super__ = ka;
      tb.prototype = v(ka.prototype, {
        reroll: function () {
          tb.convexity =
            0.1 +
            0.2 * ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647);
          var a = 0.9;
          null == a && (a = 0.5);
          tb.secondary =
            (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a
              ? tb.convexity +
                (1 - tb.convexity) *
                  (0.1 +
                    0.9 *
                      ((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647))
              : 0;
          a = 0.8;
          null == a && (a = 0.5);
          (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a
            ? ((tb.mainRing =
                tb.convexity +
                (1 - tb.convexity) *
                  (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
              (tb.auxRing =
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647))
            : (tb.mainRing = tb.auxRing = 0);
          a = Math.pow(1 - tb.convexity, 2);
          null == a && (a = 0.5);
          (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a
            ? ((tb.north =
                1.3 +
                0.6 *
                  (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
              (a = 0.7),
              null == a && (a = 0.5),
              (tb.south =
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a
                  ? 1 +
                    (tb.north - 1) *
                      (((C.seed = (48271 * C.seed) % 2147483647 | 0) /
                        2147483647 +
                        (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647 +
                        (C.seed = (48271 * C.seed) % 2147483647 | 0) /
                          2147483647) /
                        3)
                  : 1))
            : (tb.north = tb.south = 1);
        },
        update: function () {
          var a = this.get_graphics();
          a.clear();
          a.beginFill(16711680, 0);
          a.drawCircle(0, 0, this.radius);
          a.endFill();
          if (0 < tb.mainRing) {
            var b = !1;
            null == b && (b = !0);
            a.lineStyle(K.getStrokeWidth(K.strokeThick, b), K.colorDark);
            a.drawCircle(0, 0, this.radius * tb.mainRing);
            b = !1;
            null == b && (b = !0);
            a.lineStyle(K.getStrokeWidth(K.strokeNormal, b), K.colorDark);
            a.drawCircle(0, 0, this.radius * tb.auxRing);
            a.endFill();
          }
          this.drawStar(tb.secondary, tb.convexity * tb.secondary, 0.5);
          this.drawStar(1, tb.convexity, 0);
        },
        drawStar: function (a, b, c) {
          var d = this.get_graphics(),
            f = [];
          f.push(I.polar(this.radius * a, (Math.PI / 2) * c));
          f.push(I.polar(this.radius * b, (Math.PI / 2) * (c + 0.5)));
          f.push(I.polar(this.radius * a, (Math.PI / 2) * (1 + c)));
          f.push(I.polar(this.radius * b, (Math.PI / 2) * (1 + c + 0.5)));
          f.push(I.polar(this.radius * a, (Math.PI / 2) * (2 + c)));
          f.push(I.polar(this.radius * b, (Math.PI / 2) * (2 + c + 0.5)));
          f.push(I.polar(this.radius * a, (Math.PI / 2) * (3 + c)));
          f.push(I.polar(this.radius * b, (Math.PI / 2) * (3 + c + 0.5)));
          d.beginFill(K.colorDark);
          Kb.drawPolygon(d, [f[0], f[1], tb.o]);
          Kb.drawPolygon(d, [f[2], f[3], tb.o]);
          Kb.drawPolygon(d, [f[4], f[5], tb.o]);
          Kb.drawPolygon(d, [f[6], f[7], tb.o]);
          d.beginFill(K.colorLight);
          Kb.drawPolygon(d, [f[1], f[2], tb.o]);
          Kb.drawPolygon(d, [f[3], f[4], tb.o]);
          Kb.drawPolygon(d, [f[5], f[6], tb.o]);
          Kb.drawPolygon(d, [f[7], f[0], tb.o]);
          d.endFill();
          a = !1;
          null == a && (a = !0);
          d.lineStyle(K.getStrokeWidth(K.strokeNormal, a), K.colorDark);
          Kb.drawPolygon(d, f);
          d.endFill();
        },
        updateLabel: function (a) {
          this.tf.set_text(['N', 'W', 'S', 'E'][a]);
          this.tf.set_x(-this.tf.get_width() / 2);
          this.tf.set_y(-this.tf.get_height() + 2);
          this.label.set_rotation(-90 * a);
          a = I.polar(this.radius, (-(a + 1) * Math.PI) / 2);
          this.label.set_x(a.x);
          this.label.set_y(a.y);
        },
        reset: function (a) {
          a.ctrlKey || a.commandKey
            ? this.updateNorth((Ub.instance.north = 0))
            : a.shiftKey && (this.reroll(), this.update());
        },
        rotate: function (a) {
          var b = this.get_rotation();
          a = a.delta;
          this.set_rotation(b + 10 * (0 == a ? 0 : 0 > a ? -1 : 1));
          this.updateLabel((((this.get_rotation() + 405) % 360) / 90) | 0);
          Ub.instance.north = this.get_rotation();
        },
        updateNorth: function (a) {
          this.set_rotation(a);
          this.updateLabel((((this.get_rotation() + 405) % 360) / 90) | 0);
        },
        __class__: tb,
      });
      var Ca = function (a) {
        var b = this;
        U.call(this);
        this.scene = a;
        this.addEventListener('removedFromStage', function (a) {
          b.onDestroy();
        });
        this.addEventListener('rightClick', function (a) {
          b.onContext(ia.getMenu());
        });
        Bb.newModel.add(l(this, this.onNewModel));
      };
      g['com.watabou.mfcg.scenes.overlays.Overlay'] = Ca;
      Ca.__name__ = 'com.watabou.mfcg.scenes.overlays.Overlay';
      Ca.__super__ = U;
      Ca.prototype = v(U.prototype, {
        map2layer: function (a, b) {
          return this.globalToLocal(a.localToGlobal(b));
        },
        layer2map: function (a, b) {
          return a.globalToLocal(this.localToGlobal(b));
        },
        update: function (a) {
          this.model = a;
        },
        exportPNG: function (a) {},
        onContext: function (a) {},
        onNewModel: function (a) {
          this.model = a;
        },
        onDestroy: function () {
          Bb.newModel.remove(l(this, this.onNewModel));
        },
        __class__: Ca,
      });
      var pg = function (a) {
        this.pos = yc.BOTTOM_LEFT;
        this.compass = new tb(pg.RADIUS);
        Ca.call(this, a);
        this.addChild(this.compass);
      };
      g['com.watabou.mfcg.scenes.overlays.CompassOverlay'] = pg;
      pg.__name__ = 'com.watabou.mfcg.scenes.overlays.CompassOverlay';
      pg.__super__ = Ca;
      pg.prototype = v(Ca.prototype, {
        update: function (a) {
          Ca.prototype.update.call(this, a);
          this.compass.updateNorth(a.north);
        },
        layout: function () {
          switch (this.pos._hx_index) {
            case 1:
              this.compass.set_x(this.compass.radius + Ca.MARGIN);
              this.compass.set_y(this.compass.radius + Ca.MARGIN);
              break;
            case 2:
              this.compass.set_x(this.rWidth - this.compass.radius - Ca.MARGIN);
              this.compass.set_y(this.compass.radius + Ca.MARGIN);
              break;
            case 3:
              this.compass.set_x(this.compass.radius + Ca.MARGIN);
              this.compass.set_y(
                this.rHeight - this.compass.radius - Ca.MARGIN,
              );
              break;
            case 4:
              (this.compass.set_x(
                this.rWidth - this.compass.radius - Ca.MARGIN,
              ),
                this.compass.set_y(
                  this.rHeight - this.compass.radius - Ca.MARGIN,
                ));
          }
        },
        set_position: function (a) {
          this.pos != a && ((this.pos = a), this.layout());
          return a;
        },
        onContext: function (a) {
          var b = this;
          a.addItem('Reroll', function () {
            b.compass.reroll();
            b.compass.update();
          });
          a.addItem('Reset', function () {
            b.compass.updateNorth((b.model.north = 0));
          });
          a.addItem('Hide', function () {
            ba.set('compass', b.set_visible(!1));
          });
        },
        __class__: pg,
      });
      var sg = function () {
        ka.call(this);
        this.mouseEnabled = !0;
        this.mouseChildren = !1;
      };
      g['com.watabou.mfcg.scenes.overlays.CurvedLabel'] = sg;
      sg.__name__ = 'com.watabou.mfcg.scenes.overlays.CurvedLabel';
      sg.getRidgeSegment = function (a, b) {
        var c = new xi(Hf.render(a, !1, 0)),
          d = c.length(),
          f = 0.8 * d;
        b = (d - (f > b ? 0.5 * (f + b) : f)) / 2;
        c = c.getSegment(b, d - b);
        uc.visvalingam(c, 3, 1.2);
        c.unshift(a[0]);
        c.push(a[a.length - 1]);
        a = Me.smoothOpen(c, 4);
        a = a.slice(4, -4);
        a[0].x > a[a.length - 1].x && a.reverse();
        return a;
      };
      sg.__super__ = ka;
      sg.prototype = v(ka.prototype, {
        setText: function (a) {
          this.removeChildren();
          var b = vb.getFormat('font_label', vb.fontLabel, K.colorLabel),
            c = vb.get(a, b);
          this.length = c.get_textWidth();
          this.len = a.length;
          this.pos = [];
          this.letters = [];
          for (var d = 0, f = this.len; d < f; ) {
            var h = d++,
              k = c.getCharBoundaries(h);
            this.pos.push(k.get_left() + k.width / 2);
            h = new yi(a.charAt(h), b);
            this.letters.push(h);
            this.addChild(h);
          }
        },
        arrange: function (a) {
          a = sg.getRidgeSegment(a, this.length);
          var b = new xi(a),
            c = b.length(),
            d = c / this.length,
            f = 0;
          1 < d &&
            ((d = Math.min(Math.sqrt(d), 1.5)),
            1 < this.len && (f = (c - this.length * d) / (this.len - 1)));
          c = (c - (this.length * d + f * (this.len - 1))) / 2;
          for (var h = 0, k = this.len; h < k; ) {
            var n = h++,
              p = b.getPos(c + this.pos[n] * d + n * f);
            p = null != p ? p : a[a.length - 1];
            n = this.letters[n];
            var g = b.get_tangent();
            n.set_rotation((Math.atan2(g.y, g.x) / Math.PI) * 180);
            n.set_scaleX(n.set_scaleY(d));
            n.set_x(p.x);
            n.set_y(p.y);
          }
        },
        center: function () {
          var a = this.getBounds(this.parent);
          return new I(a.get_left() + a.width / 2, a.get_top() + a.height / 2);
        },
        addOutline: function () {
          this.removeOutline();
          var a = !1;
          null == a && (a = !0);
          a = K.getStrokeWidth(K.strokeThick, a);
          this.outline = new ih(this, K.colorPaper, a, 8);
          this.addChildAt(this.outline, 0);
        },
        removeOutline: function () {
          null != this.outline &&
            (this.removeChild(this.outline), (this.outline = null));
        },
        __class__: sg,
      });
      var yi = function (a, b) {
        ka.call(this);
        a = vb.get(a, b);
        a.set_x(-a.get_width() / 2);
        a.set_y(-a.get_height() / 2);
        this.addChild(a);
      };
      g['com.watabou.mfcg.scenes.overlays._CurvedLabel.Letter'] = yi;
      yi.__name__ = 'com.watabou.mfcg.scenes.overlays._CurvedLabel.Letter';
      yi.__super__ = ka;
      yi.prototype = v(ka.prototype, { __class__: yi });
      var ra = function () {
        this.ready = new Nc();
        var a = this;
        U.call(this);
        this.bmp = new Nd(null, null, !0);
        this.addChild(this.bmp);
        ra.seed = ba.get('emblem_seed', 1);
        ra.coa = ba.get('emblem_coa');
        ra.updated.add(l(this, this.onUpdated));
        ra.setHiRes.add(l(this, this.onResolution));
        this.addEventListener('removed', function (b) {
          ra.updated.remove(l(a, a.onUpdated));
          ra.setHiRes.remove(l(a, a.onResolution));
        });
        if (!ra.loading)
          if (null == ra.loRes) ra.loadLo();
          else this.onUpdated();
      };
      g['com.watabou.mfcg.scenes.overlays.Emblem'] = ra;
      ra.__name__ = 'com.watabou.mfcg.scenes.overlays.Emblem';
      ra.loadLo = function () {
        ra.loading = !0;
        Fb.loadFromFile(
          null == ra.coa
            ? '' + ra.ARMORIA + '/png/' + ra.LO_RES + '/' + ra.seed
            : '' +
                ra.ARMORIA +
                '/?format=png&size=' +
                ra.LO_RES +
                '&coa=' +
                ra.coa,
        )
          .onComplete(ra.onLoadLo)
          .onError(ra.onError);
      };
      ra.onError = function (a) {
        ra.loading = !1;
        ra.setCOA(null);
      };
      ra.onLoadLo = function (a) {
        ra.loading = !1;
        null != ra.loRes && ra.loRes.dispose();
        ra.loRes = a;
        null == ra.hiRes && ra.loadHi();
        null == ra.svg && ra.loadSvg();
        ra.updated.dispatch();
      };
      ra.loadHi = function () {
        Fb.loadFromFile(
          null == ra.coa
            ? '' + ra.ARMORIA + '/png/' + ra.HI_RES + '/' + ra.seed
            : '' +
                ra.ARMORIA +
                '/?format=png&size=' +
                ra.HI_RES +
                '&coa=' +
                ra.coa,
        ).onComplete(ra.onLoadHi);
      };
      ra.onLoadHi = function (a) {
        null != ra.hiRes && ra.hiRes.dispose();
        ra.hiRes = a;
      };
      ra.loadSvg = function () {
        var a =
            null == ra.coa
              ? '' + ra.ARMORIA + '/svg/' + ra.LO_RES + '/' + ra.seed
              : '' +
                ra.ARMORIA +
                '/?format=svg&size=' +
                ra.LO_RES +
                '&coa=' +
                ra.coa,
          b = new zi();
        b.addEventListener('complete', function (a) {
          ra.onLoadSvg(b.data);
        });
        b.addEventListener('ioError', ra.onIOError);
        b.load(new If(a));
      };
      ra.onLoadSvg = function (a) {
        ra.svg = W.parse(a).firstElement();
      };
      ra.onIOError = function (a) {
        if (0 == a.errorID) ra.onLoadSvg(a.text);
      };
      ra.setCOA = function (a) {
        ba.set('emblem_coa', (ra.coa = a));
        ra.loRes = ra.hiRes = null;
        ra.svg = null;
        ra.loadLo();
      };
      ra.setResoltion = function (a) {
        ra.setHiRes.dispatch(a);
      };
      ra.__super__ = U;
      ra.prototype = v(U.prototype, {
        customize: function () {
          null == u.findWidnow(Mf) && u.showDialog(new Mf(this));
        },
        onUpdated: function () {
          this.bmp.set_bitmapData(ra.loRes);
          this.rWidth = this.bmp.get_width();
          this.rHeight = this.bmp.get_height();
          this.ready.dispatch();
        },
        reroll: function () {
          ba.set(
            'emblem_seed',
            (ra.seed = new Date().getTime() % 2147483647 | 0),
          );
          ba.set('emblem_coa', (ra.coa = null));
          ra.loRes = ra.hiRes = null;
          ra.svg = null;
          ra.loadLo();
        },
        onResolution: function (a) {
          a && null != ra.hiRes
            ? (this.bmp.set_bitmapData(ra.hiRes),
              this.bmp.set_scaleX(this.bmp.set_scaleY(ra.LO_RES / ra.HI_RES)),
              (this.bmp.smoothing = !0))
            : (this.bmp.set_bitmapData(ra.loRes),
              this.bmp.set_scaleX(this.bmp.set_scaleY(1)),
              a && q.show('High resolution emblem is not loaded'));
        },
        __class__: ra,
      });
      var yc = (y['com.watabou.mfcg.scenes.overlays.Position'] = {
        __ename__: 'com.watabou.mfcg.scenes.overlays.Position',
        __constructs__: null,
        UNDEFINED: {
          _hx_name: 'UNDEFINED',
          _hx_index: 0,
          __enum__: 'com.watabou.mfcg.scenes.overlays.Position',
          toString: r,
        },
        TOP_LEFT: {
          _hx_name: 'TOP_LEFT',
          _hx_index: 1,
          __enum__: 'com.watabou.mfcg.scenes.overlays.Position',
          toString: r,
        },
        TOP_RIGHT: {
          _hx_name: 'TOP_RIGHT',
          _hx_index: 2,
          __enum__: 'com.watabou.mfcg.scenes.overlays.Position',
          toString: r,
        },
        BOTTOM_LEFT: {
          _hx_name: 'BOTTOM_LEFT',
          _hx_index: 3,
          __enum__: 'com.watabou.mfcg.scenes.overlays.Position',
          toString: r,
        },
        BOTTOM_RIGHT: {
          _hx_name: 'BOTTOM_RIGHT',
          _hx_index: 4,
          __enum__: 'com.watabou.mfcg.scenes.overlays.Position',
          toString: r,
        },
      });
      yc.__constructs__ = [
        yc.UNDEFINED,
        yc.TOP_LEFT,
        yc.TOP_RIGHT,
        yc.BOTTOM_LEFT,
        yc.BOTTOM_RIGHT,
      ];
      var nf = function (a) {
        this.emblem = new ra();
        this.emblem.ready.add(l(this, this.layout));
        Ca.call(this, a);
        this.addChild(this.emblem);
      };
      g['com.watabou.mfcg.scenes.overlays.EmblemOverlay'] = nf;
      nf.__name__ = 'com.watabou.mfcg.scenes.overlays.EmblemOverlay';
      nf.__super__ = Ca;
      nf.prototype = v(Ca.prototype, {
        layout: function () {
          switch (nf.pos._hx_index) {
            case 1:
              this.emblem.set_x(Ca.MARGIN);
              this.emblem.set_y(Ca.MARGIN);
              break;
            case 2:
              this.emblem.set_x(
                this.rWidth - this.emblem.get_width() - Ca.MARGIN,
              );
              this.emblem.set_y(Ca.MARGIN);
              break;
            case 3:
              this.emblem.set_x(Ca.MARGIN);
              this.emblem.set_y(
                this.rHeight - this.emblem.get_height() - Ca.MARGIN,
              );
              break;
            case 4:
              (this.emblem.set_x(
                this.rWidth - this.emblem.get_width() - Ca.MARGIN,
              ),
                this.emblem.set_y(
                  this.rHeight - this.emblem.get_height() - Ca.MARGIN,
                ));
          }
        },
        set_position: function (a) {
          nf.pos != a && ((nf.pos = a), this.layout());
          return a;
        },
        onContext: function (a) {
          a.addItem('Customize...', ((G = this.emblem), l(G, G.customize)));
          a.addItem('Reroll', ((G = this.emblem), l(G, G.reroll)));
          a.addItem('Hide', function () {
            ba.set('emblem', !1);
          });
        },
        exportPNG: function (a) {
          ra.setResoltion(a);
        },
        __class__: nf,
      });
      var Ai = function () {
        this.padding = 10;
        U.call(this);
      };
      g['com.watabou.mfcg.scenes.overlays.Frame'] = Ai;
      Ai.__name__ = 'com.watabou.mfcg.scenes.overlays.Frame';
      Ai.__super__ = U;
      Ai.prototype = v(U.prototype, {
        layout: function () {
          var a = K.colorDark,
            b = this.get_graphics();
          b.clear();
          var c = !1;
          null == c && (c = !0);
          var d = 2 * K.getStrokeWidth(K.strokeThick, c);
          c = !1;
          null == c && (c = !0);
          b.lineStyle(
            K.getStrokeWidth(K.strokeThick, c),
            a,
            null,
            null,
            null,
            null,
            1,
          );
          b.drawRect(0, 0, this.rWidth, this.rHeight);
          c = !1;
          null == c && (c = !0);
          b.lineStyle(
            K.getStrokeWidth(K.strokeNormal, c),
            a,
            null,
            null,
            null,
            null,
            1,
          );
          b.drawRect(d, d, this.rWidth - 2 * d, this.rHeight - 2 * d);
        },
        setInner: function (a, b) {
          this.setSize(
            Math.ceil(a + 2 * this.padding),
            Math.ceil(b + 2 * this.padding),
          );
        },
        outline: function (a) {
          this.setInner(a.get_width(), a.get_height());
          a.set_x(this.get_x() + this.padding);
          a.set_y(this.get_y() + this.padding);
        },
        __class__: Ai,
      });
      var ji = function (a) {
        Ca.call(this, a);
        Bb.unitsChanged.add(l(this, this.layout));
      };
      g['com.watabou.mfcg.scenes.overlays.GridOverlay'] = ji;
      ji.__name__ = 'com.watabou.mfcg.scenes.overlays.GridOverlay';
      ji.__super__ = Ca;
      ji.prototype = v(Ca.prototype, {
        onDestroy: function () {
          Ca.prototype.onDestroy.call(this);
          Bb.unitsChanged.remove(l(this, this.layout));
        },
        layout: function () {
          var a = this.get_graphics();
          a.clear();
          var b = !1;
          null == b && (b = !0);
          a.lineStyle(K.getStrokeWidth(K.strokeThin, b), K.colorDark);
          b = ia.map;
          for (
            var c = Db.get_current().getPlank(b, 100),
              d = this.layer2map(b, new I()),
              f = this.layer2map(b, new I(this.rWidth, this.rHeight)),
              h = new I(),
              k = Math.ceil(d.x / c),
              n = Math.ceil(f.x / c);
            k < n;

          ) {
            var p = k++;
            h.setTo(p * c, 0);
            h = this.map2layer(b, h);
            a.moveTo(h.x, 0);
            a.lineTo(h.x, this.rHeight);
          }
          k = Math.ceil(d.y / c);
          for (n = Math.ceil(f.y / c); k < n; )
            ((p = k++),
              h.setTo(0, p * c),
              (h = this.map2layer(b, h)),
              a.moveTo(0, h.y),
              a.lineTo(this.rWidth, h.y));
        },
        __class__: ji,
      });
      var ni = function (a) {
        Ca.call(this, a);
        Bb.districtsChanged.add(l(this, this.updateAll));
      };
      g['com.watabou.mfcg.scenes.overlays.LabelsOverlay'] = ni;
      ni.__name__ = 'com.watabou.mfcg.scenes.overlays.LabelsOverlay';
      ni.__super__ = Ca;
      ni.prototype = v(Ca.prototype, {
        onDestroy: function () {
          Ca.prototype.onDestroy.call(this);
          Bb.districtsChanged.remove(l(this, this.updateAll));
        },
        update: function (a) {
          Ca.prototype.update.call(this, a);
          this.recreateLabels();
        },
        layout: function () {
          for (var a = this.labels, b = a.keys(); b.hasNext(); ) {
            var c = b.next(),
              d = a.get(c);
            this.layoutDistrict(c, d);
          }
        },
        recreateLabels: function () {
          var a = this;
          this.removeChildren();
          for (
            var b = this.model.focus,
              c = new pa(),
              d = 0,
              f = this.model.districts;
            d < f.length;

          ) {
            var h = [f[d]];
            ++d;
            if (null == b || Z.intersects(h[0].faces, b.faces)) {
              var k = [new sg()];
              this.updateDistrict(h[0], k[0]);
              this.addChild(k[0]);
              k[0].addEventListener(
                'mouseDown',
                (function (b, c) {
                  return function (d) {
                    a.edit(c[0], b[0]);
                  };
                })(k, h),
              );
              k[0].addEventListener(
                'rightClick',
                (function (b, c) {
                  return function (d) {
                    a.context(c[0], b[0]);
                  };
                })(k, h),
              );
              c.set(h[0], k[0]);
            }
          }
          this.labels = c;
          this.exportPNG(!1);
        },
        updateDistrict: function (a, b) {
          b.setText(a.name.toUpperCase());
        },
        layoutDistrict: function (a, b) {
          a = a.getRidge();
          for (var c = [], d = 0; d < a.length; ) {
            var f = a[d];
            ++d;
            c.push(this.map2layer(ia.map, f));
          }
          b.arrange(c);
        },
        updateAll: function () {
          for (var a = this.labels, b = a.keys(); b.hasNext(); ) {
            var c = b.next(),
              d = a.get(c);
            this.updateDistrict(c, d);
          }
          this.layout();
        },
        edit: function (a, b) {
          var c = this;
          b.set_visible(!1);
          var d = vb.getFormat('font_label', vb.fontLabel, K.colorLabel),
            f = b.center();
          new We(
            a.name,
            d,
            f,
            this.stage,
            null,
            function (d) {
              a.name = '' != d ? d : '-';
              c.updateDistrict(a, b);
              c.layoutDistrict(a, b);
              b.set_visible(!0);
            },
            function () {
              b.set_visible(!0);
            },
          );
        },
        context: function (a, b) {
          var c = this,
            d = ia.getMenu();
          d.addItem('Edit name', function () {
            c.edit(a, b);
          });
          d.addItem('Reroll all', ((G = this.model), l(G, G.rerollDistricts)));
        },
        exportPNG: function (a) {
          if (a)
            for (a = this.labels.iterator(); a.hasNext(); ) {
              var b = a.next();
              b.set_filters([]);
              b.addOutline();
            }
          else {
            a = !1;
            null == a && (a = !0);
            a = 2 * K.getStrokeWidth(K.strokeThick, a);
            var c = new Sc(K.colorPaper, 1, a, a, 100);
            for (a = this.labels.iterator(); a.hasNext(); )
              ((b = a.next()), b.removeOutline(), b.set_filters([c]));
          }
        },
        __class__: ni,
      });
      var Bi = function () {
        this.resized = new Nc();
        U.call(this);
        this.frame = new Ai();
        this.add(this.frame);
        this.vbox = new fb();
        this.add(this.vbox);
        this.layout();
      };
      g['com.watabou.mfcg.scenes.overlays.Legend'] = Bi;
      Bi.__name__ = 'com.watabou.mfcg.scenes.overlays.Legend';
      Bi.__super__ = U;
      Bi.prototype = v(U.prototype, {
        layout: function () {
          this.frame.outline(this.vbox);
          this.rWidth = this.frame.get_width();
          this.rHeight = this.frame.get_height();
          var a = this.get_graphics();
          a.clear();
          a.beginFill(K.colorLight);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
        },
        relayout: function () {
          this.vbox.layout();
          this.layout();
          this.resized.dispatch();
        },
        addView: function (a) {
          this.vbox.add(a);
        },
        addItem: function (a, b) {
          a = new jh(this, a, b);
          this.addView(a);
          return a;
        },
        addTitle: function (a) {
          a = new kh(this, a);
          this.addView(a);
          return a;
        },
        addEmblem: function () {
          var a = new lh(this);
          this.addView(a);
          return a;
        },
        addSeparator: function () {
          this.addView(new mh());
        },
        addScale: function () {
          this.scale = new nh(this);
          this.scale.update();
          this.addView(this.scale);
        },
        wipe: function () {
          this.vbox.wipe();
          this.relayout();
        },
        __class__: Bi,
      });
      var tg = function () {};
      g['com.watabou.mfcg.scenes.overlays._Legend.Legendary'] = tg;
      tg.__name__ = 'com.watabou.mfcg.scenes.overlays._Legend.Legendary';
      tg.__isInterface__ = !0;
      var jh = function (a, b, c) {
        this.context = new Nc();
        this.click = new Nc();
        var d = this;
        U.call(this);
        this.legend = a;
        a = vb.getFormat('font_legend', vb.fontLegend, K.colorDark);
        var f = a.size,
          h = 0.5 * f;
        this.tfSymb = vb.get(b + '.', a);
        this.tfSymb.set_x(f - this.tfSymb.get_width());
        this.tfSymb.mouseEnabled = !1;
        this.addChild(this.tfSymb);
        this.tfDesc = vb.get(c, a);
        this.tfDesc.set_x(f + h);
        this.tfDesc.set_selectable(!1);
        this.addChild(this.tfDesc);
        this.rWidth = f + h + this.tfDesc.get_width();
        this.rHeight = this.tfDesc.get_height();
        this.tfDesc.addEventListener('mouseDown', function (a) {
          d.click.dispatch();
        });
        this.tfDesc.addEventListener('rightClick', function (a) {
          d.context.dispatch();
        });
      };
      g['com.watabou.mfcg.scenes.overlays._Legend.LegendItem'] = jh;
      jh.__name__ = 'com.watabou.mfcg.scenes.overlays._Legend.LegendItem';
      jh.__interfaces__ = [tg];
      jh.__super__ = U;
      jh.prototype = v(U.prototype, {
        edit: function (a) {
          var b = this;
          We.fromTextField(this.tfDesc, this, 1, function (c) {
            '' == c && (c = '-');
            b.tfDesc.set_text(c);
            var d = b.tfDesc.get_x(),
              f = b.tfDesc.get_width();
            b.rWidth = d + f;
            b.legend.relayout();
            a(c);
          });
        },
        __class__: jh,
      });
      var kh = function (a, b) {
        this.context = new Nc();
        this.click = new Nc();
        var c = this;
        U.call(this);
        this.legend = a;
        this.halign = 'center';
        a = vb.getFormat(
          'font_title',
          vb.fontTitle,
          K.colorDark,
          0.6666666666666666,
        );
        this.tf = vb.get(b, a);
        this.tf.set_selectable(!1);
        this.addChild(this.tf);
        this.rWidth = this.tf.get_width();
        this.rHeight = this.tf.get_height();
        this.tf.addEventListener('mouseDown', function (a) {
          c.click.dispatch();
        });
        this.tf.addEventListener('rightClick', function (a) {
          c.context.dispatch();
        });
      };
      g['com.watabou.mfcg.scenes.overlays._Legend.TitleView'] = kh;
      kh.__name__ = 'com.watabou.mfcg.scenes.overlays._Legend.TitleView';
      kh.__interfaces__ = [tg];
      kh.__super__ = U;
      kh.prototype = v(U.prototype, {
        edit: function (a) {
          var b = this;
          We.fromTextField(this.tf, this, 0, function (c) {
            '' == c && (c = '-');
            b.tf.set_text(c);
            b.rWidth = b.tf.get_width();
            b.legend.relayout();
            null != a && a(c);
          });
        },
        __class__: kh,
      });
      var mh = function () {
        U.call(this);
        this.halign = 'fill';
        var a = !1;
        null == a && (a = !0);
        this.set_height(K.getStrokeWidth(K.strokeNormal, a));
      };
      g['com.watabou.mfcg.scenes.overlays._Legend.SeparatorView'] = mh;
      mh.__name__ = 'com.watabou.mfcg.scenes.overlays._Legend.SeparatorView';
      mh.__interfaces__ = [tg];
      mh.__super__ = U;
      mh.prototype = v(U.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(K.colorDark);
          this.get_graphics().drawRect(0, 0, this.rWidth, this.rHeight);
        },
        __class__: mh,
      });
      var nh = function (a) {
        U.call(this);
        this.legend = a;
        this.halign = 'center';
        this.scalebar = Lb.create(!0);
        this.addChild(this.scalebar);
        this.addEventListener('click', l(this, this.onClick));
        this.addEventListener('rightClick', l(this, this.onContext));
      };
      g['com.watabou.mfcg.scenes.overlays._Legend.ScaleBarView'] = nh;
      nh.__name__ = 'com.watabou.mfcg.scenes.overlays._Legend.ScaleBarView';
      nh.__interfaces__ = [tg];
      nh.__super__ = U;
      nh.prototype = v(U.prototype, {
        update: function () {
          this.scalebar.update(ia.map);
          this.rWidth = this.scalebar.get_width();
          this.rHeight = this.scalebar.get_height() - 4;
          this.scalebar.set_y(this.rHeight);
        },
        onClick: function (a) {
          a.shiftKey
            ? (this.removeChild(this.scalebar),
              Lb.toggleView(),
              (this.scalebar = Lb.create(!0)),
              this.addChild(this.scalebar))
            : Db.toggle();
          this.update();
          this.legend.relayout();
        },
        onContext: function (a) {
          var b = this,
            c = ia.getMenu();
          a = function (a, f) {
            c.addItem(
              a,
              function () {
                Db.set_current(f);
                b.scalebar.update();
                b.update();
                b.legend.relayout();
              },
              Db.get_current() == f,
            );
          };
          a('Metric units', Db.metric);
          a('Imperial units', Db.imperial);
          a = function (a, f) {
            c.addItem(
              a,
              function () {
                Lb.sbClass = f;
                b.removeChild(b.scalebar);
                b.scalebar = Lb.create(!0);
                b.addChild(b.scalebar);
                b.update();
                b.legend.relayout();
              },
              Lb.sbClass == f,
            );
          };
          a('Default style', of);
          a('Alternative style', ug);
          c.addItem('Hide', function () {
            ba.set('scale_bar', !1);
          });
        },
        __class__: nh,
      });
      var lh = function (a) {
        U.call(this);
        this.legend = a;
        this.halign = 'center';
        this.emblem = new ra();
        this.emblem.ready.add(l(this, this.layout));
        this.rWidth = this.emblem.get_width();
        this.rHeight = this.emblem.get_height();
        this.addChild(this.emblem);
        this.addEventListener('rightClick', l(this, this.onContext));
      };
      g['com.watabou.mfcg.scenes.overlays._Legend.EmblemView'] = lh;
      lh.__name__ = 'com.watabou.mfcg.scenes.overlays._Legend.EmblemView';
      lh.__interfaces__ = [tg];
      lh.__super__ = U;
      lh.prototype = v(U.prototype, {
        layout: function () {
          this.rWidth = this.emblem.get_width();
          this.rHeight = this.emblem.get_height();
          this.legend.relayout();
        },
        onContext: function (a) {
          a = ia.getMenu();
          a.addItem('Customize...', ((G = this.emblem), l(G, G.customize)));
          a.addItem('Reroll', ((G = this.emblem), l(G, G.reroll)));
          a.addItem('Hide', function () {
            ba.set('emblem', !1);
          });
        },
        __class__: lh,
      });
      var Uc = function (a) {
        this.legend = new Bi();
        this.legend.resized.add(l(this, this.layout));
        Ca.call(this, a);
        this.addChild(this.legend);
        Bb.titleChanged.add(l(this, this.onChangedStr));
        Bb.districtsChanged.add(l(this, this.onChangedVoid));
        Bb.landmarksChanged.add(l(this, this.onChangedVoid));
      };
      g['com.watabou.mfcg.scenes.overlays.LegendOverlay'] = Uc;
      Uc.__name__ = 'com.watabou.mfcg.scenes.overlays.LegendOverlay';
      Uc.__super__ = Ca;
      Uc.prototype = v(Ca.prototype, {
        layout: function () {
          Uc.auto && (Uc.pos = this.getAutoPos());
          var a = this.pos2point(Uc.pos);
          this.legend.set_x(a.x);
          this.legend.set_y(a.y);
          this.scene.arrangeOverlays();
        },
        get_position: function () {
          return Uc.pos;
        },
        set_position: function (a) {
          Uc.auto = !1;
          Uc.pos != a && ((Uc.pos = a), this.layout());
          return a;
        },
        getAutoPos: function () {
          var a = this,
            b = ia.map;
          return null == b
            ? yc.TOP_LEFT
            : Z.min(
                [yc.TOP_LEFT, yc.BOTTOM_LEFT, yc.BOTTOM_RIGHT, yc.TOP_RIGHT],
                function (c) {
                  var d = a.pos2point(c);
                  c = new I(
                    d.x + a.legend.get_width(),
                    d.y + a.legend.get_height(),
                  );
                  d = a.layer2map(b, d);
                  c = a.layer2map(b, c);
                  c = new na(d.x, d.y, c.x - d.x, c.y - d.y);
                  return a.model.getDetails(c);
                },
              );
        },
        pos2point: function (a) {
          switch (a._hx_index) {
            case 1:
              return new I(Ca.MARGIN, Ca.MARGIN);
            case 2:
              return new I(
                this.rWidth - this.legend.get_width() - Ca.MARGIN,
                Ca.MARGIN,
              );
            case 3:
              return new I(
                Ca.MARGIN,
                this.rHeight - this.legend.get_height() - Ca.MARGIN,
              );
            case 4:
              return new I(
                this.rWidth - this.legend.get_width() - Ca.MARGIN,
                this.rHeight - this.legend.get_height() - Ca.MARGIN,
              );
            default:
              return null;
          }
        },
        update: function (a) {
          Ca.prototype.update.call(this, a);
          if (this.get_visible()) {
            this.legend.wipe();
            var b = ia.getMenu(),
              c = ba.get('city_name', 1),
              d = ba.get('scale_bar', !0),
              f = ba.get('emblem', !1),
              h =
                'Legend' == ba.get('districts', 'Curved') &&
                0 < a.districts.length,
              k = 'Legend' == ba.get('landmarks') && 0 < a.landmarks.length;
            if (c) {
              c = this.legend.addTitle(a.name);
              var n = function () {
                c.edit(function (b) {
                  a.setName(b);
                });
              };
              c.click.add(n);
              c.context.add(function () {
                b.addItem('Edit name', n);
                b.addItem('Reroll', function () {
                  a.setName(a.rerollName());
                });
              });
              (!h && !k) || d || f || this.legend.addSeparator();
            }
            f && this.legend.addEmblem();
            d && this.legend.addScale();
            if (h) {
              d = 0;
              for (f = a.districts.length; d < f; ) {
                h = d++;
                var p = [a.districts[h]];
                h = Nf.number(h);
                var g = [
                  (function (a) {
                    return function (b) {
                      return (a[0].name = b);
                    };
                  })(p),
                ];
                h = [this.legend.addItem(h, p[0].name)];
                p = [
                  (function (a, b) {
                    return function () {
                      a[0].edit(b[0]);
                    };
                  })(h, g),
                ];
                h[0].click.add(p[0]);
                h[0].context.add(
                  (function (c) {
                    return function () {
                      b.addItem('Edit name', c[0]);
                      b.addItem('Reroll all', l(a, a.rerollDistricts));
                    };
                  })(p),
                );
              }
              k && this.legend.addSeparator();
            }
            if (k)
              for (d = 0, f = a.landmarks.length; d < f; )
                ((h = d++),
                  (k = [a.landmarks[h]]),
                  (h = Of.letter(h)),
                  (p = [
                    (function (a) {
                      return function (b) {
                        return (a[0].name = b);
                      };
                    })(k),
                  ]),
                  (h = [this.legend.addItem(h, k[0].name)]),
                  (p = [
                    (function (a, b) {
                      return function () {
                        a[0].edit(b[0]);
                      };
                    })(h, p),
                  ]),
                  h[0].click.add(p[0]),
                  h[0].context.add(
                    (function (c, d) {
                      return function () {
                        b.addItem('Edit name', c[0]);
                        b.addItem(
                          'Delete',
                          (function (b) {
                            return function () {
                              a.removeLandmark(b[0]);
                            };
                          })(d),
                        );
                      };
                    })(p, k),
                  ));
            this.legend.layout();
            this.layout();
          }
        },
        onContext: function (a) {
          var b = this,
            c = new dd(),
            d = yc.TOP_LEFT;
          c.addItem(
            'Top-left',
            function () {
              b.set_position(d);
            },
            b.get_position() == d && !Uc.auto,
          );
          var f = yc.TOP_RIGHT;
          c.addItem(
            'Top-right',
            function () {
              b.set_position(f);
            },
            b.get_position() == f && !Uc.auto,
          );
          var h = yc.BOTTOM_LEFT;
          c.addItem(
            'Bottom-left',
            function () {
              b.set_position(h);
            },
            b.get_position() == h && !Uc.auto,
          );
          var k = yc.BOTTOM_RIGHT;
          c.addItem(
            'Bottom-right',
            function () {
              b.set_position(k);
            },
            b.get_position() == k && !Uc.auto,
          );
          c.addItem(
            'Auto',
            function () {
              Uc.auto = !0;
              b.layout();
            },
            Uc.auto,
          );
          a.addSeparator();
          a.addSubmenu('Position', c);
          a.addItem('Hide', function () {
            'Legend' == ba.get('landmarks') && ba.set('landmarks', 'Icon');
            'Legend' == ba.get('districts', 'Curved')
              ? ba.set('districts', 'Curved')
              : ia.inst.toggleOverlays();
          });
        },
        onChangedStr: function (a) {
          this.update(this.model);
        },
        onChangedVoid: function () {
          this.update(this.model);
        },
        onDestroy: function () {
          Ca.prototype.onDestroy.call(this);
          Bb.titleChanged.remove(l(this, this.onChangedStr));
          Bb.districtsChanged.remove(l(this, this.onChangedVoid));
        },
        __class__: Uc,
      });
      var Of = function (a) {
        this.moved = !1;
        ka.call(this);
        this.overlay = a;
        this.draw();
        this.set_buttonMode(!0);
        this.addEventListener('click', l(this, this.onClick));
        this.addEventListener('rightClick', l(this, this.onContext));
        this.addEventListener('rollOver', l(this, this.onRollOver));
        this.addEventListener('mouseDown', l(this, this.onMouseDown));
      };
      g['com.watabou.mfcg.scenes.overlays.Marker'] = Of;
      Of.__name__ = 'com.watabou.mfcg.scenes.overlays.Marker';
      Of.letter = function (a) {
        a = N.cca('a', 0) + a;
        return String.fromCodePoint(a);
      };
      Of.__super__ = ka;
      Of.prototype = v(ka.prototype, {
        set: function (a, b) {
          this.landmark = a;
          this.set_symbol(b);
        },
        draw: function () {
          var a = vb.getFormat(
              'font_pin',
              vb.fontPin,
              K.colorLabel,
              1.1428571428571428,
            ),
            b = 0.6666666666666666 * a.size,
            c = 0.16666666666666666 * Math.PI,
            d = Math.cos(c),
            f = Math.sin(c);
          c = b / f;
          var h = this.get_graphics(),
            k = !1;
          null == k && (k = !0);
          h.lineStyle(2 * K.getStrokeWidth(K.strokeNormal, k), K.colorPaper);
          h.drawCircle(0, -c, b);
          h.moveTo(-b * d, -c + b * f);
          h.lineTo(0, 0);
          h.lineTo(b * d, -c + b * f);
          h.endFill();
          h.beginFill(K.colorLabel);
          h.drawCircle(0, -c, b);
          h.beginFill(K.colorLabel);
          h.moveTo(-b * d, -c + b * f);
          h.lineTo(0, 0);
          h.lineTo(b * d, -c + b * f);
          h.beginFill(K.colorPaper);
          d = this.get_graphics();
          k = !1;
          null == k && (k = !0);
          d.drawCircle(0, -c, b - K.getStrokeWidth(K.strokeThick, k));
          this.tf = vb.get('a', a);
          this.tf.mouseEnabled = !1;
          this.tf.set_y(-c - this.tf.get_height() / 2);
          this.addChild(this.tf);
        },
        set_symbol: function (a) {
          this.tf.set_text(a);
          this.tf.set_x(-this.tf.get_width() / 2);
          return a;
        },
        onClick: function (a) {
          this.moved ||
            (this.overlay.editMarker(this.landmark), a.stopPropagation());
        },
        onRollOver: function (a) {
          le.inst.set(this.landmark.name);
        },
        onMouseDown: function (a) {
          this.stage.addEventListener('mouseMove', l(this, this.onMouseMove));
          this.stage.addEventListener('mouseUp', l(this, this.onMouseUp));
          this.grabX = this.get_mouseX();
          this.grabY = this.get_mouseY();
          this.moved = !1;
        },
        onMouseMove: function (a) {
          this.moved = !0;
          this.set_x(this.parent.get_mouseX() - this.grabX);
          this.set_y(this.parent.get_mouseY() - this.grabY);
          a.updateAfterEvent();
        },
        onMouseUp: function (a) {
          this.stage.removeEventListener(
            'mouseMove',
            l(this, this.onMouseMove),
          );
          this.stage.removeEventListener('mouseUp', l(this, this.onMouseUp));
          this.overlay.onDrag(this);
        },
        onContext: function (a) {
          this.overlay.landmark = this.landmark;
        },
        __class__: Of,
        __properties__: v(ka.prototype.__properties__, {
          set_symbol: 'set_symbol',
        }),
      });
      var li = function (a) {
        var b = this;
        Ca.call(this, a);
        Bb.landmarksChanged.add(function () {
          b.update(b.model);
        });
      };
      g['com.watabou.mfcg.scenes.overlays.MarkersOverlay'] = li;
      li.__name__ = 'com.watabou.mfcg.scenes.overlays.MarkersOverlay';
      li.__super__ = Ca;
      li.prototype = v(Ca.prototype, {
        layout: function () {
          Ca.prototype.layout.call(this);
          this.sync();
        },
        sync: function () {
          for (var a = 0, b = this.get_numChildren(); a < b; ) {
            var c = a++;
            c = this.getChildAt(c);
            var d = this.map2layer(ia.map, c.landmark.pos);
            c.set_x(d.x);
            c.set_y(d.y);
          }
        },
        update: function (a) {
          Ca.prototype.update.call(this, a);
          for (var b = 0, c = a.landmarks.length; b < c; ) {
            var d = b++,
              f = a.landmarks[d],
              h = this.getChildAt(d);
            null == h && ((h = new Of(this)), this.addChild(h));
            h.set(f, Of.letter(d));
            null != ia.map &&
              ((d = this.map2layer(ia.map, f.pos)), h.set_x(d.x), h.set_y(d.y));
          }
          for (; this.get_numChildren() > a.landmarks.length; )
            this.removeChildAt(a.landmarks.length);
        },
        editMarker: function (a) {
          u.showDialog(new gh(a, !1));
        },
        onDrag: function (a) {
          var b = ia.map,
            c = a.get_x(),
            d = a.get_y();
          a.landmark.pos = this.layer2map(b, new I(c, d));
          a.landmark.assign();
        },
        onContext: function (a) {
          var b = this;
          a.addItem('Edit', function () {
            b.editMarker(b.landmark);
          });
          a.addItem('Hide', function () {
            ba.set('landmarks', 'Hidden');
          });
        },
        __class__: li,
      });
      var ki = function (a) {
        Ca.call(this, a);
        this.mouseChildren = !1;
      };
      g['com.watabou.mfcg.scenes.overlays.PinsOverlay'] = ki;
      ki.__name__ = 'com.watabou.mfcg.scenes.overlays.PinsOverlay';
      ki.__super__ = Ca;
      ki.prototype = v(Ca.prototype, {
        layout: function () {
          Ca.prototype.layout.call(this);
          this.sync();
        },
        sync: function () {
          for (var a = 0, b = this.get_numChildren(); a < b; ) {
            var c = a++;
            c = this.getChildAt(c);
            var d = this.map2layer(ia.map, c.pos);
            c.set_x(d.x);
            c.set_y(d.y);
          }
        },
        update: function (a) {
          for (var b = 0, c = a.districts.length; b < c; ) {
            var d = b++,
              f = a.districts[d];
            d = Nf.number(d);
            null == f.equator && (f.equator = ze.build(Ua.toPoly(f.border)));
            this.addChild(new Nf(d, qa.lerp(f.equator[0], f.equator[1])));
          }
        },
        __class__: ki,
      });
      var Nf = function (a, b) {
        ka.call(this);
        this.pos = b;
        b = vb.getFormat('font_pin', vb.fontPin, K.colorPaper);
        this.tf = vb.get(a, b);
        this.tf.set_x(-this.tf.get_width() / 2);
        this.tf.set_y(-this.tf.get_height() / 2);
        this.addChild(this.tf);
        a = b.size;
        this.get_graphics().beginFill(K.colorPaper);
        this.get_graphics().drawCircle(0, 0, a);
        this.get_graphics().beginFill(K.colorLabel);
        b = this.get_graphics();
        var c = !1;
        null == c && (c = !0);
        b.drawCircle(0, 0, a - K.getStrokeWidth(K.strokeThick, c));
      };
      g['com.watabou.mfcg.scenes.overlays.Pin'] = Nf;
      Nf.__name__ = 'com.watabou.mfcg.scenes.overlays.Pin';
      Nf.number = function (a) {
        return H.string(a + 1);
      };
      Nf.__super__ = ka;
      Nf.prototype = v(ka.prototype, { __class__: Nf });
      var Lb = function () {
        this.scale = 0;
        ka.call(this);
        this.format = vb.getFormat('font_element', vb.fontElement, K.colorDark);
      };
      g['com.watabou.mfcg.scenes.overlays.ScaleBar'] = Lb;
      Lb.__name__ = 'com.watabou.mfcg.scenes.overlays.ScaleBar';
      Lb.toggleView = function () {
        Lb.sbClass = Lb.sbClass != of ? of : ug;
      };
      Lb.create = function (a) {
        null == a && (a = !1);
        null == Lb.sbClass && (Lb.sbClass = of);
        return w.createInstance(Lb.sbClass, [a]);
      };
      Lb.__super__ = ka;
      Lb.prototype = v(ka.prototype, {
        update: function (a) {
          this.get_graphics().clear();
          var b = this.getMinSize();
          null != a && (this.scale = this.getScale(a));
          for (Lb.units = Db.get_current(); ; )
            if (
              ((a = Lb.units.iu2unit * this.scale),
              (this.tickUnit = Math.pow(
                10,
                Math.ceil(Math.log(b / a) / Math.log(10)),
              )),
              (this.tickPx = this.tickUnit * a),
              this.tickPx > 5 * b
                ? ((this.tickUnit /= 5), (this.tickPx /= 5))
                : this.tickPx > 4 * b
                  ? ((this.tickUnit /= 4), (this.tickPx /= 4))
                  : this.tickPx > 2 * b &&
                    ((this.tickUnit /= 2), (this.tickPx /= 2)),
              1 >= this.tickUnit && null != Lb.units.sub)
            )
              Lb.units = Lb.units.sub;
            else break;
        },
        getMinSize: function () {
          return 100;
        },
        createLabel: function (a) {
          null == a && (a = '');
          a = vb.get(a, this.format);
          a.set_selectable(!1);
          return a;
        },
        getScale: function (a) {
          for (var b = 1, c = this; null != c; )
            ((b /= c.get_scaleX()), (c = c.parent));
          for (c = a; null != c; ) ((b *= c.get_scaleX()), (c = c.parent));
          return b;
        },
        __class__: Lb,
      });
      var ug = function (a) {
        null == a && (a = !1);
        this.embeded = a;
        Lb.call(this);
        this.black = K.colorDark;
        this.white = K.colorLight;
        this.grey = K.colorDark;
        this.tfValues = [];
        var b = this.createLabel();
        this.tfValues.push(b);
        this.addChild(b);
        b = this.createLabel();
        this.tfValues.push(b);
        this.addChild(b);
        b = this.createLabel();
        this.tfValues.push(b);
        this.addChild(b);
        b = this.createLabel();
        this.tfValues.push(b);
        this.addChild(b);
        b = this.createLabel();
        this.tfValues.push(b);
        a || this.addChild(b);
        this.tfUnits = this.createLabel();
        this.addChild(this.tfUnits);
      };
      g['com.watabou.mfcg.scenes.overlays.ScaleBarNew'] = ug;
      ug.__name__ = 'com.watabou.mfcg.scenes.overlays.ScaleBarNew';
      ug.__super__ = Lb;
      ug.prototype = v(Lb.prototype, {
        update: function (a) {
          Lb.prototype.update.call(this, a);
          a = (this.tickPx - 2) / 5;
          for (var b = 0; 5 > b; ) {
            var c = b++,
              d = this.tfValues[c];
            d.set_text(H.string((this.tickUnit * (c + 1)) / 5));
            d.set_x((this.tickPx * (c + 1)) / 5 - d.get_width() / 2);
            d.set_y(-12 - d.get_height() + 2);
            d = 0 == (c & 1) ? this.white : this.grey;
            this.get_graphics().beginFill(d);
            this.get_graphics().drawRect(a * c + 1, -8, a, 8);
          }
          d = this.get_graphics();
          a = !1;
          null == a && (a = !0);
          d.lineStyle(
            K.getStrokeWidth(K.strokeNormal, a),
            K.colorDark,
            1,
            !0,
            null,
            0,
            1,
          );
          this.get_graphics().moveTo(0, 0);
          this.get_graphics().lineTo(this.tickPx, 0);
          this.get_graphics().moveTo(0, -8);
          this.get_graphics().lineTo(this.tickPx, -8);
          this.get_graphics().moveTo(0, -12);
          this.get_graphics().lineTo(0, 0);
          this.get_graphics().moveTo(this.tickPx, -12);
          this.get_graphics().lineTo(this.tickPx, 0);
          a = this.embeded ? this.tfValues[3] : this.tfValues[4];
          this.tfUnits.set_text(Lb.units.unit);
          this.tfUnits.set_x(a.get_x() + a.get_width());
          this.tfUnits.set_y(a.get_y());
        },
        getMinSize: function () {
          return 180;
        },
        __class__: ug,
      });
      var of = function (a) {
        null == a && (a = !1);
        this.embeded = a;
        Lb.call(this);
        this.tfZero = this.createLabel('0');
        this.addChild(this.tfZero);
        this.tfHalf = this.createLabel();
        this.addChild(this.tfHalf);
        this.tfFull = this.createLabel();
        this.addChild(this.tfFull);
        this.tfUnits = this.createLabel();
        this.addChild(this.tfUnits);
      };
      g['com.watabou.mfcg.scenes.overlays.ScaleBarOld'] = of;
      of.__name__ = 'com.watabou.mfcg.scenes.overlays.ScaleBarOld';
      of.__super__ = Lb;
      of.prototype = v(Lb.prototype, {
        update: function (a) {
          Lb.prototype.update.call(this, a);
          this.get_graphics().beginFill(16711680, 0);
          this.get_graphics().drawRect(0, -12, (this.tickPx | 0) + 1, 12);
          this.get_graphics().endFill();
          a = this.get_graphics();
          var b = !1;
          null == b && (b = !0);
          a.lineStyle(
            K.getStrokeWidth(K.strokeNormal, b),
            K.colorDark,
            1,
            !0,
            null,
            0,
            1,
          );
          this.get_graphics().moveTo(0, -12);
          this.get_graphics().lineTo(0, 0);
          this.get_graphics().lineTo(this.tickPx, 0);
          this.get_graphics().lineTo(this.tickPx, -12);
          this.get_graphics().moveTo(0.25 * this.tickPx, 0);
          this.get_graphics().lineTo(0.25 * this.tickPx, -6);
          this.get_graphics().moveTo(0.5 * this.tickPx, 0);
          this.get_graphics().lineTo(0.5 * this.tickPx, -12);
          this.get_graphics().moveTo(0.75 * this.tickPx, 0);
          this.get_graphics().lineTo(0.75 * this.tickPx, -6);
          this.tfZero.set_x(this.embeded ? -2 : -this.tfZero.get_width() / 2);
          this.tfZero.set_y(-12 - this.tfZero.get_height());
          this.tfHalf.set_text(H.string(this.tickUnit / 2));
          this.tfHalf.set_x(this.tickPx / 2 - this.tfHalf.get_width() / 2);
          this.tfHalf.set_y(-12 - this.tfHalf.get_height());
          this.tfFull.set_text(H.string(this.tickUnit));
          this.tfFull.set_x(
            this.tickPx -
              (this.embeded
                ? this.tfFull.get_width() - 2
                : this.tfFull.get_width() / 2),
          );
          this.tfFull.set_y(-12 - this.tfFull.get_height());
          this.tfUnits.set_text(Lb.units.unit);
          this.tfUnits.set_x(
            this.embeded
              ? this.tfZero.get_x() + this.tfZero.get_width()
              : this.tfFull.get_x() + this.tfFull.get_width(),
          );
          this.tfUnits.set_y(this.tfFull.get_y());
        },
        getMinSize: function () {
          return 150;
        },
        __class__: of,
      });
      var mi = function (a) {
        this.scalebar = Lb.create();
        Ca.call(this, a);
        this.addChild(this.scalebar);
      };
      g['com.watabou.mfcg.scenes.overlays.ScaleBarOverlay'] = mi;
      mi.__name__ = 'com.watabou.mfcg.scenes.overlays.ScaleBarOverlay';
      mi.__super__ = Ca;
      mi.prototype = v(Ca.prototype, {
        onContext: function (a) {
          var b = this,
            c = function (c, f) {
              a.addItem(
                c,
                function () {
                  Db.set_current(f);
                  b.scalebar.update();
                },
                Db.get_current() == f,
              );
            };
          c('Metric units', Db.metric);
          c('Imperial units', Db.imperial);
          c = function (c, f) {
            a.addItem(
              c,
              function () {
                Lb.sbClass = f;
                b.replace();
              },
              Lb.sbClass == f,
            );
          };
          c('Default style', of);
          c('Alternative style', ug);
          a.addItem('Hide', function () {
            ba.set('scale_bar', !1);
          });
        },
        replace: function () {
          null != this.scalebar && this.removeChild(this.scalebar);
          this.scalebar = Lb.create();
          this.addChild(this.scalebar);
          this.layout();
        },
        update: function (a) {
          this.scalebar.update(ia.map);
        },
        layout: function () {
          this.update(null);
          this.scalebar.set_x(Ca.MARGIN);
          this.scalebar.set_y(this.rHeight - Ca.MARGIN);
        },
        __class__: mi,
      });
      var Ci = function () {
        ka.call(this);
        this.text = new sc();
        this.text.set_defaultTextFormat(
          vb.getFormat('font_title', vb.fontTitle, K.colorDark),
        );
        this.text.set_autoSize(1);
        this.addChild(this.text);
        this.mouseEnabled = !0;
        this.mouseChildren = !1;
        this.filterOn(!0);
        this.addEventListener('mouseDown', l(this, this.onClick));
      };
      g['com.watabou.mfcg.scenes.overlays.Title'] = Ci;
      Ci.__name__ = 'com.watabou.mfcg.scenes.overlays.Title';
      Ci.__super__ = ka;
      Ci.prototype = v(ka.prototype, {
        setText: function (a) {
          this.text.set_text(a);
          this.text.set_x(-this.text.get_width() / 2);
          this.text.set_y(-this.text.get_height() / 2);
        },
        edit: function (a) {
          var b = this;
          this.set_visible(!1);
          new We(
            a.name,
            this.text.get_defaultTextFormat(),
            new I(this.get_x(), this.get_y()),
            this.parent,
            null,
            function (c) {
              b.set_visible(!0);
              a.setName(c, !0);
            },
            function () {
              b.set_visible(!0);
            },
          );
        },
        onClick: function (a) {
          var b = Ub.instance;
          a.shiftKey ? b.setName(b.rerollName()) : this.edit(b);
        },
        filterOn: function (a) {
          null != this.outline &&
            (this.removeChild(this.outline), (this.outline = null));
          var b = !1;
          null == b && (b = !0);
          b = K.getStrokeWidth(K.strokeThick, b);
          a
            ? this.set_filters([new Sc(K.colorPaper, 1, 2 * b, 2 * b, 100)])
            : (this.set_filters([]),
              (this.outline = new ih(this.text, K.colorPaper, b, 8)),
              this.addChildAt(this.outline, 0));
        },
        __class__: Ci,
      });
      var pi = function (a) {
        this.title = new Ci();
        Ca.call(this, a);
        this.addChild(this.title);
        Bb.titleChanged.add(l(this, this.onChanged));
      };
      g['com.watabou.mfcg.scenes.overlays.TitleOverlay'] = pi;
      pi.__name__ = 'com.watabou.mfcg.scenes.overlays.TitleOverlay';
      pi.__super__ = Ca;
      pi.prototype = v(Ca.prototype, {
        layout: function () {
          this.title.set_x(this.rWidth / 2);
          this.title.set_y(Ca.MARGIN + this.title.get_height() / 2);
        },
        update: function (a) {
          Ca.prototype.update.call(this, a);
          this.title.setText(a.name);
        },
        onChanged: function (a) {
          this.title.setText(a);
        },
        onDestroy: function () {
          Ca.prototype.onDestroy.call(this);
          Bb.titleChanged.remove(l(this, this.onChanged));
        },
        onContext: function (a) {
          var b = this;
          a.addItem('Edit', function () {
            b.title.edit(b.model);
          });
          a.addItem('Reroll', function () {
            b.model.setName(b.model.rerollName());
            b.title.setText(b.model.name);
          });
          a.addItem('Hide', function () {
            ba.set('city_name', !1);
          });
        },
        exportPNG: function (a) {
          this.title.filterOn(!a);
        },
        __class__: pi,
      });
      var Mb = function (a) {
        this.affectedPatches = [];
        this.affectedNodes = new pa();
        this.softness = 0.5;
        this.radius = 20;
        this.scene = a;
      };
      g['com.watabou.mfcg.scenes.tools.WarpTool'] = Mb;
      Mb.__name__ = 'com.watabou.mfcg.scenes.tools.WarpTool';
      Mb.prototype = {
        getName: function () {
          return 'Unknown tool';
        },
        activate: function () {},
        onPress: function (a, b) {
          this.startx = this.prevx = this.curx = a;
          this.starty = this.prevy = this.cury = b;
        },
        onRelease: function () {
          (this.startx == this.curx && this.starty == this.cury) ||
            this.scene.submit(this.scene.model.cells, !0);
        },
        onMove: function (a, b) {},
        onDrag: function (a, b) {
          this.prevx = this.curx;
          this.prevy = this.cury;
          this.curx = a;
          this.cury = b;
        },
        onWheel: function (a, b, c) {
          this.radius = Fc.gate(
            this.radius * Math.pow(1.05, 0 == c ? 0 : 0 > c ? -1 : 1),
            2,
            100,
          );
          this.scene.updateBrush(this.radius, 1 - this.softness);
          this.onMove(a, b);
        },
        onKey: function (a) {
          switch (a) {
            case 107:
            case 187:
              return (
                (this.radius = Fc.gate(1.05 * this.radius, 2, 100)),
                this.scene.updateBrush(this.radius, 1 - this.softness),
                !0
              );
            case 109:
            case 189:
              return (
                (this.radius = Fc.gate(this.radius / 1.05, 2, 100)),
                this.scene.updateBrush(this.radius, 1 - this.softness),
                !0
              );
            default:
              return !1;
          }
        },
        affect: function (a) {
          this.affectedNodes = new pa();
          this.affectedPatches = [];
          for (var b = this.scene.nodePatches.keys(); b.hasNext(); ) {
            var c = b.next(),
              d = I.distance(a, c);
            d < this.radius &&
              (this.affectedNodes.set(
                c,
                Math.min(1, (1 - d / this.radius) / this.softness),
              ),
              Z.addAll(
                this.affectedPatches,
                this.scene.nodePatches.h[c.__id__],
              ));
          }
        },
        updateMesh: function () {
          var a = this;
          this.scene.clearMesh();
          for (var b = 0, c = this.affectedPatches; b < c.length; ) {
            var d = c[b];
            ++b;
            kf.forEdge(d.shape, function (b, c) {
              a.scene.drawEdge(
                b,
                c,
                (2 *
                  ((null != a.affectedNodes.h.__keys__[b.__id__]
                    ? a.affectedNodes.h[b.__id__]
                    : 0) +
                    (null != a.affectedNodes.h.__keys__[c.__id__]
                      ? a.affectedNodes.h[c.__id__]
                      : 0))) /
                  2,
              );
            });
          }
          for (b = this.affectedNodes.keys(); b.hasNext(); )
            ((c = b.next()),
              this.scene.drawNode(c, 4 * this.affectedNodes.h[c.__id__]));
        },
        __class__: Mb,
      };
      var me = function (a) {
        this.modifiedPatches = [];
        Mb.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.BloatTool'] = me;
      me.__name__ = 'com.watabou.mfcg.scenes.tools.BloatTool';
      me.__super__ = Mb;
      me.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Bloat';
        },
        activate: function () {
          this.radius = me.brushRadius;
          this.softness = 0;
          this.scene.updateBrush(this.radius, 1 - this.softness);
        },
        onMove: function (a, b) {
          this.affect(new I(a, b));
          this.updateMesh();
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          var c = this.curx - this.prevx,
            d = this.cury - this.prevy;
          c = Math.min(1, (0.5 * Math.sqrt(c * c + d * d)) / this.radius);
          a = new I(a, b);
          this.bloat(a, c);
          Z.addAll(this.modifiedPatches, this.affectedPatches);
          this.affect(a);
          this.updateMesh();
        },
        bloat: function (a, b) {
          for (var c = this.affectedNodes, d = c.keys(); d.hasNext(); ) {
            var f = d.next();
            c.get(f);
            var h = f.subtract(a),
              k = Math.pow(I.distance(f, a) / this.radius, -b);
            h.x *= k;
            h.y *= k;
            h.x += a.x;
            h.y += a.y;
            wd.set(f, h);
          }
        },
        onPress: function (a, b) {
          Mb.prototype.onPress.call(this, a, b);
          this.modifiedPatches = [];
        },
        onRelease: function () {
          me.brushRadius = this.radius;
          this.scene.submit(this.modifiedPatches, !0);
        },
        __class__: me,
      });
      var Jf = function (a) {
        Mb.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.DisplaceTool'] = Jf;
      Jf.__name__ = 'com.watabou.mfcg.scenes.tools.DisplaceTool';
      Jf.__super__ = Mb;
      Jf.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Displace';
        },
        activate: function () {
          this.radius = Jf.brushRadius;
          this.scene.updateBrush(this.radius, 1 - this.softness);
        },
        onMove: function (a, b) {
          this.affect(new I(a, b));
          this.updateMesh();
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          a = this.curx - this.prevx;
          b = this.cury - this.prevy;
          for (var c = this.affectedNodes, d = c.keys(); d.hasNext(); ) {
            var f = d.next(),
              h = c.get(f);
            f.x += a * h;
            f.y += b * h;
          }
          this.updateMesh();
        },
        onPress: function (a, b) {
          Mb.prototype.onPress.call(this, a, b);
          this.scene.updateBrush(0);
        },
        onRelease: function () {
          Jf.brushRadius = this.radius;
          this.scene.updateBrush(this.radius, 1 - this.softness);
          if (this.startx != this.curx || this.starty != this.cury) {
            for (var a = !1, b = this.affectedNodes.keys(); b.hasNext(); ) {
              var c = b.next();
              if (-1 != this.scene.model.shore.indexOf(c)) {
                a = !0;
                break;
              }
            }
            this.scene.submit(this.affectedPatches, a);
          }
        },
        __class__: Jf,
      });
      var wi = function (a) {
        Mb.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.EqualizeTool'] = wi;
      wi.__name__ = 'com.watabou.mfcg.scenes.tools.EqualizeTool';
      wi.__super__ = Mb;
      wi.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Equalize';
        },
        activate: function () {
          this.patch = null;
          this.scene.updateBrush(0);
        },
        onMove: function (a, b) {
          a = this.scene.model.getCell(new I(a, b));
          if (this.patch != a) {
            this.patch = a;
            this.affectedNodes = new pa();
            this.affectedPatches = [];
            if (null != this.patch) {
              this.shape = this.patch.shape;
              this.len = this.shape.length;
              b = 0;
              for (var c = this.shape; b < c.length; )
                ((a = c[b]),
                  ++b,
                  this.affectedNodes.set(a, 1),
                  Z.addAll(
                    this.affectedPatches,
                    this.scene.nodePatches.h[a.__id__],
                  ));
            }
            this.updateMesh();
          }
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          null != this.patch &&
            ((a = this.curx - this.prevx),
            (b = this.cury - this.prevy),
            (a = Math.min(
              1,
              (2 * Math.sqrt(a * a + b * b)) / Sa.perimeter(this.shape),
            )),
            this.equalize(a),
            this.updateMesh());
        },
        equalize: function (a) {
          for (
            var b = Sa.centroid(this.shape),
              c = this.shape[0].subtract(b),
              d = 1,
              f = this.len;
            d < f;

          ) {
            var h = d++,
              k = this.shape[h].subtract(b),
              n = (2 * -Math.PI * h) / this.len,
              p = Math.sin(n);
            n = Math.cos(n);
            h = new I(k.x * n - k.y * p, k.y * n + k.x * p);
            c.x += h.x;
            c.y += h.y;
          }
          d = 1 / this.len;
          c.x *= d;
          c.y *= d;
          d = 0;
          for (f = this.len; d < f; )
            ((h = d++),
              (n = (2 * Math.PI * h) / this.len),
              (p = Math.sin(n)),
              (n = Math.cos(n)),
              wd.set(
                this.shape[h],
                qa.lerp(
                  this.shape[h],
                  b.add(new I(c.x * n - c.y * p, c.y * n + c.x * p)),
                  a,
                ),
              ));
        },
        onRelease: function () {
          for (var a = !1, b = this.affectedNodes.keys(); b.hasNext(); ) {
            var c = b.next();
            if (-1 != this.scene.model.shore.indexOf(c)) {
              a = !0;
              break;
            }
          }
          this.scene.submit(this.affectedPatches, a);
          this.onMove(this.curx, this.cury);
        },
        updateMesh: function () {
          this.scene.clearMesh();
          if (null != this.patch)
            for (var a = 0, b = this.len; a < b; ) {
              var c = a++,
                d = this.shape[c];
              this.scene.drawEdge(d, this.shape[(c + 1) % this.len], 2);
              this.scene.drawNode(d, 4);
            }
        },
        __class__: wi,
      });
      var Kf = function (a) {
        this.modifiedPatches = [];
        Mb.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.LiquifyTool'] = Kf;
      Kf.__name__ = 'com.watabou.mfcg.scenes.tools.LiquifyTool';
      Kf.__super__ = Mb;
      Kf.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Liquify';
        },
        activate: function () {
          this.radius = Kf.brushRadius;
          this.softness = 0;
          this.scene.updateBrush(this.radius, 1 - this.softness);
        },
        onMove: function (a, b) {
          this.affect(new I(a, b));
          this.updateMesh();
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          for (
            var c = this.curx - this.prevx,
              d = this.cury - this.prevy,
              f = this.affectedNodes,
              h = f.keys();
            h.hasNext();

          ) {
            var k = h.next(),
              n = f.get(k);
            k.x += c * n * 0.5;
            k.y += d * n * 0.5;
          }
          Z.addAll(this.modifiedPatches, this.affectedPatches);
          this.affect(new I(a, b));
          this.updateMesh();
        },
        onPress: function (a, b) {
          Mb.prototype.onPress.call(this, a, b);
          this.modifiedPatches = [];
        },
        onRelease: function () {
          Kf.brushRadius = this.radius;
          this.scene.submit(this.modifiedPatches, !0);
        },
        affect: function (a) {
          this.affectedNodes = new pa();
          this.affectedPatches = [];
          for (var b = this.scene.nodePatches.keys(); b.hasNext(); ) {
            var c = b.next(),
              d = I.distance(a, c);
            d < this.radius &&
              (this.affectedNodes.set(c, 1 - d / this.radius),
              Z.addAll(
                this.affectedPatches,
                this.scene.nodePatches.h[c.__id__],
              ));
          }
        },
        __class__: Kf,
      });
      var vi = function (a) {
        Mb.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.MeasureTool'] = vi;
      vi.__name__ = 'com.watabou.mfcg.scenes.tools.MeasureTool';
      vi.__super__ = Mb;
      vi.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Measure';
        },
        activate: function () {
          this.scene.updateBrush(0);
          this.scene.clearMesh();
        },
        onPress: function (a, b) {
          Mb.prototype.onPress.call(this, a, b);
          this.start = new I(a, b);
          this.cur = new I(a, b);
          this.updateMesh();
        },
        onRelease: function () {
          if (this.startx != this.curx || this.starty != this.cury) {
            var a = I.distance(this.start, this.cur);
            a = Db.get_current().measure(a);
            var b = a.value;
            q.show(
              (10 > b ? Math.round(10 * b) / 10 : Math.round(b)) +
                ' ' +
                a.system.unit,
            );
          } else this.scene.clearMesh();
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          this.cur.setTo(a, b);
          this.updateMesh();
        },
        updateMesh: function () {
          this.scene.clearMesh();
          this.scene.drawEdge(this.start, this.cur, 2);
          this.scene.drawNode(this.start, 4);
          this.scene.drawNode(this.cur, 4);
        },
        __class__: vi,
      });
      var ui = function (a) {
        me.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.PinchTool'] = ui;
      ui.__name__ = 'com.watabou.mfcg.scenes.tools.PinchTool';
      ui.__super__ = me;
      ui.prototype = v(me.prototype, {
        getName: function () {
          return 'Pinch';
        },
        bloat: function (a, b) {
          me.prototype.bloat.call(this, a, -b);
        },
        __class__: ui,
      });
      var Lf = function (a) {
        this.modifiedPatches = [];
        Mb.call(this, a);
      };
      g['com.watabou.mfcg.scenes.tools.RelaxTool'] = Lf;
      Lf.__name__ = 'com.watabou.mfcg.scenes.tools.RelaxTool';
      Lf.__super__ = Mb;
      Lf.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Relax';
        },
        activate: function () {
          this.radius = Lf.brushRadius;
          this.scene.updateBrush(this.radius, 1 - this.softness);
        },
        onMove: function (a, b) {
          this.affect(new I(a, b));
          this.updateMesh();
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          var c = this.curx - this.prevx,
            d = this.cury - this.prevy;
          this.relax(Math.min(1, Math.sqrt(c * c + d * d) / this.radius));
          Z.addAll(this.modifiedPatches, this.affectedPatches);
          this.affect(new I(a, b));
          this.updateMesh();
        },
        relax: function (a) {
          var b = new pa(),
            c = this.affectedNodes,
            d = c;
          for (c = c.keys(); c.hasNext(); ) {
            var f = c.next();
            d.get(f);
            var h = this.scene.model.dcel.vertices.h[f.__id__];
            f = new I();
            for (var k = !0, n = 0, p = h.edges; n < p.length; ) {
              var g = p[n];
              ++n;
              if (null == g.twin) {
                k = !1;
                break;
              } else ((g = g.next.origin.point), (f.x += g.x), (f.y += g.y));
            }
            k &&
              ((k = h.point),
              (h = 1 / h.edges.length),
              (f.x *= h),
              (f.y *= h),
              (f.x -= k.x),
              (f.y -= k.y),
              b.set(k, f));
          }
          d = c = b;
          for (c = c.keys(); c.hasNext(); )
            ((f = c.next()),
              (b = d.get(f)),
              (h = a * this.affectedNodes.h[f.__id__]),
              (f.x += b.x * h),
              (f.y += b.y * h));
        },
        onPress: function (a, b) {
          Mb.prototype.onPress.call(this, a, b);
          this.modifiedPatches = [];
        },
        onRelease: function () {
          Lf.brushRadius = this.radius;
          this.scene.submit(this.modifiedPatches, !0);
        },
        __class__: Lf,
      });
      var ti = function (a) {
        Mb.call(this, a);
        var b = [],
          c = 0;
        for (a = a.model.dcel.edges; c < a.length; ) {
          var d = a[c];
          ++c;
          null != d.data && b.push(d);
        }
        this.segments = b;
      };
      g['com.watabou.mfcg.scenes.tools.RotateTool'] = ti;
      ti.__name__ = 'com.watabou.mfcg.scenes.tools.RotateTool';
      ti.__super__ = Mb;
      ti.prototype = v(Mb.prototype, {
        getName: function () {
          return 'Rotate';
        },
        activate: function () {
          this.scene.updateBrush(0);
          this.updateMesh();
        },
        onDrag: function (a, b) {
          Mb.prototype.onDrag.call(this, a, b);
          b = new I(this.prevx, this.prevy).get_length();
          var c = new I(this.curx, this.cury).get_length();
          a = (this.prevx * this.curx + this.prevy * this.cury) / (b * c);
          b = (this.cury * this.prevx - this.curx * this.prevy) / (b * c);
          for (c = this.scene.prevState.keys(); c.hasNext(); ) {
            var d = c.next();
            d.setTo(d.x * a - d.y * b, d.y * a + d.x * b);
          }
          this.updateMesh();
        },
        updateMesh: function () {
          this.scene.clearMesh();
          for (var a = 0, b = this.segments; a < b.length; ) {
            var c = b[a];
            ++a;
            this.scene.drawEdge(c.origin.point, c.next.origin.point, 2);
          }
        },
        __class__: ti,
      });
      var sc = function () {
        this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
        this.__mouseScrollVCounter = 0;
        this.condenseWhite = !1;
        xa.call(this);
        this.__wordSelection = !1;
        this.__drawableType = 7;
        this.__selectionIndex = this.__caretIndex = -1;
        this.__displayAsPassword = !1;
        this.__graphics = new Ed(this);
        this.__textEngine = new Nb(this);
        this.__layoutDirty = !0;
        this.__offsetY = this.__offsetX = 0;
        this.__mouseWheelEnabled = !0;
        this.__text = '';
        null == sc.__defaultTextFormat &&
          ((sc.__defaultTextFormat = new we(
            'Times New Roman',
            12,
            0,
            !1,
            !1,
            !1,
            '',
            '',
            3,
            0,
            0,
            0,
            0,
          )),
          (sc.__defaultTextFormat.blockIndent = 0),
          (sc.__defaultTextFormat.bullet = !1),
          (sc.__defaultTextFormat.letterSpacing = 0),
          (sc.__defaultTextFormat.kerning = !1));
        this.__textFormat = sc.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(
          new od(this.__textFormat, 0, 0),
        );
        this.addEventListener('mouseDown', l(this, this.this_onMouseDown));
        this.addEventListener('focusIn', l(this, this.this_onFocusIn));
        this.addEventListener('focusOut', l(this, this.this_onFocusOut));
        this.addEventListener('keyDown', l(this, this.this_onKeyDown));
        this.addEventListener('mouseWheel', l(this, this.this_onMouseWheel));
      };
      g['openfl.text.TextField'] = sc;
      sc.__name__ = 'openfl.text.TextField';
      sc.__super__ = xa;
      sc.prototype = v(xa.prototype, {
        getCharBoundaries: function (a) {
          if (0 > a || a > this.__text.length - 1) return null;
          var b = new na();
          return this.__getCharBoundaries(a, b) ? b : null;
        },
        getLineIndexOfChar: function (a) {
          if (0 > a || a > this.__text.length) return -1;
          this.__updateLayout();
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.startIndex <= a && c.endIndex >= a) return c.lineIndex;
          }
          return -1;
        },
        getLineLength: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return 0;
          for (
            var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (f.lineIndex == a) -1 == b && (b = f.startIndex);
            else if (f.lineIndex == a + 1) {
              c = f.startIndex;
              break;
            }
          }
          -1 == c && (c = this.__text.length);
          return c - b;
        },
        getLineOffset: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return -1;
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.lineIndex == a) return c.startIndex;
          }
          return 0;
        },
        getLineText: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return null;
          for (
            var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (f.lineIndex == a) -1 == b && (b = f.startIndex);
            else if (f.lineIndex == a + 1) {
              c = f.startIndex;
              break;
            }
          }
          -1 == c && (c = this.__text.length);
          return this.__textEngine.text.substring(b, c);
        },
        replaceSelectedText: function (a) {
          this.__replaceSelectedText(a, !1);
        },
        replaceText: function (a, b, c) {
          this.__replaceText(a, b, c, !1);
        },
        setSelection: function (a, b) {
          this.__selectionIndex = a;
          this.__caretIndex = b;
          this.__updateScrollV();
          this.__updateScrollH();
          null != this.stage &&
            this.stage.get_focus() == this &&
            (this.__stopCursorTimer(), this.__startCursorTimer());
        },
        setTextFormat: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = -1);
          var d = this.get_text().length;
          -1 == b ? (-1 == c && (c = d), (b = 0)) : -1 == c && (c = b + 1);
          if (b != c) {
            if (0 > b || 0 >= c || c < b || b >= d || c > d) throw new Zg();
            if (0 == b && c == d) {
              this.__textEngine.textFormatRanges.set_length(1);
              var f = this.__textEngine.textFormatRanges.get(0);
              f.start = 0;
              f.end = d;
              f.format.__merge(a);
            } else {
              d = 0;
              for (var h; d < this.__textEngine.textFormatRanges.get_length(); )
                if (
                  ((f = this.__textEngine.textFormatRanges.get(d)), f.end <= b)
                )
                  ++d;
                else if (f.start >= c) break;
                else if (f.start <= b && f.end >= c)
                  if (f.start == b && f.end == c) {
                    f.format = f.format.clone();
                    f.format.__merge(a);
                    break;
                  } else if (f.start == b)
                    ((h = new od(f.format.clone(), b, c)),
                      h.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(d, h),
                      (f.start = c),
                      (d += 2));
                  else {
                    f.end == c
                      ? ((h = new od(f.format.clone(), b, c)),
                        h.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(d + 1, h))
                      : ((h = new od(f.format.clone(), b, c)),
                        h.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(d + 1, h),
                        (h = new od(f.format.clone(), c, f.end)),
                        this.__textEngine.textFormatRanges.insertAt(d + 2, h));
                    f.end = b;
                    break;
                  }
                else if (f.start >= b && f.end <= c)
                  f.start == b
                    ? ((f.format = f.format.clone()),
                      f.format.__merge(a),
                      (f.end = c))
                    : this.__textEngine.textFormatRanges.removeAt(d);
                else if (f.start > b && f.end > b) {
                  f.start = c;
                  break;
                } else
                  f.start < b && f.end <= c
                    ? ((h = new od(f.format.clone(), b, c)),
                      h.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(d + 1, h),
                      (f.end = b),
                      (d += 2))
                    : (++d,
                      Ga.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 1610,
                          className: 'openfl.text.TextField',
                          methodName: 'setTextFormat',
                        },
                      ));
            }
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __setStageReference: function (a) {
          this.__stopTextInput();
          xa.prototype.__setStageReference.call(this, a);
        },
        __allowMouseFocus: function () {
          return this.mouseEnabled;
        },
        __caretBeginningOfLine: function () {
          this.__caretIndex = this.getLineOffset(
            this.getLineIndexOfChar(this.__caretIndex),
          );
        },
        __caretBeginningOfNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1)
              : this.__text.length;
        },
        __caretBeginningOfPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          if (0 < a) {
            var b = this.getLineOffset(
              this.getLineIndexOfChar(this.__caretIndex),
            );
            this.__caretIndex =
              this.__caretIndex == b ? this.getLineOffset(a - 1) : b;
          }
        },
        __caretEndOfLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1) - 1
              : this.__text.length;
        },
        __caretNextCharacter: function () {
          this.__caretIndex < this.__text.length && this.__caretIndex++;
        },
        __caretNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          a < this.__textEngine.numLines - 1 &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a + 1,
            ));
        },
        __caretPreviousCharacter: function () {
          0 < this.__caretIndex && this.__caretIndex--;
        },
        __caretPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          0 < a &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a - 1,
            ));
        },
        __disableInput: function () {
          this.__inputEnabled &&
            null != this.stage &&
            (this.stage.window.__backend.setTextInputEnabled(!1),
            this.stage.window.onTextInput.remove(
              l(this, this.window_onTextInput),
            ),
            this.stage.window.onKeyDown.remove(l(this, this.window_onKeyDown)),
            (this.__inputEnabled = !1),
            this.__stopCursorTimer());
        },
        __dispatch: function (a) {
          if (2 == a.eventPhase && 'mouseUp' == a.type) {
            var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            null != b &&
              ((b = b.format.url),
              null != b &&
                '' != b &&
                (O.startsWith(b, 'event:')
                  ? this.dispatchEvent(
                      new Ce('link', !0, !1, N.substr(b, 6, null)),
                    )
                  : Ra.getURL(new If(b))));
          }
          return xa.prototype.__dispatch.call(this, a);
        },
        __enableInput: function () {
          if (null != this.stage) {
            var a = this.getBounds(this.stage);
            a = new Ld(a.x, a.y, a.width, a.height);
            this.stage.window.setTextInputRect(a);
            this.stage.window.__backend.setTextInputEnabled(!0);
            this.__inputEnabled ||
              (this.stage.window.__backend.setTextInputEnabled(!0),
              this.stage.window.onTextInput.has(
                l(this, this.window_onTextInput),
              ) ||
                (this.stage.window.onTextInput.add(
                  l(this, this.window_onTextInput),
                ),
                this.stage.window.onKeyDown.add(
                  l(this, this.window_onKeyDown),
                )),
              (this.__inputEnabled = !0),
              this.__stopCursorTimer(),
              this.__startCursorTimer());
          }
        },
        __getBounds: function (a, b) {
          this.__updateLayout();
          var c = na.__pool.get();
          c.copyFrom(this.__textEngine.bounds);
          c.offset(this.__offsetX, this.__offsetY);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __getCharBoundaries: function (a, b) {
          if (0 > a || a > this.__text.length - 1) return !1;
          this.__updateLayout();
          for (
            var c = this.__textEngine.layoutGroups.iterator();
            c.hasNext();

          ) {
            var d = c.next();
            if (a >= d.startIndex && a < d.endIndex)
              try {
                for (var f = d.offsetX, h = 0, k = a - d.startIndex; h < k; ) {
                  var n = h++;
                  f += d.positions[n];
                }
                b.setTo(
                  f,
                  d.offsetY,
                  d.positions[a - d.startIndex],
                  d.ascent + d.descent,
                );
                return !0;
              } catch (p) {
                Ta.lastError = p;
              }
          }
          return !1;
        },
        __getCharIndexOnDifferentLine: function (a, b) {
          if (
            0 > a ||
            a > this.__text.length ||
            0 > b ||
            b > this.__textEngine.numLines - 1
          )
            return -1;
          for (
            var c = null,
              d = null,
              f = this.__textEngine.layoutGroups.iterator();
            f.hasNext();

          ) {
            var h = f.next();
            if (a >= h.startIndex && a <= h.endIndex) {
              c = h.offsetX;
              for (var k = 0, n = a - h.startIndex; k < n; ) {
                var p = k++;
                c += h.positions[p];
              }
              if (null != d) return this.__getPosition(c, d);
            }
            if (h.lineIndex == b) {
              d = h.offsetY + h.height / 2;
              h = 0;
              for (k = this.get_scrollV() - 1; h < k; )
                ((n = h++), (d -= this.__textEngine.lineHeights.get(n)));
              if (null != c) return this.__getPosition(c, d);
            }
          }
          return -1;
        },
        __getCursor: function () {
          var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
          return null != a && '' != a.format.url
            ? 'button'
            : this.__textEngine.selectable
              ? 'ibeam'
              : null;
        },
        __getGroup: function (a, b, c) {
          null == c && (c = !1);
          this.__updateLayout();
          a += this.get_scrollH();
          for (var d = 0, f = this.get_scrollV() - 1; d < f; ) {
            var h = d++;
            b += this.__textEngine.lineHeights.get(h);
          }
          !c &&
            b > this.__textEngine.textHeight &&
            (b = this.__textEngine.textHeight);
          var k = !0;
          d = 0;
          for (f = this.__textEngine.layoutGroups.get_length(); d < f; ) {
            h = d++;
            var n = this.__textEngine.layoutGroups.get(h);
            h =
              h < this.__textEngine.layoutGroups.get_length() - 1
                ? this.__textEngine.layoutGroups.get(h + 1)
                : null;
            k &&
              (b < n.offsetY && (b = n.offsetY),
              a < n.offsetX && (a = n.offsetX),
              (k = !1));
            if (
              (b >= n.offsetY && b <= n.offsetY + n.height) ||
              (!c && null == h)
            )
              if (
                (a >= n.offsetX && a <= n.offsetX + n.width) ||
                (!c && (null == h || h.lineIndex != n.lineIndex))
              )
                return n;
          }
          return null;
        },
        __getPosition: function (a, b) {
          b = this.__getGroup(a, b);
          if (null == b) return this.__text.length;
          for (var c = 0, d = 0, f = b.positions.length; d < f; ) {
            var h = d++;
            c += b.positions[h];
            if (a <= b.offsetX + c) {
              if (a <= b.offsetX + (c - b.positions[h]) + b.positions[h] / 2)
                return b.startIndex + h;
              if (b.startIndex + h < b.endIndex) return b.startIndex + h + 1;
              break;
            }
          }
          return b.endIndex;
        },
        __getPositionByIdentifier: function (a, b, c) {
          a = this.__getPosition(a, b);
          c = c ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          b = this.__text.charAt(a);
          if (this.__specialSelectionInitialIndex <= a)
            for (; -1 == c.indexOf(b) && a < this.__text.length; )
              (++a, (b = this.__text.charAt(a)));
          else {
            for (; -1 == c.indexOf(b) && 0 < a; )
              (--a, (b = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          }
          return a;
        },
        __getOppositeIdentifierBound: function (a, b) {
          b = b ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          var c = this.__text.charAt(a);
          if (a <= this.__caretIndex) {
            for (; -1 == b.indexOf(c) && 0 < a; )
              (--a, (c = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          } else
            for (; -1 == b.indexOf(c) && a < this.__text.length; )
              (++a, (c = this.__text.charAt(a)));
          return a;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (f && !this.mouseEnabled) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          this.__updateLayout();
          c = this.__renderTransform;
          f = c.a * c.d - c.b * c.c;
          var k =
            0 == f ? -c.tx : (1 / f) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          f = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            k,
            0 == f ? -c.ty : (1 / f) * (c.a * (b - c.ty) + c.b * (c.tx - a)),
          )
            ? (null != d && d.push(h), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          this.__getRenderTransform();
          this.__updateLayout();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            f =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            f,
            0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a)),
          )
            ? !0
            : !1;
        },
        __replaceSelectedText: function (a, b) {
          null == b && (b = !0);
          null == a && (a = '');
          if ('' != a || this.__selectionIndex != this.__caretIndex) {
            var c =
                this.__caretIndex < this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex,
              d =
                this.__caretIndex > this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex;
            if (
              !(
                c == d &&
                0 < this.__textEngine.maxChars &&
                this.__text.length == this.__textEngine.maxChars
              )
            ) {
              c > this.__text.length && (c = this.__text.length);
              d > this.__text.length && (d = this.__text.length);
              if (d < c) {
                var f = d;
                d = c;
                c = f;
              }
              0 > c && (c = 0);
              this.__replaceText(c, d, a, b);
            }
          }
        },
        __replaceText: function (a, b, c, d) {
          if (!(b < a || 0 > a || b > this.__text.length || null == c)) {
            d &&
              ((c = this.__textEngine.restrictText(c)),
              0 < this.__textEngine.maxChars &&
                ((d =
                  this.__textEngine.maxChars - this.__text.length + (b - a)),
                0 >= d ? (c = '') : d < c.length && (c = N.substr(c, 0, d))));
            this.__updateText(
              this.__text.substring(0, a) + c + this.__text.substring(b),
            );
            d = c.length - (b - a);
            for (
              var f = 0, h;
              f < this.__textEngine.textFormatRanges.get_length();

            ) {
              h = this.__textEngine.textFormatRanges.get(f);
              if (a == b)
                h.start == h.end
                  ? 0 != h.start
                    ? Ga.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 2184,
                          className: 'openfl.text.TextField',
                          methodName: '__replaceText',
                        },
                      )
                    : (h.end += d)
                  : h.end >= a &&
                    (h.start >= a
                      ? ((h.start += d), (h.end += d))
                      : h.start < a && h.end >= b && (h.end += d));
              else if (h.end > a)
                if (h.start > b) ((h.start += d), (h.end += d));
                else if (h.start <= a && h.end > b) h.end += d;
                else if (h.start >= a && h.end <= b) {
                  h = this.__textEngine.textFormatRanges;
                  h.__tempIndex = f--;
                  for (var k = 0, n = []; k < n.length; ) {
                    var p = n[k++];
                    h.insertAt(h.__tempIndex, p);
                    h.__tempIndex++;
                  }
                  h.splice(h.__tempIndex, 1);
                } else
                  h.end > b && h.start > a && h.start <= b
                    ? ((h.start = a), (h.end += d))
                    : h.start < a && h.end > a && h.end <= b && (h.end = a);
              ++f;
            }
            0 == this.__textEngine.textFormatRanges.get_length()
              ? this.__textEngine.textFormatRanges.push(
                  new od(this.get_defaultTextFormat().clone(), 0, c.length),
                )
              : a == b && 0 < this.__textEngine.textFormatRanges.get(0).start
                ? this.__textEngine.textFormatRanges.unshift(
                    new od(
                      this.get_defaultTextFormat().clone(),
                      0,
                      this.__textEngine.textFormatRanges.get(0).start,
                    ),
                  )
                : a != b &&
                  this.__textEngine.textFormatRanges.get(
                    this.__textEngine.textFormatRanges.get_length() - 1,
                  ).end < this.__text.length &&
                  this.__textEngine.textFormatRanges.push(
                    new od(
                      this.get_defaultTextFormat().clone(),
                      this.__textEngine.textFormatRanges.get(
                        this.__textEngine.textFormatRanges.get_length() - 1,
                      ).end,
                      this.__text.length,
                    ),
                  );
            this.__selectionIndex = this.__caretIndex = a + c.length;
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __startCursorTimer: function () {
          1 == this.get_type()
            ? (this.__inputEnabled &&
                ((this.__cursorTimer = Pf.delay(
                  l(this, this.__startCursorTimer),
                  600,
                )),
                (this.__showCursor = !this.__showCursor)),
              (this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()))
            : this.get_selectable() &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __startTextInput: function () {
          0 > this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex = this.__text.length);
          (S.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__enableInput();
        },
        __stopCursorTimer: function () {
          null != this.__cursorTimer &&
            (this.__cursorTimer.stop(), (this.__cursorTimer = null));
          this.__showCursor &&
            ((this.__showCursor = !1),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __stopTextInput: function () {
          (S.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__disableInput();
        },
        __updateLayout: function () {
          if (this.__layoutDirty) {
            var a = this.__textEngine.width;
            this.__textEngine.update();
            if (2 != this.__textEngine.autoSize) {
              if (this.__textEngine.width != a)
                switch (this.__textEngine.autoSize) {
                  case 0:
                    this.set_x(
                      this.get_x() + (a - this.__textEngine.width) / 2,
                    );
                    break;
                  case 3:
                    this.set_x(this.get_x() + (a - this.__textEngine.width));
                }
              this.__textEngine.getBounds();
            }
            this.__layoutDirty = !1;
            this.setSelection(this.__selectionIndex, this.__caretIndex);
          }
        },
        __updateMouseDrag: function () {
          if (null != this.stage) {
            var a = this.getBounds(this);
            this.get_mouseX() > a.width - 1
              ? this.set_scrollH(
                  this.get_scrollH() +
                    (Math.max(
                      Math.min(0.1 * (this.get_mouseX() - a.width), 10),
                      1,
                    ) |
                      0),
                )
              : 1 > this.get_mouseX() &&
                this.set_scrollH(
                  this.get_scrollH() -
                    (Math.max(Math.min(-0.1 * this.get_mouseX(), 10), 1) | 0),
                );
            this.__mouseScrollVCounter++;
            this.__mouseScrollVCounter > this.stage.get_frameRate() / 10 &&
              (this.get_mouseY() > a.height - 2
                ? this.set_scrollV(
                    Math.min(
                      this.get_scrollV() +
                        Math.max(
                          Math.min(0.03 * (this.get_mouseY() - a.height), 5),
                          1,
                        ),
                      this.get_maxScrollV(),
                    ) | 0,
                  )
                : 2 > this.get_mouseY() &&
                  this.set_scrollV(
                    this.get_scrollV() -
                      (Math.max(Math.min(-0.03 * this.get_mouseY(), 5), 1) | 0),
                  ),
              (this.__mouseScrollVCounter = 0));
            this.stage_onMouseMove(null);
          }
        },
        __updateScrollH: function () {
          this.__updateLayout();
          var a = this.getBounds(this);
          if (this.get_textWidth() <= a.width - 4) this.set_scrollH(0);
          else {
            var b = this.get_scrollH();
            if (
              0 == this.__caretIndex ||
              this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) ==
                this.__caretIndex
            )
              b = 0;
            else {
              var c = na.__pool.get(),
                d = !1;
              this.__caretIndex < this.__text.length &&
                (d = this.__getCharBoundaries(this.__caretIndex, c));
              d ||
                (this.__getCharBoundaries(this.__caretIndex - 1, c),
                (c.x += c.width));
              for (; c.x < b && 0 < b; ) b -= 24;
              for (; c.x > b + a.width - 4; ) b += 24;
              na.__pool.release(c);
            }
            0 < b &&
              1 != this.get_type() &&
              ((c = this.getLineLength(
                this.getLineIndexOfChar(this.__caretIndex),
              )),
              this.get_scrollH() + a.width - 4 > c &&
                this.set_scrollH(Math.ceil(c - a.width + 4)));
            0 > b
              ? this.set_scrollH(0)
              : b > this.get_maxScrollH()
                ? this.set_scrollH(this.get_maxScrollH())
                : this.set_scrollH(b);
          }
        },
        __updateScrollV: function () {
          this.__updateLayout();
          if (this.get_textHeight() <= this.get_height() - 4)
            this.set_scrollV(1);
          else {
            var a = this.getLineIndexOfChar(this.__caretIndex);
            -1 == a &&
              0 < this.__caretIndex &&
              (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
            if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
            else if (a + 1 > this.get_bottomScrollV()) {
              var b = 0;
              for (
                a >= this.__textEngine.lineHeights.get_length() &&
                (a = this.__textEngine.lineHeights.get_length() - 1);
                0 <= a;

              ) {
                b += this.__textEngine.lineHeights.get(a);
                if (b > this.get_height() - 4) {
                  a += 0 > b - this.get_height() ? 1 : 2;
                  break;
                }
                --a;
              }
              this.set_scrollV(a);
            } else this.set_scrollV(this.get_scrollV());
          }
        },
        __updateText: function (a) {
          S.__supportDOM &&
            this.__renderedOnCanvasWhileOnDOM &&
            (this.__forceCachedBitmapUpdate = this.__text != a);
          this.__textEngine.set_text(a);
          this.__text = this.__textEngine.text;
          null != this.stage && this.stage.get_focus() == this
            ? (this.__text.length < this.__selectionIndex &&
                (this.__selectionIndex = this.__text.length),
              this.__text.length < this.__caretIndex &&
                (this.__caretIndex = this.__text.length))
            : this.__isHTML
              ? (this.__selectionIndex = this.__caretIndex = this.__text.length)
              : (this.__caretIndex = this.__selectionIndex = 0);
          if (
            !this.__displayAsPassword ||
            (S.__supportDOM && !this.__renderedOnCanvasWhileOnDOM)
          )
            this.__textEngine.set_text(this.__text);
          else {
            a = '';
            for (var b = 0, c = this.get_text().length; b < c; )
              (b++, (a += '*'));
            this.__textEngine.set_text(a);
          }
        },
        __updateTransforms: function (a) {
          xa.prototype.__updateTransforms.call(this, a);
          a = this.__renderTransform;
          var b = this.__offsetX,
            c = this.__offsetY;
          a.tx = b * a.a + c * a.c + a.tx;
          a.ty = b * a.b + c * a.d + a.ty;
        },
        set_autoSize: function (a) {
          a != this.__textEngine.autoSize &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.autoSize = a);
        },
        set_background: function (a) {
          a != this.__textEngine.background &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.background = a);
        },
        set_backgroundColor: function (a) {
          a != this.__textEngine.backgroundColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.backgroundColor = a);
        },
        set_border: function (a) {
          a != this.__textEngine.border &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.border = a);
        },
        set_borderColor: function (a) {
          a != this.__textEngine.borderColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.borderColor = a);
        },
        get_bottomScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_bottomScrollV();
        },
        get_caretIndex: function () {
          return this.__caretIndex;
        },
        get_defaultTextFormat: function () {
          return this.__textFormat.clone();
        },
        set_defaultTextFormat: function (a) {
          this.__textFormat.__merge(a);
          this.__dirty = this.__layoutDirty = !0;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return a;
        },
        get_displayAsPassword: function () {
          return this.__displayAsPassword;
        },
        get_height: function () {
          this.__updateLayout();
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          a != this.__textEngine.height &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.height = a));
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        get_htmlText: function () {
          return this.__isHTML ? this.__htmlText : this.__text;
        },
        set_htmlText: function (a) {
          if (null == a)
            throw (
              (a = new Cf('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          (this.__isHTML && this.__text == a) ||
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          this.__isHTML = !0;
          this.condenseWhite && (a = a.replace(/\s+/g, ' '));
          this.__htmlText = a;
          a = La.parse(
            a,
            this.get_multiline(),
            this.__styleSheet,
            this.__textFormat,
            this.__textEngine.textFormatRanges,
          );
          this.__updateText(a);
          return a;
        },
        get_length: function () {
          return null != this.__text ? this.__text.length : 0;
        },
        get_maxScrollH: function () {
          this.__updateLayout();
          return this.__textEngine.maxScrollH;
        },
        get_maxScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_maxScrollV();
        },
        get_mouseWheelEnabled: function () {
          return this.__mouseWheelEnabled;
        },
        get_multiline: function () {
          return this.__textEngine.multiline;
        },
        get_numLines: function () {
          this.__updateLayout();
          return this.__textEngine.numLines;
        },
        set_restrict: function (a) {
          this.__textEngine.restrict != a &&
            (this.__textEngine.set_restrict(a), this.__updateText(this.__text));
          return a;
        },
        get_scrollH: function () {
          return this.__textEngine.scrollH;
        },
        set_scrollH: function (a) {
          this.__updateLayout();
          a > this.__textEngine.maxScrollH &&
            (a = this.__textEngine.maxScrollH);
          0 > a && (a = 0);
          a != this.__textEngine.scrollH &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.scrollH = a),
            this.dispatchEvent(new wa('scroll')));
          return this.__textEngine.scrollH;
        },
        get_scrollV: function () {
          return this.__textEngine.get_scrollV();
        },
        set_scrollV: function (a) {
          this.__updateLayout();
          a > this.__textEngine.get_maxScrollV() &&
            (a = this.__textEngine.get_maxScrollV());
          1 > a && (a = 1);
          if (
            a != this.__textEngine.get_scrollV() ||
            0 == this.__textEngine.get_scrollV()
          )
            ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()),
              this.__textEngine.set_scrollV(a),
              this.dispatchEvent(new wa('scroll')));
          return this.__textEngine.get_scrollV();
        },
        get_selectable: function () {
          return this.__textEngine.selectable;
        },
        set_selectable: function (a) {
          a != this.__textEngine.selectable &&
            1 == this.get_type() &&
            (null != this.stage && this.stage.get_focus() == this
              ? this.__startTextInput()
              : a || this.__stopTextInput());
          return (this.__textEngine.selectable = a);
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? 1 == this.__textEngine.type
            : this.__tabEnabled;
        },
        get_text: function () {
          return this.__text;
        },
        set_text: function (a) {
          if (null == a)
            throw (
              (a = new Cf('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (null != this.__styleSheet) return this.set_htmlText(a);
          if (this.__isHTML || this.__text != a)
            ((this.__layoutDirty = this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else return a;
          if (1 < this.__textEngine.textFormatRanges.get_length()) {
            var b = this.__textEngine.textFormatRanges,
              c = this.__textEngine.textFormatRanges.get_length() - 1;
            b.__tempIndex = 1;
            for (var d = 0, f = []; d < f.length; ) {
              var h = f[d++];
              b.insertAt(b.__tempIndex, h);
              b.__tempIndex++;
            }
            b.splice(b.__tempIndex, c);
          }
          b = this.__textEngine.textFormatRanges.get(0);
          b.format = this.__textFormat;
          b.start = 0;
          b.end = a.length;
          this.__isHTML = !1;
          this.__updateText(a);
          return a;
        },
        get_textWidth: function () {
          this.__updateLayout();
          return this.__textEngine.textWidth;
        },
        get_textHeight: function () {
          this.__updateLayout();
          return this.__textEngine.textHeight;
        },
        get_type: function () {
          return this.__textEngine.type;
        },
        set_type: function (a) {
          null != this.__styleSheet && (a = 0);
          a != this.__textEngine.type &&
            ((this.__textEngine.type = a),
            1 == a
              ? (this.addEventListener(
                  'addedToStage',
                  l(this, this.this_onAddedToStage),
                ),
                this.this_onFocusIn(null),
                (this.__textEngine.__useIntAdvances = !0))
              : (this.removeEventListener(
                  'addedToStage',
                  l(this, this.this_onAddedToStage),
                ),
                this.__stopTextInput(),
                (this.__textEngine.__useIntAdvances = null)),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__textEngine.type;
        },
        get_width: function () {
          this.__updateLayout();
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          a != this.__textEngine.width &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.width = a));
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_wordWrap: function (a) {
          a != this.__textEngine.wordWrap &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.wordWrap = a);
        },
        get_x: function () {
          return this.__transform.tx + this.__offsetX;
        },
        set_x: function (a) {
          a != this.__transform.tx + this.__offsetX &&
            this.__setTransformDirty();
          this.__transform.tx = a - this.__offsetX;
          return a;
        },
        get_y: function () {
          return this.__transform.ty + this.__offsetY;
        },
        set_y: function (a) {
          a != this.__transform.ty + this.__offsetY &&
            this.__setTransformDirty();
          this.__transform.ty = a - this.__offsetY;
          return a;
        },
        stage_onMouseMove: function (a) {
          if (
            null != this.stage &&
            this.get_selectable() &&
            0 <= this.__selectionIndex &&
            (this.__updateLayout(),
            (a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  )),
            a != this.__caretIndex)
          ) {
            this.__caretIndex = a;
            if (this.__wordSelection || this.__lineSelection)
              this.__selectionIndex = this.__getOppositeIdentifierBound(
                this.__specialSelectionInitialIndex,
                this.__lineSelection,
              );
            a = !0;
            S.__supportDOM &&
              (this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0),
              (a = !1));
            a &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          }
        },
        stage_onMouseUp: function (a) {
          a = a.currentTarget;
          a.removeEventListener('enterFrame', l(this, this.this_onEnterFrame));
          a.removeEventListener('mouseMove', l(this, this.stage_onMouseMove));
          a.removeEventListener('mouseUp', l(this, this.stage_onMouseUp));
          if (this.stage == a && a.get_focus() == this) {
            this.__getWorldTransform();
            this.__updateLayout();
            a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  );
            var b = Math.max(this.__selectionIndex, a) | 0;
            this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
            this.__caretIndex = b;
            this.__wordSelection = this.__lineSelection = !1;
            this.__inputEnabled &&
              (this.this_onFocusIn(null),
              this.__stopCursorTimer(),
              this.__startCursorTimer(),
              S.__supportDOM &&
                this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0));
          }
        },
        this_onAddedToStage: function (a) {
          this.this_onFocusIn(null);
        },
        this_onEnterFrame: function (a) {
          this.__updateMouseDrag();
        },
        this_onFocusIn: function (a) {
          1 == this.get_type() &&
          null != this.stage &&
          this.stage.get_focus() == this
            ? this.__startTextInput()
            : 1 != this.get_type() &&
              this.get_selectable() &&
              null != this.stage &&
              this.stage.get_focus() == this &&
              this.__startCursorTimer();
        },
        this_onFocusOut: function (a) {
          this.__stopCursorTimer();
          this.__stopTextInput();
          this.__selectionIndex != this.__caretIndex &&
            ((this.__selectionIndex = this.__caretIndex),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        this_onKeyDown: function (a) {
          this.get_selectable() &&
            1 != this.get_type() &&
            67 == a.keyCode &&
            (a.commandKey || a.ctrlKey) &&
            (this.__caretIndex == this.__selectionIndex ||
              this.get_displayAsPassword() ||
              zc.set_text(
                this.__text.substring(this.__caretIndex, this.__selectionIndex),
              ));
        },
        this_onMouseDown: function (a) {
          if (this.get_selectable() || 1 == this.get_type()) {
            this.__lineSelection = 3 == a.clickCount;
            this.__wordSelection = 2 == a.clickCount;
            if (this.__lineSelection) {
              var b = this.__caretIndex;
              this.__caretIndex = this.__getPositionByIdentifier(
                a.stageX + this.get_scrollH(),
                a.stageY,
                !0,
              );
              this.__selectionIndex = this.__getOppositeIdentifierBound(b, !0);
            } else
              this.__wordSelection
                ? ((b = this.__caretIndex),
                  (this.__caretIndex = this.__getPositionByIdentifier(
                    a.stageX + this.get_scrollH(),
                    a.stageY,
                    !1,
                  )),
                  (this.__selectionIndex = this.__getOppositeIdentifierBound(
                    b,
                    !1,
                  )),
                  (this.__specialSelectionInitialIndex = b))
                : (this.__selectionIndex = this.__caretIndex =
                    this.__getPosition(
                      this.get_mouseX() + this.get_scrollH(),
                      this.get_mouseY(),
                    ));
            this.setSelection(this.__caretIndex, this.__selectionIndex);
            this.__updateLayout();
            S.__supportDOM ||
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
            null != this.stage &&
              (this.stage.addEventListener(
                'enterFrame',
                l(this, this.this_onEnterFrame),
              ),
              this.stage.addEventListener(
                'mouseMove',
                l(this, this.stage_onMouseMove),
              ),
              this.stage.addEventListener(
                'mouseUp',
                l(this, this.stage_onMouseUp),
              ));
          }
        },
        this_onMouseWheel: function (a) {
          this.get_mouseWheelEnabled() &&
            this.set_scrollV(
              Math.min(this.get_scrollV() - a.delta, this.get_maxScrollV()) | 0,
            );
        },
        window_onKeyDown: function (a, b) {
          switch (a) {
            case 8:
              this.__selectionIndex == this.__caretIndex &&
                0 < this.__caretIndex &&
                (this.__selectionIndex = this.__caretIndex - 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new wa('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 97:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)) &&
                this.setSelection(0, this.__text.length);
              break;
            case 99:
              if (Ya.get_metaKey(b) || Ya.get_ctrlKey(b))
                this.__caretIndex == this.__selectionIndex ||
                  this.get_displayAsPassword() ||
                  zc.set_text(
                    this.__text.substring(
                      this.__caretIndex,
                      this.__selectionIndex,
                    ),
                  );
              break;
            case 120:
              (!Ya.get_metaKey(b) && !Ya.get_ctrlKey(b)) ||
                this.__caretIndex == this.__selectionIndex ||
                this.get_displayAsPassword() ||
                (zc.set_text(
                  this.__text.substring(
                    this.__caretIndex,
                    this.__selectionIndex,
                  ),
                ),
                this.replaceSelectedText(''),
                this.dispatchEvent(new wa('change', !0)));
              break;
            case 127:
              this.__selectionIndex == this.__caretIndex &&
                this.__caretIndex < this.__text.length &&
                (this.__selectionIndex = this.__caretIndex + 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new wa('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 1073741898:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretBeginningOfLine(),
                Ya.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741901:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretEndOfLine(),
                Ya.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741903:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)
                  ? this.__caretBeginningOfNextLine()
                  : this.__caretNextCharacter(),
                Ya.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741904:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)
                  ? this.__caretBeginningOfPreviousLine()
                  : this.__caretPreviousCharacter(),
                Ya.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741905:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretNextLine(),
                Ya.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741906:
              this.get_selectable() &&
                (Ya.get_metaKey(b) || Ya.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretPreviousLine(),
                Ya.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 13:
            case 1073741912:
              this.__textEngine.multiline
                ? ((a = new Ce('textInput', !0, !0, '\n')),
                  this.dispatchEvent(a),
                  a.isDefaultPrevented() ||
                    (this.__replaceSelectedText('\n', !0),
                    this.dispatchEvent(new wa('change', !0))))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
          }
        },
        window_onTextInput: function (a) {
          this.__replaceSelectedText(a, !0);
          this.dispatchEvent(new wa('change', !0));
        },
        __class__: sc,
        __properties__: v(xa.prototype.__properties__, {
          set_wordWrap: 'set_wordWrap',
          set_restrict: 'set_restrict',
          set_borderColor: 'set_borderColor',
          set_border: 'set_border',
          set_backgroundColor: 'set_backgroundColor',
          set_background: 'set_background',
          set_autoSize: 'set_autoSize',
          set_type: 'set_type',
          get_type: 'get_type',
          get_textWidth: 'get_textWidth',
          get_textHeight: 'get_textHeight',
          set_text: 'set_text',
          get_text: 'get_text',
          set_selectable: 'set_selectable',
          get_selectable: 'get_selectable',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_scrollH: 'set_scrollH',
          get_scrollH: 'get_scrollH',
          get_numLines: 'get_numLines',
          get_multiline: 'get_multiline',
          get_mouseWheelEnabled: 'get_mouseWheelEnabled',
          get_maxScrollV: 'get_maxScrollV',
          get_maxScrollH: 'get_maxScrollH',
          get_length: 'get_length',
          set_htmlText: 'set_htmlText',
          get_htmlText: 'get_htmlText',
          get_displayAsPassword: 'get_displayAsPassword',
          set_defaultTextFormat: 'set_defaultTextFormat',
          get_defaultTextFormat: 'get_defaultTextFormat',
          get_caretIndex: 'get_caretIndex',
          get_bottomScrollV: 'get_bottomScrollV',
        }),
      });
      var We = function (a, b, c, d, f, h, k) {
        sc.call(this);
        this.onSubmit = h;
        this.onCancel = k;
        this.set_defaultTextFormat(b);
        this.set_type(1);
        this.set_text(a);
        this.set_border(!0);
        this.set_borderColor(K.colorDark);
        this.set_background(!0);
        this.set_backgroundColor(K.colorPaper);
        this.set_autoSize(null != f ? f : 0);
        this.addEventListener('focusOut', l(this, this.onFocusOut));
        this.addEventListener('keyDown', l(this, this.onKeyDown));
        this.addEventListener('keyUp', l(this, this.onKeyUp));
        d.addChild(this);
        this.stage.set_focus(this);
        this.set_x(c.x - this.get_width() / 2);
        this.set_y(c.y - this.get_height() / 2);
      };
      g['com.watabou.mfcg.ui.EditInPlace'] = We;
      We.__name__ = 'com.watabou.mfcg.ui.EditInPlace';
      We.fromTextField = function (a, b, c, d) {
        var f = a.get_defaultTextFormat(),
          h = a.get_scaleX();
        f.size = (f.size * h) | 0;
        h = b.globalToLocal(
          a.localToGlobal(new I(a.get_width() / 2 / h, a.get_height() / 2 / h)),
        );
        a.set_visible(!1);
        return new We(
          a.get_text(),
          f,
          h,
          b,
          c,
          function (b) {
            a.set_visible(!0);
            d(b);
          },
          function () {
            a.set_visible(!0);
          },
        );
      };
      We.__super__ = sc;
      We.prototype = v(sc.prototype, {
        onFocusOut: function (a) {
          this.submit();
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.submit();
              break;
            case 27:
              this.cancel();
          }
          a.stopPropagation();
        },
        onKeyUp: function (a) {
          a.stopPropagation();
        },
        finish: function () {
          this.removeEventListener('focusOut', l(this, this.onFocusOut));
          this.removeEventListener('keyDown', l(this, this.onKeyDown));
          this.parent.removeChild(this);
        },
        submit: function () {
          this.finish();
          if (null != this.onSubmit) this.onSubmit(this.get_text());
        },
        cancel: function () {
          this.finish();
          if (null != this.onCancel) this.onCancel();
        },
        __class__: We,
      });
      var Nd = function (a, b, c) {
        null == c && (c = !1);
        S.call(this);
        this.__drawableType = 2;
        this.__bitmapData = a;
        this.pixelSnapping = b;
        this.smoothing = c;
        null == b && (this.pixelSnapping = 1);
      };
      g['openfl.display.Bitmap'] = Nd;
      Nd.__name__ = 'openfl.display.Bitmap';
      Nd.__super__ = S;
      Nd.prototype = v(S.prototype, {
        __enterFrame: function (a) {
          null == this.__bitmapData ||
            null == this.__bitmapData.image ||
            this.__bitmapData.image.version == this.__imageVersion ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          null != this.__bitmapData
            ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height)
            : c.setTo(0, 0, 0, 0);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            null == this.__bitmapData ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            n = k.a * k.d - k.b * k.c;
          c = 0 == n ? -k.tx : (1 / n) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          n = k.a * k.d - k.b * k.c;
          a = 0 == n ? -k.ty : (1 / n) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          if (
            0 < c &&
            0 < a &&
            c <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
          ) {
            if (null != this.__scrollRect && !this.__scrollRect.contains(c, a))
              return !1;
            null == d || f || d.push(h);
            return !0;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          if (null == this.__bitmapData) return !1;
          this.__getRenderTransform();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            f =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          a = 0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
          return 0 < f &&
            0 < a &&
            f <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
            ? !0
            : !1;
        },
        get_bitmapData: function () {
          return this.__bitmapData;
        },
        set_bitmapData: function (a) {
          this.__bitmapData = a;
          this.smoothing = !1;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          this.__imageVersion = -1;
          return this.__bitmapData;
        },
        set_height: function (a) {
          null != this.__bitmapData
            ? this.set_scaleY(a / this.__bitmapData.height)
            : this.set_scaleY(0);
          return a;
        },
        set_width: function (a) {
          null != this.__bitmapData
            ? this.set_scaleX(a / this.__bitmapData.width)
            : this.set_scaleX(0);
          return a;
        },
        __class__: Nd,
        __properties__: v(S.prototype.__properties__, {
          set_bitmapData: 'set_bitmapData',
          get_bitmapData: 'get_bitmapData',
        }),
      });
      var ih = function (a, b, c, d) {
        null == d && (d = 4);
        this.matrix = new ua();
        this.obj = a;
        this.size = c;
        this.quality = d;
        this.color = new Tb();
        this.color.set_color(b);
        Nd.call(this);
        this.update(d);
      };
      g['com.watabou.mfcg.ui.Outline'] = ih;
      ih.__name__ = 'com.watabou.mfcg.ui.Outline';
      ih.__super__ = Nd;
      ih.prototype = v(Nd.prototype, {
        update: function (a) {
          null == a && (a = 0);
          null != this.get_bitmapData() && this.get_bitmapData().dispose();
          0 == a && (a = this.quality);
          var b = this.obj.getRect(this.obj),
            c = new Fb(Math.ceil(b.width * a), Math.ceil(b.height * a), !0, 0);
          this.matrix.identity();
          this.matrix.translate(-b.get_left(), -b.get_top());
          this.matrix.scale(a, a);
          c.draw(this.obj, this.matrix, null, null, null, !0);
          c.colorTransform(c.rect, this.color);
          for (
            var d = new Fb(
                Math.ceil((b.width + 2 * this.size) * a),
                Math.ceil((b.height + 2 * this.size) * a),
                !0,
                0,
              ),
              f = Math.ceil(a * this.size * 6),
              h = 0;
            h < f;

          ) {
            var k = h++;
            k = I.polar(this.size, (k / f) * 2 * Math.PI);
            k.offset(this.size, this.size);
            this.matrix.identity();
            this.matrix.translate(k.x * a, k.y * a);
            d.draw(c, this.matrix, null, null, null, !0);
          }
          c.dispose();
          this.set_bitmapData(d);
          this.smoothing = !0;
          this.set_scaleX(this.set_scaleY(1 / a));
          this.set_x(this.obj.get_x() + b.get_left() - this.size);
          this.set_y(this.obj.get_y() + b.get_top() - this.size);
        },
        __class__: ih,
      });
      var vb = function () {};
      g['com.watabou.mfcg.ui.Text'] = vb;
      vb.__name__ = 'com.watabou.mfcg.ui.Text';
      vb.get = function (a, b) {
        var c = new sc();
        c.set_defaultTextFormat(b);
        c.set_autoSize(1);
        c.set_text(a);
        return c;
      };
      vb.getFormat = function (a, b, c, d) {
        null == d && (d = 1);
        null != a && (b = ba.get(a, b));
        a = null != b.face ? b.face : ac.getFont(b.embedded).name;
        d = Math.round(b.size * d * vb.getMultiplier());
        return new we(a, d, c, b.bold, b.italic);
      };
      vb.getMultiplier = function () {
        switch (ba.get('text_size', 1)) {
          case 0:
            return 0.5;
          case 1:
            return 0.75;
          default:
            return 1;
        }
      };
      var le = function () {
        this.isAwake = !1;
        this.awake = new ec();
        le.inst = this;
        ka.call(this);
        this.border = new Nd(new Fb(1, 1, !1, D.black));
        this.addChild(this.border);
        this.bg = new Nd(new Fb(1, 1, !1, D.white));
        this.bg.set_x(1);
        this.bg.set_y(1);
        this.addChild(this.bg);
        var a = D.black;
        null == a && (a = 0);
        this.tf = vb.get('', new we(ac.getFont('ui_font').name, 18, a));
        this.tf.set_x(6);
        this.tf.set_y(6);
        this.addChild(this.tf);
        cl.onActivate(this, l(this, this.activation));
        this.set(null);
      };
      g['com.watabou.mfcg.ui.Tooltip'] = le;
      le.__name__ = 'com.watabou.mfcg.ui.Tooltip';
      le.__super__ = ka;
      le.prototype = v(ka.prototype, {
        activation: function (a) {
          a
            ? (this.stage.addEventListener(
                'mouseMove',
                l(this, this.onMouseMove),
              ),
              this.stage.addEventListener(
                'mouseDown',
                l(this, this.onMouseMove),
              ),
              (this.timer = rb.wait(5, l(this, this.fallAsleep))))
            : (this.stage.removeEventListener(
                'mouseMove',
                l(this, this.onMouseMove),
              ),
              this.stage.removeEventListener(
                'mouseDown',
                l(this, this.onMouseMove),
              ),
              null != this.timer && rb.cancel(this.timer));
        },
        onMouseMove: function (a) {
          this.set_x(this.parent.get_mouseX() + 16 / this.parent.get_scaleX());
          this.set_y(this.parent.get_mouseY());
          a.updateAfterEvent();
          this.wakeUp();
        },
        fallAsleep: function () {
          this.awake.dispatch((this.isAwake = !1));
          this.timer = null;
        },
        wakeUp: function () {
          this.isAwake || this.awake.dispatch((this.isAwake = !0));
          null != this.timer && rb.cancel(this.timer);
          this.timer = rb.wait(5, l(this, this.fallAsleep));
        },
        set: function (a) {
          this.set_visible(null != a);
          if (this.get_visible()) {
            this.tf.set_text(a);
            a = (this.tf.get_width() + 12) | 0;
            var b = (this.tf.get_height() + 12) | 0;
            this.border.set_width(a);
            this.border.set_height(b);
            this.bg.set_width(a - 2);
            this.bg.set_height(b - 2);
          }
        },
        __class__: le,
      });
      var Mf = function (a) {
        var b = this;
        ic.call(this, ['OK', 'Cancel']);
        this.emblem = a;
        a = Mf.EDITOR;
        null != ra.coa && (a += '?coa=' + ra.coa);
        var c = new fb();
        c.setMargins(12, 10);
        c.add(
          new Ib(
            'Open <a href="' +
              a +
              '"><b>Armoria editor</b></a> and design your emblem.<br/><i>Copy COA String</i> there and paste it here.',
          ),
        );
        this.input = new tc();
        this.input.enter.add(function (a) {
          b.onEnter();
        });
        this.input.set_prompt('COA');
        this.input.halign = 'fill';
        c.add(this.input);
        this.add(c);
        null != ra.coa && this.input.set_text(ra.coa);
      };
      g['com.watabou.mfcg.ui.forms.EmblemForm'] = Mf;
      Mf.__name__ = 'com.watabou.mfcg.ui.forms.EmblemForm';
      Mf.__super__ = ic;
      Mf.prototype = v(ic.prototype, {
        getTitle: function () {
          return 'Emblem';
        },
        onShow: function () {
          this.input.selecteAll();
          this.stage.set_focus(this.input);
        },
        onEnter: function () {
          this.onButton('OK');
        },
        onButton: function (a) {
          'OK' == a && this.update();
          ic.prototype.onButton.call(this, a);
        },
        update: function () {
          ra.setCOA('' != this.input.get_text() ? this.input.get_text() : null);
        },
        __class__: Mf,
      });
      var gh = function (a, b) {
        null == b && (b = !0);
        var c = this;
        ic.call(this, ['OK', b ? 'Cancel' : 'Delete']);
        this.landmark = a;
        this.creating = b;
        b = new ed();
        var d = new Ib('Name');
        d.valign = 'center';
        b.add(d);
        this.input = new tc(a.name);
        this.input.set_width(200);
        this.input.enter.add(function (a) {
          c.onButton('OK');
        });
        b.add(this.input);
        this.add(b);
      };
      g['com.watabou.mfcg.ui.forms.MarkerForm'] = gh;
      gh.__name__ = 'com.watabou.mfcg.ui.forms.MarkerForm';
      gh.__super__ = ic;
      gh.prototype = v(ic.prototype, {
        getTitle: function () {
          return 'Landmark';
        },
        onShow: function () {
          this.stage.set_focus(this.input);
        },
        onButton: function (a) {
          var b = Ub.instance;
          switch (a) {
            case 'Cancel':
              this.creating && b.removeLandmark(this.landmark);
              break;
            case 'Delete':
              b.removeLandmark(this.landmark);
              break;
            case 'OK':
              ((this.landmark.name = this.input.get_text()),
                Bb.landmarksChanged.dispatch());
          }
          this.dialog.hide();
        },
        __class__: gh,
      });
      var oi = function (a) {
        U.call(this);
        var b = D.format(D.uiFont, D.smallSize, D.black);
        b.align = 0;
        this.tf = ld.get('', b);
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.update(a);
      };
      g['com.watabou.mfcg.ui.forms.TownInfo'] = oi;
      oi.__name__ = 'com.watabou.mfcg.ui.forms.TownInfo';
      oi.__super__ = U;
      oi.prototype = v(U.prototype, {
        update: function (a) {
          var b = a.countBuildings();
          a = a.bp.pop;
          0 == a && (a = 6 * b);
          var c = Math.pow(10, Math.floor(Math.log(a) / Math.log(10)) - 1);
          a = (Math.ceil(a / c) * c) | 0;
          this.tf.set_autoSize(1);
          this.tf.set_text('Number of buildings: ' + b + '\nPopulation: ~' + a);
          b = this.tf.get_width();
          a = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(b);
          this.tf.set_height(Math.ceil(a));
          this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4 - 1);
        },
        __class__: oi,
      });
      var mk = function () {
        var a = this;
        ic.call(this, ['Copy', 'Generate']);
        var b = new fb(),
          c = new fb();
        c.setMargins(0, 0);
        c.add(new Ib('Copy this URL to restore the current map later.'));
        c.add(new Ib('Enter a stored URL here to restore a map.'));
        b.add(c);
        this.input = new tc(Aa.getURL());
        this.input.enter.add(function (b) {
          a.onEnter();
        });
        this.input.set_prompt('URL');
        this.input.set_width(400);
        b.add(this.input);
        this.add(b);
        Bb.newModel.add(l(this, this.onNewModel));
      };
      g['com.watabou.mfcg.ui.forms.URLForm'] = mk;
      mk.__name__ = 'com.watabou.mfcg.ui.forms.URLForm';
      mk.__super__ = ic;
      mk.prototype = v(ic.prototype, {
        getTitle: function () {
          return 'Permalink';
        },
        onShow: function () {
          this.highlight();
        },
        onHide: function () {
          Bb.newModel.remove(l(this, this.onNewModel));
        },
        onEnter: function () {
          this.onButton('Generate');
        },
        onButton: function (a) {
          switch (a) {
            case 'Copy':
              fk.write(Aa.getURL());
              q.show('URL was copied to clipboard');
              this.highlight();
              break;
            case 'Generate':
              this.generate();
              this.highlight();
              break;
            default:
              ic.prototype.onButton.call(this, a);
          }
        },
        onNewModel: function (a) {
          this.input.set_text(Aa.getURL());
          this.highlight();
        },
        generate: function () {
          var a = this.input.get_text();
          Aa.fromString(a);
          new Ub(Fd.fromURL());
          Va.switchScene(Ec);
          a = u.findForm(Kd);
          null != a && a.update();
        },
        highlight: function () {
          this.stage.set_focus(this.input);
          this.input.selecteAll();
        },
        __class__: mk,
      });
      var ii = function (a, b, c) {
        null == c && (c = 10);
        this.cuts = [];
        this.minTurnOffset = 1;
        this.poly = a;
        this.minArea = b;
        this.variance = c;
        this.minOffset = Math.sqrt(b);
        this.processCut = l(this, this.detectStraight);
        this.isAtomic = l(this, this.isSmallEnough);
        this.shape = a;
      };
      g['com.watabou.mfcg.utils.Bisector'] = ii;
      ii.__name__ = 'com.watabou.mfcg.utils.Bisector';
      ii.prototype = {
        partition: function () {
          return this.subdivide(this.shape);
        },
        subdivide: function (a) {
          if (this.isAtomic(a)) return [a];
          var b = this.makeCut(a);
          if (1 == b.length) return [a];
          a = [];
          for (var c = 0; c < b.length; ) {
            var d = b[c];
            ++c;
            d = this.subdivide(d);
            for (var f = 0; f < d.length; ) {
              var h = d[f];
              ++f;
              a.push(h);
            }
          }
          return a;
        },
        isSmallEnough: function (a) {
          var b =
            this.minArea *
            Math.pow(
              this.variance,
              Math.abs(
                ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
            );
          return Sa.area(a) < b;
        },
        makeCut: function (a, b) {
          null == b && (b = 0);
          if (10 < b) return [a];
          var c = a.length;
          if (0 < b) {
            var d = I.polar(1, (b / 10) * Math.PI * 2);
            var f = Yc.rotateYX(a, d.y, d.x);
            f = Yc.rotateYX(Gb.aabb(f), -d.y, d.x);
          } else f = Gb.obb(a);
          d = f[0];
          var h = f[1].subtract(d),
            k = f[3].subtract(d);
          if (h.get_length() < k.get_length()) {
            var n = h;
            h = k;
            k = n;
          }
          f = Sa.centroid(a);
          f = wd.project(h, f.subtract(d));
          f =
            (f +
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                3) /
            2;
          var p = new I(d.x + h.x * f, d.y + h.y * f);
          d = -1;
          for (var g = (f = null), q = 0, m = 0, u = c; m < u; ) {
            var r = m++,
              l = a[r];
            n = a[(r + 1) % c];
            var x = n.subtract(l);
            if (
              !(1e-10 > x.get_length()) &&
              ((n = qa.intersectLines(p.x, p.y, k.x, k.y, l.x, l.y, x.x, x.y)),
              null != n && 0 < n.y && 1 > n.y)
            ) {
              var D = x;
              D = D.clone();
              D.normalize(1);
              var w = D;
              D = Math.abs(h.x * w.x + h.y * w.y);
              q < D &&
                ((q = D),
                (d = r),
                (D = n.y),
                (f = new I(l.x + x.x * D, l.y + x.y * D)),
                (g = w));
            }
          }
          g.setTo(-g.y, g.x);
          h = Infinity;
          p = null;
          k = -1;
          m = 0;
          for (u = c; m < u; )
            ((r = m++),
              r != d &&
                ((l = a[r]),
                (n = a[(r + 1) % c]),
                (x = n.subtract(l)),
                1e-10 > x.get_length() ||
                  ((n = qa.intersectLines(
                    f.x,
                    f.y,
                    g.x,
                    g.y,
                    l.x,
                    l.y,
                    x.x,
                    x.y,
                  )),
                  null != n &&
                    0 < n.x &&
                    n.x < h &&
                    0 < n.y &&
                    1 > n.y &&
                    ((h = n.x), (p = x), (k = r)))));
          if (-1 == k)
            throw X.thrown('CRITICAL: A bad poly was provided for besecting');
          m = g.x * p.y - g.y * p.x;
          D = (m * m) / (g.x * g.x + g.y * g.y) / (p.x * p.x + p.y * p.y);
          if (
            0.99 < D &&
            ((m = new I(f.x + g.x * h, f.y + g.y * h)),
            (l = [f, m]),
            (r = this.split(a.slice(), d, k, l)),
            (m = Sa.area(r[0])),
            (u = Sa.area(r[1])),
            Math.max(m / u, u / m) < 2 * this.variance)
          ) {
            this.cuts.push(l);
            if (null != this.getGap) {
              a = Qd.stripe(l, this.getGap(l));
              m = [];
              for (u = 0; u < r.length; )
                ((b = r[u]),
                  ++u,
                  (c = ye.and(b, Z.revert(a), !0)),
                  m.push(null != c ? c : b));
              r = m;
            }
            return r;
          }
          m = this.minOffset / h;
          m =
            0.5 < m
              ? 0.5
              : m +
                (1 - 2 * m) *
                  (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                    (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                    3);
          n = h * m;
          p = new I(f.x + g.x * n, f.y + g.y * n);
          k = -1;
          q = null;
          h = -Infinity;
          m = 0;
          for (u = c; m < u; )
            if (
              ((r = m++),
              r != d &&
                ((l = a[r]),
                (n = a[(r + 1) % c]),
                (x = n.subtract(l)),
                (D = x.get_length()),
                !(1e-10 > D) &&
                  ((n = qa.intersectLines(
                    p.x,
                    p.y,
                    x.y,
                    -x.x,
                    l.x,
                    l.y,
                    x.x,
                    x.y,
                  )),
                  0 < n.x &&
                    0 < n.y &&
                    1 > n.y &&
                    ((w = D = (g.x * x.y - g.y * x.x) / D), h < w))))
            ) {
              for (var z = !0, J = 0, v = c; J < v; ) {
                var y = J++;
                if (
                  y != r &&
                  y != d &&
                  ((D = a[y]),
                  (y = a[(y + 1) % c].subtract(D)),
                  !(1e-10 > y.get_length()) &&
                    ((D = qa.intersectLines(
                      p.x,
                      p.y,
                      x.y,
                      -x.x,
                      D.x,
                      D.y,
                      y.x,
                      y.y,
                    )),
                    null != D && 0 <= D.x && 1 >= D.x && 0 <= D.y && 1 >= D.y))
                ) {
                  z = !1;
                  break;
                }
              }
              z &&
                ((h = w),
                (k = r),
                (r = n.y),
                (q = new I(l.x + x.x * r, l.y + x.y * r)));
            }
          if (null != q) {
            c = [f, p, q];
            l = this.processCut(c);
            m = 1;
            for (u = l.length - 2; m < u; )
              if (((r = m++), !Gb.containsPoint(a, l[r]))) {
                l = c;
                break;
              }
            r = this.split(a.slice(), d, k, l);
            m = Sa.area(r[0]);
            u = Sa.area(r[1]);
            if (Math.max(m / u, u / m) > 2 * this.variance)
              return this.makeCut(a, b + 1);
            this.cuts.push(l);
            if (null != this.getGap) {
              a = Qd.stripe(l, this.getGap(l));
              m = [];
              for (u = 0; u < r.length; )
                ((b = r[u]),
                  ++u,
                  (c = ye.and(b, Z.revert(a), !0)),
                  m.push(null != c ? c : b));
              r = m;
            }
            return r;
          }
          gb.trace('(' + b + ') Failed to make a cut', {
            fileName: 'Source/com/watabou/mfcg/utils/Bisector.hx',
            lineNumber: 281,
            className: 'com.watabou.mfcg.utils.Bisector',
            methodName: 'makeCut',
          });
          return this.makeCut(a, b + 1);
        },
        split: function (a, b, c, d) {
          var f = a[c],
            h = d[0];
          a[b] != h && (b < c && ++c, a.splice(++b, 0, h));
          h = d[d.length - 1];
          f != h && (c < b && ++b, a.splice(++c, 0, h));
          if (b < c) {
            f = a.slice(b + 1, c);
            h = Z.revert(d);
            for (var k = 0; k < h.length; ) {
              var n = h[k];
              ++k;
              f.push(n);
            }
            c = a.slice(c + 1);
            h = a.slice(0, b);
            for (k = 0; k < h.length; ) ((n = h[k]), ++k, c.push(n));
          } else {
            f = a.slice(b + 1);
            h = a.slice(0, c);
            for (k = 0; k < h.length; ) ((n = h[k]), ++k, f.push(n));
            h = Z.revert(d);
            for (k = 0; k < h.length; ) ((n = h[k]), ++k, f.push(n));
            c = a.slice(c + 1, b);
          }
          for (k = 0; k < d.length; ) ((n = d[k]), ++k, c.push(n));
          return [f, c];
        },
        detectStraight: function (a) {
          if (0 < this.minTurnOffset) {
            var b = a[0],
              c = a[2];
            return Math.abs(Sa.area(a)) / I.distance(b, c) < this.minTurnOffset
              ? [b, c]
              : a;
          }
          return a;
        },
        __class__: ii,
      };
      var mf = function () {};
      g['com.watabou.mfcg.utils.Bloater'] = mf;
      mf.__name__ = 'com.watabou.mfcg.utils.Bloater';
      mf.bloat = function (a, b) {
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++;
          h = mf.extrudeEx(a[h], a[(h + 1) % c], b);
          for (var k = 0; k < h.length; ) {
            var n = h[k];
            ++k;
            d.push(n);
          }
        }
        return d;
      };
      mf.extrude = function (a, b, c) {
        var d = a.subtract(b);
        c = d.get_length() / c;
        return 0.3 < c
          ? (d.setTo(-d.y, d.x),
            (c = 0.5 * (1 > c ? c : 1)),
            (d.x *= c),
            (d.y *= c),
            (a = qa.lerp(a, b)),
            (a.x += d.x),
            (a.y += d.y),
            a)
          : null;
      };
      mf.extrudeEx = function (a, b, c) {
        var d = mf.extrude(a, b, c);
        return null == d
          ? [a]
          : mf.extrudeEx(a, d, c).concat(mf.extrudeEx(d, b, c));
      };
      var Zk = function () {};
      g['com.watabou.mfcg.utils.Cutter'] = Zk;
      Zk.__name__ = 'com.watabou.mfcg.utils.Cutter';
      Zk.grid = function (a, b, c, d) {
        null == d && (d = 0);
        if (4 != a.length) throw new Vb('Not a quadrangle!');
        for (var f = [], h = 0, k = b + 1; h < k; ) {
          var n = h++;
          f.push(n / b);
        }
        var p = f;
        f = [];
        h = 0;
        for (k = c + 1; h < k; ) ((n = h++), f.push(n / c));
        var g = f;
        if (0 < d) {
          f = 1;
          for (h = b; f < h; )
            ((n = f++),
              (p[n] +=
                ((((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3 -
                  0.5) /
                  (b - 1)) *
                d));
          f = 1;
          for (h = c; f < h; )
            ((n = f++),
              (g[n] +=
                ((((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3 -
                  0.5) /
                  (c - 1)) *
                d));
        }
        var q = a[0],
          m = a[1],
          u = a[2],
          r = a[3];
        f = [];
        h = 0;
        for (k = c + 1; h < k; ) {
          n = h++;
          var l = qa.lerp(q, r, g[n]);
          n = qa.lerp(m, u, g[n]);
          a = [];
          for (var x = 0, D = b + 1; x < D; )
            ((d = x++), a.push(qa.lerp(l, n, p[d])));
          f.push(a);
        }
        p = f;
        g = [];
        f = 0;
        for (h = c; f < h; )
          for (n = f++, k = 0, a = b; k < a; )
            ((d = k++),
              g.push([p[n][d], p[n][d + 1], p[n + 1][d + 1], p[n + 1][d]]));
        return g;
      };
      var gk = function () {};
      g['com.watabou.mfcg.utils.GraphicsUtils'] = gk;
      gk.__name__ = 'com.watabou.mfcg.utils.GraphicsUtils';
      gk.getMaxArea = function (a, b) {
        null == b && (b = !0);
        var c = 0,
          d = null;
        a instanceof ka
          ? (d = va.__cast(a, ka).get_graphics().__bounds)
          : a instanceof md && (d = va.__cast(a, md).get_graphics().__bounds);
        null != d && (c = d.width * d.height);
        if (b && a instanceof lb)
          for (a = va.__cast(a, lb), b = 0, d = a.get_numChildren(); b < d; ) {
            var f = b++;
            f = a.getChildAt(f);
            c = Math.max(c, gk.getMaxArea(f));
          }
        return c;
      };
      var xi = function (a) {
        this.path = a;
        this.size = a.length;
        this.reset();
      };
      g['com.watabou.mfcg.utils.PathTracker'] = xi;
      xi.__name__ = 'com.watabou.mfcg.utils.PathTracker';
      xi.prototype = {
        getPos: function (a) {
          for (
            a < this.offset && this.reset();
            a > this.offset + this.curLength;

          ) {
            if (++this.curIndex >= this.size - 1) return (this.reset(), null);
            this.offset += this.curLength;
            this.curVector = this.path[this.curIndex + 1].subtract(
              this.path[this.curIndex],
            );
            this.curLength = this.curVector.get_length();
          }
          return qa.lerp(
            this.path[this.curIndex],
            this.path[this.curIndex + 1],
            (a - this.offset) / this.curLength,
          );
        },
        getSegment: function (a, b) {
          a = this.getPos(a);
          var c = this.curIndex + 1;
          b = this.getPos(b);
          c = this.path.slice(c, this.curIndex + 1);
          c.unshift(a);
          c.push(b);
          return c;
        },
        reset: function () {
          this.curIndex = this.offset = 0;
          this.curVector = this.path[1].subtract(this.path[0]);
          this.curLength = this.curVector.get_length();
        },
        length: function () {
          return Sa.$length(this.path);
        },
        get_tangent: function () {
          return this.curVector;
        },
        __class__: xi,
        __properties__: { get_tangent: 'get_tangent' },
      };
      var uc = function () {};
      g['com.watabou.mfcg.utils.PolyUtils'] = uc;
      uc.__name__ = 'com.watabou.mfcg.utils.PolyUtils';
      uc.lerpVertex = function (a, b) {
        b = a.indexOf(b);
        var c = a.length;
        return qa.lerp(a[(b + c - 1) % c], a[(b + 1) % c]);
      };
      uc.smooth = function (a, b, c) {
        null == c && (c = 1);
        for (var d = a.length, f = 0; f < c; ) {
          f++;
          for (var h = [], k = 0, n = d; k < n; ) {
            var p = k++,
              g = a[p];
            null != b && -1 != b.indexOf(g)
              ? h.push(g)
              : h.push(qa.lerp(qa.lerp(a[(p + d - 1) % d], a[(p + 1) % d]), g));
          }
          a = h;
        }
        return a;
      };
      uc.smoothOpen = function (a, b, c) {
        null == c && (c = 1);
        for (var d = a.length, f = 0; f < c; ) {
          f++;
          for (var h = [], k = 0, n = d; k < n; ) {
            var p = k++,
              g = a[p];
            0 == p || p == d - 1 || (null != b && -1 != b.indexOf(g))
              ? h.push(g)
              : h.push(qa.lerp(qa.lerp(a[p - 1], a[p + 1]), g));
          }
          a = h;
        }
        return a;
      };
      uc.simpleInset = function (a, b) {
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var h = f++,
            k = a[h],
            n = a[(h + 1) % c],
            p = b[(h + c - 1) % c],
            g = b[h],
            q = k.subtract(a[(h + c - 1) % c]);
          h = q.get_length();
          n = n.subtract(k);
          var m = n.get_length(),
            u = q.x * n.y - q.y * n.x;
          g = -g / (u / m);
          k = new I(k.x + q.x * g, k.y + q.y * g);
          p /= u / h;
          d.push(new I(k.x + n.x * p, k.y + n.y * p));
        }
        return d;
      };
      uc.inset = function (a, b) {
        for (var c = a, d = a.length, f = 0, h = 0; h < d; ) {
          var k = h++;
          if (b[k] != b[(k + d - 1) % d]) {
            f = k;
            break;
          }
        }
        h = f;
        k = [a[h]];
        for (var n = b[h]; ; ) {
          do ((h = (h + 1) % d), k.push(a[h]));
          while (h != f && b[h] == n);
          if (0 != n)
            if (k[0] != k[k.length - 1])
              ((k = Qd.stripe(k, 2 * n)),
                (k = ye.and(c, Z.revert(k), !0)),
                null != k && (c = k));
            else {
              var p = Qd.stripe([k[0], k[1]], 2 * n);
              p = ye.and(c, Z.revert(p), !0);
              null != p && (c = p);
              k = Qd.stripe(k.slice(1), 2 * n);
              k = ye.and(c, Z.revert(k), !0);
              null != k && (c = k);
            }
          if (h == f) break;
          else ((k = [a[h]]), (n = b[h]));
        }
        return c;
      };
      uc.simplify = function (a, b, c) {
        null == c && (c = 1.01);
        null == b && (b = 0);
        var d = Sa.area(a);
        0 == b && (b = d);
        for (var f = d, h = a.length; 3 <= h; ) {
          for (var k = !1, n = 0; n < h; ) {
            var p = qa.triArea(a[(n + h - 1) % h], a[n], a[(n + 1) % h]),
              g = (f - p) / d;
            Math.abs(p) < b && g < c && 1 / g < c
              ? (a.splice(n, 1), (k = !0), (f -= p), --h)
              : ++n;
          }
          if (!k) break;
        }
      };
      uc.visvalingam = function (a, b, c) {
        null == c && (c = 1.1);
        null == b && (b = 2);
        for (var d = a.length, f = [], h = 0, k = d; h < k; ) {
          var n = h++;
          f.push(n < d - 1 ? I.distance(a[n], a[n + 1]) : 0);
        }
        var p = f;
        f = [];
        h = 0;
        for (k = d; h < k; )
          ((n = h++),
            f.push(
              0 == n || n == d - 1
                ? 0
                : Math.abs(qa.triArea(a[n - 1], a[n], a[n + 1])),
            ));
        k = f;
        var g = 0;
        for (f = 0; f < p.length; ) ((h = p[f]), ++f, (g += h));
        for (var q = g; d > b; ) {
          n = 1;
          var m = k[n];
          f = 1;
          for (h = d - 1; f < h; ) {
            var u = f++;
            m > k[u] && ((m = k[u]), (n = u));
          }
          h = I.distance(a[n - 1], a[n + 1]);
          q = q - p[n - 1] - p[n] + h;
          if (g / q > c) break;
          --d;
          a.splice(n, 1);
          p.splice(n, 1);
          p[n - 1] = h;
          k.splice(n, 1);
          1 < n && (k[n - 1] = Math.abs(qa.triArea(a[n - 2], a[n - 1], a[n])));
          n < d - 1 && (k[n] = Math.abs(qa.triArea(a[n - 1], a[n], a[n + 1])));
        }
      };
      uc.resampleClosed = function (a, b) {
        var c = a.length,
          d = Sa.perimeter(a);
        b = d / Math.round(d / b);
        d = a[c - 1];
        for (var f = [d], h = b, k = 0, n = 0; n < c; ) {
          var p = n++,
            g = d;
          d = a[p];
          for (p = I.distance(g, d); k + p > h; )
            (f.push(qa.lerp(g, d, (h - k) / p)), (h += b));
          k += p;
        }
        return f;
      };
      uc.fractalizeClosed = function (a, b, c) {
        null == c && (c = 0.5);
        null == b && (b = 1);
        var d = [],
          f = null;
        f = function (a, b, h) {
          if (0 < h) {
            var k = new I(a.y - b.y, b.x - a.x),
              n = qa.lerp(a, b),
              p =
                c *
                ((((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 +
                  (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1);
            n.x += k.x * p;
            n.y += k.y * p;
            f(a, n, h - 1);
            d.push(n);
            f(n, b, h - 1);
          }
        };
        for (var h = a.length, k = 0; k < h; ) {
          var n = k++,
            p = a[n];
          n = a[(n + 1) % h];
          d.push(p);
          f(p, n, b);
        }
        return d;
      };
      var de = function (a) {
        this.map = new Pa();
        null == de.phonemes &&
          ((de.phonemes = nd.VOWELS.concat(nd.CONSONANTS)),
          de.phonemes.sort(function (a, b) {
            return b.length - a.length;
          }));
        this.source = a;
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          if ('' != c) {
            c = de.split(c.toLowerCase());
            for (var d = [], f = 0; f < c.length; ) {
              var h = c[f];
              ++f;
              var k = d.join('');
              Object.prototype.hasOwnProperty.call(this.map.h, k)
                ? this.map.h[k].push(h)
                : (this.map.h[k] = [h]);
              d.push(h);
              2 < d.length && d.shift();
            }
            c = d.join('');
            Object.prototype.hasOwnProperty.call(this.map.h, c)
              ? this.map.h[c].push('')
              : (this.map.h[c] = ['']);
          }
        }
      };
      g['com.watabou.nlp.Markov'] = de;
      de.__name__ = 'com.watabou.nlp.Markov';
      de.split = function (a) {
        for (var b = []; '' != a; ) {
          for (var c = !1, d = 0, f = de.phonemes; d < f.length; ) {
            var h = f[d];
            ++d;
            if (N.substr(a, -h.length, null) == h) {
              b.unshift(h);
              a = N.substr(a, 0, a.length - h.length);
              c = !0;
              break;
            }
          }
          c || (a = N.substr(a, 0, a.length - 1));
        }
        return b;
      };
      de.prototype = {
        generate: function (a) {
          for (null == a && (a = -1); ; ) {
            for (var b = '', c = [], d = Z.random(this.map.h['']); '' != d; ) {
              b += d;
              c.push(d);
              2 < c.length && c.shift();
              d = this.map;
              var f = c.join('');
              d = Z.random(d.h[f]);
            }
            if (-1 == a || nd.splitWord(b).length <= a) return b;
          }
        },
        __class__: de,
      };
      var nd = function () {};
      g['com.watabou.nlp.Syllables'] = nd;
      nd.__name__ = 'com.watabou.nlp.Syllables';
      nd.split = function (a) {
        var b = [],
          c = 0;
        for (a = a.split(' '); c < a.length; ) {
          var d = a[c];
          ++c;
          '' != d && (b = b.concat(nd.splitWord(d)));
        }
        return b;
      };
      nd.splitWord = function (a) {
        for (var b = []; 0 < a.length; ) {
          var c =
            0 == b.length && 'e' == N.substr(a, -1, null)
              ? nd.pinch(N.substr(a, 0, a.length - 1)) + 'e'
              : nd.pinch(a);
          b.unshift(c);
          a = N.substr(a, 0, a.length - c.length);
          Z.every(nd.VOWELS, function (b) {
            return -1 == a.indexOf(b);
          }) && ((b[0] = a + b[0]), (a = ''));
        }
        return b;
      };
      nd.pinch = function (a) {
        for (
          var b = a.length - 1;
          0 <= b && -1 == nd.VOWELS.indexOf(a.charAt(b));

        )
          --b;
        if (0 > b) return a;
        for (var c = 0, d = nd.VOWELS; c < d.length; ) {
          var f = d[c];
          ++c;
          if (N.substr(a, b - (f.length - 1), f.length) == f) {
            b -= f.length;
            break;
          }
        }
        if (0 > b) return a;
        c = 0;
        for (d = nd.CONSONANTS; c < d.length; )
          if (((f = d[c]), ++c, N.substr(a, b - (f.length - 1), f.length) == f))
            return N.substr(a, b - (f.length - 1), null);
        return N.substr(a, b + 1, null);
      };
      var Di = function () {
        this.complete = new Nc();
      };
      g['com.watabou.processes.Process'] = Di;
      Di.__name__ = 'com.watabou.processes.Process';
      Di.prototype = {
        onComplete: function (a) {
          null != a && this.complete.add(a);
          return this;
        },
        __class__: Di,
      };
      var Ke = function () {
        this.complete = new Nc();
      };
      g['com.watabou.processes.Tweener'] = Ke;
      Ke.__name__ = 'com.watabou.processes.Tweener';
      Ke.create = function (a, b) {
        var c = new Ke();
        c.time = a;
        c.updateCallback = b;
        return c;
      };
      Ke.run = function (a, b) {
        a = Ke.create(a, b);
        a.start();
        return a;
      };
      Ke.__super__ = Di;
      Ke.prototype = v(Di.prototype, {
        start: function () {
          this.passed = 0;
          this.paused = !1;
          this.updateCallback(0);
          return this.resume();
        },
        stop: function () {
          return this.pause();
        },
        resume: function () {
          rb.get_tick().add(l(this, this.update));
          this.paused = !1;
          return this;
        },
        pause: function () {
          rb.get_tick().remove(l(this, this.update));
          this.paused = !0;
          return this;
        },
        update: function (a) {
          this.paused ||
            ((this.passed += a) < this.time
              ? this.updateCallback(this.passed / this.time)
              : (this.updateCallback(1),
                this.stop(),
                this.complete.dispatch()));
        },
        __class__: Ke,
      });
      var ge = function () {};
      g['com.watabou.system.Exporter'] = ge;
      ge.__name__ = 'com.watabou.system.Exporter';
      ge.saveBinary = function (a, b, c) {
        b = ge.fixName(b);
        a = Td.toArrayBuffer(a);
        window.saveAs(new Blob([a], { type: c }), b, !0);
      };
      ge.saveText = function (a, b, c) {
        b = ge.fixName(b);
        window.saveAs(new Blob([a], { type: c }), b, !0);
      };
      ge.savePNG = function (a, b) {
        a = a.encode(a.rect, new qi());
        ge.saveBinary(a, b + '.png', 'image/png');
      };
      ge.fixName = function (a) {
        return new ja("[ ']", 'g').split(a.toLowerCase()).join('_');
      };
      var ba = function () {};
      g['com.watabou.system.State'] = ba;
      ba.__name__ = 'com.watabou.system.State';
      ba.init = function (a, b) {
        null == ba.so &&
          (null == a && (a = A.current.meta.h.packageName),
          (ba.so = $c.getLocal(a)),
          (ba.data = ba.so.data),
          null != b && 0 == ya.fields(ba.data).length && b(ba.data));
      };
      ba.get = function (a, b) {
        ba.init();
        return Object.prototype.hasOwnProperty.call(ba.data, a)
          ? ba.data[a]
          : b;
      };
      ba.set = function (a, b) {
        ba.init();
        ba.data[a] = b;
        ba.so.flush();
      };
      var Aa = function () {};
      g['com.watabou.system.URLState'] = Aa;
      Aa.__name__ = 'com.watabou.system.URLState';
      Aa.init = function () {
        if (null == Aa.data) {
          Aa.data = {};
          var a = new URLSearchParams(E.location.search);
          null != a &&
            a.forEach(function (a, c) {
              return (Aa.data[c] = a);
            });
        }
      };
      Aa.reset = function () {
        Aa.data = {};
        Aa.update();
      };
      Aa.get = function (a, b) {
        Aa.init();
        return Object.prototype.hasOwnProperty.call(Aa.data, a)
          ? Aa.data[a]
          : b;
      };
      Aa.getInt = function (a, b) {
        null == b && (b = 0);
        Aa.init();
        return Object.prototype.hasOwnProperty.call(Aa.data, a)
          ? H.parseInt(Aa.data[a])
          : b;
      };
      Aa.getFlag = function (a, b) {
        null == b && (b = !1);
        return 0 != Aa.getInt(a, b ? 1 : 0);
      };
      Aa.set = function (a, b) {
        Aa.init();
        Aa.data[a] = b;
        Aa.update();
      };
      Aa.setFlag = function (a, b) {
        null == b && (b = !0);
        Aa.set(a, b ? '1' : '0');
      };
      Aa.getParams = function () {
        for (var a = '', b = Aa.data, c = ya.fields(b), d = 0; d < c.length; ) {
          var f = c[d++];
          a += ('' == a ? '?' : '&') + ('' + f + '=' + H.string(b[f]));
        }
        return a;
      };
      Aa.getURL = function () {
        return Aa.baseURL + Aa.getParams();
      };
      Aa.update = function () {
        window.history.replaceState(Aa.data, '', Aa.getParams());
      };
      Aa.fromString = function (a) {
        Aa.data = {};
        a = N.substr(a, a.indexOf('?') + 1, null).split('&');
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          var d = c.indexOf('='),
            f = N.substr(c, 0, d);
          c = N.substr(c, d + 1, null);
          c = decodeURIComponent(c.split('+').join(' '));
          Aa.data[f] = c;
        }
        Aa.update();
      };
      var vg = function (a) {
        this.ruleSet = a;
        this.clearState();
      };
      g['com.watabou.tracery.RuleSelector'] = vg;
      vg.__name__ = 'com.watabou.tracery.RuleSelector';
      vg.prototype = {
        select: function () {
          var a = this.ruleSet.defaultRules,
            b = (Oe.rng() * a.length) | 0;
          return a[b];
        },
        clearState: function () {},
        __class__: vg,
      };
      var Zh = function (a) {
        vg.call(this, a);
      };
      g['com.watabou.tracery.DeckRuleSelector'] = Zh;
      Zh.__name__ = 'com.watabou.tracery.DeckRuleSelector';
      Zh.__super__ = vg;
      Zh.prototype = v(vg.prototype, {
        select: function () {
          0 == this.deck.length && this.clearState();
          var a = (Oe.rng() * this.deck.length) | 0,
            b = this.deck[a];
          this.deck.splice(a, 1);
          return b;
        },
        clearState: function () {
          this.deck = this.ruleSet.defaultRules.slice();
        },
        __class__: Zh,
      });
      var Qf = function (a, b, c) {
        this.grammar = a;
        this.key = b;
        this.baseRules = c;
        this.clearState();
      };
      g['com.watabou.tracery.Symbol'] = Qf;
      Qf.__name__ = 'com.watabou.tracery.Symbol';
      Qf.prototype = {
        clearState: function () {
          this.stack = [this.baseRules];
          this.baseRules.clearState();
        },
        pushRules: function (a) {
          this.pushRuleSet(new wg(this.grammar, a));
        },
        pushRuleSet: function (a) {
          this.stack.push(a);
        },
        popRules: function () {
          this.stack.pop();
        },
        selectRule: function () {
          return 0 == this.stack.length
            ? (gb.trace(
                'The rule stack for ' + this.key + ' is empty, too many pops?',
                {
                  fileName: 'com/watabou/tracery/Symbol.hx',
                  lineNumber: 37,
                  className: 'com.watabou.tracery.Symbol',
                  methodName: 'selectRule',
                },
              ),
              '((' + this.key + '))')
            : this.top().selectRule();
        },
        top: function () {
          return this.stack[this.stack.length - 1];
        },
        __class__: Qf,
      };
      var Ei = function (a, b, c) {
        Qf.call(this, a, b, new wg(a, []));
        this.generator = c;
      };
      g['com.watabou.tracery.ExtSymbol'] = Ei;
      Ei.__name__ = 'com.watabou.tracery.ExtSymbol';
      Ei.__super__ = Qf;
      Ei.prototype = v(Qf.prototype, {
        selectRule: function () {
          return this.generator();
        },
        __class__: Ei,
      });
      var hk = function (a) {
        this.autoID = 0;
        this.defaultSelector = vg;
        this.modifiers = new Pa();
        this.flags = [];
        this.loadFromRawObj(a);
      };
      g['com.watabou.tracery.Grammar'] = hk;
      hk.__name__ = 'com.watabou.tracery.Grammar';
      hk.prototype = {
        clearState: function () {
          for (
            var a = this.symbols.h, b = Object.keys(a), c = b.length, d = 0;
            d < c;

          )
            a[b[d++]].clearState();
          this.flags = [];
        },
        addModifiers: function (a) {
          for (var b = Object.keys(a.h), c = b.length, d = 0; d < c; ) {
            var f = b[d++];
            this.modifiers.h[f] = a.h[f];
          }
        },
        loadFromRawObj: function (a) {
          this.raw = a;
          this.symbols = new Pa();
          this.subgrammars = [];
          if (null != a)
            for (var b = ya.fields(a), c = 0; c < b.length; ) {
              var d = b[c++],
                f = d;
              d = a[d];
              var h = 'string' == typeof d ? [d] : d;
              null == h &&
                (gb.trace(a, {
                  fileName: 'com/watabou/tracery/Grammar.hx',
                  lineNumber: 55,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'loadFromRawObj',
                }),
                gb.trace(f, {
                  fileName: 'com/watabou/tracery/Grammar.hx',
                  lineNumber: 56,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'loadFromRawObj',
                }));
              d = this.symbols;
              h = new Qf(this, f, new wg(this, this.unwrap(a, h)));
              d.h[f] = h;
            }
        },
        unwrap: function (a, b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            if ('@' == N.substr(f, 0, 1)) {
              var h = N.substr(f, 1, null);
              f = null;
              var k = h.indexOf('?-');
              -1 != k &&
                ((f = N.substr(h, 0, k)), (h = N.substr(h, k + 2, null)));
              k = a[h];
              h = 0;
              for (
                k = this.unwrap(a, 'string' == typeof k ? [k] : k);
                h < k.length;

              ) {
                var n = k[h];
                ++h;
                c.push(null == f ? n : '' + f + '?-' + n);
              }
            } else c.push(f);
          }
          return c;
        },
        createRoot: function (a) {
          return new oh(this, null, 0, { type: -1, raw: a });
        },
        expand: function (a, b) {
          null == b && (b = !1);
          a = this.createRoot(a);
          a.expand();
          b || a.clearEscapeChars();
          return a;
        },
        flatten: function (a, b) {
          null == b && (b = !1);
          return this.expand(a, b).finishedText;
        },
        execute: function (a) {
          'set ' == N.substr(a, 0, 4)
            ? ((a = N.substr(a, 4, null)),
              Z.addAll(this.flags, new ja(', +', '').split(a)))
            : 'clear ' == N.substr(a, 0, 6)
              ? ((a = N.substr(a, 6, null)),
                Z.addAll(this.flags, new ja(', +', '').split(a)))
              : gb.trace('Unknown function "' + a + '" is called', {
                  fileName: 'com/watabou/tracery/Grammar.hx',
                  lineNumber: 113,
                  className: 'com.watabou.tracery.Grammar',
                  methodName: 'execute',
                });
        },
        pushRules: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.symbols.h, a))
            this.symbols.h[a].pushRules(b);
          else {
            var c = this.symbols;
            b = new Qf(this, a, new wg(this, b));
            c.h[a] = b;
          }
        },
        popRules: function (a) {
          Object.prototype.hasOwnProperty.call(this.symbols.h, a)
            ? this.symbols.h[a].popRules()
            : gb.trace("Can't pop: no symbol for key " + a, {
                fileName: 'com/watabou/tracery/Grammar.hx',
                lineNumber: 142,
                className: 'com.watabou.tracery.Grammar',
                methodName: 'popRules',
              });
        },
        addAutoRules: function (a) {
          var b = '_auto' + this.autoID++;
          this.pushRules(b, a);
          return b;
        },
        selectRule: function (a) {
          for (
            var b = this.symbols.h[a], c = 0, d = this.flags;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f = this.symbols.h['' + f + '?-' + a];
            if (null != f) {
              b = f;
              break;
            }
          }
          if (null != b && ((c = b.selectRule()), null != c)) return c;
          c = 0;
          for (d = this.subgrammars; c < d.length; )
            if (
              ((b = d[c]),
              ++c,
              Object.prototype.hasOwnProperty.call(b.symbols.h, a))
            )
              return b.symbols.h[a].selectRule();
          gb.trace('No symbol for "' + a + '"', {
            fileName: 'com/watabou/tracery/Grammar.hx',
            lineNumber: 177,
            className: 'com.watabou.tracery.Grammar',
            methodName: 'selectRule',
          });
          return '((' + a + '))';
        },
        validateRule: function (a) {
          var b = a.indexOf('?-');
          if (-1 == b) return a;
          var c = N.substr(a, 0, b);
          return this.eval(c) ? N.substr(a, b + 2, null) : null;
        },
        eval: function (a) {
          var b = parseFloat(a);
          if (!isNaN(b))
            return (
              (a = b),
              null == a && (a = 0.5),
              (C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647 < a
            );
          b = a.split('&');
          if (1 < b.length) {
            for (a = 0; a < b.length; ) {
              var c = b[a];
              ++a;
              if (!this.eval(c)) return !1;
            }
            return !0;
          }
          a = (b = '!' == a.charAt(0)) ? N.substr(a, 1, null) : a;
          return (-1 != this.flags.indexOf(a)) != b;
        },
        addExternal: function (a, b) {
          var c = this.symbols;
          b = new Ei(this, a, b);
          c.h[a] = b;
        },
        __class__: hk,
      };
      var jb = function () {};
      g['com.watabou.tracery.ModsEngBasic'] = jb;
      jb.__name__ = 'com.watabou.tracery.ModsEngBasic';
      jb.isVowel = function (a) {
        return -1 != 'ieaou'.indexOf(a.toLowerCase());
      };
      jb.isAlphaNum = function (a) {
        return ('a' <= a && 'z' >= a) || ('A' <= a && 'Z' >= a)
          ? !0
          : '0' <= a
            ? '9' >= a
            : !1;
      };
      jb.isPlural = function (a) {
        a = a.toLowerCase();
        return 's' == N.substr(a, -1, null)
          ? 'ss' != N.substr(a, -2, null)
          : !1;
      };
      jb.escapeRegExp = function (a) {
        return a.replace(/([.*+?^=!:${}()|\[\]/\\])/g, '\\$1');
      };
      jb.replace = function (a, b) {
        var c = new RegExp(jb.escapeRegExp(b[0]), 'g');
        return a.replace(c, b[1]);
      };
      jb.capitalizeAll = function (a, b) {
        b = '';
        for (var c = !0, d = 0, f = a.length; d < f; ) {
          var h = d++;
          h = a.charAt(h);
          jb.isAlphaNum(h) || "'" == h
            ? c
              ? ((b += h.toUpperCase()), (c = !1))
              : (b += h)
            : ((c = !0), (b += h));
        }
        return b;
      };
      jb.capitalize = function (a, b) {
        return a.charAt(0).toUpperCase() + N.substr(a, 1, null);
      };
      jb.caps = function (a, b) {
        return a.toUpperCase();
      };
      jb.a = function (a, b) {
        if (0 < a.length) {
          if (
            'u' == a.charAt(0).toLowerCase() &&
            2 < a.length &&
            'i' == a.charAt(2).toLowerCase()
          )
            return 'a ' + a;
          if (jb.isVowel(a.charAt(0))) return 'an ' + a;
        }
        return 'a ' + a;
      };
      jb.firstS = function (a, b) {
        a = a.split(' ');
        return 1 == a.length
          ? jb.s(a[0], null)
          : jb.s(a[0], null) + ' ' + a.slice(1).join(' ');
      };
      jb.s = function (a, b) {
        b = jb.plurals.h;
        for (var c = Object.keys(b), d = c.length, f = 0; f < d; ) {
          var h = c[f++],
            k = h;
          h = b[h];
          if (N.substr(a, -k.length, null) == k)
            return N.substr(a, 0, a.length - k.length) + h;
        }
        b = N.substr(a, -1, null);
        if ('s' == b || 'x' == b || 'z' == b) return a + 'es';
        if ('y' == b && -1 == 'ieaou'.indexOf(N.substr(a, -2, 1)))
          return N.substr(a, 0, -1) + 'ies';
        b = N.substr(a, -2, null);
        return 'ch' == b || 'sh' == b ? a + 'es' : a + 's';
      };
      jb.possessive = function (a, b) {
        return 's' == N.substr(a, -1, null) ? a + "'" : a + "'s";
      };
      jb.ed = function (a, b) {
        switch (N.substr(a, -1, null)) {
          case 'e':
            return a + 'd';
          case 'h':
            return a + 'ed';
          case 's':
            return a + 'ed';
          case 'x':
            return a + 'ed';
          case 'y':
            return jb.isVowel(a.charAt(a.length - 2))
              ? a + 'd'
              : a.substring(0, a.length - 1) + 'ied';
          default:
            return a + 'ed';
        }
      };
      jb.ing = function (a, b) {
        return 'e' == N.substr(a, -1, null)
          ? a.substring(0, a.length - 1) + 'ing'
          : a + 'ing';
      };
      jb.thiss = function (a, b) {
        return jb.isPlural(a) ? 'these' : 'this';
      };
      jb.they = function (a, b) {
        return jb.isPlural(a) ? 'they' : 'it';
      };
      jb.them = function (a, b) {
        return jb.isPlural(a) ? 'them' : 'it';
      };
      jb.is = function (a, b) {
        return jb.isPlural(a) ? 'are' : 'is';
      };
      jb.was = function (a, b) {
        return jb.isPlural(a) ? 'were' : 'was';
      };
      jb.get = function () {
        var a = new Pa();
        a.h.replace = jb.replace;
        a.h.possessive = jb.possessive;
        a.h.capitalize = jb.capitalize;
        a.h.capitalizeAll = jb.capitalizeAll;
        a.h.caps = jb.caps;
        a.h.firstS = jb.firstS;
        a.h.s = jb.s;
        a.h.a = jb.a;
        a.h.ed = jb.ed;
        a.h.ing = jb.ing;
        a.h['this'] = jb.thiss;
        a.h.they = jb.they;
        a.h.them = jb.them;
        a.h.is = jb.is;
        a.h.was = jb.was;
        return a;
      };
      var ph = function (a, b) {
        this.node = a;
        a = b.split(':');
        this.target = a[0];
        1 == a.length
          ? (this.type = 2)
          : ((this.rule = a[1]), (this.type = 'POP' == this.rule ? 1 : 0));
      };
      g['com.watabou.tracery.NodeAction'] = ph;
      ph.__name__ = 'com.watabou.tracery.NodeAction';
      ph.prototype = {
        createUndo: function () {
          return 0 == this.type
            ? new ph(this.node, this.target + ':POP')
            : null;
        },
        activate: function () {
          var a = this.node.grammar;
          switch (this.type) {
            case 0:
              for (
                var b = this.rule.split(','), c = [], d = 0;
                d < b.length;

              ) {
                var f = b[d];
                ++d;
                f = new oh(a, null, 0, { type: -1, raw: f });
                f.expand();
                c.push(f.finishedText);
              }
              a.pushRules(this.target, c);
              break;
            case 1:
              a.popRules(this.target);
              break;
            case 2:
              a.execute(this.target);
          }
        },
        __class__: ph,
      };
      var wg = function (a, b) {
        this.grammar = a;
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          a.push(this.process(d));
        }
        this.defaultRules = this.raw = a;
      };
      g['com.watabou.tracery.RuleSet'] = wg;
      wg.__name__ = 'com.watabou.tracery.RuleSet';
      wg.prototype = {
        process: function (a) {
          var b = a.indexOf('{');
          if (-1 == b) return a;
          for (
            var c = -1, d = 1, f = [], h = b + 1, k = b + 1, n = a.length;
            k < n;

          ) {
            var p = k++,
              g = a.charAt(p);
            if ('|' == g && 1 == d) (f.push(a.substring(h, p)), (h = p + 1));
            else if ('{' == g) ++d;
            else if ('}' == g && 0 == --d) {
              f.push(a.substring(h, p));
              c = p;
              break;
            }
          }
          return -1 != c
            ? ((b = N.substr(a, 0, b)),
              (a = N.substr(a, c + 1, null)),
              (f = this.grammar.addAutoRules(1 == f.length ? [f[0], ''] : f)),
              '' + b + '#' + f + '#' + this.process(a))
            : a;
        },
        selectRule: function () {
          null == this.selector &&
            (this.selector = w.createInstance(this.grammar.defaultSelector, [
              this,
            ]));
          for (;;) {
            var a = this.grammar.validateRule(this.selector.select());
            if (null != a) return a;
          }
        },
        clearState: function () {
          null != this.selector && this.selector.clearState();
        },
        __class__: wg,
      };
      var Oe = function () {};
      g['com.watabou.tracery.Tracery'] = Oe;
      Oe.__name__ = 'com.watabou.tracery.Tracery';
      Oe.parseTag = function (a) {
        for (
          var b = {
              symbol: null,
              preactions: [],
              postactions: [],
              modifiers: [],
            },
            c = Oe.parse(a),
            d = null,
            f = 0;
          f < c.length;

        ) {
          var h = c[f];
          ++f;
          if (0 == h.type)
            if (null == d) d = h.raw;
            else throw X.thrown('multiple main sections in ' + a);
          else b.preactions.push(h.raw);
        }
        null != d &&
          ((a = d.split('.')), (b.symbol = a[0]), (b.modifiers = a.slice(1)));
        return b;
      };
      Oe.parse = function (a) {
        var b = 0,
          c = !1,
          d = [],
          f = !1,
          h = 0,
          k = '',
          n = -1;
        if (null == a) return [];
        for (
          var p = function (b, c, f) {
              1 > c - b &&
                (1 == f &&
                  gb.trace('' + b + ': empty tag', {
                    fileName: 'com/watabou/tracery/Tracery.hx',
                    lineNumber: 63,
                    className: 'com.watabou.tracery.Tracery',
                    methodName: 'parse',
                  }),
                2 == f &&
                  gb.trace('' + b + ': empty action', {
                    fileName: 'com/watabou/tracery/Tracery.hx',
                    lineNumber: 65,
                    className: 'com.watabou.tracery.Tracery',
                    methodName: 'parse',
                  }));
              b =
                -1 != n ? k + '\\' + a.substring(n + 1, c) : a.substring(b, c);
              d.push({ type: f, raw: b });
              n = -1;
              k = '';
            },
            g = 0,
            q = a.length;
          g < q;

        ) {
          var m = g++;
          if (f) f = !f;
          else
            switch (a.charAt(m)) {
              case '#':
                0 == b &&
                  (c ? p(h, m, 1) : h < m && p(h, m, 0), (h = m + 1), (c = !c));
                break;
              case '[':
                0 != b || c || (h < m && p(h, m, 0), (h = m + 1));
                ++b;
                break;
              case '\\':
                f = !0;
                k += a.substring(h, m);
                h = m + 1;
                n = m;
                break;
              case ']':
                (--b, 0 != b || c || (p(h, m, 2), (h = m + 1)));
            }
        }
        h < a.length && p(h, a.length, 0);
        c &&
          gb.trace('Unclosed tag', {
            fileName: 'com/watabou/tracery/Tracery.hx',
            lineNumber: 130,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        0 < b &&
          gb.trace('Too many [', {
            fileName: 'com/watabou/tracery/Tracery.hx',
            lineNumber: 132,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        0 > b &&
          gb.trace('Too many ]', {
            fileName: 'com/watabou/tracery/Tracery.hx',
            lineNumber: 134,
            className: 'com.watabou.tracery.Tracery',
            methodName: 'parse',
          });
        g = [];
        q = 0;
        for (b = d; q < b.length; )
          ((c = b[q]), ++q, (0 != c.type || 0 < c.raw.length) && g.push(c));
        return (d = g);
      };
      var oh = function (a, b, c, d) {
        null == d.raw &&
          (gb.trace('Empty input for node', {
            fileName: 'com/watabou/tracery/TraceryNode.hx',
            lineNumber: 35,
            className: 'com.watabou.tracery.TraceryNode',
            methodName: 'new',
          }),
          (d.raw = ''));
        this.grammar = a;
        this.parent = b;
        this.depth = null != b ? b.depth + 1 : 0;
        this.childIndex = c;
        this.raw = d.raw;
        this.type = d.type;
        this.isExpanded = !1;
      };
      g['com.watabou.tracery.TraceryNode'] = oh;
      oh.__name__ = 'com.watabou.tracery.TraceryNode';
      oh.prototype = {
        expandChildren: function (a, b) {
          this.children = [];
          this.finishedText = '';
          this.childRule = a;
          if (null != a) {
            a = Oe.parse(a);
            for (var c = 0, d = a.length; c < d; ) {
              var f = c++,
                h = new oh(this.grammar, this, f, a[f]);
              this.children[f] = h;
              b || h.expand(!1);
              this.finishedText += h.finishedText;
            }
          } else
            gb.trace("No child rule provided, can't expand children", {
              fileName: 'com/watabou/tracery/TraceryNode.hx',
              lineNumber: 72,
              className: 'com.watabou.tracery.TraceryNode',
              methodName: 'expandChildren',
            });
        },
        expand: function (a) {
          null == a && (a = !1);
          if (!this.isExpanded)
            switch (((this.isExpanded = !0), this.type)) {
              case 0:
                this.finishedText = this.raw;
                break;
              case 1:
                var b = Oe.parseTag(this.raw);
                this.symbol = b.symbol;
                this.modifiers = b.modifiers;
                var c = [],
                  d = 0;
                for (b = b.preactions; d < b.length; ) {
                  var f = b[d];
                  ++d;
                  c.push(new ph(this, f));
                }
                this.preactions = c;
                this.postaction = [];
                c = 0;
                for (d = this.preactions; c < d.length; )
                  ((f = d[c]),
                    ++c,
                    0 == f.type && this.postaction.push(f.createUndo()));
                c = 0;
                for (d = this.preactions; c < d.length; )
                  ((f = d[c]), ++c, f.activate());
                this.finishedText = this.raw;
                c = this.grammar.selectRule(this.symbol);
                this.expandChildren(c, a);
                c = 0;
                for (d = this.modifiers; c < d.length; )
                  ((a = d[c]),
                    ++c,
                    (b = []),
                    (f = a.indexOf('(')),
                    -1 != f &&
                      ((b = a.substring(f + 1, a.indexOf(')')).split(',')),
                      (a = a.substring(0, f))),
                    (f = this.grammar.modifiers.h[a]),
                    null == f
                      ? (gb.trace('Missing modifier ' + a, {
                          fileName: 'com/watabou/tracery/TraceryNode.hx',
                          lineNumber: 114,
                          className: 'com.watabou.tracery.TraceryNode',
                          methodName: 'expand',
                        }),
                        (this.finishedText += '((.' + a + '))'))
                      : (this.finishedText = f(this.finishedText, b)));
                c = 0;
                for (d = this.postaction; c < d.length; )
                  ((a = d[c]), ++c, a.activate());
                break;
              case 2:
                this.action = new ph(this, this.raw);
                this.action.activate();
                this.finishedText = '';
                break;
              default:
                this.expandChildren(this.raw, a);
            }
        },
        clearEscapeChars: function () {},
        __class__: oh,
      };
      var Z = function () {};
      g['com.watabou.utils.ArrayExtender'] = Z;
      Z.__name__ = 'com.watabou.utils.ArrayExtender';
      Z.revert = function (a) {
        a = a.slice();
        a.reverse();
        return a;
      };
      Z.shuffle = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.splice(
            (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
              (b.length + 1)) |
              0,
            0,
            d,
          );
        }
        return b;
      };
      Z.random = function (a) {
        return a[
          (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
            a.length) |
            0
        ];
      };
      Z.pick = function (a) {
        var b =
            (((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
              a.length) |
            0,
          c = a[b];
        a.splice(b, 1);
        return c;
      };
      Z.subset = function (a, b) {
        return Z.shuffle(a).slice(0, b);
      };
      Z.weighted = function (a, b) {
        for (
          var c =
              ((C.seed = (48271 * C.seed) % 2147483647 | 0) / 2147483647) *
              Z.sum(b),
            d = 0,
            f = 0,
            h = a.length;
          f < h;

        ) {
          var k = f++;
          if (c <= (d += b[k])) return a[k];
        }
        return a[0];
      };
      Z.isEmpty = function (a) {
        return 0 == a.length;
      };
      Z.min = function (a, b) {
        for (var c = a[0], d = b(c), f = 1, h = a.length; f < h; ) {
          var k = f++;
          k = a[k];
          var n = b(k);
          n < d && ((c = k), (d = n));
        }
        return c;
      };
      Z.max = function (a, b) {
        for (var c = a[0], d = b(c), f = 1, h = a.length; f < h; ) {
          var k = f++;
          k = a[k];
          var n = b(k);
          n > d && ((c = k), (d = n));
        }
        return c;
      };
      Z.every = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (!b(d)) return !1;
        }
        return !0;
      };
      Z.some = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (b(d)) return !0;
        }
        return !1;
      };
      Z.count = function (a, b) {
        for (var c = 0, d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          b(f) && ++c;
        }
        return c;
      };
      Z.find = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (b(d)) return d;
        }
        return null;
      };
      Z.sum = function (a) {
        for (var b = 0, c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b += d;
        }
        return b;
      };
      Z.replace = function (a, b, c) {
        b = a.indexOf(b);
        a[b++] = c[0];
        for (var d = 1, f = c.length; d < f; ) {
          var h = d++;
          a.splice(b++, 0, c[h]);
        }
      };
      Z.add = function (a, b) {
        return -1 == a.indexOf(b) ? (a.push(b), !0) : !1;
      };
      Z.intersect = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          -1 != b.indexOf(f) && c.push(f);
        }
        return c;
      };
      Z.addAll = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          -1 == a.indexOf(d) && a.push(d);
        }
      };
      Z.collect = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          Z.addAll(b, d);
        }
        return b;
      };
      Z.removeAll = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          N.remove(a, d);
        }
      };
      Z.difference = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          -1 == b.indexOf(f) && c.push(f);
        }
        return c;
      };
      Z.intersects = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (-1 != b.indexOf(d)) return !0;
        }
        return !1;
      };
      Z.sortBy = function (a, b) {
        for (var c = [], d = 0, f = a.length; d < f; ) {
          var h = d++;
          c.push(h);
        }
        var k = c;
        c = [];
        for (d = 0; d < a.length; ) ((f = a[d]), ++d, c.push(b(f)));
        var n = c;
        k.sort(function (a, b) {
          a = n[a] - n[b];
          return 0 == a ? 0 : 0 > a ? -1 : 1;
        });
        c = [];
        d = 0;
        for (f = a.length; d < f; ) ((h = d++), c.push(a[k[h]]));
        return c;
      };
      var Rh = function () {};
      g['com.watabou.utils.ColorNames'] = Rh;
      Rh.__name__ = 'com.watabou.utils.ColorNames';
      Rh.get = function (a) {
        for (
          var b = a >>> 16,
            c = (a >>> 8) & 255,
            d = a & 255,
            f = '',
            h = 1e10,
            k = Rh.values.h,
            n = Object.keys(k),
            p = n.length,
            g = 0;
          g < p;

        ) {
          var q = n[g++],
            m = q;
          a = k[q];
          q = a >> 16;
          var u = (a >> 8) & 255;
          a &= 255;
          q = (b - q) * (b - q) + (c - u) * (c - u) + (d - a) * (d - a);
          h > cb.toFloat(q) && ((h = cb.toFloat(q)), (f = m));
        }
        return f;
      };
      var cl = function () {};
      g['com.watabou.utils.DisplayObjectExtender'] = cl;
      cl.__name__ = 'com.watabou.utils.DisplayObjectExtender';
      cl.onActivate = function (a, b) {
        var c = function (a) {
          b('addedToStage' == a.type);
        };
        a.addEventListener('addedToStage', c);
        a.addEventListener('removedFromStage', c);
      };
      var Kb = function () {};
      g['com.watabou.utils.GraphicsExtender'] = Kb;
      Kb.__name__ = 'com.watabou.utils.GraphicsExtender';
      Kb.drawPolygon = function (a, b) {
        var c = b[b.length - 1];
        a.moveTo(c.x, c.y);
        for (var d = 0; d < b.length; ) ((c = b[d]), ++d, a.lineTo(c.x, c.y));
      };
      Kb.drawPolygonAt = function (a, b, c, d) {
        var f = b[b.length - 1];
        a.moveTo(f.x + c, f.y + d);
        for (var h = 0; h < b.length; )
          ((f = b[h]), ++h, a.lineTo(f.x + c, f.y + d));
      };
      Kb.drawPolyline = function (a, b) {
        var c = b[0];
        a.moveTo(c.x, c.y);
        for (var d = 1, f = b.length; d < f; )
          ((c = d++), (c = b[c]), a.lineTo(c.x, c.y));
      };
      Kb.dashedPolyline = function (a, b, c, d) {
        null == c && (c = !1);
        if (!(2 > b.length)) {
          var f = !0,
            h = 0,
            k = 0,
            n = d[0],
            p = c ? -1 : 0,
            g = b[c ? b.length - 1 : 0];
          c = b[c ? 0 : 1];
          for (a.moveTo(g.x, g.y); ; ) {
            var q = I.distance(g, c);
            if (k + q < n) {
              f && a.lineTo(c.x, c.y);
              if (++p >= b.length) break;
              g = c;
              c = b[p];
              k += q;
            } else
              (0 < n &&
                ((g = qa.lerp(g, c, (n - k) / q)),
                f ? a.lineTo(g.x, g.y) : a.moveTo(g.x, g.y)),
                ++h >= d.length && (h = 0),
                (n = d[h]),
                (k = 0),
                (f = !f));
          }
        }
      };
      var Fc = function () {};
      g['com.watabou.utils.MathUtils'] = Fc;
      Fc.__name__ = 'com.watabou.utils.MathUtils';
      Fc.gate = function (a, b, c) {
        return a < b ? b : a < c ? a : c;
      };
      Fc.cycle = function (a, b, c) {
        for (; a < b; ) a += c - b;
        for (; a > c; ) a -= c - b;
        return a;
      };
      Fc.gatei = function (a, b, c) {
        return a < b ? b : a < c ? a : c;
      };
      var jc = (y['com.watabou.utils.ParamType'] = {
        __ename__: 'com.watabou.utils.ParamType',
        __constructs__: null,
        COLOR: {
          _hx_name: 'COLOR',
          _hx_index: 0,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        MULTI: {
          _hx_name: 'MULTI',
          _hx_index: 1,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        FONT: {
          _hx_name: 'FONT',
          _hx_index: 2,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        FLOAT: {
          _hx_name: 'FLOAT',
          _hx_index: 3,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        INT: {
          _hx_name: 'INT',
          _hx_index: 4,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        STRING: {
          _hx_name: 'STRING',
          _hx_index: 5,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        BOOL: {
          _hx_name: 'BOOL',
          _hx_index: 6,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
      });
      jc.__constructs__ = [
        jc.COLOR,
        jc.MULTI,
        jc.FONT,
        jc.FLOAT,
        jc.INT,
        jc.STRING,
        jc.BOOL,
      ];
      var Xc = function () {
        this.params = [];
      };
      g['com.watabou.utils.Palette'] = Xc;
      Xc.__name__ = 'com.watabou.utils.Palette';
      Xc.float2str = function (a) {
        a = null == a ? 'null' : '' + a;
        -1 == a.indexOf('.') && (a += '.0');
        return a;
      };
      Xc.font2format = function (a) {
        if (null == a) return null;
        var b =
          null != a.face
            ? a.face
            : null != a.embedded && ac.exists(a.embedded)
              ? ac.getFont(a.embedded).name
              : '_serif';
        return new we(b, a.size, 0, a.bold, a.italic);
      };
      Xc.fromData = function (a) {
        for (var b = new Xc(), c = ya.fields(a), d = 0; d < c.length; ) {
          var f = c[d++],
            h = f;
          f = a[f];
          if ('number' == typeof f && (f | 0) === f) b.setInt(h, f);
          else if ('number' == typeof f) b.setFloat(h, f);
          else if ('boolean' == typeof f) b.setBool(h, f);
          else if ('string' == typeof f) {
            if (7 == f.length && '#' == f.charAt(0)) {
              var k = H.parseInt('0x' + N.substr(f, 1, null));
              if (null != k) {
                b.setColor(h, k);
                continue;
              }
            }
            k = parseFloat(f);
            if (isNaN(k))
              switch (f) {
                case 'false':
                  b.setBool(h, !1);
                  break;
                case 'true':
                  b.setBool(h, !0);
                  break;
                default:
                  b.setString(h, f);
              }
            else -1 == f.indexOf('.') ? b.setInt(h, k | 0) : b.setFloat(h, k);
          } else if (f instanceof Array) {
            k = [];
            for (var n = 0; n < f.length; ) {
              var p = f[n];
              ++n;
              p = H.parseInt('0x' + N.substr(p, 1, null));
              null != p && k.push(p);
            }
            b.setMulti(h, k);
          } else null != f && b.setFont(h, f);
        }
        return b;
      };
      Xc.fromJSON = function (a) {
        a = JSON.parse(a);
        return Xc.fromData(a);
      };
      Xc.fromAsset = function (a) {
        return ac.exists(a) ? Xc.fromJSON(ac.getText(a)) : null;
      };
      Xc.prototype = {
        getColor: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a) {
              if (f.type == jc.COLOR) return f.color;
              if (f.type == jc.MULTI) return f.multi[0];
              break;
            }
          }
          return b;
        },
        getMulti: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a) {
              if (f.type == jc.MULTI) return f.multi;
              if (f.type == jc.COLOR) return [f.color];
              break;
            }
          }
          return [b];
        },
        getFont: function (a, b) {
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == jc.FONT) return f.font;
          }
          return b;
        },
        getFloat: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == jc.FLOAT) return f.float;
          }
          return b;
        },
        getInt: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == jc.INT) return f.int;
          }
          return b;
        },
        getString: function (a, b) {
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == jc.STRING) return f.string;
          }
          return b;
        },
        getBool: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == jc.BOOL) return f.bool;
          }
          return b;
        },
        setColor: function (a, b) {
          this.params.push({ id: a, type: jc.COLOR, color: b });
        },
        setMulti: function (a, b) {
          this.params.push({ id: a, type: jc.MULTI, multi: b });
        },
        setFont: function (a, b) {
          this.params.push({ id: a, type: jc.FONT, font: b });
        },
        setFloat: function (a, b) {
          this.params.push({ id: a, type: jc.FLOAT, float: b });
        },
        setInt: function (a, b) {
          this.params.push({ id: a, type: jc.INT, int: b });
        },
        setString: function (a, b) {
          this.params.push({ id: a, type: jc.STRING, string: b });
        },
        setBool: function (a, b) {
          this.params.push({ id: a, type: jc.BOOL, bool: b });
        },
        data: function () {
          for (var a = {}, b = 0, c = this.params; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                a[d.id] = '#' + O.hex(d.color, 6);
                break;
              case 1:
                var f = d.id,
                  h = [],
                  k = 0;
                for (d = d.multi; k < d.length; ) {
                  var n = d[k];
                  ++k;
                  h.push('#' + O.hex(n, 6));
                }
                a[f] = h;
                break;
              case 2:
                a[d.id] = d.font;
                break;
              case 3:
                a[d.id] = Xc.float2str(d.float);
                break;
              case 4:
                a[d.id] = null == d.int ? 'null' : '' + d.int;
                break;
              case 5:
                a[d.id] = d.string;
                break;
              case 6:
                a[d.id] = null == d.bool ? 'null' : '' + d.bool;
            }
          }
          return a;
        },
        json: function () {
          return JSON.stringify(this.data(), null, '  ');
        },
        __class__: Xc,
      };
      var wd = function () {};
      g['com.watabou.utils.PointExtender'] = wd;
      wd.__name__ = 'com.watabou.utils.PointExtender';
      wd.set = function (a, b) {
        a.x = b.x;
        a.y = b.y;
      };
      wd.project = function (a, b) {
        var c = a.get_length();
        return (a.x * b.x + a.y * b.y) / (c * c);
      };
      var gf = function () {};
      g['com.watabou.utils.SetUtils'] = gf;
      gf.__name__ = 'com.watabou.utils.SetUtils';
      gf.fromArray = function (a) {
        for (var b = new pa(), c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.set(d, !0);
        }
        return b;
      };
      gf.removeArr = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          a.remove(d);
        }
      };
      gf.isEmpty = function (a) {
        for (a = a.iterator(); a.hasNext(); ) return (a.next(), !1);
        return !0;
      };
      var id = function () {};
      g['com.watabou.utils.Stopwatch'] = id;
      id.__name__ = 'com.watabou.utils.Stopwatch';
      id.start = function () {
        id.startTime = Ra.getTimer();
      };
      id.next = function () {
        var a = Ra.getTimer(),
          b = a - id.startTime;
        id.startTime = a;
        return b;
      };
      id.measure = function (a) {
        id.start();
        a();
        return id.next();
      };
      var dh = function () {};
      g['com.watabou.utils.StringUtils'] = dh;
      dh.__name__ = 'com.watabou.utils.StringUtils';
      dh.capitalize = function (a) {
        return N.substr(a, 0, 1).toUpperCase() + N.substr(a, 1, null);
      };
      dh.capitalizeAll = function (a) {
        var b = [],
          c = 0;
        for (a = a.split(' '); c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(dh.capitalize(d));
        }
        return b.join(' ');
      };
      var rb = function () {};
      g['com.watabou.utils.Updater'] = rb;
      rb.__name__ = 'com.watabou.utils.Updater';
      rb.__properties__ = { get_tick: 'get_tick' };
      rb.get_tick = function () {
        null == rb.source && rb.useTimer(60);
        return rb._tick;
      };
      rb.fire = function () {
        var a = Ra.getTimer();
        0 == rb.lastTime
          ? rb._tick.dispatch(0)
          : rb._tick.dispatch(((a - rb.lastTime) / 1e3) * rb.timeScale);
        rb.lastTime = a;
      };
      rb.useTimer = function (a) {
        null != rb.source && rb.source.stop();
        rb.source = new Fi(a);
      };
      rb.useEnterFrame = function (a) {
        null != rb.source && rb.source.stop();
        rb.source = new Gi(a);
      };
      rb.wait = function (a, b) {
        var c = 0,
          d = null;
        d = function (f) {
          (c += f) >= a && (rb.get_tick().remove(d), b());
        };
        rb.get_tick().add(d);
        return d;
      };
      rb.cancel = function (a) {
        rb.get_tick().remove(a);
      };
      rb.stop = function () {
        null != rb.source && (rb.source.stop(), (rb.source = null));
      };
      var xg = function () {};
      g['com.watabou.utils.RecurringEventDispatcher'] = xg;
      xg.__name__ = 'com.watabou.utils.RecurringEventDispatcher';
      xg.prototype = { stop: function () {}, __class__: xg };
      var Fi = function (a) {
        this.timer = new Hi(a);
        this.timer.addEventListener('timer', l(this, this.onTimer));
        this.timer.start();
      };
      g['com.watabou.utils._Updater.TimerEventDispatcher'] = Fi;
      Fi.__name__ = 'com.watabou.utils._Updater.TimerEventDispatcher';
      Fi.__super__ = xg;
      Fi.prototype = v(xg.prototype, {
        onTimer: function (a) {
          rb.fire();
          a.updateAfterEvent();
        },
        stop: function () {
          this.timer.stop();
        },
        __class__: Fi,
      });
      var Gi = function (a) {
        this.dispObj = a;
        a.addEventListener('enterFrame', l(this, this.onEnterFrame));
      };
      g['com.watabou.utils._Updater.FrameEventDispatcher'] = Gi;
      Gi.__name__ = 'com.watabou.utils._Updater.FrameEventDispatcher';
      Gi.__super__ = xg;
      Gi.prototype = v(xg.prototype, {
        onEnterFrame: function (a) {
          rb.fire();
        },
        stop: function () {
          this.dispObj.removeEventListener(
            'enterFrame',
            l(this, this.onEnterFrame),
          );
        },
        __class__: Gi,
      });
      var ne = (y['haxe.StackItem'] = {
        __ename__: 'haxe.StackItem',
        __constructs__: null,
        CFunction: {
          _hx_name: 'CFunction',
          _hx_index: 0,
          __enum__: 'haxe.StackItem',
          toString: r,
        },
        Module:
          ((G = function (a) {
            return {
              _hx_index: 1,
              m: a,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (G._hx_name = 'Module'),
          (G.__params__ = ['m']),
          G),
        FilePos:
          ((G = function (a, b, c, d) {
            return {
              _hx_index: 2,
              s: a,
              file: b,
              line: c,
              column: d,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (G._hx_name = 'FilePos'),
          (G.__params__ = ['s', 'file', 'line', 'column']),
          G),
        Method:
          ((G = function (a, b) {
            return {
              _hx_index: 3,
              classname: a,
              method: b,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (G._hx_name = 'Method'),
          (G.__params__ = ['classname', 'method']),
          G),
        LocalFunction:
          ((G = function (a) {
            return {
              _hx_index: 4,
              v: a,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (G._hx_name = 'LocalFunction'),
          (G.__params__ = ['v']),
          G),
      });
      ne.__constructs__ = [
        ne.CFunction,
        ne.Module,
        ne.FilePos,
        ne.Method,
        ne.LocalFunction,
      ];
      var pf = {
          callStack: function () {
            return Ta.toHaxe(Ta.callStack());
          },
          exceptionStack: function (a) {
            null == a && (a = !1);
            var b = Ta.toHaxe(Ta.exceptionStack());
            return a ? b : pf.subtract(b, pf.callStack());
          },
          toString: function (a) {
            for (var b = new x(), c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              b.b += '\nCalled from ';
              pf.itemToString(b, d);
            }
            return b.b;
          },
          subtract: function (a, b) {
            for (var c = -1, d = -1; ++d < a.length; ) {
              for (var f = 0, h = b.length; f < h; ) {
                var k = f++;
                if (pf.equalItems(a[d], b[k])) {
                  if ((0 > c && (c = d), ++d, d >= a.length)) break;
                } else c = -1;
              }
              if (0 <= c) break;
            }
            return 0 <= c ? a.slice(0, c) : a;
          },
          equalItems: function (a, b) {
            if (null == a) return null == b ? !0 : !1;
            switch (a._hx_index) {
              case 0:
                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
              case 1:
                return null == b ? !1 : 1 == b._hx_index ? a.m == b.m : !1;
              case 2:
                if (null == b) return !1;
                if (2 == b._hx_index) {
                  var c = b.s,
                    d = b.line,
                    f = b.column,
                    h = a.column,
                    k = a.line,
                    n = a.s;
                  return a.file == b.file && k == d && h == f
                    ? pf.equalItems(n, c)
                    : !1;
                }
                return !1;
              case 3:
                return null == b
                  ? !1
                  : 3 == b._hx_index
                    ? ((c = b.method),
                      (d = a.method),
                      a.classname == b.classname ? d == c : !1)
                    : !1;
              case 4:
                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1;
            }
          },
          itemToString: function (a, b) {
            switch (b._hx_index) {
              case 0:
                a.b += 'a C function';
                break;
              case 1:
                b = b.m;
                a.b += 'module ';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 2:
                var c = b.s,
                  d = b.file,
                  f = b.line;
                b = b.column;
                null != c && (pf.itemToString(a, c), (a.b += ' ('));
                a.b += null == d ? 'null' : '' + d;
                a.b += ' line ';
                a.b += null == f ? 'null' : '' + f;
                null != b &&
                  ((a.b += ' column '), (a.b += null == b ? 'null' : '' + b));
                null != c && (a.b += ')');
                break;
              case 3:
                c = b.classname;
                b = b.method;
                a.b += H.string(null == c ? '<unknown>' : c);
                a.b += '.';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 4:
                ((b = b.v),
                  (a.b += 'local function #'),
                  (a.b += null == b ? 'null' : '' + b));
            }
          },
        },
        X = function (a, b, c) {
          Error.call(this, a);
          this.message = a;
          this.__previousException = b;
          this.__nativeException = null != c ? c : this;
          this.__skipStack = 0;
          a = Error.prepareStackTrace;
          Error.prepareStackTrace = function (a) {
            return a.stack;
          };
          if (c instanceof Error) this.stack = c.stack;
          else {
            c = null;
            if (Error.captureStackTrace)
              (Error.captureStackTrace(this, X), (c = this));
            else if (((c = Error()), 'undefined' == typeof c.stack)) {
              try {
                throw c;
              } catch (d) {}
              this.__skipStack++;
            }
            this.stack = c.stack;
          }
          Error.prepareStackTrace = a;
        };
      g['haxe.Exception'] = X;
      X.__name__ = 'haxe.Exception';
      X.caught = function (a) {
        return a instanceof X
          ? a
          : a instanceof Error
            ? new X(a.message, null, a)
            : new qh(a, null, a);
      };
      X.thrown = function (a) {
        if (a instanceof X) return a.get_native();
        if (a instanceof Error) return a;
        a = new qh(a);
        a.__skipStack++;
        return a;
      };
      X.__super__ = Error;
      X.prototype = v(Error.prototype, {
        unwrap: function () {
          return this.__nativeException;
        },
        toString: function () {
          return this.get_message();
        },
        __shiftStack: function () {
          this.__skipStack++;
        },
        get_message: function () {
          return this.message;
        },
        get_native: function () {
          return this.__nativeException;
        },
        get_stack: function () {
          var a = this.__exceptionStack;
          null == a &&
            ((a = Ta.toHaxe(Ta.normalize(this.stack), this.__skipStack)),
            this.setProperty('__exceptionStack', a));
          return a;
        },
        setProperty: function (a, b) {
          try {
            Object.defineProperty(this, a, { value: b });
          } catch (c) {
            this[a] = b;
          }
        },
        __class__: X,
        __properties__: {
          get_native: 'get_native',
          get_stack: 'get_stack',
          get_message: 'get_message',
        },
      });
      var Da = function (a, b) {
        this.high = a;
        this.low = b;
      };
      g['haxe._Int64.___Int64'] = Da;
      Da.__name__ = 'haxe._Int64.___Int64';
      Da.prototype = { __class__: Da };
      var gb = function () {};
      g['haxe.Log'] = gb;
      gb.__name__ = 'haxe.Log';
      gb.formatOutput = function (a, b) {
        var c = H.string(a);
        if (null == b) return c;
        var d = b.fileName + ':' + b.lineNumber;
        if (null != b.customParams) {
          var f = 0;
          for (b = b.customParams; f < b.length; )
            ((a = b[f]), ++f, (c += ', ' + H.string(a)));
        }
        return d + ': ' + c;
      };
      gb.trace = function (a, b) {
        a = gb.formatOutput(a, b);
        'undefined' != typeof console && null != console.log && console.log(a);
      };
      var Ta = function () {};
      g['haxe.NativeStackTrace'] = Ta;
      Ta.__name__ = 'haxe.NativeStackTrace';
      Ta.saveStack = function (a) {
        Ta.lastError = a;
      };
      Ta.callStack = function () {
        var a = Error(''),
          b = Ta.tryHaxeStack(a);
        if ('undefined' == typeof b) {
          try {
            throw a;
          } catch (c) {}
          b = a.stack;
        }
        return Ta.normalize(b, 2);
      };
      Ta.exceptionStack = function () {
        return Ta.normalize(Ta.tryHaxeStack(Ta.lastError));
      };
      Ta.toHaxe = function (a, b) {
        null == b && (b = 0);
        if (null == a) return [];
        if ('string' == typeof a) {
          a = a.split('\n');
          'Error' == a[0] && a.shift();
          for (var c = [], d = 0, f = a.length; d < f; ) {
            var h = d++;
            if (!(b > h)) {
              var k = a[h];
              h = k.match(
                /^    at ([$A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/,
              );
              if (null != h) {
                k = h[1].split('.');
                '$hxClasses' == k[0] && k.shift();
                var n = k.pop(),
                  p = h[2],
                  g = H.parseInt(h[3]);
                h = H.parseInt(h[4]);
                c.push(
                  ne.FilePos(
                    'Anonymous function' == n
                      ? ne.LocalFunction()
                      : 'Global code' == n
                        ? null
                        : ne.Method(k.join('.'), n),
                    p,
                    g,
                    h,
                  ),
                );
              } else c.push(ne.Module(O.trim(k)));
            }
          }
          return c;
        }
        return 0 < b && Array.isArray(a) ? a.slice(b) : a;
      };
      Ta.tryHaxeStack = function (a) {
        if (null == a) return [];
        var b = Error.prepareStackTrace;
        Error.prepareStackTrace = Ta.prepareHxStackTrace;
        a = a.stack;
        Error.prepareStackTrace = b;
        return a;
      };
      Ta.prepareHxStackTrace = function (a, b) {
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          null != Ta.wrapCallSite && (d = Ta.wrapCallSite(d));
          var f = null,
            h = d.getFunctionName();
          if (null != h) {
            var k = h.lastIndexOf('.');
            0 <= k
              ? ((f = h.substring(0, k)),
                (h = h.substring(k + 1)),
                (f = ne.Method(f, h)))
              : (f = ne.Method(null, h));
          }
          h = d.getFileName();
          k = null == h ? -1 : h.indexOf('file:');
          null != Ta.wrapCallSite && 0 < k && (h = h.substring(k + 6));
          a.push(ne.FilePos(f, h, d.getLineNumber(), d.getColumnNumber()));
        }
        return a;
      };
      Ta.normalize = function (a, b) {
        null == b && (b = 0);
        if (Array.isArray(a) && 0 < b) return a.slice(b);
        if ('string' == typeof a) {
          switch (a.substring(0, 6)) {
            case 'Error\n':
            case 'Error:':
              ++b;
          }
          return Ta.skipLines(a, b);
        }
        return a;
      };
      Ta.skipLines = function (a, b, c) {
        null == c && (c = 0);
        return 0 < b
          ? ((c = a.indexOf('\n', c)), 0 > c ? '' : Ta.skipLines(a, --b, c + 1))
          : a.substring(c);
      };
      var Bd = function () {
        this.buf = new x();
        this.cache = [];
        this.useCache = Bd.USE_CACHE;
        this.useEnumIndex = Bd.USE_ENUM_INDEX;
        this.shash = new Pa();
        this.scount = 0;
      };
      g['haxe.Serializer'] = Bd;
      Bd.__name__ = 'haxe.Serializer';
      Bd.run = function (a) {
        var b = new Bd();
        b.serialize(a);
        return b.toString();
      };
      Bd.prototype = {
        toString: function () {
          return this.buf.b;
        },
        serializeString: function (a) {
          var b = this.shash.h[a];
          null != b
            ? ((this.buf.b += 'R'), (this.buf.b += null == b ? 'null' : '' + b))
            : ((this.shash.h[a] = this.scount++),
              (this.buf.b += 'y'),
              (a = encodeURIComponent(a)),
              (this.buf.b += H.string(a.length)),
              (this.buf.b += ':'),
              (this.buf.b += null == a ? 'null' : '' + a));
        },
        serializeRef: function (a) {
          for (var b = typeof a, c = 0, d = this.cache.length; c < d; ) {
            var f = c++,
              h = this.cache[f];
            if (typeof h == b && h == a)
              return (
                (this.buf.b += 'r'),
                (this.buf.b += null == f ? 'null' : '' + f),
                !0
              );
          }
          this.cache.push(a);
          return !1;
        },
        serializeFields: function (a) {
          for (var b = 0, c = ya.fields(a); b < c.length; ) {
            var d = c[b];
            ++b;
            this.serializeString(d);
            this.serialize(ya.field(a, d));
          }
          this.buf.b += 'g';
        },
        serialize: function (a) {
          var b = w.typeof(a);
          switch (b._hx_index) {
            case 0:
              this.buf.b += 'n';
              break;
            case 1:
              if (0 == a) {
                this.buf.b += 'z';
                break;
              }
              this.buf.b += 'i';
              this.buf.b += null == a ? 'null' : '' + a;
              break;
            case 2:
              isNaN(a)
                ? (this.buf.b += 'k')
                : isFinite(a)
                  ? ((this.buf.b += 'd'),
                    (this.buf.b += null == a ? 'null' : '' + a))
                  : (this.buf.b += 0 > a ? 'm' : 'p');
              break;
            case 3:
              this.buf.b += a ? 't' : 'f';
              break;
            case 4:
              va.__instanceof(a, xl)
                ? ((a = a.__name__),
                  (this.buf.b += 'A'),
                  this.serializeString(a))
                : va.__instanceof(a, yl)
                  ? ((this.buf.b += 'B'), this.serializeString(a.__ename__))
                  : (this.useCache && this.serializeRef(a)) ||
                    ((this.buf.b += 'o'), this.serializeFields(a));
              break;
            case 5:
              throw X.thrown('Cannot serialize function');
            case 6:
              b = b.c;
              if (b == String) {
                this.serializeString(a);
                break;
              }
              if (this.useCache && this.serializeRef(a)) break;
              switch (b) {
                case Array:
                  var c = 0;
                  this.buf.b += 'a';
                  for (var d = 0, f = a.length; d < f; )
                    ((b = d++),
                      null == a[b]
                        ? ++c
                        : (0 < c &&
                            (1 == c
                              ? (this.buf.b += 'n')
                              : ((this.buf.b += 'u'),
                                (this.buf.b += null == c ? 'null' : '' + c)),
                            (c = 0)),
                          this.serialize(a[b])));
                  0 < c &&
                    (1 == c
                      ? (this.buf.b += 'n')
                      : ((this.buf.b += 'u'),
                        (this.buf.b += null == c ? 'null' : '' + c)));
                  this.buf.b += 'h';
                  break;
                case Date:
                  this.buf.b += 'v';
                  this.buf.b += H.string(a.getTime());
                  break;
                case mc:
                  this.buf.b += 'q';
                  for (b = a.keys(); b.hasNext(); )
                    ((c = b.next()),
                      (this.buf.b += ':'),
                      (this.buf.b += null == c ? 'null' : '' + c),
                      this.serialize(a.h[c]));
                  this.buf.b += 'h';
                  break;
                case bb:
                  this.buf.b += 'l';
                  for (a = a.h; null != a; )
                    ((b = a.item), (a = a.next), this.serialize(b));
                  this.buf.b += 'h';
                  break;
                case pa:
                  this.buf.b += 'M';
                  for (b = a.keys(); b.hasNext(); ) {
                    c = b.next();
                    var h = ya.field(c, '__id__');
                    ya.deleteField(c, '__id__');
                    this.serialize(c);
                    c.__id__ = h;
                    this.serialize(a.h[c.__id__]);
                  }
                  this.buf.b += 'h';
                  break;
                case Pa:
                  this.buf.b += 'b';
                  c = Object.keys(a.h);
                  h = c.length;
                  for (d = 0; d < h; )
                    ((b = c[d++]),
                      this.serializeString(b),
                      this.serialize(a.h[b]));
                  this.buf.b += 'h';
                  break;
                case zb:
                  this.buf.b += 's';
                  this.buf.b += H.string(Math.ceil((8 * a.length) / 6));
                  this.buf.b += ':';
                  b = 0;
                  c = a.length - 2;
                  h = Bd.BASE64_CODES;
                  if (null == h) {
                    h = Array(Bd.BASE64.length);
                    d = 0;
                    for (f = Bd.BASE64.length; d < f; ) {
                      var k = d++;
                      h[k] = N.cca(Bd.BASE64, k);
                    }
                    Bd.BASE64_CODES = h;
                  }
                  for (; b < c; )
                    ((d = a.b[b++]),
                      (f = a.b[b++]),
                      (k = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(h[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        h[((d << 4) | (f >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(
                        h[((f << 2) | (k >> 6)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(h[k & 63])));
                  b == c
                    ? ((d = a.b[b++]),
                      (f = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(h[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        h[((d << 4) | (f >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(h[(f << 2) & 63])))
                    : b == c + 1 &&
                      ((d = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(h[d >> 2])),
                      (this.buf.b += String.fromCodePoint(h[(d << 4) & 63])));
                  break;
                default:
                  (this.useCache && this.cache.pop(),
                    null != a.hxSerialize
                      ? ((this.buf.b += 'C'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        a.hxSerialize(this),
                        (this.buf.b += 'g'))
                      : ((this.buf.b += 'c'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        this.serializeFields(a)));
              }
              break;
            case 7:
              b = b.e;
              if (this.useCache) {
                if (this.serializeRef(a)) break;
                this.cache.pop();
              }
              this.buf.b += H.string(this.useEnumIndex ? 'j' : 'w');
              this.serializeString(b.__ename__);
              this.useEnumIndex
                ? ((this.buf.b += ':'), (this.buf.b += H.string(a._hx_index)))
                : ((b = a),
                  this.serializeString(
                    y[b.__enum__].__constructs__[b._hx_index]._hx_name,
                  ));
              this.buf.b += ':';
              c = w.enumParameters(a);
              this.buf.b += H.string(c.length);
              for (b = 0; b < c.length; ) ((h = c[b]), ++b, this.serialize(h));
              this.useCache && this.cache.push(a);
              break;
            default:
              throw X.thrown('Cannot serialize ' + H.string(a));
          }
        },
        __class__: Bd,
      };
      var Pf = function (a) {
        var b = this;
        this.id = setInterval(function () {
          b.run();
        }, a);
      };
      g['haxe.Timer'] = Pf;
      Pf.__name__ = 'haxe.Timer';
      Pf.delay = function (a, b) {
        var c = new Pf(b);
        c.run = function () {
          c.stop();
          a();
        };
        return c;
      };
      Pf.prototype = {
        stop: function () {
          null != this.id && (clearInterval(this.id), (this.id = null));
        },
        run: function () {},
        __class__: Pf,
      };
      var Ii = function () {};
      g['haxe._Unserializer.DefaultResolver'] = Ii;
      Ii.__name__ = 'haxe._Unserializer.DefaultResolver';
      Ii.prototype = {
        resolveClass: function (a) {
          return g[a];
        },
        resolveEnum: function (a) {
          return y[a];
        },
        __class__: Ii,
      };
      var pd = function (a) {
        this.buf = a;
        this.length = this.buf.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = pd.DEFAULT_RESOLVER;
        null == a && ((a = new Ii()), (pd.DEFAULT_RESOLVER = a));
        this.resolver = a;
      };
      g['haxe.Unserializer'] = pd;
      pd.__name__ = 'haxe.Unserializer';
      pd.initCodes = function () {
        for (var a = [], b = 0, c = pd.BASE64.length; b < c; ) {
          var d = b++;
          a[pd.BASE64.charCodeAt(d)] = d;
        }
        return a;
      };
      pd.run = function (a) {
        return new pd(a).unserialize();
      };
      pd.prototype = {
        setResolver: function (a) {
          null == a
            ? (null == yg.instance && (yg.instance = new yg()),
              (this.resolver = yg.instance))
            : (this.resolver = a);
        },
        readDigits: function () {
          for (var a = 0, b = !1, c = this.pos; ; ) {
            var d = this.buf.charCodeAt(this.pos);
            if (d != d) break;
            if (45 == d) {
              if (this.pos != c) break;
              b = !0;
            } else {
              if (48 > d || 57 < d) break;
              a = 10 * a + (d - 48);
            }
            this.pos++;
          }
          b && (a *= -1);
          return a;
        },
        readFloat: function () {
          for (var a = this.pos; ; ) {
            var b = this.buf.charCodeAt(this.pos);
            if (b != b) break;
            if ((43 <= b && 58 > b) || 101 == b || 69 == b) this.pos++;
            else break;
          }
          return parseFloat(N.substr(this.buf, a, this.pos - a));
        },
        unserializeObject: function (a) {
          for (;;) {
            if (this.pos >= this.length) throw X.thrown('Invalid object');
            if (103 == this.buf.charCodeAt(this.pos)) break;
            var b = this.unserialize();
            if ('string' != typeof b) throw X.thrown('Invalid object key');
            var c = this.unserialize();
            a[b] = c;
          }
          this.pos++;
        },
        unserializeEnum: function (a, b) {
          if (58 != this.buf.charCodeAt(this.pos++))
            throw X.thrown('Invalid enum format');
          var c = this.readDigits();
          if (0 == c) return w.createEnum(a, b);
          for (var d = []; 0 < c--; ) d.push(this.unserialize());
          return w.createEnum(a, b, d);
        },
        unserialize: function () {
          switch (this.buf.charCodeAt(this.pos++)) {
            case 65:
              var a = this.unserialize(),
                b = this.resolver.resolveClass(a);
              if (null == b) throw X.thrown('Class not found ' + a);
              return b;
            case 66:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw X.thrown('Enum not found ' + a);
              return b;
            case 67:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw X.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              b.hxUnserialize(this);
              if (103 != this.buf.charCodeAt(this.pos++))
                throw X.thrown('Invalid custom data');
              return b;
            case 77:
              a = new pa();
              this.cache.push(a);
              for (var c; 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()), a.set(b, this.unserialize()));
              this.pos++;
              return a;
            case 82:
              a = this.readDigits();
              if (0 > a || a >= this.scache.length)
                throw X.thrown('Invalid string reference');
              return this.scache[a];
            case 97:
              b = [];
              for (this.cache.push(b); ; ) {
                c = this.buf.charCodeAt(this.pos);
                if (104 == c) {
                  this.pos++;
                  break;
                }
                117 == c
                  ? (this.pos++,
                    (a = this.readDigits()),
                    (b[b.length + a - 1] = null))
                  : b.push(this.unserialize());
              }
              return b;
            case 98:
              a = new Pa();
              for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()),
                  (c = this.unserialize()),
                  (a.h[b] = c));
              this.pos++;
              return a;
            case 99:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw X.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              this.unserializeObject(b);
              return b;
            case 100:
              return this.readFloat();
            case 102:
              return !1;
            case 105:
              return this.readDigits();
            case 106:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw X.thrown('Enum not found ' + a);
              this.pos++;
              for (
                var d = this.readDigits(),
                  f = c.__constructs__,
                  h = Array(f.length),
                  k = 0,
                  n = f.length;
                k < n;

              )
                ((b = k++), (h[b] = f[b]._hx_name));
              b = h[d];
              if (null == b)
                throw X.thrown('Unknown enum index ' + a + '@' + d);
              b = this.unserializeEnum(c, b);
              this.cache.push(b);
              return b;
            case 107:
              return NaN;
            case 108:
              b = new bb();
              for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos); )
                b.add(this.unserialize());
              this.pos++;
              return b;
            case 109:
              return -Infinity;
            case 110:
              return null;
            case 111:
              return (
                (b = {}),
                this.cache.push(b),
                this.unserializeObject(b),
                b
              );
            case 112:
              return Infinity;
            case 113:
              a = new mc();
              this.cache.push(a);
              for (c = this.buf.charCodeAt(this.pos++); 58 == c; )
                ((b = this.readDigits()),
                  (c = this.unserialize()),
                  (a.h[b] = c),
                  (c = this.buf.charCodeAt(this.pos++)));
              if (104 != c) throw X.thrown('Invalid IntMap format');
              return a;
            case 114:
              a = this.readDigits();
              if (0 > a || a >= this.cache.length)
                throw X.thrown('Invalid reference');
              return this.cache[a];
            case 115:
              a = this.readDigits();
              c = this.buf;
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw X.thrown('Invalid bytes length');
              d = pd.CODES;
              null == d && ((d = pd.initCodes()), (pd.CODES = d));
              b = this.pos;
              f = a & 3;
              h = b + (a - f);
              k = new zb(new ArrayBuffer(3 * (a >> 2) + (2 <= f ? f - 1 : 0)));
              for (n = 0; b < h; ) {
                var p = d[c.charCodeAt(b++)],
                  g = d[c.charCodeAt(b++)];
                k.b[n++] = ((p << 2) | (g >> 4)) & 255;
                p = d[c.charCodeAt(b++)];
                k.b[n++] = ((g << 4) | (p >> 2)) & 255;
                g = d[c.charCodeAt(b++)];
                k.b[n++] = ((p << 6) | g) & 255;
              }
              2 <= f &&
                ((p = d[c.charCodeAt(b++)]),
                (g = d[c.charCodeAt(b++)]),
                (k.b[n++] = ((p << 2) | (g >> 4)) & 255),
                3 == f &&
                  ((p = d[c.charCodeAt(b++)]),
                  (k.b[n++] = ((g << 4) | (p >> 2)) & 255)));
              this.pos += a;
              this.cache.push(k);
              return k;
            case 116:
              return !0;
            case 118:
              return (
                48 <= this.buf.charCodeAt(this.pos) &&
                57 >= this.buf.charCodeAt(this.pos) &&
                48 <= this.buf.charCodeAt(this.pos + 1) &&
                57 >= this.buf.charCodeAt(this.pos + 1) &&
                48 <= this.buf.charCodeAt(this.pos + 2) &&
                57 >= this.buf.charCodeAt(this.pos + 2) &&
                48 <= this.buf.charCodeAt(this.pos + 3) &&
                57 >= this.buf.charCodeAt(this.pos + 3) &&
                45 == this.buf.charCodeAt(this.pos + 4)
                  ? ((b = N.strDate(N.substr(this.buf, this.pos, 19))),
                    (this.pos += 19))
                  : (b = new Date(this.readFloat())),
                this.cache.push(b),
                b
              );
            case 119:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw X.thrown('Enum not found ' + a);
              b = this.unserializeEnum(c, this.unserialize());
              this.cache.push(b);
              return b;
            case 120:
              throw X.thrown(this.unserialize());
            case 121:
              a = this.readDigits();
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw X.thrown('Invalid string length');
              b = N.substr(this.buf, this.pos, a);
              this.pos += a;
              b = decodeURIComponent(b.split('+').join(' '));
              this.scache.push(b);
              return b;
            case 122:
              return 0;
          }
          this.pos--;
          throw X.thrown(
            'Invalid char ' +
              this.buf.charAt(this.pos) +
              ' at position ' +
              this.pos,
          );
        },
        __class__: pd,
      };
      var yg = function () {};
      g['haxe._Unserializer.NullResolver'] = yg;
      yg.__name__ = 'haxe._Unserializer.NullResolver';
      yg.prototype = {
        resolveClass: function (a) {
          return null;
        },
        resolveEnum: function (a) {
          return null;
        },
        __class__: yg,
      };
      var qh = function (a, b, c) {
        X.call(this, String(a), b, c);
        this.value = a;
        this.__skipStack++;
      };
      g['haxe.ValueException'] = qh;
      qh.__name__ = 'haxe.ValueException';
      qh.__super__ = X;
      qh.prototype = v(X.prototype, {
        unwrap: function () {
          return this.value;
        },
        __class__: qh,
      });
      var zg = function () {
        this.a1 = 1;
        this.a2 = 0;
      };
      g['haxe.crypto.Adler32'] = zg;
      zg.__name__ = 'haxe.crypto.Adler32';
      zg.read = function (a) {
        var b = new zg(),
          c = a.readByte(),
          d = a.readByte(),
          f = a.readByte();
        a = a.readByte();
        b.a1 = (f << 8) | a;
        b.a2 = (c << 8) | d;
        return b;
      };
      zg.prototype = {
        update: function (a, b, c) {
          var d = this.a1,
            f = this.a2,
            h = b;
          for (b += c; h < b; )
            ((c = h++), (d = (d + a.b[c]) % 65521), (f = (f + d) % 65521));
          this.a1 = d;
          this.a2 = f;
        },
        equals: function (a) {
          return a.a1 == this.a1 ? a.a2 == this.a2 : !1;
        },
        __class__: zg,
      };
      var zb = function (a) {
        this.length = a.byteLength;
        this.b = new Uint8Array(a);
        this.b.bufferValue = a;
        a.hxBytes = this;
        a.bytes = this.b;
      };
      g['haxe.io.Bytes'] = zb;
      zb.__name__ = 'haxe.io.Bytes';
      zb.ofString = function (a, b) {
        b = [];
        for (var c = 0; c < a.length; ) {
          var d = a.charCodeAt(c++);
          55296 <= d &&
            56319 >= d &&
            (d = ((d - 55232) << 10) | (a.charCodeAt(c++) & 1023));
          127 >= d
            ? b.push(d)
            : (2047 >= d
                ? b.push(192 | (d >> 6))
                : (65535 >= d
                    ? b.push(224 | (d >> 12))
                    : (b.push(240 | (d >> 18)), b.push(128 | ((d >> 12) & 63))),
                  b.push(128 | ((d >> 6) & 63))),
              b.push(128 | (d & 63)));
        }
        return new zb(new Uint8Array(b).buffer);
      };
      zb.ofData = function (a) {
        var b = a.hxBytes;
        return null != b ? b : new zb(a);
      };
      zb.prototype = {
        blit: function (a, b, c, d) {
          if (
            0 > a ||
            0 > c ||
            0 > d ||
            a + d > this.length ||
            c + d > b.length
          )
            throw X.thrown(oe.OutsideBounds);
          0 == c && d == b.b.byteLength
            ? this.b.set(b.b, a)
            : this.b.set(b.b.subarray(c, c + d), a);
        },
        setUInt16: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setUint16(a, b, !0);
        },
        setInt32: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setInt32(a, b, !0);
        },
        getString: function (a, b, c) {
          if (0 > a || 0 > b || a + b > this.length)
            throw X.thrown(oe.OutsideBounds);
          c = '';
          var d = this.b,
            f = wb.fromCharCode,
            h = a;
          for (a += b; h < a; )
            if (((b = d[h++]), 128 > b)) {
              if (0 == b) break;
              c += f(b);
            } else if (224 > b) c += f(((b & 63) << 6) | (d[h++] & 127));
            else if (240 > b) {
              var k = d[h++];
              c += f(((b & 31) << 12) | ((k & 127) << 6) | (d[h++] & 127));
            } else {
              k = d[h++];
              var n = d[h++];
              b =
                ((b & 15) << 18) |
                ((k & 127) << 12) |
                ((n & 127) << 6) |
                (d[h++] & 127);
              c += f((b >> 10) + 55232);
              c += f((b & 1023) | 56320);
            }
          return c;
        },
        toString: function () {
          return this.getString(0, this.length);
        },
        __class__: zb,
      };
      var Jc = function () {};
      g['haxe.ds.ArraySort'] = Jc;
      Jc.__name__ = 'haxe.ds.ArraySort';
      Jc.sort = function (a, b) {
        Jc.rec(a, b, 0, a.length);
      };
      Jc.rec = function (a, b, c, d) {
        var f = (c + d) >> 1;
        if (12 > d - c) {
          if (!(d <= c))
            for (f = c + 1; f < d; )
              for (var h = f++; h > c; ) {
                if (0 > b(a[h], a[h - 1])) Jc.swap(a, h - 1, h);
                else break;
                --h;
              }
        } else
          (Jc.rec(a, b, c, f),
            Jc.rec(a, b, f, d),
            Jc.doMerge(a, b, c, f, d, f - c, d - f));
      };
      Jc.doMerge = function (a, b, c, d, f, h, k) {
        if (0 != h && 0 != k)
          if (2 == h + k) 0 > b(a[d], a[c]) && Jc.swap(a, d, c);
          else {
            if (h > k) {
              var n = h >> 1;
              var p = c + n;
              var g = Jc.lower(a, b, d, f, p);
              var q = g - d;
            } else
              ((q = k >> 1),
                (g = d + q),
                (p = Jc.upper(a, b, c, d, g)),
                (n = p - c));
            Jc.rotate(a, b, p, d, g);
            d = p + q;
            Jc.doMerge(a, b, c, p, d, n, q);
            Jc.doMerge(a, b, d, g, f, h - n, k - q);
          }
      };
      Jc.rotate = function (a, b, c, d, f) {
        if (c != d && d != f)
          for (b = Jc.gcd(f - c, d - c); 0 != b--; ) {
            for (
              var h = a[c + b], k = d - c, n = c + b, p = c + b + k;
              p != c + b;

            )
              ((a[n] = a[p]),
                (n = p),
                (p = f - p > k ? p + k : c + (k - (f - p))));
            a[n] = h;
          }
      };
      Jc.gcd = function (a, b) {
        for (; 0 != b; ) {
          var c = a % b;
          a = b;
          b = c;
        }
        return a;
      };
      Jc.upper = function (a, b, c, d, f) {
        d -= c;
        for (var h, k; 0 < d; )
          ((h = d >> 1),
            (k = c + h),
            0 > b(a[f], a[k]) ? (d = h) : ((c = k + 1), (d = d - h - 1)));
        return c;
      };
      Jc.lower = function (a, b, c, d, f) {
        d -= c;
        for (var h, k; 0 < d; )
          ((h = d >> 1),
            (k = c + h),
            0 > b(a[k], a[f]) ? ((c = k + 1), (d = d - h - 1)) : (d = h));
        return c;
      };
      Jc.swap = function (a, b, c) {
        var d = a[b];
        a[b] = a[c];
        a[c] = d;
      };
      var mc = function () {
        this.h = {};
      };
      g['haxe.ds.IntMap'] = mc;
      mc.__name__ = 'haxe.ds.IntMap';
      mc.__interfaces__ = [Y];
      mc.prototype = {
        set: function (a, b) {
          this.h[a] = b;
        },
        get: function (a) {
          return this.h[a];
        },
        remove: function (a) {
          if (!this.h.hasOwnProperty(a)) return !1;
          delete this.h[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h) this.h.hasOwnProperty(b) && a.push(+b);
          return new yf(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a];
            },
          };
        },
        __class__: mc,
      };
      var Lh = function (a, b) {
        this.item = a;
        this.next = b;
      };
      g['haxe.ds._List.ListNode'] = Lh;
      Lh.__name__ = 'haxe.ds._List.ListNode';
      Lh.prototype = { __class__: Lh };
      var Tj = function (a) {
        this.head = a;
      };
      g['haxe.ds._List.ListIterator'] = Tj;
      Tj.__name__ = 'haxe.ds._List.ListIterator';
      Tj.prototype = {
        hasNext: function () {
          return null != this.head;
        },
        next: function () {
          var a = this.head.item;
          this.head = this.head.next;
          return a;
        },
        __class__: Tj,
      };
      var Pa = function () {
        this.h = Object.create(null);
      };
      g['haxe.ds.StringMap'] = Pa;
      Pa.__name__ = 'haxe.ds.StringMap';
      Pa.__interfaces__ = [Y];
      Pa.prototype = {
        get: function (a) {
          return this.h[a];
        },
        set: function (a, b) {
          this.h[a] = b;
        },
        remove: function (a) {
          return Object.prototype.hasOwnProperty.call(this.h, a)
            ? (delete this.h[a], !0)
            : !1;
        },
        keys: function () {
          return new Oh(this.h);
        },
        __class__: Pa,
      };
      var Oh = function (a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0;
      };
      g['haxe.ds._StringMap.StringMapKeyIterator'] = Oh;
      Oh.__name__ = 'haxe.ds._StringMap.StringMapKeyIterator';
      Oh.prototype = {
        hasNext: function () {
          return this.current < this.length;
        },
        next: function () {
          return this.keys[this.current++];
        },
        __class__: Oh,
      };
      var Ag = function (a, b, c) {
        X.call(this, a, b);
        this.posInfos =
          null == c
            ? {
                fileName: '(unknown)',
                lineNumber: 0,
                className: '(unknown)',
                methodName: '(unknown)',
              }
            : c;
        this.__skipStack++;
      };
      g['haxe.exceptions.PosException'] = Ag;
      Ag.__name__ = 'haxe.exceptions.PosException';
      Ag.__super__ = X;
      Ag.prototype = v(X.prototype, {
        toString: function () {
          return (
            '' +
            X.prototype.toString.call(this) +
            ' in ' +
            this.posInfos.className +
            '.' +
            this.posInfos.methodName +
            ' at ' +
            this.posInfos.fileName +
            ':' +
            this.posInfos.lineNumber
          );
        },
        __class__: Ag,
      });
      var Ji = function (a, b, c) {
        null == a && (a = 'Not implemented');
        Ag.call(this, a, b, c);
        this.__skipStack++;
      };
      g['haxe.exceptions.NotImplementedException'] = Ji;
      Ji.__name__ = 'haxe.exceptions.NotImplementedException';
      Ji.__super__ = Ag;
      Ji.prototype = v(Ag.prototype, { __class__: Ji });
      var Ki = function () {
        this.size = this.pos = 0;
      };
      g['haxe.io.BytesBuffer'] = Ki;
      Ki.__name__ = 'haxe.io.BytesBuffer';
      Ki.prototype = {
        addByte: function (a) {
          this.pos == this.size && this.grow(1);
          this.view.setUint8(this.pos++, a);
        },
        add: function (a) {
          this.pos + a.length > this.size && this.grow(a.length);
          if (0 != this.size) {
            var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
            this.u8.set(b, this.pos);
            this.pos += a.length;
          }
        },
        addBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw X.thrown(oe.OutsideBounds);
          this.pos + c > this.size && this.grow(c);
          0 != this.size &&
            ((a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, c)),
            this.u8.set(a, this.pos),
            (this.pos += c));
        },
        grow: function (a) {
          var b = this.pos + a;
          for (a = 0 == this.size ? 16 : this.size; a < b; ) a = (3 * a) >> 1;
          b = new ArrayBuffer(a);
          var c = new Uint8Array(b);
          0 < this.size && c.set(this.u8);
          this.size = a;
          this.buffer = b;
          this.u8 = c;
          this.view = new DataView(this.buffer);
        },
        getBytes: function () {
          if (0 == this.size) return new zb(new ArrayBuffer(0));
          var a = new zb(this.buffer);
          a.length = this.pos;
          return a;
        },
        __class__: Ki,
      };
      var Li = function () {};
      g['haxe.io.Input'] = Li;
      Li.__name__ = 'haxe.io.Input';
      Li.prototype = {
        readByte: function () {
          throw new Ji(null, null, {
            fileName: 'haxe/io/Input.hx',
            lineNumber: 53,
            className: 'haxe.io.Input',
            methodName: 'readByte',
          });
        },
        readBytes: function (a, b, c) {
          var d = c,
            f = a.b;
          if (0 > b || 0 > c || b + c > a.length)
            throw X.thrown(oe.OutsideBounds);
          try {
            for (; 0 < d; ) ((f[b] = this.readByte()), ++b, --d);
          } catch (h) {
            if (((Ta.lastError = h), !(X.caught(h).unwrap() instanceof rh)))
              throw h;
          }
          return c - d;
        },
        readFullBytes: function (a, b, c) {
          for (; 0 < c; ) {
            var d = this.readBytes(a, b, c);
            if (0 == d) throw X.thrown(oe.Blocked);
            b += d;
            c -= d;
          }
        },
        read: function (a) {
          for (var b = new zb(new ArrayBuffer(a)), c = 0; 0 < a; ) {
            var d = this.readBytes(b, c, a);
            if (0 == d) throw X.thrown(oe.Blocked);
            c += d;
            a -= d;
          }
          return b;
        },
        readInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          a = this.bigEndian ? b | (a << 8) : a | (b << 8);
          return 0 != (a & 32768) ? a - 65536 : a;
        },
        readUInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          return this.bigEndian ? b | (a << 8) : a | (b << 8);
        },
        readInt32: function () {
          var a = this.readByte(),
            b = this.readByte(),
            c = this.readByte(),
            d = this.readByte();
          return this.bigEndian
            ? d | (c << 8) | (b << 16) | (a << 24)
            : a | (b << 8) | (c << 16) | (d << 24);
        },
        readString: function (a, b) {
          var c = new zb(new ArrayBuffer(a));
          this.readFullBytes(c, 0, a);
          return c.getString(0, a, b);
        },
        __class__: Li,
      };
      var Mi = function (a, b, c) {
        null == b && (b = 0);
        null == c && (c = a.length - b);
        if (0 > b || 0 > c || b + c > a.length)
          throw X.thrown(oe.OutsideBounds);
        this.b = a.b;
        this.pos = b;
        this.totlen = this.len = c;
      };
      g['haxe.io.BytesInput'] = Mi;
      Mi.__name__ = 'haxe.io.BytesInput';
      Mi.__super__ = Li;
      Mi.prototype = v(Li.prototype, {
        readByte: function () {
          if (0 == this.len) throw X.thrown(new rh());
          this.len--;
          return this.b[this.pos++];
        },
        readBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw X.thrown(oe.OutsideBounds);
          if (0 == this.len && 0 < c) throw X.thrown(new rh());
          this.len < c && (c = this.len);
          var d = this.b;
          a = a.b;
          for (var f = 0, h = c; f < h; ) {
            var k = f++;
            a[b + k] = d[this.pos + k];
          }
          this.pos += c;
          this.len -= c;
          return c;
        },
        __class__: Mi,
      });
      var wl = (y['haxe.io.Encoding'] = {
        __ename__: 'haxe.io.Encoding',
        __constructs__: null,
        UTF8: {
          _hx_name: 'UTF8',
          _hx_index: 0,
          __enum__: 'haxe.io.Encoding',
          toString: r,
        },
        RawNative: {
          _hx_name: 'RawNative',
          _hx_index: 1,
          __enum__: 'haxe.io.Encoding',
          toString: r,
        },
      });
      wl.__constructs__ = [wl.UTF8, wl.RawNative];
      var rh = function () {};
      g['haxe.io.Eof'] = rh;
      rh.__name__ = 'haxe.io.Eof';
      rh.prototype = {
        toString: function () {
          return 'Eof';
        },
        __class__: rh,
      };
      var oe = (y['haxe.io.Error'] = {
        __ename__: 'haxe.io.Error',
        __constructs__: null,
        Blocked: {
          _hx_name: 'Blocked',
          _hx_index: 0,
          __enum__: 'haxe.io.Error',
          toString: r,
        },
        Overflow: {
          _hx_name: 'Overflow',
          _hx_index: 1,
          __enum__: 'haxe.io.Error',
          toString: r,
        },
        OutsideBounds: {
          _hx_name: 'OutsideBounds',
          _hx_index: 2,
          __enum__: 'haxe.io.Error',
          toString: r,
        },
        Custom:
          ((G = function (a) {
            return {
              _hx_index: 3,
              e: a,
              __enum__: 'haxe.io.Error',
              toString: r,
            };
          }),
          (G._hx_name = 'Custom'),
          (G.__params__ = ['e']),
          G),
      });
      oe.__constructs__ = [
        oe.Blocked,
        oe.Overflow,
        oe.OutsideBounds,
        oe.Custom,
      ];
      var Jl = {
          fromBytes: function (a, b, c) {
            null == b && (b = 0);
            null == c && (c = (a.length - b) >> 2);
            return new Float32Array(a.b.bufferValue, b, c);
          },
        },
        Ud = function (a) {
          switch (a) {
            case '.':
            case '..':
              this.dir = a;
              this.file = '';
              return;
          }
          var b = a.lastIndexOf('/'),
            c = a.lastIndexOf('\\');
          b < c
            ? ((this.dir = N.substr(a, 0, c)),
              (a = N.substr(a, c + 1, null)),
              (this.backslash = !0))
            : c < b
              ? ((this.dir = N.substr(a, 0, b)), (a = N.substr(a, b + 1, null)))
              : (this.dir = null);
          b = a.lastIndexOf('.');
          -1 != b
            ? ((this.ext = N.substr(a, b + 1, null)),
              (this.file = N.substr(a, 0, b)))
            : ((this.ext = null), (this.file = a));
        };
      g['haxe.io.Path'] = Ud;
      Ud.__name__ = 'haxe.io.Path';
      Ud.withoutDirectory = function (a) {
        a = new Ud(a);
        a.dir = null;
        return a.toString();
      };
      Ud.directory = function (a) {
        a = new Ud(a);
        return null == a.dir ? '' : a.dir;
      };
      Ud.extension = function (a) {
        a = new Ud(a);
        return null == a.ext ? '' : a.ext;
      };
      Ud.prototype = {
        toString: function () {
          return (
            (null == this.dir ? '' : this.dir + (this.backslash ? '\\' : '/')) +
            this.file +
            (null == this.ext ? '' : '.' + this.ext)
          );
        },
        __class__: Ud,
      };
      var yf = function (a) {
        this.current = 0;
        this.array = a;
      };
      g['haxe.iterators.ArrayIterator'] = yf;
      yf.__name__ = 'haxe.iterators.ArrayIterator';
      yf.prototype = {
        hasNext: function () {
          return this.current < this.array.length;
        },
        next: function () {
          return this.array[this.current++];
        },
        __class__: yf,
      };
      var Kc = function (a, b, c) {
        this.xml = b;
        this.message = a;
        this.position = c;
        this.lineNumber = 1;
        for (a = this.positionAtLine = 0; a < c; ) {
          var d = a++;
          d = b.charCodeAt(d);
          10 == d
            ? (this.lineNumber++, (this.positionAtLine = 0))
            : 13 != d && this.positionAtLine++;
        }
      };
      g['haxe.xml.XmlParserException'] = Kc;
      Kc.__name__ = 'haxe.xml.XmlParserException';
      Kc.prototype = {
        toString: function () {
          return (
            va.getClass(this).__name__ +
            ': ' +
            this.message +
            ' at line ' +
            this.lineNumber +
            ' char ' +
            this.positionAtLine
          );
        },
        __class__: Kc,
      };
      var ef = function () {};
      g['haxe.xml.Parser'] = ef;
      ef.__name__ = 'haxe.xml.Parser';
      ef.parse = function (a, b) {
        null == b && (b = !1);
        var c = W.createDocument();
        ef.doParse(a, b, 0, c);
        return c;
      };
      ef.doParse = function (a, b, c, d) {
        null == c && (c = 0);
        for (
          var f = null,
            h = 1,
            k = 1,
            n = null,
            p = 0,
            g = 0,
            q = 0,
            m = new x(),
            u = 1,
            r = -1;
          c < a.length;

        ) {
          var l = a.charCodeAt(c);
          switch (h) {
            case 0:
              switch (l) {
                case 9:
                case 10:
                case 13:
                case 32:
                  break;
                default:
                  h = k;
                  continue;
              }
              break;
            case 1:
              if (60 == l) ((h = 0), (k = 2));
              else {
                p = c;
                h = 13;
                continue;
              }
              break;
            case 2:
              switch (l) {
                case 33:
                  if (91 == a.charCodeAt(c + 1)) {
                    c += 2;
                    if ('CDATA[' != N.substr(a, c, 6).toUpperCase())
                      throw X.thrown(new Kc('Expected <![CDATA[', a, c));
                    c += 5;
                    h = 17;
                  } else if (
                    68 == a.charCodeAt(c + 1) ||
                    100 == a.charCodeAt(c + 1)
                  ) {
                    if ('OCTYPE' != N.substr(a, c + 2, 6).toUpperCase())
                      throw X.thrown(new Kc('Expected <!DOCTYPE', a, c));
                    c += 8;
                    h = 16;
                  } else {
                    if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2))
                      throw X.thrown(new Kc('Expected \x3c!--', a, c));
                    c += 2;
                    h = 15;
                  }
                  p = c + 1;
                  break;
                case 47:
                  if (null == d)
                    throw X.thrown(new Kc('Expected node name', a, c));
                  p = c + 1;
                  h = 0;
                  k = 10;
                  break;
                case 63:
                  h = 14;
                  p = c;
                  break;
                default:
                  h = 3;
                  p = c;
                  continue;
              }
              break;
            case 3:
              if (
                !(
                  (97 <= l && 122 >= l) ||
                  (65 <= l && 90 >= l) ||
                  (48 <= l && 57 >= l) ||
                  58 == l ||
                  46 == l ||
                  95 == l ||
                  45 == l
                )
              ) {
                if (c == p) throw X.thrown(new Kc('Expected node name', a, c));
                f = W.createElement(N.substr(a, p, c - p));
                d.addChild(f);
                ++g;
                h = 0;
                k = 4;
                continue;
              }
              break;
            case 4:
              switch (l) {
                case 47:
                  h = 11;
                  break;
                case 62:
                  h = 9;
                  break;
                default:
                  h = 5;
                  p = c;
                  continue;
              }
              break;
            case 5:
              if (
                !(
                  (97 <= l && 122 >= l) ||
                  (65 <= l && 90 >= l) ||
                  (48 <= l && 57 >= l) ||
                  58 == l ||
                  46 == l ||
                  95 == l ||
                  45 == l
                )
              ) {
                if (p == c)
                  throw X.thrown(new Kc('Expected attribute name', a, c));
                n = N.substr(a, p, c - p);
                if (f.exists(n))
                  throw X.thrown(
                    new Kc('Duplicate attribute [' + n + ']', a, c),
                  );
                h = 0;
                k = 6;
                continue;
              }
              break;
            case 6:
              if (61 == l) ((h = 0), (k = 7));
              else throw X.thrown(new Kc('Expected =', a, c));
              break;
            case 7:
              switch (l) {
                case 34:
                case 39:
                  m = new x();
                  h = 8;
                  p = c + 1;
                  r = l;
                  break;
                default:
                  throw X.thrown(new Kc('Expected "', a, c));
              }
              break;
            case 8:
              switch (l) {
                case 38:
                  u = c - p;
                  m.b += null == u ? N.substr(a, p, null) : N.substr(a, p, u);
                  h = 18;
                  u = 8;
                  p = c + 1;
                  break;
                case 60:
                case 62:
                  if (b)
                    throw X.thrown(
                      new Kc(
                        'Invalid unescaped ' +
                          String.fromCodePoint(l) +
                          ' in attribute value',
                        a,
                        c,
                      ),
                    );
                  l == r &&
                    ((k = c - p),
                    (m.b +=
                      null == k ? N.substr(a, p, null) : N.substr(a, p, k)),
                    (k = m.b),
                    (m = new x()),
                    f.set(n, k),
                    (h = 0),
                    (k = 4));
                  break;
                default:
                  l == r &&
                    ((k = c - p),
                    (m.b +=
                      null == k ? N.substr(a, p, null) : N.substr(a, p, k)),
                    (k = m.b),
                    (m = new x()),
                    f.set(n, k),
                    (h = 0),
                    (k = 4));
              }
              break;
            case 9:
              p = c = ef.doParse(a, b, c, f);
              h = 1;
              break;
            case 10:
              if (
                !(
                  (97 <= l && 122 >= l) ||
                  (65 <= l && 90 >= l) ||
                  (48 <= l && 57 >= l) ||
                  58 == l ||
                  46 == l ||
                  95 == l ||
                  45 == l
                )
              ) {
                if (p == c) throw X.thrown(new Kc('Expected node name', a, c));
                k = N.substr(a, p, c - p);
                if (null == d || 0 != d.nodeType)
                  throw X.thrown(
                    new Kc('Unexpected </' + k + '>, tag is not open', a, c),
                  );
                if (d.nodeType != W.Element)
                  throw X.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == d.nodeType ? 'null' : Cb.toString(d.nodeType)),
                  );
                if (k != d.nodeName) {
                  if (d.nodeType != W.Element)
                    throw X.thrown(
                      'Bad node type, expected Element but found ' +
                        (null == d.nodeType ? 'null' : Cb.toString(d.nodeType)),
                    );
                  throw X.thrown(
                    new Kc('Expected </' + d.nodeName + '>', a, c),
                  );
                }
                h = 0;
                k = 12;
                continue;
              }
              break;
            case 11:
              if (62 == l) h = 1;
              else throw X.thrown(new Kc('Expected >', a, c));
              break;
            case 12:
              if (62 == l) return (0 == g && d.addChild(W.createPCData('')), c);
              throw X.thrown(new Kc('Expected >', a, c));
            case 13:
              60 == l
                ? ((k = c - p),
                  (m.b += null == k ? N.substr(a, p, null) : N.substr(a, p, k)),
                  (k = W.createPCData(m.b)),
                  (m = new x()),
                  d.addChild(k),
                  ++g,
                  (h = 0),
                  (k = 2))
                : 38 == l &&
                  ((u = c - p),
                  (m.b += null == u ? N.substr(a, p, null) : N.substr(a, p, u)),
                  (h = 18),
                  (u = 13),
                  (p = c + 1));
              break;
            case 14:
              63 == l &&
                62 == a.charCodeAt(c + 1) &&
                (++c,
                (h = N.substr(a, p + 1, c - p - 2)),
                d.addChild(W.createProcessingInstruction(h)),
                ++g,
                (h = 1));
              break;
            case 15:
              45 == l &&
                45 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                (d.addChild(W.createComment(N.substr(a, p, c - p))),
                ++g,
                (c += 2),
                (h = 1));
              break;
            case 16:
              91 == l
                ? ++q
                : 93 == l
                  ? --q
                  : 62 == l &&
                    0 == q &&
                    (d.addChild(W.createDocType(N.substr(a, p, c - p))),
                    ++g,
                    (h = 1));
              break;
            case 17:
              93 == l &&
                93 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                ((h = W.createCData(N.substr(a, p, c - p))),
                d.addChild(h),
                ++g,
                (c += 2),
                (h = 1));
              break;
            case 18:
              if (59 == l) {
                p = N.substr(a, p, c - p);
                if (35 == p.charCodeAt(0))
                  ((p =
                    120 == p.charCodeAt(1)
                      ? H.parseInt('0' + N.substr(p, 1, p.length - 1))
                      : H.parseInt(N.substr(p, 1, p.length - 1))),
                    (m.b += String.fromCodePoint(p)));
                else if (Object.prototype.hasOwnProperty.call(ef.escapes.h, p))
                  m.b += H.string(ef.escapes.h[p]);
                else {
                  if (b) throw X.thrown(new Kc('Undefined entity: ' + p, a, c));
                  m.b += H.string('&' + p + ';');
                }
                p = c + 1;
                h = u;
              } else if (
                !(
                  (97 <= l && 122 >= l) ||
                  (65 <= l && 90 >= l) ||
                  (48 <= l && 57 >= l) ||
                  58 == l ||
                  46 == l ||
                  95 == l ||
                  45 == l
                ) &&
                35 != l
              ) {
                if (b)
                  throw X.thrown(
                    new Kc(
                      'Invalid character in entity: ' + String.fromCodePoint(l),
                      a,
                      c,
                    ),
                  );
                m.b += String.fromCodePoint(38);
                h = c - p;
                m.b += null == h ? N.substr(a, p, null) : N.substr(a, p, h);
                --c;
                p = c + 1;
                h = u;
              }
          }
          ++c;
        }
        1 == h && ((p = c), (h = 13));
        if (13 == h) {
          if (0 == d.nodeType) {
            if (d.nodeType != W.Element)
              throw X.thrown(
                'Bad node type, expected Element but found ' +
                  (null == d.nodeType ? 'null' : Cb.toString(d.nodeType)),
              );
            throw X.thrown(new Kc('Unclosed node <' + d.nodeName + '>', a, c));
          }
          if (c != p || 0 == g)
            ((u = c - p),
              (m.b += null == u ? N.substr(a, p, null) : N.substr(a, p, u)),
              d.addChild(W.createPCData(m.b)));
          return c;
        }
        if (!b && 18 == h && 13 == u)
          return (
            (m.b += String.fromCodePoint(38)),
            (u = c - p),
            (m.b += null == u ? N.substr(a, p, null) : N.substr(a, p, u)),
            d.addChild(W.createPCData(m.b)),
            c
          );
        throw X.thrown(new Kc('Unexpected end', a, c));
      };
      var Df = function (a) {
        this.output = new x();
        this.pretty = a;
      };
      g['haxe.xml.Printer'] = Df;
      Df.__name__ = 'haxe.xml.Printer';
      Df.print = function (a, b) {
        null == b && (b = !1);
        b = new Df(b);
        b.writeNode(a, '');
        return b.output.b;
      };
      Df.prototype = {
        writeNode: function (a, b) {
          switch (a.nodeType) {
            case 0:
              this.output.b += H.string(b + '<');
              if (a.nodeType != W.Element)
                throw X.thrown(
                  'Bad node type, expected Element but found ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              this.output.b += H.string(a.nodeName);
              for (var c = a.attributes(); c.hasNext(); ) {
                var d = c.next();
                this.output.b += H.string(' ' + d + '="');
                d = O.htmlEscape(a.get(d), !0);
                this.output.b += H.string(d);
                this.output.b += '"';
              }
              if (this.hasChildren(a)) {
                this.output.b += '>';
                this.pretty && (this.output.b += '\n');
                if (a.nodeType != W.Document && a.nodeType != W.Element)
                  throw X.thrown(
                    'Bad node type, expected Element or Document but found ' +
                      (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                  );
                c = 0;
                for (d = a.children; c < d.length; ) {
                  var f = d[c++];
                  this.writeNode(f, this.pretty ? b + '\t' : b);
                }
                this.output.b += H.string(b + '</');
                if (a.nodeType != W.Element)
                  throw X.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                  );
                this.output.b += H.string(a.nodeName);
                this.output.b += '>';
              } else this.output.b += '/>';
              this.pretty && (this.output.b += '\n');
              break;
            case 1:
              if (a.nodeType == W.Document || a.nodeType == W.Element)
                throw X.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              a = a.nodeValue;
              0 != a.length &&
                ((d = b + O.htmlEscape(a)),
                (this.output.b += H.string(d)),
                this.pretty && (this.output.b += '\n'));
              break;
            case 2:
              this.output.b += H.string(b + '<![CDATA[');
              if (a.nodeType == W.Document || a.nodeType == W.Element)
                throw X.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              this.output.b += H.string(a.nodeValue);
              this.output.b += ']]\x3e';
              this.pretty && (this.output.b += '\n');
              break;
            case 3:
              if (a.nodeType == W.Document || a.nodeType == W.Element)
                throw X.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              a = a.nodeValue;
              a = a.replace(/[\n\r\t]+/g, '');
              this.output.b += null == b ? 'null' : '' + b;
              d = O.trim('\x3c!--' + a + '--\x3e');
              this.output.b += H.string(d);
              this.pretty && (this.output.b += '\n');
              break;
            case 4:
              if (a.nodeType == W.Document || a.nodeType == W.Element)
                throw X.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              this.output.b += H.string('<!DOCTYPE ' + a.nodeValue + '>');
              this.pretty && (this.output.b += '\n');
              break;
            case 5:
              if (a.nodeType == W.Document || a.nodeType == W.Element)
                throw X.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              this.output.b += H.string('<?' + a.nodeValue + '?>');
              this.pretty && (this.output.b += '\n');
              break;
            case 6:
              if (a.nodeType != W.Document && a.nodeType != W.Element)
                throw X.thrown(
                  'Bad node type, expected Element or Document but found ' +
                    (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
                );
              c = 0;
              for (d = a.children; c < d.length; )
                ((f = d[c++]), this.writeNode(f, b));
          }
        },
        hasChildren: function (a) {
          if (a.nodeType != W.Document && a.nodeType != W.Element)
            throw X.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == a.nodeType ? 'null' : Cb.toString(a.nodeType)),
            );
          var b = 0;
          for (a = a.children; b < a.length; ) {
            var c = a[b++];
            switch (c.nodeType) {
              case 0:
              case 1:
                return !0;
              case 2:
              case 3:
                if (c.nodeType == W.Document || c.nodeType == W.Element)
                  throw X.thrown(
                    'Bad node type, unexpected ' +
                      (null == c.nodeType ? 'null' : Cb.toString(c.nodeType)),
                  );
                if (0 != O.ltrim(c.nodeValue).length) return !0;
            }
          }
          return !1;
        },
        __class__: Df,
      };
      var Bg = (y['haxe.zip.ExtraField'] = {
        __ename__: 'haxe.zip.ExtraField',
        __constructs__: null,
        FUnknown:
          ((G = function (a, b) {
            return {
              _hx_index: 0,
              tag: a,
              bytes: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: r,
            };
          }),
          (G._hx_name = 'FUnknown'),
          (G.__params__ = ['tag', 'bytes']),
          G),
        FInfoZipUnicodePath:
          ((G = function (a, b) {
            return {
              _hx_index: 1,
              name: a,
              crc: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: r,
            };
          }),
          (G._hx_name = 'FInfoZipUnicodePath'),
          (G.__params__ = ['name', 'crc']),
          G),
        FUtf8: {
          _hx_name: 'FUtf8',
          _hx_index: 2,
          __enum__: 'haxe.zip.ExtraField',
          toString: r,
        },
      });
      Bg.__constructs__ = [Bg.FUnknown, Bg.FInfoZipUnicodePath, Bg.FUtf8];
      var pe = (y['haxe.zip.Huffman'] = {
        __ename__: 'haxe.zip.Huffman',
        __constructs__: null,
        Found:
          ((G = function (a) {
            return {
              _hx_index: 0,
              i: a,
              __enum__: 'haxe.zip.Huffman',
              toString: r,
            };
          }),
          (G._hx_name = 'Found'),
          (G.__params__ = ['i']),
          G),
        NeedBit:
          ((G = function (a, b) {
            return {
              _hx_index: 1,
              left: a,
              right: b,
              __enum__: 'haxe.zip.Huffman',
              toString: r,
            };
          }),
          (G._hx_name = 'NeedBit'),
          (G.__params__ = ['left', 'right']),
          G),
        NeedBits:
          ((G = function (a, b) {
            return {
              _hx_index: 2,
              n: a,
              table: b,
              __enum__: 'haxe.zip.Huffman',
              toString: r,
            };
          }),
          (G._hx_name = 'NeedBits'),
          (G.__params__ = ['n', 'table']),
          G),
      });
      pe.__constructs__ = [pe.Found, pe.NeedBit, pe.NeedBits];
      var nk = function () {};
      g['haxe.zip.HuffTools'] = nk;
      nk.__name__ = 'haxe.zip.HuffTools';
      nk.prototype = {
        treeDepth: function (a) {
          switch (a._hx_index) {
            case 0:
              return 0;
            case 1:
              var b = a.right;
              a = this.treeDepth(a.left);
              b = this.treeDepth(b);
              return 1 + (a < b ? a : b);
            case 2:
              throw X.thrown('assert');
          }
        },
        treeCompress: function (a) {
          var b = this.treeDepth(a);
          if (0 == b) return a;
          if (1 == b) {
            if (1 == a._hx_index)
              return (
                (b = a.right),
                pe.NeedBit(this.treeCompress(a.left), this.treeCompress(b))
              );
            throw X.thrown('assert');
          }
          for (var c = [], d = 0, f = 1 << b; d < f; )
            (d++, c.push(pe.Found(-1)));
          this.treeWalk(c, 0, 0, b, a);
          return pe.NeedBits(b, c);
        },
        treeWalk: function (a, b, c, d, f) {
          if (1 == f._hx_index) {
            var h = f.left,
              k = f.right;
            0 < d
              ? (this.treeWalk(a, b, c + 1, d - 1, h),
                this.treeWalk(a, b | (1 << c), c + 1, d - 1, k))
              : (a[b] = this.treeCompress(f));
          } else a[b] = this.treeCompress(f);
        },
        treeMake: function (a, b, c, d) {
          if (d > b) throw X.thrown('Invalid huffman');
          var f = (c << 5) | d;
          if (a.h.hasOwnProperty(f)) return pe.Found(a.h[f]);
          c <<= 1;
          ++d;
          return pe.NeedBit(
            this.treeMake(a, b, c, d),
            this.treeMake(a, b, c | 1, d),
          );
        },
        make: function (a, b, c, d) {
          if (1 == c) return pe.NeedBit(pe.Found(0), pe.Found(0));
          var f = [],
            h = [];
          if (32 < d) throw X.thrown('Invalid huffman');
          for (var k = 0, n = d; k < n; ) (k++, f.push(0), h.push(0));
          k = 0;
          for (n = c; k < n; ) {
            var p = k++;
            p = a[p + b];
            if (p >= d) throw X.thrown('Invalid huffman');
            f[p]++;
          }
          var g = 0;
          k = 1;
          for (n = d - 1; k < n; )
            ((p = k++), (g = (g + f[p]) << 1), (h[p] = g));
          f = new mc();
          k = 0;
          for (n = c; k < n; )
            ((p = k++),
              (c = a[p + b]),
              0 != c &&
                ((g = h[c - 1]), (h[c - 1] = g + 1), (f.h[(g << 5) | c] = p)));
          return this.treeCompress(
            pe.NeedBit(this.treeMake(f, d, 0, 1), this.treeMake(f, d, 1, 1)),
          );
        },
        __class__: nk,
      };
      var ok = function (a) {
        this.buffer = new zb(new ArrayBuffer(65536));
        this.pos = 0;
        a && (this.crc = new zg());
      };
      g['haxe.zip._InflateImpl.Window'] = ok;
      ok.__name__ = 'haxe.zip._InflateImpl.Window';
      ok.prototype = {
        slide: function () {
          null != this.crc && this.crc.update(this.buffer, 0, 32768);
          var a = new zb(new ArrayBuffer(65536));
          this.pos -= 32768;
          a.blit(0, this.buffer, 32768, this.pos);
          this.buffer = a;
        },
        addBytes: function (a, b, c) {
          65536 < this.pos + c && this.slide();
          this.buffer.blit(this.pos, a, b, c);
          this.pos += c;
        },
        addByte: function (a) {
          65536 == this.pos && this.slide();
          this.buffer.b[this.pos] = a & 255;
          this.pos++;
        },
        getLastChar: function () {
          return this.buffer.b[this.pos - 1];
        },
        available: function () {
          return this.pos;
        },
        checksum: function () {
          null != this.crc && this.crc.update(this.buffer, 0, this.pos);
          return this.crc;
        },
        __class__: ok,
      };
      var wc = (y['haxe.zip._InflateImpl.State'] = {
        __ename__: 'haxe.zip._InflateImpl.State',
        __constructs__: null,
        Head: {
          _hx_name: 'Head',
          _hx_index: 0,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Block: {
          _hx_name: 'Block',
          _hx_index: 1,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        CData: {
          _hx_name: 'CData',
          _hx_index: 2,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Flat: {
          _hx_name: 'Flat',
          _hx_index: 3,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Crc: {
          _hx_name: 'Crc',
          _hx_index: 4,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Dist: {
          _hx_name: 'Dist',
          _hx_index: 5,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        DistOne: {
          _hx_name: 'DistOne',
          _hx_index: 6,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Done: {
          _hx_name: 'Done',
          _hx_index: 7,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
      });
      wc.__constructs__ = [
        wc.Head,
        wc.Block,
        wc.CData,
        wc.Flat,
        wc.Crc,
        wc.Dist,
        wc.DistOne,
        wc.Done,
      ];
      var ad = function (a, b, c) {
        null == c && (c = !0);
        null == b && (b = !0);
        this.isFinal = !1;
        this.htools = new nk();
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.dist = this.len = 0;
        this.state = b ? wc.Head : wc.Block;
        this.input = a;
        this.needed = this.nbits = this.bits = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.window = new ok(c);
      };
      g['haxe.zip.InflateImpl'] = ad;
      ad.__name__ = 'haxe.zip.InflateImpl';
      ad.prototype = {
        buildFixedHuffman: function () {
          if (null != ad.FIXED_HUFFMAN) return ad.FIXED_HUFFMAN;
          for (var a = [], b = 0; 288 > b; ) {
            var c = b++;
            a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8);
          }
          ad.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
          return ad.FIXED_HUFFMAN;
        },
        readBytes: function (a, b, c) {
          this.needed = c;
          this.outpos = b;
          this.output = a;
          if (0 < c) for (; this.inflateLoop(); );
          return c - this.needed;
        },
        getBits: function (a) {
          for (; this.nbits < a; )
            ((this.bits |= this.input.readByte() << this.nbits),
              (this.nbits += 8));
          var b = this.bits & ((1 << a) - 1);
          this.nbits -= a;
          this.bits >>= a;
          return b;
        },
        getBit: function () {
          0 == this.nbits &&
            ((this.nbits = 8), (this.bits = this.input.readByte()));
          var a = 1 == (this.bits & 1);
          this.nbits--;
          this.bits >>= 1;
          return a;
        },
        getRevBits: function (a) {
          return 0 == a
            ? 0
            : this.getBit()
              ? (1 << (a - 1)) | this.getRevBits(a - 1)
              : this.getRevBits(a - 1);
        },
        resetBits: function () {
          this.nbits = this.bits = 0;
        },
        addBytes: function (a, b, c) {
          this.window.addBytes(a, b, c);
          this.output.blit(this.outpos, a, b, c);
          this.needed -= c;
          this.outpos += c;
        },
        addByte: function (a) {
          this.window.addByte(a);
          this.output.b[this.outpos] = a & 255;
          this.needed--;
          this.outpos++;
        },
        addDistOne: function (a) {
          for (var b = this.window.getLastChar(), c = 0; c < a; )
            (c++, this.addByte(b));
        },
        addDist: function (a, b) {
          this.addBytes(this.window.buffer, this.window.pos - a, b);
        },
        applyHuffman: function (a) {
          switch (a._hx_index) {
            case 0:
              var b = a.i;
              return b;
            case 1:
              return (
                (b = a.left),
                (a = a.right),
                this.applyHuffman(this.getBit() ? a : b)
              );
            case 2:
              return ((b = a.n), this.applyHuffman(a.table[this.getBits(b)]));
          }
        },
        inflateLengths: function (a, b) {
          for (var c = 0, d = 0; c < b; ) {
            var f = this.applyHuffman(this.huffman);
            switch (f) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                d = f;
                a[c] = f;
                ++c;
                break;
              case 16:
                f = c + 3 + this.getBits(2);
                if (f > b) throw X.thrown('Invalid data');
                for (; c < f; ) ((a[c] = d), ++c);
                break;
              case 17:
                c += 3 + this.getBits(3);
                if (c > b) throw X.thrown('Invalid data');
                break;
              case 18:
                c += 11 + this.getBits(7);
                if (c > b) throw X.thrown('Invalid data');
                break;
              default:
                throw X.thrown('Invalid data');
            }
          }
        },
        inflateLoop: function () {
          switch (this.state._hx_index) {
            case 0:
              var a = this.input.readByte();
              if (8 != (a & 15)) throw X.thrown('Invalid data');
              var b = this.input.readByte(),
                c = 0 != (b & 32);
              if (0 != ((a << 8) + b) % 31) throw X.thrown('Invalid data');
              if (c) throw X.thrown('Unsupported dictionary');
              this.state = wc.Block;
              return !0;
            case 1:
              switch (((this.isFinal = this.getBit()), this.getBits(2))) {
                case 0:
                  this.len = this.input.readUInt16();
                  if (this.input.readUInt16() != 65535 - this.len)
                    throw X.thrown('Invalid data');
                  this.state = wc.Flat;
                  a = this.inflateLoop();
                  this.resetBits();
                  return a;
                case 1:
                  return (
                    (this.huffman = this.buildFixedHuffman()),
                    (this.huffdist = null),
                    (this.state = wc.CData),
                    !0
                  );
                case 2:
                  a = this.getBits(5) + 257;
                  b = this.getBits(5) + 1;
                  var d = this.getBits(4) + 4;
                  c = 0;
                  for (var f = d; c < f; ) {
                    var h = c++;
                    this.lengths[ad.CODE_LENGTHS_POS[h]] = this.getBits(3);
                  }
                  c = d;
                  for (f = 19; c < f; )
                    ((h = c++), (this.lengths[ad.CODE_LENGTHS_POS[h]] = 0));
                  this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                  d = [];
                  c = 0;
                  for (f = a + b; c < f; ) (c++, d.push(0));
                  this.inflateLengths(d, a + b);
                  this.huffdist = this.htools.make(d, a, b, 16);
                  this.huffman = this.htools.make(d, 0, a, 16);
                  this.state = wc.CData;
                  return !0;
                default:
                  throw X.thrown('Invalid data');
              }
            case 2:
              b = this.applyHuffman(this.huffman);
              if (256 > b) return (this.addByte(b), 0 < this.needed);
              if (256 == b) this.state = this.isFinal ? wc.Crc : wc.Block;
              else {
                b -= 257;
                a = ad.LEN_EXTRA_BITS_TBL[b];
                if (-1 == a) throw X.thrown('Invalid data');
                this.len = ad.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                b =
                  null == this.huffdist
                    ? this.getRevBits(5)
                    : this.applyHuffman(this.huffdist);
                a = ad.DIST_EXTRA_BITS_TBL[b];
                if (-1 == a) throw X.thrown('Invalid data');
                this.dist = ad.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                if (this.dist > this.window.available())
                  throw X.thrown('Invalid data');
                this.state = 1 == this.dist ? wc.DistOne : wc.Dist;
              }
              return !0;
            case 3:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                (b = this.input.read(a)),
                (this.len -= a),
                this.addBytes(b, 0, a),
                0 == this.len &&
                  (this.state = this.isFinal ? wc.Crc : wc.Block),
                0 < this.needed
              );
            case 4:
              a = this.window.checksum();
              if (null == a) return ((this.state = wc.Done), !0);
              b = zg.read(this.input);
              if (!a.equals(b)) throw X.thrown('Invalid CRC');
              this.state = wc.Done;
              return !0;
            case 5:
              for (; 0 < this.len && 0 < this.needed; )
                ((a = this.len < this.dist ? this.len : this.dist),
                  (a = this.needed < a ? this.needed : a),
                  this.addDist(this.dist, a),
                  (this.len -= a));
              0 == this.len && (this.state = wc.CData);
              return 0 < this.needed;
            case 6:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                this.addDistOne(a),
                (this.len -= a),
                0 == this.len && (this.state = wc.CData),
                0 < this.needed
              );
            case 7:
              return !1;
          }
        },
        __class__: ad,
      };
      var sh = function (a) {
        this.i = a;
      };
      g['haxe.zip.Reader'] = sh;
      sh.__name__ = 'haxe.zip.Reader';
      sh.readZip = function (a) {
        return new sh(a).read();
      };
      sh.prototype = {
        readZipDate: function () {
          var a = this.i.readUInt16(),
            b = (a >> 11) & 31,
            c = (a >> 5) & 63;
          a &= 31;
          var d = this.i.readUInt16();
          return new Date(
            (d >> 9) + 1980,
            ((d >> 5) & 15) - 1,
            d & 31,
            b,
            c,
            a << 1,
          );
        },
        readExtraFields: function (a) {
          for (var b = new bb(); 0 < a; ) {
            if (4 > a) throw X.thrown('Invalid extra fields data');
            var c = this.i.readUInt16(),
              d = this.i.readUInt16();
            if (a < d) throw X.thrown('Invalid extra fields data');
            if (28789 == c) {
              var f = this.i.readByte();
              if (1 != f) {
                var h = new Ki();
                h.addByte(f);
                h.add(this.i.read(d - 1));
                b.add(Bg.FUnknown(c, h.getBytes()));
              } else
                ((c = this.i.readInt32()),
                  (f = this.i.read(d - 5).toString()),
                  b.add(Bg.FInfoZipUnicodePath(f, c)));
            } else b.add(Bg.FUnknown(c, this.i.read(d)));
            a -= 4 + d;
          }
          return b;
        },
        readEntryHeader: function () {
          var a = this.i,
            b = a.readInt32();
          if (33639248 == b || 101010256 == b) return null;
          if (67324752 != b) throw X.thrown('Invalid Zip Data');
          a.readUInt16();
          b = a.readUInt16();
          var c = 0 != (b & 2048);
          if (0 != (b & 63473)) throw X.thrown('Unsupported flags ' + b);
          var d = a.readUInt16(),
            f = 0 != d;
          if (f && 8 != d) throw X.thrown('Unsupported compression ' + d);
          d = this.readZipDate();
          var h = a.readInt32(),
            k = a.readInt32(),
            n = a.readInt32(),
            p = a.readInt16(),
            g = a.readInt16();
          a = a.readString(p);
          g = this.readExtraFields(g);
          c && g.push(Bg.FUtf8);
          0 != (b & 8) && (h = null);
          return {
            fileName: a,
            fileSize: n,
            fileTime: d,
            compressed: f,
            dataSize: k,
            data: null,
            crc32: h,
            extraFields: g,
          };
        },
        read: function () {
          for (var a = new bb(), b = null; ; ) {
            var c = this.readEntryHeader();
            if (null == c) break;
            if (null == c.crc32) {
              if (c.compressed) {
                null == b && (b = new zb(new ArrayBuffer(65536)));
                for (var d = new Ki(), f = new ad(this.i, !1, !1); ; ) {
                  var h = f.readBytes(b, 0, 65536);
                  d.addBytes(b, 0, h);
                  if (65536 > h) break;
                }
                c.data = d.getBytes();
              } else c.data = this.i.read(c.dataSize);
              c.crc32 = this.i.readInt32();
              134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
              c.dataSize = this.i.readInt32();
              c.fileSize = this.i.readInt32();
              c.dataSize = c.fileSize;
              c.compressed = !1;
            } else c.data = this.i.read(c.dataSize);
            a.add(c);
          }
          return a;
        },
        __class__: sh,
      };
      var qf = function () {};
      g['js.Browser'] = qf;
      qf.__name__ = 'js.Browser';
      qf.__properties__ = { get_supported: 'get_supported' };
      qf.get_supported = function () {
        return 'undefined' != typeof window &&
          'undefined' != typeof window.location
          ? 'string' == typeof window.location.protocol
          : !1;
      };
      qf.getLocalStorage = function () {
        try {
          var a = window.localStorage;
          a.getItem('');
          if (0 == a.length) {
            var b = '_hx_' + Math.random();
            a.setItem(b, b);
            a.removeItem(b);
          }
          return a;
        } catch (c) {
          return ((Ta.lastError = c), null);
        }
      };
      var dl = function () {};
      g['js.html._CanvasElement.CanvasUtil'] = dl;
      dl.__name__ = 'js.html._CanvasElement.CanvasUtil';
      dl.getContextWebGL = function (a, b) {
        var c = a.getContext('webgl', b);
        if (null != c) return c;
        c = a.getContext('experimental-webgl', b);
        return null != c ? c : null;
      };
      var Qj = function () {
        this.connected = !0;
        this.buttons = [];
        this.axes = [];
      };
      g['lime._internal.backend.html5.GameDeviceData'] = Qj;
      Qj.__name__ = 'lime._internal.backend.html5.GameDeviceData';
      Qj.prototype = { __class__: Qj };
      var qk = function (a) {
        this.parent = a;
        this.id = -1;
        this.gain = 1;
        this.position = new pk();
      };
      g['lime._internal.backend.html5.HTML5AudioSource'] = qk;
      qk.__name__ = 'lime._internal.backend.html5.HTML5AudioSource';
      qk.prototype = {
        dispose: function () {},
        init: function () {},
        play: function () {
          if (
            !this.playing &&
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            this.playing = !0;
            var a = this.getCurrentTime();
            this.completed = !1;
            var b = this.parent.buffer.__srcHowl._volume;
            this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
            this.id = this.parent.buffer.__srcHowl.play();
            this.parent.buffer.__srcHowl._volume = b;
            this.setPosition(this.parent.get_position());
            this.parent.buffer.__srcHowl.on(
              'end',
              l(this, this.howl_onEnd),
              this.id,
            );
            this.setCurrentTime(a);
          }
        },
        stop: function () {
          this.playing = !1;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            (this.parent.buffer.__srcHowl.stop(this.id),
            this.parent.buffer.__srcHowl.off(
              'end',
              l(this, this.howl_onEnd),
              this.id,
            ));
        },
        howl_onEnd: function () {
          this.playing = !1;
          0 < this.loops
            ? (this.loops--, this.stop(), this.play())
            : (null != this.parent.buffer &&
                null != this.parent.buffer.__srcHowl &&
                (this.parent.buffer.__srcHowl.stop(this.id),
                this.parent.buffer.__srcHowl.off(
                  'end',
                  l(this, this.howl_onEnd),
                  this.id,
                )),
              (this.completed = !0),
              this.parent.onComplete.dispatch());
        },
        getCurrentTime: function () {
          if (-1 == this.id) return 0;
          if (this.completed) return this.getLength();
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var a =
              ((1e3 * this.parent.buffer.__srcHowl.seek(this.id)) | 0) -
              this.parent.offset;
            return 0 > a ? 0 : a;
          }
          return 0;
        },
        setCurrentTime: function (a) {
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var b = (a + this.parent.offset) / 1e3;
            0 > b && (b = 0);
            this.parent.buffer.__srcHowl.seek(b, this.id);
          }
          return a;
        },
        getGain: function () {
          return this.gain;
        },
        setGain: function (a) {
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            -1 != this.id &&
            this.parent.buffer.__srcHowl.volume(a, this.id);
          return (this.gain = a);
        },
        getLength: function () {
          return 0 != this.length
            ? this.length
            : null != this.parent.buffer && null != this.parent.buffer.__srcHowl
              ? (1e3 * this.parent.buffer.__srcHowl.duration()) | 0
              : 0;
        },
        setLength: function (a) {
          return (this.length = a);
        },
        setLoops: function (a) {
          return (this.loops = a);
        },
        getPosition: function () {
          return this.position;
        },
        setPosition: function (a) {
          this.position.x = a.x;
          this.position.y = a.y;
          this.position.z = a.z;
          this.position.w = a.w;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            null != this.parent.buffer.__srcHowl.pos &&
            this.parent.buffer.__srcHowl.pos(
              this.position.x,
              this.position.y,
              this.position.z,
              this.id,
            );
          return this.position;
        },
        __class__: qk,
      };
      var Ba = function () {
        this.validStatus0 = new ja('Tizen', 'gi').match(
          window.navigator.userAgent,
        );
      };
      g['lime._internal.backend.html5.HTML5HTTPRequest'] = Ba;
      Ba.__name__ = 'lime._internal.backend.html5.HTML5HTTPRequest';
      Ba.loadImage = function (a) {
        var b = new Gd();
        Ba.activeRequests < Ba.requestLimit
          ? (Ba.activeRequests++, Ba.__loadImage(a, b, 0))
          : Ba.requestQueue.add({
              instance: null,
              uri: a,
              promise: b,
              type: 'IMAGE',
              options: 0,
            });
        return b.future;
      };
      Ba.loadImageFromBytes = function (a, b) {
        var c = URL.createObjectURL(new Blob([a.b.bufferValue], { type: b }));
        return null != c
          ? ((a = new Gd()),
            Ba.activeRequests < Ba.requestLimit
              ? (Ba.activeRequests++, Ba.__loadImage(c, a, 1))
              : Ba.requestQueue.add({
                  instance: null,
                  uri: c,
                  promise: a,
                  type: 'IMAGE',
                  options: 1,
                }),
            a.future)
          : Ba.loadImage('data:' + b + ';base64,' + Be.encode(a));
      };
      Ba.processQueue = function () {
        if (Ba.activeRequests < Ba.requestLimit && 0 < Ba.requestQueue.length) {
          Ba.activeRequests++;
          var a = Ba.requestQueue.pop();
          switch (a.type) {
            case 'BINARY':
              a.instance.__loadData(a.uri, a.promise);
              break;
            case 'IMAGE':
              Ba.__loadImage(a.uri, a.promise, a.options);
              break;
            case 'TEXT':
              a.instance.__loadText(a.uri, a.promise);
              break;
            default:
              Ba.activeRequests--;
          }
        }
      };
      Ba.__fixHostname = function (a) {
        return null == a ? '' : a;
      };
      Ba.__fixPort = function (a, b) {
        if (null == a || '' == a)
          switch (b) {
            case 'ftp:':
              return '21';
            case 'gopher:':
              return '70';
            case 'http:':
              return '80';
            case 'https:':
              return '443';
            case 'ws:':
              return '80';
            case 'wss:':
              return '443';
            default:
              return '';
          }
        return a;
      };
      Ba.__fixProtocol = function (a) {
        return null == a || '' == a ? 'http:' : a;
      };
      Ba.__isInMemoryURI = function (a) {
        return O.startsWith(a, 'data:') ? !0 : O.startsWith(a, 'blob:');
      };
      Ba.__isSameOrigin = function (a) {
        if (null == a || '' == a || Ba.__isInMemoryURI(a)) return !0;
        null == Ba.originElement &&
          ((Ba.originElement = window.document.createElement('a')),
          (Ba.originHostname = Ba.__fixHostname(E.location.hostname)),
          (Ba.originProtocol = Ba.__fixProtocol(E.location.protocol)),
          (Ba.originPort = Ba.__fixPort(E.location.port, Ba.originProtocol)));
        var b = Ba.originElement;
        b.href = a;
        '' == b.hostname && (b.href = b.href);
        var c = Ba.__fixHostname(b.hostname);
        a = Ba.__fixProtocol(b.protocol);
        b = Ba.__fixPort(b.port, a);
        c = '' == c || c == Ba.originHostname;
        b = '' == b || b == Ba.originPort;
        return 'file:' != a && c ? b : !1;
      };
      Ba.__loadImage = function (a, b, c) {
        var d = new window.Image();
        Ba.__isSameOrigin(a) || (d.crossOrigin = 'Anonymous');
        null == Ba.supportsImageProgress &&
          (Ba.supportsImageProgress = 'onprogress' in d);
        if (Ba.supportsImageProgress || Ba.__isInMemoryURI(a))
          (d.addEventListener(
            'load',
            function (f) {
              Ba.__revokeBlobURI(a, c);
              f = new Ve(null, d.width, d.height);
              f.__srcImage = d;
              Ba.activeRequests--;
              Ba.processQueue();
              b.complete(new Xb(f));
            },
            !1,
          ),
            d.addEventListener(
              'progress',
              function (a) {
                b.progress(a.loaded, a.total);
              },
              !1,
            ),
            d.addEventListener(
              'error',
              function (d) {
                Ba.__revokeBlobURI(a, c);
                Ba.activeRequests--;
                Ba.processQueue();
                b.error(new Cg(d.detail, null));
              },
              !1,
            ),
            (d.src = a));
        else {
          var f = new XMLHttpRequest();
          f.onload = function (a) {
            Ba.activeRequests--;
            Ba.processQueue();
            new Xb().__fromBytes(zb.ofData(f.response), function (a) {
              b.complete(a);
            });
          };
          f.onerror = function (a) {
            b.error(new Cg(a.message, null));
          };
          f.onprogress = function (a) {
            a.lengthComputable && b.progress(a.loaded, a.total);
          };
          f.open('GET', a, !0);
          f.responseType = 'arraybuffer';
          f.overrideMimeType('text/plain; charset=x-user-defined');
          f.send(null);
        }
      };
      Ba.__revokeBlobURI = function (a, b) {
        0 != (b & 1) && URL.revokeObjectURL(a);
      };
      Ba.prototype = {
        init: function (a) {
          this.parent = a;
        },
        load: function (a, b, c) {
          this.request = new XMLHttpRequest();
          'POST' == this.parent.method
            ? this.request.upload.addEventListener('progress', b, !1)
            : this.request.addEventListener('progress', b, !1);
          this.request.onreadystatechange = c;
          b = '';
          if (null == this.parent.data) {
            c = Object.keys(this.parent.formData.h);
            for (var d = c.length, f = 0; f < d; ) {
              var h = c[f++];
              0 < b.length && (b += '&');
              var k = this.parent.formData.h[h];
              if (-1 < h.indexOf('[]') && k instanceof Array) {
                var n = [];
                for (k = L(k); k.hasNext(); ) {
                  var p = k.next();
                  n.push(encodeURIComponent(p));
                }
                n = n.join('&amp;' + h + '=');
                b += encodeURIComponent(h) + '=' + n;
              } else
                ((n = encodeURIComponent(h) + '='),
                  (h = H.string(k)),
                  (b += n + encodeURIComponent(h)));
            }
            'GET' == this.parent.method &&
              '' != b &&
              ((a = -1 < a.indexOf('?') ? a + ('&' + b) : a + ('?' + b)),
              (b = ''));
          }
          this.request.open(H.string(this.parent.method), a, !0);
          0 < this.parent.timeout &&
            (this.request.timeout = this.parent.timeout);
          this.binary && (this.request.responseType = 'arraybuffer');
          a = null;
          n = 0;
          for (c = this.parent.headers; n < c.length; )
            ((d = c[n]),
              ++n,
              'Content-Type' == d.name
                ? (a = d.value)
                : this.request.setRequestHeader(d.name, d.value));
          null != this.parent.contentType && (a = this.parent.contentType);
          null == a &&
            (null != this.parent.data
              ? (a = 'application/octet-stream')
              : '' != b && (a = 'application/x-www-form-urlencoded'));
          null != a && this.request.setRequestHeader('Content-Type', a);
          this.parent.withCredentials && (this.request.withCredentials = !0);
          null != this.parent.data
            ? this.request.send(this.parent.data.b.bufferValue)
            : this.request.send(b);
        },
        loadData: function (a) {
          var b = new Gd();
          Ba.activeRequests < Ba.requestLimit
            ? (Ba.activeRequests++, this.__loadData(a, b))
            : Ba.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'BINARY',
                options: 0,
              });
          return b.future;
        },
        loadText: function (a) {
          var b = new Gd();
          Ba.activeRequests < Ba.requestLimit
            ? (Ba.activeRequests++, this.__loadText(a, b))
            : Ba.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'TEXT',
                options: 0,
              });
          return b.future;
        },
        processResponse: function () {
          if (this.parent.enableResponseHeaders) {
            this.parent.responseHeaders = [];
            for (
              var a,
                b,
                c = 0,
                d = this.request.getAllResponseHeaders().split('\n');
              c < d.length;

            )
              ((b = d[c]),
                ++c,
                (a = O.trim(N.substr(b, 0, b.indexOf(':')))),
                (b = O.trim(N.substr(b, b.indexOf(':') + 1, null))),
                '' != a && this.parent.responseHeaders.push(new Ni(a, b)));
          }
          this.parent.responseStatus = this.request.status;
        },
        __loadData: function (a, b) {
          var c = this;
          this.binary = !0;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                ((a = null),
                '' == c.request.responseType
                  ? null != c.request.responseText &&
                    (a = zb.ofString(c.request.responseText))
                  : null != c.request.response &&
                    (a = zb.ofData(c.request.response)),
                null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(a))
                  : (c.processResponse(), b.error(new Cg(c.request.status, a))),
                (c.request = null),
                Ba.activeRequests--,
                Ba.processQueue());
            },
          );
        },
        __loadText: function (a, b) {
          var c = this;
          this.binary = !1;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                (null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(c.request.responseText))
                  : (c.processResponse(),
                    b.error(new Cg(c.request.status, c.request.responseText))),
                (c.request = null),
                Ba.activeRequests--,
                Ba.processQueue());
            },
          );
        },
        __class__: Ba,
      };
      var Ha = function (a) {
        this.imeCompositionActive = !1;
        this.unusedTouchesPool = new bb();
        this.scale = 1;
        this.currentTouches = new mc();
        this.parent = a;
        this.cursor = cc.DEFAULT;
        this.cacheMouseY = this.cacheMouseX = 0;
        var b = a.__attributes;
        Object.prototype.hasOwnProperty.call(b, 'context') || (b.context = {});
        this.renderType = b.context.type;
        Object.prototype.hasOwnProperty.call(b, 'element') &&
          (a.element = b.element);
        var c = a.element;
        Object.prototype.hasOwnProperty.call(b, 'allowHighDPI') &&
          b.allowHighDPI &&
          'dom' != this.renderType &&
          (this.scale = window.devicePixelRatio);
        a.__scale = this.scale;
        this.setWidth = Object.prototype.hasOwnProperty.call(b, 'width')
          ? b.width
          : 0;
        this.setHeight = Object.prototype.hasOwnProperty.call(b, 'height')
          ? b.height
          : 0;
        a.__width = this.setWidth;
        a.__height = this.setHeight;
        a.id = Ha.windowID++;
        c instanceof HTMLCanvasElement
          ? (this.canvas = c)
          : 'dom' == this.renderType
            ? (this.div = window.document.createElement('div'))
            : (this.canvas = window.document.createElement('canvas'));
        if (null != this.canvas) {
          var d = this.canvas.style;
          d.setProperty('-webkit-transform', 'translateZ(0)', null);
          d.setProperty('transform', 'translateZ(0)', null);
        } else
          null != this.div &&
            ((d = this.div.style),
            d.setProperty('-webkit-transform', 'translate3D(0,0,0)', null),
            d.setProperty('transform', 'translate3D(0,0,0)', null),
            (d.position = 'relative'),
            (d.overflow = 'hidden'),
            d.setProperty('-webkit-user-select', 'none', null),
            d.setProperty('-moz-user-select', 'none', null),
            d.setProperty('-ms-user-select', 'none', null),
            d.setProperty('-o-user-select', 'none', null));
        0 == a.__width &&
          0 == a.__height &&
          (null != c
            ? ((a.__width = c.clientWidth), (a.__height = c.clientHeight))
            : ((a.__width = window.innerWidth),
              (a.__height = window.innerHeight)),
          (this.cacheElementWidth = a.__width),
          (this.cacheElementHeight = a.__height),
          (this.resizeElement = !0));
        null != this.canvas
          ? ((this.canvas.width = Math.round(a.__width * this.scale)),
            (this.canvas.height = Math.round(a.__height * this.scale)),
            (this.canvas.style.width = a.__width + 'px'),
            (this.canvas.style.height = a.__height + 'px'))
          : ((this.div.style.width = a.__width + 'px'),
            (this.div.style.height = a.__height + 'px'));
        if (
          (Object.prototype.hasOwnProperty.call(b, 'resizable') &&
            b.resizable) ||
          (!Object.prototype.hasOwnProperty.call(b, 'width') &&
            0 == this.setWidth &&
            0 == this.setHeight)
        )
          a.__resizable = !0;
        this.updateSize();
        if (null != c) {
          null != this.canvas
            ? c != this.canvas && c.appendChild(this.canvas)
            : c.appendChild(this.div);
          b = 'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
            ' ',
          );
          for (d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            c.addEventListener(f, l(this, this.handleMouseEvent), !0);
          }
          c.addEventListener(
            'contextmenu',
            l(this, this.handleContextMenuEvent),
            !0,
          );
          c.addEventListener('dragstart', l(this, this.handleDragEvent), !0);
          c.addEventListener('dragover', l(this, this.handleDragEvent), !0);
          c.addEventListener('drop', l(this, this.handleDragEvent), !0);
          c.addEventListener('touchstart', l(this, this.handleTouchEvent), !0);
          c.addEventListener('touchmove', l(this, this.handleTouchEvent), !0);
          c.addEventListener('touchend', l(this, this.handleTouchEvent), !0);
          c.addEventListener('touchcancel', l(this, this.handleTouchEvent), !0);
          c.addEventListener(
            'gamepadconnected',
            l(this, this.handleGamepadEvent),
            !0,
          );
          c.addEventListener(
            'gamepaddisconnected',
            l(this, this.handleGamepadEvent),
            !0,
          );
        }
        this.createContext();
        'webgl' == a.context.type &&
          (this.canvas.addEventListener(
            'webglcontextlost',
            l(this, this.handleContextEvent),
            !1,
          ),
          this.canvas.addEventListener(
            'webglcontextrestored',
            l(this, this.handleContextEvent),
            !1,
          ));
      };
      g['lime._internal.backend.html5.HTML5Window'] = Ha;
      Ha.__name__ = 'lime._internal.backend.html5.HTML5Window';
      Ha.prototype = {
        close: function () {
          var a = this.parent.element;
          if (null != a) {
            null != this.canvas
              ? (a != this.canvas && a.removeChild(this.canvas),
                (this.canvas = null))
              : null != this.div &&
                (a.removeChild(this.div), (this.div = null));
            for (
              var b =
                  'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
                    ' ',
                  ),
                c = 0;
              c < b.length;

            ) {
              var d = b[c];
              ++c;
              a.removeEventListener(d, l(this, this.handleMouseEvent), !0);
            }
            a.removeEventListener(
              'contextmenu',
              l(this, this.handleContextMenuEvent),
              !0,
            );
            a.removeEventListener(
              'dragstart',
              l(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener(
              'dragover',
              l(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener('drop', l(this, this.handleDragEvent), !0);
            a.removeEventListener(
              'touchstart',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchmove',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchend',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchcancel',
              l(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'gamepadconnected',
              l(this, this.handleGamepadEvent),
              !0,
            );
            a.removeEventListener(
              'gamepaddisconnected',
              l(this, this.handleGamepadEvent),
              !0,
            );
          }
          this.parent.application.__removeWindow(this.parent);
        },
        createContext: function () {
          var a = new rk(),
            b = this.parent.__attributes.context;
          a.window = this.parent;
          a.attributes = b;
          if (null != this.div)
            ((a.dom = this.div), (a.type = 'dom'), (a.version = ''));
          else if (null != this.canvas) {
            var c = null,
              d = 'canvas' == this.renderType,
              f =
                'opengl' == this.renderType ||
                'opengles' == this.renderType ||
                'webgl' == this.renderType,
              h =
                !Object.prototype.hasOwnProperty.call(b, 'version') ||
                '1' != b.version,
              k = !1;
            if (
              f ||
              (!d &&
                (!Object.prototype.hasOwnProperty.call(b, 'hardware') ||
                  b.hardware))
            ) {
              d =
                Object.prototype.hasOwnProperty.call(b, 'background') &&
                null == b.background;
              f = Object.prototype.hasOwnProperty.call(b, 'colorDepth')
                ? b.colorDepth
                : 16;
              var n =
                  Object.prototype.hasOwnProperty.call(b, 'antialiasing') &&
                  0 < b.antialiasing,
                p = Object.prototype.hasOwnProperty.call(b, 'depth')
                  ? b.depth
                  : !0,
                g =
                  Object.prototype.hasOwnProperty.call(b, 'stencil') &&
                  b.stencil;
              b =
                Object.prototype.hasOwnProperty.call(
                  b,
                  'preserveDrawingBuffer',
                ) && b.preserveDrawingBuffer;
              b = {
                alpha: d || 16 < f,
                antialias: n,
                depth: p,
                premultipliedAlpha: !0,
                stencil: g,
                preserveDrawingBuffer: b,
                failIfMajorPerformanceCaveat: !1,
              };
              d = ['webgl', 'experimental-webgl'];
              h && d.unshift('webgl2');
              for (
                h = 0;
                h < d.length &&
                ((f = d[h]),
                ++h,
                (c = this.canvas.getContext(f, b)),
                null != c && 'webgl2' == f && (k = !0),
                null == c);

              );
            }
            null == c
              ? ((a.canvas2D = this.canvas.getContext('2d')),
                (a.type = 'canvas'),
                (a.version = ''))
              : ((a.webgl = Lc.fromWebGL2RenderContext(c)),
                k && (a.webgl2 = c),
                null == Xe.context &&
                  ((Xe.context = c),
                  (Xe.type = 'webgl'),
                  (Xe.version = k ? 2 : 1)),
                (a.type = 'webgl'),
                (a.version = k ? '2' : '1'));
          }
          this.parent.context = a;
        },
        focusTextInput: function () {
          var a = this;
          this.__focusPending ||
            ((this.__focusPending = !0),
            Pf.delay(function () {
              a.__focusPending = !1;
              a.textInputEnabled && Ha.textInput.focus();
            }, 20));
        },
        getFrameRate: function () {
          return null == this.parent.application
            ? 0
            : 0 > this.parent.application.__backend.framePeriod
              ? 60
              : 1e3 == this.parent.application.__backend.framePeriod
                ? 0
                : 1e3 / this.parent.application.__backend.framePeriod;
        },
        handleContextEvent: function (a) {
          switch (a.type) {
            case 'webglcontextlost':
              a.cancelable && a.preventDefault();
              this.parent.context = null;
              this.parent.onRenderContextLost.dispatch();
              break;
            case 'webglcontextrestored':
              (this.createContext(),
                this.parent.onRenderContextRestored.dispatch(
                  this.parent.context,
                ));
          }
        },
        handleContextMenuEvent: function (a) {
          (this.parent.onMouseUp.canceled ||
            this.parent.onMouseDown.canceled) &&
            a.cancelable &&
            a.preventDefault();
        },
        handleCutOrCopyEvent: function (a) {
          var b = zc.get_text();
          null == b && (b = '');
          a.clipboardData.setData('text/plain', b);
          a.cancelable && a.preventDefault();
        },
        handleDragEvent: function (a) {
          switch (a.type) {
            case 'dragover':
              return (a.preventDefault(), !1);
            case 'dragstart':
              if (
                'img' ==
                  va.__cast(a.target, HTMLElement).nodeName.toLowerCase() &&
                a.cancelable
              )
                return (a.preventDefault(), !1);
              break;
            case 'drop':
              if (null != a.dataTransfer && 0 < a.dataTransfer.files.length)
                return (
                  this.parent.onDropFile.dispatch(a.dataTransfer.files),
                  a.preventDefault(),
                  !1
                );
          }
          return !0;
        },
        handleFocusEvent: function (a) {
          this.textInputEnabled &&
            (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) &&
            this.focusTextInput();
        },
        handleGamepadEvent: function (a) {
          switch (a.type) {
            case 'gamepadconnected':
              nc.__connect(a.gamepad.index);
              'standard' == a.gamepad.mapping && qc.__connect(a.gamepad.index);
              break;
            case 'gamepaddisconnected':
              (nc.__disconnect(a.gamepad.index),
                qc.__disconnect(a.gamepad.index));
          }
        },
        handleInputEvent: function (a) {
          this.imeCompositionActive ||
            Ha.textInput.value == Ha.dummyCharacter ||
            ((a = O.replace(Ha.textInput.value, Ha.dummyCharacter, '')),
            0 < a.length && this.parent.onTextInput.dispatch(a),
            (Ha.textInput.value = Ha.dummyCharacter));
        },
        handleMouseEvent: function (a) {
          if ('wheel' != a.type) {
            if (null != this.parent.element)
              if (null != this.canvas) {
                var b = this.canvas.getBoundingClientRect();
                var c = (this.parent.__width / b.width) * (a.clientX - b.left);
                b = (this.parent.__height / b.height) * (a.clientY - b.top);
              } else
                null != this.div
                  ? ((b = this.div.getBoundingClientRect()),
                    (c = a.clientX - b.left),
                    (b = a.clientY - b.top))
                  : ((b = this.parent.element.getBoundingClientRect()),
                    (c =
                      (this.parent.__width / b.width) * (a.clientX - b.left)),
                    (b =
                      (this.parent.__height / b.height) * (a.clientY - b.top)));
            else ((c = a.clientX), (b = a.clientY));
            switch (a.type) {
              case 'mousedown':
                a.currentTarget == this.parent.element &&
                  window.addEventListener(
                    'mouseup',
                    l(this, this.handleMouseEvent),
                  );
                this.parent.clickCount = a.detail;
                this.parent.onMouseDown.dispatch(c, b, a.button);
                this.parent.clickCount = 0;
                this.parent.onMouseDown.canceled &&
                  a.cancelable &&
                  a.preventDefault();
                break;
              case 'mouseenter':
                a.target == this.parent.element &&
                  (this.parent.onEnter.dispatch(),
                  this.parent.onEnter.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mouseleave':
                a.target == this.parent.element &&
                  (this.parent.onLeave.dispatch(),
                  this.parent.onLeave.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mousemove':
                if (c != this.cacheMouseX || b != this.cacheMouseY)
                  (this.parent.onMouseMove.dispatch(c, b),
                    this.parent.onMouseMoveRelative.dispatch(
                      c - this.cacheMouseX,
                      b - this.cacheMouseY,
                    ),
                    (this.parent.onMouseMove.canceled ||
                      this.parent.onMouseMoveRelative.canceled) &&
                      a.cancelable &&
                      a.preventDefault());
                break;
              case 'mouseup':
                (window.removeEventListener(
                  'mouseup',
                  l(this, this.handleMouseEvent),
                ),
                  a.currentTarget == this.parent.element && a.stopPropagation(),
                  (this.parent.clickCount = a.detail),
                  this.parent.onMouseUp.dispatch(c, b, a.button),
                  (this.parent.clickCount = 0),
                  this.parent.onMouseUp.canceled &&
                    a.cancelable &&
                    a.preventDefault());
            }
            this.cacheMouseX = c;
            this.cacheMouseY = b;
          } else {
            switch (a.deltaMode) {
              case 0:
                c = rf.PIXELS;
                break;
              case 1:
                c = rf.LINES;
                break;
              case 2:
                c = rf.PAGES;
                break;
              default:
                c = rf.UNKNOWN;
            }
            this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
            this.parent.onMouseWheel.canceled &&
              a.cancelable &&
              a.preventDefault();
          }
        },
        handlePasteEvent: function (a) {
          if (-1 < a.clipboardData.types.indexOf('text/plain')) {
            var b = a.clipboardData.getData('text/plain');
            zc.set_text(b);
            this.textInputEnabled && this.parent.onTextInput.dispatch(b);
            a.cancelable && a.preventDefault();
          }
        },
        handleResizeEvent: function (a) {
          this.primaryTouch = null;
          this.updateSize();
        },
        handleTouchEvent: function (a) {
          a.cancelable && a.preventDefault();
          var b = null;
          null != this.parent.element &&
            (b =
              null != this.canvas
                ? this.canvas.getBoundingClientRect()
                : null != this.div
                  ? this.div.getBoundingClientRect()
                  : this.parent.element.getBoundingClientRect());
          var c = this.setWidth,
            d = this.setHeight;
          if (0 == c || 0 == d)
            null != b ? ((c = b.width), (d = b.height)) : (d = c = 1);
          for (var f, h, k, n, p, g = 0, q = a.changedTouches; g < q.length; ) {
            var m = q[g];
            ++g;
            null != b
              ? ((h = (c / b.width) * (m.clientX - b.left)),
                (k = (d / b.height) * (m.clientY - b.top)))
              : ((h = m.clientX), (k = m.clientY));
            if ('touchstart' == a.type)
              ((f = this.unusedTouchesPool.pop()),
                null == f
                  ? (f = new dc(
                      h / c,
                      k / d,
                      m.identifier,
                      0,
                      0,
                      m.force,
                      this.parent.id,
                    ))
                  : ((f.x = h / c),
                    (f.y = k / d),
                    (f.id = m.identifier),
                    (f.dx = 0),
                    (f.dy = 0),
                    (f.pressure = m.force),
                    (f.device = this.parent.id)),
                (this.currentTouches.h[m.identifier] = f),
                dc.onStart.dispatch(f),
                null == this.primaryTouch && (this.primaryTouch = f),
                f == this.primaryTouch &&
                  this.parent.onMouseDown.dispatch(h, k, 0));
            else if (((f = this.currentTouches.h[m.identifier]), null != f))
              switch (
                ((n = f.x),
                (p = f.y),
                (f.x = h / c),
                (f.y = k / d),
                (f.dx = f.x - n),
                (f.dy = f.y - p),
                (f.pressure = m.force),
                a.type)
              ) {
                case 'touchcancel':
                  dc.onCancel.dispatch(f);
                  this.currentTouches.remove(m.identifier);
                  this.unusedTouchesPool.add(f);
                  f == this.primaryTouch && (this.primaryTouch = null);
                  break;
                case 'touchend':
                  dc.onEnd.dispatch(f);
                  this.currentTouches.remove(m.identifier);
                  this.unusedTouchesPool.add(f);
                  f == this.primaryTouch &&
                    (this.parent.onMouseUp.dispatch(h, k, 0),
                    (this.primaryTouch = null));
                  break;
                case 'touchmove':
                  (dc.onMove.dispatch(f),
                    f == this.primaryTouch &&
                      this.parent.onMouseMove.dispatch(h, k));
              }
          }
        },
        isDescendent: function (a) {
          if (a == this.parent.element) return !0;
          for (; null != a; ) {
            if (a.parentNode == this.parent.element) return !0;
            a = a.parentNode;
          }
          return !1;
        },
        setClipboard: function (a) {
          null == Ha.textArea &&
            ((Ha.textArea = window.document.createElement('textarea')),
            (Ha.textArea.style.height = '0px'),
            (Ha.textArea.style.left = '-100px'),
            (Ha.textArea.style.opacity = '0'),
            (Ha.textArea.style.position = 'fixed'),
            (Ha.textArea.style.top = '-100px'),
            (Ha.textArea.style.width = '0px'),
            window.document.body.appendChild(Ha.textArea));
          Ha.textArea.value = a;
          Ha.textArea.focus();
          Ha.textArea.select();
          window.document.queryCommandEnabled('copy') &&
            window.document.execCommand('copy');
          this.textInputEnabled && this.focusTextInput();
        },
        setCursor: function (a) {
          if (this.cursor != a) {
            if (null == a) this.parent.element.style.cursor = 'none';
            else {
              switch (a._hx_index) {
                case 0:
                  var b = 'default';
                  break;
                case 1:
                  b = 'crosshair';
                  break;
                case 3:
                  b = 'move';
                  break;
                case 4:
                  b = 'pointer';
                  break;
                case 5:
                  b = 'nesw-resize';
                  break;
                case 6:
                  b = 'ns-resize';
                  break;
                case 7:
                  b = 'nwse-resize';
                  break;
                case 8:
                  b = 'ew-resize';
                  break;
                case 9:
                  b = 'text';
                  break;
                case 10:
                  b = 'wait';
                  break;
                case 11:
                  b = 'wait';
                  break;
                default:
                  b = 'auto';
              }
              this.parent.element.style.cursor = b;
            }
            this.cursor = a;
          }
          return this.cursor;
        },
        setTextInputEnabled: function (a) {
          if (a) {
            if (null == Ha.textInput) {
              Ha.textInput = window.document.createElement('input');
              var b =
                0 <= E.navigator.userAgent.indexOf('Android')
                  ? 'password'
                  : 'text';
              Ha.textInput.type = b;
              Ha.textInput.style.position = 'absolute';
              Ha.textInput.style.opacity = '0';
              Ha.textInput.style.color = 'transparent';
              Ha.textInput.value = Ha.dummyCharacter;
              Ha.textInput.autocapitalize = 'off';
              Ha.textInput.autocorrect = 'off';
              Ha.textInput.autocomplete = 'off';
              Ha.textInput.style.left = '0px';
              Ha.textInput.style.top = '50%';
              new ja('(iPad|iPhone|iPod).*OS 8_', 'gi').match(
                window.navigator.userAgent,
              )
                ? ((Ha.textInput.style.fontSize = '0px'),
                  (Ha.textInput.style.width = '0px'),
                  (Ha.textInput.style.height = '0px'))
                : ((Ha.textInput.style.width = '1px'),
                  (Ha.textInput.style.height = '1px'));
              Ha.textInput.style.pointerEvents = 'none';
              Ha.textInput.style.zIndex = '-10000000';
            }
            null == Ha.textInput.parentNode &&
              this.parent.element.appendChild(Ha.textInput);
            this.textInputEnabled ||
              (Ha.textInput.addEventListener(
                'input',
                l(this, this.handleInputEvent),
                !0,
              ),
              Ha.textInput.addEventListener(
                'blur',
                l(this, this.handleFocusEvent),
                !0,
              ),
              Ha.textInput.addEventListener(
                'cut',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Ha.textInput.addEventListener(
                'copy',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Ha.textInput.addEventListener(
                'paste',
                l(this, this.handlePasteEvent),
                !0,
              ),
              Ha.textInput.addEventListener(
                'compositionstart',
                l(this, this.handleCompositionstartEvent),
                !0,
              ),
              Ha.textInput.addEventListener(
                'compositionend',
                l(this, this.handleCompositionendEvent),
                !0,
              ));
            Ha.textInput.focus();
            Ha.textInput.select();
          } else
            null != Ha.textInput &&
              (Ha.textInput.blur(),
              Ha.textInput.removeEventListener(
                'input',
                l(this, this.handleInputEvent),
                !0,
              ),
              Ha.textInput.removeEventListener(
                'blur',
                l(this, this.handleFocusEvent),
                !0,
              ),
              Ha.textInput.removeEventListener(
                'cut',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Ha.textInput.removeEventListener(
                'copy',
                l(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Ha.textInput.removeEventListener(
                'paste',
                l(this, this.handlePasteEvent),
                !0,
              ),
              Ha.textInput.removeEventListener(
                'compositionstart',
                l(this, this.handleCompositionstartEvent),
                !0,
              ),
              Ha.textInput.removeEventListener(
                'compositionend',
                l(this, this.handleCompositionendEvent),
                !0,
              ));
          return (this.textInputEnabled = a);
        },
        setTextInputRect: function (a) {
          return (this.textInputRect = a);
        },
        handleCompositionstartEvent: function (a) {
          this.imeCompositionActive = !0;
        },
        handleCompositionendEvent: function (a) {
          this.imeCompositionActive = !1;
          this.handleInputEvent(a);
        },
        updateSize: function () {
          if (this.parent.__resizable) {
            if (null != this.parent.element) {
              var a = this.parent.element.clientWidth;
              var b = this.parent.element.clientHeight;
            } else ((a = window.innerWidth), (b = window.innerHeight));
            if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
              this.cacheElementWidth = a;
              this.cacheElementHeight = b;
              var c =
                this.resizeElement ||
                (0 == this.setWidth && 0 == this.setHeight);
              if (
                null != this.parent.element &&
                (null == this.div || (null != this.div && c))
              )
                if (c) {
                  if (this.parent.__width != a || this.parent.__height != b)
                    ((this.parent.__width = a),
                      (this.parent.__height = b),
                      null != this.canvas
                        ? this.parent.element != this.canvas &&
                          ((this.canvas.width = Math.round(a * this.scale)),
                          (this.canvas.height = Math.round(b * this.scale)),
                          (this.canvas.style.width = a + 'px'),
                          (this.canvas.style.height = b + 'px'))
                        : ((this.div.style.width = a + 'px'),
                          (this.div.style.height = b + 'px')),
                      this.parent.onResize.dispatch(a, b));
                } else {
                  c = 0 != this.setWidth ? a / this.setWidth : 1;
                  var d = 0 != this.setHeight ? b / this.setHeight : 1,
                    f = a,
                    h = b,
                    k = 0,
                    n = 0;
                  c < d
                    ? ((h = Math.floor(this.setHeight * c)),
                      (n = Math.floor((b - h) / 2)))
                    : ((f = Math.floor(this.setWidth * d)),
                      (k = Math.floor((a - f) / 2)));
                  null != this.canvas
                    ? this.parent.element != this.canvas &&
                      ((this.canvas.style.width = f + 'px'),
                      (this.canvas.style.height = h + 'px'),
                      (this.canvas.style.marginLeft = k + 'px'),
                      (this.canvas.style.marginTop = n + 'px'))
                    : ((this.div.style.width = f + 'px'),
                      (this.div.style.height = h + 'px'),
                      (this.div.style.marginLeft = k + 'px'),
                      (this.div.style.marginTop = n + 'px'));
                }
            }
          }
        },
        __class__: Ha,
      };
      var al = function () {};
      g['lime._internal.format.BMP'] = al;
      al.__name__ = 'lime._internal.format.BMP';
      al.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        null == b && (b = Rf.RGB);
        var c = 14,
          d = 40,
          f = a.width * a.height * 4;
        if (null != b)
          switch (b._hx_index) {
            case 0:
              f = (3 * a.width + ((3 * a.width) % 4)) * a.height;
              break;
            case 1:
              d = 108;
              break;
            case 2:
              ((c = 0), (f += a.width * a.height));
          }
        var h = new zb(new ArrayBuffer(c + d + f)),
          k = 0;
        0 < c &&
          ((h.b[k++] = 66),
          (h.b[k++] = 77),
          h.setInt32(k, h.length),
          (k += 4),
          h.setUInt16(k, 0),
          (k += 2),
          h.setUInt16(k, 0),
          (k += 2),
          h.setInt32(k, c + d),
          (k += 4));
        h.setInt32(k, d);
        k += 4;
        h.setInt32(k, a.width);
        k += 4;
        h.setInt32(k, b == Rf.ICO ? 2 * a.height : a.height);
        k += 4;
        h.setUInt16(k, 1);
        k += 2;
        h.setUInt16(k, b == Rf.RGB ? 24 : 32);
        k += 2;
        h.setInt32(k, b == Rf.BITFIELD ? 3 : 0);
        k += 4;
        h.setInt32(k, f);
        k += 4;
        h.setInt32(k, 11824);
        k += 4;
        h.setInt32(k, 11824);
        k += 4;
        h.setInt32(k, 0);
        k += 4;
        h.setInt32(k, 0);
        k += 4;
        if (b == Rf.BITFIELD)
          for (
            h.setInt32(k, 16711680),
              k += 4,
              h.setInt32(k, 65280),
              k += 4,
              h.setInt32(k, 255),
              k += 4,
              h.setInt32(k, -16777216),
              k += 4,
              h.b[k++] = 32,
              h.b[k++] = 110,
              h.b[k++] = 105,
              h.b[k++] = 87,
              c = 0;
            48 > c;

          )
            (c++, (h.b[k++] = 0));
        d = a.getPixels(new Ld(0, 0, a.width, a.height), 1);
        if (null != b)
          switch (b._hx_index) {
            case 0:
              c = 0;
              for (b = a.height; c < b; ) {
                var n = c++;
                n = 4 * (a.height - 1 - n) * a.width;
                for (var p = 0, g = a.width; p < g; ) {
                  p++;
                  n++;
                  var q = d.b[n++];
                  var m = d.b[n++];
                  var u = d.b[n++];
                  h.b[k++] = u & 255;
                  h.b[k++] = m & 255;
                  h.b[k++] = q & 255;
                }
                f = 0;
                for (var l = (3 * a.width) % 4; f < l; ) (f++, (h.b[k++] = 0));
              }
              break;
            case 1:
              c = 0;
              for (b = a.height; c < b; )
                for (
                  n = c++,
                    n = 4 * (a.height - 1 - n) * a.width,
                    p = 0,
                    g = a.width;
                  p < g;

                ) {
                  p++;
                  var r = d.b[n++];
                  q = d.b[n++];
                  m = d.b[n++];
                  u = d.b[n++];
                  h.b[k++] = u & 255;
                  h.b[k++] = m & 255;
                  h.b[k++] = q & 255;
                  h.b[k++] = r & 255;
                }
              break;
            case 2:
              f = new zb(new ArrayBuffer(a.width * a.height));
              c = l = 0;
              for (b = a.height; c < b; )
                for (
                  n = c++,
                    n = 4 * (a.height - 1 - n) * a.width,
                    p = 0,
                    g = a.width;
                  p < g;

                )
                  (p++,
                    (r = d.b[n++]),
                    (q = d.b[n++]),
                    (m = d.b[n++]),
                    (u = d.b[n++]),
                    (h.b[k++] = u & 255),
                    (h.b[k++] = m & 255),
                    (h.b[k++] = q & 255),
                    (h.b[k++] = r & 255),
                    (f.b[l++] = 0));
              h.blit(k, f, 0, a.width * a.height);
          }
        return h;
      };
      var Rf = (y['lime._internal.format.BMPType'] = {
        __ename__: 'lime._internal.format.BMPType',
        __constructs__: null,
        RGB: {
          _hx_name: 'RGB',
          _hx_index: 0,
          __enum__: 'lime._internal.format.BMPType',
          toString: r,
        },
        BITFIELD: {
          _hx_name: 'BITFIELD',
          _hx_index: 1,
          __enum__: 'lime._internal.format.BMPType',
          toString: r,
        },
        ICO: {
          _hx_name: 'ICO',
          _hx_index: 2,
          __enum__: 'lime._internal.format.BMPType',
          toString: r,
        },
      });
      Rf.__constructs__ = [Rf.RGB, Rf.BITFIELD, Rf.ICO];
      var Be = function () {};
      g['lime._internal.format.Base64'] = Be;
      Be.__name__ = 'lime._internal.format.Base64';
      Be.encode = function (a) {
        var b = [],
          c = Be.DICTIONARY,
          d = Be.EXTENDED_DICTIONARY,
          f = a.length,
          h = Math.floor(f / 3),
          k = 2 * h;
        b.length = 2 * Math.ceil(f / 3);
        for (var n = 0, p = 0, g; p < k; )
          ((g = (a.b[n] << 16) | (a.b[n + 1] << 8) | a.b[n + 2]),
            (b[p] = d[(g >> 12) & 4095]),
            (b[p + 1] = d[g & 4095]),
            (n += 3),
            (p += 2));
        switch (f - 3 * h) {
          case 1:
            g = a.b[n] << 16;
            b[p] = d[(g >> 12) & 4095];
            b[p + 1] = '==';
            break;
          case 2:
            ((g = (a.b[n] << 16) | (a.b[n + 1] << 8)),
              (b[p] = d[(g >> 12) & 4095]),
              (b[p + 1] = c[(g >> 6) & 63] + '='));
        }
        return b.join('');
      };
      var el = function () {};
      g['lime._internal.format.Deflate'] = el;
      el.__name__ = 'lime._internal.format.Deflate';
      el.decompress = function (a) {
        a = pako.inflateRaw(a.b.bufferValue);
        return zb.ofData(a);
      };
      var fl = function () {};
      g['lime._internal.format.GZip'] = fl;
      fl.__name__ = 'lime._internal.format.GZip';
      fl.decompress = function (a) {
        a = pako.ungzip(a.b.bufferValue);
        return zb.ofData(a);
      };
      var bl = function () {};
      g['lime._internal.format.JPEG'] = bl;
      bl.__name__ = 'lime._internal.format.JPEG';
      bl.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Ka.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/jpeg', b / 100);
          a = window.atob(a.split(';base64,')[1]);
          b = new zb(new ArrayBuffer(a.length));
          for (var c = 0, d = a.length; c < d; ) {
            var f = c++;
            b.b[f] = N.cca(a, f) & 255;
          }
          return b;
        }
        return null;
      };
      var gl = function () {};
      g['lime._internal.format.LZMA'] = gl;
      gl.__name__ = 'lime._internal.format.LZMA';
      gl.decompress = function (a) {
        var b = LZMA.decompress;
        a = a.b.bufferValue;
        a = null != a ? new Uint8Array(a, 0) : null;
        b = b(a);
        return 'string' == typeof b ? zb.ofString(b) : zb.ofData(b);
      };
      var kk = function () {};
      g['lime._internal.format.PNG'] = kk;
      kk.__name__ = 'lime._internal.format.PNG';
      kk.encode = function (a) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Ka.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/png');
          a = window.atob(a.split(';base64,')[1]);
          for (
            var b = new zb(new ArrayBuffer(a.length)), c = 0, d = a.length;
            c < d;

          ) {
            var f = c++;
            b.b[f] = N.cca(a, f) & 255;
          }
          return b;
        }
        return null;
      };
      var hl = function () {};
      g['lime._internal.format.Zlib'] = hl;
      hl.__name__ = 'lime._internal.format.Zlib';
      hl.decompress = function (a) {
        a = pako.inflate(a.b.bufferValue);
        return zb.ofData(a);
      };
      var bc = function () {};
      g['lime._internal.graphics.ImageDataUtil'] = bc;
      bc.__name__ = 'lime._internal.graphics.ImageDataUtil';
      bc.colorTransform = function (a, b, c) {
        var d = a.buffer.data;
        if (null != d) {
          var f = a.buffer.format,
            h = a.buffer.premultiplied;
          b = new De(a, b);
          var k = Qc.getAlphaTable(c),
            n = Qc.getRedTable(c),
            p = Qc.getGreenTable(c);
          c = Qc.getBlueTable(c);
          for (var g, q, m = 0, u = 0, l = b.height; u < l; ) {
            g = u++;
            g = b.byteOffset + b.stride * g;
            for (var r = 0, x = b.width; r < x; ) {
              q = r++;
              q = g + 4 * q;
              var D = f,
                w = h;
              null == w && (w = !1);
              null == D && (D = 0);
              switch (D) {
                case 0:
                  m =
                    ((d[q] & 255) << 24) |
                    ((d[q + 1] & 255) << 16) |
                    ((d[q + 2] & 255) << 8) |
                    (d[q + 3] & 255);
                  break;
                case 1:
                  m =
                    ((d[q + 1] & 255) << 24) |
                    ((d[q + 2] & 255) << 16) |
                    ((d[q + 3] & 255) << 8) |
                    (d[q] & 255);
                  break;
                case 2:
                  m =
                    ((d[q + 2] & 255) << 24) |
                    ((d[q + 1] & 255) << 16) |
                    ((d[q] & 255) << 8) |
                    (d[q + 3] & 255);
              }
              w &&
                0 != (m & 255) &&
                255 != (m & 255) &&
                ((R.unmult = 255 / (m & 255)),
                (m =
                  ((R.__clamp[Math.round(((m >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((m >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((m >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (m & 255)));
              m =
                ((n[(m >>> 24) & 255] & 255) << 24) |
                ((p[(m >>> 16) & 255] & 255) << 16) |
                ((c[(m >>> 8) & 255] & 255) << 8) |
                (k[m & 255] & 255);
              D = f;
              w = h;
              null == w && (w = !1);
              null == D && (D = 0);
              w &&
                (0 == (m & 255)
                  ? 0 != m && (m = 0)
                  : 255 != (m & 255) &&
                    ((R.a16 = R.__alpha16[m & 255]),
                    (m =
                      ((((((m >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((m >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((m >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (m & 255))));
              switch (D) {
                case 0:
                  d[q] = (m >>> 24) & 255;
                  d[q + 1] = (m >>> 16) & 255;
                  d[q + 2] = (m >>> 8) & 255;
                  d[q + 3] = m & 255;
                  break;
                case 1:
                  d[q] = m & 255;
                  d[q + 1] = (m >>> 24) & 255;
                  d[q + 2] = (m >>> 16) & 255;
                  d[q + 3] = (m >>> 8) & 255;
                  break;
                case 2:
                  ((d[q] = (m >>> 8) & 255),
                    (d[q + 1] = (m >>> 16) & 255),
                    (d[q + 2] = (m >>> 24) & 255),
                    (d[q + 3] = m & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      bc.copyChannel = function (a, b, c, d, f, h) {
        switch (h._hx_index) {
          case 0:
            var k = 0;
            break;
          case 1:
            k = 1;
            break;
          case 2:
            k = 2;
            break;
          case 3:
            k = 3;
        }
        switch (f._hx_index) {
          case 0:
            var n = 0;
            break;
          case 1:
            n = 1;
            break;
          case 2:
            n = 2;
            break;
          case 3:
            n = 3;
        }
        f = b.buffer.data;
        h = a.buffer.data;
        if (null != f && null != h) {
          c = new De(b, c);
          d = new De(a, new Ld(d.x, d.y, c.width, c.height));
          var p = b.buffer.format,
            g = a.buffer.format;
          b = b.buffer.premultiplied;
          for (
            var q = a.buffer.premultiplied,
              m,
              u,
              l = 0,
              r = 0,
              x = 0,
              D = 0,
              w = d.height;
            D < w;

          ) {
            u = D++;
            m = c.byteOffset + c.stride * u;
            u = d.byteOffset + d.stride * u;
            for (var z = 0, J = d.width; z < J; ) {
              z++;
              var C = p,
                y = b;
              null == y && (y = !1);
              null == C && (C = 0);
              switch (C) {
                case 0:
                  l =
                    ((f[m] & 255) << 24) |
                    ((f[m + 1] & 255) << 16) |
                    ((f[m + 2] & 255) << 8) |
                    (f[m + 3] & 255);
                  break;
                case 1:
                  l =
                    ((f[m + 1] & 255) << 24) |
                    ((f[m + 2] & 255) << 16) |
                    ((f[m + 3] & 255) << 8) |
                    (f[m] & 255);
                  break;
                case 2:
                  l =
                    ((f[m + 2] & 255) << 24) |
                    ((f[m + 1] & 255) << 16) |
                    ((f[m] & 255) << 8) |
                    (f[m + 3] & 255);
              }
              y &&
                0 != (l & 255) &&
                255 != (l & 255) &&
                ((R.unmult = 255 / (l & 255)),
                (l =
                  ((R.__clamp[Math.round(((l >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((l >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((l >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (l & 255)));
              C = g;
              y = q;
              null == y && (y = !1);
              null == C && (C = 0);
              switch (C) {
                case 0:
                  r =
                    ((h[u] & 255) << 24) |
                    ((h[u + 1] & 255) << 16) |
                    ((h[u + 2] & 255) << 8) |
                    (h[u + 3] & 255);
                  break;
                case 1:
                  r =
                    ((h[u + 1] & 255) << 24) |
                    ((h[u + 2] & 255) << 16) |
                    ((h[u + 3] & 255) << 8) |
                    (h[u] & 255);
                  break;
                case 2:
                  r =
                    ((h[u + 2] & 255) << 24) |
                    ((h[u + 1] & 255) << 16) |
                    ((h[u] & 255) << 8) |
                    (h[u + 3] & 255);
              }
              y &&
                0 != (r & 255) &&
                255 != (r & 255) &&
                ((R.unmult = 255 / (r & 255)),
                (r =
                  ((R.__clamp[Math.round(((r >>> 24) & 255) * R.unmult)] &
                    255) <<
                    24) |
                  ((R.__clamp[Math.round(((r >>> 16) & 255) * R.unmult)] &
                    255) <<
                    16) |
                  ((R.__clamp[Math.round(((r >>> 8) & 255) * R.unmult)] &
                    255) <<
                    8) |
                  (r & 255)));
              switch (n) {
                case 0:
                  x = (l >>> 24) & 255;
                  break;
                case 1:
                  x = (l >>> 16) & 255;
                  break;
                case 2:
                  x = (l >>> 8) & 255;
                  break;
                case 3:
                  x = l & 255;
              }
              switch (k) {
                case 0:
                  r =
                    ((x & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (r & 255);
                  break;
                case 1:
                  r =
                    (((r >>> 24) & 255) << 24) |
                    ((x & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (r & 255);
                  break;
                case 2:
                  r =
                    (((r >>> 24) & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    ((x & 255) << 8) |
                    (r & 255);
                  break;
                case 3:
                  r =
                    (((r >>> 24) & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (x & 255);
              }
              C = g;
              y = q;
              null == y && (y = !1);
              null == C && (C = 0);
              y &&
                (0 == (r & 255)
                  ? 0 != r && (r = 0)
                  : 255 != (r & 255) &&
                    ((R.a16 = R.__alpha16[r & 255]),
                    (r =
                      ((((((r >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((r >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((r >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (r & 255))));
              switch (C) {
                case 0:
                  h[u] = (r >>> 24) & 255;
                  h[u + 1] = (r >>> 16) & 255;
                  h[u + 2] = (r >>> 8) & 255;
                  h[u + 3] = r & 255;
                  break;
                case 1:
                  h[u] = r & 255;
                  h[u + 1] = (r >>> 24) & 255;
                  h[u + 2] = (r >>> 16) & 255;
                  h[u + 3] = (r >>> 8) & 255;
                  break;
                case 2:
                  ((h[u] = (r >>> 8) & 255),
                    (h[u + 1] = (r >>> 16) & 255),
                    (h[u + 2] = (r >>> 24) & 255),
                    (h[u + 3] = r & 255));
              }
              m += 4;
              u += 4;
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      bc.copyPixels = function (a, b, c, d, f, h, k) {
        null == k && (k = !1);
        if (
          a.width == b.width &&
          a.height == b.height &&
          c.width == b.width &&
          c.height == b.height &&
          0 == c.x &&
          0 == c.y &&
          0 == d.x &&
          0 == d.y &&
          null == f &&
          null == h &&
          0 == k &&
          a.get_format() == b.get_format()
        )
          a.buffer.data.set(b.buffer.data);
        else {
          var n = b.buffer.data,
            p = a.buffer.data;
          if (null == n || null == p) return;
          c = new De(b, c);
          var g = new Ld(d.x, d.y, c.width, c.height);
          g = new De(a, g);
          var q = b.buffer.format,
            m = a.buffer.format,
            u = 0,
            r = 0,
            l = b.buffer.premultiplied,
            x = a.buffer.premultiplied,
            D = (b.buffer.bitsPerPixel / 8) | 0,
            w = (a.buffer.bitsPerPixel / 8) | 0,
            z = null != f && f.get_transparent(),
            C =
              k ||
              (z && !a.get_transparent()) ||
              (!k && !a.get_transparent() && b.get_transparent());
          if (z)
            if (
              ((w = f.buffer.data),
              (b = f.buffer.format),
              (k = 0),
              (f = new De(
                f,
                new Ld(
                  c.x + (null == h ? 0 : h.x),
                  c.y + (null == h ? 0 : h.y),
                  c.width,
                  c.height,
                ),
              )),
              g.clip(d.x | 0, d.y | 0, f.width, f.height),
              C)
            )
              for (C = 0, D = g.height; C < D; )
                for (
                  z = C++,
                    d = c.byteOffset + c.stride * z,
                    h = g.byteOffset + g.stride * z,
                    z = f.byteOffset + f.stride * z,
                    G = 0,
                    F = g.width;
                  G < F;

                ) {
                  G++;
                  var J = q;
                  var y = l;
                  null == y && (y = !1);
                  null == J && (J = 0);
                  switch (J) {
                    case 0:
                      u =
                        ((n[d] & 255) << 24) |
                        ((n[d + 1] & 255) << 16) |
                        ((n[d + 2] & 255) << 8) |
                        (n[d + 3] & 255);
                      break;
                    case 1:
                      u =
                        ((n[d + 1] & 255) << 24) |
                        ((n[d + 2] & 255) << 16) |
                        ((n[d + 3] & 255) << 8) |
                        (n[d] & 255);
                      break;
                    case 2:
                      u =
                        ((n[d + 2] & 255) << 24) |
                        ((n[d + 1] & 255) << 16) |
                        ((n[d] & 255) << 8) |
                        (n[d + 3] & 255);
                  }
                  y &&
                    0 != (u & 255) &&
                    255 != (u & 255) &&
                    ((R.unmult = 255 / (u & 255)),
                    (u =
                      ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (u & 255)));
                  J = m;
                  y = x;
                  null == y && (y = !1);
                  null == J && (J = 0);
                  switch (J) {
                    case 0:
                      r =
                        ((p[h] & 255) << 24) |
                        ((p[h + 1] & 255) << 16) |
                        ((p[h + 2] & 255) << 8) |
                        (p[h + 3] & 255);
                      break;
                    case 1:
                      r =
                        ((p[h + 1] & 255) << 24) |
                        ((p[h + 2] & 255) << 16) |
                        ((p[h + 3] & 255) << 8) |
                        (p[h] & 255);
                      break;
                    case 2:
                      r =
                        ((p[h + 2] & 255) << 24) |
                        ((p[h + 1] & 255) << 16) |
                        ((p[h] & 255) << 8) |
                        (p[h + 3] & 255);
                  }
                  y &&
                    0 != (r & 255) &&
                    255 != (r & 255) &&
                    ((R.unmult = 255 / (r & 255)),
                    (r =
                      ((R.__clamp[Math.round(((r >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((r >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((r >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (r & 255)));
                  J = b;
                  y = !1;
                  null == y && (y = !1);
                  null == J && (J = 0);
                  switch (J) {
                    case 0:
                      k =
                        ((w[z] & 255) << 24) |
                        ((w[z + 1] & 255) << 16) |
                        ((w[z + 2] & 255) << 8) |
                        (w[z + 3] & 255);
                      break;
                    case 1:
                      k =
                        ((w[z + 1] & 255) << 24) |
                        ((w[z + 2] & 255) << 16) |
                        ((w[z + 3] & 255) << 8) |
                        (w[z] & 255);
                      break;
                    case 2:
                      k =
                        ((w[z + 2] & 255) << 24) |
                        ((w[z + 1] & 255) << 16) |
                        ((w[z] & 255) << 8) |
                        (w[z + 3] & 255);
                  }
                  y &&
                    0 != (k & 255) &&
                    255 != (k & 255) &&
                    ((R.unmult = 255 / (k & 255)),
                    (k =
                      ((R.__clamp[Math.round(((k >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((k >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((k >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (k & 255)));
                  y = ((k & 255) / 255) * ((u & 255) / 255);
                  if (0 < y) {
                    var v = (r & 255) / 255;
                    var t = 1 - y;
                    J = y + v * t;
                    I =
                      R.__clamp[
                        Math.round(
                          (((u >>> 24) & 255) * y +
                            ((r >>> 24) & 255) * v * t) /
                            J,
                        )
                      ];
                    r =
                      ((I & 255) << 24) |
                      (((r >>> 16) & 255) << 16) |
                      (((r >>> 8) & 255) << 8) |
                      (r & 255);
                    I =
                      R.__clamp[
                        Math.round(
                          (((u >>> 16) & 255) * y +
                            ((r >>> 16) & 255) * v * t) /
                            J,
                        )
                      ];
                    r =
                      (((r >>> 24) & 255) << 24) |
                      ((I & 255) << 16) |
                      (((r >>> 8) & 255) << 8) |
                      (r & 255);
                    y =
                      R.__clamp[
                        Math.round(
                          (((u >>> 8) & 255) * y + ((r >>> 8) & 255) * v * t) /
                            J,
                        )
                      ];
                    r =
                      (((r >>> 24) & 255) << 24) |
                      (((r >>> 16) & 255) << 16) |
                      ((y & 255) << 8) |
                      (r & 255);
                    J = R.__clamp[Math.round(255 * J)];
                    r =
                      (((r >>> 24) & 255) << 24) |
                      (((r >>> 16) & 255) << 16) |
                      (((r >>> 8) & 255) << 8) |
                      (J & 255);
                    J = m;
                    y = x;
                    null == y && (y = !1);
                    null == J && (J = 0);
                    y &&
                      (0 == (r & 255)
                        ? 0 != r && (r = 0)
                        : 255 != (r & 255) &&
                          ((R.a16 = R.__alpha16[r & 255]),
                          (r =
                            ((((((r >>> 24) & 255) * R.a16) >> 16) & 255) <<
                              24) |
                            ((((((r >>> 16) & 255) * R.a16) >> 16) & 255) <<
                              16) |
                            ((((((r >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                            (r & 255))));
                    switch (J) {
                      case 0:
                        p[h] = (r >>> 24) & 255;
                        p[h + 1] = (r >>> 16) & 255;
                        p[h + 2] = (r >>> 8) & 255;
                        p[h + 3] = r & 255;
                        break;
                      case 1:
                        p[h] = r & 255;
                        p[h + 1] = (r >>> 24) & 255;
                        p[h + 2] = (r >>> 16) & 255;
                        p[h + 3] = (r >>> 8) & 255;
                        break;
                      case 2:
                        ((p[h] = (r >>> 8) & 255),
                          (p[h + 1] = (r >>> 16) & 255),
                          (p[h + 2] = (r >>> 24) & 255),
                          (p[h + 3] = r & 255));
                    }
                  }
                  d += 4;
                  h += 4;
                  z += 4;
                }
            else
              for (C = 0, D = g.height; C < D; )
                for (
                  z = C++,
                    d = c.byteOffset + c.stride * z,
                    h = g.byteOffset + g.stride * z,
                    z = f.byteOffset + f.stride * z,
                    G = 0,
                    F = g.width;
                  G < F;

                ) {
                  G++;
                  J = q;
                  y = l;
                  null == y && (y = !1);
                  null == J && (J = 0);
                  switch (J) {
                    case 0:
                      u =
                        ((n[d] & 255) << 24) |
                        ((n[d + 1] & 255) << 16) |
                        ((n[d + 2] & 255) << 8) |
                        (n[d + 3] & 255);
                      break;
                    case 1:
                      u =
                        ((n[d + 1] & 255) << 24) |
                        ((n[d + 2] & 255) << 16) |
                        ((n[d + 3] & 255) << 8) |
                        (n[d] & 255);
                      break;
                    case 2:
                      u =
                        ((n[d + 2] & 255) << 24) |
                        ((n[d + 1] & 255) << 16) |
                        ((n[d] & 255) << 8) |
                        (n[d + 3] & 255);
                  }
                  y &&
                    0 != (u & 255) &&
                    255 != (u & 255) &&
                    ((R.unmult = 255 / (u & 255)),
                    (u =
                      ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (u & 255)));
                  J = b;
                  y = !1;
                  null == y && (y = !1);
                  null == J && (J = 0);
                  switch (J) {
                    case 0:
                      k =
                        ((w[z] & 255) << 24) |
                        ((w[z + 1] & 255) << 16) |
                        ((w[z + 2] & 255) << 8) |
                        (w[z + 3] & 255);
                      break;
                    case 1:
                      k =
                        ((w[z + 1] & 255) << 24) |
                        ((w[z + 2] & 255) << 16) |
                        ((w[z + 3] & 255) << 8) |
                        (w[z] & 255);
                      break;
                    case 2:
                      k =
                        ((w[z + 2] & 255) << 24) |
                        ((w[z + 1] & 255) << 16) |
                        ((w[z] & 255) << 8) |
                        (w[z + 3] & 255);
                  }
                  y &&
                    0 != (k & 255) &&
                    255 != (k & 255) &&
                    ((R.unmult = 255 / (k & 255)),
                    (k =
                      ((R.__clamp[Math.round(((k >>> 24) & 255) * R.unmult)] &
                        255) <<
                        24) |
                      ((R.__clamp[Math.round(((k >>> 16) & 255) * R.unmult)] &
                        255) <<
                        16) |
                      ((R.__clamp[Math.round(((k >>> 8) & 255) * R.unmult)] &
                        255) <<
                        8) |
                      (k & 255)));
                  I = Math.round(((k & 255) / 255) * (u & 255));
                  u =
                    (((u >>> 24) & 255) << 24) |
                    (((u >>> 16) & 255) << 16) |
                    (((u >>> 8) & 255) << 8) |
                    (I & 255);
                  J = m;
                  y = x;
                  null == y && (y = !1);
                  null == J && (J = 0);
                  y &&
                    (0 == (u & 255)
                      ? 0 != u && (u = 0)
                      : 255 != (u & 255) &&
                        ((R.a16 = R.__alpha16[u & 255]),
                        (u =
                          ((((((u >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                          ((((((u >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                          ((((((u >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                          (u & 255))));
                  switch (J) {
                    case 0:
                      p[h] = (u >>> 24) & 255;
                      p[h + 1] = (u >>> 16) & 255;
                      p[h + 2] = (u >>> 8) & 255;
                      p[h + 3] = u & 255;
                      break;
                    case 1:
                      p[h] = u & 255;
                      p[h + 1] = (u >>> 24) & 255;
                      p[h + 2] = (u >>> 16) & 255;
                      p[h + 3] = (u >>> 8) & 255;
                      break;
                    case 2:
                      ((p[h] = (u >>> 8) & 255),
                        (p[h + 1] = (u >>> 16) & 255),
                        (p[h + 2] = (u >>> 24) & 255),
                        (p[h + 3] = u & 255));
                  }
                  d += 4;
                  h += 4;
                  z += 4;
                }
          else if (C)
            for (C = 0, D = g.height; C < D; ) {
              z = C++;
              d = c.byteOffset + c.stride * z;
              h = g.byteOffset + g.stride * z;
              for (var G = 0, F = g.width; G < F; ) {
                G++;
                J = q;
                y = l;
                null == y && (y = !1);
                null == J && (J = 0);
                switch (J) {
                  case 0:
                    u =
                      ((n[d] & 255) << 24) |
                      ((n[d + 1] & 255) << 16) |
                      ((n[d + 2] & 255) << 8) |
                      (n[d + 3] & 255);
                    break;
                  case 1:
                    u =
                      ((n[d + 1] & 255) << 24) |
                      ((n[d + 2] & 255) << 16) |
                      ((n[d + 3] & 255) << 8) |
                      (n[d] & 255);
                    break;
                  case 2:
                    u =
                      ((n[d + 2] & 255) << 24) |
                      ((n[d + 1] & 255) << 16) |
                      ((n[d] & 255) << 8) |
                      (n[d + 3] & 255);
                }
                y &&
                  0 != (u & 255) &&
                  255 != (u & 255) &&
                  ((R.unmult = 255 / (u & 255)),
                  (u =
                    ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (u & 255)));
                J = m;
                y = x;
                null == y && (y = !1);
                null == J && (J = 0);
                switch (J) {
                  case 0:
                    r =
                      ((p[h] & 255) << 24) |
                      ((p[h + 1] & 255) << 16) |
                      ((p[h + 2] & 255) << 8) |
                      (p[h + 3] & 255);
                    break;
                  case 1:
                    r =
                      ((p[h + 1] & 255) << 24) |
                      ((p[h + 2] & 255) << 16) |
                      ((p[h + 3] & 255) << 8) |
                      (p[h] & 255);
                    break;
                  case 2:
                    r =
                      ((p[h + 2] & 255) << 24) |
                      ((p[h + 1] & 255) << 16) |
                      ((p[h] & 255) << 8) |
                      (p[h + 3] & 255);
                }
                y &&
                  0 != (r & 255) &&
                  255 != (r & 255) &&
                  ((R.unmult = 255 / (r & 255)),
                  (r =
                    ((R.__clamp[Math.round(((r >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((r >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((r >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (r & 255)));
                y = (u & 255) / 255;
                v = (r & 255) / 255;
                t = 1 - y;
                J = y + v * t;
                if (0 == J) r = 0;
                else {
                  var I =
                    R.__clamp[
                      Math.round(
                        (((u >>> 24) & 255) * y + ((r >>> 24) & 255) * v * t) /
                          J,
                      )
                    ];
                  r =
                    ((I & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (r & 255);
                  I =
                    R.__clamp[
                      Math.round(
                        (((u >>> 16) & 255) * y + ((r >>> 16) & 255) * v * t) /
                          J,
                      )
                    ];
                  r =
                    (((r >>> 24) & 255) << 24) |
                    ((I & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (r & 255);
                  y =
                    R.__clamp[
                      Math.round(
                        (((u >>> 8) & 255) * y + ((r >>> 8) & 255) * v * t) / J,
                      )
                    ];
                  r =
                    (((r >>> 24) & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    ((y & 255) << 8) |
                    (r & 255);
                  J = R.__clamp[Math.round(255 * J)];
                  r =
                    (((r >>> 24) & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (J & 255);
                }
                J = m;
                y = x;
                null == y && (y = !1);
                null == J && (J = 0);
                y &&
                  (0 == (r & 255)
                    ? 0 != r && (r = 0)
                    : 255 != (r & 255) &&
                      ((R.a16 = R.__alpha16[r & 255]),
                      (r =
                        ((((((r >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                        ((((((r >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                        ((((((r >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                        (r & 255))));
                switch (J) {
                  case 0:
                    p[h] = (r >>> 24) & 255;
                    p[h + 1] = (r >>> 16) & 255;
                    p[h + 2] = (r >>> 8) & 255;
                    p[h + 3] = r & 255;
                    break;
                  case 1:
                    p[h] = r & 255;
                    p[h + 1] = (r >>> 24) & 255;
                    p[h + 2] = (r >>> 16) & 255;
                    p[h + 3] = (r >>> 8) & 255;
                    break;
                  case 2:
                    ((p[h] = (r >>> 8) & 255),
                      (p[h + 1] = (r >>> 16) & 255),
                      (p[h + 2] = (r >>> 24) & 255),
                      (p[h + 3] = r & 255));
                }
                d += 4;
                h += 4;
              }
            }
          else if (q == m && l == x && D == w)
            for (C = 0, D = g.height; C < D; )
              ((z = C++),
                (d = c.byteOffset + c.stride * z),
                (h = g.byteOffset + g.stride * z),
                p.set(n.subarray(d, d + g.width * w), h));
          else
            for (C = 0, D = g.height; C < D; )
              for (
                z = C++,
                  d = c.byteOffset + c.stride * z,
                  h = g.byteOffset + g.stride * z,
                  G = 0,
                  F = g.width;
                G < F;

              ) {
                G++;
                J = q;
                y = l;
                null == y && (y = !1);
                null == J && (J = 0);
                switch (J) {
                  case 0:
                    u =
                      ((n[d] & 255) << 24) |
                      ((n[d + 1] & 255) << 16) |
                      ((n[d + 2] & 255) << 8) |
                      (n[d + 3] & 255);
                    break;
                  case 1:
                    u =
                      ((n[d + 1] & 255) << 24) |
                      ((n[d + 2] & 255) << 16) |
                      ((n[d + 3] & 255) << 8) |
                      (n[d] & 255);
                    break;
                  case 2:
                    u =
                      ((n[d + 2] & 255) << 24) |
                      ((n[d + 1] & 255) << 16) |
                      ((n[d] & 255) << 8) |
                      (n[d + 3] & 255);
                }
                y &&
                  0 != (u & 255) &&
                  255 != (u & 255) &&
                  ((R.unmult = 255 / (u & 255)),
                  (u =
                    ((R.__clamp[Math.round(((u >>> 24) & 255) * R.unmult)] &
                      255) <<
                      24) |
                    ((R.__clamp[Math.round(((u >>> 16) & 255) * R.unmult)] &
                      255) <<
                      16) |
                    ((R.__clamp[Math.round(((u >>> 8) & 255) * R.unmult)] &
                      255) <<
                      8) |
                    (u & 255)));
                J = m;
                y = x;
                null == y && (y = !1);
                null == J && (J = 0);
                y &&
                  (0 == (u & 255)
                    ? 0 != u && (u = 0)
                    : 255 != (u & 255) &&
                      ((R.a16 = R.__alpha16[u & 255]),
                      (u =
                        ((((((u >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                        ((((((u >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                        ((((((u >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                        (u & 255))));
                switch (J) {
                  case 0:
                    p[h] = (u >>> 24) & 255;
                    p[h + 1] = (u >>> 16) & 255;
                    p[h + 2] = (u >>> 8) & 255;
                    p[h + 3] = u & 255;
                    break;
                  case 1:
                    p[h] = u & 255;
                    p[h + 1] = (u >>> 24) & 255;
                    p[h + 2] = (u >>> 16) & 255;
                    p[h + 3] = (u >>> 8) & 255;
                    break;
                  case 2:
                    ((p[h] = (u >>> 8) & 255),
                      (p[h + 1] = (u >>> 16) & 255),
                      (p[h + 2] = (u >>> 24) & 255),
                      (p[h + 3] = u & 255));
                }
                d += 4;
                h += 4;
              }
        }
        a.dirty = !0;
        a.version++;
      };
      bc.fillRect = function (a, b, c, d) {
        switch (d) {
          case 1:
            c =
              (((c >>> 16) & 255) << 24) |
              (((c >>> 8) & 255) << 16) |
              ((c & 255) << 8) |
              ((c >>> 24) & 255);
            break;
          case 2:
            c =
              (((c >>> 8) & 255) << 24) |
              (((c >>> 16) & 255) << 16) |
              (((c >>> 24) & 255) << 8) |
              (c & 255);
        }
        a.get_transparent() ||
          (c =
            (((c >>> 24) & 255) << 24) |
            (((c >>> 16) & 255) << 16) |
            (((c >>> 8) & 255) << 8) |
            255);
        var f = a.buffer.data;
        if (null != f) {
          d = a.buffer.format;
          var h = a.buffer.premultiplied;
          h &&
            (0 == (c & 255)
              ? 0 != c && (c = 0)
              : 255 != (c & 255) &&
                ((R.a16 = R.__alpha16[c & 255]),
                (c =
                  ((((((c >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                  ((((((c >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                  ((((((c >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                  (c & 255))));
          b = new De(a, b);
          for (var k, n = 0, p = b.height; n < p; ) {
            h = n++;
            k = b.byteOffset + b.stride * h;
            for (var g = 0, q = b.width; g < q; ) {
              h = g++;
              var m = k + 4 * h,
                u = d;
              h = !1;
              null == h && (h = !1);
              null == u && (u = 0);
              h &&
                (0 == (c & 255)
                  ? 0 != c && (c = 0)
                  : 255 != (c & 255) &&
                    ((R.a16 = R.__alpha16[c & 255]),
                    (c =
                      ((((((c >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                      ((((((c >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                      ((((((c >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                      (c & 255))));
              switch (u) {
                case 0:
                  f[m] = (c >>> 24) & 255;
                  f[m + 1] = (c >>> 16) & 255;
                  f[m + 2] = (c >>> 8) & 255;
                  f[m + 3] = c & 255;
                  break;
                case 1:
                  f[m] = c & 255;
                  f[m + 1] = (c >>> 24) & 255;
                  f[m + 2] = (c >>> 16) & 255;
                  f[m + 3] = (c >>> 8) & 255;
                  break;
                case 2:
                  ((f[m] = (c >>> 8) & 255),
                    (f[m + 1] = (c >>> 16) & 255),
                    (f[m + 2] = (c >>> 24) & 255),
                    (f[m + 3] = c & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      bc.gaussianBlur = function (a, b, c, d, f, h, k, n, p) {
        null == k && (k = 1);
        null == h && (h = 4);
        null == f && (f = 4);
        (n = a.get_premultiplied()) && a.set_premultiplied(!1);
        Cd.blur(a, b, c, d, f, h, k);
        a.dirty = !0;
        a.version++;
        n && a.set_premultiplied(!0);
        return a;
      };
      bc.getPixel = function (a, b, c, d) {
        var f = 0,
          h = a.buffer.data;
        b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        c = a.buffer.format;
        a = a.buffer.premultiplied;
        null == a && (a = !1);
        null == c && (c = 0);
        switch (c) {
          case 0:
            f =
              ((h[b] & 255) << 24) |
              ((h[b + 1] & 255) << 16) |
              ((h[b + 2] & 255) << 8) |
              (h[b + 3] & 255);
            break;
          case 1:
            f =
              ((h[b + 1] & 255) << 24) |
              ((h[b + 2] & 255) << 16) |
              ((h[b + 3] & 255) << 8) |
              (h[b] & 255);
            break;
          case 2:
            f =
              ((h[b + 2] & 255) << 24) |
              ((h[b + 1] & 255) << 16) |
              ((h[b] & 255) << 8) |
              (h[b + 3] & 255);
        }
        a &&
          0 != (f & 255) &&
          255 != (f & 255) &&
          ((R.unmult = 255 / (f & 255)),
          (f =
            ((R.__clamp[Math.round(((f >>> 24) & 255) * R.unmult)] & 255) <<
              24) |
            ((R.__clamp[Math.round(((f >>> 16) & 255) * R.unmult)] & 255) <<
              16) |
            ((R.__clamp[Math.round(((f >>> 8) & 255) * R.unmult)] & 255) << 8) |
            (f & 255)));
        f =
          (((f >>> 24) & 255) << 24) |
          (((f >>> 16) & 255) << 16) |
          (((f >>> 8) & 255) << 8) |
          0;
        switch (d) {
          case 1:
            return (
              ((f & 255) << 24) |
              (((f >>> 24) & 255) << 16) |
              (((f >>> 16) & 255) << 8) |
              ((f >>> 8) & 255)
            );
          case 2:
            return (
              (((f >>> 8) & 255) << 24) |
              (((f >>> 16) & 255) << 16) |
              (((f >>> 24) & 255) << 8) |
              (f & 255)
            );
          default:
            return f;
        }
      };
      bc.getPixels = function (a, b, c) {
        if (null == a.buffer.data) return null;
        var d = new zb(new ArrayBuffer(4 * ((b.width * b.height) | 0))),
          f = a.buffer.data,
          h = a.buffer.format,
          k = a.buffer.premultiplied;
        a = new De(a, b);
        for (var n, p, g = (b = p = 0), q = a.height; g < q; ) {
          n = g++;
          n = a.byteOffset + a.stride * n;
          for (var m = 0, u = a.width; m < u; ) {
            m++;
            var r = h,
              l = k;
            null == l && (l = !1);
            null == r && (r = 0);
            switch (r) {
              case 0:
                p =
                  ((f[n] & 255) << 24) |
                  ((f[n + 1] & 255) << 16) |
                  ((f[n + 2] & 255) << 8) |
                  (f[n + 3] & 255);
                break;
              case 1:
                p =
                  ((f[n + 1] & 255) << 24) |
                  ((f[n + 2] & 255) << 16) |
                  ((f[n + 3] & 255) << 8) |
                  (f[n] & 255);
                break;
              case 2:
                p =
                  ((f[n + 2] & 255) << 24) |
                  ((f[n + 1] & 255) << 16) |
                  ((f[n] & 255) << 8) |
                  (f[n + 3] & 255);
            }
            l &&
              0 != (p & 255) &&
              255 != (p & 255) &&
              ((R.unmult = 255 / (p & 255)),
              (p =
                ((R.__clamp[Math.round(((p >>> 24) & 255) * R.unmult)] & 255) <<
                  24) |
                ((R.__clamp[Math.round(((p >>> 16) & 255) * R.unmult)] & 255) <<
                  16) |
                ((R.__clamp[Math.round(((p >>> 8) & 255) * R.unmult)] & 255) <<
                  8) |
                (p & 255)));
            switch (c) {
              case 1:
                p =
                  ((p & 255) << 24) |
                  (((p >>> 24) & 255) << 16) |
                  (((p >>> 16) & 255) << 8) |
                  ((p >>> 8) & 255);
                break;
              case 2:
                p =
                  (((p >>> 8) & 255) << 24) |
                  (((p >>> 16) & 255) << 16) |
                  (((p >>> 24) & 255) << 8) |
                  (p & 255);
            }
            d.b[b++] = (p >>> 24) & 255;
            d.b[b++] = (p >>> 16) & 255;
            d.b[b++] = (p >>> 8) & 255;
            d.b[b++] = p & 255;
            n += 4;
          }
        }
        return d;
      };
      bc.multiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b && a.buffer.transparent) {
          for (
            var c = a.buffer.format, d = 0, f = 0, h = (b.length / 4) | 0;
            f < h;

          ) {
            var k = f++,
              n = 4 * k,
              p = c,
              g = !1;
            null == g && (g = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                d =
                  ((b[n] & 255) << 24) |
                  ((b[n + 1] & 255) << 16) |
                  ((b[n + 2] & 255) << 8) |
                  (b[n + 3] & 255);
                break;
              case 1:
                d =
                  ((b[n + 1] & 255) << 24) |
                  ((b[n + 2] & 255) << 16) |
                  ((b[n + 3] & 255) << 8) |
                  (b[n] & 255);
                break;
              case 2:
                d =
                  ((b[n + 2] & 255) << 24) |
                  ((b[n + 1] & 255) << 16) |
                  ((b[n] & 255) << 8) |
                  (b[n + 3] & 255);
            }
            g &&
              0 != (d & 255) &&
              255 != (d & 255) &&
              ((R.unmult = 255 / (d & 255)),
              (d =
                ((R.__clamp[Math.round(((d >>> 24) & 255) * R.unmult)] & 255) <<
                  24) |
                ((R.__clamp[Math.round(((d >>> 16) & 255) * R.unmult)] & 255) <<
                  16) |
                ((R.__clamp[Math.round(((d >>> 8) & 255) * R.unmult)] & 255) <<
                  8) |
                (d & 255)));
            k *= 4;
            n = c;
            p = !0;
            null == p && (p = !1);
            null == n && (n = 0);
            p &&
              (0 == (d & 255)
                ? 0 != d && (d = 0)
                : 255 != (d & 255) &&
                  ((R.a16 = R.__alpha16[d & 255]),
                  (d =
                    ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                    ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                    ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                    (d & 255))));
            switch (n) {
              case 0:
                b[k] = (d >>> 24) & 255;
                b[k + 1] = (d >>> 16) & 255;
                b[k + 2] = (d >>> 8) & 255;
                b[k + 3] = d & 255;
                break;
              case 1:
                b[k] = d & 255;
                b[k + 1] = (d >>> 24) & 255;
                b[k + 2] = (d >>> 16) & 255;
                b[k + 3] = (d >>> 8) & 255;
                break;
              case 2:
                ((b[k] = (d >>> 8) & 255),
                  (b[k + 1] = (d >>> 16) & 255),
                  (b[k + 2] = (d >>> 24) & 255),
                  (b[k + 3] = d & 255));
            }
          }
          a.buffer.premultiplied = !0;
          a.dirty = !0;
          a.version++;
        }
      };
      bc.setFormat = function (a, b) {
        var c = a.buffer.data;
        if (null != c) {
          var d = (c.length / 4) | 0;
          switch (a.get_format()) {
            case 0:
              var f = 0;
              var h = 1;
              var k = 2;
              var n = 3;
              break;
            case 1:
              f = 1;
              h = 2;
              k = 3;
              n = 0;
              break;
            case 2:
              ((f = 2), (h = 1), (k = 0), (n = 3));
          }
          switch (b) {
            case 0:
              var p = 0;
              var g = 1;
              var q = 2;
              var m = 3;
              break;
            case 1:
              p = 1;
              g = 2;
              q = 3;
              m = 0;
              break;
            case 2:
              ((p = 2), (g = 1), (q = 0), (m = 3));
          }
          for (var u = 0; u < d; ) {
            var r = 4 * u++;
            var l = c[r + f];
            var x = c[r + h];
            var D = c[r + k];
            var w = c[r + n];
            c[r + p] = l;
            c[r + g] = x;
            c[r + q] = D;
            c[r + m] = w;
          }
          a.buffer.format = b;
          a.dirty = !0;
          a.version++;
        }
      };
      bc.setPixel = function (a, b, c, d, f) {
        switch (f) {
          case 1:
            d =
              (((d >>> 16) & 255) << 24) |
              (((d >>> 8) & 255) << 16) |
              ((d & 255) << 8) |
              ((d >>> 24) & 255);
            break;
          case 2:
            d =
              (((d >>> 8) & 255) << 24) |
              (((d >>> 16) & 255) << 16) |
              (((d >>> 24) & 255) << 8) |
              (d & 255);
        }
        var h = 0,
          k = a.buffer.data,
          n = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        f = a.buffer.format;
        var p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == f && (f = 0);
        switch (f) {
          case 0:
            h =
              ((k[n] & 255) << 24) |
              ((k[n + 1] & 255) << 16) |
              ((k[n + 2] & 255) << 8) |
              (k[n + 3] & 255);
            break;
          case 1:
            h =
              ((k[n + 1] & 255) << 24) |
              ((k[n + 2] & 255) << 16) |
              ((k[n + 3] & 255) << 8) |
              (k[n] & 255);
            break;
          case 2:
            h =
              ((k[n + 2] & 255) << 24) |
              ((k[n + 1] & 255) << 16) |
              ((k[n] & 255) << 8) |
              (k[n + 3] & 255);
        }
        p &&
          0 != (h & 255) &&
          255 != (h & 255) &&
          ((R.unmult = 255 / (h & 255)),
          (h =
            ((R.__clamp[Math.round(((h >>> 24) & 255) * R.unmult)] & 255) <<
              24) |
            ((R.__clamp[Math.round(((h >>> 16) & 255) * R.unmult)] & 255) <<
              16) |
            ((R.__clamp[Math.round(((h >>> 8) & 255) * R.unmult)] & 255) << 8) |
            (h & 255)));
        d =
          (((d >>> 24) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 8) & 255) << 8) |
          (h & 255);
        k = a.buffer.data;
        n = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        f = a.buffer.format;
        p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == f && (f = 0);
        p &&
          (0 == (d & 255)
            ? 0 != d && (d = 0)
            : 255 != (d & 255) &&
              ((R.a16 = R.__alpha16[d & 255]),
              (d =
                ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                (d & 255))));
        switch (f) {
          case 0:
            k[n] = (d >>> 24) & 255;
            k[n + 1] = (d >>> 16) & 255;
            k[n + 2] = (d >>> 8) & 255;
            k[n + 3] = d & 255;
            break;
          case 1:
            k[n] = d & 255;
            k[n + 1] = (d >>> 24) & 255;
            k[n + 2] = (d >>> 16) & 255;
            k[n + 3] = (d >>> 8) & 255;
            break;
          case 2:
            ((k[n] = (d >>> 8) & 255),
              (k[n + 1] = (d >>> 16) & 255),
              (k[n + 2] = (d >>> 24) & 255),
              (k[n + 3] = d & 255));
        }
        a.dirty = !0;
        a.version++;
      };
      bc.unmultiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b) {
          for (
            var c = a.buffer.format, d = 0, f = 0, h = (b.length / 4) | 0;
            f < h;

          ) {
            var k = f++,
              n = 4 * k,
              p = c,
              g = !0;
            null == g && (g = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                d =
                  ((b[n] & 255) << 24) |
                  ((b[n + 1] & 255) << 16) |
                  ((b[n + 2] & 255) << 8) |
                  (b[n + 3] & 255);
                break;
              case 1:
                d =
                  ((b[n + 1] & 255) << 24) |
                  ((b[n + 2] & 255) << 16) |
                  ((b[n + 3] & 255) << 8) |
                  (b[n] & 255);
                break;
              case 2:
                d =
                  ((b[n + 2] & 255) << 24) |
                  ((b[n + 1] & 255) << 16) |
                  ((b[n] & 255) << 8) |
                  (b[n + 3] & 255);
            }
            g &&
              0 != (d & 255) &&
              255 != (d & 255) &&
              ((R.unmult = 255 / (d & 255)),
              (d =
                ((R.__clamp[Math.round(((d >>> 24) & 255) * R.unmult)] & 255) <<
                  24) |
                ((R.__clamp[Math.round(((d >>> 16) & 255) * R.unmult)] & 255) <<
                  16) |
                ((R.__clamp[Math.round(((d >>> 8) & 255) * R.unmult)] & 255) <<
                  8) |
                (d & 255)));
            k *= 4;
            n = c;
            p = !1;
            null == p && (p = !1);
            null == n && (n = 0);
            p &&
              (0 == (d & 255)
                ? 0 != d && (d = 0)
                : 255 != (d & 255) &&
                  ((R.a16 = R.__alpha16[d & 255]),
                  (d =
                    ((((((d >>> 24) & 255) * R.a16) >> 16) & 255) << 24) |
                    ((((((d >>> 16) & 255) * R.a16) >> 16) & 255) << 16) |
                    ((((((d >>> 8) & 255) * R.a16) >> 16) & 255) << 8) |
                    (d & 255))));
            switch (n) {
              case 0:
                b[k] = (d >>> 24) & 255;
                b[k + 1] = (d >>> 16) & 255;
                b[k + 2] = (d >>> 8) & 255;
                b[k + 3] = d & 255;
                break;
              case 1:
                b[k] = d & 255;
                b[k + 1] = (d >>> 24) & 255;
                b[k + 2] = (d >>> 16) & 255;
                b[k + 3] = (d >>> 8) & 255;
                break;
              case 2:
                ((b[k] = (d >>> 8) & 255),
                  (b[k + 1] = (d >>> 16) & 255),
                  (b[k + 2] = (d >>> 24) & 255),
                  (b[k + 3] = d & 255));
            }
          }
          a.buffer.premultiplied = !1;
          a.dirty = !0;
          a.version++;
        }
      };
      var De = function (a, b) {
        this.image = a;
        null == b
          ? (this.rect = a.get_rect())
          : (0 > b.x && (b.x = 0),
            0 > b.y && (b.y = 0),
            b.x + b.width > a.width && (b.width = a.width - b.x),
            b.y + b.height > a.height && (b.height = a.height - b.y),
            0 > b.width && (b.width = 0),
            0 > b.height && (b.height = 0),
            (this.rect = b));
        this.stride = a.buffer.get_stride();
        this.__update();
      };
      g['lime._internal.graphics._ImageDataUtil.ImageDataView'] = De;
      De.__name__ = 'lime._internal.graphics._ImageDataUtil.ImageDataView';
      De.prototype = {
        clip: function (a, b, c, d) {
          null == this.tempRect && (this.tempRect = new Ld());
          this.tempRect.setTo(a, b, c, d);
          this.rect.intersection(this.tempRect, this.rect);
          this.__update();
        },
        __update: function () {
          this.x = Math.ceil(this.rect.x);
          this.y = Math.ceil(this.rect.y);
          this.width = Math.floor(this.rect.width);
          this.height = Math.floor(this.rect.height);
          this.byteOffset =
            this.stride * (this.y + this.image.offsetY) +
            4 * (this.x + this.image.offsetX);
        },
        __class__: De,
      };
      var Cd = function () {};
      g['lime._internal.graphics.StackBlur'] = Cd;
      Cd.__name__ = 'lime._internal.graphics.StackBlur';
      Cd.blur = function (a, b, c, d, f, h, k) {
        a.copyPixels(b, c, d);
        Cd.__stackBlurCanvasRGBA(a, c.width | 0, c.height | 0, f, h, k);
      };
      Cd.__stackBlurCanvasRGBA = function (a, b, c, d, f, h) {
        d = Math.round(d) >> 1;
        f = Math.round(f) >> 1;
        if (
          null != Cd.MUL_TABLE &&
          (d >= Cd.MUL_TABLE.length && (d = Cd.MUL_TABLE.length - 1),
          f >= Cd.MUL_TABLE.length && (f = Cd.MUL_TABLE.length - 1),
          !(0 > d || 0 > f))
        ) {
          1 > h && (h = 1);
          3 < h && (h = 3);
          a = a.get_data();
          var k,
            n = d + d + 1;
          var p = f + f + 1;
          var g = b - 1,
            q = c - 1,
            m = d + 1,
            u = f + 1,
            r = new Dg(),
            l = r;
          var x = 1;
          for (var D = n; x < D; ) (x++, (l = l.n = new Dg()));
          l.n = r;
          var w = (n = new Dg());
          x = 1;
          for (D = p; x < D; ) (x++, (w = w.n = new Dg()));
          w.n = n;
          for (
            var z = Cd.MUL_TABLE[d],
              J = Cd.SHG_TABLE[d],
              y = Cd.MUL_TABLE[f],
              C = Cd.SHG_TABLE[f];
            0 < h;

          ) {
            --h;
            var v = (k = 0);
            var t = z,
              G = J;
            var F = c;
            do {
              var I = a[k];
              p = m * I;
              var eb = a[k + 1];
              var O = m * eb;
              var H = a[k + 2];
              var kb = m * H;
              x = a[k + 3];
              var K = m * x;
              l = r;
              w = m;
              do ((l.r = I), (l.g = eb), (l.b = H), (l.a = x), (l = l.n));
              while (-1 < --w);
              x = 1;
              for (D = m; x < D; )
                ((w = x++),
                  (w = k + ((g < w ? g : w) << 2)),
                  (p += l.r = a[w]),
                  (O += l.g = a[w + 1]),
                  (kb += l.b = a[w + 2]),
                  (K += l.a = a[w + 3]),
                  (l = l.n));
              D = r;
              l = 0;
              for (x = b; l < x; )
                ((w = l++),
                  (a[k++] = (p * t) >>> G),
                  (a[k++] = (O * t) >>> G),
                  (a[k++] = (kb * t) >>> G),
                  (a[k++] = (K * t) >>> G),
                  (w = w + d + 1),
                  (w = (v + (w < g ? w : g)) << 2),
                  (p -= D.r - (D.r = a[w])),
                  (O -= D.g - (D.g = a[w + 1])),
                  (kb -= D.b - (D.b = a[w + 2])),
                  (K -= D.a - (D.a = a[w + 3])),
                  (D = D.n));
              v += b;
            } while (0 < --F);
            t = y;
            G = C;
            F = 0;
            for (v = b; F < v; ) {
              l = F++;
              k = l << 2;
              I = a[k];
              p = u * I;
              eb = a[k + 1];
              O = u * eb;
              H = a[k + 2];
              kb = u * H;
              x = a[k + 3];
              K = u * x;
              w = n;
              k = 0;
              for (D = u; k < D; )
                (k++, (w.r = I), (w.g = eb), (w.b = H), (w.a = x), (w = w.n));
              x = b;
              D = 1;
              for (I = f + 1; D < I; )
                ((eb = D++),
                  (k = (x + l) << 2),
                  (p += w.r = a[k]),
                  (O += w.g = a[k + 1]),
                  (kb += w.b = a[k + 2]),
                  (K += w.a = a[k + 3]),
                  (w = w.n),
                  eb < q && (x += b));
              k = l;
              D = n;
              if (0 < h)
                for (I = 0, eb = c; I < eb; )
                  ((H = I++),
                    (w = k << 2),
                    (x = (K * t) >>> G),
                    (a[w + 3] = x),
                    0 < x
                      ? ((a[w] = (p * t) >>> G),
                        (a[w + 1] = (O * t) >>> G),
                        (a[w + 2] = (kb * t) >>> G))
                      : (a[w] = a[w + 1] = a[w + 2] = 0),
                    (w = H + u),
                    (w = (l + (w < q ? w : q) * b) << 2),
                    (p -= D.r - (D.r = a[w])),
                    (O -= D.g - (D.g = a[w + 1])),
                    (kb -= D.b - (D.b = a[w + 2])),
                    (K -= D.a - (D.a = a[w + 3])),
                    (D = D.n),
                    (k += b));
              else
                for (var Wa = 0, E = c; Wa < E; ) {
                  var sa = Wa++;
                  w = k << 2;
                  x = (K * t) >>> G;
                  a[w + 3] = x;
                  0 < x
                    ? ((x = 255 / x),
                      (I = (((p * t) >>> G) * x) | 0),
                      (eb = (((O * t) >>> G) * x) | 0),
                      (H = (((kb * t) >>> G) * x) | 0),
                      (a[w] = 255 < I ? 255 : I),
                      (a[w + 1] = 255 < eb ? 255 : eb),
                      (a[w + 2] = 255 < H ? 255 : H))
                    : (a[w] = a[w + 1] = a[w + 2] = 0);
                  w = sa + u;
                  w = (l + (w < q ? w : q) * b) << 2;
                  p -= D.r - (D.r = a[w]);
                  O -= D.g - (D.g = a[w + 1]);
                  kb -= D.b - (D.b = a[w + 2]);
                  K -= D.a - (D.a = a[w + 3]);
                  D = D.n;
                  k += b;
                }
            }
          }
        }
      };
      var Dg = function () {
        this.a = this.b = this.g = this.r = 0;
        this.n = null;
      };
      g['lime._internal.graphics.BlurStack'] = Dg;
      Dg.__name__ = 'lime._internal.graphics.BlurStack';
      Dg.prototype = { __class__: Dg };
      var hc = function (a, b) {
        if (null != a)
          try {
            ((this.value = a()), (this.isComplete = !0));
          } catch (c) {
            ((Ta.lastError = c),
              (this.error = X.caught(c).unwrap()),
              (this.isError = !0));
          }
      };
      g['lime.app.Future'] = hc;
      hc.__name__ = 'lime.app.Future';
      hc.withValue = function (a) {
        var b = new hc();
        b.isComplete = !0;
        b.value = a;
        return b;
      };
      hc.prototype = {
        onComplete: function (a) {
          null != a &&
            (this.isComplete
              ? a(this.value)
              : this.isError ||
                (null == this.__completeListeners &&
                  (this.__completeListeners = []),
                this.__completeListeners.push(a)));
          return this;
        },
        onError: function (a) {
          null != a &&
            (this.isError
              ? a(this.error)
              : this.isComplete ||
                (null == this.__errorListeners && (this.__errorListeners = []),
                this.__errorListeners.push(a)));
          return this;
        },
        onProgress: function (a) {
          null != a &&
            (null == this.__progressListeners &&
              (this.__progressListeners = []),
            this.__progressListeners.push(a));
          return this;
        },
        then: function (a) {
          if (this.isComplete) return a(this.value);
          if (this.isError) {
            var b = new hc();
            b.isError = !0;
            b.error = this.error;
            return b;
          }
          var c = new Gd();
          this.onError(l(c, c.error));
          this.onProgress(l(c, c.progress));
          this.onComplete(function (b) {
            b = a(b);
            b.onError(l(c, c.error));
            b.onComplete(l(c, c.complete));
          });
          return c.future;
        },
        __class__: hc,
      };
      var Gd = function () {
        this.future = new hc();
      };
      g['lime.app.Promise'] = Gd;
      Gd.__name__ = 'lime.app.Promise';
      Gd.prototype = {
        complete: function (a) {
          if (
            !this.future.isError &&
            ((this.future.isComplete = !0),
            (this.future.value = a),
            null != this.future.__completeListeners)
          ) {
            for (
              var b = 0, c = this.future.__completeListeners;
              b < c.length;

            ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__completeListeners = null;
          }
          return this;
        },
        completeWith: function (a) {
          a.onComplete(l(this, this.complete));
          a.onError(l(this, this.error));
          a.onProgress(l(this, this.progress));
          return this;
        },
        error: function (a) {
          if (
            !this.future.isComplete &&
            ((this.future.isError = !0),
            (this.future.error = a),
            null != this.future.__errorListeners)
          ) {
            for (var b = 0, c = this.future.__errorListeners; b < c.length; ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__errorListeners = null;
          }
          return this;
        },
        progress: function (a, b) {
          if (
            !this.future.isError &&
            !this.future.isComplete &&
            null != this.future.__progressListeners
          )
            for (
              var c = 0, d = this.future.__progressListeners;
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              f(a, b);
            }
          return this;
        },
        __class__: Gd,
      };
      var sk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_Float_Void'] = sk;
      sk.__name__ = 'lime.app._Event_Float_Float_Float_Void';
      sk.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: sk,
      };
      var tk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_Int_Void'] = tk;
      tk.__name__ = 'lime.app._Event_Float_Float_Int_Void';
      tk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: tk,
      };
      var th = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_Void'] = th;
      th.__name__ = 'lime.app._Event_Float_Float_Void';
      th.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: th,
      };
      var uk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_lime_ui_MouseButton_Void'] = uk;
      uk.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseButton_Void';
      uk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: uk,
      };
      var vk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void'] = vk;
      vk.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void';
      vk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, h = 0;
            h < d.length &&
            (d[h](a, b, c), f[h] ? ++h : this.remove(d[h]), !this.canceled);

          );
        },
        __class__: vk,
      };
      var wk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_Float_Void'] = wk;
      wk.__name__ = 'lime.app._Event_Int_Float_Void';
      wk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: wk,
      };
      var Oi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_Int_Void'] = Oi;
      Oi.__name__ = 'lime.app._Event_Int_Int_Void';
      Oi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: Oi,
      };
      var zf = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_Void'] = zf;
      zf.__name__ = 'lime.app._Event_Int_Void';
      zf.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: zf,
      };
      var xk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Int_lime_ui_JoystickHatPosition_Void'] = xk;
      xk.__name__ = 'lime.app._Event_Int_lime_ui_JoystickHatPosition_Void';
      xk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: xk,
      };
      var yk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_String_Int_Int_Void'] = yk;
      yk.__name__ = 'lime.app._Event_String_Int_Int_Void';
      yk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: yk,
      };
      var Pi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_String_Void'] = Pi;
      Pi.__name__ = 'lime.app._Event_String_Void';
      Pi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        has: function (a) {
          for (var b = 0, c = this.__listeners; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d == a) return !0;
          }
          return !1;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Pi,
      };
      var Ac = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_Void_Void'] = Ac;
      Ac.__name__ = 'lime.app._Event_Void_Void';
      Ac.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function () {
          this.canceled = !1;
          for (
            var a = this.__listeners, b = this.__repeat, c = 0;
            c < a.length &&
            (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled);

          );
        },
        __class__: Ac,
      };
      var Qi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_graphics_RenderContext_Void'] = Qi;
      Qi.__name__ = 'lime.app._Event_lime_graphics_RenderContext_Void';
      Qi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Qi,
      };
      var zk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_GamepadAxis_Float_Void'] = zk;
      zk.__name__ = 'lime.app._Event_lime_ui_GamepadAxis_Float_Void';
      zk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: zk,
      };
      var Ri = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_GamepadButton_Void'] = Ri;
      Ri.__name__ = 'lime.app._Event_lime_ui_GamepadButton_Void';
      Ri.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Ri,
      };
      var Ak = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Gamepad_Void'] = Ak;
      Ak.__name__ = 'lime.app._Event_lime_ui_Gamepad_Void';
      Ak.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Ak,
      };
      var Bk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Joystick_Void'] = Bk;
      Bk.__name__ = 'lime.app._Event_lime_ui_Joystick_Void';
      Bk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Bk,
      };
      var Si = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void'] = Si;
      Si.__name__ = 'lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void';
      Si.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: Si,
      };
      var Eg = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Touch_Void'] = Eg;
      Eg.__name__ = 'lime.app._Event_lime_ui_Touch_Void';
      Eg.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Eg,
      };
      var Rj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      g['lime.app._Event_lime_ui_Window_Void'] = Rj;
      Rj.__name__ = 'lime.app._Event_lime_ui_Window_Void';
      Rj.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var h = d++;
            if (c > this.__priorities[h]) {
              this.__listeners.splice(h, 0, a);
              this.__priorities.splice(h, 0, c);
              this.__repeat.splice(h, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Rj,
      };
      var rg = (y['lime.graphics.ImageChannel'] = {
        __ename__: 'lime.graphics.ImageChannel',
        __constructs__: null,
        RED: {
          _hx_name: 'RED',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
        GREEN: {
          _hx_name: 'GREEN',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
        BLUE: {
          _hx_name: 'BLUE',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
        ALPHA: {
          _hx_name: 'ALPHA',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
      });
      rg.__constructs__ = [rg.RED, rg.GREEN, rg.BLUE, rg.ALPHA];
      var ri = (y['lime.graphics.ImageFileFormat'] = {
        __ename__: 'lime.graphics.ImageFileFormat',
        __constructs__: null,
        BMP: {
          _hx_name: 'BMP',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: r,
        },
        JPEG: {
          _hx_name: 'JPEG',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: r,
        },
        PNG: {
          _hx_name: 'PNG',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: r,
        },
      });
      ri.__constructs__ = [ri.BMP, ri.JPEG, ri.PNG];
      var rk = function () {};
      g['lime.graphics.RenderContext'] = rk;
      rk.__name__ = 'lime.graphics.RenderContext';
      rk.prototype = { __class__: rk };
      var Kl = {
          uniform2fv: function (a, b, c, d, f) {
            null != d ? a.uniform2fv(b, c, d, f) : a.uniform2fv(b, c);
          },
        },
        Lc = {
          bufferData: function (a, b, c, d) {
            a.bufferData(b, c, d);
          },
          texImage2D: function (a, b, c, d, f, h, k, n, p, g) {
            null != n
              ? a.texImage2D(b, c, d, f, h, k, n, p, g)
              : a.texImage2D(b, c, d, f, h, k);
          },
          uniformMatrix2fv: function (a, b, c, d) {
            a.uniformMatrix2fv(b, c, d);
          },
          uniformMatrix3fv: function (a, b, c, d) {
            a.uniformMatrix3fv(b, c, d);
          },
          uniformMatrix4fv: function (a, b, c, d) {
            a.uniformMatrix4fv(b, c, d);
          },
          fromWebGL2RenderContext: function (a) {
            return a;
          },
        },
        il = function (a) {};
      g['lime.graphics.cairo.Cairo'] = il;
      il.__name__ = 'lime.graphics.cairo.Cairo';
      il.prototype = {
        clip: function () {},
        identityMatrix: function () {},
        newPath: function () {},
        paint: function () {},
        rectangle: function (a, b, c, d) {},
        restore: function () {},
        save: function () {},
        setOperator: function (a) {
          return a;
        },
        setSourceRGB: function (a, b, c) {},
        set_matrix: function (a) {
          return a;
        },
        __class__: il,
        __properties__: { set_matrix: 'set_matrix' },
      };
      var El = { flush: function (a) {} },
        Xe = function () {};
      g['lime.graphics.opengl.GL'] = Xe;
      Xe.__name__ = 'lime.graphics.opengl.GL';
      var jl = function () {
        this.STACK_UNDERFLOW = 1284;
        this.STACK_OVERFLOW = 1283;
        this.CONTEXT_FLAG_DEBUG_BIT = 2;
        this.DEBUG_OUTPUT = 37600;
        this.DEBUG_SEVERITY_LOW = 37192;
        this.DEBUG_SEVERITY_MEDIUM = 37191;
        this.DEBUG_SEVERITY_HIGH = 37190;
        this.DEBUG_LOGGED_MESSAGES = 37189;
        this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
        this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
        this.MAX_LABEL_LENGTH = 33512;
        this.SAMPLER = 33510;
        this.QUERY = 33507;
        this.PROGRAM = 33506;
        this.SHADER = 33505;
        this.BUFFER = 33504;
        this.DEBUG_GROUP_STACK_DEPTH = 33389;
        this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
        this.DEBUG_SEVERITY_NOTIFICATION = 33387;
        this.DEBUG_TYPE_POP_GROUP = 33386;
        this.DEBUG_TYPE_PUSH_GROUP = 33385;
        this.DEBUG_TYPE_MARKER = 33384;
        this.DEBUG_TYPE_OTHER = 33361;
        this.DEBUG_TYPE_PERFORMANCE = 33360;
        this.DEBUG_TYPE_PORTABILITY = 33359;
        this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
        this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
        this.DEBUG_TYPE_ERROR = 33356;
        this.DEBUG_SOURCE_OTHER = 33355;
        this.DEBUG_SOURCE_APPLICATION = 33354;
        this.DEBUG_SOURCE_THIRD_PARTY = 33353;
        this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
        this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
        this.DEBUG_SOURCE_API = 33350;
        this.DEBUG_CALLBACK_USER_PARAM = 33349;
        this.DEBUG_CALLBACK_FUNCTION = 33348;
        this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
        this.DEBUG_OUTPUT_SYNCHRONOUS = 33346;
      };
      g['lime.graphics.opengl.ext.KHR_debug'] = jl;
      jl.__name__ = 'lime.graphics.opengl.ext.KHR_debug';
      jl.prototype = { __class__: jl };
      var Qc = {
          getAlphaTable: function (a) {
            null == Qc.__alphaTable && (Qc.__alphaTable = new Uint8Array(256));
            Qc.__alphaTable[0] = 0;
            for (var b = 1; 256 > b; ) {
              var c = b++;
              var d = Math.floor(c * a[18] + 255 * a[19]);
              255 < d && (d = 255);
              0 > d && (d = 0);
              Qc.__alphaTable[c] = d;
            }
            return Qc.__alphaTable;
          },
          getBlueTable: function (a) {
            null == Qc.__blueTable && (Qc.__blueTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[12] + 255 * a[14]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Qc.__blueTable[d] = b;
            }
            return Qc.__blueTable;
          },
          getGreenTable: function (a) {
            null == Qc.__greenTable && (Qc.__greenTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[6] + 255 * a[9]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Qc.__greenTable[d] = b;
            }
            return Qc.__greenTable;
          },
          getRedTable: function (a) {
            null == Qc.__redTable && (Qc.__redTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[0] + 255 * a[4]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Qc.__redTable[d] = b;
            }
            return Qc.__redTable;
          },
          __toFlashColorTransform: function (a) {
            return null;
          },
        },
        pb = {
          _new: function (a) {
            if (null == a || 16 != a.length)
              ((a = pb.__identity),
                (a = null != a ? new Float32Array(a) : null));
            return a;
          },
          append: function (a, b) {
            var c = a[0],
              d = a[4],
              f = a[8],
              h = a[12],
              k = a[1],
              n = a[5],
              p = a[9],
              g = a[13],
              q = a[2],
              m = a[6],
              u = a[10],
              r = a[14],
              l = a[3],
              D = a[7],
              x = a[11],
              w = a[15],
              z = pb.get(b, 0),
              J = pb.get(b, 4),
              y = pb.get(b, 8),
              C = pb.get(b, 12),
              t = pb.get(b, 1),
              v = pb.get(b, 5),
              G = pb.get(b, 9),
              F = pb.get(b, 13),
              I = pb.get(b, 2),
              eb = pb.get(b, 6),
              O = pb.get(b, 10),
              H = pb.get(b, 14),
              kb = pb.get(b, 3),
              K = pb.get(b, 7),
              Wa = pb.get(b, 11);
            b = pb.get(b, 15);
            a[0] = c * z + k * J + q * y + l * C;
            a[1] = c * t + k * v + q * G + l * F;
            a[2] = c * I + k * eb + q * O + l * H;
            a[3] = c * kb + k * K + q * Wa + l * b;
            a[4] = d * z + n * J + m * y + D * C;
            a[5] = d * t + n * v + m * G + D * F;
            a[6] = d * I + n * eb + m * O + D * H;
            a[7] = d * kb + n * K + m * Wa + D * b;
            a[8] = f * z + p * J + u * y + x * C;
            a[9] = f * t + p * v + u * G + x * F;
            a[10] = f * I + p * eb + u * O + x * H;
            a[11] = f * kb + p * K + u * Wa + x * b;
            a[12] = h * z + g * J + r * y + w * C;
            a[13] = h * t + g * v + r * G + w * F;
            a[14] = h * I + g * eb + r * O + w * H;
            a[15] = h * kb + g * K + r * Wa + w * b;
          },
          createOrtho: function (a, b, c, d, f, h, k) {
            var n = 1 / (c - b),
              p = 1 / (f - d),
              g = 1 / (k - h);
            a[0] = 2 * n;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 2 * p;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = -2 * g;
            a[11] = 0;
            a[12] = -(b + c) * n;
            a[13] = -(d + f) * p;
            a[14] = -(h + k) * g;
            a[15] = 1;
          },
          identity: function (a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 1;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = 0;
            a[13] = 0;
            a[14] = 0;
            a[15] = 1;
          },
          get: function (a, b) {
            return a[b];
          },
          set: function (a, b, c) {
            return (a[b] = c);
          },
        },
        R = {},
        pk = function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.w = d;
          this.x = a;
          this.y = b;
          this.z = c;
        };
      g['lime.math.Vector4'] = pk;
      pk.__name__ = 'lime.math.Vector4';
      pk.prototype = { __class__: pk };
      var Bc = function () {};
      g['lime.media.AudioBuffer'] = Bc;
      Bc.__name__ = 'lime.media.AudioBuffer';
      Bc.fromBytes = function (a) {
        if (null == a) return null;
        var b = new Bc();
        b.set_src(
          new Howl({
            src: ['data:' + Bc.__getCodec(a) + ';base64,' + Be.encode(a)],
            html5: !0,
            preload: !1,
          }),
        );
        return b;
      };
      Bc.fromFile = function (a) {
        if (null == a) return null;
        var b = new Bc();
        b.__srcHowl = new Howl({ src: [a], preload: !1 });
        return b;
      };
      Bc.fromFiles = function (a) {
        var b = new Bc();
        b.__srcHowl = new Howl({ src: a, preload: !1 });
        return b;
      };
      Bc.loadFromFile = function (a) {
        var b = new Gd(),
          c = Bc.fromFile(a);
        null != c
          ? null != c &&
            (c.__srcHowl.on('load', function () {
              b.complete(c);
            }),
            c.__srcHowl.on('loaderror', function (a, c) {
              b.error(c);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      Bc.loadFromFiles = function (a) {
        var b = new Gd(),
          c = Bc.fromFiles(a);
        null != c
          ? (c.__srcHowl.on('load', function () {
              b.complete(c);
            }),
            c.__srcHowl.on('loaderror', function () {
              b.error(null);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      Bc.__getCodec = function (a) {
        switch (a.getString(0, 4)) {
          case 'OggS':
            return 'audio/ogg';
          case 'RIFF':
            if ('WAVE' == a.getString(8, 4)) return 'audio/wav';
            var b = a.b[1],
              c = a.b[2];
            switch (a.b[0]) {
              case 73:
                if (68 == b && 51 == c) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
            break;
          case 'fLaC':
            return 'audio/flac';
          default:
            switch (((b = a.b[1]), (c = a.b[2]), a.b[0])) {
              case 73:
                if (68 == b && 51 == c) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
        }
        Ga.error('Unsupported sound format', {
          fileName: 'lime/media/AudioBuffer.hx',
          lineNumber: 440,
          className: 'lime.media.AudioBuffer',
          methodName: '__getCodec',
        });
        return null;
      };
      Bc.prototype = {
        set_src: function (a) {
          return (this.__srcHowl = a);
        },
        __class__: Bc,
        __properties__: { set_src: 'set_src' },
      };
      var Dk = function (a) {
        if ('custom' != a) {
          if (null == a || 'web' == a)
            try {
              ((window.AudioContext =
                window.AudioContext || window.webkitAudioContext),
                (this.web = new window.AudioContext()),
                (this.type = 'web'));
            } catch (b) {
              Ta.lastError = b;
            }
          null == this.web &&
            'web' != a &&
            ((this.html5 = new Ck()), (this.type = 'html5'));
        } else this.type = 'custom';
      };
      g['lime.media.AudioContext'] = Dk;
      Dk.__name__ = 'lime.media.AudioContext';
      Dk.prototype = { __class__: Dk };
      var Ge = function () {};
      g['lime.media.AudioManager'] = Ge;
      Ge.__name__ = 'lime.media.AudioManager';
      Ge.init = function (a) {
        if (null == Ge.context) {
          if (
            null == a &&
            ((Ge.context = new Dk()), (a = Ge.context), 'openal' == a.type)
          ) {
            var b = a.openal,
              c = b.openDevice();
            c = b.createContext(c);
            b.makeContextCurrent(c);
            b.processContext(c);
          }
          Ge.context = a;
        }
      };
      var kl = function (a, b, c, d) {
        null == d && (d = 0);
        null == b && (b = 0);
        this.onComplete = new Ac();
        this.buffer = a;
        this.offset = b;
        this.__backend = new qk(this);
        null != c && 0 != c && this.set_length(c);
        this.set_loops(d);
        null != a && this.init();
      };
      g['lime.media.AudioSource'] = kl;
      kl.__name__ = 'lime.media.AudioSource';
      kl.prototype = {
        dispose: function () {
          this.__backend.dispose();
        },
        init: function () {
          this.__backend.init();
        },
        play: function () {
          this.__backend.play();
        },
        stop: function () {
          this.__backend.stop();
        },
        get_currentTime: function () {
          return this.__backend.getCurrentTime();
        },
        set_currentTime: function (a) {
          return this.__backend.setCurrentTime(a);
        },
        get_gain: function () {
          return this.__backend.getGain();
        },
        set_gain: function (a) {
          return this.__backend.setGain(a);
        },
        set_length: function (a) {
          return this.__backend.setLength(a);
        },
        set_loops: function (a) {
          return this.__backend.setLoops(a);
        },
        get_position: function () {
          return this.__backend.getPosition();
        },
        set_position: function (a) {
          return this.__backend.setPosition(a);
        },
        __class__: kl,
        __properties__: {
          set_loops: 'set_loops',
          set_length: 'set_length',
          set_position: 'set_position',
          get_position: 'get_position',
          set_gain: 'set_gain',
          get_gain: 'get_gain',
          set_currentTime: 'set_currentTime',
          get_currentTime: 'get_currentTime',
        },
      };
      var Ck = function () {};
      g['lime.media.HTML5AudioContext'] = Ck;
      Ck.__name__ = 'lime.media.HTML5AudioContext';
      Ck.prototype = { __class__: Ck };
      var ll = function () {};
      g['lime.media.OpenALAudioContext'] = ll;
      ll.__name__ = 'lime.media.OpenALAudioContext';
      ll.prototype = {
        createContext: function (a, b) {
          return sf.createContext(a, b);
        },
        makeContextCurrent: function (a) {
          return sf.makeContextCurrent(a);
        },
        openDevice: function (a) {
          return sf.openDevice(a);
        },
        processContext: function (a) {
          sf.processContext(a);
        },
        __class__: ll,
      };
      var sf = function () {};
      g['lime.media.openal.ALC'] = sf;
      sf.__name__ = 'lime.media.openal.ALC';
      sf.createContext = function (a, b) {
        return null;
      };
      sf.makeContextCurrent = function (a) {
        return !1;
      };
      sf.openDevice = function (a) {
        return null;
      };
      sf.processContext = function (a) {};
      var Ti = function () {};
      g['lime.net._IHTTPRequest'] = Ti;
      Ti.__name__ = 'lime.net._IHTTPRequest';
      Ti.__isInterface__ = !0;
      Ti.prototype = { __class__: Ti };
      var qe = function (a) {
        this.uri = a;
        this.contentType = 'application/x-www-form-urlencoded';
        this.followRedirects = !0;
        this.enableResponseHeaders = !1;
        this.formData = new Pa();
        this.headers = [];
        this.method = 'GET';
        this.timeout = 3e4;
        this.withCredentials = !1;
        this.manageCookies = !0;
        this.__backend = new Ba();
        this.__backend.init(this);
      };
      g['lime.net._HTTPRequest.AbstractHTTPRequest'] = qe;
      qe.__name__ = 'lime.net._HTTPRequest.AbstractHTTPRequest';
      qe.__interfaces__ = [Ti];
      qe.prototype = { __class__: qe };
      var tf = function (a) {
        qe.call(this, a);
      };
      g['lime.net._HTTPRequest_Bytes'] = tf;
      tf.__name__ = 'lime.net._HTTPRequest_Bytes';
      tf.__super__ = qe;
      tf.prototype = v(qe.prototype, {
        fromBytes: function (a) {
          return a;
        },
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new Gd();
          a = this.__backend.loadData(this.uri);
          a.onProgress(l(c, c.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            c.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = b.fromBytes(a);
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: tf,
      });
      var Fg = function (a) {
        qe.call(this, a);
      };
      g['lime.net._HTTPRequest_String'] = Fg;
      Fg.__name__ = 'lime.net._HTTPRequest_String';
      Fg.__super__ = qe;
      Fg.prototype = v(qe.prototype, {
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new Gd();
          a = this.__backend.loadText(this.uri);
          a.onProgress(l(c, c.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            c.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = a;
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: Fg,
      });
      var Cg = function (a, b) {
        this.error = a;
        this.responseData = b;
      };
      g['lime.net._HTTPRequestErrorResponse'] = Cg;
      Cg.__name__ = 'lime.net._HTTPRequestErrorResponse';
      Cg.prototype = { __class__: Cg };
      var Ni = function (a, b) {
        null == b && (b = '');
        this.name = a;
        this.value = b;
      };
      g['lime.net.HTTPRequestHeader'] = Ni;
      Ni.__name__ = 'lime.net.HTTPRequestHeader';
      Ni.prototype = { __class__: Ni };
      var Ui = function (a) {
        qe.call(this, a);
      };
      g['lime.net._HTTPRequest_lime_utils_Bytes'] = Ui;
      Ui.__name__ = 'lime.net._HTTPRequest_lime_utils_Bytes';
      Ui.__super__ = tf;
      Ui.prototype = v(tf.prototype, {
        fromBytes: function (a) {
          return Sf.fromBytes(a);
        },
        __class__: Ui,
      });
      var Vi = function (a) {
        qe.call(this, a);
      };
      g['lime.net._HTTPRequest_openfl_utils_ByteArray'] = Vi;
      Vi.__name__ = 'lime.net._HTTPRequest_openfl_utils_ByteArray';
      Vi.__super__ = tf;
      Vi.prototype = v(tf.prototype, {
        fromBytes: function (a) {
          return Td.fromBytes(a);
        },
        __class__: Vi,
      });
      var zc = function () {};
      g['lime.system.Clipboard'] = zc;
      zc.__name__ = 'lime.system.Clipboard';
      zc.__properties__ = { set_text: 'set_text', get_text: 'get_text' };
      zc.__update = function () {
        var a = zc._text;
        zc._text = a;
        zc.__updated = !0;
        zc._text != a && zc.onUpdate.dispatch();
      };
      zc.get_text = function () {
        zc.__update();
        return zc._text;
      };
      zc.set_text = function (a) {
        var b = zc._text;
        zc._text = a;
        var c = A.current.__window;
        null != c && c.__backend.setClipboard(a);
        zc._text != b && zc.onUpdate.dispatch();
        return a;
      };
      var Wi = (y['lime.system.Endian'] = {
        __ename__: 'lime.system.Endian',
        __constructs__: null,
        LITTLE_ENDIAN: {
          _hx_name: 'LITTLE_ENDIAN',
          _hx_index: 0,
          __enum__: 'lime.system.Endian',
          toString: r,
        },
        BIG_ENDIAN: {
          _hx_name: 'BIG_ENDIAN',
          _hx_index: 1,
          __enum__: 'lime.system.Endian',
          toString: r,
        },
      });
      Wi.__constructs__ = [Wi.LITTLE_ENDIAN, Wi.BIG_ENDIAN];
      var He = function (a, b) {
        this.onUpdate = new sk();
        this.type = a;
        this.id = b;
      };
      g['lime.system.Sensor'] = He;
      He.__name__ = 'lime.system.Sensor';
      He.registerSensor = function (a, b) {
        a = new He(a, b);
        He.sensors.push(a);
        return (He.sensorByID.h[b] = a);
      };
      He.prototype = { __class__: He };
      var tl = (y['lime.system.SensorType'] = {
        __ename__: 'lime.system.SensorType',
        __constructs__: null,
        ACCELEROMETER: {
          _hx_name: 'ACCELEROMETER',
          _hx_index: 0,
          __enum__: 'lime.system.SensorType',
          toString: r,
        },
      });
      tl.__constructs__ = [tl.ACCELEROMETER];
      var Cc = function () {};
      g['lime.system.System'] = Cc;
      Cc.__name__ = 'lime.system.System';
      Cc.__properties__ = { get_endianness: 'get_endianness' };
      Cc.embed = t.lime.embed = function (a, b, c, d, f) {
        if (
          null != Cc.__applicationEntryPoint &&
          Object.prototype.hasOwnProperty.call(Cc.__applicationEntryPoint.h, a)
        ) {
          var h =
            'string' == typeof b
              ? window.document.getElementById(b)
              : null == b
                ? window.document.createElement('div')
                : b;
          null == h
            ? window.console.log(
                '[lime.embed] ERROR: Cannot find target element: ' +
                  H.string(b),
              )
            : (null == c && (c = 0),
              null == d && (d = 0),
              null == f && (f = {}),
              Object.prototype.hasOwnProperty.call(f, 'background') &&
                'string' == typeof f.background &&
                ((b = O.replace(H.string(f.background), '#', '')),
                -1 < b.indexOf('0x')
                  ? (f.background = H.parseInt(b))
                  : (f.background = H.parseInt('0x' + b))),
              (f.element = h),
              (f.width = c),
              (f.height = d),
              Cc.__applicationEntryPoint.h[a](f));
        }
      };
      Cc.exit = function (a) {
        var b = A.current;
        if (null != b && (b.onExit.dispatch(a), b.onExit.canceled)) return;
        null != b && null != b.__window && b.__window.close();
      };
      Cc.getTimer = function () {
        return window.performance.now() | 0;
      };
      Cc.openURL = function (a, b) {
        null == b && (b = '_blank');
        null != a && window.open(a, b);
      };
      Cc.__registerEntryPoint = function (a, b) {
        null == Cc.__applicationEntryPoint &&
          (Cc.__applicationEntryPoint = new Pa());
        Cc.__applicationEntryPoint.h[a] = b;
      };
      Cc.get_endianness = function () {
        if (null == Cc.__endianness) {
          var a = new ArrayBuffer(2),
            b = null,
            c = null,
            d = null,
            f = null,
            h = null,
            k = (b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != a
                        ? null == h
                          ? new Uint8Array(a, 0)
                          : new Uint8Array(a, 0, h)
                        : null);
          h = f = d = c = b = null;
          b =
            null != b
              ? new Uint16Array(b)
              : null != c
                ? new Uint16Array(c)
                : null != d
                  ? new Uint16Array(d.__array)
                  : null != f
                    ? new Uint16Array(f)
                    : null != a
                      ? null == h
                        ? new Uint16Array(a, 0)
                        : new Uint16Array(a, 0, h)
                      : null;
          k[0] = 170;
          k[1] = 187;
          Cc.__endianness = 43707 == b[0] ? Wi.BIG_ENDIAN : Wi.LITTLE_ENDIAN;
        }
        return Cc.__endianness;
      };
      var qc = function (a) {
        this.onDisconnect = new Ac();
        this.onButtonUp = new Ri();
        this.onButtonDown = new Ri();
        this.onAxisMove = new zk();
        this.id = a;
        this.connected = !0;
      };
      g['lime.ui.Gamepad'] = qc;
      qc.__name__ = 'lime.ui.Gamepad';
      qc.__connect = function (a) {
        if (!qc.devices.h.hasOwnProperty(a)) {
          var b = new qc(a);
          qc.devices.h[a] = b;
          qc.onConnect.dispatch(b);
        }
      };
      qc.__disconnect = function (a) {
        var b = qc.devices.h[a];
        null != b && (b.connected = !1);
        qc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      qc.prototype = { __class__: qc };
      var nc = function (a) {
        this.onHatMove = new xk();
        this.onDisconnect = new Ac();
        this.onButtonUp = new zf();
        this.onButtonDown = new zf();
        this.onAxisMove = new wk();
        this.id = a;
        this.connected = !0;
      };
      g['lime.ui.Joystick'] = nc;
      nc.__name__ = 'lime.ui.Joystick';
      nc.__connect = function (a) {
        if (!nc.devices.h.hasOwnProperty(a)) {
          var b = new nc(a);
          nc.devices.h[a] = b;
          nc.onConnect.dispatch(b);
        }
      };
      nc.__disconnect = function (a) {
        var b = nc.devices.h[a];
        null != b && (b.connected = !1);
        nc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      nc.__getDeviceData = function () {
        var a = null;
        try {
          a = navigator.getGamepads
            ? navigator.getGamepads()
            : navigator.webkitGetGamepads
              ? navigator.webkitGetGamepads()
              : null;
        } catch (b) {
          Ta.lastError = b;
        }
        return a;
      };
      nc.prototype = { __class__: nc };
      var Ya = {
          __properties__: {
            get_shiftKey: 'get_shiftKey',
            get_metaKey: 'get_metaKey',
            get_ctrlKey: 'get_ctrlKey',
            get_altKey: 'get_altKey',
          },
          get_altKey: function (a) {
            return 0 >= (a & 256) ? 0 < (a & 512) : !0;
          },
          get_ctrlKey: function (a) {
            return 0 >= (a & 64) ? 0 < (a & 128) : !0;
          },
          get_metaKey: function (a) {
            return 0 >= (a & 1024) ? 0 < (a & 2048) : !0;
          },
          get_shiftKey: function (a) {
            return 0 >= (a & 1) ? 0 < (a & 2) : !0;
          },
        },
        cc = (y['lime.ui.MouseCursor'] = {
          __ename__: 'lime.ui.MouseCursor',
          __constructs__: null,
          ARROW: {
            _hx_name: 'ARROW',
            _hx_index: 0,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          CROSSHAIR: {
            _hx_name: 'CROSSHAIR',
            _hx_index: 1,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          DEFAULT: {
            _hx_name: 'DEFAULT',
            _hx_index: 2,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          MOVE: {
            _hx_name: 'MOVE',
            _hx_index: 3,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          POINTER: {
            _hx_name: 'POINTER',
            _hx_index: 4,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_NESW: {
            _hx_name: 'RESIZE_NESW',
            _hx_index: 5,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_NS: {
            _hx_name: 'RESIZE_NS',
            _hx_index: 6,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_NWSE: {
            _hx_name: 'RESIZE_NWSE',
            _hx_index: 7,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_WE: {
            _hx_name: 'RESIZE_WE',
            _hx_index: 8,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          TEXT: {
            _hx_name: 'TEXT',
            _hx_index: 9,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          WAIT: {
            _hx_name: 'WAIT',
            _hx_index: 10,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          WAIT_ARROW: {
            _hx_name: 'WAIT_ARROW',
            _hx_index: 11,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          CUSTOM: {
            _hx_name: 'CUSTOM',
            _hx_index: 12,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
        });
      cc.__constructs__ = [
        cc.ARROW,
        cc.CROSSHAIR,
        cc.DEFAULT,
        cc.MOVE,
        cc.POINTER,
        cc.RESIZE_NESW,
        cc.RESIZE_NS,
        cc.RESIZE_NWSE,
        cc.RESIZE_WE,
        cc.TEXT,
        cc.WAIT,
        cc.WAIT_ARROW,
        cc.CUSTOM,
      ];
      var rf = (y['lime.ui.MouseWheelMode'] = {
        __ename__: 'lime.ui.MouseWheelMode',
        __constructs__: null,
        PIXELS: {
          _hx_name: 'PIXELS',
          _hx_index: 0,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
        LINES: {
          _hx_name: 'LINES',
          _hx_index: 1,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
        PAGES: {
          _hx_name: 'PAGES',
          _hx_index: 2,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 3,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
      });
      rf.__constructs__ = [rf.PIXELS, rf.LINES, rf.PAGES, rf.UNKNOWN];
      var dc = function (a, b, c, d, f, h, k) {
        this.x = a;
        this.y = b;
        this.id = c;
        this.dx = d;
        this.dy = f;
        this.pressure = h;
        this.device = k;
      };
      g['lime.ui.Touch'] = dc;
      dc.__name__ = 'lime.ui.Touch';
      dc.prototype = { __class__: dc };
      var Gg = function (a, b) {
        this.clickCount = 0;
        this.onTextInput = new Pi();
        this.onTextEdit = new yk();
        this.onRestore = new Ac();
        this.onResize = new Oi();
        this.onRenderContextRestored = new Qi();
        this.onRenderContextLost = new Ac();
        this.onRender = new Qi();
        this.onMove = new th();
        this.onMouseWheel = new vk();
        this.onMouseUp = new tk();
        this.onMouseMoveRelative = new th();
        this.onMouseMove = new th();
        this.onMouseDown = new uk();
        this.onMinimize = new Ac();
        this.onLeave = new Ac();
        this.onKeyUp = new Si();
        this.onKeyDown = new Si();
        this.onFullscreen = new Ac();
        this.onFocusOut = new Ac();
        this.onFocusIn = new Ac();
        this.onExpose = new Ac();
        this.onEnter = new Ac();
        this.onDropFile = new Pi();
        this.onDeactivate = new Ac();
        this.onClose = new Ac();
        this.onActivate = new Ac();
        this.application = a;
        this.__attributes = null != b ? b : {};
        Object.prototype.hasOwnProperty.call(this.__attributes, 'parameters') &&
          (this.parameters = this.__attributes.parameters);
        this.__height = this.__width = 0;
        this.__fullscreen = !1;
        this.__scale = 1;
        this.__y = this.__x = 0;
        this.__title = Object.prototype.hasOwnProperty.call(
          this.__attributes,
          'title',
        )
          ? this.__attributes.title
          : '';
        this.id = -1;
        this.__backend = new Ha(this);
      };
      g['lime.ui.Window'] = Gg;
      Gg.__name__ = 'lime.ui.Window';
      Gg.prototype = {
        close: function () {
          this.__backend.close();
        },
        set_cursor: function (a) {
          return this.__backend.setCursor(a);
        },
        setTextInputRect: function (a) {
          return this.__backend.setTextInputRect(a);
        },
        __class__: Gg,
        __properties__: { set_cursor: 'set_cursor' },
      };
      var re = function () {
        this.data = new Pa();
        this.paths = [];
      };
      g['lime.utils.AssetBundle'] = re;
      re.__name__ = 'lime.utils.AssetBundle';
      re.fromBytes = function (a) {
        a = new Mi(a);
        return re.__extractBundle(a);
      };
      re.loadFromBytes = function (a) {
        return hc.withValue(re.fromBytes(a));
      };
      re.loadFromFile = function (a) {
        return Sf.loadFromFile(a).then(re.loadFromBytes);
      };
      re.__extractBundle = function (a) {
        var b = sh.readZip(a);
        a = new re();
        for (b = b.h; null != b; ) {
          var c = b.item;
          b = b.next;
          if (c.compressed) {
            var d = a.data,
              f = c.fileName,
              h = Sf.decompress(c.data, Xi.DEFLATE);
            d.h[f] = h;
          } else a.data.h[c.fileName] = c.data;
          a.paths.push(c.fileName);
        }
        return a;
      };
      re.prototype = { __class__: re };
      var Ek = function () {
        this.enabled = !0;
        this.audio = new Pa();
        this.font = new Pa();
        this.image = new Pa();
        this.version = 29434;
      };
      g['lime.utils.AssetCache'] = Ek;
      Ek.__name__ = 'lime.utils.AssetCache';
      Ek.prototype = {
        exists: function (a, b) {
          return (('IMAGE' == b || null == b) &&
            Object.prototype.hasOwnProperty.call(this.image.h, a)) ||
            (('FONT' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.font.h, a)) ||
            (('SOUND' == b || 'MUSIC' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.audio.h, a))
            ? !0
            : !1;
        },
        set: function (a, b, c) {
          switch (b) {
            case 'FONT':
              this.font.h[a] = c;
              break;
            case 'IMAGE':
              if (!(c instanceof Xb))
                throw X.thrown(
                  'Cannot cache non-Image asset: ' + H.string(c) + ' as Image',
                );
              this.image.h[a] = c;
              break;
            case 'MUSIC':
            case 'SOUND':
              if (!(c instanceof Bc))
                throw X.thrown(
                  'Cannot cache non-AudioBuffer asset: ' +
                    H.string(c) +
                    ' as AudioBuffer',
                );
              this.audio.h[a] = c;
              break;
            default:
              throw X.thrown(b + ' assets are not cachable');
          }
        },
        clear: function (a) {
          if (null == a)
            ((this.audio = new Pa()),
              (this.font = new Pa()),
              (this.image = new Pa()));
          else {
            var b = this.audio.h;
            b = Object.keys(b);
            for (var c = b.length, d = 0; d < c; ) {
              var f = b[d++];
              if (O.startsWith(f, a)) {
                var h = this.audio;
                Object.prototype.hasOwnProperty.call(h.h, f) && delete h.h[f];
              }
            }
            b = this.font.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c; )
              ((f = b[d++]),
                O.startsWith(f, a) &&
                  ((h = this.font),
                  Object.prototype.hasOwnProperty.call(h.h, f) &&
                    delete h.h[f]));
            b = this.image.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c; )
              ((f = b[d++]),
                O.startsWith(f, a) &&
                  ((h = this.image),
                  Object.prototype.hasOwnProperty.call(h.h, f) &&
                    delete h.h[f]));
          }
        },
        __class__: Ek,
      };
      var Wb = function () {
        this.types = new Pa();
        this.sizes = new Pa();
        this.preload = new Pa();
        this.paths = new Pa();
        this.pathGroups = new Pa();
        this.classTypes = new Pa();
        this.cachedText = new Pa();
        this.cachedImages = new Pa();
        this.cachedFonts = new Pa();
        this.cachedBytes = new Pa();
        this.cachedAudioBuffers = new Pa();
        this.onChange = new Ac();
        this.bytesTotal = this.bytesLoaded = 0;
      };
      g['lime.utils.AssetLibrary'] = Wb;
      Wb.__name__ = 'lime.utils.AssetLibrary';
      Wb.fromBundle = function (a) {
        if (Object.prototype.hasOwnProperty.call(a.data.h, 'library.json')) {
          var b = td.fromBytes(a.data.h['library.json']);
          if (null != b) {
            if (null == b.libraryType) var c = new Wb();
            else if (((c = g[b.libraryType]), null != c))
              c = w.createInstance(c, b.libraryArgs);
            else
              return (
                Ga.warn('Could not find library type: ' + b.libraryType, {
                  fileName: 'lime/utils/AssetLibrary.hx',
                  lineNumber: 122,
                  className: 'lime.utils.AssetLibrary',
                  methodName: 'fromBundle',
                }),
                null
              );
            c.__fromBundle(a, b);
            return c;
          }
        } else return ((c = new Wb()), c.__fromBundle(a), c);
        return null;
      };
      Wb.fromManifest = function (a) {
        if (null == a) return null;
        if (null == a.libraryType) var b = new Wb();
        else if (((b = g[a.libraryType]), null != b))
          b = w.createInstance(b, a.libraryArgs);
        else
          return (
            Ga.warn('Could not find library type: ' + a.libraryType, {
              fileName: 'lime/utils/AssetLibrary.hx',
              lineNumber: 160,
              className: 'lime.utils.AssetLibrary',
              methodName: 'fromManifest',
            }),
            null
          );
        b.__fromManifest(a);
        return b;
      };
      Wb.prototype = {
        exists: function (a, b) {
          b = null != b ? va.__cast(b, String) : null;
          a = this.types.h[a];
          return null == a ||
            (a != b &&
              (('SOUND' != b && 'MUSIC' != b) ||
                ('MUSIC' != a && 'SOUND' != a)) &&
              'BINARY' != b &&
              null != b &&
              ('BINARY' != a || 'TEXT' != b))
            ? !1
            : !0;
        },
        getAsset: function (a, b) {
          switch (b) {
            case 'BINARY':
              return this.getBytes(a);
            case 'FONT':
              return this.getFont(a);
            case 'IMAGE':
              return this.getImage(a);
            case 'MUSIC':
            case 'SOUND':
              return this.getAudioBuffer(a);
            case 'TEMPLATE':
              throw X.thrown('Not sure how to get template: ' + a);
            case 'TEXT':
              return this.getText(a);
            default:
              throw X.thrown('Unknown asset type: ' + b);
          }
        },
        getAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? this.cachedAudioBuffers.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? Bc.fromBytes(
                  va.__cast(w.createInstance(this.classTypes.h[a], []), zb),
                )
              : Bc.fromFile(this.getPath(a));
        },
        getBytes: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
            return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = Sf.ofString(this.cachedText.h[a]);
            return (this.cachedBytes.h[a] = b);
          }
          return Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? va.__cast(w.createInstance(this.classTypes.h[a], []), zb)
            : Sf.fromFile(this.getPath(a));
        },
        getFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? this.cachedFonts.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? va.__cast(w.createInstance(this.classTypes.h[a], []), hb)
              : hb.fromFile(this.getPath(a));
        },
        getImage: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? this.cachedImages.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? va.__cast(w.createInstance(this.classTypes.h[a], []), Xb)
              : Xb.fromFile(this.getPath(a));
        },
        getPath: function (a) {
          return Object.prototype.hasOwnProperty.call(this.paths.h, a)
            ? this.paths.h[a]
            : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
              ? this.pathGroups.h[a][0]
              : null;
        },
        getText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return this.cachedText.h[a];
          a = this.getBytes(a);
          return null == a ? null : a.getString(0, a.length);
        },
        isLocal: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a))
            return !0;
          b = va.__cast(b, String);
          if (null == b)
            return Object.prototype.hasOwnProperty.call(
              this.cachedBytes.h,
              a,
            ) ||
              Object.prototype.hasOwnProperty.call(this.cachedText.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a)
              ? !0
              : Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
          switch (b) {
            case 'FONT':
              return Object.prototype.hasOwnProperty.call(
                this.cachedFonts.h,
                a,
              );
            case 'IMAGE':
              return Object.prototype.hasOwnProperty.call(
                this.cachedImages.h,
                a,
              );
            case 'MUSIC':
            case 'SOUND':
              return Object.prototype.hasOwnProperty.call(
                this.cachedAudioBuffers.h,
                a,
              );
            default:
              return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? !0
                : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
          }
        },
        load: function () {
          if (this.loaded) return hc.withValue(this);
          if (null == this.promise) {
            this.promise = new Gd();
            this.bytesLoadedCache = new Pa();
            this.assetsLoaded = 0;
            this.assetsTotal = 1;
            for (
              var a = Object.keys(this.preload.h), b = a.length, c = 0;
              c < b;

            ) {
              var d = a[c++];
              if (this.preload.h[d]) {
                Ga.verbose(
                  'Preloading asset: ' + d + ' [' + this.types.h[d] + ']',
                  {
                    fileName: 'lime/utils/AssetLibrary.hx',
                    lineNumber: 408,
                    className: 'lime.utils.AssetLibrary',
                    methodName: 'load',
                  },
                );
                var f = this.types.h[d];
                if (null != f)
                  switch (f) {
                    case 'BINARY':
                      this.assetsTotal++;
                      f = this.loadBytes(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadBytes_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'FONT':
                      this.assetsTotal++;
                      f = this.loadFont(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadFont_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'IMAGE':
                      this.assetsTotal++;
                      f = this.loadImage(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadImage_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'MUSIC':
                    case 'SOUND':
                      this.assetsTotal++;
                      f = this.loadAudioBuffer(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadAudioBuffer_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadAudioBuffer_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'TEXT':
                      (this.assetsTotal++,
                        (f = this.loadText(d)),
                        f.onProgress(
                          (function (a, b) {
                            return function (c, d) {
                              b[0].load_onProgress(a[0], c, d);
                            };
                          })([d], [this]),
                        ),
                        f.onError(
                          (function (a, b) {
                            return function (c) {
                              b[0].load_onError(a[0], c);
                            };
                          })([d], [this]),
                        ),
                        f.onComplete(
                          (function (a, b) {
                            return function (c) {
                              b[0].loadText_onComplete(a[0], c);
                            };
                          })([d], [this]),
                        ));
                  }
              }
            }
            this.__assetLoaded(null);
          }
          return this.promise.future;
        },
        loadAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? hc.withValue(this.cachedAudioBuffers.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? hc.withValue(
                  Bc.fromBytes(
                    va.__cast(w.createInstance(this.classTypes.h[a], []), zb),
                  ),
                )
              : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
                ? Bc.loadFromFiles(this.pathGroups.h[a])
                : Bc.loadFromFile(this.paths.h[a]);
        },
        loadBytes: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
            ? hc.withValue(this.cachedBytes.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? hc.withValue(w.createInstance(this.classTypes.h[a], []))
              : Sf.loadFromFile(this.getPath(a));
        },
        loadFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? hc.withValue(this.cachedFonts.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? ((a = w.createInstance(this.classTypes.h[a], [])),
                a.__loadFromName(a.name))
              : hb.loadFromName(this.getPath(a));
        },
        loadImage: function (a) {
          var b = this;
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? hc.withValue(this.cachedImages.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? hc.withValue(w.createInstance(this.classTypes.h[a], []))
              : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? Xb.loadFromBytes(this.cachedBytes.h[a]).then(function (c) {
                    var d = b.cachedBytes;
                    Object.prototype.hasOwnProperty.call(d.h, a) &&
                      delete d.h[a];
                    b.cachedImages.h[a] = c;
                    return hc.withValue(c);
                  })
                : Xb.loadFromFile(this.getPath(a));
        },
        loadText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return hc.withValue(this.cachedText.h[a]);
          if (
            Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ||
            Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
          ) {
            var b = this.getBytes(a);
            if (null == b) return hc.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return hc.withValue(b);
          }
          return new Fg().load(this.getPath(a));
        },
        unload: function () {
          this.cachedBytes.h = Object.create(null);
          this.cachedFonts.h = Object.create(null);
          this.cachedImages.h = Object.create(null);
          this.cachedAudioBuffers.h = Object.create(null);
          this.cachedText.h = Object.create(null);
        },
        __assetLoaded: function (a) {
          this.assetsLoaded++;
          null != a &&
            Ga.verbose(
              'Loaded asset: ' +
                a +
                ' [' +
                this.types.h[a] +
                '] (' +
                (this.assetsLoaded - 1) +
                '/' +
                (this.assetsTotal - 1) +
                ')',
              {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 637,
                className: 'lime.utils.AssetLibrary',
                methodName: '__assetLoaded',
              },
            );
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a)
              ? this.sizes.h[a]
              : 0;
            if (
              Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
            ) {
              var c = this.bytesLoadedCache.h[a];
              c < b && (this.bytesLoaded += b - c);
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b;
          }
          this.assetsLoaded < this.assetsTotal
            ? this.promise.progress(this.bytesLoaded, this.bytesTotal)
            : ((this.loaded = !0),
              this.promise.progress(this.bytesTotal, this.bytesTotal),
              this.promise.complete(this));
        },
        __cacheBreak: function (a) {
          return Fa.__cacheBreak(a);
        },
        __fromBundle: function (a, b) {
          if (null != b) {
            var c = 0;
            for (b = b.assets; c < b.length; ) {
              var d = b[c];
              ++c;
              var f = Object.prototype.hasOwnProperty.call(d, 'id')
                ? d.id
                : d.path;
              var h = a.data.h[d.path];
              if (Object.prototype.hasOwnProperty.call(d, 'type')) {
                var k = d.type;
                'TEXT' == k
                  ? (this.cachedText.h[f] = null != h ? H.string(h) : null)
                  : (this.cachedBytes.h[f] = h);
                this.types.h[f] = d.type;
              } else
                ((this.cachedBytes.h[f] = h), (this.types.h[f] = 'BINARY'));
            }
          } else
            for (c = 0, b = a.paths; c < b.length; )
              ((f = b[c]),
                ++c,
                (this.cachedBytes.h[f] = a.data.h[f]),
                (this.types.h[f] = 'BINARY'));
        },
        __fromManifest: function (a) {
          var b = 2 <= a.version,
            c = a.rootPath;
          null == c && (c = '');
          '' != c && (c += '/');
          for (var d = 0, f = a.assets; d < f.length; ) {
            var h = f[d];
            ++d;
            var k =
              b && Object.prototype.hasOwnProperty.call(h, 'size')
                ? h.size
                : 100;
            var n = Object.prototype.hasOwnProperty.call(h, 'id')
              ? h.id
              : h.path;
            if (Object.prototype.hasOwnProperty.call(h, 'path')) {
              var p = this.paths;
              var q = this.__cacheBreak(
                this.__resolvePath(c + H.string(ya.field(h, 'path'))),
              );
              p.h[n] = q;
            }
            if (Object.prototype.hasOwnProperty.call(h, 'pathGroup')) {
              p = ya.field(h, 'pathGroup');
              q = 0;
              for (var u = p.length; q < u; ) {
                var m = q++;
                p[m] = this.__cacheBreak(this.__resolvePath(c + p[m]));
              }
              this.pathGroups.h[n] = p;
            }
            this.sizes.h[n] = k;
            this.types.h[n] = h.type;
            Object.prototype.hasOwnProperty.call(h, 'preload') &&
              (this.preload.h[n] = ya.field(h, 'preload'));
            Object.prototype.hasOwnProperty.call(h, 'className') &&
              ((k = ya.field(h, 'className')),
              (k = g[k]),
              (this.classTypes.h[n] = k));
          }
          d = this.bytesTotal = 0;
          for (f = a.assets; d < f.length; )
            ((h = f[d]),
              ++d,
              (n = Object.prototype.hasOwnProperty.call(h, 'id')
                ? h.id
                : h.path),
              Object.prototype.hasOwnProperty.call(this.preload.h, n) &&
                this.preload.h[n] &&
                Object.prototype.hasOwnProperty.call(this.sizes.h, n) &&
                (this.bytesTotal += this.sizes.h[n]));
        },
        __resolvePath: function (a) {
          a = O.replace(a, '\\', '/');
          var b = a.indexOf(':');
          O.startsWith(a, 'http') && 0 < b
            ? ((b += 3),
              (a =
                N.substr(a, 0, b) + O.replace(N.substr(a, b, null), '//', '/')))
            : (a = O.replace(a, '//', '/'));
          if (-1 < a.indexOf('./')) {
            a = a.split('/');
            b = [];
            for (var c = 0, d = a.length; c < d; ) {
              var f = c++;
              '..' == a[f]
                ? 0 == f || '..' == b[f - 1]
                  ? b.push('..')
                  : b.pop()
                : '.' == a[f]
                  ? 0 == f && b.push('.')
                  : b.push(a[f]);
            }
            a = b.join('/');
          }
          return a;
        },
        loadAudioBuffer_onComplete: function (a, b) {
          this.cachedAudioBuffers.h[a] = b;
          if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
            for (
              var c = this.pathGroups.h[a],
                d = Object.keys(this.pathGroups.h),
                f = d.length,
                h = 0;
              h < f;

            ) {
              var k = d[h++];
              if (k != a)
                for (var n = 0; n < c.length; ) {
                  var p = c[n];
                  ++n;
                  if (-1 < this.pathGroups.h[k].indexOf(p)) {
                    this.cachedAudioBuffers.h[k] = b;
                    break;
                  }
                }
            }
          this.__assetLoaded(a);
        },
        loadAudioBuffer_onError: function (a, b) {
          null != b && '' != b
            ? Ga.warn('Could not load "' + a + '": ' + H.string(b), {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 883,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              })
            : Ga.warn('Could not load "' + a + '"', {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 887,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              });
          this.loadAudioBuffer_onComplete(a, new Bc());
        },
        loadBytes_onComplete: function (a, b) {
          this.cachedBytes.h[a] = b;
          this.__assetLoaded(a);
        },
        loadFont_onComplete: function (a, b) {
          this.cachedFonts.h[a] = b;
          this.__assetLoaded(a);
        },
        loadImage_onComplete: function (a, b) {
          this.cachedImages.h[a] = b;
          this.__assetLoaded(a);
        },
        loadText_onComplete: function (a, b) {
          this.cachedText.h[a] = b;
          this.__assetLoaded(a);
        },
        load_onError: function (a, b) {
          null != b && '' != b
            ? this.promise.error(
                'Error loading asset "' + a + '": ' + H.string(b),
              )
            : this.promise.error('Error loading asset "' + a + '"');
        },
        load_onProgress: function (a, b, c) {
          if (0 < b) {
            var d = this.sizes.h[a];
            0 < c
              ? ((b /= c), 1 < b && (b = 1), (b = Math.floor(b * d)))
              : b > d && (b = d);
            Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
              ? ((d = this.bytesLoadedCache.h[a]),
                b != d && (this.bytesLoaded += b - d))
              : (this.bytesLoaded += b);
            this.bytesLoadedCache.h[a] = b;
            this.promise.progress(this.bytesLoaded, this.bytesTotal);
          }
        },
        __class__: Wb,
      };
      var td = function () {
        this.assets = [];
        this.libraryArgs = [];
        this.version = 2;
      };
      g['lime.utils.AssetManifest'] = td;
      td.__name__ = 'lime.utils.AssetManifest';
      td.fromBytes = function (a, b) {
        return null != a ? td.parse(a.getString(0, a.length), b) : null;
      };
      td.loadFromFile = function (a, b) {
        a = td.__resolvePath(a);
        b = td.__resolveRootPath(b, a);
        return null == a
          ? null
          : Sf.loadFromFile(a).then(function (a) {
              return hc.withValue(td.fromBytes(a, b));
            });
      };
      td.parse = function (a, b) {
        if (null == a || '' == a) return null;
        a = JSON.parse(a);
        var c = new td();
        Object.prototype.hasOwnProperty.call(a, 'name') && (c.name = a.name);
        Object.prototype.hasOwnProperty.call(a, 'libraryType') &&
          (c.libraryType = a.libraryType);
        Object.prototype.hasOwnProperty.call(a, 'libraryArgs') &&
          (c.libraryArgs = a.libraryArgs);
        if (Object.prototype.hasOwnProperty.call(a, 'assets')) {
          var d = a.assets;
          Object.prototype.hasOwnProperty.call(a, 'version') && 2 >= a.version
            ? (c.assets = pd.run(d))
            : (c.assets = d);
        }
        Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          (c.rootPath = a.rootPath);
        null != b &&
          '' != b &&
          (c.rootPath =
            null == c.rootPath || '' == c.rootPath ? b : b + '/' + c.rootPath);
        return c;
      };
      td.__resolvePath = function (a) {
        if (null == a) return null;
        var b = a.indexOf('?');
        var c = -1 < b ? N.substr(a, 0, b) : a;
        for (c = O.replace(c, '\\', '/'); O.endsWith(c, '/'); )
          c = N.substr(c, 0, c.length - 1);
        return O.endsWith(c, '.bundle')
          ? -1 < b
            ? c + '/library.json' + N.substr(a, b, null)
            : c + '/library.json'
          : a;
      };
      td.__resolveRootPath = function (a, b) {
        if (null != a) return a;
        a = b.indexOf('?');
        a = -1 < a ? N.substr(b, 0, a) : b;
        for (a = O.replace(a, '\\', '/'); O.endsWith(a, '/'); ) {
          if ('/' == a) return a;
          a = N.substr(a, 0, a.length - 1);
        }
        return O.endsWith(a, '.bundle') ? a : Ud.directory(a);
      };
      td.prototype = { __class__: td };
      var Fa = function () {};
      g['lime.utils.Assets'] = Fa;
      Fa.__name__ = 'lime.utils.Assets';
      Fa.exists = function (a, b) {
        null == b && (b = 'BINARY');
        var c = a.indexOf(':'),
          d = a.substring(0, c);
        a = a.substring(c + 1);
        d = Fa.getLibrary(d);
        return null != d ? d.exists(a, b) : !1;
      };
      Fa.getAsset = function (a, b, c) {
        if (c && Fa.cache.enabled)
          switch (b) {
            case 'FONT':
              var d = Fa.cache.font.h[a];
              if (null != d) return d;
              break;
            case 'IMAGE':
              d = Fa.cache.image.h[a];
              if (Fa.isValidImage(d)) return d;
              break;
            case 'MUSIC':
            case 'SOUND':
              d = Fa.cache.audio.h[a];
              if (Fa.isValidAudio(d)) return d;
              break;
            case 'TEMPLATE':
              throw X.thrown('Not sure how to get template: ' + a);
            case 'BINARY':
            case 'TEXT':
              c = !1;
              break;
            default:
              return null;
          }
        var f = a.indexOf(':');
        d = a.substring(0, f);
        f = a.substring(f + 1);
        var h = Fa.getLibrary(d);
        if (null != h)
          if (h.exists(f, b)) {
            if (h.isLocal(f, b))
              return (
                (d = h.getAsset(f, b)),
                c && Fa.cache.enabled && Fa.cache.set(a, b, d),
                d
              );
            Ga.error(b + ' asset "' + a + '" exists, but only asynchronously', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 133,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
          } else
            Ga.error('There is no ' + b + ' asset with an ID of "' + a + '"', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 138,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
        else
          Ga.error(Fa.__libraryNotFound(d), {
            fileName: 'lime/utils/Assets.hx',
            lineNumber: 143,
            className: 'lime.utils.Assets',
            methodName: 'getAsset',
          });
        return null;
      };
      Fa.getBytes = function (a) {
        return Fa.getAsset(a, 'BINARY', !1);
      };
      Fa.getFont = function (a, b) {
        null == b && (b = !0);
        return Fa.getAsset(a, 'FONT', b);
      };
      Fa.getLibrary = function (a) {
        if (null == a || '' == a) a = 'default';
        return Fa.libraries.h[a];
      };
      Fa.getText = function (a) {
        return Fa.getAsset(a, 'TEXT', !1);
      };
      Fa.isLocal = function (a, b, c) {
        null == c && (c = !0);
        if (c && Fa.cache.enabled && Fa.cache.exists(a, b)) return !0;
        var d = a.indexOf(':');
        c = a.substring(0, d);
        a = a.substring(d + 1);
        c = Fa.getLibrary(c);
        return null != c ? c.isLocal(a, b) : !1;
      };
      Fa.isValidAudio = function (a) {
        return null != a;
      };
      Fa.isValidImage = function (a) {
        return null != a ? null != a.buffer : !1;
      };
      Fa.loadLibrary = function (a) {
        var b = new Gd(),
          c = Fa.getLibrary(a);
        if (null != c) return c.load();
        c = a;
        var d = null;
        if (Object.prototype.hasOwnProperty.call(Fa.bundlePaths.h, a))
          re.loadFromFile(Fa.bundlePaths.h[a])
            .onComplete(function (c) {
              null == c
                ? b.error('Cannot load bundle for library "' + a + '"')
                : ((c = Wb.fromBundle(c)),
                  null == c
                    ? b.error('Cannot open library "' + a + '"')
                    : ((Fa.libraries.h[a] = c),
                      c.onChange.add(((G = Fa.onChange), l(G, G.dispatch))),
                      b.completeWith(c.load())));
            })
            .onError(function (c) {
              b.error('There is no asset library with an ID of "' + a + '"');
            });
        else
          (Object.prototype.hasOwnProperty.call(Fa.libraryPaths.h, a)
            ? ((c = Fa.libraryPaths.h[a]), (d = Ud.directory(c)))
            : (O.endsWith(c, '.bundle')
                ? ((d = c), (c += '/library.json'))
                : (d = Ud.directory(c)),
              (c = Fa.__cacheBreak(c))),
            td
              .loadFromFile(c, d)
              .onComplete(function (c) {
                null == c
                  ? b.error(
                      'Cannot parse asset manifest for library "' + a + '"',
                    )
                  : ((c = Wb.fromManifest(c)),
                    null == c
                      ? b.error('Cannot open library "' + a + '"')
                      : ((Fa.libraries.h[a] = c),
                        c.onChange.add(((G = Fa.onChange), l(G, G.dispatch))),
                        b.completeWith(c.load())));
              })
              .onError(function (c) {
                b.error('There is no asset library with an ID of "' + a + '"');
              }));
        return b.future;
      };
      Fa.registerLibrary = function (a, b) {
        if (null == a || '' == a) a = 'default';
        if (Object.prototype.hasOwnProperty.call(Fa.libraries.h, a)) {
          if (Fa.libraries.h[a] == b) return;
          Fa.unloadLibrary(a);
        }
        null != b && b.onChange.add(Fa.library_onChange);
        Fa.libraries.h[a] = b;
      };
      Fa.unloadLibrary = function (a) {
        Fa.removeLibrary(a, !0);
      };
      Fa.removeLibrary = function (a, b) {
        null == b && (b = !0);
        if (null == a || '' == a) a = 'default';
        var c = Fa.libraries.h[a];
        null != c &&
          (Fa.cache.clear(a + ':'),
          c.onChange.remove(Fa.library_onChange),
          b && c.unload());
        b = Fa.libraries;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
      };
      Fa.__cacheBreak = function (a) {
        0 < Fa.cache.version &&
          (a =
            -1 < a.indexOf('?')
              ? a + ('&' + Fa.cache.version)
              : a + ('?' + Fa.cache.version));
        return a;
      };
      Fa.__libraryNotFound = function (a) {
        if (null == a || '' == a) a = 'default';
        return null == A.current ||
          null == A.current.__preloader ||
          A.current.__preloader.complete
          ? 'There is no asset library named "' + a + '"'
          : 'There is no asset library named "' +
              a +
              '", or it is not yet preloaded';
      };
      Fa.library_onChange = function () {
        Fa.cache.clear();
        Fa.onChange.dispatch();
      };
      var Fk = function (a, b) {
        this.bytes = a;
        this.offset = b;
      };
      g['lime.utils.BytePointerData'] = Fk;
      Fk.__name__ = 'lime.utils.BytePointerData';
      Fk.prototype = { __class__: Fk };
      var Sf = {
          _new: function (a, b) {
            return new zb(b);
          },
          decompress: function (a, b) {
            switch (b._hx_index) {
              case 0:
                return el.decompress(a);
              case 1:
                return fl.decompress(a);
              case 2:
                return gl.decompress(a);
              case 3:
                return hl.decompress(a);
            }
          },
          fromBytes: function (a) {
            return null == a ? null : Sf._new(a.length, a.b.bufferValue);
          },
          fromFile: function (a) {
            return null;
          },
          loadFromFile: function (a) {
            return new Ui().load(a);
          },
          ofString: function (a) {
            a = zb.ofString(a);
            return Sf._new(a.length, a.b.bufferValue);
          },
        },
        Xi = (y['lime.utils.CompressionAlgorithm'] = {
          __ename__: 'lime.utils.CompressionAlgorithm',
          __constructs__: null,
          DEFLATE: {
            _hx_name: 'DEFLATE',
            _hx_index: 0,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
          GZIP: {
            _hx_name: 'GZIP',
            _hx_index: 1,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
          LZMA: {
            _hx_name: 'LZMA',
            _hx_index: 2,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
          ZLIB: {
            _hx_name: 'ZLIB',
            _hx_index: 3,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
        });
      Xi.__constructs__ = [Xi.DEFLATE, Xi.GZIP, Xi.LZMA, Xi.ZLIB];
      var hh = {
          toArrayBufferView: function (a) {
            return a;
          },
        },
        Ga = function () {};
      g['lime.utils.Log'] = Ga;
      Ga.__name__ = 'lime.utils.Log';
      Ga.debug = function (a, b) {
        4 <= Ga.level && console.debug('[' + b.className + '] ' + H.string(a));
      };
      Ga.error = function (a, b) {
        if (1 <= Ga.level) {
          a = '[' + b.className + '] ERROR: ' + H.string(a);
          if (Ga.throwErrors) throw X.thrown(a);
          console.error(a);
        }
      };
      Ga.info = function (a, b) {
        3 <= Ga.level && console.info('[' + b.className + '] ' + H.string(a));
      };
      Ga.verbose = function (a, b) {
        5 <= Ga.level &&
          ((a = '[' + b.className + '] ' + H.string(a)), console.log(a));
      };
      Ga.warn = function (a, b) {
        2 <= Ga.level &&
          console.warn('[' + b.className + '] WARNING: ' + H.string(a));
      };
      var Sj = function () {
        this.bytesTotalCache = new Pa();
        this.bytesLoadedCache2 = new Pa();
        this.bytesLoadedCache = new pa();
        this.onProgress = new Oi();
        this.onComplete = new Ac();
        this.bytesTotal = this.bytesLoaded = 0;
        this.libraries = [];
        this.libraryNames = [];
        this.onProgress.add(l(this, this.update));
      };
      g['lime.utils.Preloader'] = Sj;
      Sj.__name__ = 'lime.utils.Preloader';
      Sj.prototype = {
        addLibrary: function (a) {
          this.libraries.push(a);
        },
        addLibraryName: function (a) {
          -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a);
        },
        load: function () {
          for (var a = this, b = 0, c = this.libraries; b < c.length; ) {
            var d = c[b];
            ++b;
            this.bytesTotal += d.bytesTotal;
          }
          this.loadedLibraries = -1;
          this.preloadStarted = !1;
          b = 0;
          for (c = this.libraries; b < c.length; )
            ((d = [c[b]]),
              ++b,
              Ga.verbose('Preloading asset library', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 134,
                className: 'lime.utils.Preloader',
                methodName: 'load',
              }),
              d[0]
                .load()
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + c
                          : a.bytesLoaded +
                            (c - a.bytesLoadedCache.h[b[0].__id__]);
                      a.bytesLoadedCache.set(b[0], c);
                      a.simulateProgress ||
                        a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                    };
                  })(d),
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + b[0].bytesTotal
                          : a.bytesLoaded +
                            ((b[0].bytesTotal | 0) -
                              a.bytesLoadedCache.h[b[0].__id__]);
                      a.loadedAssetLibrary();
                    };
                  })(d),
                )
                .onError(
                  (function () {
                    return function (a) {
                      Ga.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 170,
                        className: 'lime.utils.Preloader',
                        methodName: 'load',
                      });
                    };
                  })(),
                ));
          b = 0;
          for (c = this.libraryNames; b < c.length; )
            (++b, (this.bytesTotal += 200));
          this.loadedLibraries++;
          this.preloadStarted = !0;
          this.updateProgress();
        },
        loadedAssetLibrary: function (a) {
          this.loadedLibraries++;
          var b = this.loadedLibraries;
          this.preloadStarted || ++b;
          var c = this.libraries.length + this.libraryNames.length;
          null != a
            ? Ga.verbose(
                'Loaded asset library: ' + a + ' [' + b + '/' + c + ']',
                {
                  fileName: 'lime/utils/Preloader.hx',
                  lineNumber: 197,
                  className: 'lime.utils.Preloader',
                  methodName: 'loadedAssetLibrary',
                },
              )
            : Ga.verbose('Loaded asset library [' + b + '/' + c + ']', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 201,
                className: 'lime.utils.Preloader',
                methodName: 'loadedAssetLibrary',
              });
          this.updateProgress();
        },
        start: function () {
          this.complete ||
            this.simulateProgress ||
            !this.preloadComplete ||
            ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {},
        updateProgress: function () {
          var a = this;
          this.simulateProgress ||
            this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
          if (
            this.loadedLibraries == this.libraries.length &&
            !this.initLibraryNames
          ) {
            this.initLibraryNames = !0;
            for (var b = 0, c = this.libraryNames; b < c.length; ) {
              var d = [c[b]];
              ++b;
              Ga.verbose('Preloading asset library: ' + d[0], {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 239,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              });
              Fa.loadLibrary(d[0])
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      0 < d &&
                        (Object.prototype.hasOwnProperty.call(
                          a.bytesTotalCache.h,
                          b[0],
                        ) ||
                          ((a.bytesTotalCache.h[b[0]] = d),
                          (a.bytesTotal += d - 200)),
                        c > d && (c = d),
                        Object.prototype.hasOwnProperty.call(
                          a.bytesLoadedCache2.h,
                          b[0],
                        )
                          ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                          : (a.bytesLoaded += c),
                        (a.bytesLoadedCache2.h[b[0]] = c),
                        a.simulateProgress ||
                          a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal));
                    };
                  })(d),
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      c = 200;
                      Object.prototype.hasOwnProperty.call(
                        a.bytesTotalCache.h,
                        b[0],
                      ) && (c = a.bytesTotalCache.h[b[0]]);
                      Object.prototype.hasOwnProperty.call(
                        a.bytesLoadedCache2.h,
                        b[0],
                      )
                        ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                        : (a.bytesLoaded += c);
                      a.loadedAssetLibrary(b[0]);
                    };
                  })(d),
                )
                .onError(
                  (function () {
                    return function (a) {
                      Ga.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 293,
                        className: 'lime.utils.Preloader',
                        methodName: 'updateProgress',
                      });
                    };
                  })(),
                );
            }
          }
          this.simulateProgress ||
            this.loadedLibraries !=
              this.libraries.length + this.libraryNames.length ||
            (this.preloadComplete ||
              ((this.preloadComplete = !0),
              Ga.verbose('Preload complete', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 306,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              })),
            this.start());
        },
        __class__: Sj,
      };
      var $g = function (a, b) {
        je.call(this, [a, b]);
      };
      g['msignal.Signal2'] = $g;
      $g.__name__ = 'msignal.Signal2';
      $g.__super__ = je;
      $g.prototype = v(je.prototype, {
        dispatch: function (a, b) {
          for (var c = this.slots; c.nonEmpty; )
            (c.head.execute(a, b), (c = c.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new Yi(this, a, b, c);
        },
        __class__: $g,
      });
      var se = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        this.signal = a;
        this.set_listener(b);
        this.once = c;
        this.priority = d;
        this.enabled = !0;
      };
      g['msignal.Slot'] = se;
      se.__name__ = 'msignal.Slot';
      se.prototype = {
        remove: function () {
          this.signal.remove(this.listener);
        },
        set_listener: function (a) {
          return (this.listener = a);
        },
        __class__: se,
        __properties__: { set_listener: 'set_listener' },
      };
      var fi = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        se.call(this, a, b, c, d);
      };
      g['msignal.Slot0'] = fi;
      fi.__name__ = 'msignal.Slot0';
      fi.__super__ = se;
      fi.prototype = v(se.prototype, {
        execute: function () {
          this.enabled && (this.once && this.remove(), this.listener());
        },
        __class__: fi,
      });
      var gi = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        se.call(this, a, b, c, d);
      };
      g['msignal.Slot1'] = gi;
      gi.__name__ = 'msignal.Slot1';
      gi.__super__ = se;
      gi.prototype = v(se.prototype, {
        execute: function (a) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param && (a = this.param),
            this.listener(a));
        },
        __class__: gi,
      });
      var Yi = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        se.call(this, a, b, c, d);
      };
      g['msignal.Slot2'] = Yi;
      Yi.__name__ = 'msignal.Slot2';
      Yi.__super__ = se;
      Yi.prototype = v(se.prototype, {
        execute: function (a, b) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param1 && (a = this.param1),
            null != this.param2 && (b = this.param2),
            this.listener(a, b));
        },
        __class__: Yi,
      });
      var Ra = function () {};
      g['openfl.Lib'] = Ra;
      Ra.__name__ = 'openfl.Lib';
      Ra.__properties__ = { get_current: 'get_current' };
      Ra.getTimer = function () {
        return Cc.getTimer();
      };
      Ra.getURL = function (a, b) {
        Ra.navigateToURL(a, b);
      };
      Ra.navigateToURL = function (a, b) {
        null == b && (b = '_blank');
        var c = a.url;
        if (w.typeof(a.data) == J.TObject) {
          for (var d = '', f = ya.fields(a.data), h = 0; h < f.length; ) {
            var k = f[h];
            ++h;
            0 < d.length && (d += '&');
            var n = encodeURIComponent(k) + '=';
            k = H.string(ya.field(a.data, k));
            d += n + encodeURIComponent(k);
          }
          c = -1 < c.indexOf('?') ? c + ('&' + d) : c + ('?' + d);
        }
        Cc.openURL(c, b);
      };
      Ra.setTimeout = function (a, b, c) {
        var d = ++Ra.__lastTimerID,
          f = Ra.__timers;
        b = Pf.delay(function () {
          Ra.__timers.remove(d);
          if (
            null != Ra.get_current() &&
            null != Ra.get_current().stage &&
            Ra.get_current().stage.__uncaughtErrorEvents.__enabled
          )
            try {
              a.apply(a, null == c ? [] : c);
            } catch (k) {
              Ta.lastError = k;
              var b = X.caught(k).unwrap();
              Ra.get_current().stage.__handleError(b);
            }
          else a.apply(a, null == c ? [] : c);
        }, b);
        f.h[d] = b;
        return d;
      };
      Ra.get_current = function () {
        null == Dc.current && (Dc.current = new Af());
        return Dc.current;
      };
      var Ye = function () {};
      g['openfl._Vector.IVector'] = Ye;
      Ye.__name__ = 'openfl._Vector.IVector';
      Ye.__isInterface__ = !0;
      Ye.prototype = { __class__: Ye };
      var Zi = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.BoolVector'] = Zi;
      Zi.__name__ = 'openfl._Vector.BoolVector';
      Zi.__interfaces__ = [Ye];
      Zi.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = !1;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Zi,
        __properties__: { set_length: 'set_length' },
      };
      var Ie = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var f = c.length; d < f; ) {
              var h = d++;
              this.__array[h] = c[h];
            }
          }
        } else (null == c && (c = []), (this.__array = c));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.FloatVector'] = Ie;
      Ie.__name__ = 'openfl._Vector.FloatVector';
      Ie.__interfaces__ = [Ye];
      Ie.prototype = {
        concat: function (a) {
          return null == a
            ? new Ie(0, !1, this.__array.slice())
            : 0 < a.__array.length
              ? new Ie(0, !1, this.__array.concat(a.__array))
              : new Ie(0, !1, this.__array.slice());
        },
        copy: function () {
          return new Ie(0, this.fixed, this.__array.slice());
        },
        get: function (a) {
          return this.__array[a];
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (a != this.__array.length && !this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Ie,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var $i = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.FunctionVector'] = $i;
      $i.__name__ = 'openfl._Vector.FunctionVector';
      $i.__interfaces__ = [Ye];
      $i.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = null;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: $i,
        __properties__: { set_length: 'set_length' },
      };
      var Yg = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.IntVector'] = Yg;
      Yg.__name__ = 'openfl._Vector.IntVector';
      Yg.__interfaces__ = [Ye];
      Yg.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        iterator: function () {
          return new yf(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Yg,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var eg = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var f = c.length; d < f; ) {
              var h = d++;
              this.__array[h] = c[h];
            }
          }
        } else (null == c && (c = []), (this.__array = c));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      g['openfl._Vector.ObjectVector'] = eg;
      eg.__name__ = 'openfl._Vector.ObjectVector';
      eg.__interfaces__ = [Ye];
      eg.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        indexOf: function (a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c; ) {
            var d = b++;
            if (this.__array[d] == a) return d;
          }
          return -1;
        },
        insertAt: function (a, b) {
          (!this.fixed || a < this.__array.length) &&
            this.__array.splice(a, 0, b);
        },
        iterator: function () {
          return new yf(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        removeAt: function (a) {
          return !this.fixed || a < this.__array.length
            ? this.__array.splice(a, 1)[0]
            : null;
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new eg(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        unshift: function (a) {
          this.fixed || this.__array.unshift(a);
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b) for (; b < a; ) (b++, this.__array.push(null));
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: eg,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Vg = function () {
        A.call(this);
        null == Dc.application && (Dc.application = this);
        null == Dc.current && (Dc.current = new Af());
        Dc.current.__loaderInfo = te.create(null);
        Dc.current.__loaderInfo.content = Dc.current;
      };
      g['openfl.display.Application'] = Vg;
      Vg.__name__ = 'openfl.display.Application';
      Vg.__super__ = A;
      Vg.prototype = v(A.prototype, {
        createWindow: function (a) {
          var b = new uh(this, a);
          this.__windows.push(b);
          this.__windowByID.h[b.id] = b;
          var c = this;
          b.onClose.add(
            function () {
              c.__onWindowClose(b);
            },
            !1,
            -1e4,
          );
          null == this.__window &&
            ((this.__window = b),
            b.onActivate.add(l(this, this.onWindowActivate)),
            b.onRenderContextLost.add(l(this, this.onRenderContextLost)),
            b.onRenderContextRestored.add(
              l(this, this.onRenderContextRestored),
            ),
            b.onDeactivate.add(l(this, this.onWindowDeactivate)),
            b.onDropFile.add(l(this, this.onWindowDropFile)),
            b.onEnter.add(l(this, this.onWindowEnter)),
            b.onExpose.add(l(this, this.onWindowExpose)),
            b.onFocusIn.add(l(this, this.onWindowFocusIn)),
            b.onFocusOut.add(l(this, this.onWindowFocusOut)),
            b.onFullscreen.add(l(this, this.onWindowFullscreen)),
            b.onKeyDown.add(l(this, this.onKeyDown)),
            b.onKeyUp.add(l(this, this.onKeyUp)),
            b.onLeave.add(l(this, this.onWindowLeave)),
            b.onMinimize.add(l(this, this.onWindowMinimize)),
            b.onMouseDown.add(l(this, this.onMouseDown)),
            b.onMouseMove.add(l(this, this.onMouseMove)),
            b.onMouseMoveRelative.add(l(this, this.onMouseMoveRelative)),
            b.onMouseUp.add(l(this, this.onMouseUp)),
            b.onMouseWheel.add(l(this, this.onMouseWheel)),
            b.onMove.add(l(this, this.onWindowMove)),
            b.onRender.add(l(this, this.render)),
            b.onResize.add(l(this, this.onWindowResize)),
            b.onRestore.add(l(this, this.onWindowRestore)),
            b.onTextEdit.add(l(this, this.onTextEdit)),
            b.onTextInput.add(l(this, this.onTextInput)),
            this.onWindowCreate());
          this.onCreateWindow.dispatch(b);
          return b;
        },
        exec: function () {
          return A.prototype.exec.call(this);
        },
        __checkForAllWindowsClosed: function () {
          0 < this.__windows.length ||
            A.prototype.__checkForAllWindowsClosed.call(this);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (Dc.application == this && (Dc.application = null),
            A.prototype.__onModuleExit.call(this, a));
        },
        __class__: Vg,
      });
      var qd = function () {
        oa.call(this);
        this.__allowSmoothing = !0;
        this.__pixelRatio = 1;
        this.__tempColorTransform = new Tb();
        this.__worldAlpha = 1;
      };
      g['openfl.display.DisplayObjectRenderer'] = qd;
      qd.__name__ = 'openfl.display.DisplayObjectRenderer';
      qd.__super__ = oa;
      qd.prototype = v(oa.prototype, {
        __clear: function () {},
        __getAlpha: function (a) {
          return a * this.__worldAlpha;
        },
        __popMaskObject: function (a, b) {},
        __pushMaskObject: function (a, b) {},
        __render: function (a) {},
        __renderEvent: function (a) {
          if (null != a.__customRenderEvent && a.__renderable) {
            a.__customRenderEvent.allowSmoothing = this.__allowSmoothing;
            a.__customRenderEvent.objectMatrix.copyFrom(a.__renderTransform);
            a.__customRenderEvent.objectColorTransform.__copyFrom(
              a.__worldColorTransform,
            );
            a.__customRenderEvent.renderer = this;
            switch (this.__type) {
              case 'cairo':
                a.__customRenderEvent.type = 'renderCairo';
                break;
              case 'canvas':
                a.__customRenderEvent.type = 'renderCanvas';
                break;
              case 'dom':
                a.__customRenderEvent.type =
                  null != a.stage && a.__worldVisible
                    ? 'renderDOM'
                    : 'clearDOM';
                break;
              case 'opengl':
                this.__cleared || this.__clear();
                this.setShader(a.__worldShader);
                this.__context3D.__flushGL();
                a.__customRenderEvent.type = 'renderOpenGL';
                break;
              default:
                return;
            }
            this.__setBlendMode(a.__worldBlendMode);
            this.__pushMaskObject(a);
            a.dispatchEvent(a.__customRenderEvent);
            this.__popMaskObject(a);
            'opengl' == this.__type && this.setViewport();
          }
        },
        __resize: function (a, b) {},
        __setBlendMode: function (a) {},
        __shouldCacheHardware: function (a, b) {
          if (null == a) return null;
          switch (a.__drawableType) {
            case 4:
            case 5:
              if (1 == b) return !0;
              b = this.__shouldCacheHardware_DisplayObject(a, b);
              if (1 == b) return !0;
              if (null != a.__children) {
                var c = 0;
                for (a = a.__children; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b = this.__shouldCacheHardware_DisplayObject(d, b);
                  if (1 == b) return !0;
                }
              }
              return b;
            case 7:
              return 1 == b ? !0 : !1;
            case 9:
              return !0;
            default:
              return this.__shouldCacheHardware_DisplayObject(a, b);
          }
        },
        __shouldCacheHardware_DisplayObject: function (a, b) {
          return 1 == b || null != a.__filters
            ? !0
            : 0 == b || (null != a.__graphics && !Yb.isCompatible(a.__graphics))
              ? !1
              : null;
        },
        __updateCacheBitmap: function (a, b) {
          if (null == a) return !1;
          switch (a.__drawableType) {
            case 2:
              var c = a;
              if (
                null == c.__bitmapData ||
                (null == c.__filters &&
                  'opengl' == this.__type &&
                  null == c.__cacheBitmap)
              )
                return !1;
              b =
                null != c.__bitmapData.image &&
                c.__bitmapData.image.version != c.__imageVersion;
              break;
            case 7:
              var d = a;
              if (
                null == d.__filters &&
                'opengl' == this.__type &&
                null == d.__cacheBitmap &&
                !d.__domRender
              )
                return !1;
              b && (d.__renderDirty = !0);
              b = b || d.__dirty;
              break;
            case 9:
              if (
                null == a.__filters &&
                'opengl' == this.__type &&
                null == a.__cacheBitmap
              )
                return !1;
          }
          if (a.__isCacheBitmapRender) return !1;
          d = Tb.__pool.get();
          d.__copyFrom(a.__worldColorTransform);
          null != this.__worldColorTransform &&
            d.__combine(this.__worldColorTransform);
          var f = !1;
          if (
            a.get_cacheAsBitmap() ||
            ('opengl' != this.__type && !d.__isDefault(!0))
          ) {
            f = null;
            var h =
                (b =
                  null == a.__cacheBitmap ||
                  (a.__renderDirty &&
                    (b || (null != a.__children && 0 < a.__children.length))) ||
                  a.opaqueBackground != a.__cacheBitmapBackground) ||
                (null != a.__graphics && a.__graphics.__softwareDirty) ||
                !a.__cacheBitmapColorTransform.__equals(d, !0),
              k = b || (null != a.__graphics && a.__graphics.__hardwareDirty),
              n = this.__type;
            if (h || k)
              ('opengl' == n &&
                0 == this.__shouldCacheHardware(a, null) &&
                (n = 'canvas'),
                !h || ('canvas' != n && 'cairo' != n) || (b = !0),
                k && 'opengl' == n && (b = !0));
            h =
              b || !a.__cacheBitmap.__worldTransform.equals(a.__worldTransform);
            c = null != a.__filters;
            if ('dom' == this.__type && !c) return !1;
            if (c && !b)
              for (var p = 0, g = a.__filters; p < g.length; ) {
                var q = g[p];
                ++p;
                if (q.__renderDirty) {
                  b = !0;
                  break;
                }
              }
            null == a.__cacheBitmapMatrix && (a.__cacheBitmapMatrix = new ua());
            p =
              null != a.__cacheAsBitmapMatrix
                ? a.__cacheAsBitmapMatrix
                : a.__renderTransform;
            b ||
              (p.a == a.__cacheBitmapMatrix.a &&
                p.b == a.__cacheBitmapMatrix.b &&
                p.c == a.__cacheBitmapMatrix.c &&
                p.d == a.__cacheBitmapMatrix.d) ||
              (b = !0);
            !b &&
              'opengl' != this.__type &&
              null != a.__cacheBitmapData &&
              null != a.__cacheBitmapData.image &&
              a.__cacheBitmapData.image.version <
                a.__cacheBitmapData.__textureVersion &&
              (b = !0);
            if (!b)
              for (k = a; null != k; ) {
                if (null != k.get_scrollRect()) {
                  h = !0;
                  break;
                }
                k = k.parent;
              }
            a.__cacheBitmapMatrix.copyFrom(p);
            a.__cacheBitmapMatrix.tx = 0;
            var m = (k = a.__cacheBitmapMatrix.ty = 0),
              u = 0,
              r = 0,
              l = (q = 0);
            g = this.__pixelRatio;
            if (h || b)
              ((f = na.__pool.get()),
                a.__getFilterBounds(f, a.__cacheBitmapMatrix),
                (u = 0 < f.width ? Math.ceil((f.width + 1) * g) : 0),
                (r = 0 < f.height ? Math.ceil((f.height + 1) * g) : 0),
                (q = 0 < f.x ? Math.ceil(f.x) : Math.floor(f.x)),
                (l = 0 < f.y ? Math.ceil(f.y) : Math.floor(f.y)),
                null != a.__cacheBitmapData
                  ? u > a.__cacheBitmapData.width ||
                    r > a.__cacheBitmapData.height
                    ? ((k = Math.ceil(
                        Math.max(1.25 * u, a.__cacheBitmapData.width),
                      )),
                      (m = Math.ceil(
                        Math.max(1.25 * r, a.__cacheBitmapData.height),
                      )),
                      (b = !0))
                    : ((k = a.__cacheBitmapData.width),
                      (m = a.__cacheBitmapData.height))
                  : ((k = u), (m = r)));
            if (b)
              if (
                ((h = !0),
                (a.__cacheBitmapBackground = a.opaqueBackground),
                0.5 <= u && 0.5 <= r)
              ) {
                var D = null != a.opaqueBackground && (k != u || m != r),
                  x =
                    null != a.opaqueBackground
                      ? -16777216 | a.opaqueBackground
                      : 0,
                  w = D ? 0 : x,
                  z = 'opengl' == this.__type;
                null == a.__cacheBitmapData ||
                k > a.__cacheBitmapData.width ||
                m > a.__cacheBitmapData.height
                  ? ((a.__cacheBitmapData = new Fb(k, m, !0, w)),
                    null == a.__cacheBitmap && (a.__cacheBitmap = new Nd()),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null))
                  : a.__cacheBitmapData.__fillRect(
                      a.__cacheBitmapData.rect,
                      w,
                      z,
                    );
                D &&
                  (f.setTo(0, 0, u, r),
                  a.__cacheBitmapData.__fillRect(f, x, z));
              } else
                return (
                  Tb.__pool.release(d),
                  (a.__cacheBitmap = null),
                  (a.__cacheBitmapData = null),
                  (a.__cacheBitmapData2 = null),
                  (a.__cacheBitmapData3 = null),
                  (a.__cacheBitmapRenderer = null),
                  7 == a.__drawableType &&
                    ((d = a),
                    null != d.__cacheBitmap &&
                      ((d.__cacheBitmap.__renderTransform.tx -=
                        d.__offsetX * g),
                      (d.__cacheBitmap.__renderTransform.ty -=
                        d.__offsetY * g))),
                  !0
                );
            else
              ((a.__cacheBitmapData = a.__cacheBitmap.get_bitmapData()),
                (a.__cacheBitmapData2 = null),
                (a.__cacheBitmapData3 = null));
            if (h || b)
              (a.__cacheBitmap.__worldTransform.copyFrom(a.__worldTransform),
                p == a.__renderTransform
                  ? (a.__cacheBitmap.__renderTransform.identity(),
                    a.__cacheBitmap.__renderTransform.scale(1 / g, 1 / g),
                    (a.__cacheBitmap.__renderTransform.tx =
                      a.__renderTransform.tx + q),
                    (a.__cacheBitmap.__renderTransform.ty =
                      a.__renderTransform.ty + l))
                  : (a.__cacheBitmap.__renderTransform.copyFrom(
                      a.__cacheBitmapMatrix,
                    ),
                    a.__cacheBitmap.__renderTransform.invert(),
                    a.__cacheBitmap.__renderTransform.concat(
                      a.__renderTransform,
                    ),
                    (a.__cacheBitmap.__renderTransform.a *= 1 / g),
                    (a.__cacheBitmap.__renderTransform.d *= 1 / g),
                    (a.__cacheBitmap.__renderTransform.tx += q),
                    (a.__cacheBitmap.__renderTransform.ty += l)));
            a.__cacheBitmap.smoothing = this.__allowSmoothing;
            a.__cacheBitmap.__renderable = a.__renderable;
            a.__cacheBitmap.__worldAlpha = a.__worldAlpha;
            a.__cacheBitmap.__worldBlendMode = a.__worldBlendMode;
            a.__cacheBitmap.__worldShader = a.__worldShader;
            a.__cacheBitmap.set_mask(a.__mask);
            if (b) {
              if (
                null == a.__cacheBitmapRenderer ||
                n != a.__cacheBitmapRenderer.__type
              )
                ('opengl' == n
                  ? (a.__cacheBitmapRenderer = new db(
                      va.__cast(this, db).__context3D,
                      a.__cacheBitmapData,
                    ))
                  : (null == a.__cacheBitmapData.image &&
                      ((a.__cacheBitmapData = new Fb(
                        k,
                        m,
                        !0,
                        null != a.opaqueBackground
                          ? -16777216 | a.opaqueBackground
                          : 0,
                      )),
                      (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData)),
                    Ka.convertToCanvas(a.__cacheBitmapData.image),
                    (a.__cacheBitmapRenderer = new Ue(
                      a.__cacheBitmapData.image.buffer.__srcContext,
                    ))),
                  (a.__cacheBitmapRenderer.__worldTransform = new ua()),
                  (a.__cacheBitmapRenderer.__worldColorTransform = new Tb()));
              null == a.__cacheBitmapColorTransform &&
                (a.__cacheBitmapColorTransform = new Tb());
              a.__cacheBitmapRenderer.__stage = a.stage;
              a.__cacheBitmapRenderer.__allowSmoothing = this.__allowSmoothing;
              a.__cacheBitmapRenderer.__setBlendMode(10);
              a.__cacheBitmapRenderer.__worldAlpha = 1 / a.__worldAlpha;
              a.__cacheBitmapRenderer.__worldTransform.copyFrom(
                a.__renderTransform,
              );
              a.__cacheBitmapRenderer.__worldTransform.invert();
              a.__cacheBitmapRenderer.__worldTransform.concat(
                a.__cacheBitmapMatrix,
              );
              a.__cacheBitmapRenderer.__worldTransform.tx -= q;
              a.__cacheBitmapRenderer.__worldTransform.ty -= l;
              a.__cacheBitmapRenderer.__worldTransform.scale(g, g);
              a.__cacheBitmapRenderer.__pixelRatio = g;
              a.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(d);
              a.__cacheBitmapRenderer.__worldColorTransform.__invert();
              a.__isCacheBitmapRender = !0;
              if ('opengl' == a.__cacheBitmapRenderer.__type) {
                D = a.__cacheBitmapRenderer;
                x = D.__context3D;
                w = x.__state.renderToTexture;
                z = x.__state.renderToTextureDepthStencil;
                var J = x.__state.renderToTextureAntiAlias,
                  y = x.__state.renderToTextureSurfaceSelector,
                  C = this.__blendMode;
                this.__suspendClipAndMask();
                D.__copyShader(this);
                a.__cacheBitmapData.__setUVRect(x, 0, 0, u, r);
                D.__setRenderTarget(a.__cacheBitmapData);
                null != a.__cacheBitmapData.image &&
                  (a.__cacheBitmapData.__textureVersion =
                    a.__cacheBitmapData.image.version + 1);
                a.__cacheBitmapData.__drawGL(a, D);
                if (c) {
                  var t = !1;
                  p = 0;
                  for (g = a.__filters; p < g.length; )
                    ((q = g[p]), ++p, q.__preserveObject && (t = !0));
                  c = a.__cacheBitmapData;
                  l = null;
                  null == a.__cacheBitmapData2 ||
                  k > a.__cacheBitmapData2.width ||
                  m > a.__cacheBitmapData2.height
                    ? (a.__cacheBitmapData2 = new Fb(k, m, !0, 0))
                    : (a.__cacheBitmapData2.fillRect(
                        a.__cacheBitmapData2.rect,
                        0,
                      ),
                      null != a.__cacheBitmapData2.image &&
                        (a.__cacheBitmapData2.__textureVersion =
                          a.__cacheBitmapData2.image.version + 1));
                  a.__cacheBitmapData2.__setUVRect(x, 0, 0, u, r);
                  n = a.__cacheBitmapData2;
                  t &&
                    (null == a.__cacheBitmapData3 ||
                    k > a.__cacheBitmapData3.width ||
                    m > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new Fb(k, m, !0, 0))
                      : (a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                        null != a.__cacheBitmapData3.image &&
                          (a.__cacheBitmapData3.__textureVersion =
                            a.__cacheBitmapData3.image.version + 1)),
                    a.__cacheBitmapData3.__setUVRect(x, 0, 0, u, r),
                    (l = a.__cacheBitmapData3));
                  D.__setBlendMode(10);
                  D.__worldAlpha = 1;
                  D.__worldTransform.identity();
                  D.__worldColorTransform.__identity();
                  p = 0;
                  for (g = a.__filters; p < g.length; ) {
                    q = g[p];
                    ++p;
                    q.__preserveObject &&
                      (D.__setRenderTarget(l),
                      D.__renderFilterPass(
                        c,
                        D.__defaultDisplayShader,
                        q.__smooth,
                      ));
                    m = 0;
                    for (u = q.__numShaderPasses; m < u; )
                      ((k = m++),
                        (k = q.__initShader(
                          D,
                          k,
                          q.__preserveObject ? l : null,
                        )),
                        D.__setBlendMode(q.__shaderBlendMode),
                        D.__setRenderTarget(n),
                        D.__renderFilterPass(c, k, q.__smooth),
                        (k = c),
                        (c = n),
                        (n = k));
                    q.__renderDirty = !1;
                  }
                  a.__cacheBitmap.__bitmapData = c;
                }
                this.__blendMode = 10;
                this.__setBlendMode(C);
                this.__copyShader(D);
                null != w
                  ? x.setRenderToTexture(w, z, J, y)
                  : x.setRenderToBackBuffer();
                this.__resumeClipAndMask(D);
                this.setViewport();
                a.__cacheBitmapColorTransform.__copyFrom(d);
              } else {
                a.__cacheBitmapData.__drawCanvas(a, a.__cacheBitmapRenderer);
                if (c) {
                  t = u = !1;
                  p = 0;
                  for (g = a.__filters; p < g.length; )
                    ((q = g[p]),
                      ++p,
                      q.__needSecondBitmapData && (u = !0),
                      q.__preserveObject && (t = !0));
                  c = a.__cacheBitmapData;
                  l = null;
                  u
                    ? (null == a.__cacheBitmapData2 ||
                      null == a.__cacheBitmapData2.image ||
                      k > a.__cacheBitmapData2.width ||
                      m > a.__cacheBitmapData2.height
                        ? (a.__cacheBitmapData2 = new Fb(k, m, !0, 0))
                        : a.__cacheBitmapData2.fillRect(
                            a.__cacheBitmapData2.rect,
                            0,
                          ),
                      (n = a.__cacheBitmapData2))
                    : (n = c);
                  t &&
                    (null == a.__cacheBitmapData3 ||
                    null == a.__cacheBitmapData3.image ||
                    k > a.__cacheBitmapData3.width ||
                    m > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new Fb(k, m, !0, 0))
                      : a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                    (l = a.__cacheBitmapData3));
                  null == a.__tempPoint && (a.__tempPoint = new I());
                  m = a.__tempPoint;
                  p = 0;
                  for (g = a.__filters; p < g.length; )
                    ((q = g[p]),
                      ++p,
                      q.__preserveObject && l.copyPixels(c, c.rect, m),
                      (k = q.__applyFilter(n, c, c.rect, m)),
                      q.__preserveObject &&
                        k.draw(
                          l,
                          null,
                          null != a.__objectTransform
                            ? a.__objectTransform.__colorTransform
                            : null,
                        ),
                      (q.__renderDirty = !1),
                      u && k == n && ((k = c), (c = n), (n = k)));
                  a.__cacheBitmapData != c &&
                    ((k = a.__cacheBitmapData),
                    (a.__cacheBitmapData = c),
                    (a.__cacheBitmapData2 = k),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null));
                  a.__cacheBitmap.__imageVersion =
                    a.__cacheBitmapData.__textureVersion;
                }
                a.__cacheBitmapColorTransform.__copyFrom(d);
                a.__cacheBitmapColorTransform.__isDefault(!0) ||
                  ((a.__cacheBitmapColorTransform.alphaMultiplier = 1),
                  a.__cacheBitmapData.colorTransform(
                    a.__cacheBitmapData.rect,
                    a.__cacheBitmapColorTransform,
                  ));
              }
              a.__isCacheBitmapRender = !1;
            }
            (h || b) && na.__pool.release(f);
            f = h;
          } else
            null != a.__cacheBitmap &&
              ('dom' == this.__type &&
                this.__renderDrawableClear(a.__cacheBitmap),
              (a.__cacheBitmap = null),
              (a.__cacheBitmapData = null),
              (a.__cacheBitmapData2 = null),
              (a.__cacheBitmapData3 = null),
              (a.__cacheBitmapColorTransform = null),
              (a.__cacheBitmapRenderer = null),
              (f = !0));
          Tb.__pool.release(d);
          f &&
            7 == a.__drawableType &&
            ((d = a),
            null != d.__cacheBitmap &&
              ((d.__cacheBitmap.__renderTransform.tx -= d.__offsetX),
              (d.__cacheBitmap.__renderTransform.ty -= d.__offsetY)));
          return f;
        },
        __class__: qd,
      });
      var aj = function (a) {
        qd.call(this);
      };
      g['openfl.display.CairoRenderer'] = aj;
      aj.__name__ = 'openfl.display.CairoRenderer';
      aj.__super__ = qd;
      aj.prototype = v(qd.prototype, {
        applyMatrix: function (a, b) {
          null == b && (b = this.cairo);
          this.__matrix.copyFrom(a);
          this.cairo == b &&
            null != this.__worldTransform &&
            this.__matrix.concat(this.__worldTransform);
          this.__matrix3[0] = this.__matrix.a;
          this.__matrix3[1] = this.__matrix.b;
          this.__matrix3[3] = this.__matrix.c;
          this.__matrix3[4] = this.__matrix.d;
          this.__roundPixels
            ? ((this.__matrix3[6] = Math.round(this.__matrix.tx)),
              (this.__matrix3[7] = Math.round(this.__matrix.ty)))
            : ((this.__matrix3[6] = this.__matrix.tx),
              (this.__matrix3[7] = this.__matrix.ty));
          b.set_matrix(this.__matrix3);
        },
        __clear: function () {
          if (
            null != this.cairo &&
            (this.cairo.identityMatrix(),
            null != this.__stage && this.__stage.__clearBeforeRender)
          ) {
            var a = this.__blendMode;
            this.__setBlendMode(10);
            this.cairo.setSourceRGB(
              this.__stage.__colorSplit[0],
              this.__stage.__colorSplit[1],
              this.__stage.__colorSplit[2],
            );
            this.cairo.paint();
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.cairo.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.cairo.restore();
        },
        __pushMask: function (a) {
          this.cairo.save();
          this.applyMatrix(a.__renderTransform, this.cairo);
          this.cairo.newPath();
          this.__renderDrawableMask(a);
          this.cairo.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.cairo.save();
          this.applyMatrix(b, this.cairo);
          this.cairo.newPath();
          this.cairo.rectangle(a.x, a.y, a.width, a.height);
          this.cairo.clip();
        },
        __render: function (a) {
          null != this.cairo && this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 6:
                !a.__renderable ||
                  0 >= a.__worldAlpha ||
                  null == a.__currentState ||
                  (this.__pushMaskObject(a),
                  this.__renderDrawable(a.__currentState),
                  this.__popMaskObject(a),
                  this.__renderEvent(a));
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                this.cairo.rectangle(0, 0, a.get_width(), a.get_height());
                break;
              case 6:
                this.__renderDrawableMask(a.__currentState);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a), this.__setBlendModeCairo(this.cairo, a));
        },
        __setBlendModeCairo: function (a, b) {
          switch (b) {
            case 0:
              a.setOperator(12);
              break;
            case 2:
              a.setOperator(17);
              break;
            case 3:
              a.setOperator(23);
              break;
            case 5:
              a.setOperator(21);
              break;
            case 7:
              a.setOperator(2);
              break;
            case 8:
              a.setOperator(18);
              break;
            case 9:
              a.setOperator(14);
              break;
            case 11:
              a.setOperator(16);
              break;
            case 12:
              a.setOperator(15);
              break;
            default:
              a.setOperator(2);
          }
        },
        __class__: aj,
      });
      var Ue = function (a) {
        qd.call(this);
        this.context = a;
        this.__tempMatrix = new ua();
        this.__type = 'canvas';
      };
      g['openfl.display.CanvasRenderer'] = Ue;
      Ue.__name__ = 'openfl.display.CanvasRenderer';
      Ue.__super__ = qd;
      Ue.prototype = v(qd.prototype, {
        applySmoothing: function (a, b) {
          a.imageSmoothingEnabled = b;
        },
        setTransform: function (a, b) {
          null == b
            ? (b = this.context)
            : this.context == b &&
              null != this.__worldTransform &&
              (this.__tempMatrix.copyFrom(a),
              this.__tempMatrix.concat(this.__worldTransform),
              (a = this.__tempMatrix));
          this.__roundPixels
            ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0)
            : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
        },
        __clear: function () {
          if (null != this.__stage) {
            var a = this.__blendMode;
            this.__blendMode = null;
            this.__setBlendMode(10);
            this.context.setTransform(1, 0, 0, 1, 0, 0);
            this.context.globalAlpha = 1;
            !this.__stage.__transparent && this.__stage.__clearBeforeRender
              ? ((this.context.fillStyle = this.__stage.__colorString),
                this.context.fillRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                ))
              : this.__stage.__transparent &&
                this.__stage.__clearBeforeRender &&
                this.context.clearRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                );
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.context.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.context.restore();
        },
        __pushMask: function (a) {
          this.context.save();
          this.setTransform(a.__renderTransform, this.context);
          this.context.beginPath();
          this.__renderDrawableMask(a);
          this.context.closePath();
          this.context.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.context.save();
          this.setTransform(b, this.context);
          this.context.beginPath();
          this.context.rect(a.x, a.y, a.width, a.height);
          this.context.clip();
        },
        __render: function (a) {
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                bj.renderDrawable(a, this);
                break;
              case 2:
                vh.renderDrawable(a, this);
                break;
              case 3:
                Tf.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                cj.renderDrawable(a, this);
                break;
              case 6:
                dj.renderDrawable(a, this);
                break;
              case 7:
                Q.renderDrawable(a, this);
                break;
              case 8:
                Uf.renderDrawable(a, this);
                break;
              case 9:
                Ze.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                bj.renderDrawableMask(a, this);
                break;
              case 2:
                vh.renderDrawableMask(a, this);
                break;
              case 3:
                Tf.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                cj.renderDrawableMask(a, this);
                break;
              case 6:
                dj.renderDrawableMask(a, this);
                break;
              case 7:
                Q.renderDrawableMask(a, this);
                break;
              case 8:
                Uf.renderDrawableMask(a, this);
                break;
              case 9:
                Ze.renderDrawableMask(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a),
            this.__setBlendModeContext(this.context, a));
        },
        __setBlendModeContext: function (a, b) {
          switch (b) {
            case 0:
              a.globalCompositeOperation = 'lighter';
              break;
            case 2:
              a.globalCompositeOperation = 'darken';
              break;
            case 3:
              a.globalCompositeOperation = 'difference';
              break;
            case 5:
              a.globalCompositeOperation = 'hard-light';
              break;
            case 8:
              a.globalCompositeOperation = 'lighten';
              break;
            case 9:
              a.globalCompositeOperation = 'multiply';
              break;
            case 11:
              a.globalCompositeOperation = 'overlay';
              break;
            case 12:
              a.globalCompositeOperation = 'screen';
              break;
            default:
              a.globalCompositeOperation = 'source-over';
          }
        },
        __class__: Ue,
      });
      var Ll = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'none';
              case 1:
                return 'round';
              case 2:
                return 'square';
              default:
                return null;
            }
          },
        },
        ej = function (a) {
          S.call(this);
          this.__drawableType = 10;
          this.__element = a;
        };
      g['openfl.display.DOMElement'] = ej;
      ej.__name__ = 'openfl.display.DOMElement';
      ej.__super__ = S;
      ej.prototype = v(S.prototype, { __class__: ej });
      var wh = function (a) {
        qd.call(this);
        this.element = a;
        S.__supportDOM = !0;
        a = window.getComputedStyle(document.documentElement, '');
        a = (Array.prototype.slice
          .call(a)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === a.OLink && ['', 'o']))[1];
        'WebKit|Moz|MS|O'.match(new RegExp('(' + a + ')', 'i'));
        a[0].toUpperCase();
        a.substr(1);
        this.__vendorPrefix = a;
        this.__transformProperty =
          'webkit' == a ? '-webkit-transform' : 'transform';
        this.__transformOriginProperty =
          'webkit' == a ? '-webkit-transform-origin' : 'transform-origin';
        this.__clipRects = [];
        this.__z = this.__numClipRects = 0;
        this.__type = 'dom';
        this.__canvasRenderer = new Ue(null);
        this.__canvasRenderer.__isDOM = !0;
      };
      g['openfl.display.DOMRenderer'] = wh;
      wh.__name__ = 'openfl.display.DOMRenderer';
      wh.__super__ = qd;
      wh.prototype = v(qd.prototype, {
        __applyStyle: function (a, b, c, d) {
          var f = a.__style;
          if (b && a.__renderTransformChanged) {
            b = a.__renderTransform;
            var h = this.__roundPixels;
            null == h && (h = !1);
            f.setProperty(
              this.__transformProperty,
              h
                ? 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    (b.tx | 0) +
                    ', ' +
                    (b.ty | 0) +
                    ', 0, 1)'
                : 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    b.tx +
                    ', ' +
                    b.ty +
                    ', 0, 1)',
              null,
            );
          }
          a.__worldZ != ++this.__z &&
            ((a.__worldZ = this.__z),
            f.setProperty(
              'z-index',
              null == a.__worldZ ? 'null' : '' + a.__worldZ,
              null,
            ));
          c &&
            a.__worldAlphaChanged &&
            (1 > a.__worldAlpha
              ? f.setProperty(
                  'opacity',
                  null == a.__worldAlpha ? 'null' : '' + a.__worldAlpha,
                  null,
                )
              : f.removeProperty('opacity'));
          d &&
            a.__worldClipChanged &&
            (null == a.__worldClip
              ? f.removeProperty('clip')
              : ((a = a.__worldClip),
                f.setProperty(
                  'clip',
                  'rect(' +
                    a.y +
                    'px, ' +
                    a.get_right() +
                    'px, ' +
                    a.get_bottom() +
                    'px, ' +
                    a.x +
                    'px)',
                  null,
                )));
        },
        __initializeElement: function (a, b) {
          var c = (a.__style = b.style);
          c.setProperty('position', 'absolute', null);
          c.setProperty('top', '0', null);
          c.setProperty('left', '0', null);
          c.setProperty(this.__transformOriginProperty, '0 0 0', null);
          this.element.appendChild(b);
          a.__worldAlphaChanged = !0;
          a.__renderTransformChanged = !0;
          a.__worldVisibleChanged = !0;
          a.__worldClipChanged = !0;
          a.__worldClip = null;
          a.__worldZ = -1;
        },
        __popMask: function () {
          this.__popMaskRect();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            (this.__currentClipRect =
              0 < this.__numClipRects
                ? this.__clipRects[this.__numClipRects - 1]
                : null));
        },
        __pushMask: function (a) {
          this.__pushMaskRect(a.getBounds(a), a.__renderTransform);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new na());
          var c = this.__clipRects[this.__numClipRects];
          a.__transform(c, b);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            c.__contract(a.x, a.y, a.width, a.height));
          0 > c.height && (c.height = 0);
          0 > c.width && (c.width = 0);
          this.__currentClipRect = c;
          this.__numClipRects++;
        },
        __render: function (a) {
          this.element.style.background = this.__stage.__transparent
            ? 'none'
            : this.__stage.__colorString;
          this.__z = 1;
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Zb.renderDrawable(a, this);
                break;
              case 3:
                rd.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                fj.renderDrawable(a, this);
                break;
              case 6:
                gj.renderDrawable(a, this);
                break;
              case 7:
                uf.renderDrawable(a, this);
                break;
              case 8:
                $e.renderDrawable(a, this);
                break;
              case 9:
                vf.renderDrawable(a, this);
                break;
              case 10:
                (null != a.stage && a.__worldVisible && a.__renderable
                  ? (a.__active ||
                      (this.__initializeElement(a, a.__element),
                      (a.__active = !0)),
                    this.__updateClip(a),
                    this.__applyStyle(a, !0, !0, !0))
                  : a.__active &&
                    (this.element.removeChild(a.__element), (a.__active = !1)),
                  rd.renderDrawable(a, this));
            }
        },
        __renderDrawableClear: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Zb.renderDrawableClear(a, this);
                break;
              case 3:
                rd.renderDrawableClear(a, this);
                break;
              case 4:
              case 5:
                fj.renderDrawableClear(a, this);
                break;
              case 6:
                gj.renderDrawableClear(a, this);
                break;
              case 7:
                uf.renderDrawableClear(a, this);
                break;
              case 8:
                $e.renderDrawableClear(a, this);
                break;
              case 9:
                vf.renderDrawableClear(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a);
        },
        __updateClip: function (a) {
          if (null == this.__currentClipRect)
            ((a.__worldClipChanged = null != a.__worldClip),
              (a.__worldClip = null));
          else {
            null == a.__worldClip && (a.__worldClip = new na());
            var b = na.__pool.get(),
              c = ua.__pool.get();
            c.copyFrom(a.__renderTransform);
            c.invert();
            this.__currentClipRect.__transform(b, c);
            b.equals(a.__worldClip)
              ? (a.__worldClipChanged = !1)
              : (a.__worldClip.copyFrom(b), (a.__worldClipChanged = !0));
            na.__pool.release(b);
            ua.__pool.release(c);
          }
        },
        __class__: wh,
      });
      var Dd = function (a) {
        this.byteCode = a;
        this.precisionHint = 1;
        this.__glSourceDirty = !0;
        this.__numPasses = 1;
        this.__data = zl._new(a);
      };
      g['openfl.display.Shader'] = Dd;
      Dd.__name__ = 'openfl.display.Shader';
      Dd.prototype = {
        __clearUseArray: function () {
          for (var a = 0, b = this.__paramBool; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__useArray = !1;
          }
          a = 0;
          for (b = this.__paramFloat; a < b.length; )
            ((c = b[a]), ++a, (c.__useArray = !1));
          a = 0;
          for (b = this.__paramInt; a < b.length; )
            ((c = b[a]), ++a, (c.__useArray = !1));
        },
        __createGLShader: function (a, b) {
          var c = this.__context.gl,
            d = c.createShader(b);
          c.shaderSource(d, a);
          c.compileShader(d);
          var f = c.getShaderInfoLog(d),
            h = null != f && '' != O.trim(f),
            k = c.getShaderParameter(d, c.COMPILE_STATUS);
          if (h || 0 == k)
            ((b =
              (0 == k ? 'Error' : 'Info') +
              (b == c.VERTEX_SHADER
                ? ' compiling vertex shader'
                : ' compiling fragment shader')),
              (b = b + ('\n' + f) + ('\n' + a)),
              0 == k
                ? Ga.error(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 337,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  })
                : h &&
                  Ga.debug(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 338,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  }));
          return d;
        },
        __createGLProgram: function (a, b) {
          var c = this.__context.gl;
          a = this.__createGLShader(a, c.VERTEX_SHADER);
          var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
          b = c.createProgram();
          for (var f = 0, h = this.__paramFloat; f < h.length; ) {
            var k = h[f];
            ++f;
            if (
              -1 < k.name.indexOf('Position') &&
              O.startsWith(k.name, 'openfl_')
            ) {
              c.bindAttribLocation(b, 0, k.name);
              break;
            }
          }
          c.attachShader(b, a);
          c.attachShader(b, d);
          c.linkProgram(b);
          0 == c.getProgramParameter(b, c.LINK_STATUS) &&
            ((c =
              'Unable to initialize the shader program\n' +
              c.getProgramInfoLog(b)),
            Ga.error(c, {
              fileName: 'openfl/display/Shader.hx',
              lineNumber: 371,
              className: 'openfl.display.Shader',
              methodName: '__createGLProgram',
            }));
          return b;
        },
        __disable: function () {
          null != this.program && this.__disableGL();
        },
        __disableGL: function () {
          for (
            var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f.__disableGL(this.__context, b);
            ++b;
            if (b == a.MAX_TEXTURE_IMAGE_UNITS) break;
          }
          c = 0;
          for (d = this.__paramBool; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          c = 0;
          for (d = this.__paramFloat; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          c = 0;
          for (d = this.__paramInt; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          this.__context.__bindGLArrayBuffer(null);
          'opengl' == this.__context.__context.type && a.disable(a.TEXTURE_2D);
        },
        __enable: function () {
          this.__init();
          null != this.program && this.__enableGL();
        },
        __enableGL: function () {
          for (
            var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            b.uniform1i(f.index, a);
            ++a;
          }
          'opengl' == this.__context.__context.type &&
            0 < a &&
            b.enable(b.TEXTURE_2D);
        },
        __init: function () {
          null == this.__data && (this.__data = zl._new(null));
          null == this.__glFragmentSource ||
            null == this.__glVertexSource ||
            (null != this.program && !this.__glSourceDirty) ||
            this.__initGL();
        },
        __initGL: function () {
          if (this.__glSourceDirty || null == this.__paramBool)
            ((this.__glSourceDirty = !1),
              (this.program = null),
              (this.__inputBitmapData = []),
              (this.__paramBool = []),
              (this.__paramFloat = []),
              (this.__paramInt = []),
              this.__processGLData(this.get_glVertexSource(), 'attribute'),
              this.__processGLData(this.get_glVertexSource(), 'uniform'),
              this.__processGLData(this.get_glFragmentSource(), 'uniform'));
          if (null != this.__context && null == this.program) {
            var a = this.__context.gl,
              b =
                1 == this.precisionHint
                  ? 'precision mediump float;\n'
                  : 'precision lowp float;\n',
              c = b + this.get_glVertexSource();
            b += this.get_glFragmentSource();
            var d = c + b;
            Object.prototype.hasOwnProperty.call(this.__context.__programs.h, d)
              ? (this.program = this.__context.__programs.h[d])
              : ((this.program = this.__context.createProgram(1)),
                (this.program.__glProgram = this.__createGLProgram(c, b)),
                (this.__context.__programs.h[d] = this.program));
            if (null != this.program) {
              this.glProgram = this.program.__glProgram;
              c = 0;
              for (b = this.__inputBitmapData; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramBool; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramFloat; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramInt; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
            }
          }
        },
        __processGLData: function (a, b) {
          var c = 0,
            d;
          for (
            d =
              'uniform' == b
                ? new ja('uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '')
                : new ja('attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '');
            d.matchSub(a, c);

          ) {
            var f = d.matched(1);
            var h = d.matched(2);
            if (!O.startsWith(h, 'gl_')) {
              c = 'uniform' == b;
              if (O.startsWith(f, 'sampler')) {
                f = new hj();
                f.name = h;
                f.__isUniform = c;
                this.__inputBitmapData.push(f);
                switch (h) {
                  case 'bitmap':
                    this.__bitmap = f;
                    break;
                  case 'openfl_Texture':
                    this.__texture = f;
                }
                this.__data[h] = f;
                this.__isGenerated && (this[h] = f);
              } else if (
                !Object.prototype.hasOwnProperty.call(this.__data, h) ||
                null == ya.field(this.__data, h)
              ) {
                switch (f) {
                  case 'bool':
                    var k = 0;
                    break;
                  case 'bvec2':
                    k = 1;
                    break;
                  case 'bvec3':
                    k = 2;
                    break;
                  case 'bvec4':
                    k = 3;
                    break;
                  case 'dvec2':
                  case 'vec2':
                    k = 5;
                    break;
                  case 'dvec3':
                  case 'vec3':
                    k = 6;
                    break;
                  case 'dvec4':
                  case 'vec4':
                    k = 7;
                    break;
                  case 'double':
                  case 'float':
                    k = 4;
                    break;
                  case 'mat2':
                  case 'mat2x2':
                    k = 12;
                    break;
                  case 'mat2x3':
                    k = 13;
                    break;
                  case 'mat2x4':
                    k = 14;
                    break;
                  case 'mat3x2':
                    k = 15;
                    break;
                  case 'mat3':
                  case 'mat3x3':
                    k = 16;
                    break;
                  case 'mat3x4':
                    k = 17;
                    break;
                  case 'mat4x2':
                    k = 18;
                    break;
                  case 'mat4x3':
                    k = 19;
                    break;
                  case 'mat4':
                  case 'mat4x4':
                    k = 20;
                    break;
                  case 'int':
                  case 'uint':
                    k = 8;
                    break;
                  case 'ivec2':
                  case 'uvec2':
                    k = 9;
                    break;
                  case 'ivec3':
                  case 'uvec3':
                    k = 10;
                    break;
                  case 'ivec4':
                  case 'uvec4':
                    k = 11;
                    break;
                  default:
                    k = null;
                }
                switch (k) {
                  case 1:
                  case 5:
                  case 9:
                    f = 2;
                    break;
                  case 2:
                  case 6:
                  case 10:
                    f = 3;
                    break;
                  case 3:
                  case 7:
                  case 11:
                  case 12:
                    f = 4;
                    break;
                  case 16:
                    f = 9;
                    break;
                  case 20:
                    f = 16;
                    break;
                  default:
                    f = 1;
                }
                switch (k) {
                  case 12:
                    var n = 2;
                    break;
                  case 16:
                    n = 3;
                    break;
                  case 20:
                    n = 4;
                    break;
                  default:
                    n = 1;
                }
                switch (k) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                    var p = new Hg();
                    p.set_name(h);
                    p.type = k;
                    p.__arrayLength = n;
                    p.__isBool = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramBool.push(p);
                    'openfl_HasColorTransform' == h &&
                      (this.__hasColorTransform = p);
                    this.__data[h] = p;
                    this.__isGenerated && (this[h] = p);
                    break;
                  case 8:
                  case 9:
                  case 10:
                  case 11:
                    p = new Hg();
                    p.set_name(h);
                    p.type = k;
                    p.__arrayLength = n;
                    p.__isInt = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramInt.push(p);
                    this.__data[h] = p;
                    this.__isGenerated && (this[h] = p);
                    break;
                  default:
                    p = new Hg();
                    p.set_name(h);
                    p.type = k;
                    p.__arrayLength = n;
                    0 < n &&
                      ((k = n * n),
                      (k = null != k ? new Float32Array(k) : null),
                      (p.__uniformMatrix = k));
                    p.__isFloat = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramFloat.push(p);
                    if (O.startsWith(h, 'openfl_'))
                      switch (h) {
                        case 'openfl_Alpha':
                          this.__alpha = p;
                          break;
                        case 'openfl_ColorMultiplier':
                          this.__colorMultiplier = p;
                          break;
                        case 'openfl_ColorOffset':
                          this.__colorOffset = p;
                          break;
                        case 'openfl_Matrix':
                          this.__matrix = p;
                          break;
                        case 'openfl_Position':
                          this.__position = p;
                          break;
                        case 'openfl_TextureCoord':
                          this.__textureCoord = p;
                          break;
                        case 'openfl_TextureSize':
                          this.__textureSize = p;
                      }
                    this.__data[h] = p;
                    this.__isGenerated && (this[h] = p);
                }
              }
              h = d.matchedPos();
              c = h.pos + h.len;
            }
          }
        },
        __update: function () {
          null != this.program && this.__updateGL();
        },
        __updateFromBuffer: function (a, b) {
          null != this.program && this.__updateGLFromBuffer(a, b);
        },
        __updateGL: function () {
          for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__updateGL(this.__context, a);
            ++a;
          }
          b = 0;
          for (c = this.__paramBool; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (c = this.__paramFloat; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (c = this.__paramInt; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
        },
        __updateGLFromBuffer: function (a, b) {
          for (var c = 0, d, f, h, k, n, p = 0, g = a.inputCount; p < g; )
            ((n = p++),
              (d = a.inputRefs[n]),
              (f = a.inputs[n]),
              (h = a.inputFilter[n]),
              (k = a.inputMipFilter[n]),
              (n = a.inputWrap[n]),
              null != f && (d.__updateGL(this.__context, c, f, h, k, n), ++c));
          p = this.__context.gl;
          0 < a.paramDataLength
            ? (null == a.paramDataBuffer &&
                (a.paramDataBuffer = p.createBuffer()),
              this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
              Lc.bufferData(p, p.ARRAY_BUFFER, a.paramData, p.DYNAMIC_DRAW))
            : this.__context.__bindGLArrayBuffer(null);
          f = d = c = 0;
          h = a.paramBoolCount;
          k = a.paramFloatCount;
          var q = a.paramData,
            m = null,
            u = null,
            r = null;
          p = 0;
          for (g = a.paramCount; p < g; ) {
            n = p++;
            var l = !1;
            if (n < h) {
              var D = a.paramRefs_Bool[c];
              for (var x = 0, w = a.overrideBoolCount; x < w; ) {
                var z = x++;
                if (D.name == a.overrideBoolNames[z]) {
                  m = a.overrideBoolValues[z];
                  l = !0;
                  break;
                }
              }
              l
                ? D.__updateGL(this.__context, m)
                : D.__updateGLFromBuffer(
                    this.__context,
                    q,
                    a.paramPositions[n],
                    a.paramLengths[n],
                    b,
                  );
              ++c;
            } else if (n < h + k) {
              D = a.paramRefs_Float[d];
              x = 0;
              for (w = a.overrideFloatCount; x < w; )
                if (((z = x++), D.name == a.overrideFloatNames[z])) {
                  u = a.overrideFloatValues[z];
                  l = !0;
                  break;
                }
              l
                ? D.__updateGL(this.__context, u)
                : D.__updateGLFromBuffer(
                    this.__context,
                    q,
                    a.paramPositions[n],
                    a.paramLengths[n],
                    b,
                  );
              ++d;
            } else {
              D = a.paramRefs_Int[f];
              x = 0;
              for (w = a.overrideIntCount; x < w; )
                if (((z = x++), D.name == a.overrideIntNames[z])) {
                  r = a.overrideIntValues[z];
                  l = !0;
                  break;
                }
              l
                ? D.__updateGL(this.__context, r)
                : D.__updateGLFromBuffer(
                    this.__context,
                    q,
                    a.paramPositions[n],
                    a.paramLengths[n],
                    b,
                  );
              ++f;
            }
          }
        },
        get_glFragmentSource: function () {
          return this.__glFragmentSource;
        },
        get_glVertexSource: function () {
          return this.__glVertexSource;
        },
        __class__: Dd,
        __properties__: {
          get_glVertexSource: 'get_glVertexSource',
          get_glFragmentSource: 'get_glFragmentSource',
        },
      };
      var ij = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Dd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.display.DisplayObjectShader'] = ij;
      ij.__name__ = 'openfl.display.DisplayObjectShader';
      ij.__super__ = Dd;
      ij.prototype = v(Dd.prototype, { __class__: ij });
      var Gk = function (a, b) {
        oa.call(this);
        this.name = a;
        this.frame = b;
      };
      g['openfl.display.FrameLabel'] = Gk;
      Gk.__name__ = 'openfl.display.FrameLabel';
      Gk.__super__ = oa;
      Gk.prototype = v(oa.prototype, { __class__: Gk });
      var Ed = function (a) {
        this.__dirty = !0;
        this.__owner = a;
        this.__commands = new sd();
        this.__positionY = this.__positionX = this.__strokePadding = 0;
        this.__renderTransform = new ua();
        this.__usedShaderBuffers = new bb();
        this.__worldTransform = new ua();
        this.__height = this.__width = 0;
        this.__bitmapScale = 1;
        this.__shaderBufferPool = new nb(function () {
          return new jj();
        });
        this.moveTo(0, 0);
      };
      g['openfl.display.Graphics'] = Ed;
      Ed.__name__ = 'openfl.display.Graphics';
      Ed.prototype = {
        beginFill: function (a, b) {
          null == b && (b = 1);
          null == a && (a = 0);
          this.__commands.beginFill(a & 16777215, b);
          0 < b && (this.__visible = !0);
        },
        clear: function () {
          for (var a = this.__usedShaderBuffers.h; null != a; ) {
            var b = a.item;
            a = a.next;
            this.__shaderBufferPool.release(b);
          }
          this.__usedShaderBuffers.clear();
          this.__commands.clear();
          this.__strokePadding = 0;
          null != this.__bounds &&
            (this.set___dirty(!0),
            (this.__transformDirty = !0),
            (this.__bounds = null));
          this.__visible = !1;
          this.__positionY = this.__positionX = 0;
          this.moveTo(0, 0);
        },
        cubicCurveTo: function (a, b, c, d, f, h) {
          var k = this.__findExtrema(this.__positionX, a, c, f),
            n = this.__findExtrema(this.__positionY, b, d, h);
          this.__inflateBounds(
            k.min - this.__strokePadding,
            n.min - this.__strokePadding,
          );
          this.__inflateBounds(
            k.max + this.__strokePadding,
            n.max + this.__strokePadding,
          );
          this.__positionX = f;
          this.__positionY = h;
          this.__commands.cubicCurveTo(a, b, c, d, f, h);
          this.set___dirty(!0);
        },
        curveTo: function (a, b, c, d) {
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          var f =
            (a < c && a > this.__positionX) || (a > c && a < this.__positionX)
              ? c
              : this.__calculateBezierQuadPoint(
                  (this.__positionX - a) / (this.__positionX - 2 * a + c),
                  this.__positionX,
                  a,
                  c,
                );
          var h =
            (b < d && b > this.__positionY) || (b > d && b < this.__positionY)
              ? d
              : this.__calculateBezierQuadPoint(
                  (this.__positionY - b) / (this.__positionY - 2 * b + d),
                  this.__positionY,
                  b,
                  d,
                );
          this.__inflateBounds(
            f - this.__strokePadding,
            h - this.__strokePadding,
          );
          this.__inflateBounds(
            f + this.__strokePadding,
            h + this.__strokePadding,
          );
          this.__positionX = c;
          this.__positionY = d;
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          this.__commands.curveTo(a, b, c, d);
          this.set___dirty(!0);
        },
        drawCircle: function (a, b, c) {
          0 >= c ||
            (this.__inflateBounds(
              a - c - this.__strokePadding,
              b - c - this.__strokePadding,
            ),
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + c + this.__strokePadding,
            ),
            this.__commands.drawCircle(a, b, c),
            this.set___dirty(!0));
        },
        drawRect: function (a, b, c, d) {
          if (0 != c || 0 != d) {
            var f = 0 > c ? -1 : 1,
              h = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * f,
              b - this.__strokePadding * h,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * f,
              b + d + this.__strokePadding * h,
            );
            this.__commands.drawRect(a, b, c, d);
            this.set___dirty(!0);
          }
        },
        drawRoundRect: function (a, b, c, d, f, h) {
          if (0 != c || 0 != d) {
            var k = 0 > c ? -1 : 1,
              n = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * k,
              b - this.__strokePadding * n,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * k,
              b + d + this.__strokePadding * n,
            );
            this.__commands.drawRoundRect(a, b, c, d, f, h);
            this.set___dirty(!0);
          }
        },
        drawRoundRectComplex: function (a, b, c, d, f, h, k, n) {
          if (!(0 >= c || 0 >= d)) {
            this.__inflateBounds(
              a - this.__strokePadding,
              b - this.__strokePadding,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + d + this.__strokePadding,
            );
            var p = a + c,
              g = b + d;
            c = c < d ? 2 * c : 2 * d;
            f < c || (f = c);
            h < c || (h = c);
            k < c || (k = c);
            n < c || (n = c);
            c = 1 - Math.sin((Math.PI / 180) * 45);
            d = 1 - Math.tan((Math.PI / 180) * 22.5);
            var q = n * c,
              m = n * d;
            this.moveTo(p, g - n);
            this.curveTo(p, g - m, p - q, g - q);
            this.curveTo(p - m, g, p - n, g);
            q = k * c;
            m = k * d;
            this.lineTo(a + k, g);
            this.curveTo(a + m, g, a + q, g - q);
            this.curveTo(a, g - m, a, g - k);
            q = f * c;
            m = f * d;
            this.lineTo(a, b + f);
            this.curveTo(a, b + m, a + q, b + q);
            this.curveTo(a + m, b, a + f, b);
            q = h * c;
            m = h * d;
            this.lineTo(p - h, b);
            this.curveTo(p - m, b, p - q, b + q);
            this.curveTo(p, b + m, p, b + h);
            this.lineTo(p, g - n);
            this.set___dirty(!0);
          }
        },
        endFill: function () {
          this.__commands.endFill();
        },
        lineStyle: function (a, b, c, d, f, h, k, n) {
          null == n && (n = 3);
          null == f && (f = 2);
          null == d && (d = !1);
          null == c && (c = 1);
          null == b && (b = 0);
          null == h && (h = 1);
          null == k && (k = 2);
          null != a &&
            (1 == k
              ? a > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a))
              : a / 2 > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a / 2)));
          this.__commands.lineStyle(a, b, c, d, f, h, k, n);
          null != a && (this.__visible = !0);
        },
        lineTo: function (a, b) {
          isFinite(a) &&
            isFinite(b) &&
            (this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            (this.__positionX = a),
            (this.__positionY = b),
            this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + 2 * this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            this.__commands.lineTo(a, b),
            this.set___dirty(!0));
        },
        moveTo: function (a, b) {
          this.__positionX = a;
          this.__positionY = b;
          this.__commands.moveTo(a, b);
        },
        readGraphicsData: function (a) {
          null == a && (a = !0);
          var b = la.toObjectVector(null);
          this.__owner.__readGraphicsData(b, a);
          return b;
        },
        __calculateBezierCubicPoint: function (a, b, c, d, f) {
          var h = 1 - a;
          return (
            b * h * h * h +
            3 * c * a * h * h +
            3 * d * h * a * a +
            f * a * a * a
          );
        },
        __calculateBezierQuadPoint: function (a, b, c, d) {
          var f = 1 - a;
          return f * f * b + 2 * f * a * c + a * a * d;
        },
        __cleanup: function () {
          null != this.__bounds &&
            null != this.__canvas &&
            (this.set___dirty(!0), (this.__transformDirty = !0));
          this.__context = this.__canvas = this.__bitmap = null;
        },
        __getBounds: function (a, b) {
          if (null != this.__bounds) {
            var c = na.__pool.get();
            this.__bounds.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            na.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d) {
          if (null == this.__bounds) return !1;
          var f = d.a * d.d - d.b * d.c,
            h =
              0 == f ? -d.tx : (1 / f) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          f = d.a * d.d - d.b * d.c;
          a = 0 == f ? -d.ty : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a));
          return h > this.__bounds.x &&
            a > this.__bounds.y &&
            this.__bounds.contains(h, a)
            ? c
              ? z.hitTest(this, h, a)
              : !0
            : !1;
        },
        __findExtrema: function (a, b, c, d) {
          var f = [];
          if (
            !((b < d && b > a) || (b > d && b < a)) ||
            !((c < d && c > a) || (c > d && c < a))
          ) {
            var h = -a + 3 * b + d - 3 * c,
              k = 2 * a - 4 * b + 2 * c,
              n = b - a,
              p = k * k - 4 * h * n;
            0 == h
              ? ((h = -n / k),
                0 < h &&
                  1 > h &&
                  f.push(this.__calculateBezierCubicPoint(h, a, b, c, d)))
              : 0 <= p &&
                ((n = (-k + Math.sqrt(p)) / (2 * h)),
                (h = (-k - Math.sqrt(p)) / (2 * h)),
                0 < n &&
                  1 > n &&
                  f.push(this.__calculateBezierCubicPoint(n, a, b, c, d)),
                0 < h &&
                  1 > h &&
                  f.push(this.__calculateBezierCubicPoint(h, a, b, c, d)));
          }
          b = a;
          f.push(d);
          for (d = 0; d < f.length; )
            ((c = f[d]), ++d, c < b && (b = c), c > a && (a = c));
          return { min: b, max: a };
        },
        __inflateBounds: function (a, b) {
          null == this.__bounds
            ? ((this.__bounds = new na(a, b, 0, 0)),
              (this.__transformDirty = !0))
            : (a < this.__bounds.x &&
                ((this.__bounds.width += this.__bounds.x - a),
                (this.__bounds.x = a),
                (this.__transformDirty = !0)),
              b < this.__bounds.y &&
                ((this.__bounds.height += this.__bounds.y - b),
                (this.__bounds.y = b),
                (this.__transformDirty = !0)),
              a > this.__bounds.x + this.__bounds.width &&
                (this.__bounds.width = a - this.__bounds.x),
              b > this.__bounds.y + this.__bounds.height &&
                (this.__bounds.height = b - this.__bounds.y));
        },
        __readGraphicsData: function (a) {
          for (
            var b = new ue(this.__commands),
              c = null,
              d,
              f = 0,
              h = this.__commands.types;
            f < h.length;

          ) {
            d = h[f];
            ++f;
            switch (d._hx_index) {
              case 4:
              case 5:
              case 6:
              case 7:
              case 9:
              case 10:
              case 17:
              case 18:
                null == c && (c = new kj());
                break;
              default:
                null != c && (a.push(c), (c = null));
            }
            switch (d._hx_index) {
              case 0:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.BEGIN_BITMAP_FILL;
                d = b;
                a.push(
                  new lj(
                    d.buffer.o[d.oPos],
                    d.buffer.o[d.oPos + 1],
                    d.buffer.b[d.bPos],
                    d.buffer.b[d.bPos + 1],
                  ),
                );
                break;
              case 1:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.BEGIN_FILL;
                d = b;
                a.push(new xh(d.buffer.i[d.iPos], d.buffer.f[d.fPos]));
                break;
              case 2:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.BEGIN_GRADIENT_FILL;
                d = b;
                a.push(
                  new mj(
                    d.buffer.o[d.oPos],
                    d.buffer.ii[d.iiPos],
                    d.buffer.ff[d.ffPos],
                    d.buffer.ii[d.iiPos + 1],
                    d.buffer.o[d.oPos + 1],
                    d.buffer.o[d.oPos + 2],
                    d.buffer.o[d.oPos + 3],
                    d.buffer.f[d.fPos],
                  ),
                );
                break;
              case 3:
                break;
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.CUBIC_CURVE_TO;
                d = b;
                c.cubicCurveTo(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.f[d.fPos + 5],
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.CURVE_TO;
                d = b;
                c.curveTo(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_CIRCLE;
                d = b;
                c.__drawCircle(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_ELLIPSE;
                d = b;
                c.__drawEllipse(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_RECT;
                d = b;
                c.__drawRect(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_ROUND_RECT;
                d = b;
                c.__drawRoundRect(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  null != d.buffer.o[d.oPos]
                    ? d.buffer.o[d.oPos]
                    : d.buffer.f[d.fPos + 4],
                );
                break;
              case 13:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.END_FILL;
                a.push(new nj());
                break;
              case 14:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.LINE_BITMAP_STYLE;
                c = null;
                break;
              case 15:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.LINE_GRADIENT_STYLE;
                break;
              case 16:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.LINE_STYLE;
                var k = b;
                d = new oj(
                  k.buffer.o[k.oPos],
                  k.buffer.b[k.bPos],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.o[k.oPos + 2],
                  k.buffer.o[k.oPos + 3],
                  k.buffer.f[k.fPos + 1],
                );
                d.fill = new xh(k.buffer.i[k.iPos], k.buffer.f[k.fPos]);
                a.push(d);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.LINE_TO;
                d = b;
                c.lineTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.MOVE_TO;
                d = b;
                c.moveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          null != c && a.push(c);
        },
        __update: function (a, b) {
          if (
            !(
              null == this.__bounds ||
              0 >= this.__bounds.width ||
              0 >= this.__bounds.height
            )
          ) {
            var c = this.__owner.__renderTransform;
            if (null != c) {
              var d = b,
                f = b;
              null == this.__owner.__worldScale9Grid &&
                ((d =
                  0 == c.b ? Math.abs(c.a) : Math.sqrt(c.a * c.a + c.b * c.b)),
                (f =
                  0 == c.c ? Math.abs(c.d) : Math.sqrt(c.c * c.c + c.d * c.d)),
                null != a &&
                  ((d =
                    0 == a.b ? d * a.a : d * Math.sqrt(a.a * a.a + a.b * a.b)),
                  (f =
                    0 == a.c
                      ? f * a.d
                      : f * Math.sqrt(a.c * a.c + a.d * a.d))));
              a = this.__bounds.width * d;
              f *= this.__bounds.height;
              if (1 > a || 1 > f)
                ((1 <= this.__width || 1 <= this.__height) &&
                  this.set___dirty(!0),
                  (this.__height = this.__width = 0));
              else {
                null != Ed.maxTextureWidth &&
                  a > Ed.maxTextureWidth &&
                  (a = Ed.maxTextureWidth);
                null != Ed.maxTextureWidth &&
                  f > Ed.maxTextureHeight &&
                  (f = Ed.maxTextureHeight);
                if (null != this.__owner.__worldScale9Grid) {
                  this.__renderTransform.a = b;
                  this.__renderTransform.d = b;
                  d = 1 / b;
                  var h = 1 / b;
                } else
                  ((this.__renderTransform.a = a / this.__bounds.width),
                    (this.__renderTransform.d = f / this.__bounds.height),
                    (d = 1 / this.__renderTransform.a),
                    (h = 1 / this.__renderTransform.d));
                this.__worldTransform.a = d * c.a;
                this.__worldTransform.b = d * c.b;
                this.__worldTransform.c = h * c.c;
                this.__worldTransform.d = h * c.d;
                h = this.__bounds.x;
                var k = this.__bounds.y;
                d = h * c.a + k * c.c + c.tx;
                c = h * c.b + k * c.d + c.ty;
                1 < b
                  ? ((b = 1 / b),
                    (this.__worldTransform.tx = Math.round(d / b) * b),
                    (this.__worldTransform.ty = Math.round(c / b) * b))
                  : ((this.__worldTransform.tx = Math.round(d)),
                    (this.__worldTransform.ty = Math.round(c)));
                b = this.__worldTransform;
                h = b.a * b.d - b.b * b.c;
                this.__renderTransform.tx =
                  0 == h
                    ? -b.tx
                    : (1 / h) * (b.c * (b.ty - c) + b.d * (d - b.tx));
                b = this.__worldTransform;
                h = b.a * b.d - b.b * b.c;
                this.__renderTransform.ty =
                  0 == h
                    ? -b.ty
                    : (1 / h) * (b.a * (c - b.ty) + b.b * (b.tx - d));
                a = Math.ceil(a + 1);
                f = Math.ceil(f + 1);
                (a == this.__width && f == this.__height) ||
                  this.set___dirty(!0);
                this.__width = a;
                this.__height = f;
              }
            }
          }
        },
        set___dirty: function (a) {
          if (a && null != this.__owner) {
            var b = this.__owner;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          a && (this.__hardwareDirty = this.__softwareDirty = !0);
          return (this.__dirty = a);
        },
        __class__: Ed,
        __properties__: { set___dirty: 'set___dirty' },
      };
      var yh = function () {};
      g['openfl.display.IGraphicsFill'] = yh;
      yh.__name__ = 'openfl.display.IGraphicsFill';
      yh.__isInterface__ = !0;
      var af = function () {};
      g['openfl.display.IGraphicsData'] = af;
      af.__name__ = 'openfl.display.IGraphicsData';
      af.__isInterface__ = !0;
      af.prototype = { __class__: af };
      var lj = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !0);
        this.bitmapData = a;
        this.matrix = b;
        this.repeat = c;
        this.smooth = d;
        this.__graphicsDataType = 4;
        this.__graphicsFillType = 2;
      };
      g['openfl.display.GraphicsBitmapFill'] = lj;
      lj.__name__ = 'openfl.display.GraphicsBitmapFill';
      lj.__interfaces__ = [yh, af];
      lj.prototype = { __class__: lj };
      var nj = function () {
        this.__graphicsDataType = 5;
        this.__graphicsFillType = 3;
      };
      g['openfl.display.GraphicsEndFill'] = nj;
      nj.__name__ = 'openfl.display.GraphicsEndFill';
      nj.__interfaces__ = [yh, af];
      nj.prototype = { __class__: nj };
      var mj = function (a, b, c, d, f, h, k, n) {
        null == n && (n = 0);
        null == a && (a = 0);
        null == h && (h = 0);
        null == k && (k = 1);
        this.type = a;
        this.colors = b;
        this.alphas = c;
        this.ratios = d;
        this.matrix = f;
        this.spreadMethod = h;
        this.interpolationMethod = k;
        this.focalPointRatio = n;
        this.__graphicsDataType = 2;
        this.__graphicsFillType = 1;
      };
      g['openfl.display.GraphicsGradientFill'] = mj;
      mj.__name__ = 'openfl.display.GraphicsGradientFill';
      mj.__interfaces__ = [yh, af];
      mj.prototype = { __class__: mj };
      var ml = function () {};
      g['openfl.display.IGraphicsPath'] = ml;
      ml.__name__ = 'openfl.display.IGraphicsPath';
      ml.__isInterface__ = !0;
      var kj = function (a, b, c) {
        null == c && (c = 0);
        this.commands = a;
        this.data = b;
        this.winding = c;
        this.__graphicsDataType = 3;
      };
      g['openfl.display.GraphicsPath'] = kj;
      kj.__name__ = 'openfl.display.GraphicsPath';
      kj.__interfaces__ = [ml, af];
      kj.prototype = {
        cubicCurveTo: function (a, b, c, d, f, h) {
          null == this.commands && (this.commands = la.toIntVector(null));
          null == this.data && (this.data = la.toFloatVector(null));
          this.commands.push(6);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
          this.data.push(f);
          this.data.push(h);
        },
        curveTo: function (a, b, c, d) {
          null == this.commands && (this.commands = la.toIntVector(null));
          null == this.data && (this.data = la.toFloatVector(null));
          this.commands.push(3);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
        },
        lineTo: function (a, b) {
          null == this.commands && (this.commands = la.toIntVector(null));
          null == this.data && (this.data = la.toFloatVector(null));
          this.commands.push(2);
          this.data.push(a);
          this.data.push(b);
        },
        moveTo: function (a, b) {
          null == this.commands && (this.commands = la.toIntVector(null));
          null == this.data && (this.data = la.toFloatVector(null));
          this.commands.push(1);
          this.data.push(a);
          this.data.push(b);
        },
        __drawCircle: function (a, b, c) {
          this.__drawRoundRect(a - c, b - c, 2 * c, 2 * c, 2 * c, 2 * c);
        },
        __drawEllipse: function (a, b, c, d) {
          this.__drawRoundRect(a, b, c, d, c, d);
        },
        __drawRect: function (a, b, c, d) {
          this.moveTo(a, b);
          this.lineTo(a + c, b);
          this.lineTo(a + c, b + d);
          this.lineTo(a, b + d);
          this.lineTo(a, b);
        },
        __drawRoundRect: function (a, b, c, d, f, h) {
          f *= 0.5;
          h *= 0.5;
          f > c / 2 && (f = c / 2);
          h > d / 2 && (h = d / 2);
          c = a + c;
          d = b + d;
          var k = -f + 0.7071067811865476 * f,
            n = -f + 0.41421356237309503 * f,
            p = -h + 0.7071067811865476 * h,
            g = -h + 0.41421356237309503 * h;
          this.moveTo(c, d - h);
          this.curveTo(c, d + g, c + k, d + p);
          this.curveTo(c + n, d, c - f, d);
          this.lineTo(a + f, d);
          this.curveTo(a - n, d, a - k, d + p);
          this.curveTo(a, d + g, a, d - h);
          this.lineTo(a, b + h);
          this.curveTo(a, b - g, a - k, b - p);
          this.curveTo(a - n, b, a + f, b);
          this.lineTo(c - f, b);
          this.curveTo(c + n, b, c + k, b - p);
          this.curveTo(c, b - g, c, b + h);
          this.lineTo(c, d - h);
        },
        __class__: kj,
      };
      var pj = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Dd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.display.GraphicsShader'] = pj;
      pj.__name__ = 'openfl.display.GraphicsShader';
      pj.__super__ = Dd;
      pj.prototype = v(Dd.prototype, { __class__: pj });
      var xh = function (a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.alpha = b;
        this.color = a;
        this.__graphicsDataType = 1;
        this.__graphicsFillType = 0;
      };
      g['openfl.display.GraphicsSolidFill'] = xh;
      xh.__name__ = 'openfl.display.GraphicsSolidFill';
      xh.__interfaces__ = [yh, af];
      xh.prototype = { __class__: xh };
      var nl = function () {};
      g['openfl.display.IGraphicsStroke'] = nl;
      nl.__name__ = 'openfl.display.IGraphicsStroke';
      nl.__isInterface__ = !0;
      var oj = function (a, b, c, d, f, h, k) {
        null == h && (h = 3);
        null == f && (f = 2);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = !1);
        null == a && (a = NaN);
        this.caps = d;
        this.fill = k;
        this.joints = f;
        this.miterLimit = h;
        this.pixelHinting = b;
        this.scaleMode = c;
        this.thickness = a;
        this.__graphicsDataType = 0;
      };
      g['openfl.display.GraphicsStroke'] = oj;
      oj.__name__ = 'openfl.display.GraphicsStroke';
      oj.__interfaces__ = [nl, af];
      oj.prototype = { __class__: oj };
      var Hk = function () {};
      g['openfl.display.ITileContainer'] = Hk;
      Hk.__name__ = 'openfl.display.ITileContainer';
      Hk.__isInterface__ = !0;
      var si = function (a) {
        null == a && (a = 80);
        this.quality = a;
      };
      g['openfl.display.JPEGEncoderOptions'] = si;
      si.__name__ = 'openfl.display.JPEGEncoderOptions';
      si.prototype = { __class__: si };
      var Ml = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bevel';
              case 1:
                return 'miter';
              case 2:
                return 'round';
              default:
                return null;
            }
          },
        },
        Ik = function () {
          lb.call(this);
          this.__drawableType = 4;
          this.contentLoaderInfo = te.create(this);
          this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
          this.__unloaded = !0;
        };
      g['openfl.display.Loader'] = Ik;
      Ik.__name__ = 'openfl.display.Loader';
      Ik.__super__ = lb;
      Ik.prototype = v(lb.prototype, {
        addChild: function (a) {
          throw new Vb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        addChildAt: function (a, b) {
          throw new Vb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChild: function (a) {
          if (a == this.content)
            return lb.prototype.removeChild.call(this, this.content);
          throw new Vb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChildAt: function (a) {
          throw new Vb(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        __class__: Ik,
      });
      var te = function () {
        oa.call(this);
        this.applicationDomain = Ig.currentDomain;
        this.bytesTotal = this.bytesLoaded = 0;
        this.childAllowsParent = !0;
        this.parameters = {};
      };
      g['openfl.display.LoaderInfo'] = te;
      te.__name__ = 'openfl.display.LoaderInfo';
      te.create = function (a) {
        var b = new te();
        b.uncaughtErrorEvents = new qj();
        null != a ? (b.loader = a) : (b.url = te.__rootURL);
        return b;
      };
      te.__super__ = oa;
      te.prototype = v(oa.prototype, {
        __complete: function () {
          this.__completed ||
            (this.bytesLoaded < this.bytesTotal &&
              (this.bytesLoaded = this.bytesTotal),
            this.__update(this.bytesLoaded, this.bytesTotal),
            (this.__completed = !0),
            this.dispatchEvent(new wa('complete')));
        },
        __update: function (a, b) {
          this.bytesLoaded = a;
          this.bytesTotal = b;
          this.dispatchEvent(new Vf('progress', !1, !1, a, b));
        },
        __class__: te,
      });
      var Af = function () {
        ka.call(this);
        this.__enabled = !0;
      };
      g['openfl.display.MovieClip'] = Af;
      Af.__name__ = 'openfl.display.MovieClip';
      Af.__super__ = ka;
      Af.prototype = v(ka.prototype, {
        gotoAndStop: function (a, b) {
          null != this.__timeline && this.__timeline.__gotoAndStop(a, b);
        },
        __enterFrame: function (a) {
          null != this.__timeline && this.__timeline.__enterFrame(a);
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __tabTest: function (a) {
          this.__enabled && ka.prototype.__tabTest.call(this, a);
        },
        __onMouseDown: function (a) {
          this.__enabled && this.__hasDown && this.gotoAndStop('_down');
          this.__mouseIsDown = !0;
          null != this.stage &&
            this.stage.addEventListener(
              'mouseUp',
              l(this, this.__onMouseUp),
              !0,
            );
        },
        __onMouseUp: function (a) {
          this.__mouseIsDown = !1;
          null != this.stage &&
            this.stage.removeEventListener(
              'mouseUp',
              l(this, this.__onMouseUp),
            );
          this.__buttonMode &&
            (Sd.__eq(a.target, this) && this.__enabled && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__enabled && this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOut: function (a) {
          this.__enabled &&
            (this.__mouseIsDown && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOver: function (a) {
          this.__enabled && this.__hasOver && this.gotoAndStop('_over');
        },
        set_buttonMode: function (a) {
          if (this.__buttonMode != a) {
            if (a) {
              this.__hasUp = this.__hasOver = this.__hasDown = !1;
              for (var b = 0, c = this.get_currentLabels(); b < c.length; ) {
                var d = c[b];
                ++b;
                switch (d.name) {
                  case '_down':
                    this.__hasDown = !0;
                    break;
                  case '_over':
                    this.__hasOver = !0;
                    break;
                  case '_up':
                    this.__hasUp = !0;
                }
              }
              if (this.__hasDown || this.__hasOver || this.__hasUp)
                (this.addEventListener('rollOver', l(this, this.__onRollOver)),
                  this.addEventListener('rollOut', l(this, this.__onRollOut)),
                  this.addEventListener(
                    'mouseDown',
                    l(this, this.__onMouseDown),
                  ));
            } else
              (this.removeEventListener('rollOver', l(this, this.__onRollOver)),
                this.removeEventListener('rollOut', l(this, this.__onRollOut)),
                this.removeEventListener(
                  'mouseDown',
                  l(this, this.__onMouseDown),
                ));
            this.__buttonMode = a;
          }
          return a;
        },
        get_currentLabels: function () {
          return null != this.__timeline
            ? this.__timeline.__currentLabels.slice()
            : [];
        },
        __class__: Af,
        __properties__: v(ka.prototype.__properties__, {
          get_currentLabels: 'get_currentLabels',
        }),
      });
      var db = function (a, b) {
        qd.call(this);
        this.__context3D = a;
        this.__context = a.__context;
        this.__gl = this.gl = a.__context.webgl;
        this.__defaultRenderTarget = b;
        this.__flipped = null == this.__defaultRenderTarget;
        null == Ed.maxTextureWidth &&
          (Ed.maxTextureWidth = Ed.maxTextureHeight =
            this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
        this.__matrix = pb._new();
        this.__values = [];
        this.__softwareRenderer = new Ue(null);
        this.__type = 'opengl';
        this.__setBlendMode(10);
        this.__context3D.__setGLBlend(!0);
        this.__clipRects = [];
        this.__maskObjects = [];
        this.__numClipRects = 0;
        this.__projection = pb._new();
        this.__projectionFlipped = pb._new();
        this.__stencilReference = 0;
        this.__tempRect = new na();
        this.__defaultDisplayShader = new ij();
        this.__defaultGraphicsShader = new pj();
        this.__defaultShader = this.__defaultDisplayShader;
        this.__initShader(this.__defaultShader);
        this.__scrollRectMasks = new nb(function () {
          return new md();
        });
        this.__maskShader = new Wf();
      };
      g['openfl.display.OpenGLRenderer'] = db;
      db.__name__ = 'openfl.display.OpenGLRenderer';
      db.__super__ = qd;
      db.prototype = v(qd.prototype, {
        applyAlpha: function (a) {
          db.__alphaValue[0] = a * this.__worldAlpha;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride(
                'openfl_Alpha',
                db.__alphaValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__alpha &&
              (this.__currentShader.__alpha.value = db.__alphaValue);
        },
        applyBitmapData: function (a, b, c) {
          null == c && (c = !1);
          null != this.__currentShaderBuffer
            ? null != a &&
              ((db.__textureSizeValue[0] = a.__textureWidth),
              (db.__textureSizeValue[1] = a.__textureHeight),
              this.__currentShaderBuffer.addFloatOverride(
                'openfl_TextureSize',
                db.__textureSizeValue,
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__bitmap &&
                ((this.__currentShader.__bitmap.input = a),
                (this.__currentShader.__bitmap.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__bitmap.mipFilter = 2),
                (this.__currentShader.__bitmap.wrap = c ? 2 : 0)),
              null != this.__currentShader.__texture &&
                ((this.__currentShader.__texture.input = a),
                (this.__currentShader.__texture.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__texture.mipFilter = 2),
                (this.__currentShader.__texture.wrap = c ? 2 : 0)),
              null != this.__currentShader.__textureSize &&
                (null != a
                  ? ((db.__textureSizeValue[0] = a.__textureWidth),
                    (db.__textureSizeValue[1] = a.__textureHeight),
                    (this.__currentShader.__textureSize.value =
                      db.__textureSizeValue))
                  : (this.__currentShader.__textureSize.value = null)));
        },
        applyColorTransform: function (a) {
          var b = null != a && !a.__isDefault(!0);
          this.applyHasColorTransform(b);
          b
            ? (a.__setArrays(
                db.__colorMultipliersValue,
                db.__colorOffsetsValue,
              ),
              null != this.__currentShaderBuffer
                ? (this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorMultiplier',
                    db.__colorMultipliersValue,
                  ),
                  this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorOffset',
                    db.__colorOffsetsValue,
                  ))
                : null != this.__currentShader &&
                  (null != this.__currentShader.__colorMultiplier &&
                    (this.__currentShader.__colorMultiplier.value =
                      db.__colorMultipliersValue),
                  null != this.__currentShader.__colorOffset &&
                    (this.__currentShader.__colorOffset.value =
                      db.__colorOffsetsValue)))
            : null != this.__currentShaderBuffer
              ? (this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorMultiplier',
                  db.__emptyColorValue,
                ),
                this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorOffset',
                  db.__emptyColorValue,
                ))
              : null != this.__currentShader &&
                (null != this.__currentShader.__colorMultiplier &&
                  (this.__currentShader.__colorMultiplier.value =
                    db.__emptyColorValue),
                null != this.__currentShader.__colorOffset &&
                  (this.__currentShader.__colorOffset.value =
                    db.__emptyColorValue));
        },
        applyHasColorTransform: function (a) {
          db.__hasColorTransformValue[0] = a;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addBoolOverride(
                'openfl_HasColorTransform',
                db.__hasColorTransformValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value =
                db.__hasColorTransformValue);
        },
        applyMatrix: function (a) {
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride('openfl_Matrix', a)
            : null != this.__currentShader &&
              null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = a);
        },
        setShader: function (a) {
          this.__currentShaderBuffer = null;
          this.__currentShader != a &&
            (null == a
              ? ((this.__currentShader = null),
                this.__context3D.setProgram(null))
              : ((this.__currentShader = a),
                this.__initShader(a),
                this.__context3D.setProgram(a.program),
                this.__context3D.__flushGLProgram(),
                this.__currentShader.__enable(),
                (this.__context3D.__state.shader = a)));
        },
        setViewport: function () {
          this.__gl.viewport(
            this.__offsetX,
            this.__offsetY,
            this.__displayWidth,
            this.__displayHeight,
          );
        },
        updateShader: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__position &&
              (this.__currentShader.__position.__useArray = !0),
            null != this.__currentShader.__textureCoord &&
              (this.__currentShader.__textureCoord.__useArray = !0),
            this.__context3D.setProgram(this.__currentShader.program),
            this.__context3D.__flushGLProgram(),
            this.__context3D.__flushGLTextures(),
            this.__currentShader.__update());
        },
        useAlphaArray: function () {
          null != this.__currentShader &&
            null != this.__currentShader.__alpha &&
            (this.__currentShader.__alpha.__useArray = !0);
        },
        useColorTransformArray: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__colorMultiplier &&
              (this.__currentShader.__colorMultiplier.__useArray = !0),
            null != this.__currentShader.__colorOffset &&
              (this.__currentShader.__colorOffset.__useArray = !0));
        },
        __clear: function () {
          null == this.__stage || this.__stage.__transparent
            ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1)
            : this.__context3D.clear(
                this.__stage.__colorSplit[0],
                this.__stage.__colorSplit[1],
                this.__stage.__colorSplit[2],
                1,
                0,
                0,
                1,
              );
          this.__cleared = !0;
        },
        __clearShader: function () {
          null != this.__currentShader &&
            (null == this.__currentShaderBuffer
              ? null != this.__currentShader.__bitmap &&
                (this.__currentShader.__bitmap.input = null)
              : this.__currentShaderBuffer.clearOverride(),
            null != this.__currentShader.__texture &&
              (this.__currentShader.__texture.input = null),
            null != this.__currentShader.__textureSize &&
              (this.__currentShader.__textureSize.value = null),
            null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value = null),
            null != this.__currentShader.__position &&
              (this.__currentShader.__position.value = null),
            null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = null),
            this.__currentShader.__clearUseArray());
        },
        __copyShader: function (a) {
          this.__currentShader = a.__currentShader;
          this.__currentShaderBuffer = a.__currentShaderBuffer;
          this.__currentDisplayShader = a.__currentDisplayShader;
          this.__currentGraphicsShader = a.__currentGraphicsShader;
        },
        __getMatrix: function (a, b) {
          var c = ua.__pool.get();
          c.copyFrom(a);
          c.concat(this.__worldTransform);
          if (
            0 == b ||
            (1 == b &&
              0 == c.b &&
              0 == c.c &&
              1.001 > c.a &&
              0.999 < c.a &&
              1.001 > c.d &&
              0.999 < c.d)
          )
            ((c.tx = Math.round(c.tx)), (c.ty = Math.round(c.ty)));
          pb.identity(this.__matrix);
          pb.set(this.__matrix, 0, c.a);
          pb.set(this.__matrix, 1, c.b);
          pb.set(this.__matrix, 4, c.c);
          pb.set(this.__matrix, 5, c.d);
          pb.set(this.__matrix, 12, c.tx);
          pb.set(this.__matrix, 13, c.ty);
          pb.append(
            this.__matrix,
            this.__flipped ? this.__projectionFlipped : this.__projection,
          );
          this.__values[0] = pb.get(this.__matrix, 0);
          this.__values[1] = pb.get(this.__matrix, 1);
          this.__values[2] = pb.get(this.__matrix, 2);
          this.__values[3] = pb.get(this.__matrix, 3);
          this.__values[4] = pb.get(this.__matrix, 4);
          this.__values[5] = pb.get(this.__matrix, 5);
          this.__values[6] = pb.get(this.__matrix, 6);
          this.__values[7] = pb.get(this.__matrix, 7);
          this.__values[8] = pb.get(this.__matrix, 8);
          this.__values[9] = pb.get(this.__matrix, 9);
          this.__values[10] = pb.get(this.__matrix, 10);
          this.__values[11] = pb.get(this.__matrix, 11);
          this.__values[12] = pb.get(this.__matrix, 12);
          this.__values[13] = pb.get(this.__matrix, 13);
          this.__values[14] = pb.get(this.__matrix, 14);
          this.__values[15] = pb.get(this.__matrix, 15);
          ua.__pool.release(c);
          return this.__values;
        },
        __initShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultShader;
        },
        __initDisplayShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultDisplayShader;
        },
        __initGraphicsShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultGraphicsShader;
        },
        __initShaderBuffer: function (a) {
          return null != a
            ? this.__initGraphicsShader(a.shader)
            : this.__defaultGraphicsShader;
        },
        __popMask: function () {
          if (0 != this.__stencilReference) {
            var a = this.__maskObjects.pop();
            1 < this.__stencilReference
              ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  255,
                ),
                this.__context3D.setColorMask(!1, !1, !1, !1),
                this.__renderDrawableMask(a),
                this.__stencilReference--,
                this.__context3D.setStencilActions(2, 1, 5, 5, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  0,
                ),
                this.__context3D.setColorMask(!0, !0, !0, !0))
              : ((this.__stencilReference = 0),
                this.__context3D.setStencilActions(),
                this.__context3D.setStencilReferenceValue(0, 0, 0));
          }
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? (this.__scrollRectMasks.release(
                  this.__maskObjects[this.__maskObjects.length - 1],
                ),
                this.__popMask())
              : this.__popMaskRect());
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            0 < this.__numClipRects
              ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
              : this.__scissorRect());
        },
        __pushMask: function (a) {
          0 == this.__stencilReference &&
            (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4),
            (this.__updatedStencil = !0));
          this.__context3D.setStencilActions(2, 1, 2, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            255,
          );
          this.__context3D.setColorMask(!1, !1, !1, !1);
          this.__renderDrawableMask(a);
          this.__maskObjects.push(a);
          this.__stencilReference++;
          this.__context3D.setStencilActions(2, 1, 5, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            0,
          );
          this.__context3D.setColorMask(!0, !0, !0, !0);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? ((b = this.__scrollRectMasks.get()),
                b.get_graphics().clear(),
                b.get_graphics().beginFill(65280),
                b
                  .get_graphics()
                  .drawRect(
                    a.__scrollRect.x,
                    a.__scrollRect.y,
                    a.__scrollRect.width,
                    a.__scrollRect.height,
                  ),
                b.__renderTransform.copyFrom(a.__renderTransform),
                this.__pushMask(b))
              : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new na());
          var c = ua.__pool.get();
          c.copyFrom(b);
          c.concat(this.__worldTransform);
          b = this.__clipRects[this.__numClipRects];
          a.__transform(b, c);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            b.__contract(a.x, a.y, a.width, a.height));
          0 > b.height && (b.height = 0);
          0 > b.width && (b.width = 0);
          ua.__pool.release(c);
          this.__scissorRect(b);
          this.__numClipRects++;
        },
        __render: function (a) {
          this.__context3D.setColorMask(!0, !0, !0, !0);
          this.__context3D.setCulling(3);
          this.__context3D.setDepthTest(!1, 0);
          this.__context3D.setStencilActions();
          this.__context3D.setStencilReferenceValue(0, 0, 0);
          this.__context3D.setScissorRectangle(null);
          this.__blendMode = null;
          this.__setBlendMode(10);
          if (null == this.__defaultRenderTarget) {
            if (
              (this.__context3D.__backBufferWantsBestResolution
                ? db.__scissorRectangle.setTo(
                    this.__offsetX / this.__pixelRatio,
                    this.__offsetY / this.__pixelRatio,
                    this.__displayWidth / this.__pixelRatio,
                    this.__displayHeight / this.__pixelRatio,
                  )
                : db.__scissorRectangle.setTo(
                    this.__offsetX,
                    this.__offsetY,
                    this.__displayWidth,
                    this.__displayHeight,
                  ),
              this.__context3D.setScissorRectangle(db.__scissorRectangle),
              (this.__upscaled =
                1 != this.__worldTransform.a || 1 != this.__worldTransform.d),
              this.__renderDrawable(a),
              0 < this.__offsetX || 0 < this.__offsetY)
            )
              (0 < this.__offsetX &&
                (db.__scissorRectangle.setTo(
                  0,
                  0,
                  this.__offsetX,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(db.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                db.__scissorRectangle.setTo(
                  this.__offsetX + this.__displayWidth,
                  0,
                  this.__width,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(db.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                0 < this.__offsetY &&
                  (db.__scissorRectangle.setTo(
                    0,
                    0,
                    this.__width,
                    this.__offsetY,
                  ),
                  this.__context3D.setScissorRectangle(db.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                  db.__scissorRectangle.setTo(
                    0,
                    this.__offsetY + this.__displayHeight,
                    this.__width,
                    this.__height,
                  ),
                  this.__context3D.setScissorRectangle(db.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                this.__context3D.setScissorRectangle(null));
          } else {
            this.__context3D.__backBufferWantsBestResolution
              ? db.__scissorRectangle.setTo(
                  this.__offsetX / this.__pixelRatio,
                  this.__offsetY / this.__pixelRatio,
                  this.__displayWidth / this.__pixelRatio,
                  this.__displayHeight / this.__pixelRatio,
                )
              : db.__scissorRectangle.setTo(
                  this.__offsetX,
                  this.__offsetY,
                  this.__displayWidth,
                  this.__displayHeight,
                );
            this.__context3D.setScissorRectangle(db.__scissorRectangle);
            var b = a.__mask,
              c = a.__scrollRect;
            a.__mask = null;
            a.__scrollRect = null;
            this.__renderDrawable(a);
            a.__mask = b;
            a.__scrollRect = c;
          }
          this.__context3D.present();
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                rj.renderDrawable(a, this);
                break;
              case 2:
                Vd.renderDrawable(a, this);
                break;
              case 3:
                Xf.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                sj.renderDrawable(a, this);
                break;
              case 6:
                tj.renderDrawable(a, this);
                break;
              case 7:
                bf.renderDrawable(a, this);
                break;
              case 8:
                Wd.renderDrawable(a, this);
                break;
              case 9:
                V.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                rj.renderDrawableMask(a, this);
                break;
              case 2:
                Vd.renderDrawableMask(a, this);
                break;
              case 3:
                Xf.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                sj.renderDrawableMask(a, this);
                break;
              case 6:
                tj.renderDrawableMask(a, this);
                break;
              case 7:
                bf.renderDrawableMask(a, this);
                break;
              case 8:
                Wd.renderDrawableMask(a, this);
                break;
              case 9:
                V.renderDrawableMask(a, this);
            }
        },
        __renderFilterPass: function (a, b, c, d) {
          null == d && (d = !0);
          if (null != a && null != b && null != this.__defaultRenderTarget) {
            var f = this.__context3D.__state.renderToTexture,
              h = this.__context3D.__state.renderToTextureDepthStencil,
              k = this.__context3D.__state.renderToTextureAntiAlias,
              n = this.__context3D.__state.renderToTextureSurfaceSelector;
            this.__context3D.setRenderToTexture(
              this.__defaultRenderTarget.getTexture(this.__context3D),
              !1,
            );
            d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
            b = this.__initShader(b);
            this.setShader(b);
            this.applyAlpha(1);
            this.applyBitmapData(a, c);
            this.applyColorTransform(null);
            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
            this.updateShader();
            c = a.getVertexBuffer(this.__context3D);
            null != b.__position &&
              this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
            null != b.__textureCoord &&
              this.__context3D.setVertexBufferAt(
                b.__textureCoord.index,
                c,
                3,
                2,
              );
            a = a.getIndexBuffer(this.__context3D);
            this.__context3D.drawTriangles(a);
            null != f
              ? this.__context3D.setRenderToTexture(f, h, k, n)
              : this.__context3D.setRenderToBackBuffer();
            this.__clearShader();
          }
        },
        __resize: function (a, b) {
          this.__width = a;
          this.__height = b;
          a =
            null == this.__defaultRenderTarget
              ? this.__stage.stageWidth
              : this.__defaultRenderTarget.width;
          b =
            null == this.__defaultRenderTarget
              ? this.__stage.stageHeight
              : this.__defaultRenderTarget.height;
          if (null == this.__defaultRenderTarget) {
            var c = this.__worldTransform;
            c = Math.round(0 * c.a + 0 * c.c + c.tx);
          } else c = 0;
          this.__offsetX = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + 0 * c.d + c.ty)))
            : (c = 0);
          this.__offsetY = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(a * c.a + 0 * c.c + c.tx - this.__offsetX)))
            : (c = a);
          this.__displayWidth = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + b * c.d + c.ty - this.__offsetY)))
            : (c = b);
          this.__displayHeight = c;
          pb.createOrtho(
            this.__projection,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            0,
            this.__displayHeight + 2 * this.__offsetY,
            -1e3,
            1e3,
          );
          pb.createOrtho(
            this.__projectionFlipped,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            this.__displayHeight + 2 * this.__offsetY,
            0,
            -1e3,
            1e3,
          );
        },
        __resumeClipAndMask: function (a) {
          0 < this.__stencilReference
            ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5),
              this.__context3D.setStencilReferenceValue(
                this.__stencilReference,
                255,
                0,
              ))
            : (this.__context3D.setStencilActions(),
              this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects
            ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
            : this.__scissorRect();
        },
        __scissorRect: function (a) {
          if (null != a) {
            var b = Math.floor(a.x),
              c = Math.floor(a.y),
              d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0,
              f = 0 < a.height ? Math.ceil(a.get_bottom()) - c : 0;
            this.__context3D.__backBufferWantsBestResolution &&
              ((f = 1.5 / this.__pixelRatio),
              (b = a.x / this.__pixelRatio),
              (c = a.y / this.__pixelRatio),
              (d = 0 < a.width ? a.get_right() / this.__pixelRatio - b + f : 0),
              (f =
                0 < a.height ? a.get_bottom() / this.__pixelRatio - c + f : 0));
            0 > d && (d = 0);
            0 > f && (f = 0);
            db.__scissorRectangle.setTo(b, c, d, f);
            this.__context3D.setScissorRectangle(db.__scissorRectangle);
          } else this.__context3D.setScissorRectangle(null);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          if (this.__blendMode != a)
            switch (((this.__blendMode = a), a)) {
              case 0:
                this.__context3D.setBlendFactors(2, 2);
                break;
              case 9:
                this.__context3D.setBlendFactors(1, 5);
                break;
              case 12:
                this.__context3D.setBlendFactors(2, 6);
                break;
              case 14:
                this.__context3D.setBlendFactors(2, 2);
                this.__context3D.__setGLBlendEquation(
                  this.__gl.FUNC_REVERSE_SUBTRACT,
                );
                break;
              default:
                this.__context3D.setBlendFactors(2, 5);
            }
        },
        __setRenderTarget: function (a) {
          this.__defaultRenderTarget = a;
          this.__flipped = null == a;
          null != a && this.__resize(a.width, a.height);
        },
        __setShaderBuffer: function (a) {
          this.setShader(a.shader);
          this.__currentShaderBuffer = a;
        },
        __suspendClipAndMask: function () {
          0 < this.__stencilReference &&
            (this.__context3D.setStencilActions(),
            this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && this.__scissorRect();
        },
        __updateShaderBuffer: function (a) {
          null != this.__currentShader &&
            null != this.__currentShaderBuffer &&
            this.__currentShader.__updateFromBuffer(
              this.__currentShaderBuffer,
              a,
            );
        },
        __class__: db,
      });
      var qi = function (a) {
        null == a && (a = !1);
        this.fastCompression = a;
      };
      g['openfl.display.PNGEncoderOptions'] = qi;
      qi.__name__ = 'openfl.display.PNGEncoderOptions';
      qi.prototype = { __class__: qi };
      var Kh = function (a) {
        this.onComplete = new Ac();
        this.display = a;
        null != a &&
          (a.addEventListener('unload', l(this, this.display_onUnload)),
          Ra.get_current().addChild(a));
      };
      g['openfl.display.Preloader'] = Kh;
      Kh.__name__ = 'openfl.display.Preloader';
      Kh.prototype = {
        start: function () {
          this.ready = !0;
          Ra.get_current().get_loaderInfo().__complete();
          if (null != this.display) {
            var a = new wa('complete', !0, !0);
            this.display.dispatchEvent(a);
            a.isDefaultPrevented() ||
              this.display.dispatchEvent(new wa('unload'));
          } else
            this.complete || ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {
          Ra.get_current().get_loaderInfo().__update(a, b);
          null != this.display &&
            this.display.dispatchEvent(new Vf('progress', !0, !0, a, b));
        },
        display_onUnload: function (a) {
          null != this.display &&
            (this.display.removeEventListener(
              'unload',
              l(this, this.display_onUnload),
            ),
            this.display.parent == Ra.get_current() &&
              Ra.get_current().removeChild(this.display),
            Ra.get_current().stage.set_focus(null),
            (this.display = null));
          this.ready &&
            !this.complete &&
            ((this.complete = !0), this.onComplete.dispatch());
        },
        __class__: Kh,
      };
      var Wg = function () {
        ka.call(this);
        var a = this.getBackgroundColor(),
          b = 0;
        70 >
          0.299 * ((a >> 16) & 255) +
            0.587 * ((a >> 8) & 255) +
            0.114 * (a & 255) && (b = 16777215);
        a = this.getHeight() / 2 - 3.5;
        var c = this.getWidth() - 60;
        this.outline = new md();
        this.outline.get_graphics().beginFill(b, 0.07);
        this.outline.get_graphics().drawRect(0, 0, c, 7);
        this.outline.set_x(30);
        this.outline.set_y(a);
        this.outline.set_alpha(0);
        this.addChild(this.outline);
        this.progress = new md();
        this.progress.get_graphics().beginFill(b, 0.35);
        this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
        this.progress.set_x(32);
        this.progress.set_y(a + 2);
        this.progress.set_scaleX(0);
        this.progress.set_alpha(0);
        this.addChild(this.progress);
        this.startAnimation = Ra.getTimer() + 100;
        this.endAnimation = this.startAnimation + 1e3;
        this.addEventListener(
          'addedToStage',
          l(this, this.this_onAddedToStage),
        );
      };
      g['openfl.display.DefaultPreloader'] = Wg;
      Wg.__name__ = 'openfl.display.DefaultPreloader';
      Wg.__super__ = ka;
      Wg.prototype = v(ka.prototype, {
        getBackgroundColor: function () {
          var a = Ra.get_current().stage.window.context.attributes;
          return Object.prototype.hasOwnProperty.call(a, 'background') &&
            null != a.background
            ? a.background
            : 0;
        },
        getHeight: function () {
          var a = Ra.get_current().stage.window.__height;
          return 0 < a ? a : Ra.get_current().stage.stageHeight;
        },
        getWidth: function () {
          var a = Ra.get_current().stage.window.__width;
          return 0 < a ? a : Ra.get_current().stage.stageWidth;
        },
        onInit: function () {
          this.addEventListener('enterFrame', l(this, this.this_onEnterFrame));
        },
        onLoaded: function () {
          this.removeEventListener(
            'enterFrame',
            l(this, this.this_onEnterFrame),
          );
          this.dispatchEvent(new wa('unload'));
        },
        onUpdate: function (a, b) {
          var c = 0;
          0 < b && ((c = a / b), 1 < c && (c = 1));
          this.progress.set_scaleX(c);
        },
        this_onAddedToStage: function (a) {
          this.removeEventListener(
            'addedToStage',
            l(this, this.this_onAddedToStage),
          );
          this.onInit();
          this.onUpdate(
            this.get_loaderInfo().bytesLoaded,
            this.get_loaderInfo().bytesTotal,
          );
          this.addEventListener('progress', l(this, this.this_onProgress));
          this.addEventListener('complete', l(this, this.this_onComplete));
        },
        this_onComplete: function (a) {
          a.preventDefault();
          this.removeEventListener('progress', l(this, this.this_onProgress));
          this.removeEventListener('complete', l(this, this.this_onComplete));
          this.onLoaded();
        },
        this_onEnterFrame: function (a) {
          a =
            (Ra.getTimer() - this.startAnimation) /
            (this.endAnimation - this.startAnimation);
          0 > a && (a = 0);
          1 < a && (a = 1);
          this.outline.set_alpha(this.progress.set_alpha(a));
        },
        this_onProgress: function (a) {
          this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
        },
        __class__: Wg,
      });
      var zl = {
          _new: function (a) {
            return {};
          },
        },
        hj = function () {
          this.channels = 0;
          this.filter = 5;
          this.index = this.height = 0;
          this.mipFilter = 2;
          this.wrap = this.width = 0;
        };
      g['openfl.display.ShaderInput'] = hj;
      hj.__name__ = 'openfl.display.ShaderInput';
      hj.prototype = {
        __disableGL: function (a, b) {
          0 > b || a.setTextureAt(b, null);
        },
        __updateGL: function (a, b, c, d, f, h) {
          c = null != c ? c : this.input;
          d = null != d ? d : this.filter;
          f = null != f ? f : this.mipFilter;
          h = null != h ? h : this.wrap;
          null != c
            ? (a.setTextureAt(b, c.getTexture(a)),
              a.setSamplerStateAt(b, h, d, f))
            : a.setTextureAt(b, null);
        },
        __class__: hj,
      };
      var Hg = function () {
        this.index = 0;
      };
      g['openfl.display.ShaderParameter'] = Hg;
      Hg.__name__ = 'openfl.display.ShaderParameter';
      Hg.prototype = {
        __disableGL: function (a) {
          if (!(0 > this.index || ((a = a.gl), this.__isUniform)))
            for (var b = 0, c = this.__arrayLength; b < c; ) {
              var d = b++;
              a.disableVertexAttribArray(this.index + d);
            }
        },
        __updateGL: function (a, b) {
          if (!(0 > this.index)) {
            a = a.gl;
            b = null != b ? b : this.value;
            var c = this.__isBool ? b : null,
              d = this.__isFloat ? b : null,
              f = this.__isInt ? b : null;
            if (this.__isUniform)
              if (null != b && b.length >= this.__length)
                switch (this.type) {
                  case 0:
                    a.uniform1i(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.uniform2i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.uniform3i(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.uniform4i(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                      c[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.uniform1f(this.index, d[0]);
                    break;
                  case 5:
                    a.uniform2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.uniform1i(this.index, f[0]);
                    break;
                  case 9:
                    a.uniform2i(this.index, f[0], f[1]);
                    break;
                  case 10:
                    a.uniform3i(this.index, f[0], f[1], f[2]);
                    break;
                  case 11:
                    a.uniform4i(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = d[0];
                    this.__uniformMatrix[1] = d[1];
                    this.__uniformMatrix[2] = d[2];
                    this.__uniformMatrix[3] = d[3];
                    Lc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = d[0];
                    this.__uniformMatrix[1] = d[1];
                    this.__uniformMatrix[2] = d[2];
                    this.__uniformMatrix[3] = d[3];
                    this.__uniformMatrix[4] = d[4];
                    this.__uniformMatrix[5] = d[5];
                    this.__uniformMatrix[6] = d[6];
                    this.__uniformMatrix[7] = d[7];
                    this.__uniformMatrix[8] = d[8];
                    Lc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = d[0]),
                      (this.__uniformMatrix[1] = d[1]),
                      (this.__uniformMatrix[2] = d[2]),
                      (this.__uniformMatrix[3] = d[3]),
                      (this.__uniformMatrix[4] = d[4]),
                      (this.__uniformMatrix[5] = d[5]),
                      (this.__uniformMatrix[6] = d[6]),
                      (this.__uniformMatrix[7] = d[7]),
                      (this.__uniformMatrix[8] = d[8]),
                      (this.__uniformMatrix[9] = d[9]),
                      (this.__uniformMatrix[10] = d[10]),
                      (this.__uniformMatrix[11] = d[11]),
                      (this.__uniformMatrix[12] = d[12]),
                      (this.__uniformMatrix[13] = d[13]),
                      (this.__uniformMatrix[14] = d[14]),
                      (this.__uniformMatrix[15] = d[15]),
                      Lc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
              else
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, 0);
                    break;
                  case 5:
                    a.uniform2f(this.index, 0, 0);
                    break;
                  case 6:
                    a.uniform3f(this.index, 0, 0, 0);
                    break;
                  case 7:
                    a.uniform4f(this.index, 0, 0, 0, 0);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, 0, 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    Lc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    this.__uniformMatrix[4] = 0;
                    this.__uniformMatrix[5] = 0;
                    this.__uniformMatrix[6] = 0;
                    this.__uniformMatrix[7] = 0;
                    this.__uniformMatrix[8] = 0;
                    Lc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = 0),
                      (this.__uniformMatrix[1] = 0),
                      (this.__uniformMatrix[2] = 0),
                      (this.__uniformMatrix[3] = 0),
                      (this.__uniformMatrix[4] = 0),
                      (this.__uniformMatrix[5] = 0),
                      (this.__uniformMatrix[6] = 0),
                      (this.__uniformMatrix[7] = 0),
                      (this.__uniformMatrix[8] = 0),
                      (this.__uniformMatrix[9] = 0),
                      (this.__uniformMatrix[10] = 0),
                      (this.__uniformMatrix[11] = 0),
                      (this.__uniformMatrix[12] = 0),
                      (this.__uniformMatrix[13] = 0),
                      (this.__uniformMatrix[14] = 0),
                      (this.__uniformMatrix[15] = 0),
                      Lc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            else if (
              this.__useArray ||
              (null != b && b.length != this.__length)
            )
              for (h = 0, k = this.__arrayLength; h < k; )
                ((n = h++), a.enableVertexAttribArray(this.index + n));
            else {
              for (var h = 0, k = this.__arrayLength; h < k; ) {
                var n = h++;
                a.disableVertexAttribArray(this.index + n);
              }
              if (null != b)
                switch (this.type) {
                  case 0:
                    a.vertexAttrib1f(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.vertexAttrib2f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.vertexAttrib3f(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.vertexAttrib4f(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                      c[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.vertexAttrib1f(this.index, d[0]);
                    break;
                  case 5:
                    a.vertexAttrib2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.vertexAttrib3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.vertexAttrib4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.vertexAttrib1f(this.index, f[0]);
                    break;
                  case 9:
                    a.vertexAttrib2f(this.index, f[0], f[1]);
                    break;
                  case 10:
                    a.vertexAttrib3f(this.index, f[0], f[1], f[2]);
                    break;
                  case 11:
                    a.vertexAttrib4f(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, d[0], d[1]);
                    a.vertexAttrib2f(this.index + 1, d[2], d[3]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, d[0], d[1], d[2]);
                    a.vertexAttrib3f(this.index + 1, d[3], d[4], d[5]);
                    a.vertexAttrib3f(this.index + 2, d[6], d[7], d[8]);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, d[0], d[1], d[2], d[3]),
                      a.vertexAttrib4f(this.index + 1, d[4], d[5], d[6], d[7]),
                      a.vertexAttrib4f(
                        this.index + 2,
                        d[8],
                        d[9],
                        d[10],
                        d[11],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        d[12],
                        d[13],
                        d[14],
                        d[15],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
          }
        },
        __updateGLFromBuffer: function (a, b, c, d, f) {
          if (!(0 > this.index))
            if (((a = a.gl), this.__isUniform)) {
              if (d >= this.__length)
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, b[c]);
                    break;
                  case 5:
                    a.uniform2f(this.index, b[c], b[c + 1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, b[c] | 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(
                      this.index,
                      b[c] | 0,
                      b[c + 1] | 0,
                      b[c + 2] | 0,
                    );
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(
                      this.index,
                      b[c] | 0,
                      b[c + 1] | 0,
                      b[c + 2] | 0,
                      b[c + 3] | 0,
                    );
                    break;
                  case 12:
                    this.__uniformMatrix[0] = b[c];
                    this.__uniformMatrix[1] = b[c + 1];
                    this.__uniformMatrix[2] = b[c + 2];
                    this.__uniformMatrix[3] = b[c + 3];
                    Lc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = b[c];
                    this.__uniformMatrix[1] = b[c + 1];
                    this.__uniformMatrix[2] = b[c + 2];
                    this.__uniformMatrix[3] = b[c + 3];
                    this.__uniformMatrix[4] = b[c + 4];
                    this.__uniformMatrix[5] = b[c + 5];
                    this.__uniformMatrix[6] = b[c + 6];
                    this.__uniformMatrix[7] = b[c + 7];
                    this.__uniformMatrix[8] = b[c + 8];
                    Lc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = b[c]),
                      (this.__uniformMatrix[1] = b[c + 1]),
                      (this.__uniformMatrix[2] = b[c + 2]),
                      (this.__uniformMatrix[3] = b[c + 3]),
                      (this.__uniformMatrix[4] = b[c + 4]),
                      (this.__uniformMatrix[5] = b[c + 5]),
                      (this.__uniformMatrix[6] = b[c + 6]),
                      (this.__uniformMatrix[7] = b[c + 7]),
                      (this.__uniformMatrix[8] = b[c + 8]),
                      (this.__uniformMatrix[9] = b[c + 9]),
                      (this.__uniformMatrix[10] = b[c + 10]),
                      (this.__uniformMatrix[11] = b[c + 11]),
                      (this.__uniformMatrix[12] = b[c + 12]),
                      (this.__uniformMatrix[13] = b[c + 13]),
                      (this.__uniformMatrix[14] = b[c + 14]),
                      (this.__uniformMatrix[15] = b[c + 15]),
                      Lc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            } else if (this.__internal || (0 != d && d != this.__length)) {
              b = a.FLOAT;
              this.__isBool ? (b = a.INT) : this.__isInt && (b = a.INT);
              h = 0;
              for (k = this.__arrayLength; h < k; )
                ((n = h++), a.enableVertexAttribArray(this.index + n));
              if (0 < d)
                for (h = 0, k = this.__arrayLength; h < k; )
                  ((n = h++),
                    a.vertexAttribPointer(
                      this.index + n,
                      this.__length,
                      b,
                      !1,
                      4 * this.__length,
                      4 * (c + f * this.__length + n * this.__arrayLength),
                    ));
            } else {
              for (var h = 0, k = this.__arrayLength; h < k; ) {
                var n = h++;
                a.disableVertexAttribArray(this.index + n);
              }
              if (0 < d)
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, b[c]);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(
                      this.index,
                      b[c],
                      b[c + 1],
                      b[c + 2],
                      b[c + 3],
                    );
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, b[c], b[c + 1]);
                    a.vertexAttrib2f(this.index + 1, b[c + 2], b[c + 2 + 1]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, b[c], b[c + 1], b[c + 2]);
                    a.vertexAttrib3f(
                      this.index + 1,
                      b[c + 3],
                      b[c + 3 + 1],
                      b[c + 3 + 2],
                    );
                    a.vertexAttrib3f(
                      this.index + 2,
                      b[c + 6],
                      b[c + 6 + 1],
                      b[c + 6 + 2],
                    );
                    break;
                  case 20:
                    (a.vertexAttrib4f(
                      this.index + 0,
                      b[c],
                      b[c + 1],
                      b[c + 2],
                      b[c + 3],
                    ),
                      a.vertexAttrib4f(
                        this.index + 1,
                        b[c + 4],
                        b[c + 4 + 1],
                        b[c + 4 + 2],
                        b[c + 4 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 2,
                        b[c + 8],
                        b[c + 8 + 1],
                        b[c + 8 + 2],
                        b[c + 8 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        b[c + 12],
                        b[c + 12 + 1],
                        b[c + 12 + 2],
                        b[c + 12 + 3],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
        },
        set_name: function (a) {
          this.__internal = O.startsWith(a, 'openfl_');
          return (this.name = a);
        },
        __class__: Hg,
        __properties__: { set_name: 'set_name' },
      };
      var Jg = function (a, b, c, d) {
        xa.call(this);
        this.__drawableType = 6;
        this.enabled = !0;
        this.trackAsMenu = !1;
        this.useHandCursor = !0;
        this.__upState = null != a ? a : new S();
        this.__overState = b;
        this.__downState = c;
        this.set_hitTestState(null != d ? d : new S());
        this.addEventListener('mouseDown', l(this, this.__this_onMouseDown));
        this.addEventListener('mouseOut', l(this, this.__this_onMouseOut));
        this.addEventListener('mouseOver', l(this, this.__this_onMouseOver));
        this.addEventListener('mouseUp', l(this, this.__this_onMouseUp));
        this.__tabEnabled = !0;
        this.set___currentState(this.__upState);
        null != Jg.__constructor &&
          ((a = Jg.__constructor), (Jg.__constructor = null), a(this));
      };
      g['openfl.display.SimpleButton'] = Jg;
      Jg.__name__ = 'openfl.display.SimpleButton';
      Jg.__super__ = xa;
      Jg.prototype = v(xa.prototype, {
        __getBounds: function (a, b) {
          xa.prototype.__getBounds.call(this, a, b);
          var c = ua.__pool.get(),
            d = this.__currentState.__transform;
          c.a = d.a * b.a + d.b * b.c;
          c.b = d.a * b.b + d.b * b.d;
          c.c = d.c * b.a + d.d * b.c;
          c.d = d.c * b.b + d.d * b.d;
          c.tx = d.tx * b.a + d.ty * b.c + b.tx;
          c.ty = d.tx * b.b + d.ty * b.d + b.ty;
          this.__currentState.__getBounds(a, c);
          ua.__pool.release(c);
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            xa.prototype.__getRenderBounds.call(this, a, b);
          else {
            xa.prototype.__getBounds.call(this, a, b);
            var c = ua.__pool.get(),
              d = this.__currentState.__transform;
            c.a = d.a * b.a + d.b * b.c;
            c.b = d.a * b.b + d.b * b.d;
            c.c = d.c * b.a + d.d * b.c;
            c.d = d.c * b.b + d.d * b.d;
            c.tx = d.tx * b.a + d.ty * b.c + b.tx;
            c.ty = d.tx * b.b + d.ty * b.d + b.ty;
            this.__currentState.__getRenderBounds(a, c);
            ua.__pool.release(c);
          }
        },
        __getCursor: function () {
          return this.useHandCursor && !this.__ignoreEvent && this.enabled
            ? 'button'
            : null;
        },
        __hitTest: function (a, b, c, d, f, h) {
          var k = !1;
          null != this.get_hitTestState()
            ? this.get_hitTestState().__hitTest(a, b, c, d, f, h) &&
              (null != d &&
                (0 == d.length ? (d[0] = h) : (d[d.length - 1] = h)),
              (k = !f || this.mouseEnabled))
            : null != this.__currentState &&
              (!h.get_visible() ||
              this.__isMask ||
              (f && !this.mouseEnabled) ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
                ? (k = !1)
                : this.__currentState.__hitTest(a, b, c, d, f, h) && (k = f));
          if (null != d)
            for (; 1 < d.length && d[d.length - 1] == d[d.length - 2]; )
              d.pop();
          return k;
        },
        __hitTestMask: function (a, b) {
          var c = !1;
          this.__currentState.__hitTestMask(a, b) && (c = !0);
          return c;
        },
        __setStageReference: function (a) {
          xa.prototype.__setStageReference.call(this, a);
          null != this.__currentState &&
            this.__currentState.__setStageReference(a);
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setStageReference(a);
        },
        __setTransformDirty: function () {
          xa.prototype.__setTransformDirty.call(this);
          null != this.__currentState &&
            this.__currentState.__setTransformDirty();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setTransformDirty();
        },
        __update: function (a, b) {
          xa.prototype.__update.call(this, a, b);
          b &&
            (null != this.__currentState && this.__currentState.__update(a, !0),
            null != this.get_hitTestState() &&
              this.get_hitTestState() != this.__currentState &&
              this.get_hitTestState().__update(a, !0));
        },
        __updateTransforms: function (a) {
          xa.prototype.__updateTransforms.call(this, a);
          null != this.__currentState &&
            this.__currentState.__updateTransforms();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__updateTransforms();
        },
        get_downState: function () {
          return this.__downState;
        },
        get_hitTestState: function () {
          return this.__hitTestState;
        },
        set_hitTestState: function (a) {
          null != this.__hitTestState &&
            this.__hitTestState != a &&
            this.__hitTestState != this.get_downState() &&
            this.__hitTestState != this.get_upState() &&
            this.__hitTestState != this.get_overState() &&
            (this.__hitTestState.__renderParent = null);
          null != a &&
            ((a.__renderParent = this),
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty()));
          return (this.__hitTestState = a);
        },
        get_overState: function () {
          return this.__overState;
        },
        get_upState: function () {
          return this.__upState;
        },
        set___currentState: function (a) {
          null != this.__currentState &&
            this.__currentState != this.get_hitTestState() &&
            (this.__currentState.__renderParent = null);
          null != a && null != a.parent && a.parent.removeChild(a);
          S.__supportDOM &&
            null == this.__previousStates &&
            (this.__previousStates = la.toObjectVector(null));
          if (a != this.__currentState) {
            if (S.__supportDOM) {
              null != this.__currentState &&
                (this.__currentState.__setStageReference(null),
                this.__previousStates.push(this.__currentState));
              var b = this.__previousStates.indexOf(a, 0);
              if (-1 < b) {
                var c = this.__previousStates;
                c.__tempIndex = b;
                b = 0;
                for (var d = []; b < d.length; ) {
                  var f = d[b++];
                  c.insertAt(c.__tempIndex, f);
                  c.__tempIndex++;
                }
                c.splice(c.__tempIndex, 1);
              }
            }
            null != a &&
              ((a.__renderParent = this),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty()));
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
          return (this.__currentState = a);
        },
        __this_onMouseDown: function (a) {
          this.enabled && this.set___currentState(this.get_downState());
        },
        __this_onMouseOut: function (a) {
          this.__ignoreEvent = !1;
          this.get_upState() != this.__currentState &&
            this.set___currentState(this.get_upState());
        },
        __this_onMouseOver: function (a) {
          a.buttonDown && (this.__ignoreEvent = !0);
          this.get_overState() != this.__currentState &&
            null != this.get_overState() &&
            !this.__ignoreEvent &&
            this.enabled &&
            this.set___currentState(this.get_overState());
        },
        __this_onMouseUp: function (a) {
          this.__ignoreEvent = !1;
          this.enabled && null != this.get_overState()
            ? this.set___currentState(this.get_overState())
            : this.set___currentState(this.get_upState());
        },
        __class__: Jg,
        __properties__: v(xa.prototype.__properties__, {
          set___currentState: 'set___currentState',
          get_upState: 'get_upState',
          get_overState: 'get_overState',
          set_hitTestState: 'set_hitTestState',
          get_hitTestState: 'get_hitTestState',
          get_downState: 'get_downState',
        }),
      });
      var Kg = function (a, b) {
        lb.call(this);
        this.__drawableType = 5;
        this.set_name(null);
        this.__color = -1;
        this.__colorSplit = [255, 255, 255];
        this.__colorString = '#FFFFFF';
        this.__contentsScaleFactor = 1;
        this.__deltaTime = this.__currentTabOrderIndex = 0;
        this.__displayState = 2;
        this.__logicalHeight =
          this.__logicalWidth =
          this.__lastClickTime =
          this.__mouseY =
          this.__mouseX =
            0;
        this.__displayMatrix = new ua();
        this.__displayRect = new na();
        this.__renderDirty = !0;
        this.stage3Ds = la.toObjectVector(null);
        this.stage3Ds.push(new Yf(this));
        this.stage3Ds.push(new Yf(this));
        this.stage3Ds.push(new Yf(this));
        this.stage3Ds.push(new Yf(this));
        this.stage = this;
        this.align = 6;
        this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
        this.__quality = 1;
        this.__scaleMode = 2;
        this.showDefaultContextMenu = !0;
        this.softKeyboardRect = new na();
        this.stageFocusRect = !0;
        this.__macKeyboard =
          (/AppleWebKit/.test(navigator.userAgent) &&
            /Mobile\/\w+/.test(navigator.userAgent)) ||
          /Mac/.test(navigator.platform);
        this.__clearBeforeRender = !0;
        this.__forceRender = !1;
        this.__stack = [];
        this.__rollOutStack = [];
        this.__mouseOutStack = [];
        this.__touchData = new mc();
        null == Ra.get_current().__loaderInfo &&
          ((Ra.get_current().__loaderInfo = te.create(null)),
          (Ra.get_current().__loaderInfo.content = Ra.get_current()));
        this.__uncaughtErrorEvents =
          Ra.get_current().__loaderInfo.uncaughtErrorEvents;
        this.application = a.application;
        this.window = a;
        this.set_color(b);
        this.__contentsScaleFactor = a.__scale;
        this.__wasFullscreen = a.__fullscreen;
        this.__resize();
        null == Ra.get_current().stage && this.stage.addChild(Ra.get_current());
      };
      g['openfl.display.Stage'] = Kg;
      Kg.__name__ = 'openfl.display.Stage';
      Kg.__interfaces__ = [$a];
      Kg.__super__ = lb;
      Kg.prototype = v(lb.prototype, {
        localToGlobal: function (a) {
          return a.clone();
        },
        __broadcastEvent: function (a) {
          if (
            Object.prototype.hasOwnProperty.call(S.__broadcastEvents.h, a.type)
          )
            for (var b = S.__broadcastEvents.h[a.type], c = 0; c < b.length; ) {
              var d = b[c];
              ++c;
              if (d.stage == this || null == d.stage)
                if (this.__uncaughtErrorEvents.__enabled)
                  try {
                    d.__dispatch(a);
                  } catch (f) {
                    ((Ta.lastError = f),
                      (d = X.caught(f).unwrap()),
                      this.__handleError(d));
                  }
                else d.__dispatch(a);
            }
        },
        __createRenderer: function () {
          var a = (this.window.__width * this.window.__scale) | 0,
            b = (this.window.__height * this.window.__scale) | 0;
          switch (this.window.context.type) {
            case 'canvas':
              this.__renderer = new Ue(this.window.context.canvas2D);
              break;
            case 'dom':
              this.__renderer = new wh(this.window.context.dom);
              break;
            case 'opengl':
            case 'opengles':
            case 'webgl':
              ((this.context3D = new ub(this)),
                this.context3D.configureBackBuffer(
                  this.stageWidth,
                  this.stageHeight,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                this.context3D.present(),
                (this.__renderer = new db(this.context3D)));
          }
          if (null != this.__renderer) {
            var c = this.get_quality();
            this.__renderer.__allowSmoothing = 2 != c;
            this.__renderer.__pixelRatio = this.window.__scale;
            this.__renderer.__worldTransform = this.__displayMatrix;
            this.__renderer.__stage = this;
            this.__renderer.__resize(a, b);
          }
        },
        __dispatchEvent: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var b = lb.prototype.__dispatchEvent.call(this, a);
            } catch (c) {
              ((Ta.lastError = c),
                (a = X.caught(c).unwrap()),
                this.__handleError(a),
                (b = !1));
            }
          else b = lb.prototype.__dispatchEvent.call(this, a);
          return b;
        },
        __dispatchPendingMouseEvent: function () {
          this.__pendingMouseEvent &&
            (this.__onMouse(
              'mouseMove',
              this.__pendingMouseX,
              this.__pendingMouseY,
              0,
            ),
            (this.__pendingMouseEvent = !1));
        },
        __dispatchStack: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var c = b.length;
              if (0 == c) {
                a.eventPhase = 2;
                var d = a.target;
                d.__dispatch(a);
              } else {
                a.eventPhase = 1;
                a.target = b[b.length - 1];
                for (var f = 0, h = c - 1; f < h; ) {
                  var k = f++;
                  b[k].__dispatch(a);
                  if (a.__isCanceled) return;
                }
                a.eventPhase = 2;
                d = a.target;
                d.__dispatch(a);
                if (!a.__isCanceled && a.bubbles)
                  for (a.eventPhase = 3, k = c - 2; 0 <= k; ) {
                    b[k].__dispatch(a);
                    if (a.__isCanceled) break;
                    --k;
                  }
              }
            } catch (n) {
              ((Ta.lastError = n),
                (a = X.caught(n).unwrap()),
                this.__handleError(a));
            }
          else if (((c = b.length), 0 == c))
            ((a.eventPhase = 2), (d = a.target), d.__dispatch(a));
          else {
            a.eventPhase = 1;
            a.target = b[b.length - 1];
            f = 0;
            for (h = c - 1; f < h; )
              if (((k = f++), b[k].__dispatch(a), a.__isCanceled)) return;
            a.eventPhase = 2;
            d = a.target;
            d.__dispatch(a);
            if (!a.__isCanceled && a.bubbles)
              for (a.eventPhase = 3, k = c - 2; 0 <= k; ) {
                b[k].__dispatch(a);
                if (a.__isCanceled) break;
                --k;
              }
          }
        },
        __dispatchTarget: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              return a.__dispatchEvent(b);
            } catch (c) {
              return (
                (Ta.lastError = c),
                (a = X.caught(c).unwrap()),
                this.__handleError(a),
                !1
              );
            }
          else return a.__dispatchEvent(b);
        },
        __drag: function (a) {
          var b = this.__dragObject.parent;
          if (null != b) {
            b = b.__getWorldTransform();
            var c = b.a * b.d - b.b * b.c;
            if (0 == c) ((a.x = -b.tx), (a.y = -b.ty));
            else {
              var d = (1 / c) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
              a.y = (1 / c) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
              a.x = d;
            }
          }
          b = a.x + this.__dragOffsetX;
          a = a.y + this.__dragOffsetY;
          null != this.__dragBounds &&
            (b < this.__dragBounds.x
              ? (b = this.__dragBounds.x)
              : b > this.__dragBounds.get_right() &&
                (b = this.__dragBounds.get_right()),
            a < this.__dragBounds.y
              ? (a = this.__dragBounds.y)
              : a > this.__dragBounds.get_bottom() &&
                (a = this.__dragBounds.get_bottom()));
          this.__dragObject.set_x(b);
          this.__dragObject.set_y(a);
        },
        __getInteractive: function (a) {
          null != a && a.push(this);
          return !0;
        },
        __globalToLocal: function (a, b) {
          a != b && b.copyFrom(a);
          return b;
        },
        __handleError: function (a) {
          var b = new dg('uncaughtError', !0, !0, a);
          Ra.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b);
          if (!b.__preventDefault) {
            b = pf.toString(pf.exceptionStack());
            console.log(b);
            b = H.string(a);
            console.log(b);
            try {
              if (
                null != a &&
                Object.prototype.hasOwnProperty.call(a, 'stack') &&
                null != a.stack &&
                '' != a.stack
              )
                (console.log(a.stack), (a.stack = a.stack));
              else {
                var c = pf.toString(pf.callStack());
                console.log(c);
              }
            } catch (d) {
              Ta.lastError = d;
            }
            throw a;
          }
        },
        __onKey: function (a, b, c) {
          this.__dispatchPendingMouseEvent();
          Ob.__altKey = Ya.get_altKey(c);
          Ob.__commandKey = Ya.get_metaKey(c);
          Ob.__controlKey = Ya.get_ctrlKey(c) && !Ya.get_metaKey(c);
          Ob.__ctrlKey = Ya.get_ctrlKey(c);
          Ob.__shiftKey = Ya.get_shiftKey(c);
          var d = [];
          null == this.__focus
            ? this.__getInteractive(d)
            : this.__focus.__getInteractive(d);
          if (0 < d.length) {
            switch (b) {
              case 1073741908:
              case 1073741909:
              case 1073741910:
              case 1073741911:
              case 1073741912:
              case 1073741913:
              case 1073741914:
              case 1073741915:
              case 1073741916:
              case 1073741917:
              case 1073741918:
              case 1073741919:
              case 1073741920:
              case 1073741921:
              case 1073741922:
              case 1073741923:
              case 1073742044:
                var f = 3;
                break;
              case 1073742048:
              case 1073742049:
              case 1073742050:
              case 1073742051:
                f = 1;
                break;
              case 1073742052:
              case 1073742053:
              case 1073742054:
              case 1073742055:
                f = 2;
                break;
              default:
                f = 0;
            }
            switch (b) {
              case 8:
                b = 8;
                break;
              case 9:
                b = 9;
                break;
              case 13:
                b = 13;
                break;
              case 27:
                b = 27;
                break;
              case 32:
                b = 32;
                break;
              case 33:
                b = 49;
                break;
              case 34:
                b = 222;
                break;
              case 35:
                b = 51;
                break;
              case 36:
                b = 52;
                break;
              case 37:
                b = 53;
                break;
              case 38:
                b = 55;
                break;
              case 39:
                b = 222;
                break;
              case 40:
                b = 57;
                break;
              case 41:
                b = 48;
                break;
              case 42:
                b = 56;
                break;
              case 44:
                b = 188;
                break;
              case 45:
                b = 189;
                break;
              case 46:
                b = 190;
                break;
              case 47:
                b = 191;
                break;
              case 48:
                b = 48;
                break;
              case 49:
                b = 49;
                break;
              case 50:
                b = 50;
                break;
              case 51:
                b = 51;
                break;
              case 52:
                b = 52;
                break;
              case 53:
                b = 53;
                break;
              case 54:
                b = 54;
                break;
              case 55:
                b = 55;
                break;
              case 56:
                b = 56;
                break;
              case 57:
                b = 57;
                break;
              case 58:
                b = 186;
                break;
              case 59:
                b = 186;
                break;
              case 60:
                b = 60;
                break;
              case 61:
                b = 187;
                break;
              case 62:
                b = 190;
                break;
              case 63:
                b = 191;
                break;
              case 64:
                b = 50;
                break;
              case 91:
                b = 219;
                break;
              case 92:
                b = 220;
                break;
              case 93:
                b = 221;
                break;
              case 94:
                b = 54;
                break;
              case 95:
                b = 189;
                break;
              case 96:
                b = 192;
                break;
              case 97:
                b = 65;
                break;
              case 98:
                b = 66;
                break;
              case 99:
                b = 67;
                break;
              case 100:
                b = 68;
                break;
              case 101:
                b = 69;
                break;
              case 102:
                b = 70;
                break;
              case 103:
                b = 71;
                break;
              case 104:
                b = 72;
                break;
              case 105:
                b = 73;
                break;
              case 106:
                b = 74;
                break;
              case 107:
                b = 75;
                break;
              case 108:
                b = 76;
                break;
              case 109:
                b = 77;
                break;
              case 110:
                b = 78;
                break;
              case 111:
                b = 79;
                break;
              case 112:
                b = 80;
                break;
              case 113:
                b = 81;
                break;
              case 114:
                b = 82;
                break;
              case 115:
                b = 83;
                break;
              case 116:
                b = 84;
                break;
              case 117:
                b = 85;
                break;
              case 118:
                b = 86;
                break;
              case 119:
                b = 87;
                break;
              case 120:
                b = 88;
                break;
              case 121:
                b = 89;
                break;
              case 122:
                b = 90;
                break;
              case 127:
                b = 46;
                break;
              case 1073741881:
                b = 20;
                break;
              case 1073741882:
                b = 112;
                break;
              case 1073741883:
                b = 113;
                break;
              case 1073741884:
                b = 114;
                break;
              case 1073741885:
                b = 115;
                break;
              case 1073741886:
                b = 116;
                break;
              case 1073741887:
                b = 117;
                break;
              case 1073741888:
                b = 118;
                break;
              case 1073741889:
                b = 119;
                break;
              case 1073741890:
                b = 120;
                break;
              case 1073741891:
                b = 121;
                break;
              case 1073741892:
                b = 122;
                break;
              case 1073741893:
                b = 123;
                break;
              case 1073741894:
                b = 301;
                break;
              case 1073741895:
                b = 145;
                break;
              case 1073741896:
                b = 19;
                break;
              case 1073741897:
                b = 45;
                break;
              case 1073741898:
                b = 36;
                break;
              case 1073741899:
                b = 33;
                break;
              case 1073741901:
                b = 35;
                break;
              case 1073741902:
                b = 34;
                break;
              case 1073741903:
                b = 39;
                break;
              case 1073741904:
                b = 37;
                break;
              case 1073741905:
                b = 40;
                break;
              case 1073741906:
                b = 38;
                break;
              case 1073741907:
                b = 144;
                break;
              case 1073741908:
                b = 111;
                break;
              case 1073741909:
                b = 106;
                break;
              case 1073741910:
                b = 109;
                break;
              case 1073741911:
                b = 107;
                break;
              case 1073741912:
                b = 13;
                break;
              case 1073741913:
                b = 97;
                break;
              case 1073741914:
                b = 98;
                break;
              case 1073741915:
                b = 99;
                break;
              case 1073741916:
                b = 100;
                break;
              case 1073741917:
                b = 101;
                break;
              case 1073741918:
                b = 102;
                break;
              case 1073741919:
                b = 103;
                break;
              case 1073741920:
                b = 104;
                break;
              case 1073741921:
                b = 105;
                break;
              case 1073741922:
                b = 96;
                break;
              case 1073741923:
                b = 110;
                break;
              case 1073741925:
                b = 302;
                break;
              case 1073741928:
                b = 124;
                break;
              case 1073741929:
                b = 125;
                break;
              case 1073741930:
                b = 126;
                break;
              case 1073741982:
                b = 13;
                break;
              case 1073742044:
                b = 110;
                break;
              case 1073742048:
                b = 17;
                break;
              case 1073742049:
                b = 16;
                break;
              case 1073742050:
                b = 18;
                break;
              case 1073742051:
                b = 15;
                break;
              case 1073742052:
                b = 17;
                break;
              case 1073742053:
                b = 16;
                break;
              case 1073742054:
                b = 18;
                break;
              case 1073742055:
                b = 15;
            }
            var h = ol.__getCharCode(b, Ya.get_shiftKey(c));
            if (
              'keyUp' == a &&
              (32 == b || 13 == b) &&
              this.__focus instanceof ka
            ) {
              var k = va.__cast(this.__focus, ka);
              if (k.get_buttonMode() && 1 == k.focusRect) {
                var n = I.__pool.get(),
                  p = I.__pool.get();
                p.x = this.__mouseX;
                p.y = this.__mouseY;
                k = Ob.__create(
                  'click',
                  0,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  k.__globalToLocal(p, n),
                  k,
                );
                this.__dispatchStack(k, d);
                k.__updateAfterEventFlag && this.__renderAfterEvent();
                I.__pool.release(p);
                I.__pool.release(n);
              }
            }
            f = new uj(
              a,
              !0,
              !0,
              h,
              b,
              f,
              this.__macKeyboard
                ? Ya.get_ctrlKey(c) || Ya.get_metaKey(c)
                : Ya.get_ctrlKey(c),
              Ya.get_altKey(c),
              Ya.get_shiftKey(c),
              Ya.get_ctrlKey(c),
              Ya.get_metaKey(c),
            );
            d.reverse();
            this.__dispatchStack(f, d);
            if (f.__preventDefault)
              'keyDown' == a
                ? this.window.onKeyDown.cancel()
                : this.window.onKeyUp.cancel();
            else if ('keyDown' == a && 9 == b) {
              d = [];
              this.__tabTest(d);
              h = -1;
              a = null;
              b = Ya.get_shiftKey(c) ? -1 : 1;
              if (1 < d.length) {
                Jc.sort(d, function (a, b) {
                  return a.get_tabIndex() - b.get_tabIndex();
                });
                if (-1 != d[d.length - 1].get_tabIndex())
                  for (p = 0; p < d.length; ) {
                    if (-1 < d[p].get_tabIndex()) {
                      0 < p && d.splice(0, p);
                      break;
                    }
                    ++p;
                  }
                if (null != this.get_focus()) {
                  p = this.get_focus();
                  for (n = d.indexOf(p); -1 == n && null != p; ) {
                    h = p.parent;
                    if (null != h && h.get_tabChildren()) {
                      p = h.getChildIndex(p);
                      if (-1 == p) {
                        p = h;
                        continue;
                      }
                      for (
                        p += b;
                        Ya.get_shiftKey(c) ? 0 <= p : p < h.get_numChildren();

                      ) {
                        k = h.getChildAt(p);
                        if (
                          k instanceof xa &&
                          ((n = va.__cast(k, xa)), (n = d.indexOf(n)), -1 != n)
                        ) {
                          b = 0;
                          break;
                        }
                        p += b;
                      }
                    } else
                      Ya.get_shiftKey(c) &&
                        ((n = d.indexOf(h)), -1 != n && (b = 0));
                    p = h;
                  }
                  h = 0 > n ? 0 : n + b;
                } else h = this.__currentTabOrderIndex;
              } else
                1 == d.length &&
                  ((a = d[0]), this.get_focus() == a && (a = null));
              n = 0 <= h && h < d.length;
              1 == d.length || (0 == d.length && null != this.get_focus())
                ? (h = 0)
                : 1 < d.length &&
                  (0 > h && (h += d.length),
                  (h %= d.length),
                  (a = d[h]),
                  a == this.get_focus() &&
                    ((h += b),
                    0 > h && (h += d.length),
                    (h %= d.length),
                    (a = d[h])));
              b = null;
              null != this.get_focus() &&
                ((b = new Zf(
                  'keyFocusChange',
                  !0,
                  !0,
                  a,
                  Ya.get_shiftKey(c),
                  0,
                )),
                (d = []),
                this.get_focus().__getInteractive(d),
                d.reverse(),
                this.__dispatchStack(b, d),
                b.isDefaultPrevented() && this.window.onKeyDown.cancel());
              (null != b && b.isDefaultPrevented()) ||
                ((this.__currentTabOrderIndex = h),
                null != a && this.set_focus(a),
                n && this.window.onKeyDown.cancel());
            } else if (
              'keyDown' == a &&
              null != this.get_focus() &&
              !(this.get_focus() instanceof sc) &&
              (this.__macKeyboard
                ? Ya.get_ctrlKey(c) || Ya.get_metaKey(c)
                : Ya.get_ctrlKey(c)) &&
              !Ya.get_altKey(c) &&
              !Ya.get_shiftKey(c)
            )
              switch (b) {
                case 65:
                  c = new wa('selectAll', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 67:
                  c = new wa('copy', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 86:
                  c = new wa('paste', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 88:
                  ((c = new wa('cut', !0, !0)),
                    this.get_focus().dispatchEvent(c));
              }
            f.__updateAfterEventFlag && this.__renderAfterEvent();
          }
        },
        __onLimeCreateWindow: function (a) {
          if (this.window == a) {
            var b = this;
            a.onActivate.add(function () {
              b.__onLimeWindowActivate(a);
            });
            var c = this;
            a.onClose.add(
              function () {
                c.__onLimeWindowClose(a);
              },
              !1,
              -9e3,
            );
            var d = this;
            a.onDeactivate.add(function () {
              d.__onLimeWindowDeactivate(a);
            });
            var f = this;
            var h = function (b) {
              f.__onLimeWindowDropFile(a, b);
            };
            a.onDropFile.add(h);
            var k = this;
            a.onEnter.add(function () {
              k.__onLimeWindowEnter(a);
            });
            var n = this;
            a.onExpose.add(function () {
              n.__onLimeWindowExpose(a);
            });
            var p = this;
            a.onFocusIn.add(function () {
              p.__onLimeWindowFocusIn(a);
            });
            var g = this;
            a.onFocusOut.add(function () {
              g.__onLimeWindowFocusOut(a);
            });
            var q = this;
            a.onFullscreen.add(function () {
              q.__onLimeWindowFullscreen(a);
            });
            var m = this;
            h = function (b, c) {
              m.__onLimeKeyDown(a, b, c);
            };
            a.onKeyDown.add(h);
            var u = this;
            h = function (b, c) {
              u.__onLimeKeyUp(a, b, c);
            };
            a.onKeyUp.add(h);
            var r = this;
            a.onLeave.add(function () {
              r.__onLimeWindowLeave(a);
            });
            var D = this;
            a.onMinimize.add(function () {
              D.__onLimeWindowMinimize(a);
            });
            var x = this;
            h = function (b, c, d) {
              x.__onLimeMouseDown(a, b, c, d);
            };
            a.onMouseDown.add(h);
            var w = this;
            h = function (b, c) {
              w.__onLimeMouseMove(a, b, c);
            };
            a.onMouseMove.add(h);
            var z = this;
            h = function (b, c) {
              z.__onLimeMouseMoveRelative(a, b, c);
            };
            a.onMouseMoveRelative.add(h);
            var J = this;
            h = function (b, c, d) {
              J.__onLimeMouseUp(a, b, c, d);
            };
            a.onMouseUp.add(h);
            var y = this;
            h = function (b, c, d) {
              y.__onLimeMouseWheel(a, b, c, d);
            };
            a.onMouseWheel.add(h);
            var C = this;
            h = function (b, c) {
              C.__onLimeWindowMove(a, b, c);
            };
            a.onMove.add(h);
            a.onRender.add(l(this, this.__onLimeRender));
            a.onRenderContextLost.add(l(this, this.__onLimeRenderContextLost));
            a.onRenderContextRestored.add(
              l(this, this.__onLimeRenderContextRestored),
            );
            var t = this;
            h = function (b, c) {
              t.__onLimeWindowResize(a, b, c);
            };
            a.onResize.add(h);
            var v = this;
            a.onRestore.add(function () {
              v.__onLimeWindowRestore(a);
            });
            var G = this;
            h = function (b, c, d) {
              G.__onLimeTextEdit(a, b, c, d);
            };
            a.onTextEdit.add(h);
            var F = this;
            h = function (b) {
              F.__onLimeTextInput(a, b);
            };
            a.onTextInput.add(h);
            this.__onLimeWindowCreate(a);
          }
        },
        __onLimeGamepadAxisMove: function (a, b, c) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              qb.__onGamepadAxisMove(a, b, c);
            } catch (d) {
              ((Ta.lastError = d),
                (a = X.caught(d).unwrap()),
                this.__handleError(a));
            }
          else qb.__onGamepadAxisMove(a, b, c);
        },
        __onLimeGamepadButtonDown: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              qb.__onGamepadButtonDown(a, b);
            } catch (c) {
              ((Ta.lastError = c),
                (a = X.caught(c).unwrap()),
                this.__handleError(a));
            }
          else qb.__onGamepadButtonDown(a, b);
        },
        __onLimeGamepadButtonUp: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              qb.__onGamepadButtonUp(a, b);
            } catch (c) {
              ((Ta.lastError = c),
                (a = X.caught(c).unwrap()),
                this.__handleError(a));
            }
          else qb.__onGamepadButtonUp(a, b);
        },
        __onLimeGamepadConnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              qb.__onGamepadConnect(a);
            } catch (k) {
              Ta.lastError = k;
              var b = X.caught(k).unwrap();
              this.__handleError(b);
            }
          else qb.__onGamepadConnect(a);
          var c = this;
          b = function (b, d) {
            c.__onLimeGamepadAxisMove(a, b, d);
          };
          a.onAxisMove.add(b);
          var d = this;
          b = function (b) {
            d.__onLimeGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(b);
          var f = this;
          b = function (b) {
            f.__onLimeGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(b);
          var h = this;
          a.onDisconnect.add(function () {
            h.__onLimeGamepadDisconnect(a);
          });
        },
        __onLimeGamepadDisconnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              qb.__onGamepadDisconnect(a);
            } catch (b) {
              ((Ta.lastError = b),
                (a = X.caught(b).unwrap()),
                this.__handleError(a));
            }
          else qb.__onGamepadDisconnect(a);
        },
        __onLimeKeyDown: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyDown', b, c);
        },
        __onLimeKeyUp: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyUp', b, c);
        },
        __onLimeModuleExit: function (a) {
          null != this.window &&
            ((a = new wa('deactivate')), this.__broadcastEvent(a));
        },
        __onLimeMouseDown: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var f = 'middleMouseDown';
                break;
              case 2:
                f = 'rightMouseDown';
                break;
              default:
                f = 'mouseDown';
            }
            this.__onMouse(f, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel();
          }
        },
        __onLimeMouseMove: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            ((this.__pendingMouseEvent = !0),
            (this.__pendingMouseX = (b * a.__scale) | 0),
            (this.__pendingMouseY = (c * a.__scale) | 0));
        },
        __onLimeMouseMoveRelative: function (a, b, c) {},
        __onLimeMouseUp: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var f = 'middleMouseUp';
                break;
              case 2:
                f = 'rightMouseUp';
                break;
              default:
                f = 'mouseUp';
            }
            this.__onMouse(f, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel();
          }
        },
        __onLimeMouseWheel: function (a, b, c, d) {
          null != this.window &&
            this.window == a &&
            (this.__dispatchPendingMouseEvent(),
            d == rf.PIXELS
              ? this.__onMouseWheel((b * a.__scale) | 0, (c * a.__scale) | 0, d)
              : this.__onMouseWheel(b | 0, c | 0, d));
        },
        __renderAfterEvent: function () {
          this.__render(this.window.context);
        },
        __render: function (a) {
          a = !1;
          var b =
            null != this.__renderer &&
            (this.__renderDirty || this.__forceRender);
          if (this.__invalidated && b) {
            this.__invalidated = !1;
            var c = new wa('render');
            this.__broadcastEvent(c);
          }
          this.__update(!1, !0);
          if (null != this.__renderer) {
            if (null != this.context3D) {
              for (c = this.stage3Ds.iterator(); c.hasNext(); ) {
                var d = c.next();
                this.context3D.__renderStage3D(d);
              }
              this.context3D.__present && (b = !0);
            }
            b
              ? (null == this.context3D && this.__renderer.__clear(),
                this.__renderer.__render(this))
              : null == this.context3D && (a = !0);
            null != this.context3D &&
              (this.context3D.__present
                ? (this.__renderer.__cleared || this.__renderer.__clear(),
                  (this.context3D.__present = !1),
                  (this.context3D.__cleared = !1))
                : (a = !0));
            this.__renderer.__cleared = !1;
          }
          return a;
        },
        __onLimeRender: function (a) {
          this.__rendering ||
            ((this.__rendering = !0),
            this.__broadcastEvent(new wa('enterFrame')),
            this.__broadcastEvent(new wa('frameConstructed')),
            this.__broadcastEvent(new wa('exitFrame')),
            (this.__renderable = !0),
            this.__enterFrame(this.__deltaTime),
            (this.__deltaTime = 0),
            this.__render(a) && this.window.onRender.cancel(),
            (this.__rendering = !1));
        },
        __onLimeRenderContextLost: function () {
          this.context3D = this.__renderer = null;
          for (var a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__lostContext();
        },
        __onLimeRenderContextRestored: function (a) {
          this.__createRenderer();
          for (a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__restoreContext();
        },
        __onLimeTextEdit: function (a, b, c, d) {},
        __onLimeTextInput: function (a, b) {
          if (null != this.window && this.window == a) {
            var c = [];
            null == this.__focus
              ? this.__getInteractive(c)
              : this.__focus.__getInteractive(c);
            b = new Ce('textInput', !0, !0, b);
            0 < c.length
              ? (c.reverse(), this.__dispatchStack(b, c))
              : this.__dispatchEvent(b);
            b.isDefaultPrevented() && a.onTextInput.cancel();
          }
        },
        __onLimeTouchCancel: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchMove: function (a) {
          this.__onTouch('touchMove', a, this.__primaryTouch == a);
        },
        __onLimeTouchEnd: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchStart: function (a) {
          null == this.__primaryTouch && (this.__primaryTouch = a);
          this.__onTouch('touchBegin', a, this.__primaryTouch == a);
        },
        __onLimeUpdate: function (a) {
          this.__deltaTime = a;
          this.__dispatchPendingMouseEvent();
        },
        __onLimeWindowActivate: function (a) {},
        __onLimeWindowClose: function (a) {
          this.window == a && (this.window = null);
          this.__primaryTouch = null;
          a = new wa('deactivate');
          this.__broadcastEvent(a);
        },
        __onLimeWindowCreate: function (a) {
          null != this.window &&
            this.window == a &&
            null != a.context &&
            this.__createRenderer();
        },
        __onLimeWindowDeactivate: function (a) {},
        __onLimeWindowDropFile: function (a, b) {},
        __onLimeWindowEnter: function (a) {},
        __onLimeWindowExpose: function (a) {
          null != this.window && this.window == a && (this.__renderDirty = !0);
        },
        __onLimeWindowFocusIn: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__renderDirty = !0),
            (a = new wa('activate')),
            this.__broadcastEvent(a),
            this.set_focus(this.__cacheFocus));
        },
        __onLimeWindowFocusOut: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__primaryTouch = null),
            (a = new wa('deactivate')),
            this.__broadcastEvent(a),
            (a = this.get_focus()),
            this.set_focus(null),
            (this.__cacheFocus = a),
            (Ob.__altKey = !1),
            (Ob.__commandKey = !1),
            (Ob.__ctrlKey = !1),
            (Ob.__shiftKey = !1));
        },
        __onLimeWindowFullscreen: function (a) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen ||
              ((this.__wasFullscreen = !0),
              2 == this.__displayState && (this.__displayState = 1),
              this.__dispatchEvent(new df('fullScreen', !1, !1, !0, !0))));
        },
        __onLimeWindowLeave: function (a) {
          null == this.window ||
            this.window != a ||
            Ob.__buttonDown ||
            (this.__dispatchPendingMouseEvent(),
            (a = new wa('mouseLeave')),
            this.__dispatchEvent(a));
        },
        __onLimeWindowMinimize: function (a) {},
        __onLimeWindowMove: function (a, b, c) {},
        __onLimeWindowResize: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen &&
              !a.__fullscreen &&
              ((this.__wasFullscreen = !1),
              (this.__displayState = 2),
              this.__dispatchEvent(new df('fullScreen', !1, !1, !1, !0))));
        },
        __onLimeWindowRestore: function (a) {
          null != this.window &&
            this.window == a &&
            this.__wasFullscreen &&
            !a.__fullscreen &&
            ((this.__wasFullscreen = !1),
            (this.__displayState = 2),
            this.__dispatchEvent(new df('fullScreen', !1, !1, !1, !0)));
        },
        __onMouse: function (a, b, c, d) {
          if (!(2 < d)) {
            var f = I.__pool.get();
            f.setTo(b, c);
            b = this.__displayMatrix;
            c = b.a * b.d - b.b * b.c;
            if (0 == c) ((f.x = -b.tx), (f.y = -b.ty));
            else {
              var h = (1 / c) * (b.c * (b.ty - f.y) + b.d * (f.x - b.tx));
              f.y = (1 / c) * (b.a * (f.y - b.ty) + b.b * (b.tx - f.x));
              f.x = h;
            }
            this.__mouseX = f.x;
            this.__mouseY = f.y;
            b = [];
            this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this)
              ? (h = b[b.length - 1])
              : ((h = this), (b = [this]));
            null == h && (h = this);
            var k = null,
              n = !1;
            switch (a) {
              case 'middleMouseDown':
                this.__mouseDownMiddle = h;
                n = !0;
                break;
              case 'middleMouseUp':
                this.__mouseDownMiddle == h && (k = 'middleClick');
                this.__mouseDownMiddle = null;
                n = !0;
                break;
              case 'mouseDown':
                null != this.get_focus()
                  ? this.get_focus() != h &&
                    ((c = new Zf('mouseFocusChange', !0, !0, h, !1, 0)),
                    this.get_focus().dispatchEvent(c),
                    c.isDefaultPrevented() ||
                      (h.__allowMouseFocus()
                        ? this.set_focus(h)
                        : this.set_focus(null)))
                  : h.__allowMouseFocus()
                    ? this.set_focus(h)
                    : this.set_focus(null);
                this.__mouseDownLeft = h;
                this.__lastClickTarget != h &&
                  ((this.__lastClickTarget = null), (this.__lastClickTime = 0));
                n = Ob.__buttonDown = !0;
                break;
              case 'mouseUp':
                null != this.__mouseDownLeft &&
                  ((Ob.__buttonDown = !1),
                  this.__mouseDownLeft == h
                    ? (k = 'click')
                    : ((n = Ob.__create(
                        'releaseOutside',
                        1,
                        0,
                        this.__mouseX,
                        this.__mouseY,
                        new I(this.__mouseX, this.__mouseY),
                        this,
                      )),
                      this.__mouseDownLeft.dispatchEvent(n)),
                  (this.__mouseDownLeft = null));
                n = !0;
                break;
              case 'rightMouseDown':
                this.__mouseDownRight = h;
                n = !0;
                break;
              case 'rightMouseUp':
                (this.__mouseDownRight == h && (k = 'rightClick'),
                  (this.__mouseDownRight = null),
                  (n = !0));
            }
            c = I.__pool.get();
            n = Ob.__create(
              a,
              d,
              n ? this.window.clickCount : 0,
              this.__mouseX,
              this.__mouseY,
              h.__globalToLocal(f, c),
              h,
            );
            this.__dispatchStack(n, b);
            n.__updateAfterEventFlag && this.__renderAfterEvent();
            null != k &&
              ((n = Ob.__create(
                k,
                d,
                0,
                this.__mouseX,
                this.__mouseY,
                h.__globalToLocal(f, c),
                h,
              )),
              this.__dispatchStack(n, b),
              n.__updateAfterEventFlag && this.__renderAfterEvent(),
              'mouseUp' == a &&
                (h.doubleClickEnabled
                  ? ((a = Ra.getTimer()),
                    500 > a - this.__lastClickTime &&
                    h == this.__lastClickTarget
                      ? ((n = Ob.__create(
                          'doubleClick',
                          d,
                          0,
                          this.__mouseX,
                          this.__mouseY,
                          h.__globalToLocal(f, c),
                          h,
                        )),
                        this.__dispatchStack(n, b),
                        n.__updateAfterEventFlag && this.__renderAfterEvent(),
                        (this.__lastClickTime = 0),
                        (this.__lastClickTarget = null))
                      : ((this.__lastClickTarget = h),
                        (this.__lastClickTime = a)))
                  : ((this.__lastClickTarget = null),
                    (this.__lastClickTime = 0))));
            if ('auto' == Jk.__cursor && !Jk.__hidden) {
              n = null;
              if (null != this.__mouseDownLeft)
                n = this.__mouseDownLeft.__getCursor();
              else
                for (a = 0; a < b.length; )
                  if (
                    ((n = b[a]),
                    ++a,
                    (n = n.__getCursor()),
                    null != n && null != this.window)
                  ) {
                    this.window.set_cursor(Nl.toLimeCursor(n));
                    break;
                  }
              null == n &&
                null != this.window &&
                this.window.set_cursor(cc.ARROW);
            }
            h != this.__mouseOverTarget &&
              null != this.__mouseOverTarget &&
              ((n = Ob.__create(
                'mouseOut',
                d,
                0,
                this.__mouseX,
                this.__mouseY,
                this.__mouseOverTarget.__globalToLocal(f, c),
                this.__mouseOverTarget,
              )),
              this.__dispatchStack(n, this.__mouseOutStack),
              n.__updateAfterEventFlag && this.__renderAfterEvent());
            for (a = 0; a < this.__rollOutStack.length; )
              ((k = this.__rollOutStack[a]),
                -1 == b.indexOf(k)
                  ? (N.remove(this.__rollOutStack, k),
                    (n = Ob.__create(
                      'rollOut',
                      d,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(f, c),
                      k,
                    )),
                    (n.bubbles = !1),
                    this.__dispatchTarget(k, n),
                    n.__updateAfterEventFlag && this.__renderAfterEvent())
                  : ++a);
            for (a = 0; a < b.length; )
              ((k = b[a]),
                ++a,
                -1 == this.__rollOutStack.indexOf(k) &&
                  null != this.__mouseOverTarget &&
                  (k.hasEventListener('rollOver') &&
                    ((n = Ob.__create(
                      'rollOver',
                      d,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(f, c),
                      k,
                    )),
                    (n.bubbles = !1),
                    this.__dispatchTarget(k, n),
                    n.__updateAfterEventFlag && this.__renderAfterEvent()),
                  (k.hasEventListener('rollOut') ||
                    k.hasEventListener('rollOver')) &&
                    this.__rollOutStack.push(k)));
            h != this.__mouseOverTarget &&
              (null != h &&
                ((n = Ob.__create(
                  'mouseOver',
                  d,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  h.__globalToLocal(f, c),
                  h,
                )),
                this.__dispatchStack(n, b),
                n.__updateAfterEventFlag && this.__renderAfterEvent()),
              (this.__mouseOverTarget = h),
              (this.__mouseOutStack = b));
            null != this.__dragObject &&
              (this.__drag(f),
              (d = null),
              this.__mouseOverTarget == this.__dragObject
                ? ((h = this.__dragObject.mouseEnabled),
                  (a = this.__dragObject.mouseChildren),
                  (this.__dragObject.mouseEnabled = !1),
                  (this.__dragObject.mouseChildren = !1),
                  (b = []),
                  this.__hitTest(
                    this.__mouseX,
                    this.__mouseY,
                    !0,
                    b,
                    !0,
                    this,
                  ) && (d = b[b.length - 1]),
                  (this.__dragObject.mouseEnabled = h),
                  (this.__dragObject.mouseChildren = a))
                : this.__mouseOverTarget != this &&
                  (d = this.__mouseOverTarget),
              (this.__dragObject.dropTarget = d));
            I.__pool.release(f);
            I.__pool.release(c);
          }
        },
        __onMouseWheel: function (a, b, c) {
          var d = this.__mouseX,
            f = this.__mouseY;
          a = [];
          if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this))
            var h = a[a.length - 1];
          else ((h = this), (a = [this]));
          null == h && (h = this);
          c = I.__pool.get();
          c.setTo(d, f);
          d = this.__displayMatrix;
          f = d.a * d.d - d.b * d.c;
          if (0 == f) ((c.x = -d.tx), (c.y = -d.ty));
          else {
            var k = (1 / f) * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
            c.y = (1 / f) * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
            c.x = k;
          }
          b |= 0;
          b = Ob.__create(
            'mouseWheel',
            0,
            0,
            this.__mouseX,
            this.__mouseY,
            h.__globalToLocal(c, c),
            h,
            b,
          );
          b.cancelable = !0;
          this.__dispatchStack(b, a);
          b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
          b.__updateAfterEventFlag && this.__renderAfterEvent();
          I.__pool.release(c);
        },
        __onTouch: function (a, b, c) {
          var d = I.__pool.get();
          d.setTo(
            Math.round(b.x * this.window.__width * this.window.__scale),
            Math.round(b.y * this.window.__height * this.window.__scale),
          );
          var f = this.__displayMatrix,
            h = f.a * f.d - f.b * f.c;
          if (0 == h) ((d.x = -f.tx), (d.y = -f.ty));
          else {
            var k = (1 / h) * (f.c * (f.ty - d.y) + f.d * (d.x - f.tx));
            d.y = (1 / h) * (f.a * (d.y - f.ty) + f.b * (f.tx - d.x));
            d.x = k;
          }
          f = d.x;
          h = d.y;
          k = [];
          if (this.__hitTest(f, h, !1, k, !0, this)) var n = k[k.length - 1];
          else ((n = this), (k = [this]));
          null == n && (n = this);
          var p = b.id;
          if (this.__touchData.h.hasOwnProperty(p))
            var g = this.__touchData.h[p];
          else
            ((g = $f.__pool.get()),
              g.reset(),
              (g.touch = b),
              (this.__touchData.h[p] = g));
          var q = null,
            m = !1;
          switch (a) {
            case 'touchBegin':
              g.touchDownTarget = n;
              break;
            case 'touchEnd':
              (g.touchDownTarget == n && (q = 'touchTap'),
                (g.touchDownTarget = null),
                (m = !0));
          }
          var u = I.__pool.get();
          a = Zd.__create(a, null, f, h, n.__globalToLocal(d, u), n);
          a.touchPointID = p;
          a.isPrimaryTouchPoint = c;
          a.pressure = b.pressure;
          this.__dispatchStack(a, k);
          a.__updateAfterEventFlag && this.__renderAfterEvent();
          null != q &&
            ((a = Zd.__create(q, null, f, h, n.__globalToLocal(d, u), n)),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchStack(a, k),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          q = g.touchOverTarget;
          n != q &&
            null != q &&
            ((a = Zd.__create(
              'touchOut',
              null,
              f,
              h,
              q.__globalToLocal(d, u),
              q,
            )),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchTarget(q, a),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          for (var r = g.rollOutStack, l, D = 0; D < r.length; )
            ((l = r[D]),
              -1 == k.indexOf(l)
                ? (N.remove(r, l),
                  (a = Zd.__create(
                    'touchRollOut',
                    null,
                    f,
                    h,
                    q.__globalToLocal(d, u),
                    q,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(l, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent())
                : ++D);
          for (D = 0; D < k.length; )
            ((l = k[D]),
              ++D,
              -1 == r.indexOf(l) &&
                (l.hasEventListener('touchRollOver') &&
                  ((a = Zd.__create(
                    'touchRollOver',
                    null,
                    f,
                    h,
                    q.__globalToLocal(d, u),
                    l,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(l, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent()),
                l.hasEventListener('touchRollOut') && r.push(l)));
          n != q &&
            (null != n &&
              ((a = Zd.__create(
                'touchOver',
                null,
                f,
                h,
                n.__globalToLocal(d, u),
                n,
              )),
              (a.touchPointID = p),
              (a.isPrimaryTouchPoint = c),
              (a.bubbles = !0),
              (a.pressure = b.pressure),
              this.__dispatchTarget(n, a),
              a.__updateAfterEventFlag && this.__renderAfterEvent()),
            (g.touchOverTarget = n));
          I.__pool.release(d);
          I.__pool.release(u);
          m && (this.__touchData.remove(p), g.reset(), $f.__pool.release(g));
        },
        __registerLimeModule: function (a) {
          a.onCreateWindow.add(l(this, this.__onLimeCreateWindow));
          a.onUpdate.add(l(this, this.__onLimeUpdate));
          a.onExit.add(l(this, this.__onLimeModuleExit), !1, 0);
          for (a = qc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onLimeGamepadConnect(b);
          }
          qc.onConnect.add(l(this, this.__onLimeGamepadConnect));
          dc.onStart.add(l(this, this.__onLimeTouchStart));
          dc.onMove.add(l(this, this.__onLimeTouchMove));
          dc.onEnd.add(l(this, this.__onLimeTouchEnd));
          dc.onCancel.add(l(this, this.__onLimeTouchCancel));
        },
        __resize: function () {
          var a = this.stageWidth,
            b = this.stageHeight,
            c = (this.window.__width * this.window.__scale) | 0,
            d = (this.window.__height * this.window.__scale) | 0;
          this.__displayMatrix.identity();
          if (
            null != this.get_fullScreenSourceRect() &&
            this.window.__fullscreen
          ) {
            this.stageWidth = this.get_fullScreenSourceRect().width | 0;
            this.stageHeight = this.get_fullScreenSourceRect().height | 0;
            var f = c / this.stageWidth,
              h = d / this.stageHeight;
            this.__displayMatrix.translate(
              -this.get_fullScreenSourceRect().x,
              -this.get_fullScreenSourceRect().y,
            );
            this.__displayMatrix.scale(f, h);
            this.__displayRect.setTo(
              this.get_fullScreenSourceRect().get_left(),
              this.get_fullScreenSourceRect().get_right(),
              this.get_fullScreenSourceRect().get_top(),
              this.get_fullScreenSourceRect().get_bottom(),
            );
          } else if (
            0 == this.__logicalWidth ||
            0 == this.__logicalHeight ||
            2 == this.get_scaleMode() ||
            0 == c ||
            0 == d
          )
            ((this.stageWidth = Math.round(c / this.window.__scale)),
              (this.stageHeight = Math.round(d / this.window.__scale)),
              this.__displayMatrix.scale(
                this.window.__scale,
                this.window.__scale,
              ),
              this.__displayRect.setTo(
                0,
                0,
                this.stageWidth,
                this.stageHeight,
              ));
          else
            switch (
              ((this.stageWidth = this.__logicalWidth),
              (this.stageHeight = this.__logicalHeight),
              this.get_scaleMode())
            ) {
              case 0:
                f = c / this.stageWidth;
                h = d / this.stageHeight;
                this.__displayMatrix.scale(f, h);
                this.__displayRect.setTo(
                  0,
                  0,
                  this.stageWidth,
                  this.stageHeight,
                );
                break;
              case 1:
                f = c / this.stageWidth;
                h = d / this.stageHeight;
                f = Math.max(f, h);
                h = this.stageWidth * f;
                var k = this.stageHeight * f;
                h = this.stageWidth - Math.round((h - c) / f);
                k = this.stageHeight - Math.round((k - d) / f);
                var n = Math.round((this.stageWidth - h) / 2),
                  p = Math.round((this.stageHeight - k) / 2);
                this.__displayMatrix.translate(-n, -p);
                this.__displayMatrix.scale(f, f);
                this.__displayRect.setTo(n, p, h, k);
                break;
              default:
                ((f = c / this.stageWidth),
                  (h = d / this.stageHeight),
                  (f = Math.min(f, h)),
                  (h = this.stageWidth * f),
                  (k = this.stageHeight * f),
                  (h = this.stageWidth - Math.round((h - c) / f)),
                  (k = this.stageHeight - Math.round((k - d) / f)),
                  (n = Math.round((this.stageWidth - h) / 2)),
                  (p = Math.round((this.stageHeight - k) / 2)),
                  this.__displayMatrix.translate(-n, -p),
                  this.__displayMatrix.scale(f, f),
                  this.__displayRect.setTo(n, p, h, k));
            }
          null != this.context3D &&
            this.context3D.configureBackBuffer(
              this.stageWidth,
              this.stageHeight,
              0,
              !0,
              !0,
              !0,
            );
          for (f = this.stage3Ds.iterator(); f.hasNext(); )
            f.next().__resize(c, d);
          null != this.__renderer && this.__renderer.__resize(c, d);
          this.__renderDirty = !0;
          if (this.stageWidth != a || this.stageHeight != b)
            (this.__setTransformDirty(),
              (a = new wa('resize')),
              this.__dispatchEvent(a));
        },
        __setLogicalSize: function (a, b) {
          this.__logicalWidth = a;
          this.__logicalHeight = b;
          this.__resize();
        },
        __stopDrag: function (a) {
          this.__dragObject = this.__dragBounds = null;
        },
        __unregisterLimeModule: function (a) {
          a.onCreateWindow.remove(l(this, this.__onLimeCreateWindow));
          a.onUpdate.remove(l(this, this.__onLimeUpdate));
          a.onExit.remove(l(this, this.__onLimeModuleExit));
          qc.onConnect.remove(l(this, this.__onLimeGamepadConnect));
          dc.onStart.remove(l(this, this.__onLimeTouchStart));
          dc.onMove.remove(l(this, this.__onLimeTouchMove));
          dc.onEnd.remove(l(this, this.__onLimeTouchEnd));
          dc.onCancel.remove(l(this, this.__onLimeTouchCancel));
        },
        __update: function (a, b) {
          a
            ? this.__transformDirty &&
              (lb.prototype.__update.call(this, !0, b),
              b && (this.__transformDirty = !1))
            : this.__transformDirty || this.__renderDirty
              ? (lb.prototype.__update.call(this, !1, b),
                b && S.__supportDOM && (this.__wasDirty = !0))
              : !this.__renderDirty &&
                this.__wasDirty &&
                (lb.prototype.__update.call(this, !1, b),
                b && (this.__wasDirty = !1));
        },
        set_color: function (a) {
          null == a
            ? ((this.__transparent = !0), (a = 0))
            : (this.__transparent = !1);
          this.__color != a &&
            ((this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255),
            (this.__colorSplit[1] = ((a & 65280) >>> 8) / 255),
            (this.__colorSplit[2] = (a & 255) / 255),
            (this.__colorString = '#' + O.hex(a & 16777215, 6)),
            (this.__renderDirty = !0),
            (this.__color = -16777216 | (a & 16777215)));
          return a;
        },
        get_focus: function () {
          return this.__focus;
        },
        set_focus: function (a) {
          if (a != this.__focus || (null == a && null != this.__cacheFocus)) {
            var b = this.__focus;
            this.__cacheFocus = this.__focus = a;
            if (null != b) {
              var c = new Zf('focusOut', !0, !1, a, !1, 0),
                d = [];
              b.__getInteractive(d);
              d.reverse();
              this.__dispatchStack(c, d);
            }
            null != a &&
              ((c = new Zf('focusIn', !0, !1, b, !1, 0)),
              (d = []),
              a.__getInteractive(d),
              d.reverse(),
              this.__dispatchStack(c, d));
          }
          return a;
        },
        get_frameRate: function () {
          return null != this.window ? this.window.__backend.getFrameRate() : 0;
        },
        get_fullScreenSourceRect: function () {
          return null == this.__fullScreenSourceRect
            ? null
            : this.__fullScreenSourceRect.clone();
        },
        set_height: function (a) {
          return this.get_height();
        },
        get_mouseX: function () {
          return this.__mouseX;
        },
        get_mouseY: function () {
          return this.__mouseY;
        },
        get_quality: function () {
          return this.__quality;
        },
        set_rotation: function (a) {
          return 0;
        },
        get_scaleMode: function () {
          return this.__scaleMode;
        },
        set_scaleMode: function (a) {
          a != this.__scaleMode && ((this.__scaleMode = a), this.__resize());
          return a;
        },
        set_scaleX: function (a) {
          return 0;
        },
        set_scaleY: function (a) {
          return 0;
        },
        get_tabEnabled: function () {
          return !1;
        },
        get_tabIndex: function () {
          return -1;
        },
        set_transform: function (a) {
          return this.get_transform();
        },
        set_width: function (a) {
          return this.get_width();
        },
        set_x: function (a) {
          return 0;
        },
        set_y: function (a) {
          return 0;
        },
        __class__: Kg,
        __properties__: v(lb.prototype.__properties__, {
          set_color: 'set_color',
          set_scaleMode: 'set_scaleMode',
          get_scaleMode: 'get_scaleMode',
          get_quality: 'get_quality',
          get_fullScreenSourceRect: 'get_fullScreenSourceRect',
          get_frameRate: 'get_frameRate',
          set_focus: 'set_focus',
          get_focus: 'get_focus',
        }),
      });
      var Yf = function (a) {
        oa.call(this);
        this.__stage = a;
        this.__height = 0;
        this.__projectionTransform = new vj();
        this.__renderTransform = new vj();
        this.__y = this.__x = this.__width = 0;
        this.visible = !0;
        0 < a.stageWidth &&
          0 < a.stageHeight &&
          this.__resize(a.stageWidth, a.stageHeight);
      };
      g['openfl.display.Stage3D'] = Yf;
      Yf.__name__ = 'openfl.display.Stage3D';
      Yf.__super__ = oa;
      Yf.prototype = v(oa.prototype, {
        __createContext: function () {
          var a = this.__stage,
            b = a.__renderer;
          if ('cairo' == b.__type || 'canvas' == b.__type)
            this.__dispatchError();
          else if ('opengl' == b.__type)
            ((this.context3D = new ub(a, a.context3D.__contextState, this)),
              this.__dispatchCreate());
          else if ('dom' == b.__type)
            if (null == a.context3D) {
              this.__canvas = window.document.createElement('canvas');
              this.__canvas.width = a.stageWidth;
              this.__canvas.height = a.stageHeight;
              var c = a.window.context.attributes,
                d =
                  Object.prototype.hasOwnProperty.call(c, 'background') &&
                  null == c.background,
                f = Object.prototype.hasOwnProperty.call(c, 'colorDepth')
                  ? c.colorDepth
                  : 32;
              c =
                Object.prototype.hasOwnProperty.call(c, 'antialiasing') &&
                0 < c.antialiasing;
              this.__webgl = dl.getContextWebGL(this.__canvas, {
                alpha: d || 16 < f,
                antialias: c,
                depth: !0,
                premultipliedAlpha: !0,
                stencil: !0,
                preserveDrawingBuffer: !1,
              });
              null != this.__webgl &&
                (null == Xe.context &&
                  ((Xe.context = this.__webgl),
                  (Xe.type = 'webgl'),
                  (Xe.version = 1)),
                (a.context3D = new ub(a)),
                a.context3D.configureBackBuffer(
                  a.window.__width,
                  a.window.__height,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                a.context3D.present(),
                b.element.appendChild(this.__canvas),
                (this.__style = this.__canvas.style),
                this.__style.setProperty('position', 'absolute', null),
                this.__style.setProperty('top', '0', null),
                this.__style.setProperty('left', '0', null),
                this.__style.setProperty(
                  b.__transformOriginProperty,
                  '0 0 0',
                  null,
                ),
                this.__style.setProperty('z-index', '-1', null));
              null != a.context3D &&
                (this.context3D = new ub(a, a.context3D.__contextState, this));
              this.__dispatchCreate();
            } else this.__dispatchError();
        },
        __dispatchError: function () {
          this.__contextRequested = !1;
          this.dispatchEvent(
            new Xd('error', !1, !1, 'Context3D not available'),
          );
        },
        __dispatchCreate: function () {
          this.__contextRequested &&
            ((this.__contextRequested = !1),
            this.dispatchEvent(new wa('context3DCreate')));
        },
        __lostContext: function () {
          this.__contextLost = !0;
          null != this.context3D &&
            (this.context3D.__dispose(), (this.__contextRequested = !0));
        },
        __resize: function (a, b) {
          if (a != this.__width || b != this.__height)
            (null != this.__canvas &&
              ((this.__canvas.width = a), (this.__canvas.height = b)),
              this.__projectionTransform.copyRawDataFrom(
                la.toFloatVector(null, null, null, [
                  2 / (0 < a ? a : 1),
                  0,
                  0,
                  0,
                  0,
                  -2 / (0 < b ? b : 1),
                  0,
                  0,
                  0,
                  0,
                  -0.001,
                  0,
                  -1,
                  1,
                  0,
                  1,
                ]),
              ),
              this.__renderTransform.identity(),
              this.__renderTransform.appendTranslation(this.__x, this.__y, 0),
              this.__renderTransform.append(this.__projectionTransform),
              (this.__width = a),
              (this.__height = b));
        },
        __restoreContext: function () {
          this.__contextLost = !1;
          this.__createContext();
        },
        get_x: function () {
          return this.__x;
        },
        get_y: function () {
          return this.__y;
        },
        __class__: Yf,
        __properties__: { get_y: 'get_y', get_x: 'get_x' },
      });
      var zh = function (a, b, c, d, f, h, k, n) {
        null == n && (n = 0);
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = 1);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.__id = a;
        this.__matrix = new ua();
        0 != b && this.set_x(b);
        0 != c && this.set_y(c);
        1 != d && this.set_scaleX(d);
        1 != f && this.set_scaleY(f);
        0 != h && this.set_rotation(h);
        this.__dirty = !0;
        this.__length = 0;
        this.__originX = k;
        this.__originY = n;
        this.__alpha = 1;
        this.__blendMode = null;
        this.__visible = !0;
      };
      g['openfl.display.Tile'] = zh;
      zh.__name__ = 'openfl.display.Tile';
      zh.prototype = {
        getBounds: function (a) {
          var b = new na();
          this.__findTileRect(b);
          var c = ua.__pool.get();
          if (null != a && a != this) {
            c.copyFrom(this.__getWorldTransform());
            var d = ua.__pool.get();
            d.copyFrom(a.__getWorldTransform());
            d.invert();
            c.concat(d);
            ua.__pool.release(d);
          } else c.identity();
          this.__getBounds(b, c);
          ua.__pool.release(c);
          return b;
        },
        __getBounds: function (a, b) {
          a.__transform(a, b);
        },
        __findTileRect: function (a) {
          if (null == this.get_tileset())
            if (null != this.parent) {
              var b = this.parent.__findTileset();
              null == b
                ? a.setTo(0, 0, 0, 0)
                : ((b = b.getRect(this.get_id())),
                  null == b ? a.setTo(0, 0, 0, 0) : a.copyFrom(b));
            } else a.setTo(0, 0, 0, 0);
          else a.copyFrom(this.get_tileset().getRect(this.get_id()));
          a.x = 0;
          a.y = 0;
        },
        __findTileset: function () {
          return null != this.get_tileset()
            ? this.get_tileset()
            : this.parent instanceof Ah
              ? this.parent.get_tileset()
              : null == this.parent
                ? null
                : this.parent.__findTileset();
        },
        __getWorldTransform: function () {
          var a = this.get_matrix().clone();
          null != this.parent && a.concat(this.parent.__getWorldTransform());
          return a;
        },
        __setRenderDirty: function () {
          this.__dirty ||
            ((this.__dirty = !0),
            null != this.parent && this.parent.__setRenderDirty());
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          a != this.__alpha && ((this.__alpha = a), this.__setRenderDirty());
          return a;
        },
        get_colorTransform: function () {
          return this.__colorTransform;
        },
        get_height: function () {
          var a = na.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.height;
          na.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = na.__pool.get();
          this.__findTileRect(b);
          0 != b.height && this.set_scaleY(a / b.height);
          na.__pool.release(b);
          return a;
        },
        get_id: function () {
          return this.__id;
        },
        get_matrix: function () {
          return this.__matrix;
        },
        get_originX: function () {
          return this.__originX;
        },
        set_originX: function (a) {
          a != this.__originX &&
            ((this.__originX = a), this.__setRenderDirty());
          return a;
        },
        get_originY: function () {
          return this.__originY;
        },
        set_originY: function (a) {
          a != this.__originY &&
            ((this.__originY = a), this.__setRenderDirty());
          return a;
        },
        get_rotation: function () {
          if (null == this.__rotation)
            if (0 == this.__matrix.b && 0 == this.__matrix.c)
              ((this.__rotationSine = this.__rotation = 0),
                (this.__rotationCosine = 1));
            else {
              var a =
                Math.atan2(this.__matrix.d, this.__matrix.c) - Math.PI / 2;
              this.__rotation = (180 / Math.PI) * a;
              this.__rotationSine = Math.sin(a);
              this.__rotationCosine = Math.cos(a);
            }
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = (Math.PI / 180) * a;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            b = this.get_scaleX();
            var c = this.get_scaleY();
            this.__matrix.a = this.__rotationCosine * b;
            this.__matrix.b = this.__rotationSine * b;
            this.__matrix.c = -this.__rotationSine * c;
            this.__matrix.d = this.__rotationCosine * c;
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleX: function () {
          null == this.__scaleX &&
            (0 == this.get_matrix().b
              ? (this.__scaleX = this.__matrix.a)
              : (this.__scaleX = Math.sqrt(
                  this.__matrix.a * this.__matrix.a +
                    this.__matrix.b * this.__matrix.b,
                )));
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX) {
            this.__scaleX = a;
            if (0 == this.__matrix.b) this.__matrix.a = a;
            else {
              this.get_rotation();
              var b = this.__rotationSine * a;
              this.__matrix.a = this.__rotationCosine * a;
              this.__matrix.b = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleY: function () {
          null == this.__scaleY &&
            (this.__scaleY =
              0 == this.__matrix.c
                ? this.get_matrix().d
                : Math.sqrt(
                    this.__matrix.c * this.__matrix.c +
                      this.__matrix.d * this.__matrix.d,
                  ));
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY) {
            this.__scaleY = a;
            if (0 == this.__matrix.c) this.__matrix.d = a;
            else {
              this.get_rotation();
              var b = this.__rotationCosine * a;
              this.__matrix.c = -this.__rotationSine * a;
              this.__matrix.d = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_shader: function () {
          return this.__shader;
        },
        get_tileset: function () {
          return this.__tileset;
        },
        set_tileset: function (a) {
          a != this.__tileset &&
            ((this.__tileset = a), this.__setRenderDirty());
          return a;
        },
        get_visible: function () {
          return this.__visible;
        },
        get_width: function () {
          var a = na.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.width;
          na.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = na.__pool.get();
          this.__findTileRect(b);
          0 != b.width && this.set_scaleX(a / b.width);
          na.__pool.release(b);
          return a;
        },
        get_x: function () {
          return this.__matrix.tx;
        },
        set_x: function (a) {
          a != this.__matrix.tx &&
            ((this.__matrix.tx = a), this.__setRenderDirty());
          return a;
        },
        get_y: function () {
          return this.__matrix.ty;
        },
        set_y: function (a) {
          a != this.__matrix.ty &&
            ((this.__matrix.ty = a), this.__setRenderDirty());
          return a;
        },
        __class__: zh,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          get_visible: 'get_visible',
          set_tileset: 'set_tileset',
          get_tileset: 'get_tileset',
          get_shader: 'get_shader',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          set_originY: 'set_originY',
          get_originY: 'get_originY',
          set_originX: 'set_originX',
          get_originX: 'get_originX',
          get_matrix: 'get_matrix',
          get_id: 'get_id',
          set_height: 'set_height',
          get_height: 'get_height',
          get_colorTransform: 'get_colorTransform',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      };
      var Bh = function (a, b, c, d, f, h, k) {
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 0);
        null == a && (a = 0);
        zh.call(this, -1, a, b, c, d, f, h, k);
        this.__tiles = [];
        this.__length = 0;
      };
      g['openfl.display.TileContainer'] = Bh;
      Bh.__name__ = 'openfl.display.TileContainer';
      Bh.__interfaces__ = [Hk];
      Bh.__super__ = zh;
      Bh.prototype = v(zh.prototype, {
        getBounds: function (a) {
          for (var b = new na(), c, d = 0, f = this.__tiles; d < f.length; )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(a)),
              b.__expand(c.x, c.y, c.width, c.height));
          return b;
        },
        get_height: function () {
          for (
            var a = na.__pool.get(), b, c = 0, d = this.__tiles;
            c < d.length;

          )
            ((b = d[c]),
              ++c,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          c = a.height;
          na.__pool.release(a);
          return c;
        },
        set_height: function (a) {
          for (
            var b = na.__pool.get(), c, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(this)),
              b.__expand(c.x, c.y, c.width, c.height));
          0 != b.height && this.set_scaleY(a / b.height);
          na.__pool.release(b);
          return a;
        },
        get_width: function () {
          for (
            var a = na.__pool.get(), b, c = 0, d = this.__tiles;
            c < d.length;

          )
            ((b = d[c]),
              ++c,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          c = a.width;
          na.__pool.release(a);
          return c;
        },
        set_width: function (a) {
          for (
            var b = na.__pool.get(), c, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(this)),
              b.__expand(c.x, c.y, c.width, c.height));
          0 != b.width && this.set_scaleX(a / b.width);
          na.__pool.release(b);
          return a;
        },
        __class__: Bh,
      });
      var Ah = function (a, b, c, d) {
        null == d && (d = !0);
        S.call(this);
        this.__drawableType = 9;
        this.__tileset = c;
        this.smoothing = d;
        this.tileColorTransformEnabled =
          this.tileBlendModeEnabled =
          this.tileAlphaEnabled =
            !0;
        this.__group = new Bh();
        this.__group.set_tileset(c);
        this.__width = a;
        this.__height = b;
      };
      g['openfl.display.Tilemap'] = Ah;
      Ah.__name__ = 'openfl.display.Tilemap';
      Ah.__interfaces__ = [Hk];
      Ah.__super__ = S;
      Ah.prototype = v(S.prototype, {
        __enterFrame: function (a) {
          this.__group.__dirty &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            n = k.a * k.d - k.b * k.c;
          c = 0 == n ? -k.tx : (1 / n) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          n = k.a * k.d - k.b * k.c;
          a = 0 == n ? -k.ty : (1 / n) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height
            ? (null == d || f || d.push(h), !0)
            : !1;
        },
        get_height: function () {
          return this.__height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          this.__height = a | 0;
          return this.__height * Math.abs(this.get_scaleY());
        },
        get_width: function () {
          return this.__width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          this.__width = a | 0;
          return this.__width * Math.abs(this.__scaleX);
        },
        __class__: Ah,
      });
      var pl = function (a, b) {
        this.__bitmapData = a;
        this.rectData = la.toFloatVector(null);
        this.__data = [];
        if (null != b)
          for (a = 0; a < b.length; ) {
            var c = b[a];
            ++a;
            this.addRect(c);
          }
      };
      g['openfl.display.Tileset'] = pl;
      pl.__name__ = 'openfl.display.Tileset';
      pl.prototype = {
        addRect: function (a) {
          if (null == a) return -1;
          this.rectData.push(a.x);
          this.rectData.push(a.y);
          this.rectData.push(a.width);
          this.rectData.push(a.height);
          a = new wj(a);
          a.__update(this.__bitmapData);
          this.__data.push(a);
          return this.__data.length - 1;
        },
        getRect: function (a) {
          return a < this.__data.length && 0 <= a
            ? new na(
                this.__data[a].x,
                this.__data[a].y,
                this.__data[a].width,
                this.__data[a].height,
              )
            : null;
        },
        __class__: pl,
      };
      var wj = function (a) {
        null != a &&
          ((this.x = a.x | 0),
          (this.y = a.y | 0),
          (this.width = a.width | 0),
          (this.height = a.height | 0));
      };
      g['openfl.display.TileData'] = wj;
      wj.__name__ = 'openfl.display.TileData';
      wj.prototype = {
        __update: function (a) {
          if (null != a) {
            var b = a.width;
            a = a.height;
            this.__uvX = this.x / b;
            this.__uvY = this.y / a;
            this.__uvWidth = (this.x + this.width) / b;
            this.__uvHeight = (this.y + this.height) / a;
          }
        },
        __class__: wj,
      };
      var ql = function () {
        this.__totalFrames = this.__framesLoaded = 1;
        this.__currentLabels = [];
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1;
      };
      g['openfl.display.Timeline'] = ql;
      ql.__name__ = 'openfl.display.Timeline';
      ql.prototype = {
        enterFrame: function (a) {},
        __enterFrame: function (a) {
          if (this.__isPlaying) {
            a = this.__getNextFrame(a);
            if (this.__lastFrameScriptEval == a) return;
            if (null != this.__frameScripts) {
              if (a < this.__currentFrame) {
                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                this.__currentFrame = 1;
              }
              if (!this.__evaluateFrameScripts(a)) return;
            } else this.__currentFrame = a;
          }
          this.__updateSymbol(this.__currentFrame);
        },
        __evaluateFrameScripts: function (a) {
          if (null == this.__frameScripts) return !0;
          var b = this.__currentFrame;
          for (a += 1; b < a; ) {
            var c = b++;
            if (
              c != this.__lastFrameScriptEval &&
              ((this.__currentFrame = this.__lastFrameScriptEval = c),
              (this.__frameScripts.h.hasOwnProperty(c) &&
                (this.__updateSymbol(c),
                (0, this.__frameScripts.h[c])(this.__scope),
                this.__currentFrame != c)) ||
                !this.__isPlaying)
            )
              return !1;
          }
          return !0;
        },
        __getNextFrame: function (a) {
          null != this.frameRate
            ? ((this.__timeElapsed += a),
              (a =
                this.__currentFrame +
                Math.floor(this.__timeElapsed / this.__frameTime)),
              1 > a && (a = 1),
              a > this.__totalFrames &&
                (a = Math.floor((a - 1) % this.__totalFrames) + 1),
              (this.__timeElapsed %= this.__frameTime))
            : ((a = this.__currentFrame + 1),
              a > this.__totalFrames && (a = 1));
          return a;
        },
        __goto: function (a) {
          1 > a ? (a = 1) : a > this.__totalFrames && (a = this.__totalFrames);
          this.__lastFrameScriptEval = -1;
          this.__currentFrame = a;
          this.__updateSymbol(this.__currentFrame);
          this.__evaluateFrameScripts(this.__currentFrame);
        },
        __gotoAndStop: function (a, b) {
          this.__stop();
          this.__goto(this.__resolveFrameReference(a));
        },
        __stop: function () {
          this.__isPlaying = !1;
        },
        __resolveFrameReference: function (a) {
          if ('number' == typeof a && (a | 0) === a) return a;
          if ('string' == typeof a) {
            for (var b = 0, c = this.__currentLabels; b < c.length; ) {
              var d = c[b];
              ++b;
              if (d.name == a) return d.frame;
            }
            throw new fg(
              'Error #2109: Frame label ' + a + ' not found in scene.',
            );
          }
          throw X.thrown('Invalid type for frame ' + a.__name__);
        },
        __updateFrameLabel: function () {
          this.__currentFrameLabel = this.__currentLabel = null;
          for (var a = 0, b = this.__currentLabels; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
            else if (c.frame == this.__currentFrame)
              this.__currentFrameLabel = this.__currentLabel = c.name;
            else break;
          }
        },
        __updateSymbol: function (a) {
          this.__currentFrame != this.__lastFrameUpdate &&
            (this.__updateFrameLabel(),
            this.enterFrame(a),
            (this.__lastFrameUpdate = this.__currentFrame));
        },
        __class__: ql,
      };
      var uh = function (a, b) {
        Gg.call(this, a, b);
        this.stage = new Kg(
          this,
          Object.prototype.hasOwnProperty.call(b.context, 'background')
            ? b.context.background
            : 16777215,
        );
        if (Object.prototype.hasOwnProperty.call(b, 'parameters'))
          try {
            this.stage.get_loaderInfo().parameters = b.parameters;
          } catch (c) {
            Ta.lastError = c;
          }
        this.stage.__setLogicalSize(b.width, b.height);
        Object.prototype.hasOwnProperty.call(b, 'resizable') &&
          !b.resizable &&
          this.stage.set_scaleMode(3);
        a.addModule(this.stage);
      };
      g['openfl.display.Window'] = uh;
      uh.__name__ = 'openfl.display.Window';
      uh.__super__ = Gg;
      uh.prototype = v(Gg.prototype, {
        close: function () {
          Gg.prototype.close.call(this);
          this.onClose.canceled ||
            null == this.stage ||
            (this.application.removeModule(this.stage), (this.stage = null));
        },
        __class__: uh,
      });
      var vh = function () {};
      g['openfl.display._internal.CanvasBitmap'] = vh;
      vh.__name__ = 'openfl.display._internal.CanvasBitmap';
      vh.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((x = b.__getAlpha(a.__worldAlpha)), 0 >= x)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              w = b.context;
              b.setTransform(a.__renderTransform, w);
              var c = a.opaqueBackground;
              w.fillStyle =
                'rgb(' +
                ((c >>> 16) & 255) +
                ',' +
                ((c >>> 8) & 255) +
                ',' +
                (c & 255) +
                ')';
              w.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((x = b.__getAlpha(a.__worldAlpha)), !(0 >= x))
            ) {
              var d = a.__graphics;
              if (null != d) {
                z.render(d, b);
                var f = d.__width,
                  h = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= f && 1 <= h) {
                  var k = d.__worldTransform;
                  w = b.context;
                  J = a.__scrollRect;
                  var n = a.__worldScale9Grid;
                  if (null == J || (0 < J.width && 0 < J.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    w.globalAlpha = x;
                    if (null != n && 0 == k.b && 0 == k.c) {
                      var p = b.__pixelRatio;
                      x = ua.__pool.get();
                      x.translate(k.tx, k.ty);
                      b.setTransform(x, w);
                      ua.__pool.release(x);
                      x = d.__bounds;
                      var g = d.__renderTransform.a / d.__bitmapScale,
                        q = d.__renderTransform.d / d.__bitmapScale,
                        m = g * k.a,
                        u = q * k.d;
                      k = Math.max(1, Math.round(n.x * g));
                      d = Math.round(n.y * q);
                      J = Math.max(
                        1,
                        Math.round((x.get_right() - n.get_right()) * g),
                      );
                      var r = Math.round((x.get_bottom() - n.get_bottom()) * q);
                      g = Math.round(n.width * g);
                      n = Math.round(n.height * q);
                      q = Math.round(k / p);
                      var l = Math.round(d / p),
                        D = Math.round(J / p);
                      p = Math.round(r / p);
                      m = x.width * m - q - D;
                      x = x.height * u - l - p;
                      b.applySmoothing(w, !1);
                      0 != g && 0 != n
                        ? (w.drawImage(c, 0, 0, k, d, 0, 0, q, l),
                          w.drawImage(c, k, 0, g, d, q, 0, m, l),
                          w.drawImage(c, k + g, 0, J, d, q + m, 0, D, l),
                          w.drawImage(c, 0, d, k, n, 0, l, q, x),
                          w.drawImage(c, k, d, g, n, q, l, m, x),
                          w.drawImage(c, k + g, d, J, n, q + m, l, D, x),
                          w.drawImage(c, 0, d + n, k, r, 0, l + x, q, p),
                          w.drawImage(c, k, d + n, g, r, q, l + x, m, p),
                          w.drawImage(
                            c,
                            k + g,
                            d + n,
                            J,
                            r,
                            q + m,
                            l + x,
                            D,
                            p,
                          ))
                        : 0 == g && 0 != n
                          ? ((h = q + m + D),
                            w.drawImage(c, 0, 0, f, d, 0, 0, h, l),
                            w.drawImage(c, 0, d, f, n, 0, l, h, x),
                            w.drawImage(c, 0, d + n, f, r, 0, l + x, h, p))
                          : 0 == n &&
                            0 != g &&
                            ((f = l + x + p),
                            w.drawImage(c, 0, 0, k, h, 0, 0, q, f),
                            w.drawImage(c, k, 0, g, h, q, 0, m, f),
                            w.drawImage(c, k + g, 0, J, h, q + m, 0, D, f));
                    } else (b.setTransform(k, w), w.drawImage(c, 0, 0, f, h));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            ((x = b.__getAlpha(a.__worldAlpha)),
            0 < x &&
              null != a.__bitmapData &&
              a.__bitmapData.__isValid &&
              a.__bitmapData.readable &&
              ((w = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a, !1),
              Ka.convertToCanvas(a.__bitmapData.image),
              (w.globalAlpha = x),
              (J = a.__scrollRect),
              b.setTransform(a.__renderTransform, w),
              (b.__allowSmoothing && a.smoothing) ||
                (w.imageSmoothingEnabled = !1),
              null == J
                ? w.drawImage(
                    a.__bitmapData.image.get_src(),
                    0,
                    0,
                    a.__bitmapData.image.width,
                    a.__bitmapData.image.height,
                  )
                : w.drawImage(
                    a.__bitmapData.image.get_src(),
                    J.x,
                    J.y,
                    J.width,
                    J.height,
                    J.x,
                    J.y,
                    J.width,
                    J.height,
                  ),
              (b.__allowSmoothing && a.smoothing) ||
                (w.imageSmoothingEnabled = !0),
              b.__popMaskObject(a, !1)));
        } else if (((c = a.__cacheBitmap), c.__renderable)) {
          var x = b.__getAlpha(c.__worldAlpha);
          if (
            0 < x &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
          ) {
            var w = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            Ka.convertToCanvas(c.__bitmapData.image);
            w.globalAlpha = x;
            var J = c.__scrollRect;
            b.setTransform(c.__renderTransform, w);
            (b.__allowSmoothing && c.smoothing) ||
              (w.imageSmoothingEnabled = !1);
            null == J
              ? w.drawImage(
                  c.__bitmapData.image.get_src(),
                  0,
                  0,
                  c.__bitmapData.image.width,
                  c.__bitmapData.image.height,
                )
              : w.drawImage(
                  c.__bitmapData.image.get_src(),
                  J.x,
                  J.y,
                  J.width,
                  J.height,
                  J.x,
                  J.y,
                  J.width,
                  J.height,
                );
            (b.__allowSmoothing && c.smoothing) ||
              (w.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1);
          }
        }
        b.__renderEvent(a);
      };
      vh.renderDrawableMask = function (a, b) {
        b.context.rect(0, 0, a.get_width(), a.get_height());
      };
      var bj = function () {};
      g['openfl.display._internal.CanvasBitmapData'] = bj;
      bj.__name__ = 'openfl.display._internal.CanvasBitmapData';
      bj.renderDrawable = function (a, b) {
        if (a.readable) {
          var c = a.image;
          c.type == Zc.DATA && Ka.convertToCanvas(c);
          var d = b.context;
          d.globalAlpha = 1;
          b.setTransform(a.__renderTransform, d);
          d.drawImage(c.get_src(), 0, 0, c.width, c.height);
        }
      };
      bj.renderDrawableMask = function (a, b) {};
      var Tf = function () {};
      g['openfl.display._internal.CanvasDisplayObject'] = Tf;
      Tf.__name__ = 'openfl.display._internal.CanvasDisplayObject';
      Tf.renderDrawable = function (a, b) {
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, !1),
            null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          ) {
            var c = a.__cacheBitmap;
            if (c.__renderable) {
              var d = b.__getAlpha(c.__worldAlpha);
              if (
                0 < d &&
                null != c.__bitmapData &&
                c.__bitmapData.__isValid &&
                c.__bitmapData.readable
              ) {
                var f = b.context;
                b.__setBlendMode(c.__worldBlendMode);
                b.__pushMaskObject(c, !1);
                Ka.convertToCanvas(c.__bitmapData.image);
                f.globalAlpha = d;
                var h = c.__scrollRect;
                b.setTransform(c.__renderTransform, f);
                (b.__allowSmoothing && c.smoothing) ||
                  (f.imageSmoothingEnabled = !1);
                null == h
                  ? f.drawImage(
                      c.__bitmapData.image.get_src(),
                      0,
                      0,
                      c.__bitmapData.image.width,
                      c.__bitmapData.image.height,
                    )
                  : f.drawImage(
                      c.__bitmapData.image.get_src(),
                      h.x,
                      h.y,
                      h.width,
                      h.height,
                      h.x,
                      h.y,
                      h.width,
                      h.height,
                    );
                (b.__allowSmoothing && c.smoothing) ||
                  (f.imageSmoothingEnabled = !0);
                b.__popMaskObject(c, !1);
              }
            }
          } else if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((d = b.__getAlpha(a.__worldAlpha)),
              0 >= d ||
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (f = b.context),
                  b.setTransform(a.__renderTransform, f),
                  (c = a.opaqueBackground),
                  (f.fillStyle =
                    'rgb(' +
                    ((c >>> 16) & 255) +
                    ',' +
                    ((c >>> 8) & 255) +
                    ',' +
                    (c & 255) +
                    ')'),
                  f.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null == a.__graphics ||
                  !a.__renderable ||
                  ((d = b.__getAlpha(a.__worldAlpha)), 0 >= d)))
            )
          ) {
            var k = a.__graphics;
            if (null != k) {
              z.render(k, b);
              var n = k.__width,
                p = k.__height;
              c = k.__canvas;
              if (null != c && k.__visible && 1 <= n && 1 <= p) {
                var g = k.__worldTransform;
                f = b.context;
                h = a.__scrollRect;
                var q = a.__worldScale9Grid;
                if (null == h || (0 < h.width && 0 < h.height)) {
                  b.__setBlendMode(a.__worldBlendMode);
                  b.__pushMaskObject(a);
                  f.globalAlpha = d;
                  if (null != q && 0 == g.b && 0 == g.c) {
                    var m = b.__pixelRatio;
                    d = ua.__pool.get();
                    d.translate(g.tx, g.ty);
                    b.setTransform(d, f);
                    ua.__pool.release(d);
                    d = k.__bounds;
                    var u = k.__renderTransform.a / k.__bitmapScale,
                      r = k.__renderTransform.d / k.__bitmapScale,
                      l = u * g.a,
                      D = r * g.d;
                    g = Math.max(1, Math.round(q.x * u));
                    k = Math.round(q.y * r);
                    h = Math.max(
                      1,
                      Math.round((d.get_right() - q.get_right()) * u),
                    );
                    var x = Math.round((d.get_bottom() - q.get_bottom()) * r);
                    u = Math.round(q.width * u);
                    q = Math.round(q.height * r);
                    r = Math.round(g / m);
                    var w = Math.round(k / m),
                      J = Math.round(h / m);
                    m = Math.round(x / m);
                    l = d.width * l - r - J;
                    d = d.height * D - w - m;
                    b.applySmoothing(f, !1);
                    0 != u && 0 != q
                      ? (f.drawImage(c, 0, 0, g, k, 0, 0, r, w),
                        f.drawImage(c, g, 0, u, k, r, 0, l, w),
                        f.drawImage(c, g + u, 0, h, k, r + l, 0, J, w),
                        f.drawImage(c, 0, k, g, q, 0, w, r, d),
                        f.drawImage(c, g, k, u, q, r, w, l, d),
                        f.drawImage(c, g + u, k, h, q, r + l, w, J, d),
                        f.drawImage(c, 0, k + q, g, x, 0, w + d, r, m),
                        f.drawImage(c, g, k + q, u, x, r, w + d, l, m),
                        f.drawImage(c, g + u, k + q, h, x, r + l, w + d, J, m))
                      : 0 == u && 0 != q
                        ? ((p = r + l + J),
                          f.drawImage(c, 0, 0, n, k, 0, 0, p, w),
                          f.drawImage(c, 0, k, n, q, 0, w, p, d),
                          f.drawImage(c, 0, k + q, n, x, 0, w + d, p, m))
                        : 0 == q &&
                          0 != u &&
                          ((n = w + d + m),
                          f.drawImage(c, 0, 0, g, p, 0, 0, r, n),
                          f.drawImage(c, g, 0, u, p, r, 0, l, n),
                          f.drawImage(c, g + u, 0, h, p, r + l, 0, J, n));
                  } else (b.setTransform(g, f), f.drawImage(c, 0, 0, n, p));
                  b.__popMaskObject(a);
                }
              }
            }
          }
        b.__renderEvent(a);
      };
      Tf.renderDrawableMask = function (a, b) {
        null != a.__graphics && z.renderMask(a.__graphics, b);
      };
      var cj = function () {};
      g['openfl.display._internal.CanvasDisplayObjectContainer'] = cj;
      cj.__name__ = 'openfl.display._internal.CanvasDisplayObjectContainer';
      cj.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          !(
            !a.__renderable ||
            0 >= a.__worldAlpha ||
            (null != a.get_mask() &&
              (0 >= a.get_mask().get_width() || 0 >= a.get_mask().get_height()))
          ) &&
          (Tf.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              b.__renderDrawable(f);
              f.__renderDirty = !1;
            }
            a.__renderDirty = !1;
          } else
            for (c = 0, d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f));
          b.__popMaskObject(a);
        }
      };
      cj.renderDrawableMask = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && z.renderMask(a.__graphics, b);
        c = 0;
        for (a = a.__children; c < a.length; )
          ((d = a[c]), ++c, b.__renderDrawableMask(d));
      };
      var sd = function () {
        null == sd.empty
          ? ((this.types = []),
            (this.b = []),
            (this.i = []),
            (this.f = []),
            (this.o = []),
            (this.ff = []),
            (this.ii = []),
            (this.copyOnWrite = !0))
          : this.clear();
      };
      g['openfl.display._internal.DrawCommandBuffer'] = sd;
      sd.__name__ = 'openfl.display._internal.DrawCommandBuffer';
      sd.prototype = {
        beginBitmapFill: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(da.BEGIN_BITMAP_FILL);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        beginFill: function (a, b) {
          this.prepareWrite();
          this.types.push(da.BEGIN_FILL);
          this.i.push(a);
          this.f.push(b);
        },
        beginGradientFill: function (a, b, c, d, f, h, k, n) {
          this.prepareWrite();
          this.types.push(da.BEGIN_GRADIENT_FILL);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(f);
          this.o.push(h);
          this.o.push(k);
          this.f.push(n);
        },
        beginShaderFill: function (a) {
          this.prepareWrite();
          this.types.push(da.BEGIN_SHADER_FILL);
          this.o.push(a);
        },
        clear: function () {
          this.types = sd.empty.types;
          this.b = sd.empty.b;
          this.i = sd.empty.i;
          this.f = sd.empty.f;
          this.o = sd.empty.o;
          this.ff = sd.empty.ff;
          this.ii = sd.empty.ii;
          this.copyOnWrite = !0;
        },
        cubicCurveTo: function (a, b, c, d, f, h) {
          this.prepareWrite();
          this.types.push(da.CUBIC_CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(f);
          this.f.push(h);
        },
        curveTo: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(da.CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawCircle: function (a, b, c) {
          this.prepareWrite();
          this.types.push(da.DRAW_CIRCLE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
        },
        drawEllipse: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(da.DRAW_ELLIPSE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawQuads: function (a, b, c) {
          this.prepareWrite();
          this.types.push(da.DRAW_QUADS);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
        },
        drawRect: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(da.DRAW_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawRoundRect: function (a, b, c, d, f, h) {
          this.prepareWrite();
          this.types.push(da.DRAW_ROUND_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(f);
          this.o.push(h);
        },
        drawTriangles: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(da.DRAW_TRIANGLES);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
          this.o.push(d);
        },
        endFill: function () {
          this.prepareWrite();
          this.types.push(da.END_FILL);
        },
        lineBitmapStyle: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(da.LINE_BITMAP_STYLE);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        lineGradientStyle: function (a, b, c, d, f, h, k, n) {
          this.prepareWrite();
          this.types.push(da.LINE_GRADIENT_STYLE);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(f);
          this.o.push(h);
          this.o.push(k);
          this.f.push(n);
        },
        lineStyle: function (a, b, c, d, f, h, k, n) {
          this.prepareWrite();
          this.types.push(da.LINE_STYLE);
          this.o.push(a);
          this.i.push(b);
          this.f.push(c);
          this.b.push(d);
          this.o.push(f);
          this.o.push(h);
          this.o.push(k);
          this.f.push(n);
        },
        lineTo: function (a, b) {
          this.prepareWrite();
          this.types.push(da.LINE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        moveTo: function (a, b) {
          this.prepareWrite();
          this.types.push(da.MOVE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        prepareWrite: function () {
          this.copyOnWrite &&
            ((this.types = this.types.slice()),
            (this.b = this.b.slice()),
            (this.i = this.i.slice()),
            (this.f = this.f.slice()),
            (this.o = this.o.slice()),
            (this.ff = this.ff.slice()),
            (this.ii = this.ii.slice()),
            (this.copyOnWrite = !1));
        },
        windingEvenOdd: function () {
          this.prepareWrite();
          this.types.push(da.WINDING_EVEN_ODD);
        },
        windingNonZero: function () {
          this.prepareWrite();
          this.types.push(da.WINDING_NON_ZERO);
        },
        get_length: function () {
          return this.types.length;
        },
        __class__: sd,
        __properties__: { get_length: 'get_length' },
      };
      var z = function () {};
      g['openfl.display._internal.CanvasGraphics'] = z;
      z.__name__ = 'openfl.display._internal.CanvasGraphics';
      z.closePath = function (a) {
        null == a && (a = !1);
        null != z.context.strokeStyle &&
          (a || z.context.closePath(),
          z.context.stroke(),
          a && z.context.closePath(),
          z.context.beginPath());
      };
      z.createBitmapFill = function (a, b, c) {
        Ka.convertToCanvas(a.image);
        z.setSmoothing(c);
        return z.context.createPattern(
          a.image.get_src(),
          b ? 'repeat' : 'no-repeat',
        );
      };
      z.createGradientPattern = function (a, b, c, d, f, h, k, n) {
        k = !1;
        null == f && ((f = ua.__pool.get()), f.identity(), (k = !0));
        switch (a) {
          case 0:
            if (0 == h) {
              a = z.context.createLinearGradient(-819.2, 0, 819.2, 0);
              z.pendingMatrix = f.clone();
              z.inversePendingMatrix = f.clone();
              z.inversePendingMatrix.invert();
              for (var g = 0, q = b.length; g < q; ) {
                var u = g++;
                h = d[u] / 255;
                0 > h ? (h = 0) : 1 < h && (h = 1);
                a.addColorStop(h, z.getRGBA(b[u], c[u]));
              }
              k && ua.__pool.release(f);
              return a;
            }
            a = 819.2 * ((0 == h ? 1 : 25) - 1);
            k = window.document.createElement('canvas');
            n = k.getContext('2d');
            var m = z.getDimensions(f);
            k.width = z.context.canvas.width;
            k.height = z.context.canvas.height;
            a = z.context.createLinearGradient(-819.2 - a, 0, 819.2 + a, 0);
            if (1 == h)
              for (var r = 0, l = 0.04; 1 > r; ) {
                g = 0;
                for (q = b.length; g < q; )
                  ((u = g++),
                    (h = d[u] / 255),
                    (h = r + h * l),
                    0 > h ? (h = 0) : 1 < h && (h = 1),
                    a.addColorStop(h, z.getRGBA(b[u], c[u])));
                r += l;
                for (g = b.length - 1; 0 <= g; )
                  ((h = d[g] / 255),
                    (h = r + (1 - h) * l),
                    0 > h ? (h = 0) : 1 < h && (h = 1),
                    a.addColorStop(h, z.getRGBA(b[g], c[g])),
                    --g);
                r += l;
              }
            else if (2 == h)
              for (r = 0, l = 0.04; 1 > r; ) {
                g = 0;
                for (q = b.length; g < q; )
                  ((u = g++),
                    (h = d[u] / 255),
                    (h = r + h * l),
                    0 > h ? (h = 0) : 1 < h && (h = 0.999),
                    a.addColorStop(h, z.getRGBA(b[u], c[u])));
                h = r + 0.001;
                0 > h ? (h = 0) : 1 < h && (h = 1);
                a.addColorStop(
                  h - 0.001,
                  z.getRGBA(b[b.length - 1], c[c.length - 1]),
                );
                a.addColorStop(h, z.getRGBA(b[0], c[0]));
                r += l;
              }
            z.pendingMatrix = new ua();
            z.pendingMatrix.tx = f.tx - m.width / 2;
            z.pendingMatrix.ty = f.ty - m.height / 2;
            z.inversePendingMatrix = z.pendingMatrix.clone();
            z.inversePendingMatrix.invert();
            b = new Path2D();
            b.rect(0, 0, k.width, k.height);
            b.closePath();
            f = new DOMMatrix([f.a, f.b, f.c, f.d, f.tx, f.ty]);
            c = f.inverse();
            d = new Path2D();
            d.addPath(b, c);
            n.fillStyle = a;
            n.setTransform(f);
            n.fill(d);
            return z.context.createPattern(k, 'no-repeat');
          case 1:
            1 < n ? (n = 1) : -1 > n && (n = -1);
            a = z.context.createRadialGradient(819.2 * n, 0, 0, 0, 0, 819.2);
            z.pendingMatrix = f.clone();
            z.inversePendingMatrix = f.clone();
            z.inversePendingMatrix.invert();
            g = 0;
            for (q = b.length; g < q; )
              ((u = g++),
                (h = d[u] / 255),
                0 > h ? (h = 0) : 1 < h && (h = 1),
                a.addColorStop(h, z.getRGBA(b[u], c[u])));
            k && ua.__pool.release(f);
            return a;
        }
      };
      z.getRGBA = function (a, b) {
        var c = (a & 16711680) >>> 16,
          d = (a & 65280) >>> 8;
        a &= 255;
        return (
          'rgba(' +
          (null == c ? 'null' : H.string(cb.toFloat(c))) +
          ', ' +
          (null == d ? 'null' : H.string(cb.toFloat(d))) +
          ', ' +
          (null == a ? 'null' : H.string(cb.toFloat(a))) +
          ', ' +
          b +
          ')'
        );
      };
      z.getDimensions = function (a) {
        var b = Math.cos(Math.atan2(a.c, a.a)),
          c = (a.a / b) * 1638.4;
        a = (a.d / b) * 1638.4;
        0 == c && 0 == a && (c = a = 819.2);
        return { width: c, height: a };
      };
      z.createTempPatternCanvas = function (a, b, c, d) {
        var f = window.document.createElement('canvas'),
          h = f.getContext('2d');
        f.width = c;
        f.height = d;
        a = a.image.get_src();
        h.fillStyle = h.createPattern(a, b ? 'repeat' : 'no-repeat');
        h.beginPath();
        h.moveTo(0, 0);
        h.lineTo(0, d);
        h.lineTo(c, d);
        h.lineTo(c, 0);
        h.lineTo(0, 0);
        h.closePath();
        z.hitTesting || h.fill(z.windingRule);
        return f;
      };
      z.drawRoundRect = function (a, b, c, d, f, h) {
        null == h && (h = f);
        f *= 0.5;
        h *= 0.5;
        f > c / 2 && (f = c / 2);
        h > d / 2 && (h = d / 2);
        c = a + c;
        d = b + d;
        var k = -f + 0.7071067811865476 * f,
          n = -f + 0.41421356237309503 * f,
          g = -h + 0.7071067811865476 * h,
          q = -h + 0.41421356237309503 * h;
        z.context.moveTo(c, d - h);
        z.context.quadraticCurveTo(c, d + q, c + k, d + g);
        z.context.quadraticCurveTo(c + n, d, c - f, d);
        z.context.lineTo(a + f, d);
        z.context.quadraticCurveTo(a - n, d, a - k, d + g);
        z.context.quadraticCurveTo(a, d + q, a, d - h);
        z.context.lineTo(a, b + h);
        z.context.quadraticCurveTo(a, b - q, a - k, b - g);
        z.context.quadraticCurveTo(a - n, b, a + f, b);
        z.context.lineTo(c - f, b);
        z.context.quadraticCurveTo(c + n, b, c + k, b - g);
        z.context.quadraticCurveTo(c, b - q, c, b + h);
        z.context.lineTo(c, d - h);
      };
      z.endFill = function () {
        z.context.beginPath();
        z.playCommands(z.fillCommands, !1);
        z.fillCommands.clear();
      };
      z.endStroke = function () {
        z.context.beginPath();
        z.playCommands(z.strokeCommands, !0);
        z.context.closePath();
        z.strokeCommands.clear();
      };
      z.hitTest = function (a, b, c) {
        z.bounds = a.__bounds;
        z.graphics = a;
        if (
          0 == a.__commands.get_length() ||
          null == z.bounds ||
          0 >= z.bounds.width ||
          0 >= z.bounds.height
        )
          return ((z.graphics = null), !1);
        z.hitTesting = !0;
        var d = a.__renderTransform,
          f = b * d.b + c * d.d + d.ty;
        b =
          b * d.a +
          c * d.c +
          d.tx -
          (z.bounds.x * d.a + z.bounds.y * d.c + d.tx);
        c = f - (z.bounds.x * d.b + z.bounds.y * d.d + d.ty);
        f = a.__canvas;
        var h = a.__context;
        a.__canvas = z.hitTestCanvas;
        a.__context = z.hitTestContext;
        z.context = a.__context;
        z.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
        z.fillCommands.clear();
        z.strokeCommands.clear();
        z.hasFill = !1;
        z.hasStroke = !1;
        z.bitmapFill = null;
        z.bitmapRepeat = !1;
        z.windingRule = 'evenodd';
        d = new ue(a.__commands);
        for (var k = 0, n = a.__commands.types; k < n.length; ) {
          var g = n[k];
          ++k;
          switch (g._hx_index) {
            case 0:
            case 1:
            case 2:
            case 3:
              z.endFill();
              if (z.hasFill && z.context.isPointInPath(b, c, z.windingRule))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (z.graphics = null),
                  !0
                );
              z.endStroke();
              if (z.hasStroke && z.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (z.graphics = null),
                  !0
                );
              if (g == da.BEGIN_BITMAP_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = da.BEGIN_BITMAP_FILL;
                g = d;
                z.fillCommands.beginBitmapFill(
                  g.buffer.o[g.oPos],
                  g.buffer.o[g.oPos + 1],
                  g.buffer.b[g.bPos],
                  g.buffer.b[g.bPos + 1],
                );
                z.strokeCommands.beginBitmapFill(
                  g.buffer.o[g.oPos],
                  g.buffer.o[g.oPos + 1],
                  g.buffer.b[g.bPos],
                  g.buffer.b[g.bPos + 1],
                );
              } else if (g == da.BEGIN_GRADIENT_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = da.BEGIN_GRADIENT_FILL;
                g = d;
                z.fillCommands.beginGradientFill(
                  g.buffer.o[g.oPos],
                  g.buffer.ii[g.iiPos],
                  g.buffer.ff[g.ffPos],
                  g.buffer.ii[g.iiPos + 1],
                  g.buffer.o[g.oPos + 1],
                  g.buffer.o[g.oPos + 2],
                  g.buffer.o[g.oPos + 3],
                  g.buffer.f[g.fPos],
                );
                z.strokeCommands.beginGradientFill(
                  g.buffer.o[g.oPos],
                  g.buffer.ii[g.iiPos],
                  g.buffer.ff[g.ffPos],
                  g.buffer.ii[g.iiPos + 1],
                  g.buffer.o[g.oPos + 1],
                  g.buffer.o[g.oPos + 2],
                  g.buffer.o[g.oPos + 3],
                  g.buffer.f[g.fPos],
                );
              } else if (g == da.BEGIN_SHADER_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = da.BEGIN_SHADER_FILL;
                g = d;
                z.fillCommands.beginShaderFill(g.buffer.o[g.oPos]);
                z.strokeCommands.beginShaderFill(g.buffer.o[g.oPos]);
              } else {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = da.BEGIN_FILL;
                g = d;
                z.fillCommands.beginFill(g.buffer.i[g.iPos], 1);
                z.strokeCommands.beginFill(g.buffer.i[g.iPos], 1);
              }
              break;
            case 4:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.CUBIC_CURVE_TO;
              g = d;
              z.fillCommands.cubicCurveTo(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
                g.buffer.f[g.fPos + 4],
                g.buffer.f[g.fPos + 5],
              );
              z.strokeCommands.cubicCurveTo(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
                g.buffer.f[g.fPos + 4],
                g.buffer.f[g.fPos + 5],
              );
              break;
            case 5:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.CURVE_TO;
              g = d;
              z.fillCommands.curveTo(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
              );
              z.strokeCommands.curveTo(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
              );
              break;
            case 6:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.DRAW_CIRCLE;
              g = d;
              z.fillCommands.drawCircle(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
              );
              z.strokeCommands.drawCircle(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
              );
              break;
            case 7:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.DRAW_ELLIPSE;
              g = d;
              z.fillCommands.drawEllipse(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
              );
              z.strokeCommands.drawEllipse(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
              );
              break;
            case 9:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.DRAW_RECT;
              g = d;
              z.fillCommands.drawRect(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
              );
              z.strokeCommands.drawRect(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
              );
              break;
            case 10:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.DRAW_ROUND_RECT;
              g = d;
              z.fillCommands.drawRoundRect(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
                g.buffer.f[g.fPos + 4],
                g.buffer.o[g.oPos],
              );
              z.strokeCommands.drawRoundRect(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
                g.buffer.f[g.fPos + 2],
                g.buffer.f[g.fPos + 3],
                g.buffer.f[g.fPos + 4],
                g.buffer.o[g.oPos],
              );
              break;
            case 13:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.END_FILL;
              z.endFill();
              if (z.hasFill && z.context.isPointInPath(b, c, z.windingRule))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (z.graphics = null),
                  !0
                );
              z.endStroke();
              if (z.hasStroke && z.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (z.graphics = null),
                  !0
                );
              z.hasFill = !1;
              z.bitmapFill = null;
              break;
            case 14:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.LINE_BITMAP_STYLE;
              g = d;
              z.strokeCommands.lineBitmapStyle(
                g.buffer.o[g.oPos],
                g.buffer.o[g.oPos + 1],
                g.buffer.b[g.bPos],
                g.buffer.b[g.bPos + 1],
              );
              break;
            case 15:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.LINE_GRADIENT_STYLE;
              g = d;
              z.strokeCommands.lineGradientStyle(
                g.buffer.o[g.oPos],
                g.buffer.ii[g.iiPos],
                g.buffer.ff[g.ffPos],
                g.buffer.ii[g.iiPos + 1],
                g.buffer.o[g.oPos + 1],
                g.buffer.o[g.oPos + 2],
                g.buffer.o[g.oPos + 3],
                g.buffer.f[g.fPos],
              );
              break;
            case 16:
              z.endStroke();
              if (z.hasStroke && z.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = h),
                  (z.graphics = null),
                  !0
                );
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.LINE_STYLE;
              g = d;
              z.strokeCommands.lineStyle(
                g.buffer.o[g.oPos],
                g.buffer.i[g.iPos],
                1,
                g.buffer.b[g.bPos],
                g.buffer.o[g.oPos + 1],
                g.buffer.o[g.oPos + 2],
                g.buffer.o[g.oPos + 3],
                g.buffer.f[g.fPos + 1],
              );
              break;
            case 17:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.LINE_TO;
              g = d;
              z.fillCommands.lineTo(g.buffer.f[g.fPos], g.buffer.f[g.fPos + 1]);
              z.strokeCommands.lineTo(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
              );
              break;
            case 18:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = da.MOVE_TO;
              g = d;
              z.fillCommands.moveTo(g.buffer.f[g.fPos], g.buffer.f[g.fPos + 1]);
              z.strokeCommands.moveTo(
                g.buffer.f[g.fPos],
                g.buffer.f[g.fPos + 1],
              );
              break;
            case 21:
              z.windingRule = 'evenodd';
              break;
            case 22:
              z.windingRule = 'nonzero';
              break;
            default:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = g;
          }
        }
        k = !1;
        0 < z.fillCommands.get_length() && z.endFill();
        z.hasFill && z.context.isPointInPath(b, c, z.windingRule) && (k = !0);
        0 < z.strokeCommands.get_length() && z.endStroke();
        z.hasStroke && z.context.isPointInStroke(b, c) && (k = !0);
        d.destroy();
        a.__canvas = f;
        a.__context = h;
        z.graphics = null;
        return k;
      };
      z.normalizeUVT = function (a, b) {
        null == b && (b = !1);
        for (
          var c = -Infinity, d, f = a.get_length(), h = 1, k = f + 1;
          h < k;

        )
          ((d = h++),
            (b && 0 == d % 3) || ((d = a.get(d - 1)), c < d && (c = d)));
        if (!b) return { max: c, uvt: a };
        var g = la.toFloatVector(null);
        h = 1;
        for (k = f + 1; h < k; )
          ((d = h++), (b && 0 == d % 3) || g.push(a.get(d - 1)));
        return { max: c, uvt: g };
      };
      z.playCommands = function (a, b) {
        null == b && (b = !1);
        z.bounds = z.graphics.__bounds;
        var c = z.bounds.x,
          d = z.bounds.y,
          f = 0,
          h = 0,
          k = !1,
          g = 0,
          p = 0,
          q = !1;
        z.windingRule = 'evenodd';
        z.setSmoothing(!0);
        var u = !1,
          m = new ue(a),
          r,
          l,
          D,
          x = null,
          w = null,
          J = 0,
          y = a.types;
        a: for (; J < y.length; ) {
          var C = y[J];
          ++J;
          switch (C._hx_index) {
            case 0:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.BEGIN_BITMAP_FILL;
              var t = m;
              z.bitmapFill = t.buffer.o[t.oPos];
              if (t.buffer.o[t.oPos].readable)
                z.context.fillStyle = z.createBitmapFill(
                  t.buffer.o[t.oPos],
                  t.buffer.b[t.bPos],
                  t.buffer.b[t.bPos + 1],
                );
              else {
                var v = O.hex(0, 6);
                z.context.fillStyle = '#' + v;
              }
              z.hasFill = !0;
              null != t.buffer.o[t.oPos + 1]
                ? ((z.pendingMatrix = t.buffer.o[t.oPos + 1]),
                  (z.inversePendingMatrix = t.buffer.o[t.oPos + 1].clone()),
                  z.inversePendingMatrix.invert())
                : ((z.pendingMatrix = null), (z.inversePendingMatrix = null));
              break;
            case 1:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.BEGIN_FILL;
              var G = m;
              if (0.005 > G.buffer.f[G.fPos]) z.hasFill = !1;
              else {
                if (1 == G.buffer.f[G.fPos]) {
                  var F = O.hex(G.buffer.i[G.iPos] & 16777215, 6);
                  z.context.fillStyle = '#' + F;
                } else {
                  var eb = (G.buffer.i[G.iPos] & 16711680) >>> 16;
                  var H = (G.buffer.i[G.iPos] & 65280) >>> 8;
                  var kb = G.buffer.i[G.iPos] & 255;
                  z.context.fillStyle =
                    'rgba(' +
                    eb +
                    ', ' +
                    H +
                    ', ' +
                    kb +
                    ', ' +
                    G.buffer.f[G.fPos] +
                    ')';
                }
                z.bitmapFill = null;
                z.setSmoothing(!0);
                z.hasFill = !0;
              }
              break;
            case 2:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.BEGIN_GRADIENT_FILL;
              var K = m;
              z.context.fillStyle = z.createGradientPattern(
                K.buffer.o[K.oPos],
                K.buffer.ii[K.iiPos],
                K.buffer.ff[K.ffPos],
                K.buffer.ii[K.iiPos + 1],
                K.buffer.o[K.oPos + 1],
                K.buffer.o[K.oPos + 2],
                K.buffer.o[K.oPos + 3],
                K.buffer.f[K.fPos],
              );
              z.bitmapFill = null;
              z.setSmoothing(!0);
              z.hasFill = !0;
              break;
            case 3:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.BEGIN_SHADER_FILL;
              var Wa = m,
                E = Wa.buffer.o[Wa.oPos];
              if (0 < E.inputCount) {
                z.bitmapFill = E.inputs[0];
                if (z.bitmapFill.readable)
                  z.context.fillStyle = z.createBitmapFill(
                    z.bitmapFill,
                    0 != E.inputWrap[0],
                    5 != E.inputFilter[0],
                  );
                else {
                  var sa = O.hex(0, 6);
                  z.context.fillStyle = '#' + sa;
                }
                z.hasFill = !0;
                z.pendingMatrix = null;
                z.inversePendingMatrix = null;
              }
              break;
            case 4:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.CUBIC_CURVE_TO;
              var Y = m;
              u = !0;
              z.context.bezierCurveTo(
                Y.buffer.f[Y.fPos] - c,
                Y.buffer.f[Y.fPos + 1] - d,
                Y.buffer.f[Y.fPos + 2] - c,
                Y.buffer.f[Y.fPos + 3] - d,
                Y.buffer.f[Y.fPos + 4] - c,
                Y.buffer.f[Y.fPos + 5] - d,
              );
              f = Y.buffer.f[Y.fPos + 4];
              h = Y.buffer.f[Y.fPos + 5];
              break;
            case 5:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.CURVE_TO;
              var W = m;
              u = !0;
              z.context.quadraticCurveTo(
                W.buffer.f[W.fPos] - c,
                W.buffer.f[W.fPos + 1] - d,
                W.buffer.f[W.fPos + 2] - c,
                W.buffer.f[W.fPos + 3] - d,
              );
              f = W.buffer.f[W.fPos + 2];
              h = W.buffer.f[W.fPos + 3];
              break;
            case 6:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.DRAW_CIRCLE;
              var A = m;
              u = !0;
              z.context.moveTo(
                A.buffer.f[A.fPos] - c + A.buffer.f[A.fPos + 2],
                A.buffer.f[A.fPos + 1] - d,
              );
              z.context.arc(
                A.buffer.f[A.fPos] - c,
                A.buffer.f[A.fPos + 1] - d,
                A.buffer.f[A.fPos + 2],
                0,
                2 * Math.PI,
                !0,
              );
              break;
            case 7:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.DRAW_ELLIPSE;
              var $a = m;
              u = !0;
              var cb = $a.buffer.f[$a.fPos];
              var B = $a.buffer.f[$a.fPos + 1];
              var L = $a.buffer.f[$a.fPos + 2];
              var N = $a.buffer.f[$a.fPos + 3];
              cb -= c;
              B -= d;
              var aa = (L / 2) * 0.5522848;
              var U = (N / 2) * 0.5522848;
              var ab = cb + L;
              var R = B + N;
              var S = cb + L / 2;
              var V = B + N / 2;
              z.context.moveTo(cb, V);
              z.context.bezierCurveTo(cb, V - U, S - aa, B, S, B);
              z.context.bezierCurveTo(S + aa, B, ab, V - U, ab, V);
              z.context.bezierCurveTo(ab, V + U, S + aa, R, S, R);
              z.context.bezierCurveTo(S - aa, R, cb, V + U, cb, V);
              break;
            case 8:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.DRAW_QUADS;
              var Cb = m,
                ea = Cb.buffer.o[Cb.oPos],
                X = Cb.buffer.o[Cb.oPos + 1],
                Q = Cb.buffer.o[Cb.oPos + 2],
                Z = null != X,
                T = !1,
                M = !1,
                xa = Z ? X.get_length() : Math.floor(ea.get_length() / 4);
              if (0 == xa) return;
              null != Q &&
                (Q.get_length() >= 6 * xa
                  ? (M = T = !0)
                  : Q.get_length() >= 4 * xa
                    ? (T = !0)
                    : Q.get_length() >= 2 * xa && (M = !0));
              var Oc = na.__pool.get(),
                Pb = ua.__pool.get(),
                pa = z.graphics.__renderTransform;
              z.context.save();
              for (var Ef = 0, ca = xa; Ef < ca; ) {
                var bb = Ef++;
                var Od = Z ? 4 * X.get(bb) : 4 * bb;
                if (
                  !(
                    0 > Od ||
                    (Oc.setTo(
                      ea.get(Od),
                      ea.get(Od + 1),
                      ea.get(Od + 2),
                      ea.get(Od + 3),
                    ),
                    0 >= Oc.width || 0 >= Oc.height)
                  )
                ) {
                  if (T && M) {
                    var ba = 6 * bb;
                    Pb.setTo(
                      Q.get(ba),
                      Q.get(ba + 1),
                      Q.get(ba + 2),
                      Q.get(ba + 3),
                      Q.get(ba + 4),
                      Q.get(ba + 5),
                    );
                  } else
                    T
                      ? ((ba = 4 * bb),
                        Pb.setTo(
                          Q.get(ba),
                          Q.get(ba + 1),
                          Q.get(ba + 2),
                          Q.get(ba + 3),
                          Oc.x,
                          Oc.y,
                        ))
                      : M
                        ? ((ba = 2 * bb),
                          (Pb.tx = Q.get(ba)),
                          (Pb.ty = Q.get(ba + 1)))
                        : ((Pb.tx = Oc.x), (Pb.ty = Oc.y));
                  Pb.tx += f - c;
                  Pb.ty += h - d;
                  Pb.concat(pa);
                  z.context.setTransform(Pb.a, Pb.b, Pb.c, Pb.d, Pb.tx, Pb.ty);
                  null != z.bitmapFill && z.bitmapFill.readable
                    ? z.context.drawImage(
                        z.bitmapFill.image.get_src(),
                        Oc.x,
                        Oc.y,
                        Oc.width,
                        Oc.height,
                        0,
                        0,
                        Oc.width,
                        Oc.height,
                      )
                    : z.context.fillRect(0, 0, Oc.width, Oc.height);
                }
              }
              na.__pool.release(Oc);
              ua.__pool.release(Pb);
              z.context.restore();
              break;
            case 9:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.DRAW_RECT;
              var Oa = m;
              var fa = !1;
              if (
                null != z.bitmapFill &&
                z.bitmapFill.readable &&
                !z.hitTesting
              ) {
                var ia = (D = l = r = 0);
                var oa = !0;
                if (null != z.pendingMatrix)
                  if (0 != z.pendingMatrix.b || 0 != z.pendingMatrix.c) oa = !1;
                  else {
                    null == x && (x = I.__pool.get());
                    null == w && (w = I.__pool.get());
                    x.setTo(Oa.buffer.f[Oa.fPos], Oa.buffer.f[Oa.fPos + 1]);
                    var ha = z.inversePendingMatrix,
                      ka = x.x,
                      ma = x.y;
                    x.x = ka * ha.a + ma * ha.c + ha.tx;
                    x.y = ka * ha.b + ma * ha.d + ha.ty;
                    w.setTo(
                      Oa.buffer.f[Oa.fPos] + Oa.buffer.f[Oa.fPos + 2],
                      Oa.buffer.f[Oa.fPos + 1] + Oa.buffer.f[Oa.fPos + 3],
                    );
                    var vd = z.inversePendingMatrix,
                      Ff = w.x,
                      ra = w.y;
                    w.x = Ff * vd.a + ra * vd.c + vd.tx;
                    w.y = Ff * vd.b + ra * vd.d + vd.ty;
                    r = x.y;
                    ia = x.x;
                    D = w.y;
                    l = w.x;
                  }
                else
                  ((r = Oa.buffer.f[Oa.fPos + 1]),
                    (ia = Oa.buffer.f[Oa.fPos]),
                    (D = Oa.buffer.f[Oa.fPos + 1] + Oa.buffer.f[Oa.fPos + 3]),
                    (l = Oa.buffer.f[Oa.fPos] + Oa.buffer.f[Oa.fPos + 2]));
                oa &&
                  0 <= r &&
                  0 <= ia &&
                  l <= z.bitmapFill.width &&
                  D <= z.bitmapFill.height &&
                  ((fa = !0),
                  z.hitTesting ||
                    z.context.drawImage(
                      z.bitmapFill.image.get_src(),
                      ia,
                      r,
                      l - ia,
                      D - r,
                      Oa.buffer.f[Oa.fPos] - c,
                      Oa.buffer.f[Oa.fPos + 1] - d,
                      Oa.buffer.f[Oa.fPos + 2],
                      Oa.buffer.f[Oa.fPos + 3],
                    ));
              }
              fa ||
                ((u = !0),
                z.context.rect(
                  Oa.buffer.f[Oa.fPos] - c,
                  Oa.buffer.f[Oa.fPos + 1] - d,
                  Oa.buffer.f[Oa.fPos + 2],
                  Oa.buffer.f[Oa.fPos + 3],
                ));
              break;
            case 10:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.DRAW_ROUND_RECT;
              var ja = m;
              u = !0;
              z.drawRoundRect(
                ja.buffer.f[ja.fPos] - c,
                ja.buffer.f[ja.fPos + 1] - d,
                ja.buffer.f[ja.fPos + 2],
                ja.buffer.f[ja.fPos + 3],
                ja.buffer.f[ja.fPos + 4],
                ja.buffer.o[ja.oPos],
              );
              break;
            case 12:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.DRAW_TRIANGLES;
              var fd = m,
                Hb = fd.buffer.o[fd.oPos],
                wa = fd.buffer.o[fd.oPos + 1],
                qa = fd.buffer.o[fd.oPos + 2],
                va = null,
                ob = null == z.bitmapFill;
              if (ob && null != qa) break a;
              if (!ob) {
                if (null == qa) {
                  qa = la.toFloatVector(null);
                  for (var ya = 0, fb = (Hb.get_length() / 2) | 0; ya < fb; ) {
                    var Aa = ya++;
                    qa.push(Hb.get(2 * Aa) - c / z.bitmapFill.width);
                    qa.push(Hb.get(2 * Aa + 1) - d / z.bitmapFill.height);
                  }
                }
                var Qa = qa.get_length() != Hb.get_length(),
                  Ba = z.normalizeUVT(qa, Qa),
                  lb = Ba.max;
                qa = Ba.uvt;
                va =
                  1 < lb
                    ? z.createTempPatternCanvas(
                        z.bitmapFill,
                        z.bitmapRepeat,
                        z.bounds.width | 0,
                        z.bounds.height | 0,
                      )
                    : z.createTempPatternCanvas(
                        z.bitmapFill,
                        z.bitmapRepeat,
                        z.bitmapFill.width,
                        z.bitmapFill.height,
                      );
              }
              for (
                var Va = 0,
                  Xa = wa.get_length(),
                  Fa,
                  ib,
                  mb,
                  Ja,
                  Ka,
                  La,
                  Ma,
                  Pa,
                  xc,
                  Ca,
                  Ea,
                  Ga,
                  za,
                  Sb,
                  Ha,
                  Ra,
                  Ia,
                  Na,
                  ta,
                  Sa,
                  Ta,
                  Ua,
                  db,
                  sb,
                  Ab,
                  hb,
                  Id,
                  jb;
                Va < Xa;

              ) {
                Fa = Va;
                ib = Va + 1;
                mb = Va + 2;
                Ja = 2 * wa.get(Fa);
                Ka = 2 * wa.get(Fa) + 1;
                La = 2 * wa.get(ib);
                Ma = 2 * wa.get(ib) + 1;
                Pa = 2 * wa.get(mb);
                xc = 2 * wa.get(mb) + 1;
                Ca = Hb.get(Ja) - c;
                Ea = Hb.get(Ka) - d;
                Ga = Hb.get(La) - c;
                za = Hb.get(Ma) - d;
                Sb = Hb.get(Pa) - c;
                Ha = Hb.get(xc) - d;
                switch (fd.buffer.o[fd.oPos + 3]) {
                  case 0:
                    if (0 > (Ga - Ca) * (Ha - Ea) - (za - Ea) * (Sb - Ca)) {
                      Va += 3;
                      continue;
                    }
                    break;
                  case 2:
                    if (!(0 > (Ga - Ca) * (Ha - Ea) - (za - Ea) * (Sb - Ca))) {
                      Va += 3;
                      continue;
                    }
                }
                ob
                  ? (z.context.beginPath(),
                    z.context.moveTo(Ca, Ea),
                    z.context.lineTo(Ga, za),
                    z.context.lineTo(Sb, Ha),
                    z.context.closePath(),
                    z.hitTesting || z.context.fill(z.windingRule),
                    (Va += 3))
                  : ((Ra = qa.get(Ja) * va.width),
                    (Na = qa.get(La) * va.width),
                    (Sa = qa.get(Pa) * va.width),
                    (Ia = qa.get(Ka) * va.height),
                    (ta = qa.get(Ma) * va.height),
                    (Ta = qa.get(xc) * va.height),
                    (Ua = Ra * (Ta - ta) - Na * Ta + Sa * ta + (Na - Sa) * Ia),
                    0 == Ua
                      ? ((Va += 3), z.context.restore())
                      : (z.context.save(),
                        z.context.beginPath(),
                        z.context.moveTo(Ca, Ea),
                        z.context.lineTo(Ga, za),
                        z.context.lineTo(Sb, Ha),
                        z.context.closePath(),
                        z.context.clip(),
                        (db =
                          -(
                            Ia * (Sb - Ga) -
                            ta * Sb +
                            Ta * Ga +
                            (ta - Ta) * Ca
                          ) / Ua),
                        (sb =
                          (ta * Ha +
                            Ia * (za - Ha) -
                            Ta * za +
                            (Ta - ta) * Ea) /
                          Ua),
                        (Ab =
                          (Ra * (Sb - Ga) -
                            Na * Sb +
                            Sa * Ga +
                            (Na - Sa) * Ca) /
                          Ua),
                        (hb =
                          -(
                            Na * Ha +
                            Ra * (za - Ha) -
                            Sa * za +
                            (Sa - Na) * Ea
                          ) / Ua),
                        (Id =
                          (Ra * (Ta * Ga - ta * Sb) +
                            Ia * (Na * Sb - Sa * Ga) +
                            (Sa * ta - Na * Ta) * Ca) /
                          Ua),
                        (jb =
                          (Ra * (Ta * za - ta * Ha) +
                            Ia * (Na * Ha - Sa * za) +
                            (Sa * ta - Na * Ta) * Ea) /
                          Ua),
                        z.context.transform(db, sb, Ab, hb, Id, jb),
                        z.context.drawImage(va, 0, 0, va.width, va.height),
                        z.context.restore(),
                        (Va += 3)));
              }
              break;
            case 14:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.LINE_BITMAP_STYLE;
              var nb = m;
              b && z.hasStroke && z.closePath(!0);
              z.context.moveTo(f - c, h - d);
              if (nb.buffer.o[nb.oPos].readable)
                z.context.strokeStyle = z.createBitmapFill(
                  nb.buffer.o[nb.oPos],
                  nb.buffer.b[nb.bPos],
                  nb.buffer.b[nb.bPos + 1],
                );
              else {
                var Le = O.hex(0, 6);
                z.context.strokeStyle = '#' + Le;
              }
              z.hasStroke = !0;
              break;
            case 15:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.LINE_GRADIENT_STYLE;
              var Ya = m;
              b && z.hasStroke && z.closePath(!0);
              z.context.moveTo(f - c, h - d);
              z.context.strokeStyle = z.createGradientPattern(
                Ya.buffer.o[Ya.oPos],
                Ya.buffer.ii[Ya.iiPos],
                Ya.buffer.ff[Ya.ffPos],
                Ya.buffer.ii[Ya.iiPos + 1],
                Ya.buffer.o[Ya.oPos + 1],
                Ya.buffer.o[Ya.oPos + 2],
                Ya.buffer.o[Ya.oPos + 3],
                Ya.buffer.f[Ya.fPos],
              );
              z.setSmoothing(!0);
              z.hasStroke = !0;
              break;
            case 16:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.LINE_STYLE;
              var Da = m;
              b && z.hasStroke && z.closePath(!0);
              z.context.moveTo(f - c, h - d);
              if (null == Da.buffer.o[Da.oPos]) z.hasStroke = !1;
              else {
                z.context.lineWidth =
                  0 < Da.buffer.o[Da.oPos] ? Da.buffer.o[Da.oPos] : 1;
                var pb =
                  null == Da.buffer.o[Da.oPos + 3]
                    ? 'round'
                    : (null == Da.buffer.o[Da.oPos + 3]
                        ? 'null'
                        : Ml.toString(Da.buffer.o[Da.oPos + 3])
                      ).toLowerCase();
                z.context.lineJoin = pb;
                var qb =
                  null == Da.buffer.o[Da.oPos + 2]
                    ? 'round'
                    : 0 == Da.buffer.o[Da.oPos + 2]
                      ? 'butt'
                      : (null == Da.buffer.o[Da.oPos + 2]
                          ? 'null'
                          : Ll.toString(Da.buffer.o[Da.oPos + 2])
                        ).toLowerCase();
                z.context.lineCap = qb;
                z.context.miterLimit = Da.buffer.f[Da.fPos + 1];
                if (1 == Da.buffer.f[Da.fPos]) {
                  var rb = O.hex(Da.buffer.i[Da.iPos] & 16777215, 6);
                  z.context.strokeStyle = '#' + rb;
                } else
                  ((eb = (Da.buffer.i[Da.iPos] & 16711680) >>> 16),
                    (H = (Da.buffer.i[Da.iPos] & 65280) >>> 8),
                    (kb = Da.buffer.i[Da.iPos] & 255),
                    (z.context.strokeStyle =
                      'rgba(' +
                      eb +
                      ', ' +
                      H +
                      ', ' +
                      kb +
                      ', ' +
                      Da.buffer.f[Da.fPos] +
                      ')'));
                z.setSmoothing(!0);
                z.hasStroke = !0;
              }
              break;
            case 17:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.LINE_TO;
              var gb = m;
              u = !0;
              z.context.lineTo(
                gb.buffer.f[gb.fPos] - c,
                gb.buffer.f[gb.fPos + 1] - d,
              );
              f = gb.buffer.f[gb.fPos];
              h = gb.buffer.f[gb.fPos + 1];
              f == g && h == p && (k = !0);
              break;
            case 18:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = da.MOVE_TO;
              var Za = m;
              z.context.moveTo(
                Za.buffer.f[Za.fPos] - c,
                Za.buffer.f[Za.fPos + 1] - d,
              );
              f = Za.buffer.f[Za.fPos];
              h = Za.buffer.f[Za.fPos + 1];
              q &&
                Za.buffer.f[Za.fPos] != g &&
                Za.buffer.f[Za.fPos + 1] != p &&
                (k = !0);
              g = Za.buffer.f[Za.fPos];
              p = Za.buffer.f[Za.fPos + 1];
              q = !0;
              break;
            case 21:
              z.windingRule = 'evenodd';
              break;
            case 22:
              z.windingRule = 'nonzero';
              break;
            default:
              switch (m.prev._hx_index) {
                case 0:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 1:
                  m.iPos += 1;
                  m.fPos += 1;
                  break;
                case 2:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 3:
                  m.oPos += 1;
                  break;
                case 4:
                  m.fPos += 6;
                  break;
                case 5:
                  m.fPos += 4;
                  break;
                case 6:
                  m.fPos += 3;
                  break;
                case 7:
                  m.fPos += 4;
                  break;
                case 8:
                  m.oPos += 3;
                  break;
                case 9:
                  m.fPos += 4;
                  break;
                case 10:
                  m.fPos += 5;
                  m.oPos += 1;
                  break;
                case 12:
                  m.oPos += 4;
                  break;
                case 14:
                  m.oPos += 2;
                  m.bPos += 2;
                  break;
                case 15:
                  m.oPos += 4;
                  m.iiPos += 2;
                  m.ffPos += 1;
                  m.fPos += 1;
                  break;
                case 16:
                  m.oPos += 4;
                  m.iPos += 1;
                  m.fPos += 2;
                  m.bPos += 1;
                  break;
                case 17:
                  m.fPos += 2;
                  break;
                case 18:
                  m.fPos += 2;
                  break;
                case 19:
                  m.oPos += 1;
                  break;
                case 20:
                  m.oPos += 1;
              }
              m.prev = C;
          }
        }
        null != x && I.__pool.release(x);
        null != w && I.__pool.release(w);
        m.destroy();
        if (u) {
          if (b && z.hasStroke) {
            if (z.hasFill) {
              if (f != g || h != p) (z.context.lineTo(g - c, p - d), (k = !0));
              k && z.closePath(!0);
            } else k && f == g && h == p && z.closePath(!0);
            z.hitTesting || z.context.stroke();
          }
          b ||
            (!z.hasFill && null == z.bitmapFill) ||
            (z.context.translate(-z.bounds.x, -z.bounds.y),
            null != z.pendingMatrix
              ? (z.context.transform(
                  z.pendingMatrix.a,
                  z.pendingMatrix.b,
                  z.pendingMatrix.c,
                  z.pendingMatrix.d,
                  z.pendingMatrix.tx,
                  z.pendingMatrix.ty,
                ),
                z.hitTesting || z.context.fill(z.windingRule),
                z.context.transform(
                  z.inversePendingMatrix.a,
                  z.inversePendingMatrix.b,
                  z.inversePendingMatrix.c,
                  z.inversePendingMatrix.d,
                  z.inversePendingMatrix.tx,
                  z.inversePendingMatrix.ty,
                ))
              : z.hitTesting || z.context.fill(z.windingRule),
            z.context.translate(z.bounds.x, z.bounds.y),
            z.context.closePath());
        }
      };
      z.render = function (a, b) {
        a.__update(b.__worldTransform, b.__pixelRatio);
        if (a.__softwareDirty) {
          z.hitTesting = !1;
          z.graphics = a;
          z.allowSmoothing = b.__allowSmoothing;
          z.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
          z.bounds = a.__bounds;
          var c = a.__width,
            d = a.__height;
          if (
            !a.__visible ||
            0 == a.__commands.get_length() ||
            null == z.bounds ||
            1 > c ||
            1 > d
          )
            ((a.__canvas = null), (a.__context = null), (a.__bitmap = null));
          else {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')));
            z.context = a.__context;
            var f = a.__renderTransform,
              h = a.__canvas,
              k = b.__pixelRatio,
              g = (c * k) | 0,
              p = (d * k) | 0;
            b.__setBlendModeContext(z.context, 10);
            b.__isDOM
              ? (h.width == g && h.height == p
                  ? z.context.clearRect(0, 0, g, p)
                  : ((h.width = g),
                    (h.height = p),
                    (h.style.width = c + 'px'),
                    (h.style.height = d + 'px')),
                (c = a.__renderTransform),
                z.context.setTransform(
                  c.a * k,
                  c.b * k,
                  c.c * k,
                  c.d * k,
                  c.tx * k,
                  c.ty * k,
                ))
              : (h.width == g && h.height == p
                  ? (z.context.closePath(),
                    z.context.setTransform(1, 0, 0, 1, 0, 0),
                    z.context.clearRect(0, 0, g, p))
                  : ((h.width = c), (h.height = d)),
                z.context.setTransform(f.a, f.b, f.c, f.d, f.tx, f.ty));
            z.fillCommands.clear();
            z.strokeCommands.clear();
            z.hasFill = !1;
            z.hasStroke = !1;
            z.bitmapFill = null;
            k = z.bitmapRepeat = !1;
            d = c = 0;
            z.windingRule = 'evenodd';
            f = new ue(a.__commands);
            h = 0;
            for (g = a.__commands.types; h < g.length; )
              switch (((p = g[h]), ++h, p._hx_index)) {
                case 0:
                case 1:
                case 2:
                case 3:
                  z.endFill();
                  z.endStroke();
                  if (p == da.BEGIN_BITMAP_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = da.BEGIN_BITMAP_FILL;
                    p = f;
                    z.fillCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                    z.strokeCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                  } else if (p == da.BEGIN_GRADIENT_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = da.BEGIN_GRADIENT_FILL;
                    p = f;
                    z.fillCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                    z.strokeCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                  } else if (p == da.BEGIN_SHADER_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = da.BEGIN_SHADER_FILL;
                    p = f;
                    z.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                    z.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
                  } else {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = da.BEGIN_FILL;
                    p = f;
                    z.fillCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                    z.strokeCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                  }
                  break;
                case 4:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.CUBIC_CURVE_TO;
                  p = f;
                  z.fillCommands.cubicCurveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.f[p.fPos + 5],
                  );
                  k
                    ? z.strokeCommands.cubicCurveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                        p.buffer.f[p.fPos + 4],
                        p.buffer.f[p.fPos + 5],
                      )
                    : ((c = p.buffer.f[p.fPos + 4]),
                      (d = p.buffer.f[p.fPos + 5]));
                  break;
                case 5:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.CURVE_TO;
                  p = f;
                  z.fillCommands.curveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k
                    ? z.strokeCommands.curveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                      )
                    : ((c = p.buffer.f[p.fPos + 2]),
                      (d = p.buffer.f[p.fPos + 3]));
                  break;
                case 6:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.DRAW_CIRCLE;
                  p = f;
                  z.fillCommands.drawCircle(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                  );
                  k &&
                    z.strokeCommands.drawCircle(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                    );
                  break;
                case 7:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.DRAW_ELLIPSE;
                  p = f;
                  z.fillCommands.drawEllipse(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k &&
                    z.strokeCommands.drawEllipse(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 8:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.DRAW_QUADS;
                  p = f;
                  z.fillCommands.drawQuads(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                  );
                  break;
                case 9:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.DRAW_RECT;
                  p = f;
                  z.fillCommands.drawRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k &&
                    z.strokeCommands.drawRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 10:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.DRAW_ROUND_RECT;
                  p = f;
                  z.fillCommands.drawRoundRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.o[p.oPos],
                  );
                  k &&
                    z.strokeCommands.drawRoundRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                      p.buffer.f[p.fPos + 4],
                      p.buffer.o[p.oPos],
                    );
                  break;
                case 12:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.DRAW_TRIANGLES;
                  p = f;
                  z.fillCommands.drawTriangles(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                  );
                  break;
                case 13:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.END_FILL;
                  z.endFill();
                  z.endStroke();
                  k = z.hasFill = !1;
                  z.bitmapFill = null;
                  d = c = 0;
                  break;
                case 14:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.LINE_BITMAP_STYLE;
                  p = f;
                  k ||
                    (0 == c && 0 == d) ||
                    (z.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = !0;
                  z.strokeCommands.lineBitmapStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.b[p.bPos],
                    p.buffer.b[p.bPos + 1],
                  );
                  break;
                case 15:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.LINE_GRADIENT_STYLE;
                  p = f;
                  k ||
                    (0 == c && 0 == d) ||
                    (z.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = !0;
                  z.strokeCommands.lineGradientStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.ii[p.iiPos],
                    p.buffer.ff[p.ffPos],
                    p.buffer.ii[p.iiPos + 1],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos],
                  );
                  break;
                case 16:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.LINE_STYLE;
                  p = f;
                  k ||
                    null == p.buffer.o[p.oPos] ||
                    (0 == c && 0 == d) ||
                    (z.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = null != p.buffer.o[p.oPos];
                  z.strokeCommands.lineStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.i[p.iPos],
                    p.buffer.f[p.fPos],
                    p.buffer.b[p.bPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos + 1],
                  );
                  break;
                case 17:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.LINE_TO;
                  p = f;
                  z.fillCommands.lineTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  k
                    ? z.strokeCommands.lineTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((c = p.buffer.f[p.fPos]), (d = p.buffer.f[p.fPos + 1]));
                  break;
                case 18:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.MOVE_TO;
                  p = f;
                  z.fillCommands.moveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  k
                    ? z.strokeCommands.moveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((c = p.buffer.f[p.fPos]), (d = p.buffer.f[p.fPos + 1]));
                  break;
                case 19:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.OVERRIDE_BLEND_MODE;
                  p = f;
                  b.__setBlendModeContext(z.context, p.buffer.o[p.oPos]);
                  break;
                case 21:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.WINDING_EVEN_ODD;
                  z.fillCommands.windingEvenOdd();
                  z.windingRule = 'evenodd';
                  break;
                case 22:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = da.WINDING_NON_ZERO;
                  z.fillCommands.windingNonZero();
                  z.windingRule = 'nonzero';
                  break;
                default:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = p;
              }
            0 < z.fillCommands.get_length() && z.endFill();
            0 < z.strokeCommands.get_length() && z.endStroke();
            f.destroy();
            a.__bitmap = Fb.fromCanvas(a.__canvas);
          }
          a.__softwareDirty = !1;
          a.set___dirty(!1);
          z.graphics = null;
        }
      };
      z.renderMask = function (a, b) {
        if (0 != a.__commands.get_length()) {
          z.context = b.context;
          b = new ue(a.__commands);
          var c = 0;
          for (a = a.__commands.types; c < a.length; ) {
            var d = a[c];
            ++c;
            switch (d._hx_index) {
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.CUBIC_CURVE_TO;
                d = b;
                z.context.bezierCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                  d.buffer.f[d.fPos + 4] - 0,
                  d.buffer.f[d.fPos + 5] - 0,
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.CURVE_TO;
                d = b;
                z.context.quadraticCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_CIRCLE;
                d = b;
                z.context.arc(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  0,
                  2 * Math.PI,
                  !0,
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_ELLIPSE;
                var f = b;
                d = f.buffer.f[f.fPos];
                var h = f.buffer.f[f.fPos + 1];
                var k = f.buffer.f[f.fPos + 2];
                var g = f.buffer.f[f.fPos + 3];
                d -= 0;
                h -= 0;
                f = (k / 2) * 0.5522848;
                var p = (g / 2) * 0.5522848;
                var q = d + k;
                var u = h + g;
                k = d + k / 2;
                g = h + g / 2;
                z.context.moveTo(d, g);
                z.context.bezierCurveTo(d, g - p, k - f, h, k, h);
                z.context.bezierCurveTo(k + f, h, q, g - p, q, g);
                z.context.bezierCurveTo(q, g + p, k + f, u, k, u);
                z.context.bezierCurveTo(k - f, u, d, g + p, d, g);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_RECT;
                d = b;
                z.context.beginPath();
                z.context.rect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                z.context.closePath();
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.DRAW_ROUND_RECT;
                d = b;
                z.drawRoundRect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.o[d.oPos],
                );
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.LINE_TO;
                d = b;
                z.context.lineTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                );
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = da.MOVE_TO;
                d = b;
                z.context.moveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                );
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          b.destroy();
        }
      };
      z.setSmoothing = function (a) {
        z.allowSmoothing || (a = !1);
        z.context.imageSmoothingEnabled != a &&
          (z.context.imageSmoothingEnabled = a);
      };
      var dj = function () {};
      g['openfl.display._internal.CanvasSimpleButton'] = dj;
      dj.__name__ = 'openfl.display._internal.CanvasSimpleButton';
      dj.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      dj.renderDrawableMask = function (a, b) {
        b.__renderDrawableMask(a.__currentState);
      };
      var Q = function () {};
      g['openfl.display._internal.CanvasTextField'] = Q;
      Q.__name__ = 'openfl.display._internal.CanvasTextField';
      Q.renderDrawable = function (a, b) {
        b.__isDOM &&
          !a.__renderedOnCanvasWhileOnDOM &&
          ((a.__renderedOnCanvasWhileOnDOM = !0),
          1 == a.get_type() && a.replaceText(0, a.__text.length, a.__text),
          a.__isHTML &&
            a.__updateText(
              La.parse(
                a.__text,
                a.get_multiline(),
                a.__styleSheet,
                a.__textFormat,
                a.__textEngine.textFormatRanges,
              ),
            ),
          (a.__dirty = !0),
          (a.__layoutDirty = !0),
          a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty()));
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, a.__dirty),
            null == a.__cacheBitmap || a.__isCacheBitmapRender)
          ) {
            var c = a.__textEngine,
              d = !(c.background || c.border),
              f = d ? c.textBounds : c.bounds,
              h = a.__graphics,
              k = 0;
            if (a.__dirty) {
              a.__updateLayout();
              null == h.__bounds && (h.__bounds = new na());
              if (0 == a.get_text().length) {
                var g = c.bounds.width - 4,
                  p = a.get_defaultTextFormat().align;
                k = 3 == p ? 0 : 4 == p ? g : g / 2;
                switch (p) {
                  case 0:
                    k += a.get_defaultTextFormat().leftMargin / 2;
                    k -= a.get_defaultTextFormat().rightMargin / 2;
                    k += a.get_defaultTextFormat().indent / 2;
                    k += a.get_defaultTextFormat().blockIndent / 2;
                    break;
                  case 2:
                    k += a.get_defaultTextFormat().leftMargin;
                    k += a.get_defaultTextFormat().indent;
                    k += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 3:
                    k += a.get_defaultTextFormat().leftMargin;
                    k += a.get_defaultTextFormat().indent;
                    k += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 4:
                    k -= a.get_defaultTextFormat().rightMargin;
                }
                d && ((f.y = c.bounds.y), (f.x = k));
              }
              h.__bounds.copyFrom(f);
            }
            p = b.__pixelRatio;
            h.__update(b.__worldTransform, p);
            if (a.__dirty || h.__softwareDirty) {
              g = Math.round(h.__width * p);
              var q = Math.round(h.__height * p);
              if (
                !(
                  (null != c.text && '' != c.text) ||
                  c.background ||
                  c.border ||
                  c.__hasFocus ||
                  (1 == c.type && c.selectable)
                ) ||
                ((0 >= c.width || 0 >= c.height) && 2 != c.autoSize)
              )
                ((a.__graphics.__canvas = null),
                  (a.__graphics.__context = null),
                  (a.__graphics.__bitmap = null),
                  (a.__graphics.__softwareDirty = !1),
                  a.__graphics.set___dirty(!1),
                  (a.__dirty = !1));
              else {
                null == a.__graphics.__canvas &&
                  ((a.__graphics.__canvas =
                    window.document.createElement('canvas')),
                  (a.__graphics.__context =
                    a.__graphics.__canvas.getContext('2d')));
                Q.context = h.__context;
                h.__canvas.width = g;
                h.__canvas.height = q;
                b.__isDOM &&
                  ((h.__canvas.style.width = Math.round(g / p) + 'px'),
                  (h.__canvas.style.height = Math.round(q / p) + 'px'));
                var u = ua.__pool.get();
                u.scale(p, p);
                u.concat(h.__renderTransform);
                Q.context.setTransform(u.a, u.b, u.c, u.d, u.tx, u.ty);
                ua.__pool.release(u);
                null == Q.clearRect &&
                  (Q.clearRect =
                    'undefined' !== typeof navigator &&
                    'undefined' !== typeof navigator.isCocoonJS);
                Q.clearRect &&
                  Q.context.clearRect(
                    0,
                    0,
                    h.__canvas.width,
                    h.__canvas.height,
                  );
                if ((null != c.text && '' != c.text) || c.__hasFocus) {
                  g = c.text;
                  h.__context.imageSmoothingEnabled =
                    !b.__allowSmoothing ||
                    (0 == c.antiAliasType && 400 == c.sharpness)
                      ? !1
                      : !0;
                  if (c.border || c.background) {
                    Q.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                    if (c.background) {
                      var m = O.hex(c.backgroundColor & 16777215, 6);
                      Q.context.fillStyle = '#' + m;
                      Q.context.fill();
                    }
                    c.border &&
                      ((Q.context.lineWidth = 1),
                      (m = O.hex(c.borderColor & 16777215, 6)),
                      (Q.context.strokeStyle = '#' + m),
                      Q.context.stroke());
                  }
                  Q.context.textBaseline = 'alphabetic';
                  Q.context.textAlign = 'start';
                  q = -a.get_scrollH();
                  var r = (d = 0);
                  for (m = a.get_scrollV() - 1; r < m; ) {
                    var l = r++;
                    d -= c.lineHeights.get(l);
                  }
                  var x;
                  for (k = c.layoutGroups.iterator(); k.hasNext(); ) {
                    var D = k.next();
                    if (!(D.lineIndex < a.get_scrollV() - 1)) {
                      if (D.lineIndex > c.get_bottomScrollV() - 1) break;
                      u = '#' + O.hex(D.format.color & 16777215, 6);
                      Q.context.font = Nb.getFont(D.format);
                      Q.context.fillStyle = u;
                      Q.context.fillText(
                        g.substring(D.startIndex, D.endIndex),
                        D.offsetX + q - f.x,
                        D.offsetY + D.ascent + d - f.y,
                      );
                      if (-1 < a.__caretIndex && c.selectable)
                        if (a.__selectionIndex == a.__caretIndex) {
                          if (
                            a.__showCursor &&
                            D.startIndex <= a.__caretIndex &&
                            D.endIndex >= a.__caretIndex
                          ) {
                            r = x = 0;
                            for (m = a.__caretIndex - D.startIndex; r < m; ) {
                              l = r++;
                              if (D.positions.length <= l) break;
                              x += D.positions[l];
                            }
                            r = 0;
                            m = a.get_scrollV();
                            for (l = D.lineIndex + 1; m < l; ) {
                              var w = m++;
                              r += c.lineHeights.get(w - 1);
                            }
                            Q.context.beginPath();
                            m = O.hex(D.format.color & 16777215, 6);
                            Q.context.strokeStyle = '#' + m;
                            Q.context.moveTo(
                              D.offsetX + x - a.get_scrollH() - f.x,
                              r + 2 - f.y,
                            );
                            Q.context.lineWidth = 1;
                            Q.context.lineTo(
                              D.offsetX + x - a.get_scrollH() - f.x,
                              r +
                                Nb.getFormatHeight(a.get_defaultTextFormat()) -
                                1 -
                                f.y,
                            );
                            Q.context.stroke();
                            Q.context.closePath();
                          }
                        } else if (
                          (D.startIndex <= a.__caretIndex &&
                            D.endIndex >= a.__caretIndex) ||
                          (D.startIndex <= a.__selectionIndex &&
                            D.endIndex >= a.__selectionIndex) ||
                          (D.startIndex > a.__caretIndex &&
                            D.endIndex < a.__selectionIndex) ||
                          (D.startIndex > a.__selectionIndex &&
                            D.endIndex < a.__caretIndex)
                        )
                          ((x =
                            Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                            (r =
                              Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                            D.startIndex > x && (x = D.startIndex),
                            D.endIndex < r && (r = D.endIndex),
                            (l = a.getCharBoundaries(x)),
                            r >= D.endIndex
                              ? ((m = a.getCharBoundaries(D.endIndex - 1)),
                                null != m && (m.x += m.width + 2))
                              : (m = a.getCharBoundaries(r)),
                            null != l &&
                              null != m &&
                              ((Q.context.fillStyle = '#000000'),
                              Q.context.fillRect(
                                l.x + q - f.x,
                                l.y + d,
                                m.x - l.x,
                                D.height,
                              ),
                              (Q.context.fillStyle = '#FFFFFF'),
                              Q.context.fillText(
                                g.substring(x, r),
                                q + l.x - f.x,
                                D.offsetY + D.ascent + d,
                              )));
                      D.format.underline &&
                        (Q.context.beginPath(),
                        (Q.context.strokeStyle = u),
                        (Q.context.lineWidth = 1),
                        (u = D.offsetX + q - f.x),
                        (x =
                          Math.ceil(D.offsetY + d + D.ascent - f.y) +
                          Math.floor(0.185 * D.ascent) +
                          0.5),
                        Q.context.moveTo(u, x),
                        Q.context.lineTo(u + D.width, x),
                        Q.context.stroke(),
                        Q.context.closePath());
                    }
                  }
                } else {
                  if (c.border || c.background)
                    (c.border
                      ? Q.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                      : Q.context.rect(0, 0, f.width, f.height),
                      c.background &&
                        ((m = O.hex(c.backgroundColor & 16777215, 6)),
                        (Q.context.fillStyle = '#' + m),
                        Q.context.fill()),
                      c.border &&
                        ((Q.context.lineWidth = 1),
                        (Q.context.lineCap = 'square'),
                        (m = O.hex(c.borderColor & 16777215, 6)),
                        (Q.context.strokeStyle = '#' + m),
                        Q.context.stroke()));
                  if (-1 < a.__caretIndex && c.selectable && a.__showCursor) {
                    q = -a.get_scrollH() + (d ? 0 : k);
                    r = d = 0;
                    for (m = a.get_scrollV() - 1; r < m; )
                      ((l = r++), (d += c.lineHeights.get(l)));
                    Q.context.beginPath();
                    m = O.hex(a.get_defaultTextFormat().color & 16777215, 6);
                    Q.context.strokeStyle = '#' + m;
                    Q.context.moveTo(q + 2.5, d + 2.5);
                    Q.context.lineWidth = 1;
                    Q.context.lineTo(
                      q + 2.5,
                      d + Nb.getFormatHeight(a.get_defaultTextFormat()) - 1,
                    );
                    Q.context.stroke();
                    Q.context.closePath();
                  }
                }
                h.__bitmap = Fb.fromCanvas(a.__graphics.__canvas);
                h.__bitmapScale = p;
                h.__visible = !0;
                a.__dirty = !1;
                h.__softwareDirty = !1;
                h.set___dirty(!1);
              }
            }
            d = !1;
            0 == a.__textEngine.antiAliasType &&
              1 == a.__textEngine.gridFitType &&
              (d = b.context.imageSmoothingEnabled) &&
              (b.context.imageSmoothingEnabled = !1);
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable &&
              ((f = b.__getAlpha(a.__worldAlpha)),
              !(0 >= f) &&
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (c = b.context),
                  b.setTransform(a.__renderTransform, c),
                  (u = a.opaqueBackground),
                  (c.fillStyle =
                    'rgb(' +
                    ((u >>> 16) & 255) +
                    ',' +
                    ((u >>> 8) & 255) +
                    ',' +
                    (u & 255) +
                    ')'),
                  c.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null != a.__graphics &&
                  a.__renderable &&
                  ((f = b.__getAlpha(a.__worldAlpha)),
                  !(0 >= f) &&
                    ((h = a.__graphics),
                    null != h &&
                      (z.render(h, b),
                      (g = h.__width),
                      (q = h.__height),
                      (k = h.__canvas),
                      null != k &&
                        h.__visible &&
                        1 <= g &&
                        1 <= q &&
                        ((D = h.__worldTransform),
                        (c = b.context),
                        (p = a.__scrollRect),
                        (w = a.__worldScale9Grid),
                        null == p || (0 < p.width && 0 < p.height)))))))
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              c.globalAlpha = f;
              if (null != w && 0 == D.b && 0 == D.c) {
                p = b.__pixelRatio;
                u = ua.__pool.get();
                u.translate(D.tx, D.ty);
                b.setTransform(u, c);
                ua.__pool.release(u);
                f = h.__bounds;
                r = h.__renderTransform.a / h.__bitmapScale;
                var J = h.__renderTransform.d / h.__bitmapScale;
                m = r * D.a;
                l = J * D.d;
                h = Math.max(1, Math.round(w.x * r));
                D = Math.round(w.y * J);
                u = Math.max(
                  1,
                  Math.round((f.get_right() - w.get_right()) * r),
                );
                x = Math.round((f.get_bottom() - w.get_bottom()) * J);
                r = Math.round(w.width * r);
                w = Math.round(w.height * J);
                J = Math.round(h / p);
                var y = Math.round(D / p),
                  C = Math.round(u / p);
                p = Math.round(x / p);
                m = f.width * m - J - C;
                f = f.height * l - y - p;
                b.applySmoothing(c, !1);
                0 != r && 0 != w
                  ? (c.drawImage(k, 0, 0, h, D, 0, 0, J, y),
                    c.drawImage(k, h, 0, r, D, J, 0, m, y),
                    c.drawImage(k, h + r, 0, u, D, J + m, 0, C, y),
                    c.drawImage(k, 0, D, h, w, 0, y, J, f),
                    c.drawImage(k, h, D, r, w, J, y, m, f),
                    c.drawImage(k, h + r, D, u, w, J + m, y, C, f),
                    c.drawImage(k, 0, D + w, h, x, 0, y + f, J, p),
                    c.drawImage(k, h, D + w, r, x, J, y + f, m, p),
                    c.drawImage(k, h + r, D + w, u, x, J + m, y + f, C, p))
                  : 0 == r && 0 != w
                    ? ((h = J + m + C),
                      c.drawImage(k, 0, 0, g, D, 0, 0, h, y),
                      c.drawImage(k, 0, D, g, w, 0, y, h, f),
                      c.drawImage(k, 0, D + w, g, x, 0, y + f, h, p))
                    : 0 == w &&
                      0 != r &&
                      ((f = y + f + p),
                      c.drawImage(k, 0, 0, h, q, 0, 0, J, f),
                      c.drawImage(k, h, 0, r, q, J, 0, m, f),
                      c.drawImage(k, h + r, 0, u, q, J + m, 0, C, f));
              } else (b.setTransform(D, c), c.drawImage(k, 0, 0, g, q));
              b.__popMaskObject(a);
            }
            d && (b.context.imageSmoothingEnabled = !0);
          } else
            ((a = a.__cacheBitmap),
              a.__renderable &&
                ((f = b.__getAlpha(a.__worldAlpha)),
                0 < f &&
                  null != a.__bitmapData &&
                  a.__bitmapData.__isValid &&
                  a.__bitmapData.readable &&
                  ((c = b.context),
                  b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a, !1),
                  Ka.convertToCanvas(a.__bitmapData.image),
                  (c.globalAlpha = f),
                  (p = a.__scrollRect),
                  b.setTransform(a.__renderTransform, c),
                  (b.__allowSmoothing && a.smoothing) ||
                    (c.imageSmoothingEnabled = !1),
                  null == p
                    ? c.drawImage(
                        a.__bitmapData.image.get_src(),
                        0,
                        0,
                        a.__bitmapData.image.width,
                        a.__bitmapData.image.height,
                      )
                    : c.drawImage(
                        a.__bitmapData.image.get_src(),
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                      ),
                  (b.__allowSmoothing && a.smoothing) ||
                    (c.imageSmoothingEnabled = !0),
                  b.__popMaskObject(a, !1))));
      };
      Q.renderDrawableMask = function (a, b) {
        Tf.renderDrawableMask(a, b);
      };
      var Ze = function () {};
      g['openfl.display._internal.CanvasTilemap'] = Ze;
      Ze.__name__ = 'openfl.display._internal.CanvasTilemap';
      Ze.renderTileContainer = function (a, b, c, d, f, h, k, g, p, q, u, m) {
        var n = b.context,
          r = b.__roundPixels,
          l = ua.__pool.get(),
          D = a.__tiles,
          x,
          w = null,
          J = 0;
        for (a = a.__length; J < a; ) {
          var z = J++;
          var P = D[z];
          l.setTo(1, 0, 0, 1, -P.get_originX(), -P.get_originY());
          l.concat(P.get_matrix());
          l.concat(c);
          r && ((l.tx = Math.round(l.tx)), (l.ty = Math.round(l.ty)));
          var y = null != P.get_tileset() ? P.get_tileset() : d;
          z = P.get_alpha() * k;
          if ((x = P.get_visible()) && !(0 >= z))
            if (
              (h || (z = 1),
              g && (w = null != P.__blendMode ? P.__blendMode : p),
              0 < P.__length)
            )
              Ze.renderTileContainer(P, b, l, y, f, h, z, g, w, q, u, m);
            else if (null != y) {
              x = P.get_id();
              if (-1 == x) {
                if (
                  ((P = P.__rect), null == P || 0 >= P.width || 0 >= P.height)
                )
                  continue;
              } else {
                P = y.__data[x];
                if (null == P) continue;
                m.setTo(P.x, P.y, P.width, P.height);
                P = m;
              }
              y = y.__bitmapData;
              null != y &&
                null != y.image &&
                (y != q &&
                  (null == y.image.buffer.__srcImage &&
                    Ka.convertToCanvas(y.image),
                  (u = y.image.get_src()),
                  (q = y)),
                (n.globalAlpha = z),
                g && b.__setBlendMode(w),
                b.setTransform(l, n),
                n.drawImage(
                  u,
                  P.x,
                  P.y,
                  P.width,
                  P.height,
                  0,
                  0,
                  P.width,
                  P.height,
                ));
            }
        }
        ua.__pool.release(l);
      };
      Ze.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((w = b.__getAlpha(a.__worldAlpha)), 0 >= w)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              J = b.context;
              b.setTransform(a.__renderTransform, J);
              var c = a.opaqueBackground;
              J.fillStyle =
                'rgb(' +
                ((c >>> 16) & 255) +
                ',' +
                ((c >>> 8) & 255) +
                ',' +
                (c & 255) +
                ')';
              J.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((w = b.__getAlpha(a.__worldAlpha)), !(0 >= w))
            ) {
              var d = a.__graphics;
              if (null != d) {
                z.render(d, b);
                var f = d.__width,
                  h = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= f && 1 <= h) {
                  var k = d.__worldTransform;
                  J = b.context;
                  y = a.__scrollRect;
                  var g = a.__worldScale9Grid;
                  if (null == y || (0 < y.width && 0 < y.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    J.globalAlpha = w;
                    if (null != g && 0 == k.b && 0 == k.c) {
                      var p = b.__pixelRatio;
                      w = ua.__pool.get();
                      w.translate(k.tx, k.ty);
                      b.setTransform(w, J);
                      ua.__pool.release(w);
                      w = d.__bounds;
                      var q = d.__renderTransform.a / d.__bitmapScale,
                        u = d.__renderTransform.d / d.__bitmapScale,
                        m = q * k.a,
                        r = u * k.d;
                      k = Math.max(1, Math.round(g.x * q));
                      d = Math.round(g.y * u);
                      y = Math.max(
                        1,
                        Math.round((w.get_right() - g.get_right()) * q),
                      );
                      var l = Math.round((w.get_bottom() - g.get_bottom()) * u);
                      q = Math.round(g.width * q);
                      g = Math.round(g.height * u);
                      u = Math.round(k / p);
                      var D = Math.round(d / p),
                        x = Math.round(y / p);
                      p = Math.round(l / p);
                      m = w.width * m - u - x;
                      w = w.height * r - D - p;
                      b.applySmoothing(J, !1);
                      0 != q && 0 != g
                        ? (J.drawImage(c, 0, 0, k, d, 0, 0, u, D),
                          J.drawImage(c, k, 0, q, d, u, 0, m, D),
                          J.drawImage(c, k + q, 0, y, d, u + m, 0, x, D),
                          J.drawImage(c, 0, d, k, g, 0, D, u, w),
                          J.drawImage(c, k, d, q, g, u, D, m, w),
                          J.drawImage(c, k + q, d, y, g, u + m, D, x, w),
                          J.drawImage(c, 0, d + g, k, l, 0, D + w, u, p),
                          J.drawImage(c, k, d + g, q, l, u, D + w, m, p),
                          J.drawImage(
                            c,
                            k + q,
                            d + g,
                            y,
                            l,
                            u + m,
                            D + w,
                            x,
                            p,
                          ))
                        : 0 == q && 0 != g
                          ? ((h = u + m + x),
                            J.drawImage(c, 0, 0, f, d, 0, 0, h, D),
                            J.drawImage(c, 0, d, f, g, 0, D, h, w),
                            J.drawImage(c, 0, d + g, f, l, 0, D + w, h, p))
                          : 0 == g &&
                            0 != q &&
                            ((f = D + w + p),
                            J.drawImage(c, 0, 0, k, h, 0, 0, u, f),
                            J.drawImage(c, k, 0, q, h, u, 0, m, f),
                            J.drawImage(c, k + q, 0, y, h, u + m, 0, x, f));
                    } else (b.setTransform(k, J), J.drawImage(c, 0, 0, f, h));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            0 != a.__group.__tiles.length &&
            ((w = b.__getAlpha(a.__worldAlpha)),
            0 >= w ||
              ((J = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a),
              (c = na.__pool.get()),
              c.setTo(0, 0, a.__width, a.__height),
              b.__pushMaskRect(c, a.__renderTransform),
              (b.__allowSmoothing && a.smoothing) ||
                (J.imageSmoothingEnabled = !1),
              Ze.renderTileContainer(
                a.__group,
                b,
                a.__renderTransform,
                a.__tileset,
                b.__allowSmoothing && a.smoothing,
                a.tileAlphaEnabled,
                w,
                a.tileBlendModeEnabled,
                a.__worldBlendMode,
                null,
                null,
                c,
              ),
              (b.__allowSmoothing && a.smoothing) ||
                (J.imageSmoothingEnabled = !0),
              b.__popMaskRect(),
              b.__popMaskObject(a),
              na.__pool.release(c)));
        } else if (((c = a.__cacheBitmap), c.__renderable)) {
          var w = b.__getAlpha(c.__worldAlpha);
          if (
            0 < w &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
          ) {
            var J = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            Ka.convertToCanvas(c.__bitmapData.image);
            J.globalAlpha = w;
            var y = c.__scrollRect;
            b.setTransform(c.__renderTransform, J);
            (b.__allowSmoothing && c.smoothing) ||
              (J.imageSmoothingEnabled = !1);
            null == y
              ? J.drawImage(
                  c.__bitmapData.image.get_src(),
                  0,
                  0,
                  c.__bitmapData.image.width,
                  c.__bitmapData.image.height,
                )
              : J.drawImage(
                  c.__bitmapData.image.get_src(),
                  y.x,
                  y.y,
                  y.width,
                  y.height,
                  y.x,
                  y.y,
                  y.width,
                  y.height,
                );
            (b.__allowSmoothing && c.smoothing) ||
              (J.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1);
          }
        }
        b.__renderEvent(a);
      };
      Ze.renderDrawableMask = function (a, b) {};
      var Uf = function () {};
      g['openfl.display._internal.CanvasVideo'] = Uf;
      Uf.__name__ = 'openfl.display._internal.CanvasVideo';
      Uf.render = function (a, b) {
        if (a.__renderable && null != a.__stream) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            var d = b.context;
            if (null != a.__stream.__video) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              d.globalAlpha = c;
              c = a.__scrollRect;
              var f = a.smoothing;
              b.setTransform(a.__worldTransform, d);
              f || (d.imageSmoothingEnabled = !1);
              null == c
                ? d.drawImage(
                    a.__stream.__video,
                    0,
                    0,
                    a.get_width(),
                    a.get_height(),
                  )
                : d.drawImage(
                    a.__stream.__video,
                    c.x,
                    c.y,
                    c.width,
                    c.height,
                    c.x,
                    c.y,
                    c.width,
                    c.height,
                  );
              f || (d.imageSmoothingEnabled = !0);
              b.__popMaskObject(a);
            }
          }
        }
      };
      Uf.renderDrawable = function (a, b) {
        Uf.render(a, b);
        b.__renderEvent(a);
      };
      Uf.renderDrawableMask = function (a, b) {};
      var Vd = function () {};
      g['openfl.display._internal.Context3DBitmap'] = Vd;
      Vd.__name__ = 'openfl.display._internal.Context3DBitmap';
      Vd.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid
        ) {
          var c = b.__context3D;
          b.__setBlendMode(a.__worldBlendMode);
          b.__pushMaskObject(a);
          var d = b.__initDisplayShader(a.__worldShader);
          b.setShader(d);
          b.applyBitmapData(
            a.__bitmapData,
            b.__allowSmoothing && (a.smoothing || b.__upscaled),
          );
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var f = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          d = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(d);
          b.__clearShader();
          b.__popMaskObject(a);
        }
      };
      Vd.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = na.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              na.__pool.release(d);
            }
            null != a.__graphics && Ee.render(a, b);
          }
          Vd.render(a, b);
        } else Vd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      Vd.renderDrawableMask = function (a, b) {
        Vd.renderMask(a, b);
      };
      Vd.renderMask = function (a, b) {
        if (null != a.__bitmapData && a.__bitmapData.__isValid) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(Wf.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.updateShader();
          var f = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          a = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var rj = function () {};
      g['openfl.display._internal.Context3DBitmapData'] = rj;
      rj.__name__ = 'openfl.display._internal.Context3DBitmapData';
      rj.renderDrawable = function (a, b) {
        var c = b.__context3D;
        b.__setBlendMode(10);
        var d = b.__defaultDisplayShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.applyAlpha(a.__worldAlpha);
        b.applyColorTransform(a.__worldColorTransform);
        b.updateShader();
        var f = a.getVertexBuffer(c);
        null != d.__position &&
          c.setVertexBufferAt(d.__position.index, f, 0, 3);
        null != d.__textureCoord &&
          c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader();
      };
      rj.renderDrawableMask = function (a, b) {
        var c = b.__context3D,
          d = b.__maskShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.updateShader();
        var f = a.getVertexBuffer(c);
        null != d.__position &&
          c.setVertexBufferAt(d.__position.index, f, 0, 3);
        null != d.__textureCoord &&
          c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader();
      };
      var Ch = function (a, b, c, d) {
        this.context3D = a;
        this.elementType = b;
        this.dataPerVertex = d;
        this.vertexCount = this.indexCount = 0;
        this.resize(c);
      };
      g['openfl.display._internal.Context3DBuffer'] = Ch;
      Ch.__name__ = 'openfl.display._internal.Context3DBuffer';
      Ch.prototype = {
        flushVertexBufferData: function () {
          this.vertexBufferData.length > this.vertexCount &&
            ((this.vertexCount = this.vertexBufferData.length),
            (this.vertexBuffer = this.context3D.createVertexBuffer(
              this.vertexCount,
              this.dataPerVertex,
              0,
            )));
          this.vertexBuffer.uploadFromTypedArray(
            hh.toArrayBufferView(this.vertexBufferData),
          );
        },
        resize: function (a, b) {
          null == b && (b = -1);
          this.elementCount = a;
          -1 == b && (b = this.dataPerVertex);
          b != this.dataPerVertex &&
            ((this.vertexBuffer = null),
            (this.vertexCount = 0),
            (this.dataPerVertex = b));
          var c = 0;
          switch (this.elementType._hx_index) {
            case 0:
              c = 4 * a;
              break;
            case 1:
              c = 3 * a;
              break;
            case 2:
              c = 3 * a;
          }
          b *= c;
          if (null == this.vertexBufferData) {
            var d = (c = null),
              f = null,
              h = null,
              k = null;
            this.vertexBufferData = b =
              null != b
                ? new Float32Array(b)
                : null != c
                  ? new Float32Array(c)
                  : null != d
                    ? new Float32Array(d.__array)
                    : null != f
                      ? new Float32Array(f)
                      : null != h
                        ? null == k
                          ? new Float32Array(h, 0)
                          : new Float32Array(h, 0, k)
                        : null;
          } else
            b > this.vertexBufferData.length &&
              ((a = this.vertexBufferData),
              (k = h = f = d = c = null),
              (this.vertexBufferData = b =
                null != b
                  ? new Float32Array(b)
                  : null != c
                    ? new Float32Array(c)
                    : null != d
                      ? new Float32Array(d.__array)
                      : null != f
                        ? new Float32Array(f)
                        : null != h
                          ? null == k
                            ? new Float32Array(h, 0)
                            : new Float32Array(h, 0, k)
                          : null),
              this.vertexBufferData.set(a));
        },
        __class__: Ch,
      };
      var xj = (y['openfl.display._internal.Context3DElementType'] = {
        __ename__: 'openfl.display._internal.Context3DElementType',
        __constructs__: null,
        QUADS: {
          _hx_name: 'QUADS',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: r,
        },
        TRIANGLES: {
          _hx_name: 'TRIANGLES',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: r,
        },
        TRIANGLE_INDICES: {
          _hx_name: 'TRIANGLE_INDICES',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: r,
        },
      });
      xj.__constructs__ = [xj.QUADS, xj.TRIANGLES, xj.TRIANGLE_INDICES];
      var Xf = function () {};
      g['openfl.display._internal.Context3DDisplayObject'] = Xf;
      Xf.__name__ = 'openfl.display._internal.Context3DDisplayObject';
      Xf.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          Vd.render(a.__cacheBitmap, b);
        else if (
          !(
            (null == a.opaqueBackground && null == a.__graphics) ||
            !a.__renderable ||
            0 >= a.__worldAlpha
          )
        ) {
          if (
            null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            0 < a.get_height()
          ) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var c = b.__context3D,
              d = na.__pool.get();
            d.setTo(0, 0, a.get_width(), a.get_height());
            b.__pushMaskRect(d, a.__renderTransform);
            var f = a.opaqueBackground;
            c.clear(
              ((f >>> 16) & 255) / 255,
              ((f >>> 8) & 255) / 255,
              (f & 255) / 255,
              1,
              0,
              0,
              1,
            );
            b.__popMaskRect();
            b.__popMaskObject(a);
            na.__pool.release(d);
          }
          null != a.__graphics && Ee.render(a, b);
        }
        b.__renderEvent(a);
      };
      Xf.renderDrawableMask = function (a, b) {
        null != a.__graphics && Ee.renderMask(a, b);
      };
      var sj = function () {};
      g['openfl.display._internal.Context3DDisplayObjectContainer'] = sj;
      sj.__name__ = 'openfl.display._internal.Context3DDisplayObjectContainer';
      sj.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          (Xf.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          if (0 < a.__children.length)
            if ((b.__pushMaskObject(a), null != b.__stage)) {
              c = 0;
              for (d = a.__children; c < d.length; ) {
                var f = d[c];
                ++c;
                b.__renderDrawable(f);
                f.__renderDirty = !1;
              }
              a.__renderDirty = !1;
            } else
              for (c = 0, d = a.__children; c < d.length; )
                ((f = d[c]), ++c, b.__renderDrawable(f));
          0 < a.__children.length && b.__popMaskObject(a);
        }
      };
      sj.renderDrawableMask = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && Ee.renderMask(a, b);
        c = 0;
        for (a = a.__children; c < a.length; )
          ((d = a[c]), ++c, b.__renderDrawableMask(d));
      };
      var Yb = function () {};
      g['openfl.display._internal.Context3DGraphics'] = Yb;
      Yb.__name__ = 'openfl.display._internal.Context3DGraphics';
      Yb.buildBuffer = function (a, b) {
        var c,
          d = (c = 0),
          f = 0,
          h = new ue(a.__commands);
        b = b.__context3D;
        for (
          var k = na.__pool.get(),
            g = ua.__pool.get(),
            p = null,
            q = 0,
            u = a.__commands.types;
          q < u.length;

        ) {
          var m = u[q];
          ++q;
          switch (m._hx_index) {
            case 0:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = da.BEGIN_BITMAP_FILL;
              p = h;
              p = p.buffer.o[p.oPos];
              break;
            case 1:
              p = null;
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = m;
              break;
            case 3:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = da.BEGIN_SHADER_FILL;
              p = h;
              m = p.buffer.o[p.oPos];
              p = null;
              if (null != m)
                for (var r = 0, l = m.inputCount; r < l; ) {
                  var D = r++;
                  if ('bitmap' == m.inputRefs[D].name) {
                    p = m.inputs[D];
                    break;
                  }
                }
              break;
            case 8:
              if (null != p) {
                switch (h.prev._hx_index) {
                  case 0:
                    h.oPos += 2;
                    h.bPos += 2;
                    break;
                  case 1:
                    h.iPos += 1;
                    h.fPos += 1;
                    break;
                  case 2:
                    h.oPos += 4;
                    h.iiPos += 2;
                    h.ffPos += 1;
                    h.fPos += 1;
                    break;
                  case 3:
                    h.oPos += 1;
                    break;
                  case 4:
                    h.fPos += 6;
                    break;
                  case 5:
                    h.fPos += 4;
                    break;
                  case 6:
                    h.fPos += 3;
                    break;
                  case 7:
                    h.fPos += 4;
                    break;
                  case 8:
                    h.oPos += 3;
                    break;
                  case 9:
                    h.fPos += 4;
                    break;
                  case 10:
                    h.fPos += 5;
                    h.oPos += 1;
                    break;
                  case 12:
                    h.oPos += 4;
                    break;
                  case 14:
                    h.oPos += 2;
                    h.bPos += 2;
                    break;
                  case 15:
                    h.oPos += 4;
                    h.iiPos += 2;
                    h.ffPos += 1;
                    h.fPos += 1;
                    break;
                  case 16:
                    h.oPos += 4;
                    h.iPos += 1;
                    h.fPos += 2;
                    h.bPos += 1;
                    break;
                  case 17:
                    h.fPos += 2;
                    break;
                  case 18:
                    h.fPos += 2;
                    break;
                  case 19:
                    h.oPos += 1;
                    break;
                  case 20:
                    h.oPos += 1;
                }
                h.prev = da.DRAW_QUADS;
                l = h;
                m = l.buffer.o[l.oPos];
                r = l.buffer.o[l.oPos + 1];
                l = l.buffer.o[l.oPos + 2];
                D = null != r;
                var x = !1,
                  w = !1,
                  J = D ? r.get_length() : Math.floor(m.get_length() / 4);
                if (0 == J) return;
                null != l &&
                  (l.get_length() >= 6 * J
                    ? (w = x = !0)
                    : l.get_length() >= 4 * J
                      ? (x = !0)
                      : l.get_length() >= 2 * J && (w = !0));
                null == a.__quadBuffer
                  ? (a.__quadBuffer = new Ch(b, xj.QUADS, J, 4))
                  : a.__quadBuffer.resize(c + J, 4);
                for (
                  var z,
                    y,
                    C,
                    t,
                    v,
                    G,
                    F,
                    I,
                    eb,
                    K,
                    H,
                    O,
                    kb,
                    Y,
                    Wa = a.__quadBuffer.vertexBufferData,
                    E = p.width,
                    sa = p.height,
                    W = 0,
                    A = J;
                  W < A;

                )
                  ((t = W++),
                    (z = 16 * (c + t)),
                    (y = D ? 4 * r.get(t) : 4 * t),
                    0 > y ||
                      (k.setTo(
                        m.get(y),
                        m.get(y + 1),
                        m.get(y + 2),
                        m.get(y + 3),
                      ),
                      (y = k.width),
                      (C = k.height),
                      0 >= y ||
                        0 >= C ||
                        (x && w
                          ? ((t *= 6),
                            g.setTo(
                              l.get(t),
                              l.get(t + 1),
                              l.get(t + 2),
                              l.get(t + 3),
                              l.get(t + 4),
                              l.get(t + 5),
                            ))
                          : x
                            ? ((t *= 4),
                              g.setTo(
                                l.get(t),
                                l.get(t + 1),
                                l.get(t + 2),
                                l.get(t + 3),
                                k.x,
                                k.y,
                              ))
                            : w
                              ? ((t *= 2),
                                (g.tx = l.get(t)),
                                (g.ty = l.get(t + 1)))
                              : ((g.tx = k.x), (g.ty = k.y)),
                        (t = k.x / E),
                        (v = k.y / sa),
                        (G = k.get_right() / E),
                        (F = k.get_bottom() / sa),
                        (I = 0 * g.a + 0 * g.c + g.tx),
                        (eb = 0 * g.b + 0 * g.d + g.ty),
                        (K = y * g.a + 0 * g.c + g.tx),
                        (H = y * g.b + 0 * g.d + g.ty),
                        (O = 0 * g.a + C * g.c + g.tx),
                        (kb = 0 * g.b + C * g.d + g.ty),
                        (Y = y * g.a + C * g.c + g.tx),
                        (y = y * g.b + C * g.d + g.ty),
                        (Wa[z] = I),
                        (Wa[z + 1] = eb),
                        (Wa[z + 2] = t),
                        (Wa[z + 3] = v),
                        (Wa[z + 4] = K),
                        (Wa[z + 4 + 1] = H),
                        (Wa[z + 4 + 2] = G),
                        (Wa[z + 4 + 3] = v),
                        (Wa[z + 8] = O),
                        (Wa[z + 8 + 1] = kb),
                        (Wa[z + 8 + 2] = t),
                        (Wa[z + 8 + 3] = F),
                        (Wa[z + 12] = Y),
                        (Wa[z + 12 + 1] = y),
                        (Wa[z + 12 + 2] = G),
                        (Wa[z + 12 + 3] = F))));
                c += J;
              }
              break;
            case 12:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = da.DRAW_TRIANGLES;
              l = h;
              m = l.buffer.o[l.oPos];
              r = l.buffer.o[l.oPos + 1];
              l = l.buffer.o[l.oPos + 2];
              D = null != r;
              J = Math.floor(m.get_length() / 2);
              x = D ? r.get_length() : J;
              z = (J = (w = null != l) && l.get_length() >= 3 * J) ? 4 : 2;
              Wa = J ? 3 : 2;
              E = z + 2;
              sa = J ? f : d;
              Yb.resizeVertexBuffer(a, J, sa + x * E);
              W = J ? a.__vertexBufferDataUVT : a.__vertexBufferData;
              C = 0;
              for (t = x; C < t; )
                ((v = C++),
                  (A = sa + v * E),
                  (y = D ? 2 * r.get(v) : 2 * v),
                  (v = D ? r.get(v) * Wa : v * Wa),
                  J
                    ? ((G = l.get(v + 2)),
                      (W[A] = m.get(y) / G),
                      (W[A + 1] = m.get(y + 1) / G),
                      (W[A + 2] = 0),
                      (W[A + 3] = 1 / G))
                    : ((W[A] = m.get(y)), (W[A + 1] = m.get(y + 1))),
                  (W[A + z] = w ? l.get(v) : 0),
                  (W[A + z + 1] = w ? l.get(v + 1) : 0));
              J ? (f += x * E) : (d += x * E);
              break;
            case 13:
              p = null;
              break;
            default:
              switch (h.prev._hx_index) {
                case 0:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 1:
                  h.iPos += 1;
                  h.fPos += 1;
                  break;
                case 2:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 3:
                  h.oPos += 1;
                  break;
                case 4:
                  h.fPos += 6;
                  break;
                case 5:
                  h.fPos += 4;
                  break;
                case 6:
                  h.fPos += 3;
                  break;
                case 7:
                  h.fPos += 4;
                  break;
                case 8:
                  h.oPos += 3;
                  break;
                case 9:
                  h.fPos += 4;
                  break;
                case 10:
                  h.fPos += 5;
                  h.oPos += 1;
                  break;
                case 12:
                  h.oPos += 4;
                  break;
                case 14:
                  h.oPos += 2;
                  h.bPos += 2;
                  break;
                case 15:
                  h.oPos += 4;
                  h.iiPos += 2;
                  h.ffPos += 1;
                  h.fPos += 1;
                  break;
                case 16:
                  h.oPos += 4;
                  h.iPos += 1;
                  h.fPos += 2;
                  h.bPos += 1;
                  break;
                case 17:
                  h.fPos += 2;
                  break;
                case 18:
                  h.fPos += 2;
                  break;
                case 19:
                  h.oPos += 1;
                  break;
                case 20:
                  h.oPos += 1;
              }
              h.prev = m;
          }
        }
        0 < c && a.__quadBuffer.flushVertexBufferData();
        if (0 < d) {
          c = a.__vertexBuffer;
          if (null == c || d > a.__vertexBufferCount)
            ((c = b.createVertexBuffer(d, 4, 0)),
              (a.__vertexBuffer = c),
              (a.__vertexBufferCount = d));
          c.uploadFromTypedArray(hh.toArrayBufferView(a.__vertexBufferData));
        }
        if (0 < f) {
          c = a.__vertexBufferUVT;
          if (null == c || f > a.__vertexBufferCountUVT)
            ((c = b.createVertexBuffer(f, 6, 0)),
              (a.__vertexBufferUVT = c),
              (a.__vertexBufferCountUVT = f));
          c.uploadFromTypedArray(hh.toArrayBufferView(a.__vertexBufferDataUVT));
        }
        na.__pool.release(k);
        ua.__pool.release(g);
      };
      Yb.isCompatible = function (a) {
        if (null != a.__owner.__worldScale9Grid) return !1;
        var b = new ue(a.__commands),
          c = !1,
          d = !1,
          f = !1,
          h = 0;
        for (a = a.__commands.types; h < a.length; ) {
          var k = a[h];
          ++h;
          switch (k._hx_index) {
            case 0:
              d = !0;
              f = c = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 1:
              d = !1;
              c = !0;
              f = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 3:
              c = d = !1;
              f = !0;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 8:
              if (d || f) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 9:
              if (c) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 12:
              if (d || f) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 13:
              f = c = d = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 18:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 19:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            default:
              return (b.destroy(), !1);
          }
        }
        b.destroy();
        return !0;
      };
      Yb.render = function (a, b) {
        if (a.__visible && 0 != a.__commands.get_length())
          if ((null != a.__bitmap && !a.__dirty) || !Yb.isCompatible(a)) {
            b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
            var c = b.__softwareRenderer.__worldTransform;
            b.__softwareRenderer.__worldTransform =
              7 == a.__owner.__drawableType
                ? ua.__identity
                : b.__worldTransform;
            z.render(a, b.__softwareRenderer);
            b.__softwareRenderer.__worldTransform = c;
          } else {
            a.__bitmap = null;
            a.__update(b.__worldTransform, b.__pixelRatio);
            var d = a.__width,
              f = a.__height;
            if (null != a.__bounds && 1 <= d && 1 <= f) {
              (a.__hardwareDirty ||
                (null == a.__quadBuffer &&
                  null == a.__vertexBuffer &&
                  null == a.__vertexBufferUVT)) &&
                Yb.buildBuffer(a, b);
              c = new ue(a.__commands);
              for (
                var h = b.__context3D,
                  k = ua.__pool.get(),
                  g = null,
                  p = null,
                  q = !1,
                  u = !1,
                  m = null,
                  r = 0,
                  l = 0,
                  D = 0,
                  x = 0,
                  w = 0,
                  J = a.__commands.types;
                w < J.length;

              )
                switch (((d = J[w]), ++w, d._hx_index)) {
                  case 0:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = da.BEGIN_BITMAP_FILL;
                    u = c;
                    p = u.buffer.o[u.oPos];
                    q = u.buffer.b[u.bPos];
                    u = u.buffer.b[u.bPos + 1];
                    m = g = null;
                    break;
                  case 1:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = da.BEGIN_FILL;
                    p = c;
                    m =
                      ((p.buffer.i[p.iPos] | 0) & 16777215) |
                      (((255 * p.buffer.f[p.fPos]) | 0) << 24);
                    p = g = null;
                    break;
                  case 3:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = da.BEGIN_SHADER_FILL;
                    l = c;
                    g = l.buffer.o[l.oPos];
                    l = 0;
                    p =
                      null == g || null == g.shader || null == g.shader.__bitmap
                        ? null
                        : g.shader.__bitmap.input;
                    m = null;
                    break;
                  case 8:
                    if (null != p) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = da.DRAW_QUADS;
                      var y = c;
                      d = y.buffer.o[y.oPos];
                      y = y.buffer.o[y.oPos + 1];
                      d =
                        null != y
                          ? y.get_length()
                          : Math.floor(d.get_length() / 4);
                      var C = b.__getMatrix(a.__owner.__renderTransform, 1);
                      null == g || Yb.maskRender
                        ? ((y = Yb.maskRender
                            ? b.__maskShader
                            : b.__initGraphicsShader(null)),
                          b.setShader(y),
                          b.applyMatrix(C),
                          b.applyBitmapData(p, u, q),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ),
                          b.updateShader())
                        : ((y = b.__initShaderBuffer(g)),
                          b.__setShaderBuffer(g),
                          b.applyMatrix(C),
                          b.applyBitmapData(p, !1, q),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ));
                      for (C = r + d; r < C; ) {
                        d = Math.min(C - r, h.__quadIndexBufferElements) | 0;
                        if (0 >= d) break;
                        null == g || Yb.maskRender || b.__updateShaderBuffer(l);
                        null != y.__position &&
                          h.setVertexBufferAt(
                            y.__position.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * r,
                            2,
                          );
                        null != y.__textureCoord &&
                          h.setVertexBufferAt(
                            y.__textureCoord.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * r + 2,
                            2,
                          );
                        h.drawTriangles(h.__quadIndexBuffer, 0, 2 * d);
                        l += 4 * d;
                        r += d;
                      }
                      b.__clearShader();
                    }
                    break;
                  case 9:
                    if (null != m) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = da.DRAW_RECT;
                      var t = c;
                      y = t.buffer.f[t.fPos];
                      C = t.buffer.f[t.fPos + 1];
                      d = t.buffer.f[t.fPos + 2];
                      f = t.buffer.f[t.fPos + 3];
                      t = m;
                      Yb.tempColorTransform.redOffset = (t >>> 16) & 255;
                      Yb.tempColorTransform.greenOffset = (t >>> 8) & 255;
                      Yb.tempColorTransform.blueOffset = t & 255;
                      Yb.tempColorTransform.__combine(
                        a.__owner.__worldColorTransform,
                      );
                      k.identity();
                      k.scale(d, f);
                      k.tx = y;
                      k.ty = C;
                      k.concat(a.__owner.__renderTransform);
                      d = Yb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(d);
                      b.applyMatrix(b.__getMatrix(k, 1));
                      b.applyBitmapData(Yb.blankBitmapData, !0, q);
                      b.applyAlpha(
                        (((t >>> 24) & 255) / 255) * a.__owner.__worldAlpha,
                      );
                      b.applyColorTransform(Yb.tempColorTransform);
                      b.updateShader();
                      y = Yb.blankBitmapData.getVertexBuffer(h);
                      null != d.__position &&
                        h.setVertexBufferAt(d.__position.index, y, 0, 3);
                      null != d.__textureCoord &&
                        h.setVertexBufferAt(d.__textureCoord.index, y, 3, 2);
                      d = Yb.blankBitmapData.getIndexBuffer(h);
                      h.drawTriangles(d);
                      l += 4;
                      b.__clearShader();
                    }
                    break;
                  case 12:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = da.DRAW_TRIANGLES;
                    f = c;
                    y = f.buffer.o[f.oPos + 1];
                    C = f.buffer.o[f.oPos + 2];
                    d = f.buffer.o[f.oPos + 3];
                    t = null != y;
                    f = Math.floor(f.buffer.o[f.oPos].get_length() / 2);
                    y = t ? y.get_length() : f;
                    t = (C = null != C && C.get_length() >= 3 * f) ? 4 : 2;
                    f = t + 2;
                    var v = C ? a.__vertexBufferUVT : a.__vertexBuffer,
                      G = C ? x : D,
                      F = b.__getMatrix(a.__owner.__renderTransform, 1);
                    if (null == g || Yb.maskRender) {
                      var I = Yb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(I);
                      b.applyMatrix(F);
                      b.applyBitmapData(p, u, q);
                      b.applyAlpha(a.__owner.__worldAlpha);
                      b.applyColorTransform(a.__owner.__worldColorTransform);
                      b.updateShader();
                    } else
                      ((I = b.__initShaderBuffer(g)),
                        b.__setShaderBuffer(g),
                        b.applyMatrix(F),
                        b.applyBitmapData(p, !1, q),
                        b.applyAlpha(1),
                        b.applyColorTransform(null),
                        b.__updateShaderBuffer(l));
                    null != I.__position &&
                      h.setVertexBufferAt(I.__position.index, v, G, C ? 4 : 2);
                    null != I.__textureCoord &&
                      h.setVertexBufferAt(I.__textureCoord.index, v, G + t, 2);
                    switch (d) {
                      case 0:
                        h.setCulling(0);
                        break;
                      case 1:
                        h.setCulling(3);
                        break;
                      case 2:
                        h.setCulling(1);
                    }
                    h.__drawTriangles(0, y);
                    l += y;
                    C ? (x += f * y) : (D += f * y);
                    switch (d) {
                      case 1:
                      case 2:
                        h.setCulling(0);
                    }
                    b.__clearShader();
                    break;
                  case 13:
                    g = m = p = null;
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                    h.setCulling(3);
                    break;
                  case 18:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = da.MOVE_TO;
                    break;
                  case 19:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = da.OVERRIDE_BLEND_MODE;
                    d = c;
                    b.__setBlendMode(d.buffer.o[d.oPos]);
                    break;
                  default:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                }
              ua.__pool.release(k);
            }
            a.__hardwareDirty = !1;
            a.set___dirty(!1);
          }
      };
      Yb.renderMask = function (a, b) {
        Yb.maskRender = !0;
        Yb.render(a, b);
        Yb.maskRender = !1;
      };
      Yb.resizeVertexBuffer = function (a, b, c) {
        var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
          f = null;
        if (null == d) {
          var h = (f = null),
            k = null,
            g = null,
            p = null;
          f = c =
            null != c
              ? new Float32Array(c)
              : null != f
                ? new Float32Array(f)
                : null != h
                  ? new Float32Array(h.__array)
                  : null != k
                    ? new Float32Array(k)
                    : null != g
                      ? null == p
                        ? new Float32Array(g, 0)
                        : new Float32Array(g, 0, p)
                      : null;
        } else
          c > d.length &&
            ((p = g = k = h = f = null),
            (f = c =
              null != c
                ? new Float32Array(c)
                : null != f
                  ? new Float32Array(f)
                  : null != h
                    ? new Float32Array(h.__array)
                    : null != k
                      ? new Float32Array(k)
                      : null != g
                        ? null == p
                          ? new Float32Array(g, 0)
                          : new Float32Array(g, 0, p)
                        : null),
            f.set(d));
        null != f &&
          (b ? (a.__vertexBufferDataUVT = f) : (a.__vertexBufferData = f));
      };
      var Wf = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Dd.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.display._internal.Context3DMaskShader'] = Wf;
      Wf.__name__ = 'openfl.display._internal.Context3DMaskShader';
      Wf.__super__ = Dd;
      Wf.prototype = v(Dd.prototype, { __class__: Wf });
      var Ee = function () {};
      g['openfl.display._internal.Context3DShape'] = Ee;
      Ee.__name__ = 'openfl.display._internal.Context3DShape';
      Ee.render = function (a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha)) {
          var c = a.__graphics;
          if (null != c) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            Yb.render(c, b);
            if (null != c.__bitmap && c.__visible) {
              var d = b.__context3D,
                f = b.__initDisplayShader(a.__worldShader);
              b.setShader(f);
              b.applyBitmapData(c.__bitmap, !0);
              var h = ua.__pool.get();
              h.scale(1 / c.__bitmapScale, 1 / c.__bitmapScale);
              h.concat(c.__worldTransform);
              b.applyMatrix(b.__getMatrix(h, 1));
              ua.__pool.release(h);
              b.applyAlpha(a.__worldAlpha);
              b.applyColorTransform(a.__worldColorTransform);
              b.updateShader();
              h = c.__bitmap.getVertexBuffer(d);
              null != f.__position &&
                d.setVertexBufferAt(f.__position.index, h, 0, 3);
              null != f.__textureCoord &&
                d.setVertexBufferAt(f.__textureCoord.index, h, 3, 2);
              c = c.__bitmap.getIndexBuffer(d);
              d.drawTriangles(c);
              b.__clearShader();
            }
            b.__popMaskObject(a);
          }
        }
      };
      Ee.renderMask = function (a, b) {
        var c = a.__graphics;
        if (null != c && (Yb.renderMask(c, b), null != c.__bitmap)) {
          a = b.__context3D;
          var d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(c.__bitmap, !0);
          b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
          b.updateShader();
          var f = c.__bitmap.getVertexBuffer(a);
          null != d.__position &&
            a.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            a.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          c = c.__bitmap.getIndexBuffer(a);
          a.drawTriangles(c);
          b.__clearShader();
        }
      };
      var tj = function () {};
      g['openfl.display._internal.Context3DSimpleButton'] = tj;
      tj.__name__ = 'openfl.display._internal.Context3DSimpleButton';
      tj.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      tj.renderDrawableMask = function (a, b) {
        null != a.__currentState && b.__renderDrawableMask(a.__currentState);
      };
      var bf = function () {};
      g['openfl.display._internal.Context3DTextField'] = bf;
      bf.__name__ = 'openfl.display._internal.Context3DTextField';
      bf.render = function (a, b) {
        b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          f = d ? b.textBounds : b.bounds,
          h = a.__graphics,
          k = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == h.__bounds && (h.__bounds = new na());
          if (0 == a.get_text().length) {
            k = b.bounds.width - 4;
            var g = a.get_defaultTextFormat().align;
            k = 3 == g ? 0 : 4 == g ? k : k / 2;
            switch (g) {
              case 0:
                k += a.get_defaultTextFormat().leftMargin / 2;
                k -= a.get_defaultTextFormat().rightMargin / 2;
                k += a.get_defaultTextFormat().indent / 2;
                k += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                k -= a.get_defaultTextFormat().rightMargin;
            }
            d && ((f.y = b.bounds.y), (f.x = k));
          }
          h.__bounds.copyFrom(f);
        }
        g = c.__pixelRatio;
        h.__update(c.__worldTransform, g);
        if (a.__dirty || h.__softwareDirty) {
          var p = Math.round(h.__width * g),
            q = Math.round(h.__height * g);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            Q.context = h.__context;
            h.__canvas.width = p;
            h.__canvas.height = q;
            c.__isDOM &&
              ((h.__canvas.style.width = Math.round(p / g) + 'px'),
              (h.__canvas.style.height = Math.round(q / g) + 'px'));
            p = ua.__pool.get();
            p.scale(g, g);
            p.concat(h.__renderTransform);
            Q.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            ua.__pool.release(p);
            null == Q.clearRect &&
              (Q.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            Q.clearRect &&
              Q.context.clearRect(0, 0, h.__canvas.width, h.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              d = b.text;
              h.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                Q.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                if (b.background) {
                  var u = O.hex(b.backgroundColor & 16777215, 6);
                  Q.context.fillStyle = '#' + u;
                  Q.context.fill();
                }
                b.border &&
                  ((Q.context.lineWidth = 1),
                  (u = O.hex(b.borderColor & 16777215, 6)),
                  (Q.context.strokeStyle = '#' + u),
                  Q.context.stroke());
              }
              Q.context.textBaseline = 'alphabetic';
              Q.context.textAlign = 'start';
              c = -a.get_scrollH();
              var m = (k = 0);
              for (u = a.get_scrollV() - 1; m < u; ) {
                var r = m++;
                k -= b.lineHeights.get(r);
              }
              var l;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((q = p.next()), !(q.lineIndex < a.get_scrollV() - 1))) {
                  if (q.lineIndex > b.get_bottomScrollV() - 1) break;
                  var D = '#' + O.hex(q.format.color & 16777215, 6);
                  Q.context.font = Nb.getFont(q.format);
                  Q.context.fillStyle = D;
                  Q.context.fillText(
                    d.substring(q.startIndex, q.endIndex),
                    q.offsetX + c - f.x,
                    q.offsetY + q.ascent + k - f.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        q.startIndex <= a.__caretIndex &&
                        q.endIndex >= a.__caretIndex
                      ) {
                        m = l = 0;
                        for (u = a.__caretIndex - q.startIndex; m < u; ) {
                          r = m++;
                          if (q.positions.length <= r) break;
                          l += q.positions[r];
                        }
                        m = 0;
                        u = a.get_scrollV();
                        for (r = q.lineIndex + 1; u < r; ) {
                          var x = u++;
                          m += b.lineHeights.get(x - 1);
                        }
                        Q.context.beginPath();
                        u = O.hex(q.format.color & 16777215, 6);
                        Q.context.strokeStyle = '#' + u;
                        Q.context.moveTo(
                          q.offsetX + l - a.get_scrollH() - f.x,
                          m + 2 - f.y,
                        );
                        Q.context.lineWidth = 1;
                        Q.context.lineTo(
                          q.offsetX + l - a.get_scrollH() - f.x,
                          m +
                            Nb.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            f.y,
                        );
                        Q.context.stroke();
                        Q.context.closePath();
                      }
                    } else if (
                      (q.startIndex <= a.__caretIndex &&
                        q.endIndex >= a.__caretIndex) ||
                      (q.startIndex <= a.__selectionIndex &&
                        q.endIndex >= a.__selectionIndex) ||
                      (q.startIndex > a.__caretIndex &&
                        q.endIndex < a.__selectionIndex) ||
                      (q.startIndex > a.__selectionIndex &&
                        q.endIndex < a.__caretIndex)
                    )
                      ((l = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (m = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        q.startIndex > l && (l = q.startIndex),
                        q.endIndex < m && (m = q.endIndex),
                        (r = a.getCharBoundaries(l)),
                        m >= q.endIndex
                          ? ((u = a.getCharBoundaries(q.endIndex - 1)),
                            null != u && (u.x += u.width + 2))
                          : (u = a.getCharBoundaries(m)),
                        null != r &&
                          null != u &&
                          ((Q.context.fillStyle = '#000000'),
                          Q.context.fillRect(
                            r.x + c - f.x,
                            r.y + k,
                            u.x - r.x,
                            q.height,
                          ),
                          (Q.context.fillStyle = '#FFFFFF'),
                          Q.context.fillText(
                            d.substring(l, m),
                            c + r.x - f.x,
                            q.offsetY + q.ascent + k,
                          )));
                  q.format.underline &&
                    (Q.context.beginPath(),
                    (Q.context.strokeStyle = D),
                    (Q.context.lineWidth = 1),
                    (D = q.offsetX + c - f.x),
                    (l =
                      Math.ceil(q.offsetY + k + q.ascent - f.y) +
                      Math.floor(0.185 * q.ascent) +
                      0.5),
                    Q.context.moveTo(D, l),
                    Q.context.lineTo(D + q.width, l),
                    Q.context.stroke(),
                    Q.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? Q.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                  : Q.context.rect(0, 0, f.width, f.height),
                  b.background &&
                    ((u = O.hex(b.backgroundColor & 16777215, 6)),
                    (Q.context.fillStyle = '#' + u),
                    Q.context.fill()),
                  b.border &&
                    ((Q.context.lineWidth = 1),
                    (Q.context.lineCap = 'square'),
                    (u = O.hex(b.borderColor & 16777215, 6)),
                    (Q.context.strokeStyle = '#' + u),
                    Q.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : k);
                m = k = 0;
                for (u = a.get_scrollV() - 1; m < u; )
                  ((r = m++), (k += b.lineHeights.get(r)));
                Q.context.beginPath();
                u = O.hex(a.get_defaultTextFormat().color & 16777215, 6);
                Q.context.strokeStyle = '#' + u;
                Q.context.moveTo(c + 2.5, k + 2.5);
                Q.context.lineWidth = 1;
                Q.context.lineTo(
                  c + 2.5,
                  k + Nb.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                Q.context.stroke();
                Q.context.closePath();
              }
            }
            h.__bitmap = Fb.fromCanvas(a.__graphics.__canvas);
            h.__bitmapScale = g;
            h.__visible = !0;
            a.__dirty = !1;
            h.__softwareDirty = !1;
            h.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      bf.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            (bf.render(a, b),
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            ))
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = na.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              na.__pool.release(d);
            }
            null != a.__graphics && Ee.render(a, b);
          }
        } else Vd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      bf.renderDrawableMask = function (a, b) {
        bf.renderMask(a, b);
        Xf.renderDrawableMask(a, b);
      };
      bf.renderMask = function (a, b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          f = d ? b.textBounds : b.bounds,
          h = a.__graphics,
          k = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == h.__bounds && (h.__bounds = new na());
          if (0 == a.get_text().length) {
            k = b.bounds.width - 4;
            var g = a.get_defaultTextFormat().align;
            k = 3 == g ? 0 : 4 == g ? k : k / 2;
            switch (g) {
              case 0:
                k += a.get_defaultTextFormat().leftMargin / 2;
                k -= a.get_defaultTextFormat().rightMargin / 2;
                k += a.get_defaultTextFormat().indent / 2;
                k += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                k -= a.get_defaultTextFormat().rightMargin;
            }
            d && ((f.y = b.bounds.y), (f.x = k));
          }
          h.__bounds.copyFrom(f);
        }
        g = c.__pixelRatio;
        h.__update(c.__worldTransform, g);
        if (a.__dirty || h.__softwareDirty) {
          var p = Math.round(h.__width * g),
            q = Math.round(h.__height * g);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            Q.context = h.__context;
            h.__canvas.width = p;
            h.__canvas.height = q;
            c.__isDOM &&
              ((h.__canvas.style.width = Math.round(p / g) + 'px'),
              (h.__canvas.style.height = Math.round(q / g) + 'px'));
            p = ua.__pool.get();
            p.scale(g, g);
            p.concat(h.__renderTransform);
            Q.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            ua.__pool.release(p);
            null == Q.clearRect &&
              (Q.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            Q.clearRect &&
              Q.context.clearRect(0, 0, h.__canvas.width, h.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              d = b.text;
              h.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                Q.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                if (b.background) {
                  var u = O.hex(b.backgroundColor & 16777215, 6);
                  Q.context.fillStyle = '#' + u;
                  Q.context.fill();
                }
                b.border &&
                  ((Q.context.lineWidth = 1),
                  (u = O.hex(b.borderColor & 16777215, 6)),
                  (Q.context.strokeStyle = '#' + u),
                  Q.context.stroke());
              }
              Q.context.textBaseline = 'alphabetic';
              Q.context.textAlign = 'start';
              c = -a.get_scrollH();
              var m = (k = 0);
              for (u = a.get_scrollV() - 1; m < u; ) {
                var r = m++;
                k -= b.lineHeights.get(r);
              }
              var l;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((q = p.next()), !(q.lineIndex < a.get_scrollV() - 1))) {
                  if (q.lineIndex > b.get_bottomScrollV() - 1) break;
                  var D = '#' + O.hex(q.format.color & 16777215, 6);
                  Q.context.font = Nb.getFont(q.format);
                  Q.context.fillStyle = D;
                  Q.context.fillText(
                    d.substring(q.startIndex, q.endIndex),
                    q.offsetX + c - f.x,
                    q.offsetY + q.ascent + k - f.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        q.startIndex <= a.__caretIndex &&
                        q.endIndex >= a.__caretIndex
                      ) {
                        m = l = 0;
                        for (u = a.__caretIndex - q.startIndex; m < u; ) {
                          r = m++;
                          if (q.positions.length <= r) break;
                          l += q.positions[r];
                        }
                        m = 0;
                        u = a.get_scrollV();
                        for (r = q.lineIndex + 1; u < r; ) {
                          var x = u++;
                          m += b.lineHeights.get(x - 1);
                        }
                        Q.context.beginPath();
                        u = O.hex(q.format.color & 16777215, 6);
                        Q.context.strokeStyle = '#' + u;
                        Q.context.moveTo(
                          q.offsetX + l - a.get_scrollH() - f.x,
                          m + 2 - f.y,
                        );
                        Q.context.lineWidth = 1;
                        Q.context.lineTo(
                          q.offsetX + l - a.get_scrollH() - f.x,
                          m +
                            Nb.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            f.y,
                        );
                        Q.context.stroke();
                        Q.context.closePath();
                      }
                    } else if (
                      (q.startIndex <= a.__caretIndex &&
                        q.endIndex >= a.__caretIndex) ||
                      (q.startIndex <= a.__selectionIndex &&
                        q.endIndex >= a.__selectionIndex) ||
                      (q.startIndex > a.__caretIndex &&
                        q.endIndex < a.__selectionIndex) ||
                      (q.startIndex > a.__selectionIndex &&
                        q.endIndex < a.__caretIndex)
                    )
                      ((l = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (m = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        q.startIndex > l && (l = q.startIndex),
                        q.endIndex < m && (m = q.endIndex),
                        (r = a.getCharBoundaries(l)),
                        m >= q.endIndex
                          ? ((u = a.getCharBoundaries(q.endIndex - 1)),
                            null != u && (u.x += u.width + 2))
                          : (u = a.getCharBoundaries(m)),
                        null != r &&
                          null != u &&
                          ((Q.context.fillStyle = '#000000'),
                          Q.context.fillRect(
                            r.x + c - f.x,
                            r.y + k,
                            u.x - r.x,
                            q.height,
                          ),
                          (Q.context.fillStyle = '#FFFFFF'),
                          Q.context.fillText(
                            d.substring(l, m),
                            c + r.x - f.x,
                            q.offsetY + q.ascent + k,
                          )));
                  q.format.underline &&
                    (Q.context.beginPath(),
                    (Q.context.strokeStyle = D),
                    (Q.context.lineWidth = 1),
                    (D = q.offsetX + c - f.x),
                    (l =
                      Math.ceil(q.offsetY + k + q.ascent - f.y) +
                      Math.floor(0.185 * q.ascent) +
                      0.5),
                    Q.context.moveTo(D, l),
                    Q.context.lineTo(D + q.width, l),
                    Q.context.stroke(),
                    Q.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? Q.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                  : Q.context.rect(0, 0, f.width, f.height),
                  b.background &&
                    ((u = O.hex(b.backgroundColor & 16777215, 6)),
                    (Q.context.fillStyle = '#' + u),
                    Q.context.fill()),
                  b.border &&
                    ((Q.context.lineWidth = 1),
                    (Q.context.lineCap = 'square'),
                    (u = O.hex(b.borderColor & 16777215, 6)),
                    (Q.context.strokeStyle = '#' + u),
                    Q.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : k);
                m = k = 0;
                for (u = a.get_scrollV() - 1; m < u; )
                  ((r = m++), (k += b.lineHeights.get(r)));
                Q.context.beginPath();
                u = O.hex(a.get_defaultTextFormat().color & 16777215, 6);
                Q.context.strokeStyle = '#' + u;
                Q.context.moveTo(c + 2.5, k + 2.5);
                Q.context.lineWidth = 1;
                Q.context.lineTo(
                  c + 2.5,
                  k + Nb.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                Q.context.stroke();
                Q.context.closePath();
              }
            }
            h.__bitmap = Fb.fromCanvas(a.__graphics.__canvas);
            h.__bitmapScale = g;
            h.__visible = !0;
            a.__dirty = !1;
            h.__softwareDirty = !1;
            h.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      var V = function () {};
      g['openfl.display._internal.Context3DTilemap'] = V;
      V.__name__ = 'openfl.display._internal.Context3DTilemap';
      V.buildBuffer = function (a, b) {
        if (
          !a.__renderable ||
          0 == a.__group.__tiles.length ||
          0 >= a.__worldAlpha
        )
          a.__group.__dirty = !1;
        else {
          V.numTiles = 0;
          V.vertexBufferData =
            null != a.__buffer ? a.__buffer.vertexBufferData : null;
          V.vertexDataPosition = 0;
          var c = na.__pool.get(),
            d = ua.__pool.get(),
            f = ua.__pool.get();
          V.dataPerVertex = 4;
          a.tileAlphaEnabled && V.dataPerVertex++;
          a.tileColorTransformEnabled && (V.dataPerVertex += 8);
          V.buildBufferTileContainer(
            a,
            a.__group,
            b,
            f,
            a.__tileset,
            a.tileAlphaEnabled,
            a.__worldAlpha,
            a.tileColorTransformEnabled,
            a.__worldColorTransform,
            null,
            c,
            d,
          );
          a.__buffer.flushVertexBufferData();
          na.__pool.release(c);
          ua.__pool.release(d);
          ua.__pool.release(f);
        }
      };
      V.buildBufferTileContainer = function (
        a,
        b,
        c,
        d,
        f,
        h,
        k,
        g,
        p,
        q,
        u,
        m,
        r,
      ) {
        null == r && (r = !0);
        var n = ua.__pool.get(),
          l = c.__roundPixels,
          D = b.__tiles;
        r && V.resizeBuffer(a, V.numTiles + V.getRecursiveLength(b));
        r = null;
        for (
          var x, w, J, y, z, C, t, v, P, G, F, I = h ? 5 : 4, eb = 0;
          eb < D.length;

        ) {
          y = D[eb];
          ++eb;
          n.setTo(1, 0, 0, 1, -y.get_originX(), -y.get_originY());
          n.concat(y.get_matrix());
          n.concat(d);
          l && ((n.tx = Math.round(n.tx)), (n.ty = Math.round(n.ty)));
          var K = null != y.get_tileset() ? y.get_tileset() : f;
          var H = y.get_alpha() * k;
          var O = y.get_visible();
          y.__dirty = !1;
          if (O && !(0 >= H))
            if (
              (g &&
                (null != y.get_colorTransform()
                  ? null == p
                    ? (r = y.get_colorTransform())
                    : (null == V.cacheColorTransform &&
                        (V.cacheColorTransform = new Tb()),
                      (r = V.cacheColorTransform),
                      (r.redMultiplier =
                        p.redMultiplier * y.get_colorTransform().redMultiplier),
                      (r.greenMultiplier =
                        p.greenMultiplier *
                        y.get_colorTransform().greenMultiplier),
                      (r.blueMultiplier =
                        p.blueMultiplier *
                        y.get_colorTransform().blueMultiplier),
                      (r.alphaMultiplier =
                        p.alphaMultiplier *
                        y.get_colorTransform().alphaMultiplier),
                      (r.redOffset =
                        p.redOffset + y.get_colorTransform().redOffset),
                      (r.greenOffset =
                        p.greenOffset + y.get_colorTransform().greenOffset),
                      (r.blueOffset =
                        p.blueOffset + y.get_colorTransform().blueOffset),
                      (r.alphaOffset =
                        p.alphaOffset + y.get_colorTransform().alphaOffset))
                  : (r = p)),
              h || (H = 1),
              0 < y.__length)
            )
              V.buildBufferTileContainer(
                a,
                y,
                c,
                n,
                K,
                h,
                H,
                g,
                r,
                q,
                u,
                m,
                !1,
              );
            else if (
              null != K &&
              ((O = y.get_id()), (x = K.__bitmapData), null != x)
            ) {
              if (-1 == O) {
                w = y.__rect;
                if (null == w || 0 >= w.width || 0 >= w.height) continue;
                K = w.x / x.width;
                y = w.y / x.height;
                O = w.get_right() / x.width;
                z = w.get_bottom() / x.height;
              } else {
                x = K.__data[O];
                if (null == x) continue;
                u.setTo(x.x, x.y, x.width, x.height);
                w = u;
                K = x.__uvX;
                y = x.__uvY;
                O = x.__uvWidth;
                z = x.__uvHeight;
              }
              x = w.width;
              J = w.height;
              w = 0 * n.a + 0 * n.c + n.tx;
              C = 0 * n.b + 0 * n.d + n.ty;
              t = x * n.a + 0 * n.c + n.tx;
              v = x * n.b + 0 * n.d + n.ty;
              P = 0 * n.a + J * n.c + n.tx;
              G = 0 * n.b + J * n.d + n.ty;
              F = x * n.a + J * n.c + n.tx;
              J = x * n.b + J * n.d + n.ty;
              x = V.vertexDataPosition;
              V.vertexBufferData[x] = w;
              V.vertexBufferData[x + 1] = C;
              V.vertexBufferData[x + 2] = K;
              V.vertexBufferData[x + 3] = y;
              V.vertexBufferData[x + V.dataPerVertex] = t;
              V.vertexBufferData[x + V.dataPerVertex + 1] = v;
              V.vertexBufferData[x + V.dataPerVertex + 2] = O;
              V.vertexBufferData[x + V.dataPerVertex + 3] = y;
              V.vertexBufferData[x + 2 * V.dataPerVertex] = P;
              V.vertexBufferData[x + 2 * V.dataPerVertex + 1] = G;
              V.vertexBufferData[x + 2 * V.dataPerVertex + 2] = K;
              V.vertexBufferData[x + 2 * V.dataPerVertex + 3] = z;
              V.vertexBufferData[x + 3 * V.dataPerVertex] = F;
              V.vertexBufferData[x + 3 * V.dataPerVertex + 1] = J;
              V.vertexBufferData[x + 3 * V.dataPerVertex + 2] = O;
              V.vertexBufferData[x + 3 * V.dataPerVertex + 3] = z;
              h &&
                ((V.vertexBufferData[x + 0 * V.dataPerVertex + 4] = H),
                (V.vertexBufferData[x + V.dataPerVertex + 4] = H),
                (V.vertexBufferData[x + 2 * V.dataPerVertex + 4] = H),
                (V.vertexBufferData[x + 3 * V.dataPerVertex + 4] = H));
              if (g)
                if (null != r)
                  for (H = 0; 4 > H; )
                    ((K = H++),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I] =
                        r.redMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 1] =
                        r.greenMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 2] =
                        r.blueMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 3] =
                        r.alphaMultiplier),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 4] =
                        r.redOffset),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 5] =
                        r.greenOffset),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 6] =
                        r.blueOffset),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 7] =
                        r.alphaOffset));
                else
                  for (H = 0; 4 > H; )
                    ((K = H++),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 1] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 2] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 3] = 1),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 4] = 0),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 5] = 0),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 6] = 0),
                      (V.vertexBufferData[x + V.dataPerVertex * K + I + 7] =
                        0));
              V.vertexDataPosition += 4 * V.dataPerVertex;
            }
        }
        b.__dirty = !1;
        ua.__pool.release(n);
      };
      V.flush = function (a, b, c) {
        null == V.currentShader && (V.currentShader = b.__defaultDisplayShader);
        if (
          V.bufferPosition > V.lastFlushedPosition &&
          null != V.currentBitmapData &&
          null != V.currentShader
        ) {
          var d = b.__initDisplayShader(V.currentShader);
          b.setShader(d);
          b.applyBitmapData(V.currentBitmapData, a.smoothing);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          a.tileAlphaEnabled ? b.useAlphaArray() : b.applyAlpha(a.__worldAlpha);
          a.tileBlendModeEnabled && b.__setBlendMode(c);
          a.tileColorTransformEnabled
            ? (b.applyHasColorTransform(!0), b.useColorTransformArray())
            : b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          c = a.__buffer.vertexBuffer;
          for (
            var f = V.lastFlushedPosition * V.dataPerVertex * 4, h;
            V.lastFlushedPosition < V.bufferPosition;

          ) {
            h =
              Math.min(
                V.bufferPosition - V.lastFlushedPosition,
                V.context.__quadIndexBufferElements,
              ) | 0;
            if (0 >= h) break;
            null != d.__position &&
              V.context.setVertexBufferAt(d.__position.index, c, f, 2);
            null != d.__textureCoord &&
              V.context.setVertexBufferAt(d.__textureCoord.index, c, f + 2, 2);
            a.tileAlphaEnabled &&
              null != d.__alpha &&
              V.context.setVertexBufferAt(d.__alpha.index, c, f + 4, 1);
            if (a.tileColorTransformEnabled) {
              var k = a.tileAlphaEnabled ? 5 : 4;
              null != d.__colorMultiplier &&
                V.context.setVertexBufferAt(
                  d.__colorMultiplier.index,
                  c,
                  f + k,
                  4,
                );
              null != d.__colorOffset &&
                V.context.setVertexBufferAt(
                  d.__colorOffset.index,
                  c,
                  f + k + 4,
                  4,
                );
            }
            V.context.drawTriangles(V.context.__quadIndexBuffer, 0, 2 * h);
            V.lastFlushedPosition += h;
          }
          b.__clearShader();
        }
        V.lastUsedBitmapData = V.currentBitmapData;
        V.lastUsedShader = V.currentShader;
      };
      V.getRecursiveLength = function (a) {
        a = a.__tiles;
        for (var b = 0, c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          0 < d.__length ? (b += V.getRecursiveLength(d)) : ++b;
        }
        return b;
      };
      V.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          ((V.context = b.__context3D), V.buildBuffer(a, b), 0 != V.numTiles)
        ) {
          V.bufferPosition = 0;
          V.lastFlushedPosition = 0;
          V.lastUsedBitmapData = null;
          V.lastUsedShader = null;
          V.currentBitmapData = null;
          V.currentShader = null;
          V.currentBlendMode = a.__worldBlendMode;
          a.tileBlendModeEnabled || b.__setBlendMode(V.currentBlendMode);
          b.__pushMaskObject(a);
          var c = na.__pool.get();
          c.setTo(0, 0, a.__width, a.__height);
          b.__pushMaskRect(c, a.__renderTransform);
          V.renderTileContainer(
            a,
            b,
            a.__group,
            a.__worldShader,
            a.__tileset,
            a.__worldAlpha,
            a.tileBlendModeEnabled,
            V.currentBlendMode,
            null,
          );
          V.flush(a, b, V.currentBlendMode);
          b.__popMaskRect();
          b.__popMaskObject(a);
          na.__pool.release(c);
        }
      };
      V.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = na.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              na.__pool.release(d);
            }
            null != a.__graphics && Ee.render(a, b);
          }
          V.render(a, b);
        } else Vd.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      V.renderDrawableMask = function (a, b) {
        if (null != a.opaqueBackground || null != a.__graphics)
          (null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height(),
            null != a.__graphics && Ee.renderMask(a, b));
        V.renderMask(a, b);
      };
      V.renderTileContainer = function (a, b, c, d, f, h, k, g, p) {
        c = c.__tiles;
        for (var n, q, m, u = null, r, l = 0; l < c.length; ) {
          var x = c[l];
          ++l;
          n = null != x.get_tileset() ? x.get_tileset() : f;
          q = x.get_alpha() * h;
          if ((m = x.get_visible()) && !(0 >= q))
            if (
              ((m = null != x.get_shader() ? x.get_shader() : d),
              k && (u = null != x.__blendMode ? x.__blendMode : g),
              0 < x.__length)
            )
              V.renderTileContainer(a, b, x, m, n, q, k, u, p);
            else if (
              null != n &&
              ((r = x.get_id()), (q = n.__bitmapData), null != q)
            ) {
              if (-1 == r) {
                if (
                  ((n = x.__rect), null == n || 0 >= n.width || 0 >= n.height)
                )
                  continue;
              } else if (((n = n.__data[r]), null == n)) continue;
              (m != V.currentShader ||
                (q != V.currentBitmapData && null != V.currentBitmapData) ||
                V.currentBlendMode != u) &&
                V.flush(a, b, V.currentBlendMode);
              V.currentBitmapData = q;
              V.currentShader = m;
              V.currentBlendMode = u;
              V.bufferPosition++;
            }
        }
      };
      V.renderMask = function (a, b) {};
      V.resizeBuffer = function (a, b) {
        V.numTiles = b;
        null == a.__buffer
          ? (a.__buffer = new Ch(
              V.context,
              xj.QUADS,
              V.numTiles,
              V.dataPerVertex,
            ))
          : a.__buffer.resize(V.numTiles, V.dataPerVertex);
        V.vertexBufferData = a.__buffer.vertexBufferData;
      };
      var Wd = function () {};
      g['openfl.display._internal.Context3DVideo'] = Wd;
      Wd.__name__ = 'openfl.display._internal.Context3DVideo';
      Wd.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__stream &&
          null != a.__stream.__video
        ) {
          var c = b.__context3D,
            d = c.gl;
          if (null != a.__getTexture(c)) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var f = b.__initDisplayShader(a.__worldShader);
            b.setShader(f);
            b.applyBitmapData(null, !0, !1);
            b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
            b.applyAlpha(a.__worldAlpha);
            b.applyColorTransform(a.__worldColorTransform);
            null != f.__textureSize &&
              ((Wd.__textureSizeValue[0] =
                null != a.__stream ? a.__stream.__video.videoWidth : 0),
              (Wd.__textureSizeValue[1] =
                null != a.__stream ? a.__stream.__video.videoHeight : 0),
              (f.__textureSize.value = Wd.__textureSizeValue));
            b.updateShader();
            c.setTextureAt(0, a.__getTexture(c));
            c.__flushGLTextures();
            d.uniform1i(f.__texture.index, 0);
            a.smoothing
              ? (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.LINEAR),
                d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.LINEAR))
              : (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST),
                d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST));
            d = a.__getVertexBuffer(c);
            null != f.__position &&
              c.setVertexBufferAt(f.__position.index, d, 0, 3);
            null != f.__textureCoord &&
              c.setVertexBufferAt(f.__textureCoord.index, d, 3, 2);
            f = a.__getIndexBuffer(c);
            c.drawTriangles(f);
            b.__clearShader();
            b.__popMaskObject(a);
          }
        }
      };
      Wd.renderDrawable = function (a, b) {
        Wd.render(a, b);
        b.__renderEvent(a);
      };
      Wd.renderDrawableMask = function (a, b) {
        Wd.renderMask(a, b);
      };
      Wd.renderMask = function (a, b) {
        if (null != a.__stream && null != a.__stream.__video) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(Wf.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          b.updateShader();
          var f = a.__getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          a = a.__getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var Zb = function () {};
      g['openfl.display._internal.DOMBitmap'] = Zb;
      Zb.__name__ = 'openfl.display._internal.DOMBitmap';
      Zb.clear = function (a, b) {
        rd.clear(a, b);
        null != a.__image &&
          (b.element.removeChild(a.__image),
          (a.__image = null),
          (a.__style = null));
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Zb.renderCanvas = function (a, b) {
        null != a.__image &&
          (b.element.removeChild(a.__image), (a.__image = null));
        null == a.__canvas &&
          ((a.__canvas = window.document.createElement('canvas')),
          (a.__context = a.__canvas.getContext('2d')),
          (a.__imageVersion = -1),
          (b.__allowSmoothing && a.smoothing) ||
            (a.__context.imageSmoothingEnabled = !1),
          b.__initializeElement(a, a.__canvas));
        a.__imageVersion != a.__bitmapData.image.version &&
          (Ka.convertToCanvas(a.__bitmapData.image),
          (a.__canvas.width = a.__bitmapData.width + 1),
          (a.__canvas.width = a.__bitmapData.width),
          (a.__canvas.height = a.__bitmapData.height),
          a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0),
          (a.__imageVersion = a.__bitmapData.image.version));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      Zb.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var c = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != c
          ) {
            z.render(c, b.__canvasRenderer);
            if (
              c.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != c.__canvas
            )
              null != c.__canvas
                ? a.__canvas != c.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = c.__canvas),
                  (a.__context = c.__context),
                  b.__initializeElement(a, a.__canvas))
                : wf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty &&
                ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a);
            }
          } else wf.clear(a, b);
          null != a.stage &&
          a.__worldVisible &&
          a.__renderable &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid &&
          a.__bitmapData.readable
            ? (b.__pushMaskObject(a),
              null != a.__bitmapData.image.buffer.__srcImage
                ? ((d = a.__bitmapData.image.buffer.__srcImage.src),
                  O.startsWith(d, 'data:') || O.startsWith(d, 'blob:')
                    ? Zb.renderCanvas(a, b)
                    : Zb.renderImage(a, b))
                : Zb.renderCanvas(a, b),
              b.__popMaskObject(a))
            : Zb.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    O.startsWith(d, 'data:') || O.startsWith(d, 'blob:')
                      ? Zb.renderCanvas(c, b)
                      : Zb.renderImage(c, b))
                  : Zb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Zb.clear(c, b));
        b.__renderEvent(a);
      };
      Zb.renderDrawableClear = function (a, b) {
        Zb.clear(a, b);
      };
      Zb.renderImage = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas), (a.__canvas = null));
        null == a.__image &&
          ((a.__image = window.document.createElement('img')),
          (a.__image.crossOrigin = 'Anonymous'),
          (a.__image.src = a.__bitmapData.image.buffer.__srcImage.src),
          b.__initializeElement(a, a.__image));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      var rd = function () {};
      g['openfl.display._internal.DOMDisplayObject'] = rd;
      rd.__name__ = 'openfl.display._internal.DOMDisplayObject';
      rd.clear = function (a, b) {
        null != a.__cacheBitmap && Zb.clear(a.__cacheBitmap, b);
        wf.clear(a, b);
      };
      rd.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var c = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != c
          ) {
            z.render(c, b.__canvasRenderer);
            if (
              c.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != c.__canvas
            )
              null != c.__canvas
                ? a.__canvas != c.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = c.__canvas),
                  (a.__context = c.__context),
                  b.__initializeElement(a, a.__canvas))
                : wf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty &&
                ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a);
            }
          } else wf.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    O.startsWith(d, 'data:') || O.startsWith(d, 'blob:')
                      ? Zb.renderCanvas(c, b)
                      : Zb.renderImage(c, b))
                  : Zb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Zb.clear(c, b));
        b.__renderEvent(a);
      };
      rd.renderDrawableClear = function (a, b) {
        rd.clear(a, b);
      };
      var fj = function () {};
      g['openfl.display._internal.DOMDisplayObjectContainer'] = fj;
      fj.__name__ = 'openfl.display._internal.DOMDisplayObjectContainer';
      fj.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && b.__renderDrawable(d);
        }
        for (c = a.__removedChildren.iterator(); c.hasNext(); )
          ((d = c.next()), null == d.stage && d.__cleanup());
        a.__removedChildren.set_length(0);
        rd.renderDrawable(a, b);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f), (f.__renderDirty = !1));
            a.__renderDirty = !1;
          } else
            for (c = 0, d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f));
          b.__popMaskObject(a);
        } else {
          c = 0;
          for (d = a.__children; c < d.length; ) {
            var f = d[c];
            ++c;
            b.__renderDrawableClear(f);
          }
          wf.clear(a, b);
          a.__cacheBitmap.stage = a.stage;
        }
      };
      fj.renderDrawableClear = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && b.__renderDrawableClear(d);
        }
        for (c = a.__removedChildren.iterator(); c.hasNext(); )
          ((d = c.next()), null == d.stage && d.__cleanup());
        a.__removedChildren.set_length(0);
        c = 0;
        for (d = a.__children; c < d.length; ) {
          var f = d[c];
          ++c;
          b.__renderDrawableClear(f);
        }
        rd.clear(a, b);
      };
      var wf = function () {};
      g['openfl.display._internal.DOMShape'] = wf;
      wf.__name__ = 'openfl.display._internal.DOMShape';
      wf.clear = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      var gj = function () {};
      g['openfl.display._internal.DOMSimpleButton'] = gj;
      gj.__name__ = 'openfl.display._internal.DOMSimpleButton';
      gj.renderDrawable = function (a, b) {
        b.__pushMaskObject(a);
        for (var c = a.__previousStates.iterator(); c.hasNext(); ) {
          var d = c.next();
          b.__renderDrawable(d);
        }
        a.__previousStates.set_length(0);
        null != a.__currentState &&
          (a.__currentState.stage != a.stage &&
            a.__currentState.__setStageReference(a.stage),
          b.__renderDrawable(a.__currentState));
        b.__popMaskObject(a);
        b.__renderEvent(a);
      };
      gj.renderDrawableClear = function (a, b) {
        rd.renderDrawableClear(a, b);
      };
      var uf = function () {};
      g['openfl.display._internal.DOMTextField'] = uf;
      uf.__name__ = 'openfl.display._internal.DOMTextField';
      uf.clear = function (a, b) {
        rd.clear(a, b);
        null != a.__div &&
          (b.element.removeChild(a.__div),
          (a.__div = null),
          (a.__style = null));
      };
      uf.renderDrawable = function (a, b) {
        a.__domRender = !0;
        b.__updateCacheBitmap(a, a.__forceCachedBitmapUpdate);
        a.__forceCachedBitmapUpdate = !1;
        a.__domRender = !1;
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          a.__renderedOnCanvasWhileOnDOM &&
            ((a.__renderedOnCanvasWhileOnDOM = !1),
            a.__isHTML &&
              null != a.__htmlText &&
              (a.__updateText(a.__htmlText),
              (a.__dirty = !0),
              (a.__layoutDirty = !0),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty())));
          var c = a.__textEngine;
          if (null != a.stage && a.__worldVisible && a.__renderable) {
            if (a.__dirty || a.__renderTransformChanged || null == a.__div)
              if ('' != c.text || c.background || c.border || 1 == c.type) {
                a.__updateLayout();
                null == a.__div &&
                  ((a.__div = window.document.createElement('div')),
                  b.__initializeElement(a, a.__div),
                  a.__style.setProperty('outline', 'none', null),
                  a.__div.addEventListener(
                    'input',
                    function (b) {
                      b.preventDefault();
                      a.get_htmlText() != a.__div.innerHTML &&
                        (a.set_htmlText(a.__div.innerHTML),
                        (a.__dirty = !1),
                        a.dispatchEvent(
                          new Ce('textInput', !1, !1, a.get_htmlText()),
                        ));
                    },
                    !0,
                  ));
                c.wordWrap
                  ? a.__style.setProperty('word-wrap', 'break-word', null)
                  : a.__style.setProperty('white-space', 'nowrap', null);
                a.__style.setProperty('overflow', 'hidden', null);
                c.selectable
                  ? (a.__style.setProperty('cursor', 'text', null),
                    a.__style.setProperty('-webkit-user-select', 'text', null),
                    a.__style.setProperty('-moz-user-select', 'text', null),
                    a.__style.setProperty('-ms-user-select', 'text', null),
                    a.__style.setProperty('-o-user-select', 'text', null))
                  : a.__style.setProperty('cursor', 'inherit', null);
                a.__div.contentEditable = 1 == c.type;
                var d = a.__style;
                c.background
                  ? d.setProperty(
                      'background-color',
                      '#' + O.hex(c.backgroundColor & 16777215, 6),
                      null,
                    )
                  : d.removeProperty('background-color');
                var f = c.width,
                  h = c.height,
                  k = '';
                a.__isHTML &&
                  a.__updateText(
                    La.parse(
                      a.__text,
                      a.get_multiline(),
                      a.__styleSheet,
                      a.__textFormat,
                      a.__textEngine.textFormatRanges,
                    ),
                  );
                for (
                  var g = -a.get_scrollH(), p = c.layoutGroups.iterator();
                  p.hasNext();

                ) {
                  var q = p.next();
                  if (!(q.lineIndex < a.get_scrollV() - 1)) {
                    if (q.lineIndex > c.get_bottomScrollV() - 1) break;
                    k += '<div style="';
                    null != q.format.font &&
                      (k += 'font: ' + Nb.getFont(q.format) + '; ');
                    null != q.format.color &&
                      (k +=
                        'color: #' +
                        O.hex(q.format.color & 16777215, 6) +
                        '; ');
                    1 == q.format.underline &&
                      (k += 'text-decoration: underline; ');
                    if (null != q.format.align)
                      switch (q.format.align) {
                        case 0:
                          k += 'text-align: center; ';
                          break;
                        case 2:
                          k += 'text-align: justify; ';
                          break;
                        case 4:
                          k += 'text-align: right; ';
                          break;
                        default:
                          k += 'text-align: left; ';
                      }
                    null != q.format.leftMargin &&
                      (k +=
                        'padding-left: ' + 1 * q.format.leftMargin + 'px; ');
                    null != q.format.rightMargin &&
                      (k +=
                        'padding-right: ' + 1 * q.format.rightMargin + 'px; ');
                    null != q.format.indent &&
                      (k += 'text-indent: ' + 1 * q.format.indent + 'px; ');
                    k +=
                      'left: ' +
                      (q.offsetX + g) +
                      'px; top: ' +
                      (q.offsetY + 0 + 3) +
                      'px; vertical-align: top; position: absolute;">';
                    if (null != q.format.url && '' != q.format.url) {
                      var u = 'text-decoration: underline; ';
                      null != q.format.color &&
                        (u +=
                          'color: #' +
                          O.hex(q.format.color & 16777215, 6) +
                          '; ');
                      k +=
                        "<a style='" +
                        u +
                        "' href='" +
                        q.format.url +
                        "' target='" +
                        q.format.target +
                        "'>";
                    }
                    k = a.__isHTML
                      ? k +
                        O.replace(
                          c.text.substring(q.startIndex, q.endIndex),
                          ' ',
                          '&nbsp;',
                        )
                      : k +
                        O.replace(
                          O.htmlEscape(
                            c.text.substring(q.startIndex, q.endIndex),
                          ),
                          ' ',
                          '&nbsp;',
                        );
                    null != q.format.url && '' != q.format.url && (k += '</a>');
                    k += '</div>';
                  }
                }
                c.border
                  ? (d.setProperty(
                      'border',
                      'solid 1px #' + O.hex(c.borderColor & 16777215, 6),
                      null,
                    ),
                    a.__renderTransform.translate(-1, -1),
                    (a.__renderTransformChanged = !0),
                    (a.__transformDirty = !0))
                  : '' != d.border &&
                    (d.removeProperty('border'),
                    (a.__renderTransformChanged = !0));
                d.setProperty('width', f + 'px', null);
                d.setProperty('height', h + 'px', null);
                a.__div.innerHTML = k;
                a.__dirty = !1;
              } else
                null != a.__div &&
                  (b.element.removeChild(a.__div), (a.__div = null));
            null != a.__div &&
              ((c = b.__roundPixels),
              (b.__roundPixels = !0),
              b.__updateClip(a),
              b.__applyStyle(a, !0, !0, !0),
              (b.__roundPixels = c));
          } else uf.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    O.startsWith(d, 'data:') || O.startsWith(d, 'blob:')
                      ? Zb.renderCanvas(c, b)
                      : Zb.renderImage(c, b))
                  : Zb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Zb.clear(c, b));
        b.__renderEvent(a);
      };
      uf.renderDrawableClear = function (a, b) {
        uf.clear(a, b);
      };
      var vf = function () {};
      g['openfl.display._internal.DOMTilemap'] = vf;
      vf.__name__ = 'openfl.display._internal.DOMTilemap';
      vf.clear = function (a, b) {
        rd.clear(a, b);
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      vf.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender)
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            0 < a.__group.__tiles.length
          ) {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')),
              b.__initializeElement(a, a.__canvas));
            a.__canvas.width = a.__width;
            a.__canvas.height = a.__height;
            b.__canvasRenderer.context = a.__context;
            var c = a.__renderTransform;
            a.__renderTransform = ua.__identity;
            var d = b.__canvasRenderer;
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable
            ) {
              var f = d.__getAlpha(a.__worldAlpha);
              if (!(0 >= f)) {
                if (
                  null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height()
                ) {
                  d.__setBlendMode(a.__worldBlendMode);
                  d.__pushMaskObject(a);
                  var h = d.context;
                  d.setTransform(a.__renderTransform, h);
                  var k = a.opaqueBackground;
                  h.fillStyle =
                    'rgb(' +
                    ((k >>> 16) & 255) +
                    ',' +
                    ((k >>> 8) & 255) +
                    ',' +
                    (k & 255) +
                    ')';
                  h.fillRect(0, 0, a.get_width(), a.get_height());
                  d.__popMaskObject(a);
                }
                if (
                  null != a.__graphics &&
                  a.__renderable &&
                  ((f = d.__getAlpha(a.__worldAlpha)), !(0 >= f))
                ) {
                  var g = a.__graphics;
                  if (null != g) {
                    z.render(g, d);
                    var p = g.__width,
                      q = g.__height;
                    k = g.__canvas;
                    if (null != k && g.__visible && 1 <= p && 1 <= q) {
                      var u = g.__worldTransform;
                      h = d.context;
                      var m = a.__scrollRect,
                        r = a.__worldScale9Grid;
                      if (null == m || (0 < m.width && 0 < m.height)) {
                        d.__setBlendMode(a.__worldBlendMode);
                        d.__pushMaskObject(a);
                        h.globalAlpha = f;
                        if (null != r && 0 == u.b && 0 == u.c) {
                          var l = d.__pixelRatio;
                          f = ua.__pool.get();
                          f.translate(u.tx, u.ty);
                          d.setTransform(f, h);
                          ua.__pool.release(f);
                          f = g.__bounds;
                          var x = g.__renderTransform.a / g.__bitmapScale,
                            D = g.__renderTransform.d / g.__bitmapScale,
                            w = x * u.a,
                            J = D * u.d;
                          u = Math.max(1, Math.round(r.x * x));
                          g = Math.round(r.y * D);
                          m = Math.max(
                            1,
                            Math.round((f.get_right() - r.get_right()) * x),
                          );
                          var y = Math.round(
                            (f.get_bottom() - r.get_bottom()) * D,
                          );
                          x = Math.round(r.width * x);
                          r = Math.round(r.height * D);
                          D = Math.round(u / l);
                          var C = Math.round(g / l),
                            t = Math.round(m / l);
                          l = Math.round(y / l);
                          w = f.width * w - D - t;
                          f = f.height * J - C - l;
                          d.applySmoothing(h, !1);
                          0 != x && 0 != r
                            ? (h.drawImage(k, 0, 0, u, g, 0, 0, D, C),
                              h.drawImage(k, u, 0, x, g, D, 0, w, C),
                              h.drawImage(k, u + x, 0, m, g, D + w, 0, t, C),
                              h.drawImage(k, 0, g, u, r, 0, C, D, f),
                              h.drawImage(k, u, g, x, r, D, C, w, f),
                              h.drawImage(k, u + x, g, m, r, D + w, C, t, f),
                              h.drawImage(k, 0, g + r, u, y, 0, C + f, D, l),
                              h.drawImage(k, u, g + r, x, y, D, C + f, w, l),
                              h.drawImage(
                                k,
                                u + x,
                                g + r,
                                m,
                                y,
                                D + w,
                                C + f,
                                t,
                                l,
                              ))
                            : 0 == x && 0 != r
                              ? ((q = D + w + t),
                                h.drawImage(k, 0, 0, p, g, 0, 0, q, C),
                                h.drawImage(k, 0, g, p, r, 0, C, q, f),
                                h.drawImage(k, 0, g + r, p, y, 0, C + f, q, l))
                              : 0 == r &&
                                0 != x &&
                                ((p = C + f + l),
                                h.drawImage(k, 0, 0, u, q, 0, 0, D, p),
                                h.drawImage(k, u, 0, x, q, D, 0, w, p),
                                h.drawImage(k, u + x, 0, m, q, D + w, 0, t, p));
                        } else
                          (d.setTransform(u, h), h.drawImage(k, 0, 0, p, q));
                        d.__popMaskObject(a);
                      }
                    }
                  }
                }
              }
            }
            d = b.__canvasRenderer;
            a.__renderable &&
              0 != a.__group.__tiles.length &&
              ((f = d.__getAlpha(a.__worldAlpha)),
              0 >= f ||
                ((h = d.context),
                d.__setBlendMode(a.__worldBlendMode),
                d.__pushMaskObject(a),
                (k = na.__pool.get()),
                k.setTo(0, 0, a.__width, a.__height),
                d.__pushMaskRect(k, a.__renderTransform),
                (d.__allowSmoothing && a.smoothing) ||
                  (h.imageSmoothingEnabled = !1),
                Ze.renderTileContainer(
                  a.__group,
                  d,
                  a.__renderTransform,
                  a.__tileset,
                  d.__allowSmoothing && a.smoothing,
                  a.tileAlphaEnabled,
                  f,
                  a.tileBlendModeEnabled,
                  a.__worldBlendMode,
                  null,
                  null,
                  k,
                ),
                (d.__allowSmoothing && a.smoothing) ||
                  (h.imageSmoothingEnabled = !0),
                d.__popMaskRect(),
                d.__popMaskObject(a),
                na.__pool.release(k)));
            a.__renderTransform = c;
            b.__canvasRenderer.context = null;
            b.__updateClip(a);
            b.__applyStyle(a, !0, !1, !0);
          } else vf.clear(a, b);
        else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    O.startsWith(d, 'data:') || O.startsWith(d, 'blob:')
                      ? Zb.renderCanvas(c, b)
                      : Zb.renderImage(c, b))
                  : Zb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Zb.clear(c, b));
        b.__renderEvent(a);
      };
      vf.renderDrawableClear = function (a, b) {
        vf.clear(a, b);
      };
      var $e = function () {};
      g['openfl.display._internal.DOMVideo'] = $e;
      $e.__name__ = 'openfl.display._internal.DOMVideo';
      $e.clear = function (a, b) {
        rd.clear(a, b);
        a.__active &&
          (b.element.removeChild(a.__stream.__video), (a.__active = !1));
      };
      $e.render = function (a, b) {
        null != a.stage &&
        null != a.__stream &&
        a.__worldVisible &&
        a.__renderable
          ? (a.__active ||
              (b.__initializeElement(a, a.__stream.__video),
              (a.__active = !0),
              (a.__dirty = !0)),
            a.__dirty &&
              ((a.__stream.__video.width = a.__width | 0),
              (a.__stream.__video.height = a.__height | 0),
              (a.__dirty = !1)),
            b.__updateClip(a),
            b.__applyStyle(a, !0, !0, !0))
          : $e.clear(a, b);
      };
      $e.renderDrawable = function (a, b) {
        $e.render(a, b);
        b.__renderEvent(a);
      };
      $e.renderDrawableClear = function (a, b) {
        rd.renderDrawableClear(a, b);
      };
      var ue = function (a) {
        this.buffer = a;
        this.bPos =
          this.iPos =
          this.fPos =
          this.oPos =
          this.ffPos =
          this.iiPos =
          this.tsPos =
            0;
        this.prev = da.UNKNOWN;
      };
      g['openfl.display._internal.DrawCommandReader'] = ue;
      ue.__name__ = 'openfl.display._internal.DrawCommandReader';
      ue.prototype = {
        destroy: function () {
          this.buffer = null;
          this.reset();
        },
        reset: function () {
          this.bPos =
            this.iPos =
            this.fPos =
            this.oPos =
            this.ffPos =
            this.iiPos =
            this.tsPos =
              0;
        },
        __class__: ue,
      };
      var da = (y['openfl.display._internal.DrawCommandType'] = {
        __ename__: 'openfl.display._internal.DrawCommandType',
        __constructs__: null,
        BEGIN_BITMAP_FILL: {
          _hx_name: 'BEGIN_BITMAP_FILL',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        BEGIN_FILL: {
          _hx_name: 'BEGIN_FILL',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        BEGIN_GRADIENT_FILL: {
          _hx_name: 'BEGIN_GRADIENT_FILL',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        BEGIN_SHADER_FILL: {
          _hx_name: 'BEGIN_SHADER_FILL',
          _hx_index: 3,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        CUBIC_CURVE_TO: {
          _hx_name: 'CUBIC_CURVE_TO',
          _hx_index: 4,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        CURVE_TO: {
          _hx_name: 'CURVE_TO',
          _hx_index: 5,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_CIRCLE: {
          _hx_name: 'DRAW_CIRCLE',
          _hx_index: 6,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_ELLIPSE: {
          _hx_name: 'DRAW_ELLIPSE',
          _hx_index: 7,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_QUADS: {
          _hx_name: 'DRAW_QUADS',
          _hx_index: 8,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_RECT: {
          _hx_name: 'DRAW_RECT',
          _hx_index: 9,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_ROUND_RECT: {
          _hx_name: 'DRAW_ROUND_RECT',
          _hx_index: 10,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_TILES: {
          _hx_name: 'DRAW_TILES',
          _hx_index: 11,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_TRIANGLES: {
          _hx_name: 'DRAW_TRIANGLES',
          _hx_index: 12,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        END_FILL: {
          _hx_name: 'END_FILL',
          _hx_index: 13,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_BITMAP_STYLE: {
          _hx_name: 'LINE_BITMAP_STYLE',
          _hx_index: 14,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_GRADIENT_STYLE: {
          _hx_name: 'LINE_GRADIENT_STYLE',
          _hx_index: 15,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_STYLE: {
          _hx_name: 'LINE_STYLE',
          _hx_index: 16,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_TO: {
          _hx_name: 'LINE_TO',
          _hx_index: 17,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        MOVE_TO: {
          _hx_name: 'MOVE_TO',
          _hx_index: 18,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        OVERRIDE_BLEND_MODE: {
          _hx_name: 'OVERRIDE_BLEND_MODE',
          _hx_index: 19,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        OVERRIDE_MATRIX: {
          _hx_name: 'OVERRIDE_MATRIX',
          _hx_index: 20,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        WINDING_EVEN_ODD: {
          _hx_name: 'WINDING_EVEN_ODD',
          _hx_index: 21,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        WINDING_NON_ZERO: {
          _hx_name: 'WINDING_NON_ZERO',
          _hx_index: 22,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 23,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
      });
      da.__constructs__ = [
        da.BEGIN_BITMAP_FILL,
        da.BEGIN_FILL,
        da.BEGIN_GRADIENT_FILL,
        da.BEGIN_SHADER_FILL,
        da.CUBIC_CURVE_TO,
        da.CURVE_TO,
        da.DRAW_CIRCLE,
        da.DRAW_ELLIPSE,
        da.DRAW_QUADS,
        da.DRAW_RECT,
        da.DRAW_ROUND_RECT,
        da.DRAW_TILES,
        da.DRAW_TRIANGLES,
        da.END_FILL,
        da.LINE_BITMAP_STYLE,
        da.LINE_GRADIENT_STYLE,
        da.LINE_STYLE,
        da.LINE_TO,
        da.MOVE_TO,
        da.OVERRIDE_BLEND_MODE,
        da.OVERRIDE_MATRIX,
        da.WINDING_EVEN_ODD,
        da.WINDING_NON_ZERO,
        da.UNKNOWN,
      ];
      var ag = function (a, b, c, d, f, h, k) {
        null == k && (k = !1);
        null == h && (h = !1);
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = 5);
        null == a && (a = 0);
        this.wrap = a;
        this.filter = b;
        this.mipfilter = c;
        this.lodBias = d;
        this.ignoreSampler = f;
        this.centroid = h;
        this.textureAlpha = k;
      };
      g['openfl.display._internal.SamplerState'] = ag;
      ag.__name__ = 'openfl.display._internal.SamplerState';
      ag.prototype = {
        clone: function () {
          var a = new ag(
            this.wrap,
            this.filter,
            this.mipfilter,
            this.lodBias,
            this.ignoreSampler,
            this.centroid,
            this.textureAlpha,
          );
          a.mipmapGenerated = this.mipmapGenerated;
          return a;
        },
        copyFrom: function (a) {
          null == a ||
            a.ignoreSampler ||
            ((this.wrap = a.wrap),
            (this.filter = a.filter),
            (this.mipfilter = a.mipfilter),
            (this.lodBias = a.lodBias),
            (this.centroid = a.centroid),
            (this.textureAlpha = a.textureAlpha));
        },
        equals: function (a) {
          return null == a
            ? !1
            : this.wrap == a.wrap &&
                this.filter == a.filter &&
                this.mipfilter == a.mipfilter &&
                this.lodBias == a.lodBias
              ? this.textureAlpha == a.textureAlpha
              : !1;
        },
        __class__: ag,
      };
      var jj = function () {
        this.inputRefs = [];
        this.inputFilter = [];
        this.inputMipFilter = [];
        this.inputs = [];
        this.inputWrap = [];
        this.overrideIntNames = [];
        this.overrideIntValues = [];
        this.overrideFloatNames = [];
        this.overrideFloatValues = [];
        this.overrideBoolNames = [];
        this.overrideBoolValues = [];
        this.paramLengths = [];
        this.paramPositions = [];
        this.paramRefs_Bool = [];
        this.paramRefs_Float = [];
        this.paramRefs_Int = [];
        this.paramTypes = [];
      };
      g['openfl.display._internal.ShaderBuffer'] = jj;
      jj.__name__ = 'openfl.display._internal.ShaderBuffer';
      jj.prototype = {
        addBoolOverride: function (a, b) {
          this.overrideBoolNames[this.overrideBoolCount] = a;
          this.overrideBoolValues[this.overrideBoolCount] = b;
          this.overrideBoolCount++;
        },
        addFloatOverride: function (a, b) {
          this.overrideFloatNames[this.overrideFloatCount] = a;
          this.overrideFloatValues[this.overrideFloatCount] = b;
          this.overrideFloatCount++;
        },
        clearOverride: function () {
          this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
              0;
        },
        __class__: jj,
      };
      var ub = function (a, b, c) {
        this.driverInfo = 'OpenGL (Direct blitting)';
        this.backBufferHeight = this.backBufferWidth = 0;
        oa.call(this);
        this.__stage = a;
        this.__contextState = b;
        this.__stage3D = c;
        this.__context = a.window.context;
        this.gl = this.__context.webgl;
        null == this.__contextState && (this.__contextState = new Dh());
        this.__state = new Dh();
        var d;
        this.__vertexConstants = new Float32Array(512);
        this.__fragmentConstants = new Float32Array(512);
        var f = null;
        a = [1, 1, 1, 1];
        var h = (d = c = b = null);
        this.__positionScale = a =
          null != f
            ? new Float32Array(f)
            : null != a
              ? new Float32Array(a)
              : null != b
                ? new Float32Array(b.__array)
                : null != c
                  ? new Float32Array(c)
                  : null != d
                    ? null == h
                      ? new Float32Array(d, 0)
                      : new Float32Array(d, 0, h)
                    : null;
        this.__programs = new Pa();
        -1 == ub.__glMaxViewportDims &&
          (ub.__glMaxViewportDims = this.gl.getParameter(
            this.gl.MAX_VIEWPORT_DIMS,
          ));
        this.maxBackBufferHeight = this.maxBackBufferWidth =
          ub.__glMaxViewportDims;
        -1 == ub.__glMaxTextureMaxAnisotropy &&
          ((a = this.gl.getExtension('EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')),
          null != a
            ? ((ub.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT),
              (ub.__glMaxTextureMaxAnisotropy = this.gl.getParameter(
                a.MAX_TEXTURE_MAX_ANISOTROPY_EXT,
              )))
            : ((ub.__glTextureMaxAnisotropy = 0),
              (ub.__glMaxTextureMaxAnisotropy = 0)));
        -1 == ub.__glDepthStencil &&
          (ub.__glDepthStencil = this.gl.DEPTH_STENCIL);
        -1 == ub.__glMemoryTotalAvailable &&
          ((a = this.gl.getExtension('NVX_gpu_memory_info')),
          null != a &&
            ((ub.__glMemoryTotalAvailable =
              a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX),
            (ub.__glMemoryCurrentAvailable =
              a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)));
        null == ub.__driverInfo &&
          ((a = this.gl.getParameter(this.gl.VENDOR)),
          (b = this.gl.getParameter(this.gl.VERSION)),
          (c = this.gl.getParameter(this.gl.RENDERER)),
          (d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION)),
          (ub.__driverInfo =
            'OpenGL Vendor=' +
            a +
            ' Version=' +
            b +
            ' Renderer=' +
            c +
            ' GLSL=' +
            d));
        this.driverInfo = ub.__driverInfo;
        this.__quadIndexBufferElements = 16383;
        f = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
        h = d = c = b = a = null;
        a =
          null != f
            ? new Uint16Array(f)
            : null != a
              ? new Uint16Array(a)
              : null != b
                ? new Uint16Array(b.__array)
                : null != c
                  ? new Uint16Array(c)
                  : null != d
                    ? null == h
                      ? new Uint16Array(d, 0)
                      : new Uint16Array(d, 0, h)
                    : null;
        d = c = b = 0;
        for (h = this.__quadIndexBufferElements; d < h; )
          (d++,
            (a[b] = c),
            (a[b + 1] = c + 1),
            (a[b + 2] = c + 2),
            (a[b + 3] = c + 2),
            (a[b + 4] = c + 1),
            (a[b + 5] = c + 3),
            (b += 6),
            (c += 4));
        this.__quadIndexBuffer = this.createIndexBuffer(
          this.__quadIndexBufferCount,
        );
        this.__quadIndexBuffer.uploadFromTypedArray(a);
      };
      g['openfl.display3D.Context3D'] = ub;
      ub.__name__ = 'openfl.display3D.Context3D';
      ub.__super__ = oa;
      ub.prototype = v(oa.prototype, {
        clear: function (a, b, c, d, f, h, k) {
          null == k && (k = 7);
          null == h && (h = 0);
          null == f && (f = 1);
          null == d && (d = 1);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          var g = 0;
          if (0 != (k & 1)) {
            null == this.__state.renderToTexture &&
              (this.__stage.context3D != this ||
                this.__stage.__renderer.__cleared ||
                (this.__stage.__renderer.__cleared = !0),
              (this.__cleared = !0));
            g |= this.gl.COLOR_BUFFER_BIT;
            if (
              1 != this.__contextState.colorMaskRed ||
              1 != this.__contextState.colorMaskGreen ||
              1 != this.__contextState.colorMaskBlue ||
              1 != this.__contextState.colorMaskAlpha
            )
              (this.gl.colorMask(!0, !0, !0, !0),
                (this.__contextState.colorMaskRed = !0),
                (this.__contextState.colorMaskGreen = !0),
                (this.__contextState.colorMaskBlue = !0),
                (this.__contextState.colorMaskAlpha = !0));
            this.gl.clearColor(a, b, c, d);
          }
          0 != (k & 2) &&
            ((g |= this.gl.DEPTH_BUFFER_BIT),
            1 != this.__contextState.depthMask &&
              (this.gl.depthMask(!0), (this.__contextState.depthMask = !0)),
            this.gl.clearDepth(f));
          0 != (k & 4) &&
            ((g |= this.gl.STENCIL_BUFFER_BIT),
            255 != this.__contextState.stencilWriteMask &&
              (this.gl.stencilMask(255),
              (this.__contextState.stencilWriteMask = 255)),
            this.gl.clearStencil(h),
            (this.__contextState.stencilWriteMask = 255));
          0 != g && (this.__setGLScissorTest(!1), this.gl.clear(g));
        },
        configureBackBuffer: function (a, b, c, d, f, h) {
          null == h && (h = !1);
          null == f && (f = !1);
          null == d && (d = !0);
          f &&
            ((a = (a * this.__stage.window.__scale) | 0),
            (b = (b * this.__stage.window.__scale) | 0));
          if (null == this.__stage3D)
            ((this.backBufferWidth = a),
              (this.backBufferHeight = b),
              (this.__backBufferAntiAlias = c),
              (this.__state.backBufferEnableDepthAndStencil = d),
              (this.__backBufferWantsBestResolution = f),
              (this.__backBufferWantsBestResolutionOnBrowserZoom = h));
          else {
            if (
              null == this.__backBufferTexture ||
              this.backBufferWidth != a ||
              this.backBufferHeight != b
            ) {
              null != this.__backBufferTexture &&
                this.__backBufferTexture.dispose();
              null != this.__frontBufferTexture &&
                this.__frontBufferTexture.dispose();
              this.__backBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              this.__frontBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              null == this.__stage3D.__vertexBuffer &&
                (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
              var k = f ? a : (a * this.__stage.window.__scale) | 0,
                g = f ? b : (b * this.__stage.window.__scale) | 0;
              k = la.toFloatVector(null, null, null, [
                k,
                g,
                0,
                1,
                1,
                0,
                g,
                0,
                0,
                1,
                k,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
              ]);
              this.__stage3D.__vertexBuffer.uploadFromVector(k, 0, 20);
              null == this.__stage3D.__indexBuffer &&
                ((this.__stage3D.__indexBuffer = this.createIndexBuffer(6)),
                (k = la.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3])),
                this.__stage3D.__indexBuffer.uploadFromVector(k, 0, 6));
            }
            this.backBufferWidth = a;
            this.backBufferHeight = b;
            this.__backBufferAntiAlias = c;
            this.__state.backBufferEnableDepthAndStencil = d;
            this.__backBufferWantsBestResolution = f;
            this.__backBufferWantsBestResolutionOnBrowserZoom = h;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
            this.__frontBufferTexture.__getGLFramebuffer(d, c, 0);
          }
        },
        createIndexBuffer: function (a, b) {
          null == b && (b = 1);
          return new Kk(this, a, b);
        },
        createProgram: function (a) {
          null == a && (a = 0);
          return new Lk(this, a);
        },
        createRectangleTexture: function (a, b, c, d) {
          return new Eh(this, a, b, Ol.toString(c), d);
        },
        createVertexBuffer: function (a, b, c) {
          null == c && (c = 1);
          return new Mk(this, a, b, Al.toString(c));
        },
        drawTriangles: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          c = -1 == c ? a.__numIndices : 3 * c;
          this.__bindGLElementArrayBuffer(a.__id);
          this.gl.drawElements(
            this.gl.TRIANGLES,
            c,
            this.gl.UNSIGNED_SHORT,
            2 * b,
          );
        },
        present: function () {
          this.setRenderToBackBuffer();
          if (null != this.__stage3D && null != this.__backBufferTexture) {
            this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
            var a = this.__backBufferTexture;
            this.__backBufferTexture = this.__frontBufferTexture;
            this.__frontBufferTexture = a;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(
                this.__state.backBufferEnableDepthAndStencil,
                this.__backBufferAntiAlias,
                0,
              );
            this.__cleared = !1;
          }
          this.__present = !0;
        },
        setBlendFactors: function (a, b) {
          this.setBlendFactorsSeparate(a, b, a, b);
        },
        setBlendFactorsSeparate: function (a, b, c, d) {
          this.__state.blendSourceRGBFactor = a;
          this.__state.blendDestinationRGBFactor = b;
          this.__state.blendSourceAlphaFactor = c;
          this.__state.blendDestinationAlphaFactor = d;
          this.__setGLBlendEquation(this.gl.FUNC_ADD);
        },
        setColorMask: function (a, b, c, d) {
          this.__state.colorMaskRed = a;
          this.__state.colorMaskGreen = b;
          this.__state.colorMaskBlue = c;
          this.__state.colorMaskAlpha = d;
        },
        setCulling: function (a) {
          this.__state.culling = a;
        },
        setDepthTest: function (a, b) {
          this.__state.depthMask = a;
          this.__state.depthCompareMode = b;
        },
        setProgram: function (a) {
          this.__state.program = a;
          this.__state.shader = null;
          if (null != a)
            for (var b = 0, c = a.__samplerStates.length; b < c; ) {
              var d = b++;
              null == this.__state.samplerStates[d]
                ? (this.__state.samplerStates[d] = a.__samplerStates[d].clone())
                : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d]);
            }
        },
        setProgramConstantsFromMatrix: function (a, b, c, d) {
          null == d && (d = !1);
          if (
            null != this.__state.program &&
            1 == this.__state.program.__format
          )
            (this.__flushGLProgram(),
              (a = new Float32Array(16)),
              (a[0] = c.rawData.get(0)),
              (a[1] = c.rawData.get(1)),
              (a[2] = c.rawData.get(2)),
              (a[3] = c.rawData.get(3)),
              (a[4] = c.rawData.get(4)),
              (a[5] = c.rawData.get(5)),
              (a[6] = c.rawData.get(6)),
              (a[7] = c.rawData.get(7)),
              (a[8] = c.rawData.get(8)),
              (a[9] = c.rawData.get(9)),
              (a[10] = c.rawData.get(10)),
              (a[11] = c.rawData.get(11)),
              (a[12] = c.rawData.get(12)),
              (a[13] = c.rawData.get(13)),
              (a[14] = c.rawData.get(14)),
              (a[15] = c.rawData.get(15)),
              Lc.uniformMatrix4fv(this.gl, b, d, a));
          else {
            var f = (a = 1 == a)
              ? this.__vertexConstants
              : this.__fragmentConstants;
            c = c.rawData;
            var h = 4 * b;
            d
              ? ((f[h++] = c.get(0)),
                (f[h++] = c.get(4)),
                (f[h++] = c.get(8)),
                (f[h++] = c.get(12)),
                (f[h++] = c.get(1)),
                (f[h++] = c.get(5)),
                (f[h++] = c.get(9)),
                (f[h++] = c.get(13)),
                (f[h++] = c.get(2)),
                (f[h++] = c.get(6)),
                (f[h++] = c.get(10)),
                (f[h++] = c.get(14)),
                (f[h++] = c.get(3)),
                (f[h++] = c.get(7)),
                (f[h++] = c.get(11)))
              : ((f[h++] = c.get(0)),
                (f[h++] = c.get(1)),
                (f[h++] = c.get(2)),
                (f[h++] = c.get(3)),
                (f[h++] = c.get(4)),
                (f[h++] = c.get(5)),
                (f[h++] = c.get(6)),
                (f[h++] = c.get(7)),
                (f[h++] = c.get(8)),
                (f[h++] = c.get(9)),
                (f[h++] = c.get(10)),
                (f[h++] = c.get(11)),
                (f[h++] = c.get(12)),
                (f[h++] = c.get(13)),
                (f[h++] = c.get(14)));
            f[h++] = c.get(15);
            null != this.__state.program &&
              this.__state.program.__markDirty(a, b, 4);
          }
        },
        setRenderToBackBuffer: function () {
          this.__state.renderToTexture = null;
        },
        setRenderToTexture: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          this.__state.renderToTexture = a;
          this.__state.renderToTextureDepthStencil = b;
          this.__state.renderToTextureAntiAlias = c;
          this.__state.renderToTextureSurfaceSelector = d;
        },
        setSamplerStateAt: function (a, b, c, d) {
          null == this.__state.samplerStates[a] &&
            (this.__state.samplerStates[a] = new ag());
          a = this.__state.samplerStates[a];
          a.wrap = b;
          a.filter = c;
          a.mipfilter = d;
        },
        setScissorRectangle: function (a) {
          null != a
            ? ((this.__state.scissorEnabled = !0),
              this.__state.scissorRectangle.copyFrom(a))
            : (this.__state.scissorEnabled = !1);
        },
        setStencilActions: function (a, b, c, d, f) {
          null == f && (f = 5);
          null == d && (d = 5);
          null == c && (c = 5);
          null == b && (b = 0);
          null == a && (a = 2);
          this.__state.stencilTriangleFace = a;
          this.__state.stencilCompareMode = b;
          this.__state.stencilPass = c;
          this.__state.stencilDepthFail = d;
          this.__state.stencilFail = f;
        },
        setStencilReferenceValue: function (a, b, c) {
          null == c && (c = 255);
          null == b && (b = 255);
          this.__state.stencilReferenceValue = a;
          this.__state.stencilReadMask = b;
          this.__state.stencilWriteMask = c;
        },
        setTextureAt: function (a, b) {
          this.__state.textures[a] = b;
        },
        setVertexBufferAt: function (a, b, c, d) {
          null == d && (d = 4);
          null == c && (c = 0);
          if (!(0 > a))
            if (null == b)
              (this.gl.disableVertexAttribArray(a),
                this.__bindGLArrayBuffer(null));
            else
              switch (
                (this.__bindGLArrayBuffer(b.__id),
                this.gl.enableVertexAttribArray(a),
                (c *= 4),
                d)
              ) {
                case 0:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.UNSIGNED_BYTE,
                    !0,
                    b.__stride,
                    c,
                  );
                  break;
                case 1:
                  this.gl.vertexAttribPointer(
                    a,
                    1,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 2:
                  this.gl.vertexAttribPointer(
                    a,
                    2,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 3:
                  this.gl.vertexAttribPointer(
                    a,
                    3,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 4:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                default:
                  throw new Wc();
              }
        },
        __bindGLArrayBuffer: function (a) {
          this.__contextState.__currentGLArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a),
            (this.__contextState.__currentGLArrayBuffer = a));
        },
        __bindGLElementArrayBuffer: function (a) {
          this.__contextState.__currentGLElementArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a),
            (this.__contextState.__currentGLElementArrayBuffer = a));
        },
        __bindGLFramebuffer: function (a) {
          this.__contextState.__currentGLFramebuffer != a &&
            (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a),
            (this.__contextState.__currentGLFramebuffer = a));
        },
        __bindGLTexture2D: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_2D, a);
          this.__contextState.__currentGLTexture2D = a;
        },
        __bindGLTextureCubeMap: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
          this.__contextState.__currentGLTextureCubeMap = a;
        },
        __dispose: function () {
          this.driverInfo += ' (Disposed)';
          null != this.__stage3D &&
            ((this.__stage3D.__indexBuffer = null),
            (this.__stage3D.__vertexBuffer = null),
            (this.__stage3D = this.__stage3D.context3D = null));
          this.__positionScale =
            this.__frontBufferTexture =
            this.__fragmentConstants =
            this.__renderStage3DProgram =
            this.__context =
            this.__backBufferTexture =
              null;
          this.__present = !1;
          this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null;
        },
        __drawTriangles: function (a, b) {
          null == a && (a = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          this.gl.drawArrays(this.gl.TRIANGLES, a, b);
        },
        __flushGL: function () {
          this.__flushGLProgram();
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          this.__flushGLBlend();
          if (
            this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
            this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
            this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
            this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
          )
            (this.gl.colorMask(
              this.__state.colorMaskRed,
              this.__state.colorMaskGreen,
              this.__state.colorMaskBlue,
              this.__state.colorMaskAlpha,
            ),
              (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
              (this.__contextState.colorMaskGreen =
                this.__state.colorMaskGreen),
              (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
              (this.__contextState.colorMaskAlpha =
                this.__state.colorMaskAlpha));
          this.__flushGLCulling();
          this.__flushGLDepth();
          this.__flushGLScissor();
          this.__flushGLStencil();
          this.__flushGLTextures();
        },
        __flushGLBlend: function () {
          if (
            this.__contextState.blendDestinationRGBFactor !=
              this.__state.blendDestinationRGBFactor ||
            this.__contextState.blendSourceRGBFactor !=
              this.__state.blendSourceRGBFactor ||
            this.__contextState.blendDestinationAlphaFactor !=
              this.__state.blendDestinationAlphaFactor ||
            this.__contextState.blendSourceAlphaFactor !=
              this.__state.blendSourceAlphaFactor
          )
            (this.__setGLBlend(!0),
              this.__state.blendDestinationRGBFactor ==
                this.__state.blendDestinationAlphaFactor &&
              this.__state.blendSourceRGBFactor ==
                this.__state.blendSourceAlphaFactor
                ? this.gl.blendFunc(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                  )
                : this.gl.blendFuncSeparate(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                    this.__getGLBlend(this.__state.blendSourceAlphaFactor),
                    this.__getGLBlend(this.__state.blendDestinationAlphaFactor),
                  ),
              (this.__contextState.blendDestinationRGBFactor =
                this.__state.blendDestinationRGBFactor),
              (this.__contextState.blendSourceRGBFactor =
                this.__state.blendSourceRGBFactor),
              (this.__contextState.blendDestinationAlphaFactor =
                this.__state.blendDestinationAlphaFactor),
              (this.__contextState.blendSourceAlphaFactor =
                this.__state.blendSourceAlphaFactor));
        },
        __flushGLCulling: function () {
          if (this.__contextState.culling != this.__state.culling) {
            if (3 == this.__state.culling) this.__setGLCullFace(!1);
            else
              switch ((this.__setGLCullFace(!0), this.__state.culling)) {
                case 0:
                  this.gl.cullFace(this.gl.BACK);
                  break;
                case 1:
                  this.gl.cullFace(this.gl.FRONT);
                  break;
                case 2:
                  this.gl.cullFace(this.gl.FRONT_AND_BACK);
                  break;
                case 3:
                  break;
                default:
                  throw new Wc();
              }
            this.__contextState.culling = this.__state.culling;
          }
        },
        __flushGLDepth: function () {
          var a =
            this.__state.depthMask &&
            (null != this.__state.renderToTexture
              ? this.__state.renderToTextureDepthStencil
              : this.__state.backBufferEnableDepthAndStencil);
          this.__contextState.depthMask != a &&
            (this.gl.depthMask(a), (this.__contextState.depthMask = a));
          if (
            this.__contextState.depthCompareMode !=
            this.__state.depthCompareMode
          ) {
            switch (this.__state.depthCompareMode) {
              case 0:
                this.gl.depthFunc(this.gl.ALWAYS);
                break;
              case 1:
                this.gl.depthFunc(this.gl.EQUAL);
                break;
              case 2:
                this.gl.depthFunc(this.gl.GREATER);
                break;
              case 3:
                this.gl.depthFunc(this.gl.GEQUAL);
                break;
              case 4:
                this.gl.depthFunc(this.gl.LESS);
                break;
              case 5:
                this.gl.depthFunc(this.gl.LEQUAL);
                break;
              case 6:
                this.gl.depthFunc(this.gl.NEVER);
                break;
              case 7:
                this.gl.depthFunc(this.gl.NOTEQUAL);
                break;
              default:
                throw new Wc();
            }
            this.__contextState.depthCompareMode =
              this.__state.depthCompareMode;
          }
        },
        __flushGLFramebuffer: function () {
          if (null != this.__state.renderToTexture) {
            if (
              this.__contextState.renderToTexture !=
                this.__state.renderToTexture ||
              this.__contextState.renderToTextureSurfaceSelector !=
                this.__state.renderToTextureSurfaceSelector
            ) {
              var a = this.__state.renderToTexture.__getGLFramebuffer(
                this.__state.renderToTextureDepthStencil,
                this.__state.renderToTextureAntiAlias,
                this.__state.renderToTextureSurfaceSelector,
              );
              this.__bindGLFramebuffer(a);
              this.__contextState.renderToTexture =
                this.__state.renderToTexture;
              this.__contextState.renderToTextureAntiAlias =
                this.__state.renderToTextureAntiAlias;
              this.__contextState.renderToTextureDepthStencil =
                this.__state.renderToTextureDepthStencil;
              this.__contextState.renderToTextureSurfaceSelector =
                this.__state.renderToTextureSurfaceSelector;
            }
            this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
            this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
            this.__setGLFrontFace(!0);
          } else {
            if (
              null == this.__stage &&
              0 == this.backBufferWidth &&
              0 == this.backBufferHeight
            )
              throw new Vb('Context3D backbuffer has not been configured');
            if (
              null != this.__contextState.renderToTexture ||
              this.__contextState.__currentGLFramebuffer !=
                this.__state.__primaryGLFramebuffer ||
              this.__contextState.backBufferEnableDepthAndStencil !=
                this.__state.backBufferEnableDepthAndStencil
            )
              (this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer),
                (this.__contextState.renderToTexture = null),
                (this.__contextState.backBufferEnableDepthAndStencil =
                  this.__state.backBufferEnableDepthAndStencil));
            this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLStencilTest(
              this.__state.backBufferEnableDepthAndStencil,
            );
            this.__setGLFrontFace(this.__stage.context3D != this);
          }
        },
        __flushGLProgram: function () {
          var a = this.__state.shader,
            b = this.__state.program;
          this.__contextState.shader != a &&
            (null != this.__contextState.shader &&
              this.__contextState.shader.__disable(),
            null != a && a.__enable(),
            (this.__contextState.shader = a));
          this.__contextState.program != b &&
            (null != this.__contextState.program &&
              this.__contextState.program.__disable(),
            null != b && b.__enable(),
            (this.__contextState.program = b));
          null != b &&
            0 == b.__format &&
            ((this.__positionScale[1] =
              this.__stage.context3D == this &&
              null == this.__state.renderToTexture
                ? 1
                : -1),
            b.__setPositionScale(this.__positionScale));
        },
        __flushGLScissor: function () {
          if (this.__state.scissorEnabled) {
            this.__setGLScissorTest(!0);
            this.__contextState.scissorEnabled = !0;
            var a = this.__state.scissorRectangle.x | 0,
              b = this.__state.scissorRectangle.y | 0,
              c = this.__state.scissorRectangle.width | 0,
              d = this.__state.scissorRectangle.height | 0;
            this.__backBufferWantsBestResolution &&
              ((a =
                (this.__state.scissorRectangle.x *
                  this.__stage.window.__scale) |
                0),
              (b =
                (this.__state.scissorRectangle.y *
                  this.__stage.window.__scale) |
                0),
              (c =
                (this.__state.scissorRectangle.width *
                  this.__stage.window.__scale) |
                0),
              (d =
                (this.__state.scissorRectangle.height *
                  this.__stage.window.__scale) |
                0));
            null == this.__state.renderToTexture &&
              null == this.__stage3D &&
              (b =
                ((this.__stage.window.__height * this.__stage.window.__scale) |
                  0) -
                d -
                b);
            if (
              this.__contextState.scissorRectangle.x != a ||
              this.__contextState.scissorRectangle.y != b ||
              this.__contextState.scissorRectangle.width != c ||
              this.__contextState.scissorRectangle.height != d
            )
              (this.gl.scissor(a, b, c, d),
                this.__contextState.scissorRectangle.setTo(a, b, c, d));
          } else
            this.__contextState.scissorEnabled != this.__state.scissorEnabled &&
              (this.__setGLScissorTest(!1),
              (this.__contextState.scissorEnabled = !1));
        },
        __flushGLStencil: function () {
          if (
            this.__contextState.stencilTriangleFace !=
              this.__state.stencilTriangleFace ||
            this.__contextState.stencilPass != this.__state.stencilPass ||
            this.__contextState.stencilDepthFail !=
              this.__state.stencilDepthFail ||
            this.__contextState.stencilFail != this.__state.stencilFail
          )
            (this.gl.stencilOpSeparate(
              this.__getGLTriangleFace(this.__state.stencilTriangleFace),
              this.__getGLStencilAction(this.__state.stencilFail),
              this.__getGLStencilAction(this.__state.stencilDepthFail),
              this.__getGLStencilAction(this.__state.stencilPass),
            ),
              (this.__contextState.stencilTriangleFace =
                this.__state.stencilTriangleFace),
              (this.__contextState.stencilPass = this.__state.stencilPass),
              (this.__contextState.stencilDepthFail =
                this.__state.stencilDepthFail),
              (this.__contextState.stencilFail = this.__state.stencilFail));
          this.__contextState.stencilWriteMask !=
            this.__state.stencilWriteMask &&
            (this.gl.stencilMask(this.__state.stencilWriteMask),
            (this.__contextState.stencilWriteMask =
              this.__state.stencilWriteMask));
          if (
            this.__contextState.stencilCompareMode !=
              this.__state.stencilCompareMode ||
            this.__contextState.stencilReferenceValue !=
              this.__state.stencilReferenceValue ||
            this.__contextState.stencilReadMask != this.__state.stencilReadMask
          )
            (this.gl.stencilFunc(
              this.__getGLCompareMode(this.__state.stencilCompareMode),
              this.__state.stencilReferenceValue,
              this.__state.stencilReadMask,
            ),
              (this.__contextState.stencilCompareMode =
                this.__state.stencilCompareMode),
              (this.__contextState.stencilReferenceValue =
                this.__state.stencilReferenceValue),
              (this.__contextState.stencilReadMask =
                this.__state.stencilReadMask));
        },
        __flushGLTextures: function () {
          for (
            var a = 0, b, c, d = 0, f = this.__state.textures.length;
            d < f;

          ) {
            var h = d++;
            b = this.__state.textures[h];
            c = this.__state.samplerStates[h];
            null == c &&
              ((this.__state.samplerStates[h] = new ag()),
              (c = this.__state.samplerStates[h]));
            this.gl.activeTexture(this.gl.TEXTURE0 + a);
            null != b
              ? (b.__textureTarget == this.gl.TEXTURE_2D
                  ? this.__bindGLTexture2D(b.__getTexture())
                  : this.__bindGLTextureCubeMap(b.__getTexture()),
                (this.__contextState.textures[h] = b),
                b.__setSamplerState(c))
              : this.__bindGLTexture2D(null);
            null != this.__state.program &&
              0 == this.__state.program.__format &&
              c.textureAlpha &&
              (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4),
              null != b && null != b.__alphaTexture
                ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D
                    ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture())
                    : this.__bindGLTextureCubeMap(
                        b.__alphaTexture.__getTexture(),
                      ),
                  b.__alphaTexture.__setSamplerState(c),
                  this.gl.uniform1i(
                    this.__state.program.__agalAlphaSamplerEnabled[a].location,
                    1,
                  ))
                : (this.__bindGLTexture2D(null),
                  null != this.__state.program.__agalAlphaSamplerEnabled[a] &&
                    this.gl.uniform1i(
                      this.__state.program.__agalAlphaSamplerEnabled[a]
                        .location,
                      0,
                    )));
            ++a;
          }
        },
        __flushGLViewport: function () {
          if (null == this.__state.renderToTexture)
            if (this.__stage.context3D == this) {
              var a = this.backBufferWidth,
                b = this.backBufferHeight;
              null != this.__stage3D ||
                this.__backBufferWantsBestResolution ||
                ((a = (this.backBufferWidth * this.__stage.window.__scale) | 0),
                (b =
                  (this.backBufferHeight * this.__stage.window.__scale) | 0));
              var c = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                d =
                  (this.__stage.window.__height * this.__stage.window.__scale -
                    b -
                    (null == this.__stage3D ? 0 : this.__stage3D.get_y())) |
                  0;
              this.gl.viewport(c, d, a, b);
            } else
              this.gl.viewport(
                0,
                0,
                this.backBufferWidth,
                this.backBufferHeight,
              );
          else
            ((b = a = 0),
              this.__state.renderToTexture instanceof yj
                ? ((b = this.__state.renderToTexture),
                  (a = b.__width),
                  (b = b.__height))
                : this.__state.renderToTexture instanceof Eh
                  ? ((b = this.__state.renderToTexture),
                    (a = b.__width),
                    (b = b.__height))
                  : this.__state.renderToTexture instanceof zj &&
                    ((b = this.__state.renderToTexture), (b = a = b.__size)),
              this.gl.viewport(0, 0, a, b));
        },
        __getGLBlend: function (a) {
          switch (a) {
            case 0:
              return this.gl.DST_ALPHA;
            case 1:
              return this.gl.DST_COLOR;
            case 2:
              return this.gl.ONE;
            case 3:
              return this.gl.ONE_MINUS_DST_ALPHA;
            case 4:
              return this.gl.ONE_MINUS_DST_COLOR;
            case 5:
              return this.gl.ONE_MINUS_SRC_ALPHA;
            case 6:
              return this.gl.ONE_MINUS_SRC_COLOR;
            case 7:
              return this.gl.SRC_ALPHA;
            case 8:
              return this.gl.SRC_COLOR;
            case 9:
              return this.gl.ZERO;
            default:
              throw new Wc();
          }
        },
        __getGLCompareMode: function (a) {
          switch (a) {
            case 0:
              return this.gl.ALWAYS;
            case 1:
              return this.gl.EQUAL;
            case 2:
              return this.gl.GREATER;
            case 3:
              return this.gl.GEQUAL;
            case 4:
              return this.gl.LESS;
            case 5:
              return this.gl.LEQUAL;
            case 6:
              return this.gl.NEVER;
            case 7:
              return this.gl.NOTEQUAL;
            default:
              return this.gl.EQUAL;
          }
        },
        __getGLStencilAction: function (a) {
          switch (a) {
            case 0:
              return this.gl.DECR;
            case 1:
              return this.gl.DECR_WRAP;
            case 2:
              return this.gl.INCR;
            case 3:
              return this.gl.INCR_WRAP;
            case 4:
              return this.gl.INVERT;
            case 5:
              return this.gl.KEEP;
            case 6:
              return this.gl.REPLACE;
            case 7:
              return this.gl.ZERO;
            default:
              return this.gl.KEEP;
          }
        },
        __getGLTriangleFace: function (a) {
          switch (a) {
            case 0:
              return this.gl.BACK;
            case 1:
              return this.gl.FRONT;
            case 2:
              return this.gl.FRONT_AND_BACK;
            case 3:
              return this.gl.NONE;
            default:
              return this.gl.FRONT_AND_BACK;
          }
        },
        __renderStage3D: function (a) {
          var b = a.context3D;
          if (
            null != b &&
            b != this &&
            null != b.__frontBufferTexture &&
            a.visible &&
            0 < this.backBufferHeight &&
            0 < this.backBufferWidth
          ) {
            if (null == this.__renderStage3DProgram) {
              var c = new ma();
              c.assemble(Bl.toString(1), 'm44 op, va0, vc0\nmov v0, va1');
              var d = new ma();
              d.assemble(
                Bl.toString(0),
                'tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1',
              );
              this.__renderStage3DProgram = this.createProgram();
              this.__renderStage3DProgram.upload(c.agalcode, d.agalcode);
            }
            this.setProgram(this.__renderStage3DProgram);
            this.setBlendFactors(2, 9);
            this.setColorMask(!0, !0, !0, !0);
            this.setCulling(3);
            this.setDepthTest(!1, 0);
            this.setStencilActions();
            this.setStencilReferenceValue(0, 0, 0);
            this.setScissorRectangle(null);
            this.setTextureAt(0, b.__frontBufferTexture);
            this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
            this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
            this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
            this.drawTriangles(a.__indexBuffer);
            this.__present = !0;
          }
        },
        __setGLBlend: function (a) {
          this.__contextState.__enableGLBlend != a &&
            (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND),
            (this.__contextState.__enableGLBlend = a));
        },
        __setGLBlendEquation: function (a) {
          this.__contextState.__glBlendEquation != a &&
            (this.gl.blendEquation(a),
            (this.__contextState.__glBlendEquation = a));
        },
        __setGLCullFace: function (a) {
          this.__contextState.__enableGLCullFace != a &&
            (a
              ? this.gl.enable(this.gl.CULL_FACE)
              : this.gl.disable(this.gl.CULL_FACE),
            (this.__contextState.__enableGLCullFace = a));
        },
        __setGLDepthTest: function (a) {
          this.__contextState.__enableGLDepthTest != a &&
            (a
              ? this.gl.enable(this.gl.DEPTH_TEST)
              : this.gl.disable(this.gl.DEPTH_TEST),
            (this.__contextState.__enableGLDepthTest = a));
        },
        __setGLFrontFace: function (a) {
          this.__contextState.__frontFaceGLCCW != a &&
            (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW),
            (this.__contextState.__frontFaceGLCCW = a));
        },
        __setGLScissorTest: function (a) {
          this.__contextState.__enableGLScissorTest != a &&
            (a
              ? this.gl.enable(this.gl.SCISSOR_TEST)
              : this.gl.disable(this.gl.SCISSOR_TEST),
            (this.__contextState.__enableGLScissorTest = a));
        },
        __setGLStencilTest: function (a) {
          this.__contextState.__enableGLStencilTest != a &&
            (a
              ? this.gl.enable(this.gl.STENCIL_TEST)
              : this.gl.disable(this.gl.STENCIL_TEST),
            (this.__contextState.__enableGLStencilTest = a));
        },
        __class__: ub,
      });
      var Al = {
          fromString: function (a) {
            switch (a) {
              case 'dynamicDraw':
                return 0;
              case 'staticDraw':
                return 1;
              default:
                return null;
            }
          },
          toString: function (a) {
            switch (a) {
              case 0:
                return 'dynamicDraw';
              case 1:
                return 'staticDraw';
              default:
                return null;
            }
          },
        },
        Bl = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'fragment';
              case 1:
                return 'vertex';
              default:
                return null;
            }
          },
        },
        Ol = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bgrPacked565';
              case 1:
                return 'bgra';
              case 2:
                return 'bgraPacked4444';
              case 3:
                return 'compressed';
              case 4:
                return 'compressedAlpha';
              case 5:
                return 'rgbaHalfFloat';
              default:
                return null;
            }
          },
        },
        Kk = function (a, b, c) {
          this.__context = a;
          this.__numIndices = b;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
        };
      g['openfl.display3D.IndexBuffer3D'] = Kk;
      Kk.__name__ = 'openfl.display3D.IndexBuffer3D';
      Kk.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLElementArrayBuffer(this.__id),
            Lc.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            var d = b + c,
              f = this.__tempUInt16Array;
            if (
              null == this.__tempUInt16Array ||
              this.__tempUInt16Array.length < c
            )
              ((this.__tempUInt16Array = null != c ? new Uint16Array(c) : null),
                null != f && this.__tempUInt16Array.set(f));
            for (c = b; c < d; )
              ((f = c++), (this.__tempUInt16Array[f - b] = a.get(f)));
            this.uploadFromTypedArray(this.__tempUInt16Array);
          }
        },
        __class__: Kk,
      };
      var Lk = function (a, b) {
        this.__context = a;
        this.__format = b;
        0 == this.__format
          ? ((this.__agalSamplerUsageMask = 0),
            (this.__agalUniforms = new bb()),
            (this.__agalSamplerUniforms = new bb()),
            (this.__agalAlphaSamplerUniforms = new bb()),
            (this.__agalAlphaSamplerEnabled = []))
          : ((this.__glslAttribNames = []),
            (this.__glslAttribTypes = []),
            (this.__glslSamplerNames = []),
            (this.__glslUniformLocations = []),
            (this.__glslUniformNames = []),
            (this.__glslUniformTypes = []));
        this.__samplerStates = [];
      };
      g['openfl.display3D.Program3D'] = Lk;
      Lk.__name__ = 'openfl.display3D.Program3D';
      Lk.prototype = {
        upload: function (a, b) {
          if (0 == this.__format) {
            var c = [];
            a = bd.convertToGLSL(a, null);
            b = bd.convertToGLSL(b, c);
            5 == Ga.level &&
              (Ga.info(a, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 399,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }),
              Ga.info(b, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 400,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }));
            this.__deleteShaders();
            this.__uploadFromGLSL(a, b);
            this.__buildAGALUniformList();
            b = 0;
            for (a = c.length; b < a; ) {
              var d = b++;
              this.__samplerStates[d] = c[d];
            }
          }
        },
        __buildAGALUniformList: function () {
          if (1 != this.__format) {
            var a = this.__context.gl;
            this.__agalUniforms.clear();
            this.__agalSamplerUniforms.clear();
            this.__agalAlphaSamplerUniforms.clear();
            this.__agalAlphaSamplerEnabled = [];
            this.__agalSamplerUsageMask = 0;
            var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
            for (var c = new bb(), d = new bb(), f = 0; f < b; ) {
              var h = f++,
                k = a.getActiveUniform(this.__glProgram, h),
                g = k.name,
                p = k.size,
                q = k.type;
              k = new Aj(this.__context);
              k.name = g;
              k.size = p;
              k.type = q;
              k.location = a.getUniformLocation(this.__glProgram, k.name);
              g = k.name.indexOf('[');
              0 <= g && (k.name = k.name.substring(0, g));
              switch (k.type) {
                case 35674:
                  k.regCount = 2;
                  break;
                case 35675:
                  k.regCount = 3;
                  break;
                case 35676:
                  k.regCount = 4;
                  break;
                default:
                  k.regCount = 1;
              }
              k.regCount *= k.size;
              this.__agalUniforms.add(k);
              if ('vcPositionScale' == k.name) this.__agalPositionScale = k;
              else if (O.startsWith(k.name, 'vc'))
                ((k.regIndex = H.parseInt(k.name.substring(2))),
                  (k.regData = this.__context.__vertexConstants),
                  c.add(k));
              else if (O.startsWith(k.name, 'fc'))
                ((k.regIndex = H.parseInt(k.name.substring(2))),
                  (k.regData = this.__context.__fragmentConstants),
                  d.add(k));
              else if (
                O.startsWith(k.name, 'sampler') &&
                -1 == k.name.indexOf('alpha')
              )
                for (
                  k.regIndex = H.parseInt(k.name.substring(7)),
                    this.__agalSamplerUniforms.add(k),
                    g = 0,
                    p = k.regCount;
                  g < p;

                )
                  ((q = g++),
                    (this.__agalSamplerUsageMask |= 1 << (k.regIndex + q)));
              else
                O.startsWith(k.name, 'sampler') && O.endsWith(k.name, '_alpha')
                  ? ((g = k.name.indexOf('_') - 7),
                    (k.regIndex = H.parseInt(k.name.substring(7, 7 + g)) + 4),
                    this.__agalAlphaSamplerUniforms.add(k))
                  : O.startsWith(k.name, 'sampler') &&
                    O.endsWith(k.name, '_alphaEnabled') &&
                    ((k.regIndex = H.parseInt(k.name.substring(7))),
                    (this.__agalAlphaSamplerEnabled[k.regIndex] = k));
              5 == Ga.level &&
                Ga.verbose(
                  '' +
                    h +
                    ' name:' +
                    k.name +
                    ' type:' +
                    k.type +
                    ' size:' +
                    k.size +
                    ' location:' +
                    H.string(k.location),
                  {
                    fileName: 'openfl/display3D/Program3D.hx',
                    lineNumber: 577,
                    className: 'openfl.display3D.Program3D',
                    methodName: '__buildAGALUniformList',
                  },
                );
            }
            this.__agalVertexUniformMap = new Fh(F.array(c));
            this.__agalFragmentUniformMap = new Fh(F.array(d));
          }
        },
        __deleteShaders: function () {
          var a = this.__context.gl;
          null != this.__glProgram && (this.__glProgram = null);
          null != this.__glVertexShader &&
            (a.deleteShader(this.__glVertexShader),
            (this.__glVertexShader = null));
          null != this.__glFragmentShader &&
            (a.deleteShader(this.__glFragmentShader),
            (this.__glFragmentShader = null));
        },
        __disable: function () {},
        __enable: function () {
          var a = this.__context.gl;
          a.useProgram(this.__glProgram);
          if (0 == this.__format) {
            this.__agalVertexUniformMap.markAllDirty();
            this.__agalFragmentUniformMap.markAllDirty();
            for (var b = this.__agalSamplerUniforms.h; null != b; ) {
              var c = b.item;
              b = b.next;
              if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
              else throw new Wc('!!! TODO: uniform location on webgl');
            }
            for (b = this.__agalAlphaSamplerUniforms.h; null != b; )
              if (((c = b.item), (b = b.next), 1 == c.regCount))
                a.uniform1i(c.location, c.regIndex);
              else throw new Wc('!!! TODO: uniform location on webgl');
          }
        },
        __flush: function () {
          0 == this.__format &&
            (this.__agalVertexUniformMap.flush(),
            this.__agalFragmentUniformMap.flush());
        },
        __markDirty: function (a, b, c) {
          1 != this.__format &&
            (a
              ? this.__agalVertexUniformMap.markDirty(b, c)
              : this.__agalFragmentUniformMap.markDirty(b, c));
        },
        __setPositionScale: function (a) {
          1 != this.__format &&
            null != this.__agalPositionScale &&
            this.__context.gl.uniform4fv(this.__agalPositionScale.location, a);
        },
        __uploadFromGLSL: function (a, b) {
          var c = this.__context.gl;
          this.__glVertexSource = a;
          this.__glFragmentSource = b;
          this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
          c.shaderSource(this.__glVertexShader, a);
          c.compileShader(this.__glVertexShader);
          if (
            0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)
          ) {
            var d =
              'Error compiling vertex shader\n' +
              c.getShaderInfoLog(this.__glVertexShader);
            Ga.error(d + ('\n' + a), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 869,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            });
          }
          this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
          c.shaderSource(this.__glFragmentShader, b);
          c.compileShader(this.__glFragmentShader);
          0 ==
            c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) &&
            ((d =
              'Error compiling fragment shader\n' +
              c.getShaderInfoLog(this.__glFragmentShader)),
            Ga.error(d + ('\n' + b), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 881,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
          this.__glProgram = c.createProgram();
          if (0 == this.__format)
            for (b = 0; 16 > b; ) {
              var f = b++;
              d = 'va' + f;
              -1 != a.indexOf(' ' + d) &&
                c.bindAttribLocation(this.__glProgram, f, d);
            }
          else
            for (b = 0, a = this.__glslAttribNames; b < a.length; )
              if (
                ((d = a[b]),
                ++b,
                -1 < d.indexOf('Position') && O.startsWith(d, 'openfl_'))
              ) {
                c.bindAttribLocation(this.__glProgram, 0, d);
                break;
              }
          c.attachShader(this.__glProgram, this.__glVertexShader);
          c.attachShader(this.__glProgram, this.__glFragmentShader);
          c.linkProgram(this.__glProgram);
          0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) &&
            ((d =
              'Unable to initialize the shader program\n' +
              c.getProgramInfoLog(this.__glProgram)),
            Ga.error(d, {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 922,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
        },
        __class__: Lk,
      };
      var Aj = function (a) {
        this.context = a;
        this.isDirty = !0;
        this.regDataPointer = new Fk(null, 0);
      };
      g['openfl.display3D.Uniform'] = Aj;
      Aj.__name__ = 'openfl.display3D.Uniform';
      Aj.prototype = {
        flush: function () {
          var a = this.context.gl,
            b = 4 * this.regIndex;
          switch (this.type) {
            case 35664:
              Kl.uniform2fv(
                a,
                this.location,
                this.regData.subarray(b, b + 2 * this.regCount),
              );
              break;
            case 35665:
              var c = this.location;
              b = this.regData.subarray(b, b + 3 * this.regCount);
              var d = null;
              null != d ? a.uniform3fv(c, b, d, null) : a.uniform3fv(c, b);
              break;
            case 35666:
              c = this.location;
              b = this.regData.subarray(b, b + 4 * this.regCount);
              d = null;
              null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
              break;
            case 35674:
              Lc.uniformMatrix2fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 4 * this.size),
              );
              break;
            case 35675:
              Lc.uniformMatrix3fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 9 * this.size),
              );
              break;
            case 35676:
              Lc.uniformMatrix4fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 16 * this.size),
              );
              break;
            default:
              ((c = this.location),
                (b = this.regData.subarray(b, b + 4 * this.regCount)),
                (d = null),
                null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b));
          }
        },
        __class__: Aj,
      };
      var Fh = function (a) {
        this.__uniforms = a;
        this.__uniforms.sort(function (a, b) {
          return ya.compare(a.regIndex, b.regIndex);
        });
        var b = 0;
        a = 0;
        for (var c = this.__uniforms; a < c.length; ) {
          var d = c[a];
          ++a;
          d.regIndex + d.regCount > b && (b = d.regIndex + d.regCount);
        }
        this.__registerLookup = la.toObjectVector(null, b);
        a = 0;
        for (c = this.__uniforms; a < c.length; ) {
          d = c[a];
          ++a;
          b = 0;
          for (var f = d.regCount; b < f; ) {
            var h = b++;
            this.__registerLookup.set(d.regIndex + h, d);
          }
        }
        this.__anyDirty = this.__allDirty = !0;
      };
      g['openfl.display3D.UniformMap'] = Fh;
      Fh.__name__ = 'openfl.display3D.UniformMap';
      Fh.prototype = {
        flush: function () {
          if (this.__anyDirty) {
            for (var a = 0, b = this.__uniforms; a < b.length; ) {
              var c = b[a];
              ++a;
              if (this.__allDirty || c.isDirty) (c.flush(), (c.isDirty = !1));
            }
            this.__anyDirty = this.__allDirty = !1;
          }
        },
        markAllDirty: function () {
          this.__anyDirty = this.__allDirty = !0;
        },
        markDirty: function (a, b) {
          if (!this.__allDirty)
            for (
              b = a + b,
                b > this.__registerLookup.get_length() &&
                  (b = this.__registerLookup.get_length());
              a < b;

            ) {
              var c = this.__registerLookup.get(a);
              null != c
                ? ((this.__anyDirty = c.isDirty = !0),
                  (a = c.regIndex + c.regCount))
                : ++a;
            }
        },
        __class__: Fh,
      };
      var Mk = function (a, b, c, d) {
        this.__context = a;
        this.__numVertices = b;
        this.__vertexSize = c;
        a = this.__context.gl;
        this.__id = a.createBuffer();
        this.__stride = 4 * this.__vertexSize;
        this.__usage = 0 == Al.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
      };
      g['openfl.display3D.VertexBuffer3D'] = Mk;
      Mk.__name__ = 'openfl.display3D.VertexBuffer3D';
      Mk.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLArrayBuffer(this.__id),
            Lc.bufferData(b, b.ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            b *= this.__vertexSize;
            var d = c * this.__vertexSize;
            c = b + d;
            var f = this.__tempFloat32Array;
            if (
              null == this.__tempFloat32Array ||
              this.__tempFloat32Array.length < d
            )
              ((this.__tempFloat32Array =
                null != d ? new Float32Array(d) : null),
                null != f && this.__tempFloat32Array.set(f));
            for (d = b; d < c; )
              ((f = d++), (this.__tempFloat32Array[f - b] = a.get(f)));
            this.uploadFromTypedArray(
              hh.toArrayBufferView(this.__tempFloat32Array),
            );
          }
        },
        __class__: Mk,
      };
      var bd = function () {};
      g['openfl.display3D._internal.AGALConverter'] = bd;
      bd.__name__ = 'openfl.display3D._internal.AGALConverter';
      bd.prefixFromType = function (a, b) {
        switch (a) {
          case 0:
            return 'va';
          case 1:
            return b == Fe.VERTEX ? 'vc' : 'fc';
          case 2:
            return b == Fe.VERTEX ? 'vt' : 'ft';
          case 3:
            return 'output_';
          case 4:
            return 'v';
          case 5:
            return 'sampler';
          default:
            throw new Wc('Invalid data!');
        }
      };
      bd.readUInt64 = function (a) {
        var b = a.readInt();
        a = a.readInt();
        return new Da(a, b);
      };
      bd.convertToGLSL = function (a, b) {
        a.position = 0;
        a.__endian = 1;
        var c = a.readByte() & 255;
        if (176 == c) return a.readUTF();
        if (160 != c) throw new Wc('Magic value must be 0xA0, may not be AGAL');
        var d = a.readInt();
        if (1 != d) throw new Wc('Version must be 1');
        if (161 != (a.readByte() & 255))
          throw new Wc('Shader type ID must be 0xA1');
        c = 0 == (a.readByte() & 255) ? Fe.VERTEX : Fe.FRAGMENT;
        for (var f = new Bj(), h = ''; ; ) {
          d = a.position;
          if (!cb.gt(Td.get_length(a), d)) break;
          var k = a.readInt();
          d = a.readUnsignedInt();
          var g = bd.readUInt64(a),
            p = bd.readUInt64(a);
          d = Lg.parse(d, c);
          g = bg.parse(g, c, d.mask);
          var q = bg.parse(p, c, d.mask);
          h += '\t';
          switch (k) {
            case 0:
              h += H.string(d.toGLSL() + ' = ' + g.toGLSL() + '; // mov');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 1:
              h += H.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' + ' +
                  q.toGLSL() +
                  '; // add',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 2:
              h += H.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' - ' +
                  q.toGLSL() +
                  '; // sub',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 3:
              h += H.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' * ' +
                  q.toGLSL() +
                  '; // mul',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 4:
              h += H.string(
                d.toGLSL() +
                  ' = ' +
                  g.toGLSL() +
                  ' / ' +
                  q.toGLSL() +
                  '; // div',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 5:
              h =
                -1 < g.toGLSL().indexOf('.')
                  ? h +
                    H.string(d.toGLSL() + ' = 1.0 / ' + g.toGLSL() + '; // rcp')
                  : h +
                    H.string(
                      d.toGLSL() + ' = vec4(1) / ' + g.toGLSL() + '; // rcp',
                    );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 6:
              h += H.string(
                d.toGLSL() +
                  ' = min(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '); // min',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 7:
              h += H.string(
                d.toGLSL() +
                  ' = max(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '); // max',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 8:
              h += H.string(
                d.toGLSL() + ' = fract(' + g.toGLSL() + '); // frc',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 9:
              h += H.string(
                d.toGLSL() + ' = sqrt(' + g.toGLSL() + '); // sqrt',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 10:
              h += H.string(
                d.toGLSL() + ' = inversesqrt(' + g.toGLSL() + '); // rsq',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 11:
              h += H.string(
                d.toGLSL() +
                  ' = pow(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '); // pow',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 12:
              h += H.string(d.toGLSL() + ' = log2(' + g.toGLSL() + '); // log');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 13:
              h += H.string(d.toGLSL() + ' = exp2(' + g.toGLSL() + '); // exp');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 14:
              h += H.string(
                d.toGLSL() + ' = normalize(' + g.toGLSL() + '); // normalize',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 15:
              h += H.string(d.toGLSL() + ' = sin(' + g.toGLSL() + '); // sin');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 16:
              h += H.string(d.toGLSL() + ' = cos(' + g.toGLSL() + '); // cos');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 17:
              g.sourceMask = q.sourceMask = 7;
              h += H.string(
                d.toGLSL() +
                  ' = cross(vec3(' +
                  g.toGLSL() +
                  '), vec3(' +
                  q.toGLSL() +
                  ')); // crs',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 18:
              g.sourceMask = q.sourceMask = 7;
              h += H.string(
                d.toGLSL() +
                  ' = vec4(dot(vec3(' +
                  g.toGLSL() +
                  '), vec3(' +
                  q.toGLSL() +
                  ')))' +
                  d.getWriteMask() +
                  '; // dp3',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 19:
              g.sourceMask = q.sourceMask = 15;
              h += H.string(
                d.toGLSL() +
                  ' = vec4(dot(vec4(' +
                  g.toGLSL() +
                  '), vec4(' +
                  q.toGLSL() +
                  ')))' +
                  d.getWriteMask() +
                  '; // dp4',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 20:
              h += H.string(d.toGLSL() + ' = abs(' + g.toGLSL() + '); // abs');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 21:
              h += H.string(d.toGLSL() + ' = -' + g.toGLSL() + '; // neg');
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 22:
              h += H.string(
                d.toGLSL() +
                  ' = clamp(' +
                  g.toGLSL() +
                  ', 0.0, 1.0); // saturate',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              break;
            case 23:
              k = f.getRegisterUsage(q);
              k != fa.VECTOR_4 && k != fa.VECTOR_4_ARRAY
                ? ((h += H.string(
                    d.toGLSL() +
                      ' = ' +
                      g.toGLSL() +
                      ' * mat3(' +
                      q.toGLSL(!1) +
                      '); // m33',
                  )),
                  f.addDR(d, fa.VECTOR_4),
                  f.addSR(g, fa.VECTOR_4),
                  f.addSR(q, fa.MATRIX_4_4))
                : ((g.sourceMask = q.sourceMask = 7),
                  (h += H.string(
                    d.toGLSL() +
                      ' = vec3(dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 0) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 1) +
                      '),dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 2) +
                      ')); // m33',
                  )),
                  f.addDR(d, fa.VECTOR_4),
                  f.addSR(g, fa.VECTOR_4),
                  f.addSR(q, fa.VECTOR_4, 0),
                  f.addSR(q, fa.VECTOR_4, 1),
                  f.addSR(q, fa.VECTOR_4, 2));
              break;
            case 24:
              k = f.getRegisterUsage(q);
              k != fa.VECTOR_4 && k != fa.VECTOR_4_ARRAY
                ? ((h += H.string(
                    d.toGLSL() +
                      ' = ' +
                      g.toGLSL() +
                      ' * ' +
                      q.toGLSL(!1) +
                      '; // m44',
                  )),
                  f.addDR(d, fa.VECTOR_4),
                  f.addSR(g, fa.VECTOR_4),
                  f.addSR(q, fa.MATRIX_4_4))
                : ((g.sourceMask = q.sourceMask = 15),
                  (h += H.string(
                    d.toGLSL() +
                      ' = vec4(dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 0) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 1) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 2) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 3) +
                      ')); // m44',
                  )),
                  f.addDR(d, fa.VECTOR_4),
                  f.addSR(g, fa.VECTOR_4),
                  f.addSR(q, fa.VECTOR_4, 0),
                  f.addSR(q, fa.VECTOR_4, 1),
                  f.addSR(q, fa.VECTOR_4, 2),
                  f.addSR(q, fa.VECTOR_4, 3));
              break;
            case 25:
              d.mask &= 7;
              k = f.getRegisterUsage(q);
              k != fa.VECTOR_4 && k != fa.VECTOR_4_ARRAY
                ? ((h += H.string(
                    d.toGLSL() +
                      ' = ' +
                      g.toGLSL() +
                      ' * ' +
                      q.toGLSL(!1) +
                      '; // m34',
                  )),
                  f.addDR(d, fa.VECTOR_4),
                  f.addSR(g, fa.VECTOR_4),
                  f.addSR(q, fa.MATRIX_4_4))
                : ((g.sourceMask = q.sourceMask = 15),
                  (h += H.string(
                    d.toGLSL() +
                      ' = vec3(dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 0) +
                      '), dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 1) +
                      '),dot(' +
                      g.toGLSL(!0) +
                      ',' +
                      q.toGLSL(!0, 2) +
                      ')); // m34',
                  )),
                  f.addDR(d, fa.VECTOR_4),
                  f.addSR(g, fa.VECTOR_4),
                  f.addSR(q, fa.VECTOR_4, 0),
                  f.addSR(q, fa.VECTOR_4, 1),
                  f.addSR(q, fa.VECTOR_4, 2));
              break;
            case 39:
              g.sourceMask = 15;
              h += H.string(
                'if (any(lessThan(' + g.toGLSL() + ', vec4(0)))) discard;',
              );
              f.addSR(g, fa.VECTOR_4);
              break;
            case 40:
              q = Mg.parse(p, c);
              switch (q.d) {
                case 0:
                  2 == q.t
                    ? ((g.sourceMask = 3),
                      f.addSaR(q, fa.SAMPLER_2D_ALPHA),
                      (h += H.string(
                        'if (' + q.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (h += H.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = vec4(texture2D(' +
                          q.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          ').xyz, texture2D(' +
                          q.toGLSL() +
                          '_alpha, ' +
                          g.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (h += '\t} else {\n'),
                      (h += H.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = texture2D(' +
                          q.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex\n',
                      )),
                      (h += '\t}'))
                    : ((g.sourceMask = 3),
                      f.addSaR(q, fa.SAMPLER_2D),
                      (h += H.string(
                        d.toGLSL() +
                          ' = texture2D(' +
                          q.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex',
                      )));
                  break;
                case 1:
                  2 == q.t
                    ? ((g.sourceMask = 7),
                      f.addSaR(q, fa.SAMPLER_CUBE_ALPHA),
                      (h += H.string(
                        'if (' + q.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (h += H.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = vec4(textureCube(' +
                          q.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          ').xyz, textureCube(' +
                          q.toGLSL() +
                          '_alpha, ' +
                          g.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (h += '\t} else {\n'),
                      (h += H.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = textureCube(' +
                          q.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex',
                      )),
                      (h += '\t}'))
                    : ((g.sourceMask = 7),
                      (h += H.string(
                        d.toGLSL() +
                          ' = textureCube(' +
                          q.toGLSL() +
                          ', ' +
                          g.toGLSL() +
                          '); // tex',
                      )),
                      f.addSaR(q, fa.SAMPLER_CUBE));
              }
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              null != b && (b[q.n] = q.toSamplerState());
              break;
            case 41:
              g.sourceMask = q.sourceMask = 15;
              h += H.string(
                d.toGLSL() +
                  ' = vec4(greaterThanEqual(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // ste',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 42:
              g.sourceMask = q.sourceMask = 15;
              h += H.string(
                d.toGLSL() +
                  ' = vec4(lessThan(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // slt',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 44:
              g.sourceMask = q.sourceMask = 15;
              h += H.string(
                d.toGLSL() +
                  ' = vec4(equal(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // seq',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            case 45:
              g.sourceMask = q.sourceMask = 15;
              h += H.string(
                d.toGLSL() +
                  ' = vec4(notEqual(' +
                  g.toGLSL() +
                  ', ' +
                  q.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // sne',
              );
              f.addDR(d, fa.VECTOR_4);
              f.addSR(g, fa.VECTOR_4);
              f.addSR(q, fa.VECTOR_4);
              break;
            default:
              throw new Wc('Opcode ' + k);
          }
          h += '\n';
        }
        null == bd.limitedProfile &&
          ((d = Xe.context.getParameter(7938)),
          (bd.limitedProfile =
            -1 < d.indexOf('OpenGL ES') || -1 < d.indexOf('WebGL')));
        a =
          '' +
          H.string(
            '// AGAL ' + (c == Fe.VERTEX ? 'vertex' : 'fragment') + ' shader\n',
          );
        a = bd.limitedProfile
          ? a +
            '#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n'
          : a + '#version 120\n';
        a += H.string(f.toGLSL(!1));
        c == Fe.VERTEX && (a += 'uniform vec4 vcPositionScale;\n');
        a = a + 'void main() {\n' + H.string(f.toGLSL(!0));
        a += H.string(h);
        c == Fe.VERTEX && (a += '\tgl_Position *= vcPositionScale;\n');
        return a + '}\n';
      };
      var Lg = function () {};
      g['openfl.display3D._internal._AGALConverter.DestRegister'] = Lg;
      Lg.__name__ = 'openfl.display3D._internal._AGALConverter.DestRegister';
      Lg.parse = function (a, b) {
        var c = new Lg();
        c.programType = b;
        c.type = (a >>> 24) & 15;
        c.mask = (a >>> 16) & 15;
        c.n = a & 65535;
        return c;
      };
      Lg.prototype = {
        getWriteMask: function () {
          var a = '.';
          0 != (this.mask & 1) && (a += 'x');
          0 != (this.mask & 2) && (a += 'y');
          0 != (this.mask & 4) && (a += 'z');
          0 != (this.mask & 8) && (a += 'w');
          return a;
        },
        toGLSL: function (a) {
          null == a && (a = !0);
          var b =
            3 == this.type
              ? this.programType == Fe.VERTEX
                ? 'gl_Position'
                : 'gl_FragColor'
              : bd.prefixFromType(this.type, this.programType) + this.n;
          a && 15 != this.mask && (b += this.getWriteMask());
          return b;
        },
        __class__: Lg,
      };
      var Fe = (y['openfl.display3D._internal._AGALConverter.ProgramType'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.ProgramType',
        __constructs__: null,
        VERTEX: {
          _hx_name: 'VERTEX',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: r,
        },
        FRAGMENT: {
          _hx_name: 'FRAGMENT',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: r,
        },
      });
      Fe.__constructs__ = [Fe.VERTEX, Fe.FRAGMENT];
      var Bj = function () {
        this.mEntries = [];
      };
      g['openfl.display3D._internal.RegisterMap'] = Bj;
      Bj.__name__ = 'openfl.display3D._internal.RegisterMap';
      Bj.prototype = {
        add: function (a, b, c, d) {
          for (var f = 0, h = this.mEntries; f < h.length; ) {
            var k = h[f];
            ++f;
            if (k.type == a && k.name == b && k.number == c) {
              if (k.usage != d)
                throw new Wc(
                  'Cannot use register in multiple ways yet (mat4/vec4)',
                );
              return;
            }
          }
          k = new Nk();
          k.type = a;
          k.name = b;
          k.number = c;
          k.usage = d;
          this.mEntries.push(k);
        },
        addDR: function (a, b) {
          this.add(a.type, a.toGLSL(!1), a.n, b);
        },
        addSaR: function (a, b) {
          this.add(a.type, a.toGLSL(), a.n, b);
        },
        addSR: function (a, b, c) {
          null == c && (c = 0);
          0 != a.d
            ? (this.add(
                a.itype,
                bd.prefixFromType(a.itype, a.programType) + a.n,
                a.n,
                fa.VECTOR_4,
              ),
              this.add(
                a.type,
                bd.prefixFromType(a.type, a.programType) + a.o,
                a.o,
                fa.VECTOR_4_ARRAY,
              ))
            : this.add(a.type, a.toGLSL(!1, c), a.n + c, b);
        },
        getRegisterUsage: function (a) {
          return 0 != a.d
            ? fa.VECTOR_4_ARRAY
            : this.getUsage(a.type, a.toGLSL(!1), a.n);
        },
        getUsage: function (a, b, c) {
          for (var d = 0, f = this.mEntries; d < f.length; ) {
            var h = f[d];
            ++d;
            if (h.type == a && h.name == b && h.number == c) return h.usage;
          }
          return fa.UNUSED;
        },
        toGLSL: function (a) {
          this.mEntries.sort(function (a, b) {
            return a.number - b.number;
          });
          this.mEntries.sort(function (a, b) {
            return va.__cast(a.type, vl) - va.__cast(b.type, vl);
          });
          for (var b = '', c = 0, d = this.mEntries.length; c < d; ) {
            var f = c++;
            f = this.mEntries[f];
            if (!((a && 2 != f.type) || (!a && 2 == f.type)) && 3 != f.type) {
              switch (f.type) {
                case 0:
                  b += 'attribute ';
                  break;
                case 1:
                  b += 'uniform ';
                  break;
                case 2:
                  b += '\t';
                  break;
                case 3:
                  break;
                case 4:
                  b += 'varying ';
                  break;
                case 5:
                  b += 'uniform ';
                  break;
                default:
                  throw new Wc();
              }
              switch (f.usage._hx_index) {
                case 0:
                  Ga.info('Missing switch patten: RegisterUsage.UNUSED', {
                    fileName: 'openfl/display3D/_internal/AGALConverter.hx',
                    lineNumber: 751,
                    className: 'openfl.display3D._internal.RegisterMap',
                    methodName: 'toGLSL',
                  });
                  break;
                case 1:
                  b += 'vec4 ';
                  break;
                case 2:
                  b += 'mat4 ';
                  break;
                case 3:
                  b += 'sampler2D ';
                  break;
                case 5:
                  b += 'samplerCube ';
                  break;
                case 7:
                  b += 'vec4 ';
              }
              f.usage == fa.SAMPLER_2D_ALPHA
                ? ((b += 'sampler2D '),
                  (b += H.string(f.name)),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'sampler2D '),
                  (b += H.string(f.name + '_alpha')),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'bool '),
                  (b += H.string(f.name + '_alphaEnabled')))
                : f.usage == fa.SAMPLER_CUBE_ALPHA
                  ? ((b += 'samplerCube '),
                    (b += H.string(f.name)),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'samplerCube '),
                    (b += H.string(f.name + '_alpha')),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'bool '),
                    (b += H.string(f.name + '_alphaEnabled')))
                  : (b =
                      f.usage == fa.VECTOR_4_ARRAY
                        ? b + H.string(f.name + '[128]')
                        : b + H.string(f.name));
              b += ';\n';
            }
          }
          return b;
        },
        __class__: Bj,
      };
      var Nk = function () {};
      g['openfl.display3D._internal._AGALConverter.RegisterMapEntry'] = Nk;
      Nk.__name__ =
        'openfl.display3D._internal._AGALConverter.RegisterMapEntry';
      Nk.prototype = { __class__: Nk };
      var fa = (y['openfl.display3D._internal._AGALConverter.RegisterUsage'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
        __constructs__: null,
        UNUSED: {
          _hx_name: 'UNUSED',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        VECTOR_4: {
          _hx_name: 'VECTOR_4',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        MATRIX_4_4: {
          _hx_name: 'MATRIX_4_4',
          _hx_index: 2,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_2D: {
          _hx_name: 'SAMPLER_2D',
          _hx_index: 3,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_2D_ALPHA: {
          _hx_name: 'SAMPLER_2D_ALPHA',
          _hx_index: 4,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_CUBE: {
          _hx_name: 'SAMPLER_CUBE',
          _hx_index: 5,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_CUBE_ALPHA: {
          _hx_name: 'SAMPLER_CUBE_ALPHA',
          _hx_index: 6,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        VECTOR_4_ARRAY: {
          _hx_name: 'VECTOR_4_ARRAY',
          _hx_index: 7,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
      });
      fa.__constructs__ = [
        fa.UNUSED,
        fa.VECTOR_4,
        fa.MATRIX_4_4,
        fa.SAMPLER_2D,
        fa.SAMPLER_2D_ALPHA,
        fa.SAMPLER_CUBE,
        fa.SAMPLER_CUBE_ALPHA,
        fa.VECTOR_4_ARRAY,
      ];
      var Mg = function () {};
      g['openfl.display3D._internal._AGALConverter.SamplerRegister'] = Mg;
      Mg.__name__ = 'openfl.display3D._internal._AGALConverter.SamplerRegister';
      Mg.parse = function (a, b) {
        var c = new Mg();
        c.programType = b;
        b = 60;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.f = b;
        b = 56;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.m = b;
        b = 52;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.w = b;
        b = 48;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.s = b;
        b = 44;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.d = b;
        b = 40;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.t = b;
        b = 32;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.type = b;
        b = 16;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        c.b = b;
        b = a.low & 65535;
        c.n = b;
        return c;
      };
      Mg.prototype = {
        toGLSL: function () {
          return bd.prefixFromType(this.type, this.programType) + this.n;
        },
        toSamplerState: function () {
          switch (this.f) {
            case 0:
              var a = 5;
              break;
            case 1:
              a = 4;
              break;
            default:
              throw new Wc();
          }
          switch (this.m) {
            case 0:
              var b = 2;
              break;
            case 1:
              b = 1;
              break;
            case 2:
              b = 0;
              break;
            default:
              throw new Wc();
          }
          switch (this.w) {
            case 0:
              var c = 0;
              break;
            case 1:
              c = 2;
              break;
            default:
              throw new Wc();
          }
          return new ag(
            c,
            a,
            b,
            ((this.b << 24) >> 24) / 8,
            4 == (this.s & 4),
            1 == (this.s & 1),
            2 == this.t,
          );
        },
        __class__: Mg,
      };
      var bg = function () {};
      g['openfl.display3D._internal._AGALConverter.SourceRegister'] = bg;
      bg.__name__ = 'openfl.display3D._internal._AGALConverter.SourceRegister';
      bg.parse = function (a, b, c) {
        var d = new bg();
        d.programType = b;
        b = 63;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 1;
        d.d = b;
        b = 48;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 3;
        d.q = b;
        b = 40;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.itype = b;
        b = 32;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.type = b;
        b = 24;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.s = b;
        b = 16;
        b =
          0 == b
            ? new Da(a.high, a.low)
            : 32 > b
              ? new Da(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new Da(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.o = b;
        b = a.low & 65535;
        d.n = b;
        d.sourceMask = c;
        return d;
      };
      bg.prototype = {
        toGLSL: function (a, b) {
          null == b && (b = 0);
          null == a && (a = !0);
          if (3 == this.type)
            return this.programType == Fe.VERTEX
              ? 'gl_Position'
              : 'gl_FragColor';
          var c = 228 == this.s && 15 == this.sourceMask,
            d = '';
          if (5 != this.type && !c) {
            if (0 != (this.sourceMask & 1))
              switch (this.s & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 2))
              switch ((this.s >> 2) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 4))
              switch ((this.s >> 4) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 8))
              switch ((this.s >> 6) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
          }
          c = bd.prefixFromType(this.type, this.programType);
          if (0 == this.d) c += this.n + b;
          else {
            c += this.o;
            var f = '';
            switch (this.q) {
              case 0:
                f = 'x';
                break;
              case 1:
                f = 'y';
                break;
              case 2:
                f = 'z';
                break;
              case 3:
                f = 'w';
            }
            f =
              bd.prefixFromType(this.itype, this.programType) +
              this.n +
              '.' +
              f;
            c += '[ int(' + f + ') +' + b + ']';
          }
          a && '' != d && (c += '.' + d);
          return c;
        },
        __class__: bg,
      };
      var Dh = function () {
        this.backBufferEnableDepthAndStencil = !1;
        this.blendDestinationAlphaFactor = 9;
        this.blendSourceAlphaFactor = 2;
        this.blendDestinationRGBFactor = 9;
        this.blendSourceRGBFactor = 2;
        this.colorMaskAlpha =
          this.colorMaskBlue =
          this.colorMaskGreen =
          this.colorMaskRed =
            !0;
        this.culling = 3;
        this.depthCompareMode = 4;
        this.depthMask = !0;
        this.samplerStates = [];
        this.scissorRectangle = new na();
        this.stencilCompareMode = 0;
        this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
        this.stencilReadMask = 255;
        this.stencilReferenceValue = 0;
        this.stencilTriangleFace = 2;
        this.stencilWriteMask = 255;
        this.textures = [];
        this.__frontFaceGLCCW = !0;
        this.__glBlendEquation = 32774;
      };
      g['openfl.display3D._internal.Context3DState'] = Dh;
      Dh.__name__ = 'openfl.display3D._internal.Context3DState';
      Dh.prototype = { __class__: Dh };
      var Eb = function (a) {
        oa.call(this);
        this.__context = a;
        var b = this.__context.gl;
        this.__textureID = b.createTexture();
        this.__textureContext = this.__context.__context;
        if (null == Eb.__supportsBGRA) {
          Eb.__textureInternalFormat = b.RGBA;
          Eb.__supportsBGRA = !1;
          Eb.__textureFormat = b.RGBA;
          Eb.__compressedFormats = new mc();
          Eb.__compressedFormatsAlpha = new mc();
          a = b.getExtension('WEBGL_compressed_texture_s3tc');
          var c = b.getExtension('WEBGL_compressed_texture_etc1');
          b = b.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
          if (null != a) {
            var d = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            Eb.__compressedFormats.h[0] = d;
            d = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            Eb.__compressedFormatsAlpha.h[0] = d;
          }
          null != c &&
            ((d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (Eb.__compressedFormats.h[2] = d),
            (d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (Eb.__compressedFormatsAlpha.h[2] = d));
          null != b &&
            ((d = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG),
            (Eb.__compressedFormats.h[1] = d),
            (d = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG),
            (Eb.__compressedFormatsAlpha.h[1] = d));
        }
        this.__internalFormat = Eb.__textureInternalFormat;
        this.__format = Eb.__textureFormat;
      };
      g['openfl.display3D.textures.TextureBase'] = Eb;
      Eb.__name__ = 'openfl.display3D.textures.TextureBase';
      Eb.__super__ = oa;
      Eb.prototype = v(oa.prototype, {
        dispose: function () {
          var a = this.__context.gl;
          null != this.__alphaTexture &&
            (this.__alphaTexture.dispose(), (this.__alphaTexture = null));
          null != this.__textureID &&
            (a.deleteTexture(this.__textureID), (this.__textureID = null));
          null != this.__glFramebuffer &&
            (a.deleteFramebuffer(this.__glFramebuffer),
            (this.__glFramebuffer = null));
          null != this.__glDepthRenderbuffer &&
            (a.deleteRenderbuffer(this.__glDepthRenderbuffer),
            (this.__glDepthRenderbuffer = null));
          null != this.__glStencilRenderbuffer &&
            (a.deleteRenderbuffer(this.__glStencilRenderbuffer),
            (this.__glStencilRenderbuffer = null));
        },
        __getGLFramebuffer: function (a, b, c) {
          b = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = b.createFramebuffer()),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            b.framebufferTexture2D(
              b.FRAMEBUFFER,
              b.COLOR_ATTACHMENT0,
              b.TEXTURE_2D,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                Ga.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    c +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 201,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )));
          a &&
            null == this.__glDepthRenderbuffer &&
            (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            0 != ub.__glDepthStencil
              ? ((this.__glStencilRenderbuffer = this.__glDepthRenderbuffer =
                  b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  ub.__glDepthStencil,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ))
              : ((this.__glDepthRenderbuffer = b.createRenderbuffer()),
                (this.__glStencilRenderbuffer = b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.DEPTH_COMPONENT16,
                  this.__width,
                  this.__height,
                ),
                b.bindRenderbuffer(
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                ),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.STENCIL_INDEX8,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                )),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                Ga.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    c +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 239,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )),
            b.bindRenderbuffer(b.RENDERBUFFER, null));
          return this.__glFramebuffer;
        },
        __getTexture: function () {
          return this.__textureID;
        },
        __setSamplerState: function (a) {
          if (!a.equals(this.__samplerState)) {
            var b = this.__context.gl;
            this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP
              ? this.__context.__bindGLTextureCubeMap(this.__textureID)
              : this.__context.__bindGLTexture2D(this.__textureID);
            var c;
            switch (a.wrap) {
              case 0:
                var d = (c = b.CLAMP_TO_EDGE);
                break;
              case 1:
                c = b.CLAMP_TO_EDGE;
                d = b.REPEAT;
                break;
              case 2:
                d = c = b.REPEAT;
                break;
              case 3:
                c = b.REPEAT;
                d = b.CLAMP_TO_EDGE;
                break;
              default:
                throw new Vb('wrap bad enum');
            }
            var f = 5 == a.filter ? b.NEAREST : b.LINEAR;
            switch (a.mipfilter) {
              case 0:
                var h =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_LINEAR
                    : b.LINEAR_MIPMAP_LINEAR;
                break;
              case 1:
                h =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_NEAREST
                    : b.LINEAR_MIPMAP_NEAREST;
                break;
              case 2:
                h = 5 == a.filter ? b.NEAREST : b.LINEAR;
                break;
              default:
                throw new Vb('mipfiter bad enum');
            }
            b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, h);
            b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, f);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
            null == this.__samplerState && (this.__samplerState = a.clone());
            this.__samplerState.copyFrom(a);
            return !0;
          }
          return !1;
        },
        __uploadFromImage: function (a) {
          var b = this.__context.gl,
            c;
          if (this.__textureTarget == b.TEXTURE_2D) {
            if (1 == a.buffer.bitsPerPixel) var d = (c = b.ALPHA);
            else ((c = Eb.__textureInternalFormat), (d = Eb.__textureFormat));
            this.__context.__bindGLTexture2D(this.__textureID);
            a.type == Zc.DATA || a.get_premultiplied()
              ? !a.get_premultiplied() &&
                a.get_transparent() &&
                b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1)
              : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
            a.type == Zc.DATA
              ? Lc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  a.buffer.width,
                  a.buffer.height,
                  0,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_data(),
                )
              : Lc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_src(),
                );
            this.__context.__bindGLTexture2D(null);
          }
        },
        __class__: Eb,
      });
      var zj = function (a, b, c, d, f) {
        Eb.call(this, a);
        this.__width = this.__height = this.__size = b;
        this.__optimizeForRenderToTexture = d;
        this.__streamingLevels = f;
        this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
        this.__uploadedSides = 0;
      };
      g['openfl.display3D.textures.CubeTexture'] = zj;
      zj.__name__ = 'openfl.display3D.textures.CubeTexture';
      zj.__super__ = Eb;
      zj.prototype = v(Eb.prototype, {
        __getGLFramebuffer: function (a, b, c) {
          var d = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = d.createFramebuffer()),
            (this.__framebufferSurface = -1));
          if (
            this.__framebufferSurface != c &&
            ((this.__framebufferSurface = c),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            d.framebufferTexture2D(
              d.FRAMEBUFFER,
              d.COLOR_ATTACHMENT0,
              d.TEXTURE_CUBE_MAP_POSITIVE_X + c,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking)
          ) {
            var f = d.checkFramebufferStatus(d.FRAMEBUFFER);
            f != d.FRAMEBUFFER_COMPLETE &&
              Ga.error(
                'Error: Context3D.setRenderToTexture status:' +
                  f +
                  ' width:' +
                  this.__width +
                  ' height:' +
                  this.__height,
                {
                  fileName: 'openfl/display3D/textures/CubeTexture.hx',
                  lineNumber: 279,
                  className: 'openfl.display3D.textures.CubeTexture',
                  methodName: '__getGLFramebuffer',
                },
              );
          }
          return Eb.prototype.__getGLFramebuffer.call(this, a, b, c);
        },
        __setSamplerState: function (a) {
          if (Eb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_CUBE_MAP),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != ub.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > ub.__glMaxTextureMaxAnisotropy &&
                (a = ub.__glMaxTextureMaxAnisotropy);
              b.texParameterf(
                b.TEXTURE_CUBE_MAP,
                ub.__glTextureMaxAnisotropy,
                a,
              );
            }
            return !0;
          }
          return !1;
        },
        __class__: zj,
      });
      var Eh = function (a, b, c, d, f) {
        Eb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = f;
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
        this.uploadFromTypedArray(null);
        f && this.__getGLFramebuffer(!0, 0, 0);
      };
      g['openfl.display3D.textures.RectangleTexture'] = Eh;
      Eh.__name__ = 'openfl.display3D.textures.RectangleTexture';
      Eh.__super__ = Eb;
      Eh.prototype = v(Eb.prototype, {
        uploadFromTypedArray: function (a) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          Lc.texImage2D(
            b,
            this.__textureTarget,
            0,
            this.__internalFormat,
            this.__width,
            this.__height,
            0,
            this.__format,
            b.UNSIGNED_BYTE,
            a,
          );
          this.__context.__bindGLTexture2D(null);
        },
        __setSamplerState: function (a) {
          if (Eb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            if (0 != ub.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > ub.__glMaxTextureMaxAnisotropy &&
                (a = ub.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, ub.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: Eh,
      });
      var yj = function (a, b, c, d, f, h) {
        Eb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = f;
        this.__streamingLevels = h;
        a = this.__context.gl;
        this.__textureTarget = a.TEXTURE_2D;
        this.__context.__bindGLTexture2D(this.__textureID);
        Lc.texImage2D(
          a,
          this.__textureTarget,
          0,
          this.__internalFormat,
          this.__width,
          this.__height,
          0,
          this.__format,
          a.UNSIGNED_BYTE,
          null,
        );
        this.__context.__bindGLTexture2D(null);
        f && this.__getGLFramebuffer(!0, 0, 0);
      };
      g['openfl.display3D.textures.Texture'] = yj;
      yj.__name__ = 'openfl.display3D.textures.Texture';
      yj.__super__ = Eb;
      yj.prototype = v(Eb.prototype, {
        __setSamplerState: function (a) {
          if (Eb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_2D),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != ub.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > ub.__glMaxTextureMaxAnisotropy &&
                (a = ub.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, ub.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: yj,
      });
      var Ok = function (a) {
        Eb.call(this, a);
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
      };
      g['openfl.display3D.textures.VideoTexture'] = Ok;
      Ok.__name__ = 'openfl.display3D.textures.VideoTexture';
      Ok.__super__ = Eb;
      Ok.prototype = v(Eb.prototype, {
        dispose: function () {
          null != this.__netStream &&
            null != this.__netStream.__video &&
            this.__netStream.__video.removeEventListener(
              'timeupdate',
              l(this, this.__onTimeUpdate),
            );
          Eb.prototype.dispose.call(this);
        },
        __onTimeUpdate: function (a) {
          null != this.__netStream &&
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState &&
            this.__textureReady();
        },
        __getTexture: function () {
          if (
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState
          ) {
            var a = this.__context.gl;
            this.__context.__bindGLTexture2D(this.__textureID);
            Lc.texImage2D(
              a,
              a.TEXTURE_2D,
              0,
              a.RGBA,
              a.RGBA,
              a.UNSIGNED_BYTE,
              this.__netStream.__video,
            );
            this.__cacheTime = this.__netStream.__video.currentTime;
          }
          return this.__textureID;
        },
        __textureReady: function () {
          this.videoWidth = this.__netStream.__video.videoWidth;
          this.videoHeight = this.__netStream.__video.videoHeight;
          var a = new wa('textureReady');
          this.dispatchEvent(a);
        },
        __class__: Ok,
      });
      var Vb = function (a, b) {
        null == b && (b = 0);
        null == a && (a = '');
        X.call(this, a);
        this.errorID = b;
        this.name = 'Error';
        this.__skipStack++;
      };
      g['openfl.errors.Error'] = Vb;
      Vb.__name__ = 'openfl.errors.Error';
      Vb.__super__ = X;
      Vb.prototype = v(X.prototype, {
        toString: function () {
          return null != this.get_message() ? this.get_message() : 'Error';
        },
        __class__: Vb,
      });
      var fg = function (a) {
        null == a && (a = '');
        Vb.call(this, a);
        this.name = 'ArgumentError';
        this.__skipStack++;
      };
      g['openfl.errors.ArgumentError'] = fg;
      fg.__name__ = 'openfl.errors.ArgumentError';
      fg.__super__ = Vb;
      fg.prototype = v(Vb.prototype, { __class__: fg });
      var Ng = function (a) {
        null == a && (a = '');
        Vb.call(this, a);
        this.name = 'IOError';
        this.__skipStack++;
      };
      g['openfl.errors.IOError'] = Ng;
      Ng.__name__ = 'openfl.errors.IOError';
      Ng.__super__ = Vb;
      Ng.prototype = v(Vb.prototype, { __class__: Ng });
      var Gh = function (a, b) {
        Ng.call(this, 'End of file was encountered');
        this.name = 'EOFError';
        this.errorID = 2030;
        this.__skipStack++;
      };
      g['openfl.errors.EOFError'] = Gh;
      Gh.__name__ = 'openfl.errors.EOFError';
      Gh.__super__ = Ng;
      Gh.prototype = v(Ng.prototype, { __class__: Gh });
      var Wc = function (a) {
        null == a && (a = '');
        Vb.call(this, a, 0);
        this.name = 'IllegalOperationError';
        this.__skipStack++;
      };
      g['openfl.errors.IllegalOperationError'] = Wc;
      Wc.__name__ = 'openfl.errors.IllegalOperationError';
      Wc.__super__ = Vb;
      Wc.prototype = v(Vb.prototype, { __class__: Wc });
      var Zg = function (a) {
        null == a && (a = '');
        Vb.call(this, a, 0);
        this.name = 'RangeError';
        this.__skipStack++;
      };
      g['openfl.errors.RangeError'] = Zg;
      Zg.__name__ = 'openfl.errors.RangeError';
      Zg.__super__ = Vb;
      Zg.prototype = v(Vb.prototype, { __class__: Zg });
      var Cf = function (a) {
        null == a && (a = '');
        Vb.call(this, a, 0);
        this.name = 'TypeError';
        this.__skipStack++;
      };
      g['openfl.errors.TypeError'] = Cf;
      Cf.__name__ = 'openfl.errors.TypeError';
      Cf.__super__ = Vb;
      Cf.prototype = v(Vb.prototype, { __class__: Cf });
      var wa = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.eventPhase = 2;
      };
      g['openfl.events.Event'] = wa;
      wa.__name__ = 'openfl.events.Event';
      wa.prototype = {
        isDefaultPrevented: function () {
          return this.__preventDefault;
        },
        preventDefault: function () {
          this.cancelable && (this.__preventDefault = !0);
        },
        stopPropagation: function () {
          this.__isCanceled = !0;
        },
        __class__: wa,
      };
      var Og = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.activating = d;
      };
      g['openfl.events.ActivityEvent'] = Og;
      Og.__name__ = 'openfl.events.ActivityEvent';
      Og.__super__ = wa;
      Og.prototype = v(wa.prototype, { __class__: Og });
      var Ce = function (a, b, c, d) {
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.text = d;
      };
      g['openfl.events.TextEvent'] = Ce;
      Ce.__name__ = 'openfl.events.TextEvent';
      Ce.__super__ = wa;
      Ce.prototype = v(wa.prototype, { __class__: Ce });
      var Xd = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        Ce.call(this, a, b, c, d);
        this.errorID = f;
      };
      g['openfl.events.ErrorEvent'] = Xd;
      Xd.__name__ = 'openfl.events.ErrorEvent';
      Xd.__super__ = Ce;
      Xd.prototype = v(Ce.prototype, { __class__: Xd });
      var Xg = function (a) {
        this.active = !1;
        this.reset(a);
      };
      g['openfl.events._EventDispatcher.DispatchIterator'] = Xg;
      Xg.__name__ = 'openfl.events._EventDispatcher.DispatchIterator';
      Xg.prototype = {
        copy: function () {
          this.isCopy || ((this.list = this.list.slice()), (this.isCopy = !0));
        },
        hasNext: function () {
          return this.index < this.list.length;
        },
        next: function () {
          return this.list[this.index++];
        },
        remove: function (a, b) {
          if (this.active)
            if (this.isCopy) {
              b = this.index;
              for (var c = this.list.length; b < c; ) {
                var d = b++;
                if (this.list[d] == a) {
                  this.list.splice(d, 1);
                  break;
                }
              }
            } else b < this.index && this.index--;
        },
        reset: function (a) {
          this.list = a;
          this.isCopy = !1;
          this.index = 0;
        },
        start: function () {
          this.active = !0;
        },
        stop: function () {
          this.active = !1;
        },
        __class__: Xg,
      };
      var Bf = function (a, b, c, d) {
        d && Bf.supportsWeakReference
          ? (this.weakRefCallback = new WeakRef(a))
          : (this.callback = a);
        this.useCapture = b;
        this.priority = c;
        this.useWeakReference = d;
      };
      g['openfl.events._EventDispatcher.Listener'] = Bf;
      Bf.__name__ = 'openfl.events._EventDispatcher.Listener';
      Bf.prototype = {
        match: function (a, b) {
          var c = this.callback;
          return null != this.weakRefCallback &&
            ((c = this.weakRefCallback.deref()), null == c)
            ? !1
            : c == a
              ? this.useCapture == b
              : !1;
        },
        __class__: Bf,
      };
      var Zf = function (a, b, c, d, f, h) {
        null == h && (h = 0);
        null == f && (f = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.keyCode = h;
        this.shiftKey = f;
        this.relatedObject = d;
      };
      g['openfl.events.FocusEvent'] = Zf;
      Zf.__name__ = 'openfl.events.FocusEvent';
      Zf.__super__ = wa;
      Zf.prototype = v(wa.prototype, { __class__: Zf });
      var df = function (a, b, c, d, f) {
        null == f && (f = !1);
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        Og.call(this, a, b, c);
        this.fullScreen = d;
        this.interactive = f;
      };
      g['openfl.events.FullScreenEvent'] = df;
      df.__name__ = 'openfl.events.FullScreenEvent';
      df.__super__ = Og;
      df.prototype = v(Og.prototype, { __class__: df });
      var Pg = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !0);
        wa.call(this, a, b, c);
        this.device = d;
      };
      g['openfl.events.GameInputEvent'] = Pg;
      Pg.__name__ = 'openfl.events.GameInputEvent';
      Pg.__super__ = wa;
      Pg.prototype = v(wa.prototype, { __class__: Pg });
      var Hh = function (a, b, c, d, f) {
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        this.responseHeaders = [];
        this.status = d;
        this.redirected = f;
        wa.call(this, a, b, c);
      };
      g['openfl.events.HTTPStatusEvent'] = Hh;
      Hh.__name__ = 'openfl.events.HTTPStatusEvent';
      Hh.__super__ = wa;
      Hh.prototype = v(wa.prototype, { __class__: Hh });
      var Qg = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !0);
        Xd.call(this, a, b, c, d, f);
      };
      g['openfl.events.IOErrorEvent'] = Qg;
      Qg.__name__ = 'openfl.events.IOErrorEvent';
      Qg.__super__ = Xd;
      Qg.prototype = v(Xd.prototype, { __class__: Qg });
      var uj = function (a, b, c, d, f, h, k, g, p, q, u) {
        null == u && (u = !1);
        null == q && (q = !1);
        null == p && (p = !1);
        null == g && (g = !1);
        null == k && (k = !1);
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.charCode = d;
        this.keyCode = f;
        this.keyLocation = null != h ? h : 0;
        this.ctrlKey = k;
        this.altKey = g;
        this.shiftKey = p;
        this.controlKey = q;
        this.commandKey = u;
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.KeyboardEvent'] = uj;
      uj.__name__ = 'openfl.events.KeyboardEvent';
      uj.__super__ = wa;
      uj.prototype = v(wa.prototype, { __class__: uj });
      var Ob = function (a, b, c, d, f, h, k, g, q, u, r, m, l, x) {
        null == x && (x = 0);
        null == l && (l = !1);
        null == m && (m = !1);
        null == r && (r = 0);
        null == u && (u = !1);
        null == q && (q = !1);
        null == g && (g = !1);
        null == k && (k = !1);
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        wa.call(this, a, b, c);
        this.shiftKey = q;
        this.altKey = g;
        this.ctrlKey = k;
        this.bubbles = b;
        this.relatedObject = h;
        this.delta = r;
        this.localX = d;
        this.localY = f;
        this.buttonDown = u;
        this.commandKey = m;
        this.controlKey = l;
        this.clickCount = x;
        this.isRelatedObjectInaccessible = !1;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.MouseEvent'] = Ob;
      Ob.__name__ = 'openfl.events.MouseEvent';
      Ob.__create = function (a, b, c, d, f, h, k, g) {
        null == g && (g = 0);
        a = new Ob(
          a,
          !0,
          !1,
          h.x,
          h.y,
          null,
          Ob.__ctrlKey,
          Ob.__altKey,
          Ob.__shiftKey,
          Ob.__buttonDown,
          g,
          Ob.__commandKey,
          Ob.__controlKey,
          c,
        );
        a.stageX = d;
        a.stageY = f;
        a.target = k;
        return a;
      };
      Ob.__super__ = wa;
      Ob.prototype = v(wa.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: Ob,
      });
      var Cj = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.info = d;
        wa.call(this, a, b, c);
      };
      g['openfl.events.NetStatusEvent'] = Cj;
      Cj.__name__ = 'openfl.events.NetStatusEvent';
      Cj.__super__ = wa;
      Cj.prototype = v(wa.prototype, { __class__: Cj });
      var Vf = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.bytesLoaded = d;
        this.bytesTotal = f;
      };
      g['openfl.events.ProgressEvent'] = Vf;
      Vf.__name__ = 'openfl.events.ProgressEvent';
      Vf.__super__ = wa;
      Vf.prototype = v(wa.prototype, { __class__: Vf });
      var Mh = function (a, b, c, d, f, h) {
        null == h && (h = !0);
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.objectMatrix = d;
        this.objectColorTransform = f;
        this.allowSmoothing = h;
      };
      g['openfl.events.RenderEvent'] = Mh;
      Mh.__name__ = 'openfl.events.RenderEvent';
      Mh.__super__ = wa;
      Mh.prototype = v(wa.prototype, { __class__: Mh });
      var Dj = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.data = new Vc(0);
        this.data.__endian = 1;
        this.position = 0;
      };
      g['openfl.events.SampleDataEvent'] = Dj;
      Dj.__name__ = 'openfl.events.SampleDataEvent';
      Dj.__super__ = wa;
      Dj.prototype = v(wa.prototype, {
        getBufferSize: function () {
          var a =
            (cb.toFloat(Td.get_length(this.data)) / cb.toFloat(4) / 2) | 0;
          if (0 < a) {
            if (0 != a && 0 == (a & (a - 1)) && 2048 <= a && 8192 >= a)
              return ((this.tempBuffer = new Float32Array(2 * a)), a);
            throw new Vb(
              'To be consistent with flash the listener function registered to SampleDataEvent has to provide 2048, 4096 or 8192 samples if targeting HTML5.',
            );
          }
          return 0;
        },
        getSamples: function (a) {
          this.data.position = 0;
          this.tempBuffer = Jl.fromBytes(Td.toBytes(this.data));
          this.leftChannel = a.outputBuffer.getChannelData(0);
          this.rightChannel = a.outputBuffer.getChannelData(1);
          for (
            var b = (a = 0),
              c = (cb.toFloat(Td.get_length(this.data)) / cb.toFloat(2)) | 0;
            b < c;

          ) {
            var d = b++;
            this.leftChannel[d] = this.tempBuffer[a++];
            this.rightChannel[d] = this.tempBuffer[a++];
          }
        },
        __class__: Dj,
      });
      var Ej = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        Xd.call(this, a, b, c, d, f);
      };
      g['openfl.events.SecurityErrorEvent'] = Ej;
      Ej.__name__ = 'openfl.events.SecurityErrorEvent';
      Ej.__super__ = Xd;
      Ej.prototype = v(Xd.prototype, { __class__: Ej });
      var Rg = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        wa.call(this, a, b, c);
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.TimerEvent'] = Rg;
      Rg.__name__ = 'openfl.events.TimerEvent';
      Rg.__super__ = wa;
      Rg.prototype = v(wa.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: Rg,
      });
      var Zd = function (
        a,
        b,
        c,
        d,
        f,
        h,
        k,
        g,
        q,
        u,
        r,
        m,
        l,
        x,
        D,
        w,
        J,
        y,
        z,
        C,
      ) {
        null == w && (w = !1);
        null == D && (D = !1);
        null == x && (x = !1);
        null == l && (l = !1);
        null == m && (m = !1);
        null == u && (u = 0);
        null == q && (q = 0);
        null == g && (g = 0);
        null == k && (k = 0);
        null == h && (h = 0);
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        wa.call(this, a, b, c);
        this.touchPointID = d;
        this.isPrimaryTouchPoint = f;
        this.localX = h;
        this.localY = k;
        this.sizeX = g;
        this.sizeY = q;
        this.pressure = u;
        this.relatedObject = r;
        this.ctrlKey = m;
        this.altKey = l;
        this.shiftKey = x;
        this.commandKey = D;
        this.controlKey = w;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      g['openfl.events.TouchEvent'] = Zd;
      Zd.__name__ = 'openfl.events.TouchEvent';
      Zd.__create = function (a, b, c, d, f, h) {
        a = new Zd(a, !0, !1, 0, !0, f.x, f.y, 1, 1, 1);
        a.stageX = c;
        a.stageY = d;
        a.target = h;
        return a;
      };
      Zd.__super__ = wa;
      Zd.prototype = v(wa.prototype, { __class__: Zd });
      var dg = function (a, b, c, d) {
        null == c && (c = !0);
        null == b && (b = !0);
        Xd.call(this, a, b, c);
        this.error = d;
      };
      g['openfl.events.UncaughtErrorEvent'] = dg;
      dg.__name__ = 'openfl.events.UncaughtErrorEvent';
      dg.__super__ = Xd;
      dg.prototype = v(Xd.prototype, { __class__: dg });
      var qj = function () {
        this.__enabled = !0;
        oa.call(this);
      };
      g['openfl.events.UncaughtErrorEvents'] = qj;
      qj.__name__ = 'openfl.events.UncaughtErrorEvents';
      qj.__super__ = oa;
      qj.prototype = v(oa.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          oa.prototype.addEventListener.call(this, a, b, c, d, f);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) && (this.__enabled = !0);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          oa.prototype.removeEventListener.call(this, a, b, c);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) || (this.__enabled = !1);
        },
        __class__: qj,
      });
      var Sg = function () {
        this.__leftExtension = this.__bottomExtension = 0;
        this.__needSecondBitmapData = !0;
        this.__numShaderPasses = 0;
        this.__preserveObject = !1;
        this.__rightExtension = 0;
        this.__shaderBlendMode = 10;
        this.__topExtension = 0;
        this.__smooth = !0;
      };
      g['openfl.filters.BitmapFilter'] = Sg;
      Sg.__name__ = 'openfl.filters.BitmapFilter';
      Sg.prototype = {
        clone: function () {
          return new Sg();
        },
        __applyFilter: function (a, b, c, d) {
          return b;
        },
        __initShader: function (a, b, c) {
          return null;
        },
        __class__: Sg,
      };
      var Mc = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Dd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters.BitmapFilterShader'] = Mc;
      Mc.__name__ = 'openfl.filters.BitmapFilterShader';
      Mc.__super__ = Dd;
      Mc.prototype = v(Dd.prototype, { __class__: Mc });
      var Fj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec4 uColor;\n\t\tuniform float uStrength;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void)\n\t\t{\n            vec4 texel = texture2D(openfl_Texture, vTexCoord);\n\n            vec3 contributions = vec3(0.00443, 0.05399, 0.24197);\n            vec3 top = vec3(\n                texture2D(openfl_Texture, vBlurCoords[0]).a,\n                texture2D(openfl_Texture, vBlurCoords[1]).a,\n                texture2D(openfl_Texture, vBlurCoords[2]).a\n            );\n            vec3 bottom = vec3(\n                texture2D(openfl_Texture, vBlurCoords[3]).a,\n                texture2D(openfl_Texture, vBlurCoords[4]).a,\n                texture2D(openfl_Texture, vBlurCoords[5]).a\n            );\n\n            float a = texel.a * 0.39894;\n\t\t\ta += dot(top, contributions.xyz);\n            a += dot(bottom, contributions.zyx);\n\n\t\t\tgl_FragColor = uColor * clamp(a * uStrength, 0.0, 1.0);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void) {\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\n\t\t\tvec3 offset = vec3(0.5, 0.75, 1.0);\n\t\t\tvec2 r = uRadius / openfl_TextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * offset.z;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * offset.y;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * offset.x;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord + r * offset.x;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * offset.y;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * offset.z;\n\t\t}\n\t');
        Mc.call(this);
        this.uRadius.value = [0, 0];
        this.uColor.value = [0, 0, 0, 0];
        this.uStrength.value = [1];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.BlurAlphaShader'] = Fj;
      Fj.__name__ = 'openfl.filters._GlowFilter.BlurAlphaShader';
      Fj.__super__ = Mc;
      Fj.prototype = v(Mc.prototype, { __class__: Fj });
      var Gj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Mc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.CombineKnockoutShader'] = Gj;
      Gj.__name__ = 'openfl.filters._GlowFilter.CombineKnockoutShader';
      Gj.__super__ = Mc;
      Gj.prototype = v(Mc.prototype, { __class__: Gj });
      var Hj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = src + glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Mc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.CombineShader'] = Hj;
      Hj.__name__ = 'openfl.filters._GlowFilter.CombineShader';
      Hj.__super__ = Mc;
      Hj.prototype = v(Mc.prototype, { __class__: Hj });
      var Ij = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * src.a;\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Mc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.InnerCombineKnockoutShader'] = Ij;
      Ij.__name__ = 'openfl.filters._GlowFilter.InnerCombineKnockoutShader';
      Ij.__super__ = Mc;
      Ij.prototype = v(Mc.prototype, { __class__: Ij });
      var Jj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = vec4((src.rgb * (1.0 - glow.a)) + (glow.rgb * src.a), src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Mc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.InnerCombineShader'] = Jj;
      Jj.__name__ = 'openfl.filters._GlowFilter.InnerCombineShader';
      Jj.__super__ = Mc;
      Jj.prototype = v(Mc.prototype, { __class__: Jj });
      var Kj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tvec4 texel = texture2D(openfl_Texture, vTexCoord);\n\t\t\tgl_FragColor = vec4(texel.rgb, 1.0 - texel.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\t\t}\n\t');
        Mc.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      g['openfl.filters._GlowFilter.InvertAlphaShader'] = Kj;
      Kj.__name__ = 'openfl.filters._GlowFilter.InvertAlphaShader';
      Kj.__super__ = Mc;
      Kj.prototype = v(Mc.prototype, { __class__: Kj });
      var Sc = function (a, b, c, d, f, h, k, g) {
        null == g && (g = !1);
        null == k && (k = !1);
        null == h && (h = 1);
        null == f && (f = 2);
        null == d && (d = 6);
        null == c && (c = 6);
        null == b && (b = 1);
        null == a && (a = 16711680);
        Sg.call(this);
        this.__color = a;
        this.__alpha = b;
        this.__blurX = c;
        this.__blurY = d;
        this.__strength = f;
        this.__inner = k;
        this.__knockout = g;
        this.__quality = h;
        this.__updateSize();
        this.__renderDirty =
          this.__preserveObject =
          this.__needSecondBitmapData =
            !0;
      };
      g['openfl.filters.GlowFilter'] = Sc;
      Sc.__name__ = 'openfl.filters.GlowFilter';
      Sc.__super__ = Sg;
      Sc.prototype = v(Sg.prototype, {
        clone: function () {
          return new Sc(
            this.__color,
            this.__alpha,
            this.__blurX,
            this.__blurY,
            this.__strength,
            this.__quality,
            this.__inner,
            this.__knockout,
          );
        },
        __applyFilter: function (a, b, c, d) {
          var f = (this.__color >> 16) & 255,
            h = (this.__color >> 8) & 255,
            k = this.__color & 255;
          c = bc.gaussianBlur(
            a.image,
            b.image,
            c.__toLimeRectangle(),
            d.__toLimeVector2(),
            this.__blurX,
            this.__blurY,
            this.__quality,
            this.__strength,
          );
          c.colorTransform(
            c.get_rect(),
            new Tb(0, 0, 0, this.__alpha, f, h, k, 0).__toLimeColorMatrix(),
          );
          return c == a.image ? a : b;
        },
        __initShader: function (a, b, c) {
          if (this.__inner && 0 == b) return Sc.__invertAlphaShader;
          a = b - (this.__inner ? 1 : 0);
          b = this.__horizontalPasses + this.__verticalPasses;
          if (a < b) {
            var d = Sc.__blurAlphaShader;
            a < this.__horizontalPasses
              ? ((c = 0.5 * Math.pow(0.5, a >> 1)),
                (d.uRadius.value[0] = this.get_blurX() * c),
                (d.uRadius.value[1] = 0))
              : ((c = 0.5 * Math.pow(0.5, (a - this.__horizontalPasses) >> 1)),
                (d.uRadius.value[0] = 0),
                (d.uRadius.value[1] = this.get_blurY() * c));
            d.uColor.value[0] = ((this.get_color() >> 16) & 255) / 255;
            d.uColor.value[1] = ((this.get_color() >> 8) & 255) / 255;
            d.uColor.value[2] = (this.get_color() & 255) / 255;
            d.uColor.value[3] = this.get_alpha();
            d.uStrength.value[0] = a == b - 1 ? this.__strength : 1;
            return d;
          }
          if (this.__inner) {
            if (this.__knockout)
              return (
                (d = Sc.__innerCombineKnockoutShader),
                (d.sourceBitmap.input = c),
                (d.offset.value[0] = 0),
                (d.offset.value[1] = 0),
                d
              );
            d = Sc.__innerCombineShader;
          } else {
            if (this.__knockout)
              return (
                (d = Sc.__combineKnockoutShader),
                (d.sourceBitmap.input = c),
                (d.offset.value[0] = 0),
                (d.offset.value[1] = 0),
                d
              );
            d = Sc.__combineShader;
          }
          d.sourceBitmap.input = c;
          d.offset.value[0] = 0;
          d.offset.value[1] = 0;
          return d;
        },
        __updateSize: function () {
          this.__rightExtension = this.__leftExtension =
            0 < this.__blurX ? Math.ceil(1.5 * this.__blurX) : 0;
          this.__bottomExtension = this.__topExtension =
            0 < this.__blurY ? Math.ceil(1.5 * this.__blurY) : 0;
          this.__calculateNumShaderPasses();
        },
        __calculateNumShaderPasses: function () {
          this.__horizontalPasses =
            0 >= this.__blurX
              ? 0
              : Math.round((this.__quality / 4) * this.__blurX) + 1;
          this.__verticalPasses =
            0 >= this.__blurY
              ? 0
              : Math.round((this.__quality / 4) * this.__blurY) + 1;
          this.__numShaderPasses =
            this.__horizontalPasses +
            this.__verticalPasses +
            (this.__inner ? 2 : 1);
        },
        get_alpha: function () {
          return this.__alpha;
        },
        get_blurX: function () {
          return this.__blurX;
        },
        get_blurY: function () {
          return this.__blurY;
        },
        get_color: function () {
          return this.__color;
        },
        __class__: Sc,
        __properties__: {
          get_color: 'get_color',
          get_blurY: 'get_blurY',
          get_blurX: 'get_blurX',
          get_alpha: 'get_alpha',
        },
      });
      var vj = function (a) {
        null != a && 16 == a.get_length()
          ? (this.rawData = a.concat(null))
          : (this.rawData = la.toFloatVector(
              null,
              null,
              null,
              [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            ));
      };
      g['openfl.geom.Matrix3D'] = vj;
      vj.__name__ = 'openfl.geom.Matrix3D';
      vj.prototype = {
        append: function (a) {
          var b = this.rawData.get(0),
            c = this.rawData.get(4),
            d = this.rawData.get(8),
            f = this.rawData.get(12),
            h = this.rawData.get(1),
            k = this.rawData.get(5),
            g = this.rawData.get(9),
            q = this.rawData.get(13),
            u = this.rawData.get(2),
            r = this.rawData.get(6),
            m = this.rawData.get(10),
            l = this.rawData.get(14),
            x = this.rawData.get(3),
            D = this.rawData.get(7),
            w = this.rawData.get(11),
            J = this.rawData.get(15),
            y = a.rawData.get(0),
            z = a.rawData.get(4),
            C = a.rawData.get(8),
            t = a.rawData.get(12),
            v = a.rawData.get(1),
            G = a.rawData.get(5),
            F = a.rawData.get(9),
            I = a.rawData.get(13),
            K = a.rawData.get(2),
            eb = a.rawData.get(6),
            H = a.rawData.get(10),
            O = a.rawData.get(14),
            kb = a.rawData.get(3),
            Wa = a.rawData.get(7),
            Y = a.rawData.get(11);
          a = a.rawData.get(15);
          this.rawData.set(0, b * y + h * z + u * C + x * t);
          this.rawData.set(1, b * v + h * G + u * F + x * I);
          this.rawData.set(2, b * K + h * eb + u * H + x * O);
          this.rawData.set(3, b * kb + h * Wa + u * Y + x * a);
          this.rawData.set(4, c * y + k * z + r * C + D * t);
          this.rawData.set(5, c * v + k * G + r * F + D * I);
          this.rawData.set(6, c * K + k * eb + r * H + D * O);
          this.rawData.set(7, c * kb + k * Wa + r * Y + D * a);
          this.rawData.set(8, d * y + g * z + m * C + w * t);
          this.rawData.set(9, d * v + g * G + m * F + w * I);
          this.rawData.set(10, d * K + g * eb + m * H + w * O);
          this.rawData.set(11, d * kb + g * Wa + m * Y + w * a);
          this.rawData.set(12, f * y + q * z + l * C + J * t);
          this.rawData.set(13, f * v + q * G + l * F + J * I);
          this.rawData.set(14, f * K + q * eb + l * H + J * O);
          this.rawData.set(15, f * kb + q * Wa + l * Y + J * a);
        },
        appendTranslation: function (a, b, c) {
          var d = this.rawData;
          d.set(12, d.get(12) + a);
          d = this.rawData;
          d.set(13, d.get(13) + b);
          d = this.rawData;
          d.set(14, d.get(14) + c);
        },
        copyRawDataFrom: function (a, b, c) {
          null == c && (c = !1);
          null == b && (b = 0);
          c && this.transpose();
          for (var d = 0, f = a.get_length() - b; d < f; ) {
            var h = d++;
            this.rawData.set(h, a.get(h + b));
          }
          c && this.transpose();
        },
        identity: function () {
          this.rawData = la.toFloatVector(
            null,
            null,
            null,
            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          );
        },
        transpose: function () {
          var a = this.rawData.copy();
          this.rawData.set(1, a.get(4));
          this.rawData.set(2, a.get(8));
          this.rawData.set(3, a.get(12));
          this.rawData.set(4, a.get(1));
          this.rawData.set(6, a.get(9));
          this.rawData.set(7, a.get(13));
          this.rawData.set(8, a.get(2));
          this.rawData.set(9, a.get(6));
          this.rawData.set(11, a.get(14));
          this.rawData.set(12, a.get(3));
          this.rawData.set(13, a.get(7));
          this.rawData.set(14, a.get(11));
        },
        __class__: vj,
      };
      var Nh = function (a) {
        this.__colorTransform = new Tb();
        this.concatenatedColorTransform = new Tb();
        this.pixelBounds = new na();
        this.__displayObject = a;
        this.__hasMatrix = !0;
      };
      g['openfl.geom.Transform'] = Nh;
      Nh.__name__ = 'openfl.geom.Transform';
      Nh.prototype = {
        get_colorTransform: function () {
          return this.__colorTransform.__clone();
        },
        get_matrix: function () {
          return this.__hasMatrix
            ? this.__displayObject.__transform.clone()
            : null;
        },
        set_matrix: function (a) {
          if (null == a) return ((this.__hasMatrix = !1), null);
          this.__hasMatrix = !0;
          this.__hasMatrix3D = !1;
          null != this.__displayObject &&
            this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
          return a;
        },
        __setTransform: function (a, b, c, d, f, h) {
          if (null != this.__displayObject) {
            var k = this.__displayObject.__transform;
            if (
              k.a != a ||
              k.b != b ||
              k.c != c ||
              k.d != d ||
              k.tx != f ||
              k.ty != h
            ) {
              var g = 0 == b ? a : Math.sqrt(a * a + b * b);
              var q = 0 == c ? d : Math.sqrt(c * c + d * d);
              this.__displayObject.__scaleX = g;
              this.__displayObject.__scaleY = q;
              g = (180 / Math.PI) * Math.atan2(d, c) - 90;
              g != this.__displayObject.__rotation &&
                ((this.__displayObject.__rotation = g),
                (g *= Math.PI / 180),
                (this.__displayObject.__rotationSine = Math.sin(g)),
                (this.__displayObject.__rotationCosine = Math.cos(g)));
              k.a = a;
              k.b = b;
              k.c = c;
              k.d = d;
              k.tx = f;
              k.ty = h;
              this.__displayObject.__setTransformDirty();
            }
          }
        },
        __class__: Nh,
        __properties__: {
          set_matrix: 'set_matrix',
          get_matrix: 'get_matrix',
          get_colorTransform: 'get_colorTransform',
        },
      };
      var bh = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c;
      };
      g['openfl.geom.Vector3D'] = bh;
      bh.__name__ = 'openfl.geom.Vector3D';
      bh.prototype = { __class__: bh };
      var Pk = function (a, b) {
        this.__webAudioContext = null;
        this.__urlLoading = !1;
        oa.call(this, this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.isBuffering = !1;
        this.url = null;
        null != a && this.load(a, b);
        null == a &&
          null != Ge.context &&
          'web' == Ge.context.type &&
          (this.__webAudioContext = Ge.context.web);
      };
      g['openfl.media.Sound'] = Pk;
      Pk.__name__ = 'openfl.media.Sound';
      Pk.__super__ = oa;
      Pk.prototype = v(oa.prototype, {
        load: function (a, b) {
          var c = this;
          this.url = a.url;
          this.__urlLoading = !0;
          this.dispatchEvent(new wa('open'));
          a = Fa.getLibrary('default');
          if (
            null != a &&
            Object.prototype.hasOwnProperty.call(
              a.cachedAudioBuffers.h,
              this.url,
            )
          )
            ((a = a.cachedAudioBuffers.h[this.url]),
              (b = null != a && null != a.data ? a.data.byteLength : 0),
              this.AudioBuffer_onURLProgress(b, b),
              this.AudioBuffer_onURLLoad(a));
          else
            Bc.loadFromFile(this.url)
              .onProgress(l(this, this.AudioBuffer_onURLProgress))
              .onComplete(l(this, this.AudioBuffer_onURLLoad))
              .onError(function (a) {
                c.AudioBuffer_onURLLoad(null);
              });
        },
        AudioBuffer_onURLLoad: function (a) {
          this.__urlLoading = !1;
          null == a
            ? this.dispatchEvent(new Qg('ioError'))
            : ((this.__buffer = a),
              this.dispatchEvent(new wa('complete')),
              null != this.__pendingSoundChannel &&
                ((this.__pendingAudioSource.buffer = this.__buffer),
                this.__pendingAudioSource.init(),
                this.__pendingSoundChannel.__initAudioSource(
                  this.__pendingAudioSource,
                )));
          this.__pendingAudioSource = this.__pendingSoundChannel = null;
        },
        AudioBuffer_onURLProgress: function (a, b) {
          var c = new Vf('progress');
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: Pk,
      });
      var Qk = function (a, b, c) {
        this.__firstRun = !0;
        oa.call(this, this);
        this.__sound = a;
        this.rightPeak = this.leftPeak = 1;
        this.__soundTransform = null != c ? c : new cg();
        this.__initAudioSource(b);
        ve.__registerSoundChannel(this);
      };
      g['openfl.media.SoundChannel'] = Qk;
      Qk.__name__ = 'openfl.media.SoundChannel';
      Qk.__super__ = oa;
      Qk.prototype = v(oa.prototype, {
        stop: function () {
          ve.__unregisterSoundChannel(this);
          this.__isValid &&
            (null != this.__processor &&
              (this.__processor.disconnect(),
              (this.__processor = this.__processor.onaudioprocess = null)),
            this.__audioSource.stop(),
            this.__dispose());
        },
        __dispose: function () {
          this.__isValid &&
            (this.__audioSource.onComplete.remove(
              l(this, this.audioSource_onComplete),
            ),
            this.__audioSource.dispose(),
            (this.__audioSource = null),
            (this.__isValid = !1));
        },
        __startSampleData: function () {
          var a = this,
            b = this.__sound.__webAudioContext;
          if (null != b) {
            this.__sampleDataEvent = new Dj('sampleData');
            this.__sound.dispatchEvent(this.__sampleDataEvent);
            var c = this.__sampleDataEvent.getBufferSize();
            0 == c
              ? Ra.setTimeout(function () {
                  a.stop();
                  a.dispatchEvent(new wa('soundComplete'));
                }, 1)
              : ((this.__processor = b.createScriptProcessor(c, 0, 2)),
                this.__processor.connect(b.destination),
                (this.__processor.onaudioprocess = l(this, this.onSample)),
                b.resume());
          }
        },
        __updateTransform: function () {
          this.set_soundTransform(this.get_soundTransform());
        },
        __initAudioSource: function (a) {
          this.__audioSource = a;
          null != this.__audioSource &&
            (this.__audioSource.onComplete.add(
              l(this, this.audioSource_onComplete),
            ),
            (this.__isValid = !0),
            this.__audioSource.play());
        },
        get_position: function () {
          return this.__isValid
            ? this.__audioSource.get_currentTime() + this.__audioSource.offset
            : 0;
        },
        set_position: function (a) {
          if (!this.__isValid) return 0;
          this.__audioSource.set_currentTime(
            (a | 0) - this.__audioSource.offset,
          );
          return a;
        },
        get_soundTransform: function () {
          return this.__soundTransform.clone();
        },
        set_soundTransform: function (a) {
          if (null != a) {
            this.__soundTransform.pan = a.pan;
            this.__soundTransform.volume = a.volume;
            var b = ve.__soundTransform.pan + this.__soundTransform.pan;
            -1 > b && (b = -1);
            1 < b && (b = 1);
            var c = ve.__soundTransform.volume * this.__soundTransform.volume;
            this.__isValid &&
              (this.__audioSource.set_gain(c),
              (c = this.__audioSource.get_position()),
              (c.x = b),
              (c.z = -1 * Math.sqrt(1 - Math.pow(b, 2))),
              this.__audioSource.set_position(c));
          }
          return a;
        },
        audioSource_onComplete: function () {
          ve.__unregisterSoundChannel(this);
          this.__dispose();
          this.dispatchEvent(new wa('soundComplete'));
        },
        onSample: function (a) {
          if (this.__firstRun) {
            var b = !0;
            this.__firstRun = !1;
          } else
            (Td.set_length(this.__sampleDataEvent.data, 0),
              this.__sound.dispatchEvent(this.__sampleDataEvent),
              (b = cb.gt(Td.get_length(this.__sampleDataEvent.data), 0)));
          b
            ? this.__sampleDataEvent.getSamples(a)
            : (this.stop(), this.dispatchEvent(new wa('soundComplete')));
        },
        __class__: Qk,
        __properties__: {
          set_soundTransform: 'set_soundTransform',
          get_soundTransform: 'get_soundTransform',
          set_position: 'set_position',
          get_position: 'get_position',
        },
      });
      var Cl = function () {};
      g['openfl.media.SoundLoaderContext'] = Cl;
      Cl.__name__ = 'openfl.media.SoundLoaderContext';
      var cg = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 1);
        this.volume = a;
        this.pan = b;
        this.rightToRight =
          this.rightToLeft =
          this.leftToRight =
          this.leftToLeft =
            0;
      };
      g['openfl.media.SoundTransform'] = cg;
      cg.__name__ = 'openfl.media.SoundTransform';
      cg.prototype = {
        clone: function () {
          return new cg(this.volume, this.pan);
        },
        __class__: cg,
      };
      var ve = function () {};
      g['openfl.media.SoundMixer'] = ve;
      ve.__name__ = 'openfl.media.SoundMixer';
      ve.__registerSoundChannel = function (a) {
        ve.__soundChannels.push(a);
      };
      ve.__unregisterSoundChannel = function (a) {
        N.remove(ve.__soundChannels, a);
      };
      var Rk = function (a, b) {
        null == b && (b = 240);
        null == a && (a = 320);
        S.call(this);
        this.__drawableType = 8;
        this.__width = a;
        this.__height = b;
        this.__textureTime = -1;
        this.smoothing = !1;
        this.deblocking = 0;
      };
      g['openfl.media.Video'] = Rk;
      Rk.__name__ = 'openfl.media.Video';
      Rk.__super__ = S;
      Rk.prototype = v(S.prototype, {
        __enterFrame: function (a) {
          this.__renderable &&
            null != this.__stream &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __getIndexBuffer: function (a) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context
          )
            ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBufferContext = a.__context),
              (this.__indexBuffer = a.createIndexBuffer(6)),
              this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData));
          return this.__indexBuffer;
        },
        __getTexture: function (a) {
          if (null == this.__stream || null == this.__stream.__video)
            return null;
          var b = a.__context.webgl,
            c = b.RGBA,
            d = b.RGBA;
          this.__stream.__closed ||
            this.__stream.__video.currentTime == this.__textureTime ||
            (null == this.__texture &&
              (this.__texture = a.createRectangleTexture(
                this.__stream.__video.videoWidth,
                this.__stream.__video.videoHeight,
                1,
                !1,
              )),
            a.__bindGLTexture2D(this.__texture.__textureID),
            Lc.texImage2D(
              b,
              b.TEXTURE_2D,
              0,
              c,
              d,
              b.UNSIGNED_BYTE,
              this.__stream.__video,
            ),
            (this.__textureTime = this.__stream.__video.currentTime));
          return this.__texture;
        },
        __getVertexBuffer: function (a) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            this.__currentWidth != this.get_width() ||
            this.__currentHeight != this.get_height()
          )
            ((this.__currentWidth = this.get_width()),
              (this.__currentHeight = this.get_height()),
              (this.__vertexBufferData = new Float32Array(20)),
              (this.__vertexBufferData[0] = this.get_width()),
              (this.__vertexBufferData[1] = this.get_height()),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[6] = this.get_height()),
              (this.__vertexBufferData[9] = 1),
              (this.__vertexBufferData[10] = this.get_width()),
              (this.__vertexBufferData[13] = 1),
              (this.__vertexBufferContext = a.__context),
              (this.__vertexBuffer = a.createVertexBuffer(3, 5)),
              this.__vertexBuffer.uploadFromTypedArray(
                hh.toArrayBufferView(this.__vertexBufferData),
              ));
          return this.__vertexBuffer;
        },
        __hitTest: function (a, b, c, d, f, h) {
          if (
            !h.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            g = k.a * k.d - k.b * k.c;
          c = 0 == g ? -k.tx : (1 / g) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          g = k.a * k.d - k.b * k.c;
          a = 0 == g ? -k.ty : (1 / g) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height
            ? (null == d || f || d.push(h), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          var c = I.__pool.get();
          c.setTo(a, b);
          this.__globalToLocal(c, c);
          a = 0 < c.x && 0 < c.y && c.x <= this.__width && c.y <= this.__height;
          I.__pool.release(c);
          return a;
        },
        get_height: function () {
          return this.__height * this.get_scaleY();
        },
        set_height: function (a) {
          if (1 != this.get_scaleY() || a != this.__height)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleY(1);
          return (this.__height = a);
        },
        get_width: function () {
          return this.__width * this.__scaleX;
        },
        set_width: function (a) {
          if (1 != this.__scaleX || this.__width != a)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleX(1);
          return (this.__width = a);
        },
        __class__: Rk,
      });
      var Sh = function (a, b, c) {
        this.description = a;
        this.extension = b;
        this.macType = c;
      };
      g['openfl.net.FileFilter'] = Sh;
      Sh.__name__ = 'openfl.net.FileFilter';
      Sh.prototype = { __class__: Sh };
      var Gf = function () {
        oa.call(this);
        this.__inputControl = window.document.createElement('input');
        this.__inputControl.setAttribute('type', 'file');
        this.__inputControl.onclick = function (a) {
          a.cancelBubble = !0;
          a.stopPropagation();
        };
      };
      g['openfl.net.FileReference'] = Gf;
      Gf.__name__ = 'openfl.net.FileReference';
      Gf.__super__ = oa;
      Gf.prototype = v(oa.prototype, {
        browse: function (a) {
          var b = this,
            c = (this.__path = this.__data = null);
          if (null != a) {
            c = [];
            for (var d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              c.push(O.replace(O.replace(f.extension, '*.', '.'), ';', ','));
            }
            c = c.join(',');
          }
          null != c
            ? this.__inputControl.setAttribute('accept', c)
            : this.__inputControl.removeAttribute('accept');
          this.__inputControl.onchange = function () {
            if (0 == b.__inputControl.files.length)
              b.dispatchEvent(new wa('cancel'));
            else {
              var a = b.__inputControl.files[0],
                c = new Date(a.lastModified);
              b.modificationDate = c;
              b.creationDate = b.get_modificationDate();
              b.size = a.size;
              c = Ud.extension(a.name);
              b.type = '.' + c;
              b.name = Ud.withoutDirectory(a.name);
              b.__path = a.name;
              b.dispatchEvent(new wa('select'));
            }
          };
          this.__inputControl.click();
          return !0;
        },
        load: function () {
          var a = this,
            b = this.__inputControl.files[0],
            c = new FileReader();
          c.onload = function (b) {
            a.data = Td.fromArrayBuffer(b.target.result);
            a.openFileDialog_onComplete();
          };
          c.onerror = function (b) {
            a.dispatchEvent(new Qg('ioError'));
          };
          c.readAsArrayBuffer(b);
        },
        openFileDialog_onComplete: function () {
          this.dispatchEvent(new wa('complete'));
        },
        get_modificationDate: function () {
          return this.modificationDate;
        },
        __class__: Gf,
        __properties__: { get_modificationDate: 'get_modificationDate' },
      });
      var Sk = function () {
        oa.call(this);
      };
      g['openfl.net.NetConnection'] = Sk;
      Sk.__name__ = 'openfl.net.NetConnection';
      Sk.__super__ = oa;
      Sk.prototype = v(oa.prototype, { __class__: Sk });
      var Tk = function (a, b) {
        oa.call(this);
        this.__connection = a;
        this.__soundTransform = new cg();
        this.__video = window.document.createElement('video');
        this.__video.setAttribute('playsinline', '');
        this.__video.setAttribute('webkit-playsinline', '');
        this.__video.setAttribute('crossorigin', 'anonymous');
        this.__video.addEventListener('error', l(this, this.video_onError), !1);
        this.__video.addEventListener(
          'waiting',
          l(this, this.video_onWaiting),
          !1,
        );
        this.__video.addEventListener('ended', l(this, this.video_onEnd), !1);
        this.__video.addEventListener('pause', l(this, this.video_onPause), !1);
        this.__video.addEventListener(
          'seeking',
          l(this, this.video_onSeeking),
          !1,
        );
        this.__video.addEventListener(
          'playing',
          l(this, this.video_onPlaying),
          !1,
        );
        this.__video.addEventListener(
          'timeupdate',
          l(this, this.video_onTimeUpdate),
          !1,
        );
        this.__video.addEventListener(
          'loadstart',
          l(this, this.video_onLoadStart),
          !1,
        );
        this.__video.addEventListener(
          'stalled',
          l(this, this.video_onStalled),
          !1,
        );
        this.__video.addEventListener(
          'durationchanged',
          l(this, this.video_onDurationChanged),
          !1,
        );
        this.__video.addEventListener(
          'canplay',
          l(this, this.video_onCanPlay),
          !1,
        );
        this.__video.addEventListener(
          'canplaythrough',
          l(this, this.video_onCanPlayThrough),
          !1,
        );
        this.__video.addEventListener(
          'loadedmetadata',
          l(this, this.video_onLoadMetaData),
          !1,
        );
      };
      g['openfl.net.NetStream'] = Tk;
      Tk.__name__ = 'openfl.net.NetStream';
      Tk.__super__ = oa;
      Tk.prototype = v(oa.prototype, {
        __dispatchStatus: function (a) {
          a = new Cj('netStatus', !1, !1, { code: a });
          this.__connection.dispatchEvent(a);
          this.dispatchEvent(a);
        },
        __playStatus: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onPlayStatus;
              b({
                code: a,
                duration: this.__video.duration,
                position: this.__video.currentTime,
                speed: this.__video.playbackRate,
                start: this.__video.startTime,
              });
            } catch (c) {
              Ta.lastError = c;
            }
        },
        video_onCanPlay: function (a) {
          this.__playStatus('NetStream.Play.canplay');
        },
        video_onCanPlayThrough: function (a) {
          this.__playStatus('NetStream.Play.canplaythrough');
        },
        video_onDurationChanged: function (a) {
          this.__playStatus('NetStream.Play.durationchanged');
        },
        video_onEnd: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__dispatchStatus('NetStream.Play.Complete');
          this.__playStatus('NetStream.Play.Complete');
        },
        video_onError: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__playStatus('NetStream.Play.error');
        },
        video_onLoadMetaData: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onMetaData;
              b({
                width: this.__video.videoWidth,
                height: this.__video.videoHeight,
                duration: this.__video.duration,
              });
            } catch (c) {
              Ta.lastError = c;
            }
        },
        video_onLoadStart: function (a) {
          this.__playStatus('NetStream.Play.loadstart');
        },
        video_onPause: function (a) {
          this.__playStatus('NetStream.Play.pause');
        },
        video_onPlaying: function (a) {
          this.__dispatchStatus('NetStream.Play.Start');
          this.__playStatus('NetStream.Play.playing');
        },
        video_onSeeking: function (a) {
          this.__playStatus('NetStream.Play.seeking');
          this.__dispatchStatus('NetStream.Seek.Complete');
        },
        video_onStalled: function (a) {
          this.__playStatus('NetStream.Play.stalled');
        },
        video_onTimeUpdate: function (a) {
          null != this.__video &&
            ((this.time = this.__video.currentTime),
            this.__playStatus('NetStream.Play.timeupdate'));
        },
        video_onWaiting: function (a) {
          this.__playStatus('NetStream.Play.waiting');
        },
        __class__: Tk,
      });
      var $c = function () {
        oa.call(this);
        this.client = this;
        this.objectEncoding = $c.defaultObjectEncoding;
      };
      g['openfl.net.SharedObject'] = $c;
      $c.__name__ = 'openfl.net.SharedObject';
      $c.getLocal = function (a, b, c) {
        c = ' ~%&\\;:"\',<>?#'.split('');
        var d = !0;
        if (null == a || '' == a) d = !1;
        else
          for (var f = 0; f < c.length; ) {
            var h = c[f];
            ++f;
            if (-1 < a.indexOf(h)) {
              d = !1;
              break;
            }
          }
        if (!d) throw new Vb('Error #2134: Cannot create SharedObject.');
        null == $c.__sharedObjects &&
          (($c.__sharedObjects = new Pa()),
          null != A.current && A.current.onExit.add($c.application_onExit));
        c = b + '/' + a;
        if (!Object.prototype.hasOwnProperty.call($c.__sharedObjects.h, c)) {
          d = null;
          try {
            var k = qf.getLocalStorage();
            null == b &&
              (null != k &&
                ((d = k.getItem(window.location.href + ':' + a)),
                k.removeItem(window.location.href + ':' + a)),
              (b = window.location.pathname));
            null != k && null == d && (d = k.getItem(b + ':' + a));
          } catch (p) {
            Ta.lastError = p;
          }
          k = new $c();
          k.data = {};
          k.__localPath = b;
          k.__name = a;
          if (null != d && '' != d)
            try {
              var g = new pd(d);
              g.setResolver({
                resolveEnum: w.resolveEnum,
                resolveClass: $c.__resolveClass,
              });
              k.data = g.unserialize();
            } catch (p) {
              Ta.lastError = p;
            }
          $c.__sharedObjects.h[c] = k;
        }
        return $c.__sharedObjects.h[c];
      };
      $c.__resolveClass = function (a) {
        return null != a
          ? (O.startsWith(a, 'neash.') &&
              (a = O.replace(a, 'neash.', 'openfl.')),
            O.startsWith(a, 'native.') &&
              (a = O.replace(a, 'native.', 'openfl.')),
            O.startsWith(a, 'flash.') &&
              (a = O.replace(a, 'flash.', 'openfl.')),
            O.startsWith(a, 'openfl._v2.') &&
              (a = O.replace(a, 'openfl._v2.', 'openfl.')),
            O.startsWith(a, 'openfl._legacy.') &&
              (a = O.replace(a, 'openfl._legacy.', 'openfl.')),
            g[a])
          : null;
      };
      $c.application_onExit = function (a) {
        a = $c.__sharedObjects.h;
        for (var b = Object.keys(a), c = b.length, d = 0; d < c; )
          a[b[d++]].flush();
      };
      $c.__super__ = oa;
      $c.prototype = v(oa.prototype, {
        flush: function (a) {
          if (0 == ya.fields(this.data).length) return 0;
          a = Bd.run(this.data);
          try {
            var b = qf.getLocalStorage();
            null != b &&
              (b.removeItem(this.__localPath + ':' + this.__name),
              b.setItem(this.__localPath + ':' + this.__name, a));
          } catch (c) {
            return ((Ta.lastError = c), 1);
          }
          return 0;
        },
        __class__: $c,
      });
      var zi = function (a) {
        oa.call(this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.dataFormat = 1;
        null != a && this.load(a);
      };
      g['openfl.net.URLLoader'] = zi;
      zi.__name__ = 'openfl.net.URLLoader';
      zi.__super__ = oa;
      zi.prototype = v(oa.prototype, {
        load: function (a) {
          var b = this,
            c = new wa('open');
          this.dispatchEvent(c);
          0 == this.dataFormat
            ? ((c = new Vi()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(l(this, this.httpRequest_onProgress))
                .onError(l(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = a;
                  a = new wa('complete');
                  b.dispatchEvent(a);
                }))
            : ((c = new Fg()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(l(this, this.httpRequest_onProgress))
                .onError(l(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = 2 == b.dataFormat ? Dl._new(a) : a;
                  a = new wa('complete');
                  b.dispatchEvent(a);
                }));
        },
        __dispatchResponseStatus: function () {
          var a = new Hh(
            'httpResponseStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          a.responseURL = this.__httpRequest.uri;
          var b = [];
          if (
            this.__httpRequest.enableResponseHeaders &&
            null != this.__httpRequest.responseHeaders
          )
            for (
              var c = 0, d = this.__httpRequest.responseHeaders;
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              b.push(new Uk(f.name, f.value));
            }
          a.responseHeaders = b;
          this.dispatchEvent(a);
        },
        __dispatchStatus: function () {
          var a = new Hh(
            'httpStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          this.dispatchEvent(a);
        },
        __prepareRequest: function (a, b) {
          this.__httpRequest = a;
          this.__httpRequest.uri = b.url;
          this.__httpRequest.method = b.method;
          if (null != b.data)
            if (w.typeof(b.data) == J.TObject) {
              var c = ya.fields(b.data);
              for (a = 0; a < c.length; ) {
                var d = c[a];
                ++a;
                this.__httpRequest.formData.h[d] = ya.field(b.data, d);
              }
            } else
              this.__httpRequest.data =
                b.data instanceof zb ? b.data : zb.ofString(H.string(b.data));
          this.__httpRequest.contentType = b.contentType;
          if (null != b.requestHeaders)
            for (a = 0, c = b.requestHeaders; a < c.length; )
              ((d = c[a]),
                ++a,
                this.__httpRequest.headers.push(new Ni(d.name, d.value)));
          this.__httpRequest.followRedirects = b.followRedirects;
          this.__httpRequest.timeout = b.idleTimeout | 0;
          this.__httpRequest.manageCookies = b.manageCookies;
          this.__httpRequest.withCredentials = b.withCredentials;
          this.__httpRequest.userAgent = b.userAgent;
          this.__httpRequest.enableResponseHeaders = !0;
        },
        httpRequest_onError: function (a) {
          this.__dispatchResponseStatus();
          this.__dispatchStatus();
          this.__httpRequest instanceof tf
            ? (this.data = this.__httpRequest.responseData)
            : this.__httpRequest instanceof Fg &&
              (this.data = this.__httpRequest.responseData);
          var b = 403 == a ? new Ej('securityError') : new Qg('ioError');
          b.text = H.string(a);
          this.dispatchEvent(b);
        },
        httpRequest_onProgress: function (a, b) {
          var c = new Vf('progress');
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: zi,
      });
      var If = function (a) {
        this.withCredentials = !1;
        null != a && (this.url = a);
        this.contentType = null;
        this.followRedirects = xf.followRedirects;
        this.idleTimeout = 0 < xf.idleTimeout ? xf.idleTimeout : 3e4;
        this.manageCookies = xf.manageCookies;
        this.method = 'GET';
        this.requestHeaders = [];
        this.userAgent = xf.userAgent;
      };
      g['openfl.net.URLRequest'] = If;
      If.__name__ = 'openfl.net.URLRequest';
      If.prototype = { __class__: If };
      var xf = function () {};
      g['openfl.net.URLRequestDefaults'] = xf;
      xf.__name__ = 'openfl.net.URLRequestDefaults';
      var Uk = function (a, b) {
        null == b && (b = '');
        null == a && (a = '');
        this.name = a;
        this.value = b;
      };
      g['openfl.net.URLRequestHeader'] = Uk;
      Uk.__name__ = 'openfl.net.URLRequestHeader';
      Uk.prototype = { __class__: Uk };
      var Dl = {
          _new: function (a) {
            var b = {};
            null != a && Dl.decode(b, a);
            return b;
          },
          decode: function (a, b) {
            for (var c = ya.fields(a), d = 0; d < c.length; ) {
              var f = c[d];
              ++d;
              ya.deleteField(a, f);
            }
            c = b.split(';').join('&').split('&');
            for (d = 0; d < c.length; )
              if (((f = c[d]), ++d, (b = f.indexOf('=')), 0 < b)) {
                var h = N.substr(f, 0, b);
                h = decodeURIComponent(h.split('+').join(' '));
                f = N.substr(f, b + 1, null);
                a[h] = decodeURIComponent(f.split('+').join(' '));
              } else
                0 != b && (a[decodeURIComponent(f.split('+').join(' '))] = '');
          },
        },
        Ig = function (a) {
          this.parentDomain = null != a ? a : Ig.currentDomain;
        };
      g['openfl.system.ApplicationDomain'] = Ig;
      Ig.__name__ = 'openfl.system.ApplicationDomain';
      Ig.prototype = { __class__: Ig };
      var Uj = function () {};
      g['openfl.system.Capabilities'] = Uj;
      Uj.__name__ = 'openfl.system.Capabilities';
      Uj.__properties__ = { get_screenDPI: 'get_screenDPI' };
      Uj.get_screenDPI = function () {
        var a = null != Dc.application ? Dc.application.__window : null,
          b = 72;
        null != a && (b *= a.__scale);
        return b;
      };
      var Vk = function () {
        oa.call(this);
        this.clear();
      };
      g['openfl.text.StyleSheet'] = Vk;
      Vk.__name__ = 'openfl.text.StyleSheet';
      Vk.__super__ = oa;
      Vk.prototype = v(oa.prototype, {
        clear: function () {
          this.__styleNamesDirty = !1;
          this.__styleNames = null;
          this.__styles = new Pa();
        },
        __applyStyle: function (a, b) {
          a = a.toLowerCase();
          Object.prototype.hasOwnProperty.call(this.__styles.h, a) &&
            this.__applyStyleObject(this.__styles.h[a], b);
        },
        __applyStyleObject: function (a, b) {
          if (null != a) {
            var c = new ja('[0-9A-Fa-f]+', ''),
              d = new ja('[0-9]+', '');
            var f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'color')
              ? ((f = Sd.__get(a, 'color')),
                (f = c.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.color = H.parseInt('0x' + c.matched(0)));
            f = a;
            null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontFamily') &&
              ((f = Sd.__get(a, 'fontFamily')),
              (b.font = this.__parseFont(null == f ? null : H.string(f))));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'fontSize')
              ? ((f = Sd.__get(a, 'fontSize')),
                (f = d.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.size = H.parseInt(d.matched(0)));
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontStyle')
            )
              switch (Sd.__get(a, 'fontStyle')) {
                case 'italic':
                  b.italic = !0;
                  break;
                case 'normal':
                  b.italic = !1;
              }
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontWeight')
            )
              switch (Sd.__get(a, 'fontWeight')) {
                case 'bold':
                  b.bold = !0;
                  break;
                case 'normal':
                  b.bold = !1;
              }
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'leading')
              ? ((f = Sd.__get(a, 'leading')),
                (f = d.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.leading = H.parseInt(d.matched(0)));
            f = a;
            null != f &&
            Object.prototype.hasOwnProperty.call(f, 'letterSpacing')
              ? ((f = Sd.__get(a, 'letterSpacing')),
                (f = d.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.letterSpacing = parseFloat(d.matched(0)));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'marginLeft')
              ? ((f = Sd.__get(a, 'marginLeft')),
                (f = d.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.leftMargin = H.parseInt(d.matched(0)));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'marginRight')
              ? ((f = Sd.__get(a, 'marginRight')),
                (f = d.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.rightMargin = H.parseInt(d.matched(0)));
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'textAlign')
            )
              switch (Sd.__get(a, 'textAlign')) {
                case 'center':
                  b.align = 0;
                  break;
                case 'justify':
                  b.align = 2;
                  break;
                case 'left':
                  b.align = 3;
                  break;
                case 'right':
                  b.align = 4;
              }
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'textDecoration')
            )
              switch (Sd.__get(a, 'textDecoration')) {
                case 'none':
                  b.underline = !1;
                  break;
                case 'underline':
                  b.underline = !0;
              }
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'textIndent')
              ? ((f = Sd.__get(a, 'textIndent')),
                (f = d.match(null == f ? null : H.string(f))))
              : (f = !1);
            f && (b.blockIndent = H.parseInt(d.matched(0)));
          }
        },
        __parseFont: function (a) {
          if (null == a) return null;
          -1 < a.indexOf(',') && (a = N.substr(a, 0, a.indexOf(',')));
          switch (a) {
            case 'mono':
              return '_typewriter';
            case 'sans-serif':
              return '_sans';
            case 'serif':
              return '_serif';
            default:
              return a;
          }
        },
        __class__: Vk,
      });
      var we = function (a, b, c, d, f, h, k, g, q, u, r, m, l) {
        this.font = a;
        this.size = b;
        this.color = c;
        this.bold = d;
        this.italic = f;
        this.underline = h;
        this.url = k;
        this.target = g;
        this.align = q;
        this.leftMargin = u;
        this.rightMargin = r;
        this.indent = m;
        this.leading = l;
      };
      g['openfl.text.TextFormat'] = we;
      we.__name__ = 'openfl.text.TextFormat';
      we.prototype = {
        clone: function () {
          var a = new we(
            this.font,
            this.size,
            this.color,
            this.bold,
            this.italic,
            this.underline,
            this.url,
            this.target,
          );
          a.align = this.align;
          a.leftMargin = this.leftMargin;
          a.rightMargin = this.rightMargin;
          a.indent = this.indent;
          a.leading = this.leading;
          a.blockIndent = this.blockIndent;
          a.bullet = this.bullet;
          a.kerning = this.kerning;
          a.letterSpacing = this.letterSpacing;
          a.tabStops = this.tabStops;
          a.__ascent = this.__ascent;
          a.__descent = this.__descent;
          a.__cacheKey = this.__toCacheKey();
          return a;
        },
        __merge: function (a) {
          null != a.font && (this.font = a.font);
          null != a.size && (this.size = a.size);
          null != a.color && (this.color = a.color);
          null != a.bold && (this.bold = a.bold);
          null != a.italic && (this.italic = a.italic);
          null != a.underline && (this.underline = a.underline);
          null != a.url && (this.url = a.url);
          null != a.target && (this.target = a.target);
          null != a.align && (this.align = a.align);
          null != a.leftMargin && (this.leftMargin = a.leftMargin);
          null != a.rightMargin && (this.rightMargin = a.rightMargin);
          null != a.indent && (this.indent = a.indent);
          null != a.leading && (this.leading = a.leading);
          null != a.blockIndent && (this.blockIndent = a.blockIndent);
          null != a.bullet && (this.bullet = a.bullet);
          null != a.kerning && (this.kerning = a.kerning);
          null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
          null != a.tabStops && (this.tabStops = a.tabStops);
          null != a.__ascent && (this.__ascent = a.__ascent);
          null != a.__descent && (this.__descent = a.__descent);
          this.__toCacheKey();
        },
        __toCacheKey: function () {
          return (this.__cacheKey =
            '' +
            this.font +
            this.size +
            H.string(this.bold) +
            H.string(this.italic));
        },
        __class__: we,
      };
      var Pl = {
          fromString: function (a) {
            switch (a) {
              case 'center':
                return 0;
              case 'end':
                return 1;
              case 'justify':
                return 2;
              case 'left':
                return 3;
              case 'right':
                return 4;
              case 'start':
                return 5;
              default:
                return null;
            }
          },
        },
        Ih = function (a, b) {
          this.__collisions = [];
          this.__wordMap = new mc();
          this.set(a, b);
        };
      g['openfl.text._internal.CacheMeasurement'] = Ih;
      Ih.__name__ = 'openfl.text._internal.CacheMeasurement';
      Ih.prototype = {
        set: function (a, b) {
          this.__addCollision(a, b);
        },
        get: function (a) {
          return 1 < this.__collisions.length
            ? this.__wordMap.h[this.__collisions.indexOf(a)]
            : this.__wordMap.h[0];
        },
        __addCollision: function (a, b) {
          if (!this.exists(a)) {
            var c = this.__wordMap;
            a = this.__collisions.push(a) - 1;
            c.h[a] = b;
          }
        },
        exists: function (a) {
          return 0 == this.__collisions.length
            ? !1
            : -1 < this.__collisions.indexOf(a);
        },
        __class__: Ih,
      };
      var La = function () {};
      g['openfl.text._internal.HTMLParser'] = La;
      La.__name__ = 'openfl.text._internal.HTMLParser';
      La.parse = function (a, b, c, d, f) {
        a = b
          ? a.replace(La.__regexBreakTag.r, '\n')
          : a.replace(La.__regexBreakTag.r, '');
        a = a.replace(La.__regexEntityNbsp.r, ' ');
        a = La.__regexCharEntity.map(a, function (a) {
          var b = a.matched(1),
            c = a.matched(2);
          return null != b && ((b = H.parseInt(b)), null != b)
            ? String.fromCodePoint(b)
            : null != c && ((c = H.parseInt('0' + c)), null != c)
              ? String.fromCodePoint(c)
              : a.matched(0);
        });
        var h = a.split('<');
        if (1 == h.length) {
          a = La.__htmlUnescape(a.replace(La.__regexHTMLTag.r, ''));
          if (1 < f.get_length()) {
            var k = f.get_length() - 1;
            f.__tempIndex = 1;
            for (var g = 0, q = []; g < q.length; ) {
              var u = q[g++];
              f.insertAt(f.__tempIndex, u);
              f.__tempIndex++;
            }
            f.splice(f.__tempIndex, k);
          }
          b = f.get(0);
          b.format = d;
          b.start = 0;
          b.end = a.length;
        } else {
          k = f.get_length();
          g = f.__tempIndex = 0;
          for (q = []; g < q.length; )
            ((u = q[g++]), f.insertAt(f.__tempIndex, u), f.__tempIndex++);
          f.splice(f.__tempIndex, k);
          a = '';
          k = [d.clone()];
          g = [];
          u = !1;
          for (q = 0; q < h.length; ) {
            var r = h[q];
            ++q;
            if ('' != r) {
              var m = '/' == N.substr(r, 0, 1),
                l = r.indexOf('>'),
                x = l + 1,
                D = r.indexOf(' ');
              D = r.substring(m ? 1 : 0, -1 < D && D < l ? D : l).toLowerCase();
              if (m)
                0 != g.length &&
                  D == g[g.length - 1] &&
                  (g.pop(),
                  k.pop(),
                  (m = k[k.length - 1].clone()),
                  ('p' == D || 'li' == D) &&
                    0 < f.get_length() &&
                    (b && (a += '\n'), (u = !0)),
                  x < r.length &&
                    ((u = La.__htmlUnescape(N.substr(r, x, null))),
                    f.push(new od(m, a.length, a.length + u.length)),
                    (a += u),
                    (u = !1)));
              else if (((m = k[k.length - 1].clone()), -1 < l)) {
                null != c &&
                  (c.__applyStyle(D, m),
                  La.__regexClass.match(r) &&
                    (c.__applyStyle(
                      '.' + La.__getAttributeMatch(La.__regexClass),
                      m,
                    ),
                    c.__applyStyle(
                      D + '.' + La.__getAttributeMatch(La.__regexClass),
                      m,
                    )));
                switch (D) {
                  case 'a':
                    null != c && c.__applyStyle('a:link', m);
                    La.__regexHref.match(r) &&
                      (m.url = La.__getAttributeMatch(La.__regexHref));
                    break;
                  case 'b':
                    m.bold = !0;
                    break;
                  case 'em':
                  case 'i':
                    m.italic = !0;
                    break;
                  case 'font':
                    La.__regexFace.match(r) &&
                      (m.font = La.__getAttributeMatch(La.__regexFace));
                    La.__regexColor.match(r) &&
                      (m.color = H.parseInt(
                        '0x' + La.__getAttributeMatch(La.__regexColor),
                      ));
                    if (La.__regexSize.match(r)) {
                      l = La.__getAttributeMatch(La.__regexSize);
                      var w = N.cca(l, 0);
                      m.size =
                        43 == w || 45 == w
                          ? (2 <= k.length ? k[k.length - 2] : d).size +
                            H.parseInt(l)
                          : H.parseInt(l);
                    }
                    break;
                  case 'li':
                    0 < f.get_length() && !u && (a += '\n');
                    l = m.clone();
                    l.underline = !1;
                    f.push(new od(l, a.length, a.length + 2));
                    a += '\u2022 ';
                    break;
                  case 'p':
                    0 < f.get_length() && !u && (a += '\n');
                    La.__regexAlign.match(r) &&
                      ((l = La.__getAttributeMatch(
                        La.__regexAlign,
                      ).toLowerCase()),
                      (m.align = Pl.fromString(l)));
                    break;
                  case 'textformat':
                    La.__regexBlockIndent.match(r) &&
                      (m.blockIndent = H.parseInt(
                        La.__getAttributeMatch(La.__regexBlockIndent),
                      ));
                    La.__regexIndent.match(r) &&
                      (m.indent = H.parseInt(
                        La.__getAttributeMatch(La.__regexIndent),
                      ));
                    La.__regexLeading.match(r) &&
                      (m.leading = H.parseInt(
                        La.__getAttributeMatch(La.__regexLeading),
                      ));
                    La.__regexLeftMargin.match(r) &&
                      (m.leftMargin = H.parseInt(
                        La.__getAttributeMatch(La.__regexLeftMargin),
                      ));
                    La.__regexRightMargin.match(r) &&
                      (m.rightMargin = H.parseInt(
                        La.__getAttributeMatch(La.__regexRightMargin),
                      ));
                    if (La.__regexTabStops.match(r)) {
                      l = La.__getAttributeMatch(La.__regexTabStops).split(' ');
                      w = [];
                      for (var J = 0; J < l.length; ) {
                        var y = l[J];
                        ++J;
                        w.push(H.parseInt(y));
                      }
                      m.tabStops = w;
                    }
                    break;
                  case 'u':
                    m.underline = !0;
                }
                k.push(m);
                g.push(D);
                x < r.length &&
                  ((u = La.__htmlUnescape(r.substring(x))),
                  f.push(new od(m, a.length, a.length + u.length)),
                  (a += u),
                  (u = !1));
              } else
                ((u = La.__htmlUnescape(r)),
                  f.push(new od(m, a.length, a.length + u.length)),
                  (a += u),
                  (u = !1));
            }
          }
          0 == f.get_length() && f.push(new od(k[0], 0, 0));
        }
        return a;
      };
      La.__getAttributeMatch = function (a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3);
      };
      La.__htmlUnescape = function (a) {
        a = a.replace(La.__regexEntityApos.r, "'");
        return O.htmlUnescape(a);
      };
      var Tg = function () {
        this.__shortWordMap = new Pa();
        this.__longWordMap = new Pa();
      };
      g['openfl.text._internal.ShapeCache'] = Tg;
      Tg.__name__ = 'openfl.text._internal.ShapeCache';
      Tg.hashFunction = function (a) {
        for (var b = 0, c, d = 0, f = a.length; d < f; )
          ((c = d++), (c = N.cca(a, c)), (b = (b << 5) - b + c), (b |= 0));
        return b;
      };
      Tg.prototype = {
        cache: function (a, b, c) {
          a = a.format.__cacheKey;
          return 15 < c.length
            ? this.__cacheLongWord(c, a, b)
            : this.__cacheShortWord(c, a, b);
        },
        __cacheShortWord: function (a, b, c) {
          if (Object.prototype.hasOwnProperty.call(this.__shortWordMap.h, b)) {
            var d = this.__shortWordMap.h[b];
            if (Object.prototype.hasOwnProperty.call(d.h, a)) return d.h[a];
            var f = c();
            d.h[a] = f;
          } else
            ((d = new Pa()),
              (f = c()),
              (d.h[a] = f),
              (this.__shortWordMap.h[b] = d));
          return c();
        },
        __cacheLongWord: function (a, b, c) {
          var d = Tg.hashFunction(a);
          if (Object.prototype.hasOwnProperty.call(this.__longWordMap.h, b)) {
            var f = this.__longWordMap.h[b];
            if (f.h.hasOwnProperty(d)) {
              var h = f.h[d];
              if (h.exists(a)) return h.get(a);
              h.set(a, c());
            } else ((h = new Ih(a, c())), (f.h[d] = h));
          } else
            ((f = new mc()),
              (h = new Ih(a, c())),
              (h.hash = d),
              (f.h[d] = h),
              (this.__longWordMap.h[b] = f));
          return c();
        },
        __class__: Tg,
      };
      var Nb = function (a) {
        this.__shapeCache = new Tg();
        this.textField = a;
        this.height = this.width = 100;
        this.set_text('');
        this.bounds = new na(0, 0, 0, 0);
        this.textBounds = new na(0, 0, 0, 0);
        this.type = 0;
        this.autoSize = 2;
        this.embedFonts = !1;
        this.selectable = !0;
        this.borderColor = 0;
        this.border = !1;
        this.backgroundColor = 16777215;
        this.background = !1;
        this.gridFitType = 1;
        this.maxChars = 0;
        this.multiline = !1;
        this.numLines = 1;
        this.scrollH = this.sharpness = 0;
        this.set_scrollV(1);
        this.wordWrap = !1;
        this.lineAscents = la.toFloatVector(null);
        this.lineBreaks = la.toIntVector(null);
        this.lineDescents = la.toFloatVector(null);
        this.lineLeadings = la.toFloatVector(null);
        this.lineHeights = la.toFloatVector(null);
        this.lineWidths = la.toFloatVector(null);
        this.layoutGroups = la.toObjectVector(null);
        this.textFormatRanges = la.toObjectVector(null);
        null == Nb.__context &&
          (Nb.__context = window.document
            .createElement('canvas')
            .getContext('2d'));
      };
      g['openfl.text._internal.TextEngine'] = Nb;
      Nb.__name__ = 'openfl.text._internal.TextEngine';
      Nb.findFont = function (a) {
        return ha.__fontByName.h[a];
      };
      Nb.findFontVariant = function (a) {
        var b = a.font,
          c = a.bold;
        a = a.italic;
        null == b && (b = '_serif');
        var d = O.replace(O.replace(b, ' Normal', ''), ' Regular', '');
        return c &&
          a &&
          Object.prototype.hasOwnProperty.call(
            ha.__fontByName.h,
            d + ' Bold Italic',
          )
          ? Nb.findFont(d + ' Bold Italic')
          : c &&
              Object.prototype.hasOwnProperty.call(
                ha.__fontByName.h,
                d + ' Bold',
              )
            ? Nb.findFont(d + ' Bold')
            : a &&
                Object.prototype.hasOwnProperty.call(
                  ha.__fontByName.h,
                  d + ' Italic',
                )
              ? Nb.findFont(d + ' Italic')
              : Nb.findFont(b);
      };
      Nb.getFormatHeight = function (a) {
        var b = Nb.getFont(a);
        Nb.__context.font = b;
        b = Nb.getFontInstance(a);
        if (null != a.__ascent) {
          var c = a.size * a.__ascent;
          b = a.size * a.__descent;
        } else
          null != b && 0 != b.unitsPerEM
            ? ((c = (b.ascender / b.unitsPerEM) * a.size),
              (b = Math.abs((b.descender / b.unitsPerEM) * a.size)))
            : ((c = a.size), (b = 0.185 * a.size));
        return c + b + a.leading;
      };
      Nb.getFont = function (a) {
        var b = a.font,
          c = a.bold,
          d = a.italic;
        null == b && (b = '_serif');
        var f = O.replace(O.replace(b, ' Normal', ''), ' Regular', '');
        c &&
        d &&
        Object.prototype.hasOwnProperty.call(
          ha.__fontByName.h,
          f + ' Bold Italic',
        )
          ? ((b = f + ' Bold Italic'), (d = c = !1))
          : c &&
              Object.prototype.hasOwnProperty.call(
                ha.__fontByName.h,
                f + ' Bold',
              )
            ? ((b = f + ' Bold'), (c = !1))
            : d &&
                Object.prototype.hasOwnProperty.call(
                  ha.__fontByName.h,
                  f + ' Italic',
                )
              ? ((b = f + ' Italic'), (d = !1))
              : (c &&
                  (-1 < b.indexOf(' Bold ') || O.endsWith(b, ' Bold')) &&
                  (c = !1),
                d &&
                  (-1 < b.indexOf(' Italic ') || O.endsWith(b, ' Italic')) &&
                  (d = !1));
        c = (d ? 'italic ' : 'normal ') + 'normal ' + (c ? 'bold ' : 'normal ');
        c += a.size + 'px';
        c += '/' + (a.size + 3) + 'px ';
        switch (b) {
          case '_sans':
            a = 'sans-serif';
            break;
          case '_serif':
            a = 'serif';
            break;
          case '_typewriter':
            a = 'monospace';
            break;
          default:
            a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, '$1') + "'";
        }
        return (c += '' + a);
      };
      Nb.getFontInstance = function (a) {
        return Nb.findFontVariant(a);
      };
      Nb.prototype = {
        createRestrictRegexp: function (a) {
          var b = '',
            c = !1;
          a = new ja('\\^([^\\^]+)', 'gu').map(a, function (a) {
            if (c) return ((c = !c), a.matched(1));
            b += a.matched(1);
            c = !c;
            return '';
          });
          var d = [];
          0 < a.length && d.push('[^' + a + ']');
          0 < b.length && d.push('[' + b + ']');
          return new ja('(' + d.join('|') + ')', 'g');
        },
        getBounds: function () {
          var a = this.border ? 1 : 0;
          this.bounds.width = this.width + a;
          this.bounds.height = this.height + a;
          a = this.width;
          for (
            var b = this.height,
              c = this.layoutGroups.get_length() - 1,
              d = 0,
              f = this.layoutGroups.get_length();
            d < f;

          ) {
            var h = d++,
              k = this.layoutGroups.get(h);
            if (h != c || k.startIndex != k.endIndex || 1 == this.type)
              (k.offsetX < a && (a = k.offsetX),
                k.offsetY < b && (b = k.offsetY));
          }
          a >= this.width && (a = 2);
          b >= this.height && (b = 2);
          this.textBounds.setTo(
            Math.max(a - 2, 0),
            Math.max(b - 2, 0),
            Math.min(this.textWidth + 4, this.bounds.width),
            Math.min(1.185 * this.textHeight + 4, this.bounds.height),
          );
        },
        getLineBreaks: function () {
          this.lineBreaks.set_length(0);
          for (var a = -1, b; a < this.text.length; )
            if (
              ((b = this.text.indexOf('\n', a + 1)),
              (a = this.text.indexOf('\r', a + 1)),
              (a = -1 == a ? b : -1 == b ? a : a < b ? a : b),
              -1 < a)
            )
              this.lineBreaks.push(a);
            else break;
        },
        getLineMeasurements: function () {
          this.lineAscents.set_length(0);
          this.lineDescents.set_length(0);
          this.lineLeadings.set_length(0);
          this.lineHeights.set_length(0);
          this.lineWidths.set_length(0);
          var a = 0,
            b = 0,
            c = null,
            d = 0,
            f = 0;
          this.textHeight = this.textWidth = 0;
          this.numLines = 1;
          this.maxScrollH = 0;
          for (
            var h = this.layoutGroups.get_length() - 1,
              k = 0,
              g = this.layoutGroups.get_length();
            k < g;

          ) {
            var q = k++;
            var u = this.layoutGroups.get(q);
            if (q != h || u.startIndex != u.endIndex || 1 == this.type) {
              for (; u.lineIndex > this.numLines - 1; )
                (this.lineAscents.push(a),
                  this.lineDescents.push(b),
                  this.lineLeadings.push(null != c ? c : 0),
                  this.lineHeights.push(d),
                  this.lineWidths.push(f),
                  (b = a = 0),
                  (c = null),
                  (f = d = 0),
                  this.numLines++);
              a = Math.max(a, u.ascent);
              b = Math.max(b, u.descent);
              c = null == c ? u.leading : Math.max(c, u.leading) | 0;
              d = Math.max(d, u.height);
              f = u.offsetX - 2 + u.width;
              f > this.textWidth && (this.textWidth = f);
              q = Math.ceil(u.offsetY - 2 + u.ascent + u.descent);
              q > this.textHeight && (this.textHeight = q);
            }
          }
          0 == this.textHeight &&
            null != this.textField &&
            1 == this.type &&
            ((a = this.textField.__textFormat),
            (b = Nb.getFontInstance(a)),
            null != a.__ascent
              ? ((h = a.size * a.__ascent), (k = a.size * a.__descent))
              : null != b && 0 != b.unitsPerEM
                ? ((h = (b.ascender / b.unitsPerEM) * a.size),
                  (k = Math.abs((b.descender / b.unitsPerEM) * a.size)))
                : ((h = a.size), (k = 0.185 * a.size)),
            (c = a.leading),
            (a = h),
            (b = k),
            (this.textHeight = q = Math.ceil(h + k)));
          this.lineAscents.push(a);
          this.lineDescents.push(b);
          this.lineLeadings.push(null != c ? c : 0);
          this.lineHeights.push(d);
          this.lineWidths.push(f);
          1 == this.numLines && 0 < c && (this.textHeight += c);
          if (2 != this.autoSize)
            switch (this.autoSize) {
              case 0:
              case 1:
              case 3:
                (this.wordWrap || (this.width = this.textWidth + 4),
                  (this.height = this.textHeight + 4),
                  (this.bottomScrollV = this.numLines));
            }
          this.maxScrollH =
            this.textWidth > this.width - 4
              ? (this.textWidth - this.width + 4) | 0
              : 0;
          this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH);
        },
        getLayoutGroups: function () {
          var a = this;
          this.layoutGroups.set_length(0);
          if (null != this.text && '' != this.text) {
            var b = -1,
              c = null,
              d = null,
              f = sc.__defaultTextFormat.clone(),
              h = 0,
              k = 0,
              g = 0,
              q = 0,
              u = 3,
              r = 0,
              m = 0,
              l = 0,
              x = 0,
              D = !0,
              w = null,
              J = null,
              y = 0,
              z = 0,
              C = 0,
              t = -2,
              v = -1,
              G = this.text.indexOf(' '),
              F = 0,
              I =
                F < this.lineBreaks.get_length() ? this.lineBreaks.get(F) : -1,
              K = 0,
              eb = 0,
              H = 0,
              O = 0,
              kb = function (b, d, h) {
                var k = function () {
                  var c = [];
                  if (null == a.__useIntAdvances) {
                    var f = new ja('Trident/7.0', '');
                    a.__useIntAdvances = f.match(E.navigator.userAgent);
                  }
                  if (a.__useIntAdvances) {
                    var k = 0;
                    f = d;
                    for (var g = h; f < g; ) {
                      var m = f++;
                      m = a.measureText(b.substring(d, m + 1));
                      c.push(m - k);
                      k = m;
                    }
                  } else
                    for (f = d, g = h; f < g; )
                      ((m = f++),
                        m < b.length - 1
                          ? ((k = a.measureText(b.charAt(m + 1))),
                            (k = a.measureText(N.substr(b, m, 2)) - k))
                          : (k = Nb.__context.measureText(b.charAt(m)).width),
                        c.push(k));
                  return c;
                };
                return 2 == f.align
                  ? k()
                  : a.__shapeCache.cache(c, k, b.substring(d, h));
              },
              Wa = function (a) {
                for (var b = 0, c = 0; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b += d;
                }
                return b;
              },
              Y = function () {
                return 2 + l + r + (D ? m : 0);
              },
              W = function () {
                return a.width - 2 - x - Y();
              },
              A = function (b, d) {
                null == w || w.startIndex != w.endIndex
                  ? ((w = new Lj(c.format, b, d)), a.layoutGroups.push(w))
                  : ((w.format = c.format),
                    (w.startIndex = b),
                    (w.endIndex = d));
              },
              sa = function () {
                null != f.__ascent
                  ? ((k = f.size * f.__ascent), (q = f.size * f.__descent))
                  : null != d && 0 != d.unitsPerEM
                    ? ((k = (d.ascender / d.unitsPerEM) * f.size),
                      (q = Math.abs((d.descender / d.unitsPerEM) * f.size)))
                    : ((k = f.size), (q = 0.185 * f.size));
                h = f.leading;
                z = Math.ceil(k + q + h);
                z > C && (C = z);
                k > g && (g = k);
              },
              $a = function () {
                D = !0;
                u = null != f.align ? f.align : 3;
                r = null != f.blockIndent ? f.blockIndent : 0;
                m = null != f.indent ? f.indent : 0;
                l = null != f.leftMargin ? f.leftMargin : 0;
                x = null != f.rightMargin ? f.rightMargin : 0;
              },
              cb = function () {
                if (b < a.textFormatRanges.get_length() - 1) {
                  b += 1;
                  c = a.textFormatRanges.get(b);
                  f.__merge(c.format);
                  var h = Nb.getFont(f);
                  Nb.__context.font = h;
                  d = Nb.getFontInstance(f);
                  return !0;
                }
                return !1;
              },
              B = function (d, f) {
                if (d >= f) ((J = []), (y = 0));
                else if (f <= c.end) ((J = kb(a.text, d, f)), (y = Wa(J)));
                else {
                  var h = d;
                  d = c.end;
                  var k = 0;
                  J = [];
                  for (y = 0; ; )
                    if (
                      (h != d && ((h = kb(a.text, h, d)), (J = J.concat(h))),
                      d != f)
                    ) {
                      if (!cb()) {
                        Ga.warn(
                          "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                          {
                            fileName: 'openfl/text/_internal/TextEngine.hx',
                            lineNumber: 1121,
                            className: 'openfl.text._internal.TextEngine',
                            methodName: 'getLayoutGroups',
                          },
                        );
                        break;
                      }
                      h = d;
                      d = f < c.end ? f : c.end;
                      ++k;
                    } else {
                      y = Wa(J);
                      break;
                    }
                  b -= k + 1;
                  cb();
                }
              },
              L = function (b) {
                if (b <= c.end) {
                  J = kb(a.text, H, b);
                  y = Wa(J);
                  A(H, b);
                  w.positions = J;
                  var d = K,
                    f = Y();
                  w.offsetX = d + f;
                  w.ascent = k;
                  w.descent = q;
                  w.leading = h;
                  w.lineIndex = O;
                  w.offsetY = eb + 2;
                  w.width = y;
                  w.height = z;
                  K += y;
                  b == c.end && ((w = null), cb(), sa());
                } else
                  for (;;) {
                    var g = b < c.end ? b : c.end;
                    H != g &&
                      ((J = kb(a.text, H, g)),
                      (y = Wa(J)),
                      A(H, g),
                      (w.positions = J),
                      (d = K),
                      (f = Y()),
                      (w.offsetX = d + f),
                      (w.ascent = k),
                      (w.descent = q),
                      (w.leading = h),
                      (w.lineIndex = O),
                      (w.offsetY = eb + 2),
                      (w.width = y),
                      (w.height = z),
                      (K += y),
                      (H = g));
                    g == c.end && (w = null);
                    if (g == b) break;
                    if (!cb()) {
                      Ga.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/_internal/TextEngine.hx',
                          lineNumber: 1209,
                          className: 'openfl.text._internal.TextEngine',
                          methodName: 'getLayoutGroups',
                        },
                      );
                      break;
                    }
                    sa();
                  }
                H = b;
              },
              aa = function () {
                sa();
                for (var b = a.layoutGroups.get_length(); -1 < --b; ) {
                  var c = a.layoutGroups.get(b);
                  if (c.lineIndex < O) break;
                  c.lineIndex > O || ((c.ascent = g), (c.height = C));
                }
                eb += C;
                C = g = 0;
                O += 1;
                K = 0;
                D = !1;
              },
              U = function (b) {
                if (4 <= a.width && a.wordWrap) {
                  var c = J;
                  var d = Wa(c);
                  for (var f = c.length - 1; 0 <= f; ) {
                    var h = N.cca(a.text, H + f);
                    if (32 != h && 9 != h) break;
                    d -= c[f];
                    --f;
                  }
                  for (; 0 < c.length && K + d > W(); ) {
                    for (h = f = d = 0; K + h < W(); ) {
                      var k = c[f];
                      0 == k ? (++f, ++d) : ((h += k), ++f);
                    }
                    if (f == d) f = d + 1;
                    else
                      for (; 1 < f && K + h > W(); )
                        (--f,
                          0 < f - d
                            ? (B(H, H + f - d), (h = y))
                            : ((f = 1), (d = 0), B(H, H + 1), (h = 0)));
                    c = H + f - d;
                    L(c);
                    aa();
                    B(c, b);
                    c = J;
                    d = y;
                  }
                }
                L(b);
              };
            cb();
            $a();
            sa();
            for (var ab, R = this.text.length + 1; H < R; )
              if (-1 < I && (-1 == G || I < G))
                (H <= I
                  ? (B(H, I), U(I), (w = null))
                  : null != w &&
                    w.startIndex != w.endIndex &&
                    (w.endIndex == G &&
                      (w.width -= w.positions[w.positions.length - 1]),
                    (w = null)),
                  aa(),
                  c.end == I && (cb(), sa()),
                  (H = I + 1),
                  (v = I),
                  ++F,
                  (I =
                    F < this.lineBreaks.get_length()
                      ? this.lineBreaks.get(F)
                      : -1),
                  $a());
              else if (-1 < G)
                for (
                  null != w && w.startIndex != w.endIndex && (w = null),
                    ab = !1;
                  H < this.text.length;

                ) {
                  var S = -1;
                  -1 == G ? (S = I) : ((S = G + 1), -1 < I && I < S && (S = I));
                  -1 == S && (S = this.text.length);
                  B(H, S);
                  if (2 == u) {
                    if (0 < J.length && H == t) {
                      H += 1;
                      var Q = J.shift();
                      y -= Q;
                      K += Q;
                    }
                    0 < J.length &&
                      S == G + 1 &&
                      (--S, (Q = J.pop()), (y -= Q));
                  }
                  this.wordWrap &&
                    K + y > W() &&
                    ((ab = !0),
                    0 < J.length &&
                      S == G + 1 &&
                      K + y - J[J.length - 1] <= W() &&
                      (ab = !1));
                  if (ab) {
                    2 != u &&
                      (null != w || 0 < this.layoutGroups.get_length()) &&
                      ((ab = w),
                      null == ab &&
                        (ab = this.layoutGroups.get(
                          this.layoutGroups.get_length() - 1,
                        )),
                      (ab.width -= ab.positions[ab.positions.length - 1]),
                      ab.endIndex--);
                    ab = this.layoutGroups.get_length() - 1;
                    for (Q = 0; 0 <= ab; ) {
                      w = this.layoutGroups.get(ab);
                      if (0 < ab && w.startIndex > t) ++Q;
                      else break;
                      --ab;
                    }
                    H == t + 1 && aa();
                    K = 0;
                    if (0 < Q) {
                      ab = this.layoutGroups.get(
                        this.layoutGroups.get_length() - Q,
                      ).offsetX;
                      Q = this.layoutGroups.get_length() - Q;
                      for (var V = this.layoutGroups.get_length(); Q < V; ) {
                        var Oa = Q++;
                        w = this.layoutGroups.get(Oa);
                        w.offsetX -= ab;
                        w.offsetY = eb + 2;
                        w.lineIndex = O;
                        K += w.width;
                      }
                    }
                    U(S);
                    ab = !1;
                  } else
                    null != w && H == G && t != G - 1
                      ? (2 != u &&
                          ((w.endIndex = G),
                          (w.positions = w.positions.concat(J)),
                          (w.width += y)),
                        (K += y),
                        (H = S))
                      : null == w || 2 == u
                        ? (U(S), S == this.text.length && aa())
                        : ((Q = S < c.end ? S : c.end),
                          Q < S && ((J = kb(this.text, H, Q)), (y = Wa(J))),
                          (w.endIndex = Q),
                          (w.positions = w.positions.concat(J)),
                          (w.width += y),
                          (K += y),
                          Q == c.end &&
                            ((w = null), cb(), sa(), (H = Q), Q != S && L(S)),
                          I == S && ++S,
                          (H = S),
                          S == this.text.length &&
                            (aa(),
                            -1 != I &&
                              ((v = I),
                              ++F,
                              (I =
                                F < this.lineBreaks.get_length()
                                  ? this.lineBreaks.get(F)
                                  : -1))));
                  S = this.text.indexOf(' ', H);
                  I == t &&
                    ((w.endIndex = I),
                    0 > I - w.startIndex - w.positions.length &&
                      w.positions.push(0),
                    (H = I + 1));
                  t = G;
                  G = S;
                  if (
                    (-1 < I && I <= H && (G > I || -1 == G)) ||
                    H > this.text.length
                  )
                    break;
                }
              else
                (H < this.text.length &&
                  (B(H, this.text.length), U(this.text.length), aa()),
                  (H += 1));
            v == H - 2 &&
              -1 < v &&
              (A(H - 1, H - 1),
              (w.positions = []),
              (w.ascent = k),
              (w.descent = q),
              (w.leading = h),
              (w.lineIndex = O),
              (w.offsetX = Y()),
              (w.offsetY = eb + 2),
              (w.width = 0),
              (w.height = z));
          }
        },
        measureText: function (a) {
          return Nb.__context.measureText(a).width;
        },
        restrictText: function (a) {
          if (null == a) return a;
          null != this.__restrictRegexp &&
            (a = this.__restrictRegexp.split(a).join(''));
          return a;
        },
        setTextAlignment: function () {
          for (
            var a = -1,
              b = 0,
              c,
              d,
              f = !1,
              h = 0,
              k = this.layoutGroups.get_length();
            h < k;

          ) {
            var g = h++;
            c = this.layoutGroups.get(g);
            if (c.lineIndex != a)
              switch (
                ((a = c.lineIndex),
                (b = this.width - 4 - c.format.rightMargin),
                c.format.align)
              ) {
                case 0:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round((b - this.lineWidths.get(a)) / 2)
                      : 0;
                  break;
                case 2:
                  if (this.lineWidths.get(a) < b) {
                    d = 1;
                    for (
                      var q = g + 1, u = this.layoutGroups.get_length();
                      q < u;

                    ) {
                      var r = q++;
                      if (this.layoutGroups.get(r).lineIndex == a)
                        (0 != r &&
                          32 !=
                            N.cca(
                              this.text,
                              this.layoutGroups.get(r).startIndex - 1,
                            )) ||
                          ++d;
                      else break;
                    }
                    if (
                      1 < d &&
                      ((c = this.layoutGroups.get(g + d - 1)),
                      (q = N.cca(this.text, c.endIndex)),
                      c.endIndex < this.text.length && 10 != q && 13 != q)
                    ) {
                      b = (b - this.lineWidths.get(a)) / (d - 1);
                      f = !0;
                      q = 1;
                      do this.layoutGroups.get(g + q).offsetX += b * q;
                      while (++q < d);
                    }
                  }
                  b = 0;
                  break;
                case 4:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round(b - this.lineWidths.get(a))
                      : 0;
                  break;
                default:
                  b = 0;
              }
            0 < b && (c.offsetX += b);
          }
          f && this.getLineMeasurements();
        },
        update: function () {
          null == this.text || 0 == this.textFormatRanges.get_length()
            ? (this.lineAscents.set_length(0),
              this.lineBreaks.set_length(0),
              this.lineDescents.set_length(0),
              this.lineLeadings.set_length(0),
              this.lineHeights.set_length(0),
              this.lineWidths.set_length(0),
              this.layoutGroups.set_length(0),
              (this.textHeight = this.textWidth = 0),
              (this.numLines = 1),
              (this.maxScrollH = 0),
              (this.bottomScrollV = this.maxScrollV = 1))
            : (this.getLineBreaks(),
              this.getLayoutGroups(),
              this.getLineMeasurements(),
              this.setTextAlignment());
          this.getBounds();
        },
        get_bottomScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (
            var a = this.lineHeights.get_length(),
              b =
                this.lineLeadings.get_length() == a
                  ? -this.lineLeadings.get(a - 1)
                  : 0,
              c = (0 < this.get_scrollV() ? this.get_scrollV() : 1) - 1,
              d = this.lineHeights.get_length();
            c < d;

          ) {
            var f = c++,
              h = this.lineHeights.get(f);
            b += h;
            if (b > this.height - 4) {
              a = f + (0 <= b - this.height ? 0 : 1);
              break;
            }
          }
          return a < this.get_scrollV() ? this.get_scrollV() : a;
        },
        get_maxScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (var a = this.numLines - 1, b = 0; 0 <= a; ) {
            b += this.lineHeights.get(a);
            if (b > this.height - 4) {
              a += 0 > b - this.height ? 1 : 2;
              break;
            }
            --a;
          }
          return 1 > a ? 1 : a;
        },
        set_restrict: function (a) {
          if (this.restrict == a) return this.restrict;
          this.restrict = a;
          this.__restrictRegexp =
            null == this.restrict || 0 == this.restrict.length
              ? null
              : this.createRestrictRegexp(a);
          return this.restrict;
        },
        get_scrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.get_maxScrollV();
          return this.scrollV > a ? a : this.scrollV;
        },
        set_scrollV: function (a) {
          1 > a
            ? (a = 1)
            : a > this.get_maxScrollV() && (a = this.get_maxScrollV());
          return (this.scrollV = a);
        },
        set_text: function (a) {
          return (this.text = a);
        },
        __class__: Nb,
        __properties__: {
          set_text: 'set_text',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_restrict: 'set_restrict',
          get_maxScrollV: 'get_maxScrollV',
          get_bottomScrollV: 'get_bottomScrollV',
        },
      };
      var od = function (a, b, c) {
        this.format = a;
        this.start = b;
        this.end = c;
      };
      g['openfl.text._internal.TextFormatRange'] = od;
      od.__name__ = 'openfl.text._internal.TextFormatRange';
      od.prototype = { __class__: od };
      var Lj = function (a, b, c) {
        this.format = a;
        this.startIndex = b;
        this.endIndex = c;
      };
      g['openfl.text._internal.TextLayoutGroup'] = Lj;
      Lj.__name__ = 'openfl.text._internal.TextLayoutGroup';
      Lj.prototype = { __class__: Lj };
      var qb = function () {
        oa.call(this);
        qb.__instances.push(this);
      };
      g['openfl.ui.GameInput'] = qb;
      qb.__name__ = 'openfl.ui.GameInput';
      qb.__getDevice = function (a) {
        if (null == a) return null;
        if (null == qb.__devices.h.__keys__[a.__id__]) {
          var b = nc.__getDeviceData(),
            c = b[a.id].id;
          b = nc.__getDeviceData();
          b = new Wk(c, b[a.id].id);
          qb.__deviceList.push(b);
          qb.__devices.set(a, b);
          qb.numDevices = qb.__deviceList.length;
        }
        return qb.__devices.h[a.__id__];
      };
      qb.__onGamepadAxisMove = function (a, b, c) {
        a = qb.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__axis.h.hasOwnProperty(b)) {
            if (null == b) var d = 'null';
            else
              switch (b) {
                case 0:
                  d = 'LEFT_X';
                  break;
                case 1:
                  d = 'LEFT_Y';
                  break;
                case 2:
                  d = 'RIGHT_X';
                  break;
                case 3:
                  d = 'RIGHT_Y';
                  break;
                case 4:
                  d = 'TRIGGER_LEFT';
                  break;
                case 5:
                  d = 'TRIGGER_RIGHT';
                  break;
                default:
                  d = 'UNKNOWN (' + b + ')';
              }
            d = new Yd(a, 'AXIS_' + d, -1, 1);
            a.__axis.h[b] = d;
            a.__controls.push(d);
          }
          d = a.__axis.h[b];
          d.value = c;
          d.dispatchEvent(new wa('change'));
        }
      };
      qb.__onGamepadButtonDown = function (a, b) {
        a = qb.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = 'null';
            else
              switch (b) {
                case 0:
                  c = 'A';
                  break;
                case 1:
                  c = 'B';
                  break;
                case 2:
                  c = 'X';
                  break;
                case 3:
                  c = 'Y';
                  break;
                case 4:
                  c = 'BACK';
                  break;
                case 5:
                  c = 'GUIDE';
                  break;
                case 6:
                  c = 'START';
                  break;
                case 7:
                  c = 'LEFT_STICK';
                  break;
                case 8:
                  c = 'RIGHT_STICK';
                  break;
                case 9:
                  c = 'LEFT_SHOULDER';
                  break;
                case 10:
                  c = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  c = 'DPAD_UP';
                  break;
                case 12:
                  c = 'DPAD_DOWN';
                  break;
                case 13:
                  c = 'DPAD_LEFT';
                  break;
                case 14:
                  c = 'DPAD_RIGHT';
                  break;
                default:
                  c = 'UNKNOWN (' + b + ')';
              }
            c = new Yd(a, 'BUTTON_' + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 1;
          c.dispatchEvent(new wa('change'));
        }
      };
      qb.__onGamepadButtonUp = function (a, b) {
        a = qb.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = 'null';
            else
              switch (b) {
                case 0:
                  c = 'A';
                  break;
                case 1:
                  c = 'B';
                  break;
                case 2:
                  c = 'X';
                  break;
                case 3:
                  c = 'Y';
                  break;
                case 4:
                  c = 'BACK';
                  break;
                case 5:
                  c = 'GUIDE';
                  break;
                case 6:
                  c = 'START';
                  break;
                case 7:
                  c = 'LEFT_STICK';
                  break;
                case 8:
                  c = 'RIGHT_STICK';
                  break;
                case 9:
                  c = 'LEFT_SHOULDER';
                  break;
                case 10:
                  c = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  c = 'DPAD_UP';
                  break;
                case 12:
                  c = 'DPAD_DOWN';
                  break;
                case 13:
                  c = 'DPAD_LEFT';
                  break;
                case 14:
                  c = 'DPAD_RIGHT';
                  break;
                default:
                  c = 'UNKNOWN (' + b + ')';
              }
            c = new Yd(a, 'BUTTON_' + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 0;
          c.dispatchEvent(new wa('change'));
        }
      };
      qb.__onGamepadConnect = function (a) {
        a = qb.__getDevice(a);
        if (null != a)
          for (var b = 0, c = qb.__instances; b < c.length; ) {
            var d = c[b];
            ++b;
            d.dispatchEvent(new Pg('deviceAdded', !0, !1, a));
          }
      };
      qb.__onGamepadDisconnect = function (a) {
        var b = qb.__devices.h[a.__id__];
        if (null != b) {
          null != qb.__devices.h.__keys__[a.__id__] &&
            (N.remove(qb.__deviceList, qb.__devices.h[a.__id__]),
            qb.__devices.remove(a));
          qb.numDevices = qb.__deviceList.length;
          a = 0;
          for (var c = qb.__instances; a < c.length; ) {
            var d = c[a];
            ++a;
            d.dispatchEvent(new Pg('deviceRemoved', !0, !1, b));
          }
        }
      };
      qb.__super__ = oa;
      qb.prototype = v(oa.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          oa.prototype.addEventListener.call(this, a, b, c, d, f);
          if ('deviceAdded' == a)
            for (a = 0, b = qb.__deviceList; a < b.length; )
              ((c = b[a]),
                ++a,
                this.dispatchEvent(new Pg('deviceAdded', !0, !1, c)));
        },
        __class__: qb,
      });
      var Yd = function (a, b, c, d, f) {
        null == f && (f = 0);
        oa.call(this);
        this.device = a;
        this.id = b;
        this.minValue = c;
        this.maxValue = d;
        this.value = f;
      };
      g['openfl.ui.GameInputControl'] = Yd;
      Yd.__name__ = 'openfl.ui.GameInputControl';
      Yd.__super__ = oa;
      Yd.prototype = v(oa.prototype, { __class__: Yd });
      var Wk = function (a, b) {
        this.__controls = [];
        this.__button = new mc();
        this.__axis = new mc();
        this.id = a;
        this.name = b;
        a = new Yd(this, 'AXIS_0', -1, 1);
        this.__axis.h[0] = a;
        this.__controls.push(a);
        a = new Yd(this, 'AXIS_1', -1, 1);
        this.__axis.h[1] = a;
        this.__controls.push(a);
        a = new Yd(this, 'AXIS_2', -1, 1);
        this.__axis.h[2] = a;
        this.__controls.push(a);
        a = new Yd(this, 'AXIS_3', -1, 1);
        this.__axis.h[3] = a;
        this.__controls.push(a);
        a = new Yd(this, 'AXIS_4', -1, 1);
        this.__axis.h[4] = a;
        this.__controls.push(a);
        a = new Yd(this, 'AXIS_5', -1, 1);
        this.__axis.h[5] = a;
        this.__controls.push(a);
        for (b = 0; 15 > b; ) {
          var c = b++;
          a = new Yd(this, 'BUTTON_' + c, 0, 1);
          this.__button.h[c] = a;
          this.__controls.push(a);
        }
      };
      g['openfl.ui.GameInputDevice'] = Wk;
      Wk.__name__ = 'openfl.ui.GameInputDevice';
      Wk.prototype = { __class__: Wk };
      var ol = function () {};
      g['openfl.ui.Keyboard'] = ol;
      ol.__name__ = 'openfl.ui.Keyboard';
      ol.__getCharCode = function (a, b) {
        null == b && (b = !1);
        if (b) {
          switch (a) {
            case 48:
              return 41;
            case 49:
              return 33;
            case 50:
              return 64;
            case 51:
              return 35;
            case 52:
              return 36;
            case 53:
              return 37;
            case 54:
              return 94;
            case 55:
              return 38;
            case 56:
              return 42;
            case 57:
              return 40;
            case 186:
              return 58;
            case 187:
              return 43;
            case 188:
              return 60;
            case 189:
              return 95;
            case 190:
              return 62;
            case 191:
              return 63;
            case 192:
              return 126;
            case 219:
              return 123;
            case 220:
              return 124;
            case 221:
              return 125;
            case 222:
              return 34;
          }
          if (65 <= a && 90 >= a) return a - 65 + 65;
        } else {
          switch (a) {
            case 8:
              return 8;
            case 9:
              return 9;
            case 13:
              return 13;
            case 27:
              return 27;
            case 32:
              return 32;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
          }
          if (48 <= a && 57 >= a) return a - 48 + 48;
          if (65 <= a && 90 >= a) return a - 65 + 97;
        }
        if (96 <= a && 105 >= a) return a - 96 + 48;
        switch (a) {
          case 8:
            return 8;
          case 13:
            return 13;
          case 46:
            return 127;
          case 106:
            return 42;
          case 107:
            return 43;
          case 108:
            return 44;
          case 110:
            return 45;
          case 111:
            return 46;
        }
        return 0;
      };
      var Jk = function () {};
      g['openfl.ui.Mouse'] = Jk;
      Jk.__name__ = 'openfl.ui.Mouse';
      var Nl = {
          toLimeCursor: function (a) {
            switch (a) {
              case 'arrow':
                return cc.ARROW;
              case 'auto':
                return cc.DEFAULT;
              case 'button':
                return cc.POINTER;
              case 'crosshair':
                return cc.CROSSHAIR;
              case 'custom':
                return cc.CUSTOM;
              case 'hand':
                return cc.MOVE;
              case 'ibeam':
                return cc.TEXT;
              case 'resize_nesw':
                return cc.RESIZE_NESW;
              case 'resize_ns':
                return cc.RESIZE_NS;
              case 'resize_nwse':
                return cc.RESIZE_NWSE;
              case 'resize_we':
                return cc.RESIZE_WE;
              case 'wait':
                return cc.WAIT;
              case 'waitarrow':
                return cc.WAIT_ARROW;
              default:
                return cc.DEFAULT;
            }
          },
        },
        ma = function (a) {
          null == a && (a = !1);
          this.debugEnabled = a;
          ma.initialized || ma.init();
        };
      g['openfl.utils.AGALMiniAssembler'] = ma;
      ma.__name__ = 'openfl.utils.AGALMiniAssembler';
      ma.init = function () {
        ma.initialized = !0;
        var a = ma.OPMAP,
          b = new Za('mov', 2, 0, 0);
        a.h.mov = b;
        a = ma.OPMAP;
        b = new Za('add', 3, 1, 0);
        a.h.add = b;
        a = ma.OPMAP;
        b = new Za('sub', 3, 2, 0);
        a.h.sub = b;
        a = ma.OPMAP;
        b = new Za('mul', 3, 3, 0);
        a.h.mul = b;
        a = ma.OPMAP;
        b = new Za('div', 3, 4, 0);
        a.h.div = b;
        a = ma.OPMAP;
        b = new Za('rcp', 2, 5, 0);
        a.h.rcp = b;
        a = ma.OPMAP;
        b = new Za('min', 3, 6, 0);
        a.h.min = b;
        a = ma.OPMAP;
        b = new Za('max', 3, 7, 0);
        a.h.max = b;
        a = ma.OPMAP;
        b = new Za('frc', 2, 8, 0);
        a.h.frc = b;
        a = ma.OPMAP;
        b = new Za('sqt', 2, 9, 0);
        a.h.sqt = b;
        a = ma.OPMAP;
        b = new Za('rsq', 2, 10, 0);
        a.h.rsq = b;
        a = ma.OPMAP;
        b = new Za('pow', 3, 11, 0);
        a.h.pow = b;
        a = ma.OPMAP;
        b = new Za('log', 2, 12, 0);
        a.h.log = b;
        a = ma.OPMAP;
        b = new Za('exp', 2, 13, 0);
        a.h.exp = b;
        a = ma.OPMAP;
        b = new Za('nrm', 2, 14, 0);
        a.h.nrm = b;
        a = ma.OPMAP;
        b = new Za('sin', 2, 15, 0);
        a.h.sin = b;
        a = ma.OPMAP;
        b = new Za('cos', 2, 16, 0);
        a.h.cos = b;
        a = ma.OPMAP;
        b = new Za('crs', 3, 17, 0);
        a.h.crs = b;
        a = ma.OPMAP;
        b = new Za('dp3', 3, 18, 0);
        a.h.dp3 = b;
        a = ma.OPMAP;
        b = new Za('dp4', 3, 19, 0);
        a.h.dp4 = b;
        a = ma.OPMAP;
        b = new Za('abs', 2, 20, 0);
        a.h.abs = b;
        a = ma.OPMAP;
        b = new Za('neg', 2, 21, 0);
        a.h.neg = b;
        a = ma.OPMAP;
        b = new Za('sat', 2, 22, 0);
        a.h.sat = b;
        a = ma.OPMAP;
        b = new Za('m33', 3, 23, 16);
        a.h.m33 = b;
        a = ma.OPMAP;
        b = new Za('m44', 3, 24, 16);
        a.h.m44 = b;
        a = ma.OPMAP;
        b = new Za('m34', 3, 25, 16);
        a.h.m34 = b;
        a = ma.OPMAP;
        b = new Za('ddx', 2, 26, 288);
        a.h.ddx = b;
        a = ma.OPMAP;
        b = new Za('ddy', 2, 27, 288);
        a.h.ddy = b;
        a = ma.OPMAP;
        b = new Za('ife', 2, 28, 897);
        a.h.ife = b;
        a = ma.OPMAP;
        b = new Za('ine', 2, 29, 897);
        a.h.ine = b;
        a = ma.OPMAP;
        b = new Za('ifg', 2, 30, 897);
        a.h.ifg = b;
        a = ma.OPMAP;
        b = new Za('ifl', 2, 31, 897);
        a.h.ifl = b;
        a = ma.OPMAP;
        b = new Za('els', 0, 32, 1921);
        a.h.els = b;
        a = ma.OPMAP;
        b = new Za('eif', 0, 33, 1409);
        a.h.eif = b;
        a = ma.OPMAP;
        b = new Za('kil', 1, 39, 160);
        a.h.kil = b;
        a = ma.OPMAP;
        b = new Za('tex', 3, 40, 40);
        a.h.tex = b;
        a = ma.OPMAP;
        b = new Za('sge', 3, 41, 0);
        a.h.sge = b;
        a = ma.OPMAP;
        b = new Za('slt', 3, 42, 0);
        a.h.slt = b;
        a = ma.OPMAP;
        b = new Za('sgn', 2, 43, 0);
        a.h.sgn = b;
        a = ma.OPMAP;
        b = new Za('seq', 3, 44, 0);
        a.h.seq = b;
        a = ma.OPMAP;
        b = new Za('sne', 3, 45, 0);
        a.h.sne = b;
        a = ma.SAMPLEMAP;
        b = new $b('rgba', 8, 0);
        a.h.rgba = b;
        a = ma.SAMPLEMAP;
        b = new $b('compressed', 8, 1);
        a.h.compressed = b;
        a = ma.SAMPLEMAP;
        b = new $b('compressedalpha', 8, 2);
        a.h.compressedalpha = b;
        a = ma.SAMPLEMAP;
        b = new $b('dxt1', 8, 1);
        a.h.dxt1 = b;
        a = ma.SAMPLEMAP;
        b = new $b('dxt5', 8, 2);
        a.h.dxt5 = b;
        a = ma.SAMPLEMAP;
        b = new $b('video', 8, 3);
        a.h.video = b;
        a = ma.SAMPLEMAP;
        b = new $b('2d', 12, 0);
        a.h['2d'] = b;
        a = ma.SAMPLEMAP;
        b = new $b('3d', 12, 2);
        a.h['3d'] = b;
        a = ma.SAMPLEMAP;
        b = new $b('cube', 12, 1);
        a.h.cube = b;
        a = ma.SAMPLEMAP;
        b = new $b('mipnearest', 24, 1);
        a.h.mipnearest = b;
        a = ma.SAMPLEMAP;
        b = new $b('miplinear', 24, 2);
        a.h.miplinear = b;
        a = ma.SAMPLEMAP;
        b = new $b('mipnone', 24, 0);
        a.h.mipnone = b;
        a = ma.SAMPLEMAP;
        b = new $b('nomip', 24, 0);
        a.h.nomip = b;
        a = ma.SAMPLEMAP;
        b = new $b('nearest', 28, 0);
        a.h.nearest = b;
        a = ma.SAMPLEMAP;
        b = new $b('linear', 28, 1);
        a.h.linear = b;
        a = ma.SAMPLEMAP;
        b = new $b('anisotropic2x', 28, 2);
        a.h.anisotropic2x = b;
        a = ma.SAMPLEMAP;
        b = new $b('anisotropic4x', 28, 3);
        a.h.anisotropic4x = b;
        a = ma.SAMPLEMAP;
        b = new $b('anisotropic8x', 28, 4);
        a.h.anisotropic8x = b;
        a = ma.SAMPLEMAP;
        b = new $b('anisotropic16x', 28, 5);
        a.h.anisotropic16x = b;
        a = ma.SAMPLEMAP;
        b = new $b('centroid', 16, 1);
        a.h.centroid = b;
        a = ma.SAMPLEMAP;
        b = new $b('single', 16, 2);
        a.h.single = b;
        a = ma.SAMPLEMAP;
        b = new $b('ignoresampler', 16, 4);
        a.h.ignoresampler = b;
        a = ma.SAMPLEMAP;
        b = new $b('repeat', 20, 1);
        a.h.repeat = b;
        a = ma.SAMPLEMAP;
        b = new $b('wrap', 20, 1);
        a.h.wrap = b;
        a = ma.SAMPLEMAP;
        b = new $b('clamp', 20, 0);
        a.h.clamp = b;
        a = ma.SAMPLEMAP;
        b = new $b('clamp_u_repeat_v', 20, 2);
        a.h.clamp_u_repeat_v = b;
        a = ma.SAMPLEMAP;
        b = new $b('repeat_u_clamp_v', 20, 3);
        a.h.repeat_u_clamp_v = b;
      };
      ma.prototype = {
        assemble: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = 1);
          var f = Ra.getTimer();
          this.agalcode = new Vc(0);
          this.error = '';
          var h = !1;
          'fragment' == a
            ? (h = !0)
            : 'vertex' != a &&
              (this.error =
                'ERROR: mode needs to be "fragment" or "vertex" but is "' +
                a +
                '".');
          this.agalcode.__endian = 1;
          this.agalcode.writeByte(160);
          this.agalcode.writeUnsignedInt(c);
          this.agalcode.writeByte(161);
          this.agalcode.writeByte(h ? 1 : 0);
          this.initregmap(c, d);
          a = O.replace(b, '\r', '\n').split('\n');
          b = 0;
          d = a.length;
          for (
            var k = new ja('<.*>', 'g'),
              g = new ja('([\\w\\.\\-\\+]+)', 'gi'),
              q = new ja('^\\w{3}', 'ig'),
              u = new ja(
                'vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?',
                'gi',
              ),
              r = new ja('\\[.*\\]', 'ig'),
              m = new ja('^\\b[A-Za-z]{1,3}', 'ig'),
              l = new ja('\\d+', ''),
              x = new ja('(\\.[xyzw]{1,4})', ''),
              w = new ja('[A-Za-z]{1,3}', 'ig'),
              D = new ja('(\\.[xyzw]{1,1})', ''),
              J = new ja('\\+\\d{1,3}', 'ig'),
              y = 0;
            y < d && '' == this.error;

          ) {
            var z = O.trim(a[y]),
              C = z.indexOf('//');
            -1 != C && (z = N.substr(z, 0, C));
            var t = k.match(z) ? k.matchedPos().pos : -1;
            C = null;
            -1 != t &&
              ((C = this.match(N.substr(z, t, null), g)),
              (z = N.substr(z, 0, t)));
            var v = null;
            q.match(z) && ((t = q.matched(0)), (v = ma.OPMAP.h[t]));
            if (null == v)
              3 <= z.length &&
                Ga.warn('warning: bad line ' + y + ': ' + a[y], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 262,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else if (
              (this.debugEnabled &&
                Ga.info(v, {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 272,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                }),
              null == v)
            )
              3 <= z.length &&
                Ga.warn('warning: bad line ' + y + ': ' + a[y], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 279,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else {
              z = N.substr(z, z.indexOf(v.name) + v.name.length, null);
              if (0 != (v.flags & 256) && 2 > c) {
                this.error = 'error: opcode requires version 2.';
                break;
              }
              if (0 != (v.flags & 64) && h) {
                this.error =
                  'error: opcode is only allowed in vertex programs.';
                break;
              }
              if (0 != (v.flags & 32) && !h) {
                this.error =
                  'error: opcode is only allowed in fragment programs.';
                break;
              }
              this.verbose &&
                Ga.info('emit opcode=' + H.string(v), {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 308,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
              this.agalcode.writeUnsignedInt(v.emitCode);
              ++b;
              if (4096 < b) {
                this.error = 'error: too many opcodes. maximum is 4096.';
                break;
              }
              var G = this.match(z, u);
              if (G.length != v.numRegister) {
                this.error =
                  'error: wrong number of operands. found ' +
                  G.length +
                  ' but expected ' +
                  v.numRegister +
                  '.';
                break;
              }
              var I = !1,
                F = 160;
              z = 0;
              for (t = G.length; z < t; ) {
                var K = z++,
                  eb = !1,
                  Wa = this.match(G[K], r);
                0 < Wa.length &&
                  ((G[K] = O.replace(G[K], Wa[0], '0')),
                  this.verbose &&
                    Ga.info('IS REL', {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 344,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    }),
                  (eb = !0));
                var kb = this.match(G[K], m);
                if (0 == kb.length) {
                  this.error =
                    'error: could not parse operand ' + K + ' (' + G[K] + ').';
                  I = !0;
                  break;
                }
                var Y = ma.REGMAP.h[kb[0]];
                this.debugEnabled &&
                  Ga.info(Y, {
                    fileName: 'openfl/utils/AGALMiniAssembler.hx',
                    lineNumber: 363,
                    className: 'openfl.utils.AGALMiniAssembler',
                    methodName: 'assemble',
                  });
                if (null == Y) {
                  this.error =
                    'error: could not find register name for operand ' +
                    K +
                    ' (' +
                    G[K] +
                    ').';
                  I = !0;
                  break;
                }
                if (h) {
                  if (0 == (Y.flags & 32)) {
                    this.error =
                      'error: register operand ' +
                      K +
                      ' (' +
                      G[K] +
                      ') only allowed in vertex programs.';
                    I = !0;
                    break;
                  }
                  if (eb) {
                    this.error =
                      'error: register operand ' +
                      K +
                      ' (' +
                      G[K] +
                      ') relative adressing not allowed in fragment programs.';
                    I = !0;
                    break;
                  }
                } else if (0 == (Y.flags & 64)) {
                  this.error =
                    'error: register operand ' +
                    K +
                    ' (' +
                    G[K] +
                    ') only allowed in fragment programs.';
                  I = !0;
                  break;
                }
                G[K] = N.substr(
                  G[K],
                  G[K].indexOf(Y.name) + Y.name.length,
                  null,
                );
                var W = eb ? this.match(Wa[0], l) : this.match(G[K], l);
                kb = 0;
                0 < W.length && (kb = H.parseInt(W[0]));
                if (cb.gt(kb, Y.range)) {
                  z = Y.range + 1;
                  this.error =
                    'error: register operand ' +
                    K +
                    ' (' +
                    G[K] +
                    ') index exceeds limit of ' +
                    (null == z ? 'null' : H.string(cb.toFloat(z))) +
                    '.';
                  I = !0;
                  break;
                }
                var sa = this.match(G[K], x),
                  E = 0 == K && 0 == (v.flags & 128),
                  A = 2 == K && 0 != (v.flags & 8),
                  $a = 0,
                  B = 0,
                  L = 0;
                if (E && eb) {
                  this.error = 'error: relative can not be destination';
                  I = !0;
                  break;
                }
                if (0 < sa.length) {
                  for (var ab = (W = 0), aa = sa[0].length, S = 1; S < aa; )
                    ((ab = N.cca(sa[0], S) - 120),
                      cb.gt(ab, 2) && (ab = 3),
                      (W = E ? W | (1 << ab) : W | (ab << ((S - 1) << 1))),
                      ++S);
                  if (!E) for (; 4 >= S; ) ((W |= ab << ((S - 1) << 1)), ++S);
                } else W = E ? 15 : 228;
                if (eb) {
                  sa = this.match(Wa[0], w);
                  $a = ma.REGMAP.h[sa[0]];
                  if (null == $a) {
                    this.error = 'error: bad index register';
                    I = !0;
                    break;
                  }
                  $a = $a.emitCode;
                  ab = this.match(Wa[0], D);
                  if (0 == ab.length) {
                    this.error = 'error: bad index register select';
                    I = !0;
                    break;
                  }
                  B = N.cca(ab[0], 1) - 120;
                  cb.gt(B, 2) && (B = 3);
                  Wa = this.match(Wa[0], J);
                  0 < Wa.length && (L = H.parseInt(Wa[0]));
                  if (0 > L || 255 < L) {
                    this.error =
                      'error: index offset ' + L + ' out of bounds. [0..255]';
                    I = !0;
                    break;
                  }
                  this.verbose &&
                    Ga.info(
                      'RELATIVE: type=' +
                        $a +
                        '==' +
                        sa[0] +
                        ' sel=' +
                        (null == B ? 'null' : H.string(cb.toFloat(B))) +
                        '==' +
                        ab[0] +
                        ' idx=' +
                        (null == kb ? 'null' : H.string(cb.toFloat(kb))) +
                        ' offset=' +
                        L,
                      {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 518,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      },
                    );
                }
                this.verbose &&
                  Ga.info(
                    '  emit argcode=' +
                      H.string(Y) +
                      '[' +
                      (null == kb ? 'null' : H.string(cb.toFloat(kb))) +
                      '][' +
                      W +
                      ']',
                    {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 525,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    },
                  );
                if (E)
                  (this.agalcode.writeShort(kb),
                    this.agalcode.writeByte(W),
                    this.agalcode.writeByte(Y.emitCode),
                    (F -= 32));
                else {
                  if (A) {
                    this.verbose &&
                      Ga.info('  emit sampler', {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 541,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                    K = 5;
                    Wa = eb = 0;
                    for (Y = null == C ? 0 : C.length; Wa < Y; )
                      ((W = Wa++),
                        this.verbose &&
                          Ga.info('    opt: ' + C[W], {
                            fileName: 'openfl/utils/AGALMiniAssembler.hx',
                            lineNumber: 552,
                            className: 'openfl.utils.AGALMiniAssembler',
                            methodName: 'assemble',
                          }),
                        (E = ma.SAMPLEMAP.h[C[W]]),
                        null == E
                          ? ((eb = parseFloat(C[W])),
                            this.verbose &&
                              Ga.info('    bias: ' + eb, {
                                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                                lineNumber: 565,
                                className: 'openfl.utils.AGALMiniAssembler',
                                methodName: 'assemble',
                              }))
                          : (16 != E.flag && (K &= ~(15 << E.flag)),
                            (K |= E.mask << E.flag)));
                    this.agalcode.writeShort(kb);
                    this.agalcode.writeByte((8 * eb) | 0);
                    this.agalcode.writeByte(0);
                    this.agalcode.writeUnsignedInt(K);
                    this.verbose &&
                      Ga.info('    bits: ' + (K - 5), {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 586,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                  } else
                    (0 == K && (this.agalcode.writeUnsignedInt(0), (F -= 32)),
                      this.agalcode.writeShort(kb),
                      this.agalcode.writeByte(L),
                      this.agalcode.writeByte(W),
                      this.agalcode.writeByte(Y.emitCode),
                      this.agalcode.writeByte($a),
                      this.agalcode.writeShort(eb ? B | 32768 : 0));
                  F -= 64;
                }
              }
              for (z = 0; z < F; ) (this.agalcode.writeByte(0), (z += 8));
              if (I) break;
            }
            ++y;
          }
          '' != this.error &&
            ((this.error += '\n  at line ' + y + ' ' + a[y]),
            Td.set_length(this.agalcode, 0),
            Ga.info(this.error, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 631,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            }));
          if (this.debugEnabled) {
            c = 'generated bytecode:';
            h = Td.get_length(this.agalcode);
            z = 0;
            for (t = h; z < t; )
              ((h = z++),
                0 == h % 16 && (c += '\n'),
                0 == h % 4 && (c += ' '),
                (h = O.hex(this.agalcode.b[h], 2)),
                2 > h.length && (h = '0' + h),
                (c += h));
            Ga.info(c, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 662,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            });
          }
          this.verbose &&
            Ga.info(
              'AGALMiniAssembler.assemble time: ' +
                (Ra.getTimer() - f) / 1e3 +
                's',
              {
                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                lineNumber: 667,
                className: 'openfl.utils.AGALMiniAssembler',
                methodName: 'assemble',
              },
            );
          return this.agalcode;
        },
        initregmap: function (a, b) {
          var c = ma.REGMAP,
            d = new Md(
              'va',
              'vertex attribute',
              0,
              b ? 1024 : 1 == a || 2 == a ? 7 : 15,
              66,
            );
          c.h.va = d;
          c = ma.REGMAP;
          d = new Md(
            'vc',
            'vertex constant',
            1,
            b ? 1024 : 1 == a ? 127 : 249,
            66,
          );
          c.h.vc = d;
          c = ma.REGMAP;
          d = new Md(
            'vt',
            'vertex temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            67,
          );
          c.h.vt = d;
          c = ma.REGMAP;
          d = new Md('vo', 'vertex output', 3, b ? 1024 : 0, 65);
          c.h.vo = d;
          c = ma.REGMAP;
          d = new Md('vi', 'varying', 4, b ? 1024 : 1 == a ? 7 : 9, 99);
          c.h.vi = d;
          c = ma.REGMAP;
          d = new Md(
            'fc',
            'fragment constant',
            1,
            b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199,
            34,
          );
          c.h.fc = d;
          c = ma.REGMAP;
          d = new Md(
            'ft',
            'fragment temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            35,
          );
          c.h.ft = d;
          c = ma.REGMAP;
          d = new Md('fs', 'texture sampler', 5, b ? 1024 : 7, 34);
          c.h.fs = d;
          c = ma.REGMAP;
          d = new Md('fo', 'fragment output', 3, b ? 1024 : 1 == a ? 0 : 3, 33);
          c.h.fo = d;
          c = ma.REGMAP;
          d = new Md(
            'fd',
            'fragment depth output',
            6,
            b ? 1024 : 1 == a ? -1 : 0,
            33,
          );
          c.h.fd = d;
          c = ma.REGMAP;
          d = new Md('iid', 'instance id', 7, b ? 1024 : 0, 66);
          c.h.iid = d;
          d = ma.REGMAP.h.vo;
          ma.REGMAP.h.op = d;
          d = ma.REGMAP.h.vi;
          ma.REGMAP.h.i = d;
          d = ma.REGMAP.h.vi;
          ma.REGMAP.h.v = d;
          d = ma.REGMAP.h.fo;
          ma.REGMAP.h.oc = d;
          d = ma.REGMAP.h.fd;
          ma.REGMAP.h.od = d;
          d = ma.REGMAP.h.vi;
          ma.REGMAP.h.fi = d;
        },
        match: function (a, b) {
          for (var c = [], d = 0; b.matchSub(a, d); )
            ((d = b.matched(0)),
              c.push(d),
              (d = b.matchedPos().pos + d.length));
          return c;
        },
        __class__: ma,
      };
      var Za = function (a, b, c, d) {
        this.name = a;
        this.numRegister = b;
        this.emitCode = c;
        this.flags = d;
      };
      g['openfl.utils._AGALMiniAssembler.OpCode'] = Za;
      Za.__name__ = 'openfl.utils._AGALMiniAssembler.OpCode';
      Za.prototype = {
        toString: function () {
          return (
            '[OpCode name="' +
            this.name +
            '", numRegister=' +
            this.numRegister +
            ', emitCode=' +
            this.emitCode +
            ', flags=' +
            this.flags +
            ']'
          );
        },
        __class__: Za,
      };
      var Md = function (a, b, c, d, f) {
        this.name = a;
        this.longName = b;
        this.emitCode = c;
        this.range = d;
        this.flags = f;
      };
      g['openfl.utils._AGALMiniAssembler.Register'] = Md;
      Md.__name__ = 'openfl.utils._AGALMiniAssembler.Register';
      Md.prototype = {
        toString: function () {
          return (
            '[Register name="' +
            this.name +
            '", longName="' +
            this.longName +
            '", emitCode=' +
            (null == this.emitCode
              ? 'null'
              : H.string(cb.toFloat(this.emitCode))) +
            ', range=' +
            (null == this.range ? 'null' : H.string(cb.toFloat(this.range))) +
            ', flags=' +
            (null == this.flags ? 'null' : H.string(cb.toFloat(this.flags))) +
            ']'
          );
        },
        __class__: Md,
      };
      var $b = function (a, b, c) {
        this.name = a;
        this.flag = b;
        this.mask = c;
      };
      g['openfl.utils._AGALMiniAssembler.Sampler'] = $b;
      $b.__name__ = 'openfl.utils._AGALMiniAssembler.Sampler';
      $b.prototype = { __class__: $b };
      var Mj = function () {};
      g['openfl.utils.IAssetCache'] = Mj;
      Mj.__name__ = 'openfl.utils.IAssetCache';
      Mj.__isInterface__ = !0;
      Mj.prototype = {
        __class__: Mj,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var Nj = function () {
        this.__enabled = !0;
        this.bitmapData = new Pa();
        this.font = new Pa();
        this.sound = new Pa();
      };
      g['openfl.utils.AssetCache'] = Nj;
      Nj.__name__ = 'openfl.utils.AssetCache';
      Nj.__interfaces__ = [Mj];
      Nj.prototype = {
        getFont: function (a) {
          return this.font.h[a];
        },
        hasFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.font.h, a);
        },
        setFont: function (a, b) {
          this.font.h[a] = b;
        },
        get_enabled: function () {
          return this.__enabled;
        },
        __class__: Nj,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var cf = function () {
        Wb.call(this);
      };
      g['openfl.utils.AssetLibrary'] = cf;
      cf.__name__ = 'openfl.utils.AssetLibrary';
      cf.fromBundle = function (a) {
        a = Wb.fromBundle(a);
        if (null != a) {
          if (a instanceof cf) return a;
          var b = new cf();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      cf.fromManifest = function (a) {
        a = Wb.fromManifest(a);
        if (null != a) {
          if (a instanceof cf) return a;
          var b = new cf();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      cf.__super__ = Wb;
      cf.prototype = v(Wb.prototype, {
        bind: function (a, b) {
          return !1;
        },
        exists: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.exists(a, b)
            : Wb.prototype.exists.call(this, a, b);
        },
        getAsset: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.getAsset(a, b)
            : Wb.prototype.getAsset.call(this, a, b);
        },
        getAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.getAudioBuffer(a)
            : Wb.prototype.getAudioBuffer.call(this, a);
        },
        getBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.getBytes(a)
            : Wb.prototype.getBytes.call(this, a);
        },
        getFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.getFont(a)
            : Wb.prototype.getFont.call(this, a);
        },
        getImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.getImage(a)
            : Wb.prototype.getImage.call(this, a);
        },
        getPath: function (a) {
          return null != this.__proxy
            ? this.__proxy.getPath(a)
            : Wb.prototype.getPath.call(this, a);
        },
        getText: function (a) {
          return null != this.__proxy
            ? this.__proxy.getText(a)
            : Wb.prototype.getText.call(this, a);
        },
        isLocal: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.isLocal(a, b)
            : Wb.prototype.isLocal.call(this, a, b);
        },
        load: function () {
          return null != this.__proxy
            ? this.__proxy.load()
            : Wb.prototype.load.call(this);
        },
        loadAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadAudioBuffer(a)
            : Wb.prototype.loadAudioBuffer.call(this, a);
        },
        loadBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadBytes(a)
            : Wb.prototype.loadBytes.call(this, a);
        },
        loadFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadFont(a)
            : Wb.prototype.loadFont.call(this, a);
        },
        loadImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadImage(a)
            : Wb.prototype.loadImage.call(this, a);
        },
        loadText: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadText(a)
            : Wb.prototype.loadText.call(this, a);
        },
        unload: function () {
          null != this.__proxy
            ? this.__proxy.unload()
            : Wb.prototype.unload.call(this);
        },
        __class__: cf,
      });
      var ac = function () {};
      g['openfl.utils.Assets'] = ac;
      ac.__name__ = 'openfl.utils.Assets';
      ac.exists = function (a, b) {
        return Fa.exists(a, b);
      };
      ac.getFont = function (a, b) {
        null == b && (b = !0);
        if (b && ac.cache.get_enabled() && ac.cache.hasFont(a))
          return ac.cache.getFont(a);
        var c = Fa.getFont(a, !1);
        if (null != c) {
          var d = new ha();
          d.__fromLimeFont(c);
          b && ac.cache.get_enabled() && ac.cache.setFont(a, d);
          return d;
        }
        return new ha();
      };
      ac.getText = function (a) {
        return Fa.getText(a);
      };
      var Td = {
          __properties__: {
            set_length: 'set_length',
            get_length: 'get_length',
          },
          fromArrayBuffer: function (a) {
            return null == a ? null : Vc.fromBytes(zb.ofData(a));
          },
          fromBytes: function (a) {
            return null == a ? null : a instanceof Vc ? a : Vc.fromBytes(a);
          },
          toArrayBuffer: function (a) {
            return a.b.bufferValue;
          },
          toBytes: function (a) {
            return a;
          },
          get_length: function (a) {
            return null == a ? 0 : a.length;
          },
          set_length: function (a, b) {
            0 <= b && (a.__resize(b), b < a.position && (a.position = b));
            return (a.length = b);
          },
        },
        rl = function () {};
      g['openfl.utils.IDataOutput'] = rl;
      rl.__name__ = 'openfl.utils.IDataOutput';
      rl.__isInterface__ = !0;
      var sl = function () {};
      g['openfl.utils.IDataInput'] = sl;
      sl.__name__ = 'openfl.utils.IDataInput';
      sl.__isInterface__ = !0;
      var Vc = function (a) {
        null == a && (a = 0);
        var b = new zb(new ArrayBuffer(a));
        zb.call(this, b.b.buffer);
        this.__allocated = a;
        null == Vc.__defaultEndian &&
          (Cc.get_endianness() == Wi.LITTLE_ENDIAN
            ? (Vc.__defaultEndian = 1)
            : (Vc.__defaultEndian = 0));
        this.__endian = Vc.__defaultEndian;
        this.objectEncoding = Vc.defaultObjectEncoding;
        this.position = 0;
      };
      g['openfl.utils.ByteArrayData'] = Vc;
      Vc.__name__ = 'openfl.utils.ByteArrayData';
      Vc.__interfaces__ = [rl, sl];
      Vc.fromBytes = function (a) {
        var b = new Vc();
        b.__fromBytes(a);
        return b;
      };
      Vc.__super__ = zb;
      Vc.prototype = v(zb.prototype, {
        readByte: function () {
          var a = this.readUnsignedByte();
          return 0 != (a & 128) ? a - 256 : a;
        },
        readInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedByte: function () {
          if (this.position < this.length) return this.b[this.position++];
          throw new Gh();
        },
        readUnsignedInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedShort: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          return 1 == this.__endian ? (b << 8) + a : (a << 8) | b;
        },
        readUTF: function () {
          var a = this.readUnsignedShort();
          return this.readUTFBytes(a);
        },
        readUTFBytes: function (a) {
          if (this.position + a > this.length) throw new Gh();
          this.position += a;
          return this.getString(this.position - a, a);
        },
        writeByte: function (a) {
          this.__resize(this.position + 1);
          this.b[this.position++] = a & 255;
        },
        writeBytes: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          0 != Td.get_length(a) &&
            (0 == c && (c = Td.get_length(a) - b),
            this.__resize(this.position + c),
            this.blit(this.position, a, b, c),
            (this.position += c));
        },
        writeInt: function (a) {
          this.__resize(this.position + 4);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 24) & 255))
            : ((this.b[this.position++] = (a >> 24) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeShort: function (a) {
          this.__resize(this.position + 2);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255))
            : ((this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeUnsignedInt: function (a) {
          this.writeInt(a);
        },
        __fromBytes: function (a) {
          this.b = a.b;
          this.__allocated = a.length;
          this.data = a.data;
          this.length = a.length;
        },
        __resize: function (a) {
          if (a > this.__allocated) {
            var b = new zb(new ArrayBuffer((3 * (a + 1)) >> 1));
            if (0 < this.__allocated) {
              var c = this.length;
              this.length = this.__allocated;
              b.blit(0, this, 0, this.__allocated);
              this.length = c;
            }
            this.b = b.b;
            this.__allocated = b.length;
            this.data = b.data;
          }
          this.length < a && (this.length = a);
        },
        __class__: Vc,
      });
      var Sd = {
          __get: function (a, b) {
            if (null == a || null == b) return null;
            if (Object.prototype.hasOwnProperty.call(a, b))
              return ya.field(a, b);
            if (a instanceof lb) {
              var c = a.getChildByName(b);
              if (null != c) return c;
            }
            return ya.getProperty(a, b);
          },
          __eq: function (a, b) {
            return a == b;
          },
          __neq: function (a, b) {
            return a != b;
          },
        },
        Oj = function () {};
      g['haxe.lang.Iterator'] = Oj;
      Oj.__name__ = 'haxe.lang.Iterator';
      Oj.__isInterface__ = !0;
      Oj.prototype = { __class__: Oj };
      var Pj = function () {};
      g['haxe.lang.Iterable'] = Pj;
      Pj.__name__ = 'haxe.lang.Iterable';
      Pj.__isInterface__ = !0;
      Pj.prototype = { __class__: Pj };
      var Hi = function (a, b) {
        null == b && (b = 0);
        if (isNaN(a) || 0 > a)
          throw new Vb(
            'The delay specified is negative or not a finite number',
          );
        oa.call(this);
        this.__delay = a;
        this.__repeatCount = b;
        this.running = !1;
        this.currentCount = 0;
      };
      g['openfl.utils.Timer'] = Hi;
      Hi.__name__ = 'openfl.utils.Timer';
      Hi.__super__ = oa;
      Hi.prototype = v(oa.prototype, {
        start: function () {
          this.running ||
            ((this.running = !0),
            (this.__timerID = window.setInterval(
              l(this, this.timer_onTimer),
              this.__delay | 0,
            )));
        },
        stop: function () {
          this.running = !1;
          null != this.__timerID &&
            (window.clearInterval(this.__timerID), (this.__timerID = null));
        },
        __handleUpdateAfterEvent: function () {
          null != Ra.get_current() &&
            null != Ra.get_current().stage &&
            Ra.get_current().stage.__renderAfterEvent();
        },
        timer_onTimer: function () {
          this.currentCount++;
          if (
            0 < this.__repeatCount &&
            this.currentCount >= this.__repeatCount
          ) {
            this.stop();
            var a = new Rg('timer');
            this.dispatchEvent(a);
            a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
            a = new Rg('timerComplete');
          } else a = new Rg('timer');
          this.dispatchEvent(a);
          a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
        },
        __class__: Hi,
      });
      var Dc = function () {};
      g['openfl.utils._internal.Lib'] = Dc;
      Dc.__name__ = 'openfl.utils._internal.Lib';
      var $f = function () {
        this.rollOutStack = [];
      };
      g['openfl.utils._internal.TouchData'] = $f;
      $f.__name__ = 'openfl.utils._internal.TouchData';
      $f.prototype = {
        reset: function () {
          this.touchOverTarget = this.touchDownTarget = this.touch = null;
          this.rollOutStack.splice(0, this.rollOutStack.length);
        },
        __class__: $f,
      };
      E.$haxeUID |= 0;
      'undefined' != typeof performance &&
        'function' == typeof performance.now &&
        (N.now = performance.now.bind(performance));
      g.Math = Math;
      null == String.fromCodePoint &&
        (String.fromCodePoint = function (a) {
          return 65536 > a
            ? String.fromCharCode(a)
            : String.fromCharCode((a >> 10) + 55232) +
                String.fromCharCode((a & 1023) + 56320);
        });
      Object.defineProperty(String.prototype, '__class__', {
        value: (g.String = String),
        enumerable: !1,
        writable: !0,
      });
      String.__name__ = 'String';
      g.Array = Array;
      Array.__name__ = 'Array';
      Date.prototype.__class__ = g.Date = Date;
      Date.__name__ = 'Date';
      var vl = {},
        Hl = {},
        Il = Number,
        Gl = Boolean,
        xl = {},
        yl = {};
      zd.NIL = new zd(null, null);
      va.__toStr = {}.toString;
      'undefined' == typeof window &&
        (E.onmessage = function (a) {
          a = a.data;
          try {
            ((E.onmessage = ((G = Ad.__current), l(G, G.dispatchMessage))),
              Fl.toFunction(a)());
          } catch (b) {
            ((Ta.lastError = b), Ad.__current.destroy());
          }
        });
      R.__alpha16 = new Uint32Array(256);
      for (var Ug = 0; 256 > Ug; ) {
        var Jh = Ug++;
        R.__alpha16[Jh] = Math.ceil(257.00392156862745 * Jh);
      }
      R.__clamp = new Uint8Array(511);
      for (Ug = 0; 255 > Ug; ) ((Jh = Ug++), (R.__clamp[Jh] = Jh));
      for (Ug = 255; 511 > Ug; ) ((Jh = Ug++), (R.__clamp[Jh] = 255));
      Ga.level = 3;
      'undefined' == typeof console && (console = {});
      null == console.log && (console.log = function () {});
      z.hitTestCanvas = qf.get_supported()
        ? window.document.createElement('canvas')
        : null;
      z.hitTestContext = qf.get_supported()
        ? z.hitTestCanvas.getContext('2d')
        : null;
      S.__meta__ = {
        fields: {
          __cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
          removeEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      S.__broadcastEvents = new Pa();
      S.__instanceCount = 0;
      S.__tempStack = new nb(
        function () {
          return la.toObjectVector(null);
        },
        function (a) {
          a.set_length(0);
        },
      );
      sb.MIN_WIDTH = 400;
      sb.MIN_HEIGHT = 400;
      sb.preview = !1;
      ha.__fontByName = new Pa();
      ha.__registeredFonts = [];
      W.Element = 0;
      W.PCData = 1;
      W.CData = 2;
      W.Comment = 3;
      W.DocType = 4;
      W.ProcessingInstruction = 5;
      W.Document = 6;
      q.offset = 10;
      q.delay = 4;
      u.windows = [];
      D.black = 0;
      D.dark = 4473924;
      D.medium = 8947848;
      D.light = 13421772;
      D.white = 16777215;
      D.uiFont = '_sans';
      D.uiFontMono = '_typewriter';
      D.smallSize = 20;
      D.normalSize = 24;
      xc.okCancel = ['OK', 'Cancel'];
      Id.maxFaceLength = 13;
      Hc.lastTab = 0;
      Xa.SCALE = 1;
      Xa.CX = 0;
      Xa.CY = 0;
      I.__pool = new nb(
        function () {
          return new I();
        },
        function (a) {
          a.setTo(0, 0);
        },
      );
      Qa._p0 = new I(-819.2, 0);
      Qa._p1 = new I(819.2, 0);
      fc.lx = 0;
      fc.ly = 0;
      Ja.JOINTS = (function (a) {
        a = new mc();
        a.h[2] = 'round';
        a.h[1] = 'miter';
        a.h[0] = 'bevel';
        return a;
      })(this);
      Ja.CAPS = (function (a) {
        a = new mc();
        a.h[1] = 'round';
        a.h[2] = 'square';
        a.h[0] = 'butt';
        return a;
      })(this);
      Ja.BLEND_MODES = (function (a) {
        a = new mc();
        a.h[10] = 'normal';
        a.h[9] = 'multiply';
        a.h[0] = 'plus-lighter';
        return a;
      })(this);
      Ja.gradients = [];
      Ja.imports = [];
      Ja.substituteFont = Ja.substituteGenerics;
      Ic.__meta__ = { obj: { generic: null } };
      Qb.EDGE_STACK = new Uint32Array(512);
      Qb.EPSILON = Math.pow(2, -52);
      kd.PROCESSES = ['None', 'Offset'];
      kd.ROOF_STYLES = ['Plain', 'Hip', 'Gable'];
      kd.DISPLAY_MODES = ['Block', 'Lots', 'Complex', 'Hidden'];
      kd.TOWER_SHAPES = ['Round', 'Square', 'Open'];
      kd.FIELD_MODES = ['Furrows', 'Plain', 'Hidden'];
      kd.DISTRICTS_MODE = ['Hidden', 'Straight', 'Curved', 'Legend'];
      kd.LANDMARK_MODES = ['Hidden', 'Icon', 'Legend'];
      ze.marks = [0.5, 0.333, 0.666];
      Rd.embeddedScanned = !1;
      Rd.embedded = (function (a) {
        a = new Pa();
        a.h.default_font = {
          name: 'IM Fell Great Primer',
          url: 'https://fonts.googleapis.com/css2?family=IM+Fell+Great+Primer&display=swap',
          generic: 'serif',
        };
        return a;
      })(this);
      Ma.dirs = (function (a) {
        a = new pa();
        a.set(new I(1, 0), 'east');
        a.set(new I(-1, 0), 'west');
        a.set(new I(0, 1), 'south');
        a.set(new I(0, -1), 'north');
        return a;
      })(this);
      hd.outlineNormal = !0;
      hd.outlineSolid = !0;
      K.strokeNormal = 1.6;
      K.strokeThin = 0.5 * K.strokeNormal;
      K.strokeThick = 2 * K.strokeNormal;
      K.tintMethods = ['Spectrum', 'Brightness', 'Overlay'];
      K.lineInvScale = 1;
      K.thinLines = !0;
      K.colorPaper = 13419960;
      K.colorDark = 1710359;
      K.colorRoof = 10854549;
      K.colorWater = 8354417;
      K.colorGreen = 10854291;
      K.colorRoad = K.colorPaper;
      K.colorWall = K.colorDark;
      K.colorTree = 8354417;
      K.colorLight = 13419960;
      K.colorLabel = K.colorDark;
      K.tintMethod = K.tintMethods[0];
      K.tintStrength = 30;
      K.weathering = 20;
      gc.cache = [];
      mg.drawNormalTower_unit = new I();
      Ub.sizes = (function (a) {
        a = new Pa();
        a.h.small = { min: 10, max: 20 };
        a.h.medium = { min: 20, max: 40 };
        a.h.large = { min: 40, max: 80 };
        return a;
      })(this);
      Ub.nextSize = 25;
      pc.THICKNESS = 1.9;
      pc.TOWER_RADIUS = 1.9;
      pc.LTOWER_RADIUS = 2.5;
      C.seed = 1;
      C.saved = -1;
      Se.permutation = [
        151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225,
        140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247,
        120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57,
        177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74,
        165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122,
        60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54,
        65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169,
        200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3,
        64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85,
        212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170,
        213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43,
        172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185,
        112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191,
        179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31,
        181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150,
        254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195,
        78, 66, 215, 61, 156, 180,
      ];
      Ae.pattern = new ck(30, 30, 2.25);
      Ae.noise = og.fractal(5, 0.05);
      Bb.newModel = new ec();
      Bb.titleChanged = new ec();
      Bb.geometryChanged = new ec();
      Bb.districtsChanged = new Nc();
      Bb.landmarksChanged = new Nc();
      Bb.unitsChanged = new Nc();
      Db.meters = new Db('m', 0.25);
      Db.yards = new Db('yd', 0.2286);
      Db.metric = new Db('km', 250, Db.meters);
      Db.imperial = new Db('mi', 402.336, Db.yards);
      Db._current = Db.metric;
      yd.MIN_SUBPLOT = 400;
      yd.MIN_FURROW = 1.3;
      Te.DWELLINGS_URL = 'https://watabou.github.io/dwellings/';
      vc.saved = {};
      Kd.features =
        'Citadel;citadel;Temple;temple;Inner castle;urban_castle;Plaza;plaza;Walls;walls;Shanty town;shantytown;River;river;Coast;coast;Greens;green'.split(
          ';',
        );
      Kd.nonRandom = ['Greens', 'Farms'];
      ke.lastTab = 0;
      Ec.toggleBuildings_displayMode = 'Lots';
      Ec.tools = [Kd, qg, ke];
      Fb.__meta__ = {
        fields: {
          image: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __framebufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __indexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __surface: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __vertexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __fromImage: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Fb.__tempVector = new ig();
      na.__pool = new nb(
        function () {
          return new na();
        },
        function (a) {
          a.setTo(0, 0, 0, 0);
        },
      );
      Ad.__current = new Ad(E.location.href);
      Ad.__isWorker = 'undefined' == typeof window;
      Ad.__messages = new bb();
      Ad.__resolveMethods = new bb();
      ua.__meta__ = {
        fields: {
          equals: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      ua.__identity = new ua();
      ua.__pool = new nb(
        function () {
          return new ua();
        },
        function (a) {
          a.identity();
        },
      );
      Tb.__pool = new nb(
        function () {
          return new Tb();
        },
        function (a) {
          a.__identity();
        },
      );
      jd.pixel = new Fb(1, 1, !1, 16711680);
      jd.cache = [];
      tb.o = new I();
      tb.convexity = 0;
      tb.secondary = 0;
      tb.mainRing = 0;
      tb.auxRing = 0;
      tb.north = 0;
      tb.south = 0;
      Ca.MARGIN = 10;
      pg.RADIUS = 80;
      ra.ARMORIA = 'https://armoria.herokuapp.com';
      ra.LO_RES = 200;
      ra.HI_RES = 800;
      ra.updated = new Nc();
      ra.setHiRes = new ec();
      ra.loading = !1;
      nf.pos = yc.BOTTOM_LEFT;
      Uc.pos = yc.TOP_LEFT;
      Uc.auto = !0;
      me.brushRadius = 20;
      Jf.brushRadius = 20;
      Kf.brushRadius = 20;
      Lf.brushRadius = 20;
      vb.fontTitle = {
        face: null,
        embedded: 'default_font',
        size: 72,
        bold: !1,
        italic: !1,
      };
      vb.fontLabel = {
        face: null,
        embedded: 'default_font',
        size: 36,
        bold: !1,
        italic: !1,
      };
      vb.fontLegend = {
        face: null,
        embedded: 'default_font',
        size: 28,
        bold: !1,
        italic: !1,
      };
      vb.fontPin = {
        face: null,
        embedded: 'default_font',
        size: 28,
        bold: !1,
        italic: !1,
      };
      vb.fontElement = {
        face: null,
        embedded: 'default_font',
        size: 28,
        bold: !1,
        italic: !1,
      };
      Mf.EDITOR = 'https://azgaar.github.io/Armoria';
      nd.VOWELS =
        'you ye yo ya ie ee oo ea ei ey oi ou ai ay au oi oy ue ua u o a e i y'.split(
          ' ',
        );
      nd.CONSONANTS =
        'wh th ck ch sh gh ph qu b c d f g h j k l m n p q r s t v w x z'.split(
          ' ',
        );
      Aa.baseURL = 'https://watabou.github.io/city-generator/0.10.0/';
      jb.plurals = (function (a) {
        a = new Pa();
        a.h.child = 'children';
        a.h.fish = 'fish';
        return a;
      })(this);
      Oe.rng = Math.random;
      Rh.values = (function (a) {
        a = new Pa();
        a.h.aliceblue = 15792383;
        a.h.antiquewhite = 16444375;
        a.h.aqua = 65535;
        a.h.aquamarine = 8388564;
        a.h.azure = 15794175;
        a.h.beige = 16119260;
        a.h.bisque = 16770244;
        a.h.black = 0;
        a.h.blanchedalmond = 16772045;
        a.h.blue = 255;
        a.h.blueviolet = 9055202;
        a.h.brown = 10824234;
        a.h.burlywood = 14596231;
        a.h.cadetblue = 6266528;
        a.h.chartreuse = 8388352;
        a.h.chocolate = 13789470;
        a.h.coral = 16744272;
        a.h.cornflowerblue = 6591981;
        a.h.cornsilk = 16775388;
        a.h.crimson = 14423100;
        a.h.cyan = 65535;
        a.h.darkblue = 139;
        a.h.darkcyan = 35723;
        a.h.darkgoldenrod = 12092939;
        a.h.darkgreen = 25600;
        a.h.darkgrey = 11119017;
        a.h.darkkhaki = 12433259;
        a.h.darkmagenta = 9109643;
        a.h.darkolivegreen = 5597999;
        a.h.darkorange = 16747520;
        a.h.darkorchid = 10040012;
        a.h.darkred = 9109504;
        a.h.darksalmon = 15308410;
        a.h.darkseagreen = 9419919;
        a.h.darkslateblue = 4734347;
        a.h.darkslategrey = 3100495;
        a.h.darkturquoise = 52945;
        a.h.darkviolet = 9699539;
        a.h.deeppink = 16716947;
        a.h.deepskyblue = 49151;
        a.h.dimgrey = 6908265;
        a.h.dodgerblue = 2003199;
        a.h.firebrick = 11674146;
        a.h.floralwhite = 16775920;
        a.h.forestgreen = 2263842;
        a.h.fuchsia = 16711935;
        a.h.gainsboro = 14474460;
        a.h.ghostwhite = 16316671;
        a.h.goldenrod = 14329120;
        a.h.gold = 16766720;
        a.h.green = 32768;
        a.h.greenyellow = 11403055;
        a.h.grey = 8421504;
        a.h.honeydew = 15794160;
        a.h.hotpink = 16738740;
        a.h.indianred = 13458524;
        a.h.indigo = 4915330;
        a.h.ivory = 16777200;
        a.h.khaki = 15787660;
        a.h.lavenderblush = 16773365;
        a.h.lavender = 15132410;
        a.h.lawngreen = 8190976;
        a.h.lemonchiffon = 16775885;
        a.h.lightblue = 11393254;
        a.h.lightcoral = 15761536;
        a.h.lightcyan = 14745599;
        a.h.lightgoldenrodyellow = 16448210;
        a.h.lightgreen = 9498256;
        a.h.lightgrey = 13882323;
        a.h.lightpink = 16758465;
        a.h.lightsalmon = 16752762;
        a.h.lightseagreen = 2142890;
        a.h.lightskyblue = 8900346;
        a.h.lightslategrey = 7833753;
        a.h.lightsteelblue = 11584734;
        a.h.lightyellow = 16777184;
        a.h.lime = 65280;
        a.h.limegreen = 3329330;
        a.h.linen = 16445670;
        a.h.magenta = 16711935;
        a.h.maroon = 8388608;
        a.h.mediumaquamarine = 6737322;
        a.h.mediumblue = 205;
        a.h.mediumorchid = 12211667;
        a.h.mediumpurple = 9662683;
        a.h.mediumseagreen = 3978097;
        a.h.mediumslateblue = 8087790;
        a.h.mediumspringgreen = 64154;
        a.h.mediumturquoise = 4772300;
        a.h.mediumvioletred = 13047173;
        a.h.midnightblue = 1644912;
        a.h.mintcream = 16121850;
        a.h.mistyrose = 16770273;
        a.h.moccasin = 16770229;
        a.h.navajowhite = 16768685;
        a.h.navy = 128;
        a.h.oldlace = 16643558;
        a.h.olive = 8421376;
        a.h.olivedrab = 7048739;
        a.h.orange = 16753920;
        a.h.orangered = 16729344;
        a.h.orchid = 14315734;
        a.h.palegoldenrod = 15657130;
        a.h.palegreen = 10025880;
        a.h.paleturquoise = 11529966;
        a.h.palevioletred = 14381203;
        a.h.papayawhip = 16773077;
        a.h.peachpuff = 16767673;
        a.h.peru = 13468991;
        a.h.pink = 16761035;
        a.h.plum = 14524637;
        a.h.powderblue = 11591910;
        a.h.purple = 8388736;
        a.h.rebeccapurple = 6697881;
        a.h.red = 16711680;
        a.h.rosybrown = 12357519;
        a.h.royalblue = 4286945;
        a.h.saddlebrown = 9127187;
        a.h.salmon = 16416882;
        a.h.sandybrown = 16032864;
        a.h.seagreen = 3050327;
        a.h.seashell = 16774638;
        a.h.sienna = 10506797;
        a.h.silver = 12632256;
        a.h.skyblue = 8900331;
        a.h.slateblue = 6970061;
        a.h.slategrey = 7372944;
        a.h.snow = 16775930;
        a.h.springgreen = 65407;
        a.h.steelblue = 4620980;
        a.h.tan = 13808780;
        a.h.teal = 32896;
        a.h.thistle = 14204888;
        a.h.tomato = 16737095;
        a.h.turquoise = 4251856;
        a.h.violet = 15631086;
        a.h.wheat = 16113331;
        a.h.white = 16777215;
        a.h.whitesmoke = 16119285;
        a.h.yellow = 16776960;
        a.h.yellowgreen = 10145074;
        return a;
      })(this);
      rb._tick = new ec();
      rb.lastTime = 0;
      rb.timeScale = 1;
      Bd.USE_CACHE = !1;
      Bd.USE_ENUM_INDEX = !1;
      Bd.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      pd.DEFAULT_RESOLVER = new Ii();
      pd.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      ef.escapes = (function (a) {
        a = new Pa();
        a.h.lt = '<';
        a.h.gt = '>';
        a.h.amp = '&';
        a.h.quot = '"';
        a.h.apos = "'";
        return a;
      })(this);
      ad.LEN_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, -1, -1,
      ];
      ad.LEN_BASE_VAL_TBL = [
        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
        67, 83, 99, 115, 131, 163, 195, 227, 258,
      ];
      ad.DIST_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, -1, -1,
      ];
      ad.DIST_BASE_VAL_TBL = [
        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
        513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577,
      ];
      ad.CODE_LENGTHS_POS = [
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ];
      Ba.activeRequests = 0;
      Ba.requestLimit = 17;
      Ba.requestQueue = new bb();
      Ha.dummyCharacter = '\u007f';
      Ha.windowID = 0;
      Be.DICTIONARY =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split(
          '',
        );
      Be.EXTENDED_DICTIONARY = (function (a) {
        a = [];
        for (var b = 0, c = Be.DICTIONARY; b < c.length; ) {
          var d = c[b];
          ++b;
          for (var f = 0, h = Be.DICTIONARY; f < h.length; ) {
            var k = h[f];
            ++f;
            a.push(d + k);
          }
        }
        return a;
      })(this);
      Cd.MUL_TABLE = [
        1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265,
        497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269,
        261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369,
        361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69,
        271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446,
        55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371,
        367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317,
        157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277,
        275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491,
        61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221,
        439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202,
        401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185,
        23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341,
        339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79,
        315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295,
        147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69,
        275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130,
        259, 129, 257, 1,
      ];
      Cd.SHG_TABLE = [
        0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14,
        14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15,
        15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15,
        12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14,
        16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16,
        14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16,
        15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16,
        17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16,
        17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15,
        16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17,
        17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17,
        16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14,
        17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16,
        17, 16, 17, 9,
      ];
      pb.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      zc.onUpdate = new Ac();
      zc.__updated = !1;
      He.sensorByID = new mc();
      He.sensors = [];
      qc.devices = new mc();
      qc.onConnect = new Ak();
      nc.devices = new mc();
      nc.onConnect = new Bk();
      dc.onCancel = new Eg();
      dc.onEnd = new Eg();
      dc.onMove = new Eg();
      dc.onStart = new Eg();
      Fa.cache = new Ek();
      Fa.onChange = new Ac();
      Fa.bundlePaths = new Pa();
      Fa.libraries = new Pa();
      Fa.libraryPaths = new Pa();
      Ga.throwErrors = !0;
      Ra.__lastTimerID = 0;
      Ra.__timers = new mc();
      Ye.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Zi.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Ie.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      $i.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Yg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      eg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Vg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      qd.__meta__ = {
        fields: {
          __context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __type: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      aj.__meta__ = {
        fields: {
          cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix3: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applyMatrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeCairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Ue.__meta__ = {
        fields: {
          context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applySmoothing: { SuppressWarnings: ['checkstyle:Dynamic'] },
          setTransform: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ej.__meta__ = {
        fields: {
          __element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      wh.__meta__ = {
        fields: {
          element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Dd.__meta__ = {
        fields: { glProgram: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      te.__meta__ = {
        statics: {
          create: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
        fields: { parameters: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      te.__rootURL = qf.get_supported() ? window.document.URL : '';
      db.__meta__ = {
        fields: {
          gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projection: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projectionFlipped: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      db.__alphaValue = [1];
      db.__colorMultipliersValue = [0, 0, 0, 0];
      db.__colorOffsetsValue = [0, 0, 0, 0];
      db.__emptyColorValue = [0, 0, 0, 0];
      db.__hasColorTransformValue = [!1];
      db.__scissorRectangle = new na();
      db.__textureSizeValue = [0, 0];
      Kh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { onComplete: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Wg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      hj.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Hg.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Kg.__meta__ = {
        fields: {
          __broadcastEvent: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __dispatchEvent: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchStack: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchTarget: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __handleError: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      wj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      uh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { _: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      vh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Tf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      sd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { o: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      sd.empty = new sd();
      z.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          windingRule: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createBitmapFill: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createGradientPattern: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      z.fillCommands = new sd();
      z.strokeCommands = new sd();
      Q.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ze.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          renderTileContainer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Uf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Vd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ch.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Xf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Yb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Yb.blankBitmapData = new Fb(1, 1, !1, 0);
      Yb.tempColorTransform = new Tb(1, 1, 1, 1, 0, 0, 0, 0);
      Wf.opaqueBitmapData = new Fb(1, 1, !1, 0);
      Ee.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      bf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      V.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Wd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Wd.__textureSizeValue = [0, 0];
      Zb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      rd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      wf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      uf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      vf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      $e.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ue.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ag.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      jj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          overrideIntValues: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ub.__glDepthStencil = -1;
      ub.__glMaxTextureMaxAnisotropy = -1;
      ub.__glMaxViewportDims = -1;
      ub.__glMemoryCurrentAvailable = -1;
      ub.__glMemoryTotalAvailable = -1;
      ub.__glTextureMaxAnisotropy = -1;
      Aj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Fh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      bd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      bd.limitedProfile = !0;
      Lg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Bj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Mg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      bg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Dh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Eb.__meta__ = {
        fields: {
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __getGLFramebuffer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Xg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Bf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Bf.supportsWeakReference = Object.prototype.hasOwnProperty.call(
        E,
        'WeakRef',
      );
      Sc.__invertAlphaShader = new Kj();
      Sc.__blurAlphaShader = new Fj();
      Sc.__combineShader = new Hj();
      Sc.__innerCombineShader = new Jj();
      Sc.__combineKnockoutShader = new Gj();
      Sc.__innerCombineKnockoutShader = new Ij();
      cg.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      ve.__soundChannels = [];
      ve.__soundTransform = new cg();
      $c.defaultObjectEncoding = 10;
      xf.followRedirects = !0;
      xf.idleTimeout = 0;
      xf.manageCookies = !0;
      Ig.currentDomain = new Ig(null);
      we.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      Ih.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      La.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      La.__regexAlign = new ja('align\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      La.__regexBreakTag = new ja('<br\\s*/?>', 'gi');
      La.__regexBlockIndent = new ja(
        'blockindent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      La.__regexClass = new ja('class\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      La.__regexColor = new ja('color\\s?=\\s?("#([^"]+)"|\'#([^\']+)\')', 'i');
      La.__regexEntityApos = new ja('&apos;', 'g');
      La.__regexEntityNbsp = new ja('&nbsp;', 'g');
      La.__regexCharEntity = new ja('&#(?:([0-9]+)|(x[0-9a-fA-F]+));', 'g');
      La.__regexFace = new ja('face\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      La.__regexHTMLTag = new ja('<.*?>', 'g');
      La.__regexHref = new ja('href\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      La.__regexIndent = new ja(
        ' indent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      La.__regexLeading = new ja(
        'leading\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      La.__regexLeftMargin = new ja(
        'leftmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      La.__regexRightMargin = new ja(
        'rightmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      La.__regexSize = new ja('size\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      La.__regexTabStops = new ja(
        'tabstops\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Tg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Nb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Lj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      qb.__meta__ = {
        fields: {
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      qb.numDevices = 0;
      qb.__deviceList = [];
      qb.__instances = [];
      qb.__devices = new pa();
      Jk.__cursor = 'auto';
      ma.__meta__ = {
        obj: {
          SuppressWarnings: [
            ['checkstyle:ConstantName', 'checkstyle:FieldDocComment'],
          ],
        },
      };
      ma.OPMAP = new Pa();
      ma.REGMAP = new Pa();
      ma.SAMPLEMAP = new Pa();
      ma.initialized = !1;
      Za.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Md.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      $b.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ac.cache = new Nj();
      Vc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Vc.defaultObjectEncoding = 10;
      Sd.__meta__ = {
        statics: {
          __get: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Oj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Pj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Dc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      $f.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { touch: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      $f.__pool = new nb(
        function () {
          return new $f();
        },
        function (a) {
          a.reset();
        },
      );
      aa.main();
    })(
      'undefined' != typeof t
        ? t
        : 'undefined' != typeof window
          ? window
          : 'undefined' != typeof self
            ? self
            : this,
      'undefined' != typeof window
        ? window
        : 'undefined' != typeof E
          ? E
          : 'undefined' != typeof self
            ? self
            : this,
    );
  };
  'undefined' !== typeof self && self.constructor.name.includes('Worker')
    ? E({}, t)
    : ((A.lime = A.lime || {}),
      (A.lime.$scripts = A.lime.$scripts || {}),
      (A.lime.$scripts.mfcg = E),
      (A.lime.embed = function (E) {
        var B = {},
          M = A.lime.$scripts[E];
        if (!M) throw Error('Cannot find project name "' + E + '"');
        M(B, t);
        for (var aa in B) A[aa] = A[aa] || B[aa];
        (M = B.lime || window.lime) &&
          M.embed &&
          this !== M.embed &&
          M.embed.apply(M, arguments);
        return B;
      }));
  'function' === typeof define &&
    define.amd &&
    (define([], function () {
      return A.lime;
    }),
    (define.__amd = define.amd),
    (define.amd = null));
};
$lime_init(
  'undefined' !== typeof exports
    ? exports
    : 'function' === typeof define && define.amd
      ? {}
      : 'undefined' !== typeof window
        ? window
        : 'undefined' !== typeof self
          ? self
          : this,
  'undefined' !== typeof window
    ? window
    : 'undefined' !== typeof global
      ? global
      : 'undefined' !== typeof self
        ? self
        : this,
);
('undefined' !== typeof self && self.constructor.name.includes('Worker')) ||
  (!(function () {
    var A = function () {
      this.init();
    };
    A.prototype = {
      init: function () {
        var g = this || t;
        return (
          (g._counter = 1e3),
          (g._html5AudioPool = []),
          (g.html5PoolSize = 10),
          (g._codecs = {}),
          (g._howls = []),
          (g._muted = !1),
          (g._volume = 1),
          (g._canPlayEvent = 'canplaythrough'),
          (g._navigator =
            'undefined' != typeof window && window.navigator
              ? window.navigator
              : null),
          (g.masterGain = null),
          (g.noAudio = !1),
          (g.usingWebAudio = !0),
          (g.autoSuspend = !0),
          (g.ctx = null),
          (g.autoUnlock = !0),
          g._setup(),
          g
        );
      },
      volume: function (g) {
        var r = this || t;
        if (
          ((g = parseFloat(g)), r.ctx || l(), void 0 !== g && 0 <= g && 1 >= g)
        ) {
          if (((r._volume = g), r._muted)) return r;
          r.usingWebAudio &&
            r.masterGain.gain.setValueAtTime(g, t.ctx.currentTime);
          for (var y = 0; y < r._howls.length; y++)
            if (!r._howls[y]._webAudio)
              for (
                var v = r._howls[y]._getSoundIds(), E = 0;
                E < v.length;
                E++
              ) {
                var sa = r._howls[y]._soundById(v[E]);
                sa && sa._node && (sa._node.volume = sa._volume * g);
              }
          return r;
        }
        return r._volume;
      },
      mute: function (g) {
        var r = this || t;
        r.ctx || l();
        r._muted = g;
        r.usingWebAudio &&
          r.masterGain.gain.setValueAtTime(
            g ? 0 : r._volume,
            t.ctx.currentTime,
          );
        for (var y = 0; y < r._howls.length; y++)
          if (!r._howls[y]._webAudio)
            for (var v = r._howls[y]._getSoundIds(), E = 0; E < v.length; E++) {
              var sa = r._howls[y]._soundById(v[E]);
              sa && sa._node && (sa._node.muted = !!g || sa._muted);
            }
        return r;
      },
      stop: function () {
        for (var g = this || t, r = 0; r < g._howls.length; r++)
          g._howls[r].stop();
        return g;
      },
      unload: function () {
        for (var g = this || t, r = g._howls.length - 1; 0 <= r; r--)
          g._howls[r].unload();
        return (
          g.usingWebAudio &&
            g.ctx &&
            void 0 !== g.ctx.close &&
            (g.ctx.close(), (g.ctx = null), l()),
          g
        );
      },
      codecs: function (g) {
        return (this || t)._codecs[g.replace(/^x-/, '')];
      },
      _setup: function () {
        var g = this || t;
        if (
          ((g.state = g.ctx ? g.ctx.state || 'suspended' : 'suspended'),
          g._autoSuspend(),
          !g.usingWebAudio)
        )
          if ('undefined' != typeof Audio)
            try {
              var r = new Audio();
              void 0 === r.oncanplaythrough && (g._canPlayEvent = 'canplay');
            } catch (y) {
              g.noAudio = !0;
            }
          else g.noAudio = !0;
        try {
          ((r = new Audio()), r.muted && (g.noAudio = !0));
        } catch (y) {}
        return (g.noAudio || g._setupCodecs(), g);
      },
      _setupCodecs: function () {
        var g = this || t,
          r = null;
        try {
          r = 'undefined' != typeof Audio ? new Audio() : null;
        } catch (ab) {
          return g;
        }
        if (!r || 'function' != typeof r.canPlayType) return g;
        var l = r.canPlayType('audio/mpeg;').replace(/^no$/, ''),
          v = g._navigator ? g._navigator.userAgent : '',
          E = v.match(/OPR\/(\d+)/g);
        E = E && 33 > parseInt(E[0].split('/')[1], 10);
        var sa = -1 !== v.indexOf('Safari') && -1 === v.indexOf('Chrome');
        v = v.match(/Version\/(.*?) /);
        v = sa && v && 15 > parseInt(v[1], 10);
        return (
          (g._codecs = {
            mp3: !(
              E ||
              (!l && !r.canPlayType('audio/mp3;').replace(/^no$/, ''))
            ),
            mpeg: !!l,
            opus: !!r
              .canPlayType('audio/ogg; codecs="opus"')
              .replace(/^no$/, ''),
            ogg: !!r
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            oga: !!r
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            wav: !!(
              r.canPlayType('audio/wav; codecs="1"') ||
              r.canPlayType('audio/wav')
            ).replace(/^no$/, ''),
            aac: !!r.canPlayType('audio/aac;').replace(/^no$/, ''),
            caf: !!r.canPlayType('audio/x-caf;').replace(/^no$/, ''),
            m4a: !!(
              r.canPlayType('audio/x-m4a;') ||
              r.canPlayType('audio/m4a;') ||
              r.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            m4b: !!(
              r.canPlayType('audio/x-m4b;') ||
              r.canPlayType('audio/m4b;') ||
              r.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            mp4: !!(
              r.canPlayType('audio/x-mp4;') ||
              r.canPlayType('audio/mp4;') ||
              r.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            weba: !(
              v ||
              !r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            webm: !(
              v ||
              !r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            dolby: !!r
              .canPlayType('audio/mp4; codecs="ec-3"')
              .replace(/^no$/, ''),
            flac: !!(
              r.canPlayType('audio/x-flac;') || r.canPlayType('audio/flac;')
            ).replace(/^no$/, ''),
          }),
          g
        );
      },
      _unlockAudio: function () {
        var g = this || t;
        if (!g._audioUnlocked && g.ctx) {
          g._audioUnlocked = !1;
          g.autoUnlock = !1;
          g._mobileUnloaded ||
            44100 === g.ctx.sampleRate ||
            ((g._mobileUnloaded = !0), g.unload());
          g._scratchBuffer = g.ctx.createBuffer(1, 1, 22050);
          var r = function (l) {
            for (; g._html5AudioPool.length < g.html5PoolSize; )
              try {
                var y = new Audio();
                y._unlocked = !0;
                g._releaseHtml5Audio(y);
              } catch (Oa) {
                g.noAudio = !0;
                break;
              }
            for (l = 0; l < g._howls.length; l++)
              if (!g._howls[l]._webAudio) {
                y = g._howls[l]._getSoundIds();
                for (var t = 0; t < y.length; t++) {
                  var v = g._howls[l]._soundById(y[t]);
                  v &&
                    v._node &&
                    !v._node._unlocked &&
                    ((v._node._unlocked = !0), v._node.load());
                }
              }
            g._autoResume();
            var E = g.ctx.createBufferSource();
            E.buffer = g._scratchBuffer;
            E.connect(g.ctx.destination);
            void 0 === E.start ? E.noteOn(0) : E.start(0);
            'function' == typeof g.ctx.resume && g.ctx.resume();
            E.onended = function () {
              E.disconnect(0);
              g._audioUnlocked = !0;
              document.removeEventListener('touchstart', r, !0);
              document.removeEventListener('touchend', r, !0);
              document.removeEventListener('click', r, !0);
              document.removeEventListener('keydown', r, !0);
              for (var l = 0; l < g._howls.length; l++)
                g._howls[l]._emit('unlock');
            };
          };
          return (
            document.addEventListener('touchstart', r, !0),
            document.addEventListener('touchend', r, !0),
            document.addEventListener('click', r, !0),
            document.addEventListener('keydown', r, !0),
            g
          );
        }
      },
      _obtainHtml5Audio: function () {
        var g = this || t;
        if (g._html5AudioPool.length) return g._html5AudioPool.pop();
        g = new Audio().play();
        return (
          g &&
            'undefined' != typeof Promise &&
            (g instanceof Promise || 'function' == typeof g.then) &&
            g.catch(function () {
              console.warn(
                'HTML5 Audio pool exhausted, returning potentially locked audio object.',
              );
            }),
          new Audio()
        );
      },
      _releaseHtml5Audio: function (g) {
        var r = this || t;
        return (g._unlocked && r._html5AudioPool.push(g), r);
      },
      _autoSuspend: function () {
        var g = this;
        if (
          g.autoSuspend &&
          g.ctx &&
          void 0 !== g.ctx.suspend &&
          t.usingWebAudio
        ) {
          for (var r = 0; r < g._howls.length; r++)
            if (g._howls[r]._webAudio)
              for (var l = 0; l < g._howls[r]._sounds.length; l++)
                if (!g._howls[r]._sounds[l]._paused) return g;
          return (
            g._suspendTimer && clearTimeout(g._suspendTimer),
            (g._suspendTimer = setTimeout(function () {
              if (g.autoSuspend) {
                g._suspendTimer = null;
                g.state = 'suspending';
                var r = function () {
                  g.state = 'suspended';
                  g._resumeAfterSuspend &&
                    (delete g._resumeAfterSuspend, g._autoResume());
                };
                g.ctx.suspend().then(r, r);
              }
            }, 3e4)),
            g
          );
        }
      },
      _autoResume: function () {
        var g = this;
        if (g.ctx && void 0 !== g.ctx.resume && t.usingWebAudio)
          return (
            'running' === g.state &&
            'interrupted' !== g.ctx.state &&
            g._suspendTimer
              ? (clearTimeout(g._suspendTimer), (g._suspendTimer = null))
              : 'suspended' === g.state ||
                  ('running' === g.state && 'interrupted' === g.ctx.state)
                ? (g.ctx.resume().then(function () {
                    g.state = 'running';
                    for (var r = 0; r < g._howls.length; r++)
                      g._howls[r]._emit('resume');
                  }),
                  g._suspendTimer &&
                    (clearTimeout(g._suspendTimer), (g._suspendTimer = null)))
                : 'suspending' === g.state && (g._resumeAfterSuspend = !0),
            g
          );
      },
    };
    var t = new A(),
      E = function (g) {
        if (!g.src || 0 === g.src.length)
          return void console.error(
            'An array of source files must be passed with any new Howl.',
          );
        this.init(g);
      };
    E.prototype = {
      init: function (g) {
        var r = this;
        return (
          t.ctx || l(),
          (r._autoplay = g.autoplay || !1),
          (r._format = 'string' != typeof g.format ? g.format : [g.format]),
          (r._html5 = g.html5 || !1),
          (r._muted = g.mute || !1),
          (r._loop = g.loop || !1),
          (r._pool = g.pool || 5),
          (r._preload =
            ('boolean' != typeof g.preload && 'metadata' !== g.preload) ||
            g.preload),
          (r._rate = g.rate || 1),
          (r._sprite = g.sprite || {}),
          (r._src = 'string' != typeof g.src ? g.src : [g.src]),
          (r._volume = void 0 !== g.volume ? g.volume : 1),
          (r._xhr = {
            method: g.xhr && g.xhr.method ? g.xhr.method : 'GET',
            headers: g.xhr && g.xhr.headers ? g.xhr.headers : null,
            withCredentials:
              !(!g.xhr || !g.xhr.withCredentials) && g.xhr.withCredentials,
          }),
          (r._duration = 0),
          (r._state = 'unloaded'),
          (r._sounds = []),
          (r._endTimers = {}),
          (r._queue = []),
          (r._playLock = !1),
          (r._onend = g.onend ? [{ fn: g.onend }] : []),
          (r._onfade = g.onfade ? [{ fn: g.onfade }] : []),
          (r._onload = g.onload ? [{ fn: g.onload }] : []),
          (r._onloaderror = g.onloaderror ? [{ fn: g.onloaderror }] : []),
          (r._onplayerror = g.onplayerror ? [{ fn: g.onplayerror }] : []),
          (r._onpause = g.onpause ? [{ fn: g.onpause }] : []),
          (r._onplay = g.onplay ? [{ fn: g.onplay }] : []),
          (r._onstop = g.onstop ? [{ fn: g.onstop }] : []),
          (r._onmute = g.onmute ? [{ fn: g.onmute }] : []),
          (r._onvolume = g.onvolume ? [{ fn: g.onvolume }] : []),
          (r._onrate = g.onrate ? [{ fn: g.onrate }] : []),
          (r._onseek = g.onseek ? [{ fn: g.onseek }] : []),
          (r._onunlock = g.onunlock ? [{ fn: g.onunlock }] : []),
          (r._onresume = []),
          (r._webAudio = t.usingWebAudio && !r._html5),
          void 0 !== t.ctx && t.ctx && t.autoUnlock && t._unlockAudio(),
          t._howls.push(r),
          r._autoplay &&
            r._queue.push({
              event: 'play',
              action: function () {
                r.play();
              },
            }),
          r._preload && 'none' !== r._preload && r.load(),
          r
        );
      },
      load: function () {
        var g = null;
        if (t.noAudio)
          return void this._emit('loaderror', null, 'No audio support.');
        'string' == typeof this._src && (this._src = [this._src]);
        for (var r = 0; r < this._src.length; r++) {
          var l;
          if (this._format && this._format[r]) var v = this._format[r];
          else {
            if ('string' != typeof (l = this._src[r])) {
              this._emit(
                'loaderror',
                null,
                'Non-string found in selected audio sources - ignoring.',
              );
              continue;
            }
            (v = /^data:audio\/([^;,]+);/i.exec(l)) ||
              (v = /\.([^.]+)$/.exec(l.split('?', 1)[0]));
            v && (v = v[1].toLowerCase());
          }
          if (
            (v ||
              console.warn(
                'No file extension was found. Consider using the "format" property or specify an extension.',
              ),
            v && t.codecs(v))
          ) {
            g = this._src[r];
            break;
          }
        }
        return g
          ? ((this._src = g),
            (this._state = 'loading'),
            'https:' === window.location.protocol &&
              'http:' === g.slice(0, 5) &&
              ((this._html5 = !0), (this._webAudio = !1)),
            new B(this),
            this._webAudio && M(this),
            this)
          : void this._emit(
              'loaderror',
              null,
              'No codec support for selected audio sources.',
            );
      },
      play: function (g, r) {
        var l = this,
          v = null;
        if ('number' == typeof g) ((v = g), (g = null));
        else {
          if ('string' == typeof g && 'loaded' === l._state && !l._sprite[g])
            return null;
          if (void 0 === g && ((g = '__default'), !l._playLock)) {
            for (var E = 0, sa = 0; sa < l._sounds.length; sa++)
              l._sounds[sa]._paused &&
                !l._sounds[sa]._ended &&
                (E++, (v = l._sounds[sa]._id));
            1 === E ? (g = null) : (v = null);
          }
        }
        var A = v ? l._soundById(v) : l._inactiveSound();
        if (!A) return null;
        if (
          (v && !g && (g = A._sprite || '__default'), 'loaded' !== l._state)
        ) {
          A._sprite = g;
          A._ended = !1;
          var B = A._id;
          return (
            l._queue.push({
              event: 'play',
              action: function () {
                l.play(B);
              },
            }),
            B
          );
        }
        if (v && !A._paused) return (r || l._loadQueue('play'), A._id);
        l._webAudio && t._autoResume();
        var L = Math.max(0, 0 < A._seek ? A._seek : l._sprite[g][0] / 1e3),
          aa = Math.max(0, (l._sprite[g][0] + l._sprite[g][1]) / 1e3 - L),
          ea = (1e3 * aa) / Math.abs(A._rate),
          M = l._sprite[g][0] / 1e3,
          la = (l._sprite[g][0] + l._sprite[g][1]) / 1e3;
        A._sprite = g;
        A._ended = !1;
        var nb = function () {
          A._paused = !1;
          A._seek = L;
          A._start = M;
          A._stop = la;
          A._loop = !(!A._loop && !l._sprite[g][2]);
        };
        if (L >= la) return void l._ended(A);
        var Y = A._node;
        if (l._webAudio)
          ((v = function () {
            l._playLock = !1;
            nb();
            l._refreshBuffer(A);
            Y.gain.setValueAtTime(
              A._muted || l._muted ? 0 : A._volume,
              t.ctx.currentTime,
            );
            A._playStart = t.ctx.currentTime;
            void 0 === Y.bufferSource.start
              ? A._loop
                ? Y.bufferSource.noteGrainOn(0, L, 86400)
                : Y.bufferSource.noteGrainOn(0, L, aa)
              : A._loop
                ? Y.bufferSource.start(0, L, 86400)
                : Y.bufferSource.start(0, L, aa);
            ea !== 1 / 0 &&
              (l._endTimers[A._id] = setTimeout(l._ended.bind(l, A), ea));
            r ||
              setTimeout(function () {
                l._emit('play', A._id);
                l._loadQueue();
              }, 0);
          }),
            'running' === t.state && 'interrupted' !== t.ctx.state
              ? v()
              : ((l._playLock = !0),
                l.once('resume', v),
                l._clearTimer(A._id)));
        else {
          var pa = function () {
            Y.currentTime = L;
            Y.muted = A._muted || l._muted || t._muted || Y.muted;
            Y.volume = A._volume * t.volume();
            Y.playbackRate = A._rate;
            try {
              var y = Y.play();
              if (
                (y &&
                'undefined' != typeof Promise &&
                (y instanceof Promise || 'function' == typeof y.then)
                  ? ((l._playLock = !0),
                    nb(),
                    y
                      .then(function () {
                        l._playLock = !1;
                        Y._unlocked = !0;
                        r ? l._loadQueue() : l._emit('play', A._id);
                      })
                      .catch(function () {
                        l._playLock = !1;
                        l._emit(
                          'playerror',
                          A._id,
                          'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                        );
                        A._ended = !0;
                        A._paused = !0;
                      }))
                  : r || ((l._playLock = !1), nb(), l._emit('play', A._id)),
                (Y.playbackRate = A._rate),
                Y.paused)
              )
                return void l._emit(
                  'playerror',
                  A._id,
                  'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                );
              '__default' !== g || A._loop
                ? (l._endTimers[A._id] = setTimeout(l._ended.bind(l, A), ea))
                : ((l._endTimers[A._id] = function () {
                    l._ended(A);
                    Y.removeEventListener('ended', l._endTimers[A._id], !1);
                  }),
                  Y.addEventListener('ended', l._endTimers[A._id], !1));
            } catch (xa) {
              l._emit('playerror', A._id, xa);
            }
          };
          'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA' ===
            Y.src && ((Y.src = l._src), Y.load());
          v =
            (window && window.ejecta) ||
            (!Y.readyState && t._navigator.isCocoonJS);
          if (3 <= Y.readyState || v) pa();
          else {
            l._playLock = !0;
            l._state = 'loading';
            var bb = function () {
              l._state = 'loaded';
              pa();
              Y.removeEventListener(t._canPlayEvent, bb, !1);
            };
            Y.addEventListener(t._canPlayEvent, bb, !1);
            l._clearTimer(A._id);
          }
        }
        return A._id;
      },
      pause: function (g, r) {
        var l = this;
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'pause',
              action: function () {
                l.pause(g);
              },
            }),
            l
          );
        for (var t = l._getSoundIds(g), v = 0; v < t.length; v++) {
          l._clearTimer(t[v]);
          var A = l._soundById(t[v]);
          if (
            A &&
            !A._paused &&
            ((A._seek = l.seek(t[v])),
            (A._rateSeek = 0),
            (A._paused = !0),
            l._stopFade(t[v]),
            A._node)
          )
            if (l._webAudio) {
              if (!A._node.bufferSource) continue;
              void 0 === A._node.bufferSource.stop
                ? A._node.bufferSource.noteOff(0)
                : A._node.bufferSource.stop(0);
              l._cleanBuffer(A._node);
            } else
              (isNaN(A._node.duration) && A._node.duration !== 1 / 0) ||
                A._node.pause();
          r || l._emit('pause', A ? A._id : null);
        }
        return l;
      },
      stop: function (g, r) {
        var l = this;
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'stop',
              action: function () {
                l.stop(g);
              },
            }),
            l
          );
        for (var t = l._getSoundIds(g), v = 0; v < t.length; v++) {
          l._clearTimer(t[v]);
          var A = l._soundById(t[v]);
          A &&
            ((A._seek = A._start || 0),
            (A._rateSeek = 0),
            (A._paused = !0),
            (A._ended = !0),
            l._stopFade(t[v]),
            A._node &&
              (l._webAudio
                ? A._node.bufferSource &&
                  (void 0 === A._node.bufferSource.stop
                    ? A._node.bufferSource.noteOff(0)
                    : A._node.bufferSource.stop(0),
                  l._cleanBuffer(A._node))
                : (isNaN(A._node.duration) && A._node.duration !== 1 / 0) ||
                  ((A._node.currentTime = A._start || 0),
                  A._node.pause(),
                  A._node.duration === 1 / 0 && l._clearSound(A._node))),
            r || l._emit('stop', A._id));
        }
        return l;
      },
      mute: function (g, r) {
        var l = this;
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'mute',
              action: function () {
                l.mute(g, r);
              },
            }),
            l
          );
        if (void 0 === r) {
          if ('boolean' != typeof g) return l._muted;
          l._muted = g;
        }
        for (var v = l._getSoundIds(r), A = 0; A < v.length; A++) {
          var E = l._soundById(v[A]);
          E &&
            ((E._muted = g),
            E._interval && l._stopFade(E._id),
            l._webAudio && E._node
              ? E._node.gain.setValueAtTime(
                  g ? 0 : E._volume,
                  t.ctx.currentTime,
                )
              : E._node && (E._node.muted = !!t._muted || g),
            l._emit('mute', E._id));
        }
        return l;
      },
      volume: function () {
        var g,
          r,
          l = this,
          v = arguments;
        if (0 === v.length) return l._volume;
        1 === v.length || (2 === v.length && void 0 === v[1])
          ? 0 <= l._getSoundIds().indexOf(v[0])
            ? (r = parseInt(v[0], 10))
            : (g = parseFloat(v[0]))
          : 2 <= v.length && ((g = parseFloat(v[0])), (r = parseInt(v[1], 10)));
        var A;
        if (!(void 0 !== g && 0 <= g && 1 >= g))
          return ((A = r ? l._soundById(r) : l._sounds[0]), A ? A._volume : 0);
        if ('loaded' !== l._state || l._playLock)
          return (
            l._queue.push({
              event: 'volume',
              action: function () {
                l.volume.apply(l, v);
              },
            }),
            l
          );
        void 0 === r && (l._volume = g);
        r = l._getSoundIds(r);
        for (var E = 0; E < r.length; E++)
          (A = l._soundById(r[E])) &&
            ((A._volume = g),
            v[2] || l._stopFade(r[E]),
            l._webAudio && A._node && !A._muted
              ? A._node.gain.setValueAtTime(g, t.ctx.currentTime)
              : A._node && !A._muted && (A._node.volume = g * t.volume()),
            l._emit('volume', A._id));
        return l;
      },
      fade: function (g, l, v, G) {
        var r = this;
        if ('loaded' !== r._state || r._playLock)
          return (
            r._queue.push({
              event: 'fade',
              action: function () {
                r.fade(g, l, v, G);
              },
            }),
            r
          );
        g = Math.min(Math.max(0, parseFloat(g)), 1);
        l = Math.min(Math.max(0, parseFloat(l)), 1);
        v = parseFloat(v);
        r.volume(g, G);
        for (var y = r._getSoundIds(G), A = 0; A < y.length; A++) {
          var E = r._soundById(y[A]);
          if (E) {
            if ((G || r._stopFade(y[A]), r._webAudio && !E._muted)) {
              var B = t.ctx.currentTime,
                L = B + v / 1e3;
              E._volume = g;
              E._node.gain.setValueAtTime(g, B);
              E._node.gain.linearRampToValueAtTime(l, L);
            }
            r._startFadeInterval(E, g, l, v, y[A], void 0 === G);
          }
        }
        return r;
      },
      _startFadeInterval: function (g, l, v, t, A, E) {
        var r = this,
          y = l,
          G = v - l;
        A = Math.abs(G / 0.01);
        A = Math.max(4, 0 < A ? t / A : t);
        var B = Date.now();
        g._fadeTo = v;
        g._interval = setInterval(function () {
          var A = (Date.now() - B) / t;
          B = Date.now();
          y += G * A;
          y = Math.round(100 * y) / 100;
          y = 0 > G ? Math.max(v, y) : Math.min(v, y);
          r._webAudio ? (g._volume = y) : r.volume(y, g._id, !0);
          E && (r._volume = y);
          ((v < l && y <= v) || (v > l && y >= v)) &&
            (clearInterval(g._interval),
            (g._interval = null),
            (g._fadeTo = null),
            r.volume(v, g._id),
            r._emit('fade', g._id));
        }, A);
      },
      _stopFade: function (g) {
        var l = this._soundById(g);
        return (
          l &&
            l._interval &&
            (this._webAudio &&
              l._node.gain.cancelScheduledValues(t.ctx.currentTime),
            clearInterval(l._interval),
            (l._interval = null),
            this.volume(l._fadeTo, g),
            (l._fadeTo = null),
            this._emit('fade', g)),
          this
        );
      },
      loop: function () {
        var g,
          l,
          v,
          t = arguments;
        if (0 === t.length) return this._loop;
        if (1 === t.length) {
          if ('boolean' != typeof t[0])
            return !!(v = this._soundById(parseInt(t[0], 10))) && v._loop;
          this._loop = g = t[0];
        } else 2 === t.length && ((g = t[0]), (l = parseInt(t[1], 10)));
        l = this._getSoundIds(l);
        for (t = 0; t < l.length; t++)
          (v = this._soundById(l[t])) &&
            ((v._loop = g),
            this._webAudio &&
              v._node &&
              v._node.bufferSource &&
              ((v._node.bufferSource.loop = g),
              g &&
                ((v._node.bufferSource.loopStart = v._start || 0),
                (v._node.bufferSource.loopEnd = v._stop),
                this.playing(l[t]) &&
                  (this.pause(l[t], !0), this.play(l[t], !0)))));
        return this;
      },
      rate: function () {
        var g,
          l,
          v = this,
          A = arguments;
        0 === A.length
          ? (l = v._sounds[0]._id)
          : 1 === A.length
            ? 0 <= v._getSoundIds().indexOf(A[0])
              ? (l = parseInt(A[0], 10))
              : (g = parseFloat(A[0]))
            : 2 === A.length &&
              ((g = parseFloat(A[0])), (l = parseInt(A[1], 10)));
        var E;
        if ('number' != typeof g)
          return ((E = v._soundById(l)), E ? E._rate : v._rate);
        if ('loaded' !== v._state || v._playLock)
          return (
            v._queue.push({
              event: 'rate',
              action: function () {
                v.rate.apply(v, A);
              },
            }),
            v
          );
        void 0 === l && (v._rate = g);
        l = v._getSoundIds(l);
        for (var B = 0; B < l.length; B++)
          if ((E = v._soundById(l[B]))) {
            v.playing(l[B]) &&
              ((E._rateSeek = v.seek(l[B])),
              (E._playStart = v._webAudio ? t.ctx.currentTime : E._playStart));
            E._rate = g;
            v._webAudio && E._node && E._node.bufferSource
              ? E._node.bufferSource.playbackRate.setValueAtTime(
                  g,
                  t.ctx.currentTime,
                )
              : E._node && (E._node.playbackRate = g);
            var L = v.seek(l[B]);
            L =
              (1e3 *
                ((v._sprite[E._sprite][0] + v._sprite[E._sprite][1]) / 1e3 -
                  L)) /
              Math.abs(E._rate);
            (!v._endTimers[l[B]] && E._paused) ||
              (v._clearTimer(l[B]),
              (v._endTimers[l[B]] = setTimeout(v._ended.bind(v, E), L)));
            v._emit('rate', E._id);
          }
        return v;
      },
      seek: function () {
        var g,
          l,
          v = this,
          A = arguments;
        0 === A.length
          ? v._sounds.length && (l = v._sounds[0]._id)
          : 1 === A.length
            ? 0 <= v._getSoundIds().indexOf(A[0])
              ? (l = parseInt(A[0], 10))
              : v._sounds.length &&
                ((l = v._sounds[0]._id), (g = parseFloat(A[0])))
            : 2 === A.length &&
              ((g = parseFloat(A[0])), (l = parseInt(A[1], 10)));
        if (void 0 === l) return 0;
        if ('number' == typeof g && ('loaded' !== v._state || v._playLock))
          return (
            v._queue.push({
              event: 'seek',
              action: function () {
                v.seek.apply(v, A);
              },
            }),
            v
          );
        var E = v._soundById(l);
        if (E) {
          if (!('number' == typeof g && 0 <= g))
            return v._webAudio
              ? ((g = v.playing(l) ? t.ctx.currentTime - E._playStart : 0),
                E._seek +
                  ((E._rateSeek ? E._rateSeek - E._seek : 0) +
                    g * Math.abs(E._rate)))
              : E._node.currentTime;
          var B = v.playing(l);
          B && v.pause(l, !0);
          E._seek = g;
          E._ended = !1;
          v._clearTimer(l);
          v._webAudio ||
            !E._node ||
            isNaN(E._node.duration) ||
            (E._node.currentTime = g);
          var L = function () {
            B && v.play(l, !0);
            v._emit('seek', l);
          };
          if (B && !v._webAudio) {
            var aa = function () {
              v._playLock ? setTimeout(aa, 0) : L();
            };
            setTimeout(aa, 0);
          } else L();
        }
        return v;
      },
      playing: function (g) {
        if ('number' == typeof g)
          return ((g = this._soundById(g)), !!g && !g._paused);
        for (g = 0; g < this._sounds.length; g++)
          if (!this._sounds[g]._paused) return !0;
        return !1;
      },
      duration: function (g) {
        var l = this._duration;
        g = this._soundById(g);
        return (g && (l = this._sprite[g._sprite][1] / 1e3), l);
      },
      state: function () {
        return this._state;
      },
      unload: function () {
        for (var g = this._sounds, l = 0; l < g.length; l++)
          (g[l]._paused || this.stop(g[l]._id),
            this._webAudio ||
              (this._clearSound(g[l]._node),
              g[l]._node.removeEventListener('error', g[l]._errorFn, !1),
              g[l]._node.removeEventListener(t._canPlayEvent, g[l]._loadFn, !1),
              g[l]._node.removeEventListener('ended', g[l]._endFn, !1),
              t._releaseHtml5Audio(g[l]._node)),
            delete g[l]._node,
            this._clearTimer(g[l]._id));
        l = t._howls.indexOf(this);
        0 <= l && t._howls.splice(l, 1);
        g = !0;
        for (l = 0; l < t._howls.length; l++)
          if (
            t._howls[l]._src === this._src ||
            0 <= this._src.indexOf(t._howls[l]._src)
          ) {
            g = !1;
            break;
          }
        return (
          L && g && delete L[this._src],
          (t.noAudio = !1),
          (this._state = 'unloaded'),
          (this._sounds = []),
          null
        );
      },
      on: function (g, l, v, t) {
        g = this['_on' + g];
        return (
          'function' == typeof l &&
            g.push(t ? { id: v, fn: l, once: t } : { id: v, fn: l }),
          this
        );
      },
      off: function (g, l, v) {
        var r = this['_on' + g];
        if (('number' == typeof l && ((v = l), (l = null)), l || v))
          for (g = 0; g < r.length; g++) {
            var t = v === r[g].id;
            if ((l === r[g].fn && t) || (!l && t)) {
              r.splice(g, 1);
              break;
            }
          }
        else if (g) this['_on' + g] = [];
        else
          for (l = Object.keys(this), g = 0; g < l.length; g++)
            0 === l[g].indexOf('_on') &&
              Array.isArray(this[l[g]]) &&
              (this[l[g]] = []);
        return this;
      },
      once: function (g, l, v) {
        return (this.on(g, l, v, 1), this);
      },
      _emit: function (g, l, v) {
        for (var r = this['_on' + g], t = r.length - 1; 0 <= t; t--)
          (r[t].id && r[t].id !== l && 'load' !== g) ||
            (setTimeout(
              function (g) {
                g.call(this, l, v);
              }.bind(this, r[t].fn),
              0,
            ),
            r[t].once && this.off(g, r[t].fn, r[t].id));
        return (this._loadQueue(g), this);
      },
      _loadQueue: function (g) {
        if (0 < this._queue.length) {
          var l = this._queue[0];
          l.event === g && (this._queue.shift(), this._loadQueue());
          g || l.action();
        }
        return this;
      },
      _ended: function (g) {
        var l = g._sprite;
        if (
          !this._webAudio &&
          g._node &&
          !g._node.paused &&
          !g._node.ended &&
          g._node.currentTime < g._stop
        )
          return (setTimeout(this._ended.bind(this, g), 100), this);
        l = !(!g._loop && !this._sprite[l][2]);
        if (
          (this._emit('end', g._id),
          !this._webAudio && l && this.stop(g._id, !0).play(g._id),
          this._webAudio && l)
        ) {
          this._emit('play', g._id);
          g._seek = g._start || 0;
          g._rateSeek = 0;
          g._playStart = t.ctx.currentTime;
          var v = (1e3 * (g._stop - g._start)) / Math.abs(g._rate);
          this._endTimers[g._id] = setTimeout(this._ended.bind(this, g), v);
        }
        return (
          this._webAudio &&
            !l &&
            ((g._paused = !0),
            (g._ended = !0),
            (g._seek = g._start || 0),
            (g._rateSeek = 0),
            this._clearTimer(g._id),
            this._cleanBuffer(g._node),
            t._autoSuspend()),
          this._webAudio || l || this.stop(g._id, !0),
          this
        );
      },
      _clearTimer: function (g) {
        if (this._endTimers[g]) {
          if ('function' != typeof this._endTimers[g])
            clearTimeout(this._endTimers[g]);
          else {
            var l = this._soundById(g);
            l &&
              l._node &&
              l._node.removeEventListener('ended', this._endTimers[g], !1);
          }
          delete this._endTimers[g];
        }
        return this;
      },
      _soundById: function (g) {
        for (var l = 0; l < this._sounds.length; l++)
          if (g === this._sounds[l]._id) return this._sounds[l];
        return null;
      },
      _inactiveSound: function () {
        this._drain();
        for (var g = 0; g < this._sounds.length; g++)
          if (this._sounds[g]._ended) return this._sounds[g].reset();
        return new B(this);
      },
      _drain: function () {
        var g = this._pool,
          l = 0,
          v;
        if (!(this._sounds.length < g)) {
          for (v = 0; v < this._sounds.length; v++)
            this._sounds[v]._ended && l++;
          for (v = this._sounds.length - 1; 0 <= v && !(l <= g); v--)
            this._sounds[v]._ended &&
              (this._webAudio &&
                this._sounds[v]._node &&
                this._sounds[v]._node.disconnect(0),
              this._sounds.splice(v, 1),
              l--);
        }
      },
      _getSoundIds: function (g) {
        if (void 0 === g) {
          g = [];
          for (var l = 0; l < this._sounds.length; l++)
            g.push(this._sounds[l]._id);
          return g;
        }
        return [g];
      },
      _refreshBuffer: function (g) {
        return (
          (g._node.bufferSource = t.ctx.createBufferSource()),
          (g._node.bufferSource.buffer = L[this._src]),
          g._panner
            ? g._node.bufferSource.connect(g._panner)
            : g._node.bufferSource.connect(g._node),
          (g._node.bufferSource.loop = g._loop),
          g._loop &&
            ((g._node.bufferSource.loopStart = g._start || 0),
            (g._node.bufferSource.loopEnd = g._stop || 0)),
          g._node.bufferSource.playbackRate.setValueAtTime(
            g._rate,
            t.ctx.currentTime,
          ),
          this
        );
      },
      _cleanBuffer: function (g) {
        var l = t._navigator && 0 <= t._navigator.vendor.indexOf('Apple');
        if (!g.bufferSource) return this;
        if (
          t._scratchBuffer &&
          g.bufferSource &&
          ((g.bufferSource.onended = null), g.bufferSource.disconnect(0), l)
        )
          try {
            g.bufferSource.buffer = t._scratchBuffer;
          } catch (y) {}
        return ((g.bufferSource = null), this);
      },
      _clearSound: function (g) {
        /MSIE |Trident\//.test(t._navigator && t._navigator.userAgent) ||
          (g.src =
            'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA');
      },
    };
    var B = function (g) {
      this._parent = g;
      this.init();
    };
    B.prototype = {
      init: function () {
        var g = this._parent;
        return (
          (this._muted = g._muted),
          (this._loop = g._loop),
          (this._volume = g._volume),
          (this._rate = g._rate),
          (this._seek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++t._counter),
          g._sounds.push(this),
          this.create(),
          this
        );
      },
      create: function () {
        var g = this._parent,
          l = t._muted || this._muted || this._parent._muted ? 0 : this._volume;
        return (
          g._webAudio
            ? ((this._node =
                void 0 === t.ctx.createGain
                  ? t.ctx.createGainNode()
                  : t.ctx.createGain()),
              this._node.gain.setValueAtTime(l, t.ctx.currentTime),
              (this._node.paused = !0),
              this._node.connect(t.masterGain))
            : t.noAudio ||
              ((this._node = t._obtainHtml5Audio()),
              (this._errorFn = this._errorListener.bind(this)),
              this._node.addEventListener('error', this._errorFn, !1),
              (this._loadFn = this._loadListener.bind(this)),
              this._node.addEventListener(t._canPlayEvent, this._loadFn, !1),
              (this._endFn = this._endListener.bind(this)),
              this._node.addEventListener('ended', this._endFn, !1),
              (this._node.src = g._src),
              (this._node.preload = !0 === g._preload ? 'auto' : g._preload),
              (this._node.volume = l * t.volume()),
              this._node.load()),
          this
        );
      },
      reset: function () {
        var g = this._parent;
        return (
          (this._muted = g._muted),
          (this._loop = g._loop),
          (this._volume = g._volume),
          (this._rate = g._rate),
          (this._seek = 0),
          (this._rateSeek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++t._counter),
          this
        );
      },
      _errorListener: function () {
        this._parent._emit(
          'loaderror',
          this._id,
          this._node.error ? this._node.error.code : 0,
        );
        this._node.removeEventListener('error', this._errorFn, !1);
      },
      _loadListener: function () {
        var g = this._parent;
        g._duration = Math.ceil(10 * this._node.duration) / 10;
        0 === Object.keys(g._sprite).length &&
          (g._sprite = { __default: [0, 1e3 * g._duration] });
        'loaded' !== g._state &&
          ((g._state = 'loaded'), g._emit('load'), g._loadQueue());
        this._node.removeEventListener(t._canPlayEvent, this._loadFn, !1);
      },
      _endListener: function () {
        var g = this._parent;
        g._duration === 1 / 0 &&
          ((g._duration = Math.ceil(10 * this._node.duration) / 10),
          g._sprite.__default[1] === 1 / 0 &&
            (g._sprite.__default[1] = 1e3 * g._duration),
          g._ended(this));
        this._node.removeEventListener('ended', this._endFn, !1);
      },
    };
    var L = {},
      M = function (g) {
        var l = g._src;
        if (L[l]) return ((g._duration = L[l].duration), void ea(g));
        if (/^data:[^;]+;base64,/.test(l)) {
          for (
            var t = atob(l.split(',')[1]), A = new Uint8Array(t.length), E = 0;
            E < t.length;
            ++E
          )
            A[E] = t.charCodeAt(E);
          v(A.buffer, g);
        } else {
          var B = new XMLHttpRequest();
          B.open(g._xhr.method, l, !0);
          B.withCredentials = g._xhr.withCredentials;
          B.responseType = 'arraybuffer';
          g._xhr.headers &&
            Object.keys(g._xhr.headers).forEach(function (l) {
              B.setRequestHeader(l, g._xhr.headers[l]);
            });
          B.onload = function () {
            var l = (B.status + '')[0];
            if ('0' !== l && '2' !== l && '3' !== l)
              return void g._emit(
                'loaderror',
                null,
                'Failed loading audio file with status: ' + B.status + '.',
              );
            v(B.response, g);
          };
          B.onerror = function () {
            g._webAudio &&
              ((g._html5 = !0),
              (g._webAudio = !1),
              (g._sounds = []),
              delete L[l],
              g.load());
          };
          aa(B);
        }
      },
      aa = function (g) {
        try {
          g.send();
        } catch (r) {
          g.onerror();
        }
      },
      v = function (g, l) {
        var r = function () {
            l._emit('loaderror', null, 'Decoding audio data failed.');
          },
          v = function (g) {
            g && 0 < l._sounds.length ? ((L[l._src] = g), ea(l, g)) : r();
          };
        'undefined' != typeof Promise && 1 === t.ctx.decodeAudioData.length
          ? t.ctx.decodeAudioData(g).then(v).catch(r)
          : t.ctx.decodeAudioData(g, v, r);
      },
      ea = function (g, l) {
        l && !g._duration && (g._duration = l.duration);
        0 === Object.keys(g._sprite).length &&
          (g._sprite = { __default: [0, 1e3 * g._duration] });
        'loaded' !== g._state &&
          ((g._state = 'loaded'), g._emit('load'), g._loadQueue());
      },
      l = function () {
        if (t.usingWebAudio) {
          try {
            'undefined' != typeof AudioContext
              ? (t.ctx = new AudioContext())
              : 'undefined' != typeof webkitAudioContext
                ? (t.ctx = new webkitAudioContext())
                : (t.usingWebAudio = !1);
          } catch (y) {
            t.usingWebAudio = !1;
          }
          t.ctx || (t.usingWebAudio = !1);
          var g = /iP(hone|od|ad)/.test(t._navigator && t._navigator.platform),
            l =
              t._navigator &&
              t._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
          l = l ? parseInt(l[1], 10) : null;
          g &&
            l &&
            9 > l &&
            ((g = /safari/.test(
              t._navigator && t._navigator.userAgent.toLowerCase(),
            )),
            t._navigator && !g && (t.usingWebAudio = !1));
          t.usingWebAudio &&
            ((t.masterGain =
              void 0 === t.ctx.createGain
                ? t.ctx.createGainNode()
                : t.ctx.createGain()),
            t.masterGain.gain.setValueAtTime(
              t._muted ? 0 : t._volume,
              t.ctx.currentTime,
            ),
            t.masterGain.connect(t.ctx.destination));
          t._setup();
        }
      };
    'function' == typeof define &&
      define.amd &&
      define([], function () {
        return { Howler: t, Howl: E };
      });
    'undefined' != typeof exports && ((exports.Howler = t), (exports.Howl = E));
    'undefined' != typeof global
      ? ((global.HowlerGlobal = A),
        (global.Howler = t),
        (global.Howl = E),
        (global.Sound = B))
      : 'undefined' != typeof window &&
        ((window.HowlerGlobal = A),
        (window.Howler = t),
        (window.Howl = E),
        (window.Sound = B));
  })(),
  !(function () {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function (t) {
      if (!this.ctx || !this.ctx.listener) return this;
      for (var A = this._howls.length - 1; 0 <= A; A--)
        this._howls[A].stereo(t);
      return this;
    };
    HowlerGlobal.prototype.pos = function (t, A, B) {
      return this.ctx && this.ctx.listener
        ? ((A = 'number' != typeof A ? this._pos[1] : A),
          (B = 'number' != typeof B ? this._pos[2] : B),
          'number' != typeof t
            ? this._pos
            : ((this._pos = [t, A, B]),
              void 0 !== this.ctx.listener.positionX
                ? (this.ctx.listener.positionX.setTargetAtTime(
                    this._pos[0],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionY.setTargetAtTime(
                    this._pos[1],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionZ.setTargetAtTime(
                    this._pos[2],
                    Howler.ctx.currentTime,
                    0.1,
                  ))
                : this.ctx.listener.setPosition(
                    this._pos[0],
                    this._pos[1],
                    this._pos[2],
                  ),
              this))
        : this;
    };
    HowlerGlobal.prototype.orientation = function (t, A, B, L, M, aa) {
      if (!this.ctx || !this.ctx.listener) return this;
      var v = this._orientation;
      return (
        (A = 'number' != typeof A ? v[1] : A),
        (B = 'number' != typeof B ? v[2] : B),
        (L = 'number' != typeof L ? v[3] : L),
        (M = 'number' != typeof M ? v[4] : M),
        (aa = 'number' != typeof aa ? v[5] : aa),
        'number' != typeof t
          ? v
          : ((this._orientation = [t, A, B, L, M, aa]),
            void 0 !== this.ctx.listener.forwardX
              ? (this.ctx.listener.forwardX.setTargetAtTime(
                  t,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardY.setTargetAtTime(
                  A,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardZ.setTargetAtTime(
                  B,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upX.setTargetAtTime(
                  L,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upY.setTargetAtTime(
                  M,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upZ.setTargetAtTime(
                  aa,
                  Howler.ctx.currentTime,
                  0.1,
                ))
              : this.ctx.listener.setOrientation(t, A, B, L, M, aa),
            this)
      );
    };
    Howl.prototype.init = (function (t) {
      return function (A) {
        return (
          (this._orientation = A.orientation || [1, 0, 0]),
          (this._stereo = A.stereo || null),
          (this._pos = A.pos || null),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== A.coneInnerAngle ? A.coneInnerAngle : 360,
            coneOuterAngle:
              void 0 !== A.coneOuterAngle ? A.coneOuterAngle : 360,
            coneOuterGain: void 0 !== A.coneOuterGain ? A.coneOuterGain : 0,
            distanceModel:
              void 0 !== A.distanceModel ? A.distanceModel : 'inverse',
            maxDistance: void 0 !== A.maxDistance ? A.maxDistance : 1e4,
            panningModel: void 0 !== A.panningModel ? A.panningModel : 'HRTF',
            refDistance: void 0 !== A.refDistance ? A.refDistance : 1,
            rolloffFactor: void 0 !== A.rolloffFactor ? A.rolloffFactor : 1,
          }),
          (this._onstereo = A.onstereo ? [{ fn: A.onstereo }] : []),
          (this._onpos = A.onpos ? [{ fn: A.onpos }] : []),
          (this._onorientation = A.onorientation
            ? [{ fn: A.onorientation }]
            : []),
          t.call(this, A)
        );
      };
    })(Howl.prototype.init);
    Howl.prototype.stereo = function (t, E) {
      var B = this;
      if (!B._webAudio) return B;
      if ('loaded' !== B._state)
        return (
          B._queue.push({
            event: 'stereo',
            action: function () {
              B.stereo(t, E);
            },
          }),
          B
        );
      var L = void 0 === Howler.ctx.createStereoPanner ? 'spatial' : 'stereo';
      if (void 0 === E) {
        if ('number' != typeof t) return B._stereo;
        B._stereo = t;
        B._pos = [t, 0, 0];
      }
      for (var M = B._getSoundIds(E), aa = 0; aa < M.length; aa++) {
        var v = B._soundById(M[aa]);
        if (v) {
          if ('number' != typeof t) return v._stereo;
          v._stereo = t;
          v._pos = [t, 0, 0];
          v._node &&
            ((v._pannerAttr.panningModel = 'equalpower'),
            (v._panner && v._panner.pan) || A(v, L),
            'spatial' === L
              ? void 0 !== v._panner.positionX
                ? (v._panner.positionX.setValueAtTime(
                    t,
                    Howler.ctx.currentTime,
                  ),
                  v._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                  v._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime))
                : v._panner.setPosition(t, 0, 0)
              : v._panner.pan.setValueAtTime(t, Howler.ctx.currentTime));
          B._emit('stereo', v._id);
        }
      }
      return B;
    };
    Howl.prototype.pos = function (t, E, B, L) {
      var M = this;
      if (!M._webAudio) return M;
      if ('loaded' !== M._state)
        return (
          M._queue.push({
            event: 'pos',
            action: function () {
              M.pos(t, E, B, L);
            },
          }),
          M
        );
      if (
        ((E = 'number' != typeof E ? 0 : E),
        (B = 'number' != typeof B ? -0.5 : B),
        void 0 === L)
      ) {
        if ('number' != typeof t) return M._pos;
        M._pos = [t, E, B];
      }
      for (var aa = M._getSoundIds(L), v = 0; v < aa.length; v++) {
        var ea = M._soundById(aa[v]);
        if (ea) {
          if ('number' != typeof t) return ea._pos;
          ea._pos = [t, E, B];
          ea._node &&
            ((ea._panner && !ea._panner.pan) || A(ea, 'spatial'),
            void 0 !== ea._panner.positionX
              ? (ea._panner.positionX.setValueAtTime(t, Howler.ctx.currentTime),
                ea._panner.positionY.setValueAtTime(E, Howler.ctx.currentTime),
                ea._panner.positionZ.setValueAtTime(B, Howler.ctx.currentTime))
              : ea._panner.setPosition(t, E, B));
          M._emit('pos', ea._id);
        }
      }
      return M;
    };
    Howl.prototype.orientation = function (t, E, B, L) {
      var M = this;
      if (!M._webAudio) return M;
      if ('loaded' !== M._state)
        return (
          M._queue.push({
            event: 'orientation',
            action: function () {
              M.orientation(t, E, B, L);
            },
          }),
          M
        );
      if (
        ((E = 'number' != typeof E ? M._orientation[1] : E),
        (B = 'number' != typeof B ? M._orientation[2] : B),
        void 0 === L)
      ) {
        if ('number' != typeof t) return M._orientation;
        M._orientation = [t, E, B];
      }
      for (var aa = M._getSoundIds(L), v = 0; v < aa.length; v++) {
        var ea = M._soundById(aa[v]);
        if (ea) {
          if ('number' != typeof t) return ea._orientation;
          ea._orientation = [t, E, B];
          ea._node &&
            (ea._panner ||
              (ea._pos || (ea._pos = M._pos || [0, 0, -0.5]), A(ea, 'spatial')),
            void 0 !== ea._panner.orientationX
              ? (ea._panner.orientationX.setValueAtTime(
                  t,
                  Howler.ctx.currentTime,
                ),
                ea._panner.orientationY.setValueAtTime(
                  E,
                  Howler.ctx.currentTime,
                ),
                ea._panner.orientationZ.setValueAtTime(
                  B,
                  Howler.ctx.currentTime,
                ))
              : ea._panner.setOrientation(t, E, B));
          M._emit('orientation', ea._id);
        }
      }
      return M;
    };
    Howl.prototype.pannerAttr = function () {
      var t,
        E,
        B = arguments;
      if (!this._webAudio) return this;
      if (0 === B.length) return this._pannerAttr;
      if (1 === B.length) {
        if ('object' != typeof B[0])
          return (
            (E = this._soundById(parseInt(B[0], 10))),
            E ? E._pannerAttr : this._pannerAttr
          );
        var L = B[0];
        void 0 === t &&
          (L.pannerAttr ||
            (L.pannerAttr = {
              coneInnerAngle: L.coneInnerAngle,
              coneOuterAngle: L.coneOuterAngle,
              coneOuterGain: L.coneOuterGain,
              distanceModel: L.distanceModel,
              maxDistance: L.maxDistance,
              refDistance: L.refDistance,
              rolloffFactor: L.rolloffFactor,
              panningModel: L.panningModel,
            }),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== L.pannerAttr.coneInnerAngle
                ? L.pannerAttr.coneInnerAngle
                : this._coneInnerAngle,
            coneOuterAngle:
              void 0 !== L.pannerAttr.coneOuterAngle
                ? L.pannerAttr.coneOuterAngle
                : this._coneOuterAngle,
            coneOuterGain:
              void 0 !== L.pannerAttr.coneOuterGain
                ? L.pannerAttr.coneOuterGain
                : this._coneOuterGain,
            distanceModel:
              void 0 !== L.pannerAttr.distanceModel
                ? L.pannerAttr.distanceModel
                : this._distanceModel,
            maxDistance:
              void 0 !== L.pannerAttr.maxDistance
                ? L.pannerAttr.maxDistance
                : this._maxDistance,
            refDistance:
              void 0 !== L.pannerAttr.refDistance
                ? L.pannerAttr.refDistance
                : this._refDistance,
            rolloffFactor:
              void 0 !== L.pannerAttr.rolloffFactor
                ? L.pannerAttr.rolloffFactor
                : this._rolloffFactor,
            panningModel:
              void 0 !== L.pannerAttr.panningModel
                ? L.pannerAttr.panningModel
                : this._panningModel,
          }));
      } else 2 === B.length && ((L = B[0]), (t = parseInt(B[1], 10)));
      t = this._getSoundIds(t);
      for (B = 0; B < t.length; B++)
        if ((E = this._soundById(t[B]))) {
          var M = E._pannerAttr;
          M = {
            coneInnerAngle:
              void 0 !== L.coneInnerAngle ? L.coneInnerAngle : M.coneInnerAngle,
            coneOuterAngle:
              void 0 !== L.coneOuterAngle ? L.coneOuterAngle : M.coneOuterAngle,
            coneOuterGain:
              void 0 !== L.coneOuterGain ? L.coneOuterGain : M.coneOuterGain,
            distanceModel:
              void 0 !== L.distanceModel ? L.distanceModel : M.distanceModel,
            maxDistance:
              void 0 !== L.maxDistance ? L.maxDistance : M.maxDistance,
            refDistance:
              void 0 !== L.refDistance ? L.refDistance : M.refDistance,
            rolloffFactor:
              void 0 !== L.rolloffFactor ? L.rolloffFactor : M.rolloffFactor,
            panningModel:
              void 0 !== L.panningModel ? L.panningModel : M.panningModel,
          };
          var aa = E._panner;
          aa ||
            (E._pos || (E._pos = this._pos || [0, 0, -0.5]),
            A(E, 'spatial'),
            (aa = E._panner));
          aa.coneInnerAngle = M.coneInnerAngle;
          aa.coneOuterAngle = M.coneOuterAngle;
          aa.coneOuterGain = M.coneOuterGain;
          aa.distanceModel = M.distanceModel;
          aa.maxDistance = M.maxDistance;
          aa.refDistance = M.refDistance;
          aa.rolloffFactor = M.rolloffFactor;
          aa.panningModel = M.panningModel;
        }
      return this;
    };
    Sound.prototype.init = (function (t) {
      return function () {
        var A = this._parent;
        this._orientation = A._orientation;
        this._stereo = A._stereo;
        this._pos = A._pos;
        this._pannerAttr = A._pannerAttr;
        t.call(this);
        this._stereo
          ? A.stereo(this._stereo)
          : this._pos &&
            A.pos(this._pos[0], this._pos[1], this._pos[2], this._id);
      };
    })(Sound.prototype.init);
    Sound.prototype.reset = (function (t) {
      return function () {
        var A = this._parent;
        return (
          (this._orientation = A._orientation),
          (this._stereo = A._stereo),
          (this._pos = A._pos),
          (this._pannerAttr = A._pannerAttr),
          this._stereo
            ? A.stereo(this._stereo)
            : this._pos
              ? A.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
              : this._panner &&
                (this._panner.disconnect(0),
                (this._panner = void 0),
                A._refreshBuffer(this)),
          t.call(this)
        );
      };
    })(Sound.prototype.reset);
    var A = function (t, A) {
      'spatial' === (A || 'spatial')
        ? ((t._panner = Howler.ctx.createPanner()),
          (t._panner.coneInnerAngle = t._pannerAttr.coneInnerAngle),
          (t._panner.coneOuterAngle = t._pannerAttr.coneOuterAngle),
          (t._panner.coneOuterGain = t._pannerAttr.coneOuterGain),
          (t._panner.distanceModel = t._pannerAttr.distanceModel),
          (t._panner.maxDistance = t._pannerAttr.maxDistance),
          (t._panner.refDistance = t._pannerAttr.refDistance),
          (t._panner.rolloffFactor = t._pannerAttr.rolloffFactor),
          (t._panner.panningModel = t._pannerAttr.panningModel),
          void 0 !== t._panner.positionX
            ? (t._panner.positionX.setValueAtTime(
                t._pos[0],
                Howler.ctx.currentTime,
              ),
              t._panner.positionY.setValueAtTime(
                t._pos[1],
                Howler.ctx.currentTime,
              ),
              t._panner.positionZ.setValueAtTime(
                t._pos[2],
                Howler.ctx.currentTime,
              ))
            : t._panner.setPosition(t._pos[0], t._pos[1], t._pos[2]),
          void 0 !== t._panner.orientationX
            ? (t._panner.orientationX.setValueAtTime(
                t._orientation[0],
                Howler.ctx.currentTime,
              ),
              t._panner.orientationY.setValueAtTime(
                t._orientation[1],
                Howler.ctx.currentTime,
              ),
              t._panner.orientationZ.setValueAtTime(
                t._orientation[2],
                Howler.ctx.currentTime,
              ))
            : t._panner.setOrientation(
                t._orientation[0],
                t._orientation[1],
                t._orientation[2],
              ))
        : ((t._panner = Howler.ctx.createStereoPanner()),
          t._panner.pan.setValueAtTime(t._stereo, Howler.ctx.currentTime));
      t._panner.connect(t._node);
      t._paused || t._parent.pause(t._id, !0).play(t._id, !0);
    };
  })());
!(function (A) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = A())
    : 'function' == typeof define && define.amd
      ? define([], A)
      : (('undefined' != typeof window
          ? window
          : 'undefined' != typeof global
            ? global
            : 'undefined' != typeof self
              ? self
              : this
        ).pako = A());
})(function () {
  return (function L(t, E, B) {
    function M(v, l) {
      if (!E[v]) {
        if (!t[v]) {
          var g = 'function' == typeof require && require;
          if (!l && g) return g(v, !0);
          if (aa) return aa(v, !0);
          l = Error("Cannot find module '" + v + "'");
          throw ((l.code = 'MODULE_NOT_FOUND'), l);
        }
        l = E[v] = { exports: {} };
        t[v][0].call(
          l.exports,
          function (g) {
            var l = t[v][1][g];
            return M(l ? l : g);
          },
          l,
          l.exports,
          L,
          t,
          E,
          B,
        );
      }
      return E[v].exports;
    }
    for (
      var aa = 'function' == typeof require && require, v = 0;
      v < B.length;
      v++
    )
      M(B[v]);
    return M;
  })(
    {
      1: [
        function (t, E, B) {
          function L(t) {
            if (!(this instanceof L)) return new L(t);
            t = this.options = v.assign(
              {
                level: G,
                method: sa,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: $a,
                to: '',
              },
              t || {},
            );
            t.raw && 0 < t.windowBits
              ? (t.windowBits = -t.windowBits)
              : t.gzip &&
                0 < t.windowBits &&
                16 > t.windowBits &&
                (t.windowBits += 16);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new g();
            this.strm.avail_out = 0;
            var E = aa.deflateInit2(
              this.strm,
              t.level,
              t.method,
              t.windowBits,
              t.memLevel,
              t.strategy,
            );
            if (E !== y) throw Error(l[E]);
            if (
              (t.header && aa.deflateSetHeader(this.strm, t.header),
              t.dictionary)
            ) {
              var B;
              if (
                ((B =
                  'string' == typeof t.dictionary
                    ? ea.string2buf(t.dictionary)
                    : '[object ArrayBuffer]' === r.call(t.dictionary)
                      ? new Uint8Array(t.dictionary)
                      : t.dictionary),
                (E = aa.deflateSetDictionary(this.strm, B)),
                E !== y)
              )
                throw Error(l[E]);
              this._dict_set = !0;
            }
          }
          function M(g, l) {
            l = new L(l);
            if ((l.push(g, !0), l.err)) throw l.msg;
            return l.result;
          }
          var aa = t('./zlib/deflate'),
            v = t('./utils/common'),
            ea = t('./utils/strings'),
            l = t('./zlib/messages'),
            g = t('./zlib/zstream'),
            r = Object.prototype.toString,
            y = 0,
            G = -1,
            $a = 0,
            sa = 8;
          L.prototype.push = function (g, l) {
            var t,
              G = this.strm,
              E = this.options.chunkSize;
            if (this.ended) return !1;
            l = l === ~~l ? l : !0 === l ? 4 : 0;
            'string' == typeof g
              ? (G.input = ea.string2buf(g))
              : '[object ArrayBuffer]' === r.call(g)
                ? (G.input = new Uint8Array(g))
                : (G.input = g);
            G.next_in = 0;
            G.avail_in = G.input.length;
            do {
              if (
                (0 === G.avail_out &&
                  ((G.output = new v.Buf8(E)),
                  (G.next_out = 0),
                  (G.avail_out = E)),
                (t = aa.deflate(G, l)),
                1 !== t && t !== y)
              )
                return (this.onEnd(t), (this.ended = !0), !1);
              (0 !== G.avail_out &&
                (0 !== G.avail_in || (4 !== l && 2 !== l))) ||
                ('string' === this.options.to
                  ? this.onData(
                      ea.buf2binstring(v.shrinkBuf(G.output, G.next_out)),
                    )
                  : this.onData(v.shrinkBuf(G.output, G.next_out)));
            } while ((0 < G.avail_in || 0 === G.avail_out) && 1 !== t);
            return 4 === l
              ? ((t = aa.deflateEnd(this.strm)),
                this.onEnd(t),
                (this.ended = !0),
                t === y)
              : 2 !== l || (this.onEnd(y), (G.avail_out = 0), !0);
          };
          L.prototype.onData = function (g) {
            this.chunks.push(g);
          };
          L.prototype.onEnd = function (g) {
            g === y &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = v.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = g;
            this.msg = this.strm.msg;
          };
          B.Deflate = L;
          B.deflate = M;
          B.deflateRaw = function (g, l) {
            return ((l = l || {}), (l.raw = !0), M(g, l));
          };
          B.gzip = function (g, l) {
            return ((l = l || {}), (l.gzip = !0), M(g, l));
          };
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/deflate': 8,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      2: [
        function (t, E, B) {
          function L(t) {
            if (!(this instanceof L)) return new L(t);
            var G = (this.options = v.assign(
              { chunkSize: 16384, windowBits: 0, to: '' },
              t || {},
            ));
            G.raw &&
              0 <= G.windowBits &&
              16 > G.windowBits &&
              ((G.windowBits = -G.windowBits),
              0 === G.windowBits && (G.windowBits = -15));
            !(0 <= G.windowBits && 16 > G.windowBits) ||
              (t && t.windowBits) ||
              (G.windowBits += 32);
            15 < G.windowBits &&
              48 > G.windowBits &&
              0 === (15 & G.windowBits) &&
              (G.windowBits |= 15);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new r();
            this.strm.avail_out = 0;
            t = aa.inflateInit2(this.strm, G.windowBits);
            if (t !== l.Z_OK) throw Error(g[t]);
            this.header = new y();
            aa.inflateGetHeader(this.strm, this.header);
          }
          function M(g, l) {
            l = new L(l);
            if ((l.push(g, !0), l.err)) throw l.msg;
            return l.result;
          }
          var aa = t('./zlib/inflate'),
            v = t('./utils/common'),
            ea = t('./utils/strings'),
            l = t('./zlib/constants'),
            g = t('./zlib/messages'),
            r = t('./zlib/zstream'),
            y = t('./zlib/gzheader'),
            G = Object.prototype.toString;
          L.prototype.push = function (g, r) {
            var t,
              y,
              E,
              B,
              L,
              M = this.strm,
              sa = this.options.chunkSize,
              $a = this.options.dictionary,
              Y = !1;
            if (this.ended) return !1;
            r = r === ~~r ? r : !0 === r ? l.Z_FINISH : l.Z_NO_FLUSH;
            'string' == typeof g
              ? (M.input = ea.binstring2buf(g))
              : '[object ArrayBuffer]' === G.call(g)
                ? (M.input = new Uint8Array(g))
                : (M.input = g);
            M.next_in = 0;
            M.avail_in = M.input.length;
            do {
              if (
                (0 === M.avail_out &&
                  ((M.output = new v.Buf8(sa)),
                  (M.next_out = 0),
                  (M.avail_out = sa)),
                (t = aa.inflate(M, l.Z_NO_FLUSH)),
                t === l.Z_NEED_DICT &&
                  $a &&
                  ((L =
                    'string' == typeof $a
                      ? ea.string2buf($a)
                      : '[object ArrayBuffer]' === G.call($a)
                        ? new Uint8Array($a)
                        : $a),
                  (t = aa.inflateSetDictionary(this.strm, L))),
                t === l.Z_BUF_ERROR && !0 === Y && ((t = l.Z_OK), (Y = !1)),
                t !== l.Z_STREAM_END && t !== l.Z_OK)
              )
                return (this.onEnd(t), (this.ended = !0), !1);
              M.next_out &&
                ((0 !== M.avail_out &&
                  t !== l.Z_STREAM_END &&
                  (0 !== M.avail_in ||
                    (r !== l.Z_FINISH && r !== l.Z_SYNC_FLUSH))) ||
                  ('string' === this.options.to
                    ? ((y = ea.utf8border(M.output, M.next_out)),
                      (E = M.next_out - y),
                      (B = ea.buf2string(M.output, y)),
                      (M.next_out = E),
                      (M.avail_out = sa - E),
                      E && v.arraySet(M.output, M.output, y, E, 0),
                      this.onData(B))
                    : this.onData(v.shrinkBuf(M.output, M.next_out))));
              0 === M.avail_in && 0 === M.avail_out && (Y = !0);
            } while (
              (0 < M.avail_in || 0 === M.avail_out) &&
              t !== l.Z_STREAM_END
            );
            return (
              t === l.Z_STREAM_END && (r = l.Z_FINISH),
              r === l.Z_FINISH
                ? ((t = aa.inflateEnd(this.strm)),
                  this.onEnd(t),
                  (this.ended = !0),
                  t === l.Z_OK)
                : r !== l.Z_SYNC_FLUSH ||
                  (this.onEnd(l.Z_OK), (M.avail_out = 0), !0)
            );
          };
          L.prototype.onData = function (g) {
            this.chunks.push(g);
          };
          L.prototype.onEnd = function (g) {
            g === l.Z_OK &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = v.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = g;
            this.msg = this.strm.msg;
          };
          B.Inflate = L;
          B.inflate = M;
          B.inflateRaw = function (g, l) {
            return ((l = l || {}), (l.raw = !0), M(g, l));
          };
          B.ungzip = M;
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/constants': 6,
          './zlib/gzheader': 9,
          './zlib/inflate': 11,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      3: [
        function (t, E, B) {
          t =
            'undefined' != typeof Uint8Array &&
            'undefined' != typeof Uint16Array &&
            'undefined' != typeof Int32Array;
          B.assign = function (t) {
            for (var v = Array.prototype.slice.call(arguments, 1); v.length; ) {
              var E = v.shift();
              if (E) {
                if ('object' != typeof E)
                  throw new TypeError(E + 'must be non-object');
                for (var l in E) E.hasOwnProperty(l) && (t[l] = E[l]);
              }
            }
            return t;
          };
          B.shrinkBuf = function (t, v) {
            return t.length === v
              ? t
              : t.subarray
                ? t.subarray(0, v)
                : ((t.length = v), t);
          };
          var L = {
              arraySet: function (t, v, E, l, g) {
                if (v.subarray && t.subarray)
                  return void t.set(v.subarray(E, E + l), g);
                for (var r = 0; r < l; r++) t[g + r] = v[E + r];
              },
              flattenChunks: function (t) {
                var v, E;
                var l = (E = 0);
                for (v = t.length; l < v; l++) E += t[l].length;
                var g = new Uint8Array(E);
                l = E = 0;
                for (v = t.length; l < v; l++) {
                  var r = t[l];
                  g.set(r, E);
                  E += r.length;
                }
                return g;
              },
            },
            M = {
              arraySet: function (t, v, E, l, g) {
                for (var r = 0; r < l; r++) t[g + r] = v[E + r];
              },
              flattenChunks: function (t) {
                return [].concat.apply([], t);
              },
            };
          B.setTyped = function (t) {
            t
              ? ((B.Buf8 = Uint8Array),
                (B.Buf16 = Uint16Array),
                (B.Buf32 = Int32Array),
                B.assign(B, L))
              : ((B.Buf8 = Array),
                (B.Buf16 = Array),
                (B.Buf32 = Array),
                B.assign(B, M));
          };
          B.setTyped(t);
        },
        {},
      ],
      4: [
        function (t, E, B) {
          function L(l, g) {
            if (65537 > g && ((l.subarray && v) || (!l.subarray && aa)))
              return String.fromCharCode.apply(null, M.shrinkBuf(l, g));
            for (var r = '', t = 0; t < g; t++) r += String.fromCharCode(l[t]);
            return r;
          }
          var M = t('./common'),
            aa = !0,
            v = !0;
          try {
            String.fromCharCode.apply(null, [0]);
          } catch (l) {
            aa = !1;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (l) {
            v = !1;
          }
          var ea = new M.Buf8(256);
          for (t = 0; 256 > t; t++)
            ea[t] =
              252 <= t
                ? 6
                : 248 <= t
                  ? 5
                  : 240 <= t
                    ? 4
                    : 224 <= t
                      ? 3
                      : 192 <= t
                        ? 2
                        : 1;
          ea[254] = ea[254] = 1;
          B.string2buf = function (l) {
            var g,
              r,
              t,
              v = l.length,
              E = 0;
            for (r = 0; r < v; r++) {
              var B = l.charCodeAt(r);
              55296 === (64512 & B) &&
                r + 1 < v &&
                ((g = l.charCodeAt(r + 1)),
                56320 === (64512 & g) &&
                  ((B = 65536 + ((B - 55296) << 10) + (g - 56320)), r++));
              E += 128 > B ? 1 : 2048 > B ? 2 : 65536 > B ? 3 : 4;
            }
            var L = new M.Buf8(E);
            for (r = t = 0; t < E; r++)
              ((B = l.charCodeAt(r)),
                55296 === (64512 & B) &&
                  r + 1 < v &&
                  ((g = l.charCodeAt(r + 1)),
                  56320 === (64512 & g) &&
                    ((B = 65536 + ((B - 55296) << 10) + (g - 56320)), r++)),
                128 > B
                  ? (L[t++] = B)
                  : 2048 > B
                    ? ((L[t++] = 192 | (B >>> 6)), (L[t++] = 128 | (63 & B)))
                    : 65536 > B
                      ? ((L[t++] = 224 | (B >>> 12)),
                        (L[t++] = 128 | ((B >>> 6) & 63)),
                        (L[t++] = 128 | (63 & B)))
                      : ((L[t++] = 240 | (B >>> 18)),
                        (L[t++] = 128 | ((B >>> 12) & 63)),
                        (L[t++] = 128 | ((B >>> 6) & 63)),
                        (L[t++] = 128 | (63 & B))));
            return L;
          };
          B.buf2binstring = function (l) {
            return L(l, l.length);
          };
          B.binstring2buf = function (l) {
            for (var g = new M.Buf8(l.length), r = 0, t = g.length; r < t; r++)
              g[r] = l.charCodeAt(r);
            return g;
          };
          B.buf2string = function (l, g) {
            var r,
              t,
              v,
              E = g || l.length,
              B = Array(2 * E);
            for (g = r = 0; g < E; )
              if (((t = l[g++]), 128 > t)) B[r++] = t;
              else if (((v = ea[t]), 4 < v)) ((B[r++] = 65533), (g += v - 1));
              else {
                for (t &= 2 === v ? 31 : 3 === v ? 15 : 7; 1 < v && g < E; )
                  ((t = (t << 6) | (63 & l[g++])), v--);
                1 < v
                  ? (B[r++] = 65533)
                  : 65536 > t
                    ? (B[r++] = t)
                    : ((t -= 65536),
                      (B[r++] = 55296 | ((t >> 10) & 1023)),
                      (B[r++] = 56320 | (1023 & t)));
              }
            return L(B, r);
          };
          B.utf8border = function (l, g) {
            var r;
            g = g || l.length;
            g > l.length && (g = l.length);
            for (r = g - 1; 0 <= r && 128 === (192 & l[r]); ) r--;
            return 0 > r ? g : 0 === r ? g : r + ea[l[r]] > g ? r : g;
          };
        },
        { './common': 3 },
      ],
      5: [
        function (t, E, B) {
          E.exports = function (t, E, B, v) {
            var L = (65535 & t) | 0;
            t = ((t >>> 16) & 65535) | 0;
            for (var l; 0 !== B; ) {
              l = 2e3 < B ? 2e3 : B;
              B -= l;
              do ((L = (L + E[v++]) | 0), (t = (t + L) | 0));
              while (--l);
              L %= 65521;
              t %= 65521;
            }
            return L | (t << 16) | 0;
          };
        },
        {},
      ],
      6: [
        function (t, E, B) {
          E.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        },
        {},
      ],
      7: [
        function (t, E, B) {
          var L = (function () {
            for (var t, E = [], v = 0; 256 > v; v++) {
              t = v;
              for (var B = 0; 8 > B; B++)
                t = 1 & t ? 3988292384 ^ (t >>> 1) : t >>> 1;
              E[v] = t;
            }
            return E;
          })();
          E.exports = function (t, E, v, B) {
            v = B + v;
            for (t ^= -1; B < v; B++) t = (t >>> 8) ^ L[255 & (t ^ E[B])];
            return t ^ -1;
          };
        },
        {},
      ],
      8: [
        function (t, E, B) {
          function L(g, l) {
            return ((g.msg = nb[l]), l);
          }
          function M(g) {
            for (var l = g.length; 0 <= --l; ) g[l] = 0;
          }
          function aa(g) {
            var l = g.state,
              r = l.pending;
            r > g.avail_out && (r = g.avail_out);
            0 !== r &&
              (ob.arraySet(
                g.output,
                l.pending_buf,
                l.pending_out,
                r,
                g.next_out,
              ),
              (g.next_out += r),
              (l.pending_out += r),
              (g.total_out += r),
              (g.avail_out -= r),
              (l.pending -= r),
              0 === l.pending && (l.pending_out = 0));
          }
          function v(g, l) {
            oa._tr_flush_block(
              g,
              0 <= g.block_start ? g.block_start : -1,
              g.strstart - g.block_start,
              l,
            );
            g.block_start = g.strstart;
            aa(g.strm);
          }
          function ea(g, l) {
            g.pending_buf[g.pending++] = l;
          }
          function l(g, l) {
            g.pending_buf[g.pending++] = (l >>> 8) & 255;
            g.pending_buf[g.pending++] = 255 & l;
          }
          function g(g, l) {
            var r,
              w,
              x = g.max_chain_length,
              t = g.strstart,
              v = g.prev_length,
              y = g.nice_match,
              F = g.strstart > g.w_size - Na ? g.strstart - (g.w_size - Na) : 0,
              E = g.window,
              H = g.w_mask,
              G = g.prev,
              B = g.strstart + Ia,
              Y = E[t + v - 1],
              O = E[t + v];
            g.prev_length >= g.good_match && (x >>= 2);
            y > g.lookahead && (y = g.lookahead);
            do
              if (
                ((r = l),
                E[r + v] === O &&
                  E[r + v - 1] === Y &&
                  E[r] === E[t] &&
                  E[++r] === E[t + 1])
              ) {
                t += 2;
                for (
                  r++;
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  E[++t] === E[++r] &&
                  t < B;

                );
                if (((w = Ia - (B - t)), (t = B - Ia), w > v)) {
                  if (((g.match_start = l), (v = w), w >= y)) break;
                  Y = E[t + v - 1];
                  O = E[t + v];
                }
              }
            while ((l = G[l & H]) > F && 0 !== --x);
            return v <= g.lookahead ? v : g.lookahead;
          }
          function r(g) {
            var l,
              r,
              w = g.w_size;
            do {
              if (
                ((r = g.window_size - g.lookahead - g.strstart),
                g.strstart >= w + (w - Na))
              ) {
                ob.arraySet(g.window, g.window, w, w, 0);
                g.match_start -= w;
                g.strstart -= w;
                g.block_start -= w;
                var x = (l = g.hash_size);
                do {
                  var t = g.head[--x];
                  g.head[x] = t >= w ? t - w : 0;
                } while (--l);
                x = l = w;
                do ((t = g.prev[--x]), (g.prev[x] = t >= w ? t - w : 0));
                while (--l);
                r += w;
              }
              if (0 === g.strm.avail_in) break;
              x = g.strm;
              t = g.window;
              var v = g.strstart + g.lookahead,
                y = x.avail_in;
              if (
                ((l =
                  (y > r && (y = r),
                  0 === y
                    ? 0
                    : ((x.avail_in -= y),
                      ob.arraySet(t, x.input, x.next_in, y, v),
                      1 === x.state.wrap
                        ? (x.adler = mb(x.adler, t, y, v))
                        : 2 === x.state.wrap &&
                          (x.adler = la(x.adler, t, y, v)),
                      (x.next_in += y),
                      (x.total_in += y),
                      y))),
                (g.lookahead += l),
                g.lookahead + g.insert >= za)
              )
                for (
                  r = g.strstart - g.insert,
                    g.ins_h = g.window[r],
                    g.ins_h =
                      ((g.ins_h << g.hash_shift) ^ g.window[r + 1]) &
                      g.hash_mask;
                  g.insert &&
                  ((g.ins_h =
                    ((g.ins_h << g.hash_shift) ^ g.window[r + za - 1]) &
                    g.hash_mask),
                  (g.prev[r & g.w_mask] = g.head[g.ins_h]),
                  (g.head[g.ins_h] = r),
                  r++,
                  g.insert--,
                  !(g.lookahead + g.insert < za));

                );
            } while (g.lookahead < Na && 0 !== g.strm.avail_in);
          }
          function y(l, t) {
            for (var x, w; ; ) {
              if (l.lookahead < Na) {
                if ((r(l), l.lookahead < Na && t === Y)) return T;
                if (0 === l.lookahead) break;
              }
              if (
                ((x = 0),
                l.lookahead >= za &&
                  ((l.ins_h =
                    ((l.ins_h << l.hash_shift) ^
                      l.window[l.strstart + za - 1]) &
                    l.hash_mask),
                  (x = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                  (l.head[l.ins_h] = l.strstart)),
                0 !== x &&
                  l.strstart - x <= l.w_size - Na &&
                  (l.match_length = g(l, x)),
                l.match_length >= za)
              )
                if (
                  ((w = oa._tr_tally(
                    l,
                    l.strstart - l.match_start,
                    l.match_length - za,
                  )),
                  (l.lookahead -= l.match_length),
                  l.match_length <= l.max_lazy_match && l.lookahead >= za)
                ) {
                  l.match_length--;
                  do
                    (l.strstart++,
                      (l.ins_h =
                        ((l.ins_h << l.hash_shift) ^
                          l.window[l.strstart + za - 1]) &
                        l.hash_mask),
                      (x = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                      (l.head[l.ins_h] = l.strstart));
                  while (0 !== --l.match_length);
                  l.strstart++;
                } else
                  ((l.strstart += l.match_length),
                    (l.match_length = 0),
                    (l.ins_h = l.window[l.strstart]),
                    (l.ins_h =
                      ((l.ins_h << l.hash_shift) ^ l.window[l.strstart + 1]) &
                      l.hash_mask));
              else
                ((w = oa._tr_tally(l, 0, l.window[l.strstart])),
                  l.lookahead--,
                  l.strstart++);
              if (w && (v(l, !1), 0 === l.strm.avail_out)) return T;
            }
            return (
              (l.insert = l.strstart < za - 1 ? l.strstart : za - 1),
              t === pa
                ? (v(l, !0), 0 === l.strm.avail_out ? ya : H)
                : l.last_lit && (v(l, !1), 0 === l.strm.avail_out)
                  ? T
                  : cd
            );
          }
          function G(l, t) {
            for (var x, w, y; ; ) {
              if (l.lookahead < Na) {
                if ((r(l), l.lookahead < Na && t === Y)) return T;
                if (0 === l.lookahead) break;
              }
              if (
                ((x = 0),
                l.lookahead >= za &&
                  ((l.ins_h =
                    ((l.ins_h << l.hash_shift) ^
                      l.window[l.strstart + za - 1]) &
                    l.hash_mask),
                  (x = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                  (l.head[l.ins_h] = l.strstart)),
                (l.prev_length = l.match_length),
                (l.prev_match = l.match_start),
                (l.match_length = za - 1),
                0 !== x &&
                  l.prev_length < l.max_lazy_match &&
                  l.strstart - x <= l.w_size - Na &&
                  ((l.match_length = g(l, x)),
                  5 >= l.match_length &&
                    (l.strategy === lb ||
                      (l.match_length === za &&
                        4096 < l.strstart - l.match_start)) &&
                    (l.match_length = za - 1)),
                l.prev_length >= za && l.match_length <= l.prev_length)
              ) {
                y = l.strstart + l.lookahead - za;
                w = oa._tr_tally(
                  l,
                  l.strstart - 1 - l.prev_match,
                  l.prev_length - za,
                );
                l.lookahead -= l.prev_length - 1;
                l.prev_length -= 2;
                do
                  ++l.strstart <= y &&
                    ((l.ins_h =
                      ((l.ins_h << l.hash_shift) ^
                        l.window[l.strstart + za - 1]) &
                      l.hash_mask),
                    (x = l.prev[l.strstart & l.w_mask] = l.head[l.ins_h]),
                    (l.head[l.ins_h] = l.strstart));
                while (0 !== --l.prev_length);
                if (
                  ((l.match_available = 0),
                  (l.match_length = za - 1),
                  l.strstart++,
                  w && (v(l, !1), 0 === l.strm.avail_out))
                )
                  return T;
              } else if (l.match_available) {
                if (
                  ((w = oa._tr_tally(l, 0, l.window[l.strstart - 1])),
                  w && v(l, !1),
                  l.strstart++,
                  l.lookahead--,
                  0 === l.strm.avail_out)
                )
                  return T;
              } else ((l.match_available = 1), l.strstart++, l.lookahead--);
            }
            return (
              l.match_available &&
                (oa._tr_tally(l, 0, l.window[l.strstart - 1]),
                (l.match_available = 0)),
              (l.insert = l.strstart < za - 1 ? l.strstart : za - 1),
              t === pa
                ? (v(l, !0), 0 === l.strm.avail_out ? ya : H)
                : l.last_lit && (v(l, !1), 0 === l.strm.avail_out)
                  ? T
                  : cd
            );
          }
          function $a(g, l, r, w, t) {
            this.good_length = g;
            this.max_lazy = l;
            this.nice_length = r;
            this.max_chain = w;
            this.func = t;
          }
          function sa() {
            this.strm = null;
            this.status = 0;
            this.pending_buf = null;
            this.wrap =
              this.pending =
              this.pending_out =
              this.pending_buf_size =
                0;
            this.gzhead = null;
            this.gzindex = 0;
            this.method = sb;
            this.last_flush = -1;
            this.w_mask = this.w_bits = this.w_size = 0;
            this.window = null;
            this.window_size = 0;
            this.head = this.prev = null;
            this.nice_match =
              this.good_match =
              this.strategy =
              this.level =
              this.max_lazy_match =
              this.max_chain_length =
              this.prev_length =
              this.lookahead =
              this.match_start =
              this.strstart =
              this.match_available =
              this.prev_match =
              this.match_length =
              this.block_start =
              this.hash_shift =
              this.hash_mask =
              this.hash_bits =
              this.hash_size =
              this.ins_h =
                0;
            this.dyn_ltree = new ob.Buf16(2 * Ab);
            this.dyn_dtree = new ob.Buf16(2 * (2 * N + 1));
            this.bl_tree = new ob.Buf16(2 * (2 * F + 1));
            M(this.dyn_ltree);
            M(this.dyn_dtree);
            M(this.bl_tree);
            this.bl_desc = this.d_desc = this.l_desc = null;
            this.bl_count = new ob.Buf16(hb + 1);
            this.heap = new ob.Buf16(2 * ja + 1);
            M(this.heap);
            this.heap_max = this.heap_len = 0;
            this.depth = new ob.Buf16(2 * ja + 1);
            M(this.depth);
            this.bi_valid =
              this.bi_buf =
              this.insert =
              this.matches =
              this.static_len =
              this.opt_len =
              this.d_buf =
              this.last_lit =
              this.lit_bufsize =
              this.l_buf =
                0;
          }
          function ab(g) {
            var l;
            return g && g.state
              ? ((g.total_in = g.total_out = 0),
                (g.data_type = Va),
                (l = g.state),
                (l.pending = 0),
                (l.pending_out = 0),
                0 > l.wrap && (l.wrap = -l.wrap),
                (l.status = l.wrap ? ha : ca),
                (g.adler = 2 === l.wrap ? 0 : 1),
                (l.last_flush = Y),
                oa._tr_init(l),
                bb)
              : L(g, S);
          }
          function Oa(g) {
            var l = ab(g);
            l === bb &&
              ((g = g.state),
              (g.window_size = 2 * g.w_size),
              M(g.head),
              (g.max_lazy_match = wb[g.level].max_lazy),
              (g.good_match = wb[g.level].good_length),
              (g.nice_match = wb[g.level].nice_length),
              (g.max_chain_length = wb[g.level].max_chain),
              (g.strstart = 0),
              (g.block_start = 0),
              (g.lookahead = 0),
              (g.insert = 0),
              (g.match_length = g.prev_length = za - 1),
              (g.match_available = 0),
              (g.ins_h = 0));
            return l;
          }
          function Sb(g, l, r, w, t, v) {
            if (!g) return S;
            var J = 1;
            if (
              (l === xa && (l = 6),
              0 > w ? ((J = 0), (w = -w)) : 15 < w && ((J = 2), (w -= 16)),
              1 > t ||
                t > rc ||
                r !== sb ||
                8 > w ||
                15 < w ||
                0 > l ||
                9 < l ||
                0 > v ||
                v > ka)
            )
              return L(g, S);
            8 === w && (w = 9);
            var x = new sa();
            return (
              (g.state = x),
              (x.strm = g),
              (x.wrap = J),
              (x.gzhead = null),
              (x.w_bits = w),
              (x.w_size = 1 << x.w_bits),
              (x.w_mask = x.w_size - 1),
              (x.hash_bits = t + 7),
              (x.hash_size = 1 << x.hash_bits),
              (x.hash_mask = x.hash_size - 1),
              (x.hash_shift = ~~((x.hash_bits + za - 1) / za)),
              (x.window = new ob.Buf8(2 * x.w_size)),
              (x.head = new ob.Buf16(x.hash_size)),
              (x.prev = new ob.Buf16(x.w_size)),
              (x.lit_bufsize = 1 << (t + 6)),
              (x.pending_buf_size = 4 * x.lit_bufsize),
              (x.pending_buf = new ob.Buf8(x.pending_buf_size)),
              (x.d_buf = 1 * x.lit_bufsize),
              (x.l_buf = 3 * x.lit_bufsize),
              (x.level = l),
              (x.strategy = v),
              (x.method = r),
              Oa(g)
            );
          }
          var ob = t('../utils/common'),
            oa = t('./trees'),
            mb = t('./adler32'),
            la = t('./crc32'),
            nb = t('./messages'),
            Y = 0,
            pa = 4,
            bb = 0,
            S = -2,
            xa = -1,
            lb = 1,
            ka = 4,
            Va = 2,
            sb = 8,
            rc = 9,
            ja = 286,
            N = 30,
            F = 19,
            Ab = 2 * ja + 1,
            hb = 15,
            za = 3,
            Ia = 258,
            Na = Ia + za + 1,
            ha = 42,
            ca = 113,
            T = 1,
            cd = 2,
            ya = 3,
            H = 4;
          var wb = [
            new $a(0, 0, 0, 0, function (g, l) {
              var t = 65535;
              for (
                t > g.pending_buf_size - 5 && (t = g.pending_buf_size - 5);
                ;

              ) {
                if (1 >= g.lookahead) {
                  if ((r(g), 0 === g.lookahead && l === Y)) return T;
                  if (0 === g.lookahead) break;
                }
                g.strstart += g.lookahead;
                g.lookahead = 0;
                var w = g.block_start + t;
                if (
                  ((0 === g.strstart || g.strstart >= w) &&
                    ((g.lookahead = g.strstart - w),
                    (g.strstart = w),
                    v(g, !1),
                    0 === g.strm.avail_out)) ||
                  (g.strstart - g.block_start >= g.w_size - Na &&
                    (v(g, !1), 0 === g.strm.avail_out))
                )
                  return T;
              }
              return (
                (g.insert = 0),
                l === pa
                  ? (v(g, !0), 0 === g.strm.avail_out ? ya : H)
                  : (g.strstart > g.block_start && v(g, !1), T)
              );
            }),
            new $a(4, 4, 8, 4, y),
            new $a(4, 5, 16, 8, y),
            new $a(4, 6, 32, 32, y),
            new $a(4, 4, 16, 16, G),
            new $a(8, 16, 32, 32, G),
            new $a(8, 16, 128, 128, G),
            new $a(8, 32, 128, 256, G),
            new $a(32, 128, 258, 1024, G),
            new $a(32, 258, 258, 4096, G),
          ];
          B.deflateInit = function (g, l) {
            return Sb(g, l, sb, 15, 8, 0);
          };
          B.deflateInit2 = Sb;
          B.deflateReset = Oa;
          B.deflateResetKeep = ab;
          B.deflateSetHeader = function (g, l) {
            return g && g.state
              ? 2 !== g.state.wrap
                ? S
                : ((g.state.gzhead = l), bb)
              : S;
          };
          B.deflate = function (g, t) {
            var J, w;
            if (!g || !g.state || 5 < t || 0 > t) return g ? L(g, S) : S;
            if (
              ((w = g.state),
              !g.output ||
                (!g.input && 0 !== g.avail_in) ||
                (666 === w.status && t !== pa))
            )
              return L(g, 0 === g.avail_out ? -5 : S);
            if (
              ((w.strm = g),
              (J = w.last_flush),
              (w.last_flush = t),
              w.status === ha)
            )
              if (2 === w.wrap)
                ((g.adler = 0),
                  ea(w, 31),
                  ea(w, 139),
                  ea(w, 8),
                  w.gzhead
                    ? (ea(
                        w,
                        (w.gzhead.text ? 1 : 0) +
                          (w.gzhead.hcrc ? 2 : 0) +
                          (w.gzhead.extra ? 4 : 0) +
                          (w.gzhead.name ? 8 : 0) +
                          (w.gzhead.comment ? 16 : 0),
                      ),
                      ea(w, 255 & w.gzhead.time),
                      ea(w, (w.gzhead.time >> 8) & 255),
                      ea(w, (w.gzhead.time >> 16) & 255),
                      ea(w, (w.gzhead.time >> 24) & 255),
                      ea(
                        w,
                        9 === w.level
                          ? 2
                          : 2 <= w.strategy || 2 > w.level
                            ? 4
                            : 0,
                      ),
                      ea(w, 255 & w.gzhead.os),
                      w.gzhead.extra &&
                        w.gzhead.extra.length &&
                        (ea(w, 255 & w.gzhead.extra.length),
                        ea(w, (w.gzhead.extra.length >> 8) & 255)),
                      w.gzhead.hcrc &&
                        (g.adler = la(g.adler, w.pending_buf, w.pending, 0)),
                      (w.gzindex = 0),
                      (w.status = 69))
                    : (ea(w, 0),
                      ea(w, 0),
                      ea(w, 0),
                      ea(w, 0),
                      ea(w, 0),
                      ea(
                        w,
                        9 === w.level
                          ? 2
                          : 2 <= w.strategy || 2 > w.level
                            ? 4
                            : 0,
                      ),
                      ea(w, 3),
                      (w.status = ca)));
              else {
                var x = (sb + ((w.w_bits - 8) << 4)) << 8;
                x |=
                  (2 <= w.strategy || 2 > w.level
                    ? 0
                    : 6 > w.level
                      ? 1
                      : 6 === w.level
                        ? 2
                        : 3) << 6;
                0 !== w.strstart && (x |= 32);
                w.status = ca;
                l(w, x + (31 - (x % 31)));
                0 !== w.strstart &&
                  (l(w, g.adler >>> 16), l(w, 65535 & g.adler));
                g.adler = 1;
              }
            if (69 === w.status)
              if (w.gzhead.extra) {
                for (
                  x = w.pending;
                  w.gzindex < (65535 & w.gzhead.extra.length) &&
                  (w.pending !== w.pending_buf_size ||
                    (w.gzhead.hcrc &&
                      w.pending > x &&
                      (g.adler = la(g.adler, w.pending_buf, w.pending - x, x)),
                    aa(g),
                    (x = w.pending),
                    w.pending !== w.pending_buf_size));

                )
                  (ea(w, 255 & w.gzhead.extra[w.gzindex]), w.gzindex++);
                w.gzhead.hcrc &&
                  w.pending > x &&
                  (g.adler = la(g.adler, w.pending_buf, w.pending - x, x));
                w.gzindex === w.gzhead.extra.length &&
                  ((w.gzindex = 0), (w.status = 73));
              } else w.status = 73;
            if (73 === w.status)
              if (w.gzhead.name) {
                x = w.pending;
                do {
                  if (
                    w.pending === w.pending_buf_size &&
                    (w.gzhead.hcrc &&
                      w.pending > x &&
                      (g.adler = la(g.adler, w.pending_buf, w.pending - x, x)),
                    aa(g),
                    (x = w.pending),
                    w.pending === w.pending_buf_size)
                  ) {
                    var y = 1;
                    break;
                  }
                  y =
                    w.gzindex < w.gzhead.name.length
                      ? 255 & w.gzhead.name.charCodeAt(w.gzindex++)
                      : 0;
                  ea(w, y);
                } while (0 !== y);
                w.gzhead.hcrc &&
                  w.pending > x &&
                  (g.adler = la(g.adler, w.pending_buf, w.pending - x, x));
                0 === y && ((w.gzindex = 0), (w.status = 91));
              } else w.status = 91;
            if (91 === w.status)
              if (w.gzhead.comment) {
                x = w.pending;
                do {
                  if (
                    w.pending === w.pending_buf_size &&
                    (w.gzhead.hcrc &&
                      w.pending > x &&
                      (g.adler = la(g.adler, w.pending_buf, w.pending - x, x)),
                    aa(g),
                    (x = w.pending),
                    w.pending === w.pending_buf_size)
                  ) {
                    y = 1;
                    break;
                  }
                  y =
                    w.gzindex < w.gzhead.comment.length
                      ? 255 & w.gzhead.comment.charCodeAt(w.gzindex++)
                      : 0;
                  ea(w, y);
                } while (0 !== y);
                w.gzhead.hcrc &&
                  w.pending > x &&
                  (g.adler = la(g.adler, w.pending_buf, w.pending - x, x));
                0 === y && (w.status = 103);
              } else w.status = 103;
            if (
              (103 === w.status &&
                (w.gzhead.hcrc
                  ? (w.pending + 2 > w.pending_buf_size && aa(g),
                    w.pending + 2 <= w.pending_buf_size &&
                      (ea(w, 255 & g.adler),
                      ea(w, (g.adler >> 8) & 255),
                      (g.adler = 0),
                      (w.status = ca)))
                  : (w.status = ca)),
              0 !== w.pending)
            ) {
              if ((aa(g), 0 === g.avail_out)) return ((w.last_flush = -1), bb);
            } else if (
              0 === g.avail_in &&
              (t << 1) - (4 < t ? 9 : 0) <= (J << 1) - (4 < J ? 9 : 0) &&
              t !== pa
            )
              return L(g, -5);
            if (666 === w.status && 0 !== g.avail_in) return L(g, -5);
            if (
              0 !== g.avail_in ||
              0 !== w.lookahead ||
              (t !== Y && 666 !== w.status)
            ) {
              if (2 === w.strategy)
                a: {
                  for (var F; ; ) {
                    if (0 === w.lookahead && (r(w), 0 === w.lookahead)) {
                      if (t === Y) {
                        var E = T;
                        break a;
                      }
                      break;
                    }
                    if (
                      ((w.match_length = 0),
                      (F = oa._tr_tally(w, 0, w.window[w.strstart])),
                      w.lookahead--,
                      w.strstart++,
                      F && (v(w, !1), 0 === w.strm.avail_out))
                    ) {
                      E = T;
                      break a;
                    }
                  }
                  E =
                    ((w.insert = 0),
                    t === pa
                      ? (v(w, !0), 0 === w.strm.avail_out ? ya : H)
                      : w.last_lit && (v(w, !1), 0 === w.strm.avail_out)
                        ? T
                        : cd);
                }
              else if (3 === w.strategy)
                a: {
                  var G, B;
                  for (F = w.window; ; ) {
                    if (w.lookahead <= Ia) {
                      if ((r(w), w.lookahead <= Ia && t === Y)) {
                        E = T;
                        break a;
                      }
                      if (0 === w.lookahead) break;
                    }
                    if (
                      ((w.match_length = 0),
                      w.lookahead >= za &&
                        0 < w.strstart &&
                        ((B = w.strstart - 1),
                        (G = F[B]),
                        G === F[++B] && G === F[++B] && G === F[++B]))
                    ) {
                      for (
                        J = w.strstart + Ia;
                        G === F[++B] &&
                        G === F[++B] &&
                        G === F[++B] &&
                        G === F[++B] &&
                        G === F[++B] &&
                        G === F[++B] &&
                        G === F[++B] &&
                        G === F[++B] &&
                        B < J;

                      );
                      w.match_length = Ia - (J - B);
                      w.match_length > w.lookahead &&
                        (w.match_length = w.lookahead);
                    }
                    if (
                      (w.match_length >= za
                        ? ((E = oa._tr_tally(w, 1, w.match_length - za)),
                          (w.lookahead -= w.match_length),
                          (w.strstart += w.match_length),
                          (w.match_length = 0))
                        : ((E = oa._tr_tally(w, 0, w.window[w.strstart])),
                          w.lookahead--,
                          w.strstart++),
                      E && (v(w, !1), 0 === w.strm.avail_out))
                    ) {
                      E = T;
                      break a;
                    }
                  }
                  E =
                    ((w.insert = 0),
                    t === pa
                      ? (v(w, !0), 0 === w.strm.avail_out ? ya : H)
                      : w.last_lit && (v(w, !1), 0 === w.strm.avail_out)
                        ? T
                        : cd);
                }
              else E = wb[w.level].func(w, t);
              if (
                ((E !== ya && E !== H) || (w.status = 666), E === T || E === ya)
              )
                return (0 === g.avail_out && (w.last_flush = -1), bb);
              if (
                E === cd &&
                (1 === t
                  ? oa._tr_align(w)
                  : 5 !== t &&
                    (oa._tr_stored_block(w, 0, 0, !1),
                    3 === t &&
                      (M(w.head),
                      0 === w.lookahead &&
                        ((w.strstart = 0),
                        (w.block_start = 0),
                        (w.insert = 0)))),
                aa(g),
                0 === g.avail_out)
              )
                return ((w.last_flush = -1), bb);
            }
            return t !== pa
              ? bb
              : 0 >= w.wrap
                ? 1
                : (2 === w.wrap
                    ? (ea(w, 255 & g.adler),
                      ea(w, (g.adler >> 8) & 255),
                      ea(w, (g.adler >> 16) & 255),
                      ea(w, (g.adler >> 24) & 255),
                      ea(w, 255 & g.total_in),
                      ea(w, (g.total_in >> 8) & 255),
                      ea(w, (g.total_in >> 16) & 255),
                      ea(w, (g.total_in >> 24) & 255))
                    : (l(w, g.adler >>> 16), l(w, 65535 & g.adler)),
                  aa(g),
                  0 < w.wrap && (w.wrap = -w.wrap),
                  0 !== w.pending ? bb : 1);
          };
          B.deflateEnd = function (g) {
            var l;
            return g && g.state
              ? ((l = g.state.status),
                l !== ha &&
                69 !== l &&
                73 !== l &&
                91 !== l &&
                103 !== l &&
                l !== ca &&
                666 !== l
                  ? L(g, S)
                  : ((g.state = null), l === ca ? L(g, -3) : bb))
              : S;
          };
          B.deflateSetDictionary = function (g, l) {
            var t, w, v;
            var x = l.length;
            if (
              !g ||
              !g.state ||
              ((t = g.state),
              (w = t.wrap),
              2 === w || (1 === w && t.status !== ha) || t.lookahead)
            )
              return S;
            1 === w && (g.adler = mb(g.adler, l, x, 0));
            t.wrap = 0;
            x >= t.w_size &&
              (0 === w &&
                (M(t.head),
                (t.strstart = 0),
                (t.block_start = 0),
                (t.insert = 0)),
              (v = new ob.Buf8(t.w_size)),
              ob.arraySet(v, l, x - t.w_size, t.w_size, 0),
              (l = v),
              (x = t.w_size));
            v = g.avail_in;
            var y = g.next_in;
            var F = g.input;
            g.avail_in = x;
            g.next_in = 0;
            g.input = l;
            for (r(t); t.lookahead >= za; ) {
              l = t.strstart;
              x = t.lookahead - (za - 1);
              do
                ((t.ins_h =
                  ((t.ins_h << t.hash_shift) ^ t.window[l + za - 1]) &
                  t.hash_mask),
                  (t.prev[l & t.w_mask] = t.head[t.ins_h]),
                  (t.head[t.ins_h] = l),
                  l++);
              while (--x);
              t.strstart = l;
              t.lookahead = za - 1;
              r(t);
            }
            return (
              (t.strstart += t.lookahead),
              (t.block_start = t.strstart),
              (t.insert = t.lookahead),
              (t.lookahead = 0),
              (t.match_length = t.prev_length = za - 1),
              (t.match_available = 0),
              (g.next_in = y),
              (g.input = F),
              (g.avail_in = v),
              (t.wrap = w),
              bb
            );
          };
          B.deflateInfo = 'pako deflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './messages': 13,
          './trees': 14,
        },
      ],
      9: [
        function (t, E, B) {
          E.exports = function () {
            this.os = this.xflags = this.time = this.text = 0;
            this.extra = null;
            this.extra_len = 0;
            this.comment = this.name = '';
            this.hcrc = 0;
            this.done = !1;
          };
        },
        {},
      ],
      10: [
        function (t, E, B) {
          E.exports = function (t, E) {
            var B, v, L;
            var l = t.state;
            var g = t.next_in;
            var r = t.input;
            var y = g + (t.avail_in - 5);
            var G = t.next_out;
            var M = t.output;
            E = G - (E - t.avail_out);
            var sa = G + (t.avail_out - 257);
            var ab = l.dmax;
            var Oa = l.wsize;
            var Sb = l.whave;
            var ob = l.wnext;
            var oa = l.window;
            var mb = l.hold;
            var la = l.bits;
            var nb = l.lencode;
            var Y = l.distcode;
            var pa = (1 << l.lenbits) - 1;
            var bb = (1 << l.distbits) - 1;
            a: do {
              15 > la &&
                ((mb += r[g++] << la),
                (la += 8),
                (mb += r[g++] << la),
                (la += 8));
              var S = nb[mb & pa];
              b: for (;;) {
                if (
                  ((B = S >>> 24),
                  (mb >>>= B),
                  (la -= B),
                  (B = (S >>> 16) & 255),
                  0 === B)
                )
                  M[G++] = 65535 & S;
                else {
                  if (!(16 & B)) {
                    if (0 === (64 & B)) {
                      S = nb[(65535 & S) + (mb & ((1 << B) - 1))];
                      continue b;
                    }
                    if (32 & B) {
                      l.mode = 12;
                      break a;
                    }
                    t.msg = 'invalid literal/length code';
                    l.mode = 30;
                    break a;
                  }
                  var xa = 65535 & S;
                  (B &= 15) &&
                    (la < B && ((mb += r[g++] << la), (la += 8)),
                    (xa += mb & ((1 << B) - 1)),
                    (mb >>>= B),
                    (la -= B));
                  15 > la &&
                    ((mb += r[g++] << la),
                    (la += 8),
                    (mb += r[g++] << la),
                    (la += 8));
                  S = Y[mb & bb];
                  c: for (;;) {
                    if (
                      ((B = S >>> 24),
                      (mb >>>= B),
                      (la -= B),
                      (B = (S >>> 16) & 255),
                      !(16 & B))
                    ) {
                      if (0 === (64 & B)) {
                        S = Y[(65535 & S) + (mb & ((1 << B) - 1))];
                        continue c;
                      }
                      t.msg = 'invalid distance code';
                      l.mode = 30;
                      break a;
                    }
                    if (
                      ((v = 65535 & S),
                      (B &= 15),
                      la < B &&
                        ((mb += r[g++] << la),
                        (la += 8),
                        la < B && ((mb += r[g++] << la), (la += 8))),
                      (v += mb & ((1 << B) - 1)),
                      v > ab)
                    ) {
                      t.msg = 'invalid distance too far back';
                      l.mode = 30;
                      break a;
                    }
                    if (((mb >>>= B), (la -= B), (B = G - E), v > B)) {
                      if (((B = v - B), B > Sb && l.sane)) {
                        t.msg = 'invalid distance too far back';
                        l.mode = 30;
                        break a;
                      }
                      if (((S = 0), (L = oa), 0 === ob)) {
                        if (((S += Oa - B), B < xa)) {
                          xa -= B;
                          do M[G++] = oa[S++];
                          while (--B);
                          S = G - v;
                          L = M;
                        }
                      } else if (ob < B) {
                        if (((S += Oa + ob - B), (B -= ob), B < xa)) {
                          xa -= B;
                          do M[G++] = oa[S++];
                          while (--B);
                          if (((S = 0), ob < xa)) {
                            B = ob;
                            xa -= B;
                            do M[G++] = oa[S++];
                            while (--B);
                            S = G - v;
                            L = M;
                          }
                        }
                      } else if (((S += ob - B), B < xa)) {
                        xa -= B;
                        do M[G++] = oa[S++];
                        while (--B);
                        S = G - v;
                        L = M;
                      }
                      for (; 2 < xa; )
                        ((M[G++] = L[S++]),
                          (M[G++] = L[S++]),
                          (M[G++] = L[S++]),
                          (xa -= 3));
                      xa && ((M[G++] = L[S++]), 1 < xa && (M[G++] = L[S++]));
                    } else {
                      S = G - v;
                      do
                        ((M[G++] = M[S++]),
                          (M[G++] = M[S++]),
                          (M[G++] = M[S++]),
                          (xa -= 3));
                      while (2 < xa);
                      xa && ((M[G++] = M[S++]), 1 < xa && (M[G++] = M[S++]));
                    }
                    break;
                  }
                }
                break;
              }
            } while (g < y && G < sa);
            xa = la >> 3;
            g -= xa;
            la -= xa << 3;
            t.next_in = g;
            t.next_out = G;
            t.avail_in = g < y ? 5 + (y - g) : 5 - (g - y);
            t.avail_out = G < sa ? 257 + (sa - G) : 257 - (G - sa);
            l.hold = mb & ((1 << la) - 1);
            l.bits = la;
          };
        },
        {},
      ],
      11: [
        function (t, E, B) {
          function L(g) {
            return (
              ((g >>> 24) & 255) +
              ((g >>> 8) & 65280) +
              ((65280 & g) << 8) +
              ((255 & g) << 24)
            );
          }
          function M() {
            this.mode = 0;
            this.last = !1;
            this.wrap = 0;
            this.havedict = !1;
            this.total = this.check = this.dmax = this.flags = 0;
            this.head = null;
            this.wnext = this.whave = this.wsize = this.wbits = 0;
            this.window = null;
            this.extra = this.offset = this.length = this.bits = this.hold = 0;
            this.distcode = this.lencode = null;
            this.have =
              this.ndist =
              this.nlen =
              this.ncode =
              this.distbits =
              this.lenbits =
                0;
            this.next = null;
            this.lens = new G.Buf16(320);
            this.work = new G.Buf16(288);
            this.distdyn = this.lendyn = null;
            this.was = this.back = this.sane = 0;
          }
          function aa(g) {
            var l;
            return g && g.state
              ? ((l = g.state),
                (g.total_in = g.total_out = l.total = 0),
                (g.msg = ''),
                l.wrap && (g.adler = 1 & l.wrap),
                (l.mode = oa),
                (l.last = 0),
                (l.havedict = 0),
                (l.dmax = 32768),
                (l.head = null),
                (l.hold = 0),
                (l.bits = 0),
                (l.lencode = l.lendyn = new G.Buf32(mb)),
                (l.distcode = l.distdyn = new G.Buf32(la)),
                (l.sane = 1),
                (l.back = -1),
                Sb)
              : ob;
          }
          function v(g) {
            var l;
            return g && g.state
              ? ((l = g.state),
                (l.wsize = 0),
                (l.whave = 0),
                (l.wnext = 0),
                aa(g))
              : ob;
          }
          function ea(g, l) {
            var r, t;
            return g && g.state
              ? ((t = g.state),
                0 > l
                  ? ((r = 0), (l = -l))
                  : ((r = (l >> 4) + 1), 48 > l && (l &= 15)),
                l && (8 > l || 15 < l)
                  ? ob
                  : (null !== t.window && t.wbits !== l && (t.window = null),
                    (t.wrap = r),
                    (t.wbits = l),
                    v(g)))
              : ob;
          }
          function l(g, l) {
            var r, t;
            return g
              ? ((t = new M()),
                (g.state = t),
                (t.window = null),
                (r = ea(g, l)),
                r !== Sb && (g.state = null),
                r)
              : ob;
          }
          function g(g, l, r, t) {
            var v;
            g = g.state;
            return (
              null === g.window &&
                ((g.wsize = 1 << g.wbits),
                (g.wnext = 0),
                (g.whave = 0),
                (g.window = new G.Buf8(g.wsize))),
              t >= g.wsize
                ? (G.arraySet(g.window, l, r - g.wsize, g.wsize, 0),
                  (g.wnext = 0),
                  (g.whave = g.wsize))
                : ((v = g.wsize - g.wnext),
                  v > t && (v = t),
                  G.arraySet(g.window, l, r - t, v, g.wnext),
                  (t -= v),
                  t
                    ? (G.arraySet(g.window, l, r - t, t, 0),
                      (g.wnext = t),
                      (g.whave = g.wsize))
                    : ((g.wnext += v),
                      g.wnext === g.wsize && (g.wnext = 0),
                      g.whave < g.wsize && (g.whave += v))),
              0
            );
          }
          var r,
            y,
            G = t('../utils/common'),
            $a = t('./adler32'),
            sa = t('./crc32'),
            ab = t('./inffast'),
            Oa = t('./inftrees'),
            Sb = 0,
            ob = -2,
            oa = 1,
            mb = 852,
            la = 592,
            nb = !0;
          B.inflateReset = v;
          B.inflateReset2 = ea;
          B.inflateResetKeep = aa;
          B.inflateInit = function (g) {
            return l(g, 15);
          };
          B.inflateInit2 = l;
          B.inflate = function (l, t) {
            var v,
              E,
              B,
              M,
              Y,
              aa,
              ea,
              pa = 0,
              ja = new G.Buf8(4),
              N = [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];
            if (!l || !l.state || !l.output || (!l.input && 0 !== l.avail_in))
              return ob;
            var F = l.state;
            12 === F.mode && (F.mode = 13);
            var la = l.next_out;
            var hb = l.output;
            var za = l.avail_out;
            var Ia = l.next_in;
            var Na = l.input;
            var ha = l.avail_in;
            var ca = F.hold;
            var T = F.bits;
            var mb = ha;
            var ya = za;
            var H = Sb;
            a: for (;;)
              switch (F.mode) {
                case oa:
                  if (0 === F.wrap) {
                    F.mode = 13;
                    break;
                  }
                  for (; 16 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  if (2 & F.wrap && 35615 === ca) {
                    F.check = 0;
                    ja[0] = 255 & ca;
                    ja[1] = (ca >>> 8) & 255;
                    F.check = sa(F.check, ja, 2, 0);
                    T = ca = 0;
                    F.mode = 2;
                    break;
                  }
                  if (
                    ((F.flags = 0),
                    F.head && (F.head.done = !1),
                    !(1 & F.wrap) || (((255 & ca) << 8) + (ca >> 8)) % 31)
                  ) {
                    l.msg = 'incorrect header check';
                    F.mode = 30;
                    break;
                  }
                  if (8 !== (15 & ca)) {
                    l.msg = 'unknown compression method';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((ca >>>= 4), (T -= 4), (aa = (15 & ca) + 8), 0 === F.wbits)
                  )
                    F.wbits = aa;
                  else if (aa > F.wbits) {
                    l.msg = 'invalid window size';
                    F.mode = 30;
                    break;
                  }
                  F.dmax = 1 << aa;
                  l.adler = F.check = 1;
                  F.mode = 512 & ca ? 10 : 12;
                  T = ca = 0;
                  break;
                case 2:
                  for (; 16 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  if (((F.flags = ca), 8 !== (255 & F.flags))) {
                    l.msg = 'unknown compression method';
                    F.mode = 30;
                    break;
                  }
                  if (57344 & F.flags) {
                    l.msg = 'unknown header flags set';
                    F.mode = 30;
                    break;
                  }
                  F.head && (F.head.text = (ca >> 8) & 1);
                  512 & F.flags &&
                    ((ja[0] = 255 & ca),
                    (ja[1] = (ca >>> 8) & 255),
                    (F.check = sa(F.check, ja, 2, 0)));
                  T = ca = 0;
                  F.mode = 3;
                case 3:
                  for (; 32 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  F.head && (F.head.time = ca);
                  512 & F.flags &&
                    ((ja[0] = 255 & ca),
                    (ja[1] = (ca >>> 8) & 255),
                    (ja[2] = (ca >>> 16) & 255),
                    (ja[3] = (ca >>> 24) & 255),
                    (F.check = sa(F.check, ja, 4, 0)));
                  T = ca = 0;
                  F.mode = 4;
                case 4:
                  for (; 16 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  F.head && ((F.head.xflags = 255 & ca), (F.head.os = ca >> 8));
                  512 & F.flags &&
                    ((ja[0] = 255 & ca),
                    (ja[1] = (ca >>> 8) & 255),
                    (F.check = sa(F.check, ja, 2, 0)));
                  T = ca = 0;
                  F.mode = 5;
                case 5:
                  if (1024 & F.flags) {
                    for (; 16 > T; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    F.length = ca;
                    F.head && (F.head.extra_len = ca);
                    512 & F.flags &&
                      ((ja[0] = 255 & ca),
                      (ja[1] = (ca >>> 8) & 255),
                      (F.check = sa(F.check, ja, 2, 0)));
                    T = ca = 0;
                  } else F.head && (F.head.extra = null);
                  F.mode = 6;
                case 6:
                  if (
                    1024 & F.flags &&
                    ((v = F.length),
                    v > ha && (v = ha),
                    v &&
                      (F.head &&
                        ((aa = F.head.extra_len - F.length),
                        F.head.extra ||
                          (F.head.extra = Array(F.head.extra_len)),
                        G.arraySet(F.head.extra, Na, Ia, v, aa)),
                      512 & F.flags && (F.check = sa(F.check, Na, v, Ia)),
                      (ha -= v),
                      (Ia += v),
                      (F.length -= v)),
                    F.length)
                  )
                    break a;
                  F.length = 0;
                  F.mode = 7;
                case 7:
                  if (2048 & F.flags) {
                    if (0 === ha) break a;
                    v = 0;
                    do
                      ((aa = Na[Ia + v++]),
                        F.head &&
                          aa &&
                          65536 > F.length &&
                          (F.head.name += String.fromCharCode(aa)));
                    while (aa && v < ha);
                    if (
                      (512 & F.flags && (F.check = sa(F.check, Na, v, Ia)),
                      (ha -= v),
                      (Ia += v),
                      aa)
                    )
                      break a;
                  } else F.head && (F.head.name = null);
                  F.length = 0;
                  F.mode = 8;
                case 8:
                  if (4096 & F.flags) {
                    if (0 === ha) break a;
                    v = 0;
                    do
                      ((aa = Na[Ia + v++]),
                        F.head &&
                          aa &&
                          65536 > F.length &&
                          (F.head.comment += String.fromCharCode(aa)));
                    while (aa && v < ha);
                    if (
                      (512 & F.flags && (F.check = sa(F.check, Na, v, Ia)),
                      (ha -= v),
                      (Ia += v),
                      aa)
                    )
                      break a;
                  } else F.head && (F.head.comment = null);
                  F.mode = 9;
                case 9:
                  if (512 & F.flags) {
                    for (; 16 > T; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    if (ca !== (65535 & F.check)) {
                      l.msg = 'header crc mismatch';
                      F.mode = 30;
                      break;
                    }
                    T = ca = 0;
                  }
                  F.head &&
                    ((F.head.hcrc = (F.flags >> 9) & 1), (F.head.done = !0));
                  l.adler = F.check = 0;
                  F.mode = 12;
                  break;
                case 10:
                  for (; 32 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  l.adler = F.check = L(ca);
                  T = ca = 0;
                  F.mode = 11;
                case 11:
                  if (0 === F.havedict)
                    return (
                      (l.next_out = la),
                      (l.avail_out = za),
                      (l.next_in = Ia),
                      (l.avail_in = ha),
                      (F.hold = ca),
                      (F.bits = T),
                      2
                    );
                  l.adler = F.check = 1;
                  F.mode = 12;
                case 12:
                  if (5 === t || 6 === t) break a;
                case 13:
                  if (F.last) {
                    ca >>>= 7 & T;
                    T -= 7 & T;
                    F.mode = 27;
                    break;
                  }
                  for (; 3 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  switch (((F.last = 1 & ca), (ca >>>= 1), --T, 3 & ca)) {
                    case 0:
                      F.mode = 14;
                      break;
                    case 1:
                      var wb = F;
                      if (nb) {
                        r = new G.Buf32(512);
                        y = new G.Buf32(32);
                        for (B = 0; 144 > B; ) wb.lens[B++] = 8;
                        for (; 256 > B; ) wb.lens[B++] = 9;
                        for (; 280 > B; ) wb.lens[B++] = 7;
                        for (; 288 > B; ) wb.lens[B++] = 8;
                        Oa(1, wb.lens, 0, 288, r, 0, wb.work, { bits: 9 });
                        for (B = 0; 32 > B; ) wb.lens[B++] = 5;
                        Oa(2, wb.lens, 0, 32, y, 0, wb.work, { bits: 5 });
                        nb = !1;
                      }
                      wb.lencode = r;
                      wb.lenbits = 9;
                      wb.distcode = y;
                      wb.distbits = 5;
                      if (((F.mode = 20), 6 === t)) {
                        ca >>>= 2;
                        T -= 2;
                        break a;
                      }
                      break;
                    case 2:
                      F.mode = 17;
                      break;
                    case 3:
                      ((l.msg = 'invalid block type'), (F.mode = 30));
                  }
                  ca >>>= 2;
                  T -= 2;
                  break;
                case 14:
                  ca >>>= 7 & T;
                  for (T -= 7 & T; 32 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  if ((65535 & ca) !== ((ca >>> 16) ^ 65535)) {
                    l.msg = 'invalid stored block lengths';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((F.length = 65535 & ca),
                    (ca = 0),
                    (T = 0),
                    (F.mode = 15),
                    6 === t)
                  )
                    break a;
                case 15:
                  F.mode = 16;
                case 16:
                  if ((v = F.length)) {
                    if ((v > ha && (v = ha), v > za && (v = za), 0 === v))
                      break a;
                    G.arraySet(hb, Na, Ia, v, la);
                    ha -= v;
                    Ia += v;
                    za -= v;
                    la += v;
                    F.length -= v;
                    break;
                  }
                  F.mode = 12;
                  break;
                case 17:
                  for (; 14 > T; ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  if (
                    ((F.nlen = (31 & ca) + 257),
                    (ca >>>= 5),
                    (T -= 5),
                    (F.ndist = (31 & ca) + 1),
                    (ca >>>= 5),
                    (T -= 5),
                    (F.ncode = (15 & ca) + 4),
                    (ca >>>= 4),
                    (T -= 4),
                    286 < F.nlen || 30 < F.ndist)
                  ) {
                    l.msg = 'too many length or distance symbols';
                    F.mode = 30;
                    break;
                  }
                  F.have = 0;
                  F.mode = 18;
                case 18:
                  for (; F.have < F.ncode; ) {
                    for (; 3 > T; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    F.lens[N[F.have++]] = 7 & ca;
                    ca >>>= 3;
                    T -= 3;
                  }
                  for (; 19 > F.have; ) F.lens[N[F.have++]] = 0;
                  if (
                    ((F.lencode = F.lendyn),
                    (F.lenbits = 7),
                    (ea = { bits: F.lenbits }),
                    (H = Oa(0, F.lens, 0, 19, F.lencode, 0, F.work, ea)),
                    (F.lenbits = ea.bits),
                    H)
                  ) {
                    l.msg = 'invalid code lengths set';
                    F.mode = 30;
                    break;
                  }
                  F.have = 0;
                  F.mode = 19;
                case 19:
                  for (; F.have < F.nlen + F.ndist; ) {
                    for (
                      ;
                      (pa = F.lencode[ca & ((1 << F.lenbits) - 1)]),
                        (M = pa >>> 24),
                        (wb = 65535 & pa),
                        !(M <= T);

                    ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    if (16 > wb)
                      ((ca >>>= M), (T -= M), (F.lens[F.have++] = wb));
                    else {
                      if (16 === wb) {
                        for (B = M + 2; T < B; ) {
                          if (0 === ha) break a;
                          ha--;
                          ca += Na[Ia++] << T;
                          T += 8;
                        }
                        if (((ca >>>= M), (T -= M), 0 === F.have)) {
                          l.msg = 'invalid bit length repeat';
                          F.mode = 30;
                          break;
                        }
                        aa = F.lens[F.have - 1];
                        v = 3 + (3 & ca);
                        ca >>>= 2;
                        T -= 2;
                      } else if (17 === wb) {
                        for (B = M + 3; T < B; ) {
                          if (0 === ha) break a;
                          ha--;
                          ca += Na[Ia++] << T;
                          T += 8;
                        }
                        ca >>>= M;
                        T -= M;
                        aa = 0;
                        v = 3 + (7 & ca);
                        ca >>>= 3;
                        T -= 3;
                      } else {
                        for (B = M + 7; T < B; ) {
                          if (0 === ha) break a;
                          ha--;
                          ca += Na[Ia++] << T;
                          T += 8;
                        }
                        ca >>>= M;
                        T -= M;
                        aa = 0;
                        v = 11 + (127 & ca);
                        ca >>>= 7;
                        T -= 7;
                      }
                      if (F.have + v > F.nlen + F.ndist) {
                        l.msg = 'invalid bit length repeat';
                        F.mode = 30;
                        break;
                      }
                      for (; v--; ) F.lens[F.have++] = aa;
                    }
                  }
                  if (30 === F.mode) break;
                  if (0 === F.lens[256]) {
                    l.msg = 'invalid code -- missing end-of-block';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((F.lenbits = 9),
                    (ea = { bits: F.lenbits }),
                    (H = Oa(1, F.lens, 0, F.nlen, F.lencode, 0, F.work, ea)),
                    (F.lenbits = ea.bits),
                    H)
                  ) {
                    l.msg = 'invalid literal/lengths set';
                    F.mode = 30;
                    break;
                  }
                  if (
                    ((F.distbits = 6),
                    (F.distcode = F.distdyn),
                    (ea = { bits: F.distbits }),
                    (H = Oa(
                      2,
                      F.lens,
                      F.nlen,
                      F.ndist,
                      F.distcode,
                      0,
                      F.work,
                      ea,
                    )),
                    (F.distbits = ea.bits),
                    H)
                  ) {
                    l.msg = 'invalid distances set';
                    F.mode = 30;
                    break;
                  }
                  if (((F.mode = 20), 6 === t)) break a;
                case 20:
                  F.mode = 21;
                case 21:
                  if (6 <= ha && 258 <= za) {
                    l.next_out = la;
                    l.avail_out = za;
                    l.next_in = Ia;
                    l.avail_in = ha;
                    F.hold = ca;
                    F.bits = T;
                    ab(l, ya);
                    la = l.next_out;
                    hb = l.output;
                    za = l.avail_out;
                    Ia = l.next_in;
                    Na = l.input;
                    ha = l.avail_in;
                    ca = F.hold;
                    T = F.bits;
                    12 === F.mode && (F.back = -1);
                    break;
                  }
                  for (
                    F.back = 0;
                    (pa = F.lencode[ca & ((1 << F.lenbits) - 1)]),
                      (M = pa >>> 24),
                      (B = (pa >>> 16) & 255),
                      (wb = 65535 & pa),
                      !(M <= T);

                  ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  if (B && 0 === (240 & B)) {
                    var x = M;
                    var O = B;
                    for (
                      Y = wb;
                      (pa = F.lencode[Y + ((ca & ((1 << (x + O)) - 1)) >> x)]),
                        (M = pa >>> 24),
                        (B = (pa >>> 16) & 255),
                        (wb = 65535 & pa),
                        !(x + M <= T);

                    ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    ca >>>= x;
                    T -= x;
                    F.back += x;
                  }
                  if (
                    ((ca >>>= M),
                    (T -= M),
                    (F.back += M),
                    (F.length = wb),
                    0 === B)
                  ) {
                    F.mode = 26;
                    break;
                  }
                  if (32 & B) {
                    F.back = -1;
                    F.mode = 12;
                    break;
                  }
                  if (64 & B) {
                    l.msg = 'invalid literal/length code';
                    F.mode = 30;
                    break;
                  }
                  F.extra = 15 & B;
                  F.mode = 22;
                case 22:
                  if (F.extra) {
                    for (B = F.extra; T < B; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    F.length += ca & ((1 << F.extra) - 1);
                    ca >>>= F.extra;
                    T -= F.extra;
                    F.back += F.extra;
                  }
                  F.was = F.length;
                  F.mode = 23;
                case 23:
                  for (
                    ;
                    (pa = F.distcode[ca & ((1 << F.distbits) - 1)]),
                      (M = pa >>> 24),
                      (B = (pa >>> 16) & 255),
                      (wb = 65535 & pa),
                      !(M <= T);

                  ) {
                    if (0 === ha) break a;
                    ha--;
                    ca += Na[Ia++] << T;
                    T += 8;
                  }
                  if (0 === (240 & B)) {
                    x = M;
                    O = B;
                    for (
                      Y = wb;
                      (pa = F.distcode[Y + ((ca & ((1 << (x + O)) - 1)) >> x)]),
                        (M = pa >>> 24),
                        (B = (pa >>> 16) & 255),
                        (wb = 65535 & pa),
                        !(x + M <= T);

                    ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    ca >>>= x;
                    T -= x;
                    F.back += x;
                  }
                  if (((ca >>>= M), (T -= M), (F.back += M), 64 & B)) {
                    l.msg = 'invalid distance code';
                    F.mode = 30;
                    break;
                  }
                  F.offset = wb;
                  F.extra = 15 & B;
                  F.mode = 24;
                case 24:
                  if (F.extra) {
                    for (B = F.extra; T < B; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    F.offset += ca & ((1 << F.extra) - 1);
                    ca >>>= F.extra;
                    T -= F.extra;
                    F.back += F.extra;
                  }
                  if (F.offset > F.dmax) {
                    l.msg = 'invalid distance too far back';
                    F.mode = 30;
                    break;
                  }
                  F.mode = 25;
                case 25:
                  if (0 === za) break a;
                  if (((v = ya - za), F.offset > v)) {
                    if (((v = F.offset - v), v > F.whave && F.sane)) {
                      l.msg = 'invalid distance too far back';
                      F.mode = 30;
                      break;
                    }
                    v > F.wnext
                      ? ((v -= F.wnext), (E = F.wsize - v))
                      : (E = F.wnext - v);
                    v > F.length && (v = F.length);
                    B = F.window;
                  } else ((B = hb), (E = la - F.offset), (v = F.length));
                  v > za && (v = za);
                  za -= v;
                  F.length -= v;
                  do hb[la++] = B[E++];
                  while (--v);
                  0 === F.length && (F.mode = 21);
                  break;
                case 26:
                  if (0 === za) break a;
                  hb[la++] = F.length;
                  za--;
                  F.mode = 21;
                  break;
                case 27:
                  if (F.wrap) {
                    for (; 32 > T; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca |= Na[Ia++] << T;
                      T += 8;
                    }
                    if (
                      ((ya -= za),
                      (l.total_out += ya),
                      (F.total += ya),
                      ya &&
                        (l.adler = F.check =
                          F.flags
                            ? sa(F.check, hb, ya, la - ya)
                            : $a(F.check, hb, ya, la - ya)),
                      (ya = za),
                      (F.flags ? ca : L(ca)) !== F.check)
                    ) {
                      l.msg = 'incorrect data check';
                      F.mode = 30;
                      break;
                    }
                    T = ca = 0;
                  }
                  F.mode = 28;
                case 28:
                  if (F.wrap && F.flags) {
                    for (; 32 > T; ) {
                      if (0 === ha) break a;
                      ha--;
                      ca += Na[Ia++] << T;
                      T += 8;
                    }
                    if (ca !== (4294967295 & F.total)) {
                      l.msg = 'incorrect length check';
                      F.mode = 30;
                      break;
                    }
                    T = ca = 0;
                  }
                  F.mode = 29;
                case 29:
                  H = 1;
                  break a;
                case 30:
                  H = -3;
                  break a;
                case 31:
                  return -4;
                default:
                  return ob;
              }
            return (
              (l.next_out = la),
              (l.avail_out = za),
              (l.next_in = Ia),
              (l.avail_in = ha),
              (F.hold = ca),
              (F.bits = T),
              (F.wsize ||
                (ya !== l.avail_out &&
                  30 > F.mode &&
                  (27 > F.mode || 4 !== t))) &&
              g(l, l.output, l.next_out, ya - l.avail_out)
                ? ((F.mode = 31), -4)
                : ((mb -= l.avail_in),
                  (ya -= l.avail_out),
                  (l.total_in += mb),
                  (l.total_out += ya),
                  (F.total += ya),
                  F.wrap &&
                    ya &&
                    (l.adler = F.check =
                      F.flags
                        ? sa(F.check, hb, ya, l.next_out - ya)
                        : $a(F.check, hb, ya, l.next_out - ya)),
                  (l.data_type =
                    F.bits +
                    (F.last ? 64 : 0) +
                    (12 === F.mode ? 128 : 0) +
                    (20 === F.mode || 15 === F.mode ? 256 : 0)),
                  ((0 === mb && 0 === ya) || 4 === t) && H === Sb && (H = -5),
                  H)
            );
          };
          B.inflateEnd = function (g) {
            if (!g || !g.state) return ob;
            var l = g.state;
            return (l.window && (l.window = null), (g.state = null), Sb);
          };
          B.inflateGetHeader = function (g, l) {
            var r;
            return g && g.state
              ? ((r = g.state),
                0 === (2 & r.wrap) ? ob : ((r.head = l), (l.done = !1), Sb))
              : ob;
          };
          B.inflateSetDictionary = function (l, r) {
            var t,
              v,
              B = r.length;
            return l && l.state
              ? ((t = l.state),
                0 !== t.wrap && 11 !== t.mode
                  ? ob
                  : 11 === t.mode &&
                      ((v = 1), (v = $a(v, r, B, 0)), v !== t.check)
                    ? -3
                    : g(l, r, B, B)
                      ? ((t.mode = 31), -4)
                      : ((t.havedict = 1), Sb))
              : ob;
          };
          B.inflateInfo = 'pako inflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './inffast': 10,
          './inftrees': 12,
        },
      ],
      12: [
        function (t, E, B) {
          var L = t('../utils/common'),
            M = [
              3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43,
              51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
            ],
            aa = [
              16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
              19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
            ],
            v = [
              1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257,
              385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289,
              16385, 24577, 0, 0,
            ],
            ea = [
              16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
              23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
            ];
          E.exports = function (l, g, r, t, B, E, sa, ab) {
            var y,
              G,
              $a,
              oa,
              mb,
              la,
              nb = ab.bits,
              Y,
              pa,
              bb,
              S,
              xa,
              lb = 0,
              ka,
              Va = null,
              sb = 0,
              rc = new L.Buf16(16);
            var ja = new L.Buf16(16);
            var N = null,
              F = 0;
            for (Y = 0; 15 >= Y; Y++) rc[Y] = 0;
            for (pa = 0; pa < t; pa++) rc[g[r + pa]]++;
            var Ab = nb;
            for (bb = 15; 1 <= bb && 0 === rc[bb]; bb--);
            if ((Ab > bb && (Ab = bb), 0 === bb))
              return (
                (B[E++] = 20971520),
                (B[E++] = 20971520),
                (ab.bits = 1),
                0
              );
            for (nb = 1; nb < bb && 0 === rc[nb]; nb++);
            Ab < nb && (Ab = nb);
            for (Y = y = 1; 15 >= Y; Y++)
              if (((y <<= 1), (y -= rc[Y]), 0 > y)) return -1;
            if (0 < y && (0 === l || 1 !== bb)) return -1;
            ja[1] = 0;
            for (Y = 1; 15 > Y; Y++) ja[Y + 1] = ja[Y] + rc[Y];
            for (pa = 0; pa < t; pa++)
              0 !== g[r + pa] && (sa[ja[g[r + pa]]++] = pa);
            if (
              (0 === l
                ? ((Va = N = sa), (oa = 19))
                : 1 === l
                  ? ((Va = M), (sb -= 257), (N = aa), (F -= 257), (oa = 256))
                  : ((Va = v), (N = ea), (oa = -1)),
              (ka = 0),
              (pa = 0),
              (Y = nb),
              (ja = E),
              (S = Ab),
              (xa = 0),
              ($a = -1),
              (lb = 1 << Ab),
              (t = lb - 1),
              (1 === l && 852 < lb) || (2 === l && 592 < lb))
            )
              return 1;
            for (var hb = 0; ; ) {
              hb++;
              var za = Y - xa;
              sa[pa] < oa
                ? ((mb = 0), (la = sa[pa]))
                : sa[pa] > oa
                  ? ((mb = N[F + sa[pa]]), (la = Va[sb + sa[pa]]))
                  : ((mb = 96), (la = 0));
              y = 1 << (Y - xa);
              nb = G = 1 << S;
              do
                ((G -= y),
                  (B[ja + (ka >> xa) + G] = (za << 24) | (mb << 16) | la | 0));
              while (0 !== G);
              for (y = 1 << (Y - 1); ka & y; ) y >>= 1;
              if (
                (0 !== y ? ((ka &= y - 1), (ka += y)) : (ka = 0),
                pa++,
                0 === --rc[Y])
              ) {
                if (Y === bb) break;
                Y = g[r + sa[pa]];
              }
              if (Y > Ab && (ka & t) !== $a) {
                0 === xa && (xa = Ab);
                ja += nb;
                S = Y - xa;
                for (
                  y = 1 << S;
                  S + xa < bb && ((y -= rc[S + xa]), !(0 >= y));

                )
                  (S++, (y <<= 1));
                if (
                  ((lb += 1 << S),
                  (1 === l && 852 < lb) || (2 === l && 592 < lb))
                )
                  return 1;
                $a = ka & t;
                B[$a] = (Ab << 24) | (S << 16) | (ja - E) | 0;
              }
            }
            return (
              0 !== ka && (B[ja + ka] = ((Y - xa) << 24) | 4194304),
              (ab.bits = Ab),
              0
            );
          };
        },
        { '../utils/common': 3 },
      ],
      13: [
        function (t, E, B) {
          E.exports = {
            2: 'need dictionary',
            1: 'stream end',
            0: '',
            '-1': 'file error',
            '-2': 'stream error',
            '-3': 'data error',
            '-4': 'insufficient memory',
            '-5': 'buffer error',
            '-6': 'incompatible version',
          };
        },
        {},
      ],
      14: [
        function (t, E, B) {
          function L(g) {
            for (var l = g.length; 0 <= --l; ) g[l] = 0;
          }
          function M(g, l, r, t, v) {
            this.static_tree = g;
            this.extra_bits = l;
            this.extra_base = r;
            this.elems = t;
            this.max_length = v;
            this.has_stree = g && g.length;
          }
          function aa(g, l) {
            this.dyn_tree = g;
            this.max_code = 0;
            this.stat_desc = l;
          }
          function v(g, l) {
            g.pending_buf[g.pending++] = 255 & l;
            g.pending_buf[g.pending++] = (l >>> 8) & 255;
          }
          function ea(g, l, r) {
            g.bi_valid > sb - r
              ? ((g.bi_buf |= (l << g.bi_valid) & 65535),
                v(g, g.bi_buf),
                (g.bi_buf = l >> (sb - g.bi_valid)),
                (g.bi_valid += r - sb))
              : ((g.bi_buf |= (l << g.bi_valid) & 65535), (g.bi_valid += r));
          }
          function l(g, l, r) {
            ea(g, r[2 * l], r[2 * l + 1]);
          }
          function g(g, l) {
            var r = 0;
            do ((r |= 1 & g), (g >>>= 1), (r <<= 1));
            while (0 < --l);
            return r >>> 1;
          }
          function r(l, r, t) {
            var w,
              v = Array(Va + 1),
              x = 0;
            for (w = 1; w <= Va; w++) v[w] = x = (x + t[w - 1]) << 1;
            for (t = 0; t <= r; t++)
              ((w = l[2 * t + 1]), 0 !== w && (l[2 * t] = g(v[w]++, w)));
          }
          function y(g) {
            var l;
            for (l = 0; l < S; l++) g.dyn_ltree[2 * l] = 0;
            for (l = 0; l < xa; l++) g.dyn_dtree[2 * l] = 0;
            for (l = 0; l < lb; l++) g.bl_tree[2 * l] = 0;
            g.dyn_ltree[2 * rc] = 1;
            g.opt_len = g.static_len = 0;
            g.last_lit = g.matches = 0;
          }
          function G(g) {
            8 < g.bi_valid
              ? v(g, g.bi_buf)
              : 0 < g.bi_valid && (g.pending_buf[g.pending++] = g.bi_buf);
            g.bi_buf = 0;
            g.bi_valid = 0;
          }
          function $a(g, l, r, t) {
            var w = 2 * l,
              v = 2 * r;
            return g[w] < g[v] || (g[w] === g[v] && t[l] <= t[r]);
          }
          function sa(g, l, r) {
            for (
              var t = g.heap[r], w = r << 1;
              w <= g.heap_len &&
              (w < g.heap_len &&
                $a(l, g.heap[w + 1], g.heap[w], g.depth) &&
                w++,
              !$a(l, t, g.heap[w], g.depth));

            )
              ((g.heap[r] = g.heap[w]), (r = w), (w <<= 1));
            g.heap[r] = t;
          }
          function ab(g, r, t) {
            var w,
              v,
              x = 0;
            if (0 !== g.last_lit) {
              do {
                var J =
                  (g.pending_buf[g.d_buf + 2 * x] << 8) |
                  g.pending_buf[g.d_buf + 2 * x + 1];
                var y = g.pending_buf[g.l_buf + x];
                x++;
                0 === J
                  ? l(g, y, r)
                  : ((w = T[y]),
                    l(g, w + bb + 1, r),
                    (v = Ab[w]),
                    0 !== v && ((y -= cd[w]), ea(g, y, v)),
                    J--,
                    (w = 256 > J ? ca[J] : ca[256 + (J >>> 7)]),
                    l(g, w, t),
                    (v = hb[w]),
                    0 !== v && ((J -= ya[w]), ea(g, J, v)));
              } while (x < g.last_lit);
            }
            l(g, rc, r);
          }
          function Oa(g, l) {
            var t,
              w = l.dyn_tree;
            var v = l.stat_desc.static_tree;
            var x = l.stat_desc.has_stree,
              y = l.stat_desc.elems,
              B = -1;
            g.heap_len = 0;
            g.heap_max = ka;
            for (t = 0; t < y; t++)
              0 !== w[2 * t]
                ? ((g.heap[++g.heap_len] = B = t), (g.depth[t] = 0))
                : (w[2 * t + 1] = 0);
            for (; 2 > g.heap_len; ) {
              var J = (g.heap[++g.heap_len] = 2 > B ? ++B : 0);
              w[2 * J] = 1;
              g.depth[J] = 0;
              g.opt_len--;
              x && (g.static_len -= v[2 * J + 1]);
            }
            l.max_code = B;
            for (t = g.heap_len >> 1; 1 <= t; t--) sa(g, w, t);
            J = y;
            do
              ((t = g.heap[1]),
                (g.heap[1] = g.heap[g.heap_len--]),
                sa(g, w, 1),
                (v = g.heap[1]),
                (g.heap[--g.heap_max] = t),
                (g.heap[--g.heap_max] = v),
                (w[2 * J] = w[2 * t] + w[2 * v]),
                (g.depth[J] =
                  (g.depth[t] >= g.depth[v] ? g.depth[t] : g.depth[v]) + 1),
                (w[2 * t + 1] = w[2 * v + 1] = J),
                (g.heap[1] = J++),
                sa(g, w, 1));
            while (2 <= g.heap_len);
            g.heap[--g.heap_max] = g.heap[1];
            var F, E;
            t = l.dyn_tree;
            J = l.max_code;
            y = l.stat_desc.static_tree;
            var G = l.stat_desc.has_stree,
              H = l.stat_desc.extra_bits,
              L = l.stat_desc.extra_base,
              M = l.stat_desc.max_length,
              N = 0;
            for (x = 0; x <= Va; x++) g.bl_count[x] = 0;
            t[2 * g.heap[g.heap_max] + 1] = 0;
            for (l = g.heap_max + 1; l < ka; l++)
              ((v = g.heap[l]),
                (x = t[2 * t[2 * v + 1] + 1] + 1),
                x > M && ((x = M), N++),
                (t[2 * v + 1] = x),
                v > J ||
                  (g.bl_count[x]++,
                  (F = 0),
                  v >= L && (F = H[v - L]),
                  (E = t[2 * v]),
                  (g.opt_len += E * (x + F)),
                  G && (g.static_len += E * (y[2 * v + 1] + F))));
            if (0 !== N) {
              do {
                for (x = M - 1; 0 === g.bl_count[x]; ) x--;
                g.bl_count[x]--;
                g.bl_count[x + 1] += 2;
                g.bl_count[M]--;
                N -= 2;
              } while (0 < N);
              for (x = M; 0 !== x; x--)
                for (v = g.bl_count[x]; 0 !== v; )
                  ((F = g.heap[--l]),
                    F > J ||
                      (t[2 * F + 1] !== x &&
                        ((g.opt_len += (x - t[2 * F + 1]) * t[2 * F]),
                        (t[2 * F + 1] = x)),
                      v--));
            }
            r(w, B, g.bl_count);
          }
          function Sb(g, l, r) {
            var t,
              w = -1,
              v = l[1],
              x = 0,
              y = 7,
              B = 4;
            0 === v && ((y = 138), (B = 3));
            l[2 * (r + 1) + 1] = 65535;
            for (t = 0; t <= r; t++) {
              var J = v;
              v = l[2 * (t + 1) + 1];
              (++x < y && J === v) ||
                (x < B
                  ? (g.bl_tree[2 * J] += x)
                  : 0 !== J
                    ? (J !== w && g.bl_tree[2 * J]++, g.bl_tree[2 * ja]++)
                    : 10 >= x
                      ? g.bl_tree[2 * N]++
                      : g.bl_tree[2 * F]++,
                (x = 0),
                (w = J),
                0 === v
                  ? ((y = 138), (B = 3))
                  : J === v
                    ? ((y = 6), (B = 3))
                    : ((y = 7), (B = 4)));
            }
          }
          function ob(g, r, t) {
            var w,
              v,
              x = -1,
              y = r[1],
              B = 0,
              J = 7,
              E = 4;
            0 === y && ((J = 138), (E = 3));
            for (w = 0; w <= t; w++)
              if (((v = y), (y = r[2 * (w + 1) + 1]), !(++B < J && v === y))) {
                if (B < E) {
                  do l(g, v, g.bl_tree);
                  while (0 !== --B);
                } else
                  0 !== v
                    ? (v !== x && (l(g, v, g.bl_tree), B--),
                      l(g, ja, g.bl_tree),
                      ea(g, B - 3, 2))
                    : 10 >= B
                      ? (l(g, N, g.bl_tree), ea(g, B - 3, 3))
                      : (l(g, F, g.bl_tree), ea(g, B - 11, 7));
                B = 0;
                x = v;
                0 === y
                  ? ((J = 138), (E = 3))
                  : v === y
                    ? ((J = 6), (E = 3))
                    : ((J = 7), (E = 4));
              }
          }
          function oa(g) {
            var l,
              r = 4093624447;
            for (l = 0; 31 >= l; l++, r >>>= 1)
              if (1 & r && 0 !== g.dyn_ltree[2 * l]) return nb;
            if (
              0 !== g.dyn_ltree[18] ||
              0 !== g.dyn_ltree[20] ||
              0 !== g.dyn_ltree[26]
            )
              return Y;
            for (l = 32; l < bb; l++) if (0 !== g.dyn_ltree[2 * l]) return Y;
            return nb;
          }
          function mb(g, l, r, t) {
            ea(g, (pa << 1) + (t ? 1 : 0), 3);
            G(g);
            v(g, r);
            v(g, ~r);
            la.arraySet(g.pending_buf, g.window, l, r, g.pending);
            g.pending += r;
          }
          var la = t('../utils/common'),
            nb = 0,
            Y = 1,
            pa = 0,
            bb = 256,
            S = bb + 1 + 29,
            xa = 30,
            lb = 19,
            ka = 2 * S + 1,
            Va = 15,
            sb = 16,
            rc = 256,
            ja = 16,
            N = 17,
            F = 18,
            Ab = [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ],
            hb = [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ],
            za = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
            Ia = [
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ],
            Na = Array(2 * (S + 2));
          L(Na);
          var ha = Array(2 * xa);
          L(ha);
          var ca = Array(512);
          L(ca);
          var T = Array(256);
          L(T);
          var cd = Array(29);
          L(cd);
          var ya = Array(xa);
          L(ya);
          var H,
            wb,
            x,
            O = !1;
          B._tr_init = function (l) {
            if (!O) {
              var t,
                v,
                B,
                F = Array(Va + 1);
              for (B = v = 0; 28 > B; B++)
                for (cd[B] = v, t = 0; t < 1 << Ab[B]; t++) T[v++] = B;
              T[v - 1] = B;
              for (B = v = 0; 16 > B; B++)
                for (ya[B] = v, t = 0; t < 1 << hb[B]; t++) ca[v++] = B;
              for (v >>= 7; B < xa; B++)
                for (ya[B] = v << 7, t = 0; t < 1 << (hb[B] - 7); t++)
                  ca[256 + v++] = B;
              for (t = 0; t <= Va; t++) F[t] = 0;
              for (t = 0; 143 >= t; ) ((Na[2 * t + 1] = 8), t++, F[8]++);
              for (; 255 >= t; ) ((Na[2 * t + 1] = 9), t++, F[9]++);
              for (; 279 >= t; ) ((Na[2 * t + 1] = 7), t++, F[7]++);
              for (; 287 >= t; ) ((Na[2 * t + 1] = 8), t++, F[8]++);
              r(Na, S + 1, F);
              for (t = 0; t < xa; t++)
                ((ha[2 * t + 1] = 5), (ha[2 * t] = g(t, 5)));
              H = new M(Na, Ab, bb + 1, S, Va);
              wb = new M(ha, hb, 0, xa, Va);
              x = new M([], za, 0, lb, 7);
              O = !0;
            }
            l.l_desc = new aa(l.dyn_ltree, H);
            l.d_desc = new aa(l.dyn_dtree, wb);
            l.bl_desc = new aa(l.bl_tree, x);
            l.bi_buf = 0;
            l.bi_valid = 0;
            y(l);
          };
          B._tr_stored_block = mb;
          B._tr_flush_block = function (g, l, r, t) {
            var w = 0;
            if (0 < g.level) {
              2 === g.strm.data_type && (g.strm.data_type = oa(g));
              Oa(g, g.l_desc);
              Oa(g, g.d_desc);
              Sb(g, g.dyn_ltree, g.l_desc.max_code);
              Sb(g, g.dyn_dtree, g.d_desc.max_code);
              Oa(g, g.bl_desc);
              for (w = lb - 1; 3 <= w && 0 === g.bl_tree[2 * Ia[w] + 1]; w--);
              w = ((g.opt_len += 3 * (w + 1) + 14), w);
              var v = (g.opt_len + 3 + 7) >>> 3;
              var x = (g.static_len + 3 + 7) >>> 3;
              x <= v && (v = x);
            } else v = x = r + 5;
            if (r + 4 <= v && -1 !== l) mb(g, l, r, t);
            else if (4 === g.strategy || x === v)
              (ea(g, 2 + (t ? 1 : 0), 3), ab(g, Na, ha));
            else {
              ea(g, 4 + (t ? 1 : 0), 3);
              l = g.l_desc.max_code + 1;
              r = g.d_desc.max_code + 1;
              w += 1;
              ea(g, l - 257, 5);
              ea(g, r - 1, 5);
              ea(g, w - 4, 4);
              for (v = 0; v < w; v++) ea(g, g.bl_tree[2 * Ia[v] + 1], 3);
              ob(g, g.dyn_ltree, l - 1);
              ob(g, g.dyn_dtree, r - 1);
              ab(g, g.dyn_ltree, g.dyn_dtree);
            }
            y(g);
            t && G(g);
          };
          B._tr_tally = function (g, l, r) {
            return (
              (g.pending_buf[g.d_buf + 2 * g.last_lit] = (l >>> 8) & 255),
              (g.pending_buf[g.d_buf + 2 * g.last_lit + 1] = 255 & l),
              (g.pending_buf[g.l_buf + g.last_lit] = 255 & r),
              g.last_lit++,
              0 === l
                ? g.dyn_ltree[2 * r]++
                : (g.matches++,
                  l--,
                  g.dyn_ltree[2 * (T[r] + bb + 1)]++,
                  g.dyn_dtree[2 * (256 > l ? ca[l] : ca[256 + (l >>> 7)])]++),
              g.last_lit === g.lit_bufsize - 1
            );
          };
          B._tr_align = function (g) {
            ea(g, 2, 3);
            l(g, rc, Na);
            16 === g.bi_valid
              ? (v(g, g.bi_buf), (g.bi_buf = 0), (g.bi_valid = 0))
              : 8 <= g.bi_valid &&
                ((g.pending_buf[g.pending++] = 255 & g.bi_buf),
                (g.bi_buf >>= 8),
                (g.bi_valid -= 8));
          };
        },
        { '../utils/common': 3 },
      ],
      15: [
        function (t, E, B) {
          E.exports = function () {
            this.input = null;
            this.total_in = this.avail_in = this.next_in = 0;
            this.output = null;
            this.total_out = this.avail_out = this.next_out = 0;
            this.msg = '';
            this.state = null;
            this.data_type = 2;
            this.adler = 0;
          };
        },
        {},
      ],
      '/': [
        function (t, E, B) {
          B = t('./lib/utils/common').assign;
          var L = t('./lib/deflate'),
            M = t('./lib/inflate');
          t = t('./lib/zlib/constants');
          var aa = {};
          B(aa, L, M, t);
          E.exports = aa;
        },
        {
          './lib/deflate': 1,
          './lib/inflate': 2,
          './lib/utils/common': 3,
          './lib/zlib/constants': 6,
        },
      ],
    },
    {},
    [],
  )('/');
});
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var e = (function () {
    function A(g) {
      var l = [];
      return ((l[g - 1] = void 0), l);
    }
    function t(g, l) {
      return L(g[0] + l[0], g[1] + l[1]);
    }
    function E(g, l) {
      var q = aa(g) & aa(l),
        u,
        r;
      return (
        (u =
          (~~Math.max(Math.min(g[1] / Ib, 2147483647), -2147483648) &
            ~~Math.max(Math.min(l[1] / Ib, 2147483647), -2147483648)) *
          Ib),
        (r = q),
        0 > q && (r += Ib),
        [r, u]
      );
    }
    function B(g, l) {
      var q, u;
      return g[0] == l[0] && g[1] == l[1]
        ? 0
        : ((q = 0 > g[1]),
          (u = 0 > l[1]),
          q && !u
            ? -1
            : !q && u
              ? 1
              : 0 > L(g[0] - l[0], g[1] - l[1])[1]
                ? -1
                : 1);
    }
    function L(g, l) {
      l %= 1.8446744073709552e19;
      g %= 1.8446744073709552e19;
      var q = l % Ib;
      var u = Math.floor(g / Ib) * Ib;
      l = l - q + u;
      for (g = g - u + q; 0 > g; ) ((g += Ib), (l -= Ib));
      for (; 4294967295 < g; ) ((g -= Ib), (l += Ib));
      for (l %= 1.8446744073709552e19; 0x7fffffff00000000 < l; )
        l -= 1.8446744073709552e19;
      for (; -9223372036854775808 > l; ) l += 1.8446744073709552e19;
      return [g, l];
    }
    function M(g) {
      return 0 <= g ? [g, 0] : [g + Ib, -Ib];
    }
    function aa(g) {
      return 2147483648 <= g[0]
        ? ~~Math.max(Math.min(g[0] - Ib, 2147483647), -2147483648)
        : ~~Math.max(Math.min(g[0], 2147483647), -2147483648);
    }
    function v(g) {
      return 30 >= g ? 1 << g : v(30) * v(g - 30);
    }
    function ea(g, l) {
      var q, u, r, t;
      if (((l &= 63), g[0] == ff[0] && g[1] == ff[1])) return l ? ta : g;
      if (0 > g[1]) throw Error('Neg');
      return (
        (t = v(l)),
        (u = (g[1] * t) % 1.8446744073709552e19),
        (r = g[0] * t),
        (q = r - (r % Ib)),
        (u += q),
        (r -= q),
        0x7fffffffffffffff <= u && (u -= 1.8446744073709552e19),
        [r, u]
      );
    }
    function l(g, l) {
      var q;
      return ((l &= 63), (q = v(l)), L(Math.floor(g[0] / q), g[1] / q));
    }
    function g(g, l) {
      return ((g.Mc = l), (g.Lc = 0), (g.Yb = l.length), g);
    }
    function r(g) {
      return g.Lc >= g.Yb ? -1 : 255 & g.Mc[g.Lc++];
    }
    function y(g) {
      return ((g.Mc = A(32)), (g.Yb = 0), g);
    }
    function G(g) {
      var l = g.Mc;
      return ((l.length = g.Yb), l);
    }
    function $a(g, l, r, t, v) {
      for (var q = 0; v > q; ++q) r[t + q] = g[l + q];
    }
    function sa(q, u, r) {
      q.Nb = y({});
      var t = g({}, u),
        v = q.Nb,
        w = M(u.length);
      if (0 > B(w, dd)) throw Error('invalid length ' + w);
      q.Tb = w;
      u = {};
      var D;
      u.v = A(4);
      u.a = [];
      u.d = {};
      u.C = A(192);
      u.bb = A(12);
      u.hb = A(12);
      u.Ub = A(12);
      u.vc = A(12);
      u._ = A(192);
      u.K = [];
      u.Sb = A(114);
      u.S = Cb({}, 4);
      u.$ = H({});
      u.i = H({});
      u.A = {};
      u.m = [];
      u.P = [];
      u.lb = [];
      u.nc = A(16);
      u.x = A(4);
      u.Q = A(4);
      u.Xb = [ta];
      u.uc = [ta];
      u.Kc = [0];
      u.fc = A(5);
      u.yc = A(128);
      u.vb = 0;
      u.X = 1;
      u.D = 0;
      u.Hb = -1;
      for (D = u.mb = 0; 4096 > D; ++D) u.a[D] = {};
      for (D = 0; 4 > D; ++D) u.K[D] = Cb({}, 6);
      D = 1 << r.s;
      u.ab = D;
      for (var x = 0; D > 1 << x; ++x);
      u.$b = 2 * x;
      u.n = r.f;
      D = u.X;
      u.X = r.m;
      u.b && D != u.X && ((u.wb = -1), (u.b = null));
      u.eb = 0;
      u.fb = 3;
      u.Y = 2;
      u.y = 3;
      u.Gc = void 0 === e.disableEndMark;
      u.fc[0] = ((9 * (5 * u.Y + u.eb) + u.fb) << 24) >> 24;
      for (r = 0; 4 > r; ++r) u.fc[1 + r] = ((u.ab >> (8 * r)) << 24) >> 24;
      $a(u.fc, 0, v.Mc, v.Yb, 5);
      v.Yb += 5;
      for (r = 0; 64 > r; r += 8)
        ((D = 255 & aa(l(w, r))), (v.Mc[v.Yb++] = (D << 24) >> 24));
      u.W = 0;
      u.oc = t;
      u.pc = 0;
      u.b ||
        ((t = {}),
        (w = 4),
        u.X || (w = 2),
        (t.qb = 2 < w),
        t.qb
          ? ((t.w = 0), (t.xb = 4), (t.R = 66560))
          : ((t.w = 2), (t.xb = 3), (t.R = 0)),
        (u.b = t));
      t = u.A;
      w = u.eb;
      r = u.fb;
      if (null == t.V || t.u != r || t.I != w)
        for (
          t.I = w,
            t.qc = (1 << w) - 1,
            t.u = r,
            r = 1 << (t.u + t.I),
            t.V = A(r),
            w = 0;
          r > w;
          ++w
        ) {
          D = t.V;
          x = w;
          var E = {};
          E = ((E.tb = A(768)), E);
          D[x] = E;
        }
      if (u.ab != u.wb || u.Hb != u.n)
        ((t = u.b),
          (w = u.ab),
          (r = u.n),
          1073741567 > w &&
            ((t.Fc = 16 + (r >> 1)),
            (x = w + 4096),
            (D = r + 274),
            (t.Bc = x),
            (t._b = D),
            (x = x + D + (~~((w + 4096 + r + 274) / 2) + 256)),
            (null == t.c || t.Kb != x) &&
              ((t.c = null), (t.Kb = x), (t.c = A(t.Kb))),
            (t.H = t.Kb - D),
            (t.ob = r),
            (r = w + 1),
            t.p != r && (t.L = A(2 * (t.p = r))),
            (r = 65536),
            t.qb &&
              ((r = w - 1),
              (r |= r >> 1),
              (r |= r >> 2),
              (r |= r >> 4),
              (r |= r >> 8),
              (r >>= 1),
              (r |= 65535),
              16777216 < r && (r >>= 1),
              (t.Ec = r),
              ++r,
              (r += t.R)),
            r != t.rc && (t.ub = A((t.rc = r)))),
          (u.wb = u.ab),
          (u.Hb = u.n));
      u.d.Ab = v;
      u.l = 0;
      for (v = u.J = 0; 4 > v; ++v) u.v[v] = 0;
      v = u.d;
      v.mc = ta;
      v.xc = ta;
      v.E = -1;
      v.Jb = 1;
      v.Oc = 0;
      ib(u.C);
      ib(u._);
      ib(u.bb);
      ib(u.hb);
      ib(u.Ub);
      ib(u.vc);
      ib(u.Sb);
      v = u.A;
      w = 1 << (v.u + v.I);
      for (t = 0; w > t; ++t) ib(v.V[t].tb);
      for (v = 0; 4 > v; ++v) ib(u.K[v].G);
      T(u.$, 1 << u.Y);
      T(u.i, 1 << u.Y);
      ib(u.S.G);
      u.N = 0;
      u.jb = 0;
      u.q = 0;
      u.s = 0;
      F(u);
      N(u);
      u.$.rb = u.n + 1 - 2;
      wb(u.$, 1 << u.Y);
      u.i.rb = u.n + 1 - 2;
      wb(u.i, 1 << u.Y);
      void (u.g = ta);
      v = {};
      u = ((v.cb = u), (v.Z = null), (v.zc = 1), v);
      q.yb = u;
      return q;
    }
    function ab(l, u) {
      l.Nb = y({});
      var q = g({}, u),
        t = l.Nb,
        v,
        x,
        B,
        F = '',
        E = [];
      for (v = 0; 5 > v; ++v) {
        if (((x = r(q)), -1 == x)) throw Error('truncated input');
        E[v] = (x << 24) >> 24;
      }
      u = { B: {}, e: {} };
      u.Gb = A(192);
      u.Zb = A(12);
      u.Cb = A(12);
      u.Db = A(12);
      u.Eb = A(12);
      u.pb = A(192);
      u.kb = A(4);
      u.kc = A(114);
      u.Fb = w({}, 4);
      u.Rb = sb({});
      u.sb = sb({});
      u.gb = {};
      for (v = 0; 4 > v; ++v) u.kb[v] = w({}, 6);
      var G;
      if (5 > E.length) v = 0;
      else {
        v = 255 & E[0];
        var H = v % 9;
        v = ~~(v / 9);
        var J = v % 5;
        var L = ~~(v / 5);
        for (G = v = 0; 4 > G; ++G) v += (255 & E[1 + G]) << (8 * G);
        if (!(E = 99999999 < v)) {
          if (8 < H || 4 < J || 4 < L) L = 0;
          else {
            E = u.gb;
            if (null == E.V || E.u != H || E.I != J)
              for (
                E.I = J,
                  E.qc = (1 << J) - 1,
                  E.u = H,
                  J = 1 << (E.u + E.I),
                  E.V = A(J),
                  H = 0;
                J > H;
                ++H
              ) {
                G = E.V;
                var N = H;
                var O = {};
                O = ((O.Ib = A(768)), O);
                G[N] = O;
              }
            L = 1 << L;
            L = (ka(u.Rb, L), ka(u.sb, L), (u.Dc = L - 1), 1);
          }
          E = !L;
        }
        E
          ? (v = 0)
          : 0 > v
            ? (v = 0)
            : (u.Ob != v &&
                ((u.Ob = v),
                (u.nb = Math.max(u.Ob, 1)),
                (v = u.B),
                (L = Math.max(u.nb, 4096)),
                (null != v.Lb && v.M == L) || (v.Lb = A(L)),
                (v.M = L),
                (v.o = 0),
                (v.h = 0)),
              (v = 1));
      }
      if (!v) throw Error('corrupted input');
      for (v = 0; 64 > v; v += 8) {
        if (((x = r(q)), -1 == x)) throw Error('truncated input');
        x = x.toString(16);
        1 == x.length && (x = '0' + x);
        F = x + '' + F;
      }
      /^0+$|^f+$/i.test(F)
        ? (l.Tb = dd)
        : ((B = parseInt(F, 16)), (l.Tb = 4294967295 < B ? dd : M(B)));
      x = l.Tb;
      u.e.Ab = q;
      q = u.B;
      pa(q);
      q.cc = null;
      u.B.cc = t;
      u.B.h = 0;
      u.B.o = 0;
      ib(u.Gb);
      ib(u.pb);
      ib(u.Zb);
      ib(u.Cb);
      ib(u.Db);
      ib(u.Eb);
      ib(u.kc);
      t = u.gb;
      B = 1 << (t.u + t.I);
      for (q = 0; B > q; ++q) ib(t.V[q].Ib);
      for (t = 0; 4 > t; ++t) ib(u.kb[t].G);
      rc(u.Rb);
      rc(u.sb);
      ib(u.Fb.G);
      t = u.e;
      t.Bb = 0;
      t.E = -1;
      for (q = 0; 5 > q; ++q) t.Bb = (t.Bb << 8) | r(t.Ab);
      u.U = 0;
      u.ib = 0;
      u.Jc = 0;
      u.Ic = 0;
      u.Qc = 0;
      u.Nc = x;
      u.g = ta;
      u.jc = 0;
      t = {};
      u = ((t.Z = u), (t.cb = null), (t.zc = 1), t);
      l.yb = u;
      return l;
    }
    function Oa(g, l) {
      return g.c[g.f + g.o + l];
    }
    function Sb(g, l, r, t) {
      g.T && g.o + l + t > g.h && (t = g.h - (g.o + l));
      ++r;
      var q = g.f + g.o + l;
      for (l = 0; t > l && g.c[q + l] == g.c[q + l - r]; ++l);
      return l;
    }
    function ob(g) {
      return g.h - g.o;
    }
    function oa(g) {
      var l, q, r;
      if (!g.T)
        for (; (r = -g.f + g.Kb - g.h), r; ) {
          var t = g.cc,
            v = r;
          if (
            ((l =
              t.Lc >= t.Yb
                ? -1
                : ((v = Math.min(v, t.Yb - t.Lc)),
                  $a(t.Mc, t.Lc, g.c, g.f + g.h, v),
                  (t.Lc += v),
                  v)),
            -1 == l)
          )
            return (
              (g.zb = g.h),
              (q = g.f + g.zb),
              q > g.H && (g.zb = g.H - g.f),
              void (g.T = 1)
            );
          g.h += l;
          g.h >= g.o + g._b && (g.zb = g.h - g._b);
        }
    }
    function mb(g, l) {
      g.f += l;
      g.zb -= l;
      g.o -= l;
      g.h -= l;
    }
    function la(g) {
      var l;
      ++g.k >= g.p && (g.k = 0);
      ++g.o;
      if (g.o > g.zb) {
        var q = g.f + g.o;
        if (q > g.H) {
          var r = g.f + g.o - g.Bc;
          0 < r && --r;
          var t = g.f + g.h - r;
          for (q = 0; t > q; ++q) g.c[q] = g.c[r + q];
          g.f -= r;
        }
        oa(g);
      }
      1073741823 == g.o &&
        ((l = g.o - g.p), nb(g.L, 2 * g.p, l), nb(g.ub, g.rc, l), mb(g, l));
    }
    function nb(g, l, r) {
      var q;
      for (q = 0; l > q; ++q) {
        var u = g[q] || 0;
        r >= u ? (u = 0) : (u -= r);
        g[q] = u;
      }
    }
    function Y(g, l) {
      var q, u, r, t, v, w, x, B, y, A;
      do {
        if (g.h >= g.o + g.ob) var E = g.ob;
        else if (((E = g.h - g.o), g.xb > E)) {
          la(g);
          continue;
        }
        var F = g.o > g.p ? g.o - g.p : 0;
        var G = g.f + g.o;
        g.qb
          ? ((A = fe[255 & g.c[G]] ^ (255 & g.c[G + 1])),
            (t = 1023 & A),
            (g.ub[t] = g.o),
            (A ^= (255 & g.c[G + 2]) << 8),
            (v = 65535 & A),
            (g.ub[1024 + v] = g.o),
            (w = (A ^ (fe[255 & g.c[G + 3]] << 5)) & g.Ec))
          : (w = (255 & g.c[G]) ^ ((255 & g.c[G + 1]) << 8));
        var H = g.ub[g.R + w];
        g.ub[g.R + w] = g.o;
        var J = (g.k << 1) + 1;
        var L = g.k << 1;
        var M = (B = g.w);
        for (q = g.Fc; ; ) {
          if (F >= H || 0 == q--) {
            g.L[J] = g.L[L] = 0;
            break;
          }
          if (
            ((r = g.o - H),
            (u = (g.k >= r ? g.k - r : g.k - r + g.p) << 1),
            (y = g.f + H),
            (x = B > M ? M : B),
            g.c[y + x] == g.c[G + x])
          ) {
            for (; ++x != E && g.c[y + x] == g.c[G + x]; );
            if (x == E) {
              g.L[L] = g.L[u];
              g.L[J] = g.L[u + 1];
              break;
            }
          }
          (255 & g.c[G + x]) > (255 & g.c[y + x])
            ? ((g.L[L] = H), (L = u + 1), (H = g.L[L]), (B = x))
            : ((g.L[J] = H), (J = u), (H = g.L[J]), (M = x));
        }
        la(g);
      } while (0 != --l);
    }
    function pa(g) {
      var l = g.o - g.h;
      if (l) {
        var q = g.cc;
        $a(g.Lb, g.h, q.Mc, q.Yb, l);
        q.Yb += l;
        g.o >= g.M && (g.o = 0);
        g.h = g.o;
      }
    }
    function bb(g, l) {
      l = g.o - l - 1;
      return (0 > l && (l += g.M), g.Lb[l]);
    }
    function S(g) {
      return ((g -= 2), 4 > g ? g : 3);
    }
    function xa(g) {
      return 4 > g ? 0 : 10 > g ? g - 3 : g - 6;
    }
    function lb(g) {
      if (!g.zc) throw Error('bad state');
      if (g.cb) {
        a: {
          var l = g.cb,
            q = g.cb.Xb,
            v = g.cb.uc,
            w = g.cb.Kc,
            y,
            A;
          q[0] = ta;
          v[0] = ta;
          w[0] = 1;
          if (l.oc) {
            l.b.cc = l.oc;
            var E = l.b;
            E.f = 0;
            E.o = 0;
            E.h = 0;
            E.T = 0;
            oa(E);
            E.k = 0;
            mb(E, -1);
            l.W = 1;
            l.oc = null;
          }
          if (!l.pc) {
            l.pc = 1;
            var G = (E = l.g);
            if (G[0] == ta[0] && G[1] == ta[1]) {
              if (!ob(l.b)) {
                Ab(l, aa(l.g));
                break a;
              }
              Na(l);
              var H = aa(l.g) & l.y;
              fb(l.d, l.C, (l.l << 4) + H, 0);
              l.l = xa(l.l);
              G = Oa(l.b, -l.s);
              O(x(l.A, aa(l.g), l.J), l.d, G);
              l.J = G;
              --l.s;
              l.g = t(l.g, Je);
            }
            if (ob(l.b))
              for (;;) {
                if (
                  ((y = hb(l, aa(l.g))),
                  (A = l.mb),
                  (H = aa(l.g) & l.y),
                  (G = (l.l << 4) + H),
                  1 == y && -1 == A)
                ) {
                  fb(l.d, l.C, G, 0);
                  G = Oa(l.b, -l.s);
                  var J = x(l.A, aa(l.g), l.J);
                  if (7 > l.l) O(J, l.d, G);
                  else {
                    var T = Oa(l.b, -l.v[0] - 1 - l.s);
                    var Y = void 0;
                    var ea;
                    var ja = l.d;
                    var ka = T,
                      la = G,
                      sa = 1,
                      za = 1;
                    for (ea = 7; 0 <= ea; --ea) {
                      var Ia = (la >> ea) & 1;
                      T = za;
                      sa &&
                        ((Y = (ka >> ea) & 1),
                        (T += (1 + Y) << 8),
                        (sa = Y == Ia));
                      fb(ja, J.tb, T, Ia);
                      za = (za << 1) | Ia;
                    }
                  }
                  l.J = G;
                  l.l = xa(l.l);
                } else {
                  if ((fb(l.d, l.C, G, 1), 4 > A)) {
                    if (
                      (fb(l.d, l.bb, l.l, 1),
                      A
                        ? (fb(l.d, l.hb, l.l, 1),
                          1 == A
                            ? fb(l.d, l.Ub, l.l, 0)
                            : (fb(l.d, l.Ub, l.l, 1),
                              fb(l.d, l.vc, l.l, A - 2)))
                        : (fb(l.d, l.hb, l.l, 0),
                          1 == y ? fb(l.d, l._, G, 0) : fb(l.d, l._, G, 1)),
                      1 == y
                        ? (l.l = 7 > l.l ? 9 : 11)
                        : (ya(l.i, l.d, y - 2, H), (l.l = 7 > l.l ? 8 : 11)),
                      (G = l.v[A]),
                      0 != A)
                    ) {
                      for (Y = A; 1 <= Y; --Y) l.v[Y] = l.v[Y - 1];
                      l.v[0] = G;
                    }
                  } else {
                    fb(l.d, l.bb, l.l, 0);
                    l.l = 7 > l.l ? 7 : 10;
                    ya(l.$, l.d, y - 2, H);
                    A -= 4;
                    Y = ca(A);
                    G = S(y);
                    W(l.K[G], l.d, Y);
                    if (4 <= Y)
                      if (
                        ((ja = (Y >> 1) - 1),
                        (J = (2 | (1 & Y)) << ja),
                        (T = A - J),
                        14 > Y)
                      )
                        for (
                          G = l.Sb,
                            Y = J - Y - 1,
                            J = l.d,
                            Ia = T,
                            ka = 1,
                            T = 0;
                          ja > T;
                          ++T
                        )
                          ((ea = 1 & Ia),
                            fb(J, G, Y + ka, ea),
                            (ka = (ka << 1) | ea),
                            (Ia >>= 1));
                      else
                        (oc(l.d, T >> 4, ja - 4), U(l.S, l.d, 15 & T), ++l.Qb);
                    G = A;
                    for (Y = 3; 1 <= Y; --Y) l.v[Y] = l.v[Y - 1];
                    l.v[0] = G;
                    ++l.Mb;
                  }
                  l.J = Oa(l.b, y - 1 - l.s);
                }
                if (((l.s -= y), (l.g = t(l.g, M(y))), !l.s)) {
                  128 <= l.Mb && F(l);
                  16 <= l.Qb && N(l);
                  q[0] = l.g;
                  G = l.d;
                  G = t(t(M(G.Jb), G.mc), [4, 0]);
                  if (((v[0] = G), !ob(l.b))) {
                    Ab(l, aa(l.g));
                    break a;
                  }
                  G = l.g;
                  G = L(G[0] - E[0], G[1] - E[1]);
                  if (0 <= B(G, [4096, 0])) {
                    l.pc = 0;
                    w[0] = 0;
                    break a;
                  }
                }
              }
            else Ab(l, aa(l.g));
          }
        }
        g.Pb = g.cb.Xb[0];
        g.cb.Kc[0] && ((y = g.cb), ha(y), (y.d.Ab = null), (g.zc = 0));
      } else {
        a: {
          y = g.Z;
          if (((Y = aa(y.g) & y.Dc), Hb(y.e, y.Gb, (y.U << 4) + Y))) {
            if (Hb(y.e, y.Zb, y.U))
              ((l = 0),
                Hb(y.e, y.Cb, y.U)
                  ? (Hb(y.e, y.Db, y.U)
                      ? (Hb(y.e, y.Eb, y.U)
                          ? ((G = y.Qc), (y.Qc = y.Ic))
                          : (G = y.Ic),
                        (y.Ic = y.Jc))
                      : (G = y.Jc),
                    (y.Jc = y.ib),
                    (y.ib = G))
                  : Hb(y.e, y.pb, (y.U << 4) + Y) ||
                    ((y.U = 7 > y.U ? 9 : 11), (l = 1)),
                l || ((l = Va(y.sb, y.e, Y) + 2), (y.U = 7 > y.U ? 8 : 11)));
            else if (
              ((y.Qc = y.Ic),
              (y.Ic = y.Jc),
              (y.Jc = y.ib),
              (l = 2 + Va(y.Rb, y.e, Y)),
              (y.U = 7 > y.U ? 7 : 10),
              (E = cb(y.kb[S(l)], y.e)),
              4 <= E)
            )
              if (((q = (E >> 1) - 1), (y.ib = (2 | (1 & E)) << q), 14 > E)) {
                A = y.ib;
                H = y.kc;
                v = y.ib - E - 1;
                w = y.e;
                Y = 1;
                for (G = J = 0; q > G; ++G)
                  ((E = Hb(w, H, v + Y)), (Y <<= 1), (Y += E), (J |= E << G));
                y.ib = A + J;
              } else {
                A = y.ib;
                H = y.e;
                v = 0;
                for (q -= 4; 0 != q; --q)
                  ((H.E >>>= 1),
                    (w = (H.Bb - H.E) >>> 31),
                    (H.Bb -= H.E & (w - 1)),
                    (v = (v << 1) | (1 - w)),
                    -16777216 & H.E ||
                      ((H.Bb = (H.Bb << 8) | r(H.Ab)), (H.E <<= 8)));
                y.ib = A + (v << 4);
                A = y.ib;
                H = y.Fb;
                q = y.e;
                E = 1;
                for (w = G = 0; H.F > w; ++w)
                  ((v = Hb(q, H.G, E)), (E <<= 1), (E += v), (G |= v << w));
                if (((y.ib = A + G), 0 > y.ib)) {
                  y = -1 == y.ib ? 1 : -1;
                  break a;
                }
              }
            else y.ib = E;
            if (0 <= B(M(y.ib), y.g) || y.ib >= y.nb) {
              y = -1;
              break a;
            }
            A = y.B;
            H = l;
            q = A.o - y.ib - 1;
            for (0 > q && (q += A.M); 0 != H; --H)
              (q >= A.M && (q = 0),
                (A.Lb[A.o++] = A.Lb[q++]),
                A.o >= A.M && pa(A));
            y.g = t(y.g, M(l));
            y.jc = bb(y.B, 0);
          } else {
            A = y.gb;
            H = aa(y.g);
            A = A.V[((H & A.qc) << A.u) + ((255 & y.jc) >>> (8 - A.u))];
            if (7 > y.U) {
              H = y.e;
              l = 1;
              do l = (l << 1) | Hb(H, A.Ib, l);
              while (256 > l);
              A = (l << 24) >> 24;
            } else {
              H = y.e;
              l = bb(y.B, y.ib);
              q = 1;
              do
                if (
                  ((w = (l >> 7) & 1),
                  (l <<= 1),
                  (v = Hb(H, A.Ib, ((1 + w) << 8) + q)),
                  (q = (q << 1) | v),
                  w != v)
                ) {
                  for (; 256 > q; ) q = (q << 1) | Hb(H, A.Ib, q);
                  break;
                }
              while (256 > q);
              A = (q << 24) >> 24;
            }
            y.jc = A;
            A = y.B;
            H = y.jc;
            A.Lb[A.o++] = H;
            A.o >= A.M && pa(A);
            y.U = xa(y.U);
            y.g = t(y.g, Je);
          }
          y = 0;
        }
        if (-1 == y) throw Error('corrupted input');
        g.Pb = dd;
        g.Pc = g.Z.g;
        if (y || (0 <= B(g.Z.Nc, ta) && 0 <= B(g.Z.g, g.Z.Nc)))
          (pa(g.Z.B),
            (y = g.Z.B),
            pa(y),
            (y.cc = null),
            (g.Z.e.Ab = null),
            (g.zc = 0));
      }
      return g.zc;
    }
    function ka(g, l) {
      for (; l > g.O; ++g.O) ((g.ec[g.O] = w({}, 3)), (g.hc[g.O] = w({}, 3)));
    }
    function Va(g, l, r) {
      return Hb(l, g.wc, 0)
        ? 8 + (Hb(l, g.wc, 1) ? 8 + cb(g.tc, l) : cb(g.hc[r], l))
        : cb(g.ec[r], l);
    }
    function sb(g) {
      return (
        (g.wc = A(2)),
        (g.ec = A(16)),
        (g.hc = A(16)),
        (g.tc = w({}, 8)),
        (g.O = 0),
        g
      );
    }
    function rc(g) {
      ib(g.wc);
      for (var l = 0; g.O > l; ++l) (ib(g.ec[l].G), ib(g.hc[l].G));
      ib(g.tc.G);
    }
    function ja(g, l) {
      g.jb = l;
      var q = g.a[l].r;
      var r = g.a[l].j;
      do {
        if (g.a[l].t) {
          var u = g.a[q];
          u.j = -1;
          u.t = 0;
          g.a[q].r = q - 1;
          g.a[l].Ac &&
            ((g.a[q - 1].t = 0),
            (g.a[q - 1].r = g.a[l].r2),
            (g.a[q - 1].j = g.a[l].j2));
        }
        var t = q;
        u = r;
        r = g.a[t].j;
        q = g.a[t].r;
        g.a[t].j = u;
        g.a[t].r = l;
        l = t;
      } while (0 < l);
      return ((g.mb = g.a[0].j), (g.q = g.a[0].r));
    }
    function N(g) {
      for (var l = 0; 16 > l; ++l) {
        var q = g.nc,
          r = l,
          t,
          v = g.S,
          w = l,
          x = 1,
          y = 0;
        for (t = v.F; 0 != t; --t) {
          var A = 1 & w;
          w >>>= 1;
          y += ud(v.G[x], A);
          x = (x << 1) | A;
        }
        q[r] = y;
      }
      g.Qb = 0;
    }
    function F(g) {
      var l;
      for (l = 4; 128 > l; ++l) {
        var q = ca(l);
        var r = (q >> 1) - 1;
        var t = (2 | (1 & q)) << r;
        var v = g.yc;
        for (var w = l, x, y = l - t, A = 1, B = 0; 0 != r; --r)
          ((x = 1 & y),
            (y >>>= 1),
            (B += Jb[(2047 & ((g.Sb[t - q - 1 + A] - x) ^ -x)) >>> 2]),
            (A = (A << 1) | x));
        v[w] = B;
      }
      for (t = 0; 4 > t; ++t) {
        l = g.K[t];
        v = t << 6;
        for (q = 0; g.$b > q; ++q) g.P[v + q] = Pb(l, q);
        for (q = 14; g.$b > q; ++q) g.P[v + q] += ((q >> 1) - 1 - 4) << 6;
        q = 128 * t;
        for (l = 0; 4 > l; ++l) g.lb[q + l] = g.P[v + l];
        for (; 128 > l; ++l) g.lb[q + l] = g.P[v + ca(l)] + g.yc[l];
      }
      g.Mb = 0;
    }
    function Ab(g, l) {
      ha(g);
      l &= g.y;
      g.Gc &&
        (fb(g.d, g.C, (g.l << 4) + l, 1),
        fb(g.d, g.bb, g.l, 0),
        (g.l = 7 > g.l ? 7 : 10),
        ya(g.$, g.d, 0, l),
        (l = S(2)),
        W(g.K[l], g.d, 63),
        oc(g.d, 67108863, 26),
        U(g.S, g.d, 15));
      for (l = 0; 5 > l; ++l) ic(g.d);
    }
    function hb(g, l) {
      var q,
        r,
        u,
        t,
        v,
        w,
        y,
        A,
        B,
        E,
        F,
        G,
        H,
        L,
        M,
        N,
        O,
        S,
        T,
        W,
        aa,
        U,
        ca,
        ea,
        ha,
        ka,
        oa,
        pa;
      if (g.jb != g.q)
        return (
          (E = g.a[g.q].r - g.q),
          (g.mb = g.a[g.q].j),
          (g.q = g.a[g.q].r),
          E
        );
      if (
        ((g.q = g.jb = 0),
        g.N ? ((B = g.vb), (g.N = 0)) : (B = Na(g)),
        (E = g.D),
        (O = ob(g.b) + 1),
        2 > O)
      )
        return ((g.mb = -1), 1);
      273 < O && (O = 273);
      for (w = y = 0; 4 > w; ++w)
        ((g.x[w] = g.v[w]),
          (g.Q[w] = Sb(g.b, -1, g.x[w], 273)),
          g.Q[w] > g.Q[y] && (y = w));
      if (g.Q[y] >= g.n)
        return (
          (g.mb = y),
          (E = g.Q[y]),
          (l = E - 1),
          0 < l && (Y(g.b, l), (g.s += l)),
          E
        );
      if (B >= g.n)
        return (
          (g.mb = g.m[E - 1] + 4),
          (l = B - 1),
          0 < l && (Y(g.b, l), (g.s += l)),
          B
        );
      if (
        ((v = Oa(g.b, -1)),
        (L = Oa(g.b, -g.v[0] - 1 - 1)),
        2 > B && v != L && 2 > g.Q[y])
      )
        return ((g.mb = -1), 1);
      g.a[0].Hc = g.l;
      var la = l & g.y;
      g.a[1].z =
        Jb[g.C[(g.l << 4) + la] >>> 2] + J(x(g.A, l, g.J), 7 <= g.l, L, v);
      var I = g.a[1];
      I.j = -1;
      I.t = 0;
      I = Jb[(2048 - g.C[(g.l << 4) + la]) >>> 2];
      var sa = I + Jb[(2048 - g.bb[g.l]) >>> 2];
      if (L == v) {
        var ya = g.l;
        ya = sa + (Jb[g.hb[ya] >>> 2] + Jb[g._[(ya << 4) + la] >>> 2]);
        g.a[1].z > ya && ((g.a[1].z = ya), (w = g.a[1]), (w.j = 0), (w.t = 0));
      }
      if (((A = B >= g.Q[y] ? B : g.Q[y]), 2 > A))
        return ((g.mb = g.a[1].j), 1);
      g.a[1].r = 0;
      g.a[0].bc = g.x[0];
      g.a[0].ac = g.x[1];
      g.a[0].dc = g.x[2];
      g.a[0].lc = g.x[3];
      y = A;
      do g.a[y--].z = 268435455;
      while (2 <= y);
      for (w = 0; 4 > w; ++w)
        if (((H = g.Q[w]), !(2 > H))) {
          var Ja = sa + Ia(g, w, g.l, la);
          do {
            var ta = Ja + g.i.Cc[272 * la + (H - 2)];
            var Ea = g.a[H];
            Ea.z > ta && ((Ea.z = ta), (Ea.r = 0), (Ea.j = w), (Ea.t = 0));
          } while (2 <= --H);
        }
      if (
        ((H = I + Jb[g.bb[g.l] >>> 2]),
        (y = 2 <= g.Q[0] ? g.Q[0] + 1 : 2),
        B >= y)
      ) {
        for (B = 0; y > g.m[B]; ) B += 2;
        for (
          ;
          (q = g.m[B + 1]),
            (ta = H + za(g, q, y, la)),
            (Ea = g.a[y]),
            Ea.z > ta && ((Ea.z = ta), (Ea.r = 0), (Ea.j = q + 4), (Ea.t = 0)),
            y != g.m[B] || ((B += 2), B != E);
          ++y
        );
      }
      for (q = 0; ; ) {
        if ((++q, q == A)) return ja(g, q);
        if (((M = Na(g)), (E = g.D), M >= g.n))
          return ((g.vb = M), (g.N = 1), ja(g, q));
        if (
          (++l,
          (aa = g.a[q].r),
          g.a[q].t
            ? (--aa,
              g.a[q].Ac
                ? ((U = g.a[g.a[q].r2].Hc),
                  (U = 4 > g.a[q].j2 ? (7 > U ? 8 : 11) : 7 > U ? 7 : 10))
                : (U = g.a[aa].Hc),
              (U = xa(U)))
            : (U = g.a[aa].Hc),
          aa == q - 1
            ? (U = g.a[q].j ? xa(U) : 7 > U ? 9 : 11)
            : (g.a[q].t && g.a[q].Ac
                ? ((aa = g.a[q].r2), (W = g.a[q].j2), (U = 7 > U ? 8 : 11))
                : ((W = g.a[q].j),
                  (U = 4 > W ? (7 > U ? 8 : 11) : 7 > U ? 7 : 10)),
              (T = g.a[aa]),
              4 > W
                ? W
                  ? 1 == W
                    ? ((g.x[0] = T.ac),
                      (g.x[1] = T.bc),
                      (g.x[2] = T.dc),
                      (g.x[3] = T.lc))
                    : 2 == W
                      ? ((g.x[0] = T.dc),
                        (g.x[1] = T.bc),
                        (g.x[2] = T.ac),
                        (g.x[3] = T.lc))
                      : ((g.x[0] = T.lc),
                        (g.x[1] = T.bc),
                        (g.x[2] = T.ac),
                        (g.x[3] = T.dc))
                  : ((g.x[0] = T.bc),
                    (g.x[1] = T.ac),
                    (g.x[2] = T.dc),
                    (g.x[3] = T.lc))
                : ((g.x[0] = W - 4),
                  (g.x[1] = T.bc),
                  (g.x[2] = T.ac),
                  (g.x[3] = T.dc))),
          (g.a[q].Hc = U),
          (g.a[q].bc = g.x[0]),
          (g.a[q].ac = g.x[1]),
          (g.a[q].dc = g.x[2]),
          (g.a[q].lc = g.x[3]),
          (t = g.a[q].z),
          (v = Oa(g.b, -1)),
          (L = Oa(g.b, -g.x[0] - 1 - 1)),
          (la = l & g.y),
          (r =
            t +
            Jb[g.C[(U << 4) + la] >>> 2] +
            J(x(g.A, l, Oa(g.b, -2)), 7 <= U, L, v)),
          (N = g.a[q + 1]),
          (B = 0),
          N.z > r && ((N.z = r), (N.r = q), (N.j = -1), (N.t = 0), (B = 1)),
          (I = t + Jb[(2048 - g.C[(U << 4) + la]) >>> 2]),
          (sa = I + Jb[(2048 - g.bb[U]) >>> 2]),
          L != v ||
            (q > N.r && !N.j) ||
            ((ya = sa + (Jb[g.hb[U] >>> 2] + Jb[g._[(U << 4) + la] >>> 2])),
            N.z >= ya &&
              ((N.z = ya), (N.r = q), (N.j = 0), (N.t = 0), (B = 1))),
          (S = ob(g.b) + 1),
          (S = S > 4095 - q ? 4095 - q : S),
          (O = S),
          !(2 > O))
        ) {
          if (
            (O > g.n && (O = g.n),
            !B &&
              L != v &&
              ((ca = Math.min(S - 1, g.n)),
              (G = Sb(g.b, 0, g.x[0], ca)),
              2 <= G))
          ) {
            w = xa(U);
            Ea = (l + 1) & g.y;
            ta =
              r +
              Jb[(2048 - g.C[(w << 4) + Ea]) >>> 2] +
              Jb[(2048 - g.bb[w]) >>> 2];
            for (Ja = q + 1 + G; Ja > A; ) g.a[++A].z = 268435455;
            ta += ((ea = g.i.Cc[272 * Ea + (G - 2)]), ea + Ia(g, 0, w, Ea));
            Ea = g.a[Ja];
            Ea.z > ta &&
              ((Ea.z = ta),
              (Ea.r = q + 1),
              (Ea.j = 0),
              (Ea.t = 1),
              (Ea.Ac = 0));
          }
          y = 2;
          for (B = 0; 4 > B; ++B)
            if (((F = Sb(g.b, -1, g.x[B], O)), !(2 > F))) {
              H = F;
              do {
                for (; q + F > A; ) g.a[++A].z = 268435455;
                ta =
                  sa +
                  ((ha = g.i.Cc[272 * la + (F - 2)]), ha + Ia(g, B, U, la));
                Ea = g.a[q + F];
                Ea.z > ta && ((Ea.z = ta), (Ea.r = q), (Ea.j = B), (Ea.t = 0));
              } while (2 <= --F);
              if (
                ((F = H),
                B || (y = F + 1),
                S > F &&
                  ((ca = Math.min(S - 1 - F, g.n)),
                  (G = Sb(g.b, F, g.x[B], ca)),
                  2 <= G))
              ) {
                w = 7 > U ? 8 : 11;
                Ea = (l + F) & g.y;
                ta =
                  sa +
                  ((ka = g.i.Cc[272 * la + (F - 2)]), ka + Ia(g, B, U, la)) +
                  Jb[g.C[(w << 4) + Ea] >>> 2] +
                  J(
                    x(g.A, l + F, Oa(g.b, F - 1 - 1)),
                    1,
                    Oa(g.b, F - 1 - (g.x[B] + 1)),
                    Oa(g.b, F - 1),
                  );
                w = xa(w);
                Ea = (l + F + 1) & g.y;
                ta += Jb[(2048 - g.C[(w << 4) + Ea]) >>> 2];
                ta += Jb[(2048 - g.bb[w]) >>> 2];
                for (Ja = F + 1 + G; q + Ja > A; ) g.a[++A].z = 268435455;
                ta += ((oa = g.i.Cc[272 * Ea + (G - 2)]), oa + Ia(g, 0, w, Ea));
                Ea = g.a[q + Ja];
                Ea.z > ta &&
                  ((Ea.z = ta),
                  (Ea.r = q + F + 1),
                  (Ea.j = 0),
                  (Ea.t = 1),
                  (Ea.Ac = 1),
                  (Ea.r2 = q),
                  (Ea.j2 = B));
              }
            }
          if (M > O) {
            M = O;
            for (E = 0; M > g.m[E]; E += 2);
            g.m[E] = M;
            E += 2;
          }
          if (M >= y) {
            for (H = I + Jb[g.bb[U] >>> 2]; q + M > A; ) g.a[++A].z = 268435455;
            for (B = 0; y > g.m[B]; ) B += 2;
            for (F = y; ; ++F)
              if (
                ((u = g.m[B + 1]),
                (ta = H + za(g, u, F, la)),
                (Ea = g.a[q + F]),
                Ea.z > ta &&
                  ((Ea.z = ta), (Ea.r = q), (Ea.j = u + 4), (Ea.t = 0)),
                F == g.m[B])
              ) {
                if (
                  S > F &&
                  ((ca = Math.min(S - 1 - F, g.n)),
                  (G = Sb(g.b, F, u, ca)),
                  2 <= G)
                ) {
                  w = 7 > U ? 7 : 10;
                  Ea = (l + F) & g.y;
                  ta =
                    ta +
                    Jb[g.C[(w << 4) + Ea] >>> 2] +
                    J(
                      x(g.A, l + F, Oa(g.b, F - 1 - 1)),
                      1,
                      Oa(g.b, F - (u + 1) - 1),
                      Oa(g.b, F - 1),
                    );
                  w = xa(w);
                  Ea = (l + F + 1) & g.y;
                  ta += Jb[(2048 - g.C[(w << 4) + Ea]) >>> 2];
                  ta += Jb[(2048 - g.bb[w]) >>> 2];
                  for (Ja = F + 1 + G; q + Ja > A; ) g.a[++A].z = 268435455;
                  ta +=
                    ((pa = g.i.Cc[272 * Ea + (G - 2)]), pa + Ia(g, 0, w, Ea));
                  Ea = g.a[q + Ja];
                  Ea.z > ta &&
                    ((Ea.z = ta),
                    (Ea.r = q + F + 1),
                    (Ea.j = 0),
                    (Ea.t = 1),
                    (Ea.Ac = 1),
                    (Ea.r2 = q),
                    (Ea.j2 = u + 4));
                }
                if (((B += 2), B == E)) break;
              }
          }
        }
      }
    }
    function za(g, l, r, t) {
      var q,
        u = S(r);
      return (
        (q =
          128 > l
            ? g.lb[128 * u + l]
            : g.P[
                (u << 6) +
                  (131072 > l
                    ? $d[l >> 6] + 12
                    : 134217728 > l
                      ? $d[l >> 16] + 32
                      : $d[l >> 26] + 52)
              ] + g.nc[15 & l]),
        q + g.$.Cc[272 * t + (r - 2)]
      );
    }
    function Ia(g, l, r, t) {
      var q;
      return (
        l
          ? ((q = Jb[(2048 - g.hb[r]) >>> 2]),
            1 == l
              ? (q += Jb[g.Ub[r] >>> 2])
              : ((q += Jb[(2048 - g.Ub[r]) >>> 2]), (q += ud(g.vc[r], l - 2))))
          : ((q = Jb[g.hb[r] >>> 2]),
            (q += Jb[(2048 - g._[(r << 4) + t]) >>> 2])),
        q
      );
    }
    function Na(g) {
      var l = 0;
      a: {
        var q = g.b;
        var r = g.m,
          t,
          v,
          w,
          x,
          y,
          A,
          B,
          E;
        if (q.h >= q.o + q.ob) var F = q.ob;
        else if (((F = q.h - q.o), q.xb > F)) {
          q = (la(q), 0);
          break a;
        }
        var G = 0;
        var H = q.o > q.p ? q.o - q.p : 0;
        var J = q.f + q.o;
        var L = 1;
        var M = (y = 0);
        q.qb
          ? ((v = fe[255 & q.c[J]] ^ (255 & q.c[J + 1])),
            (y = 1023 & v),
            (v ^= (255 & q.c[J + 2]) << 8),
            (M = 65535 & v),
            (A = (v ^ (fe[255 & q.c[J + 3]] << 5)) & q.Ec))
          : (A = (255 & q.c[J]) ^ ((255 & q.c[J + 1]) << 8));
        v = q.ub[q.R + A] || 0;
        q.qb &&
          ((t = q.ub[y] || 0),
          (w = q.ub[1024 + M] || 0),
          (q.ub[y] = q.o),
          (q.ub[1024 + M] = q.o),
          t > H &&
            q.c[q.f + t] == q.c[J] &&
            ((r[G++] = L = 2), (r[G++] = q.o - t - 1)),
          w > H &&
            q.c[q.f + w] == q.c[J] &&
            (w == t && (G -= 2),
            (r[G++] = L = 3),
            (r[G++] = q.o - w - 1),
            (t = w)),
          0 != G && t == v && ((G -= 2), (L = 1)));
        q.ub[q.R + A] = q.o;
        A = (q.k << 1) + 1;
        var N = q.k << 1;
        y = M = q.w;
        0 != q.w &&
          v > H &&
          q.c[q.f + v + q.w] != q.c[J + q.w] &&
          ((r[G++] = L = q.w), (r[G++] = q.o - v - 1));
        for (t = q.Fc; ; ) {
          if (H >= v || 0 == t--) {
            q.L[A] = q.L[N] = 0;
            break;
          }
          if (
            ((x = q.o - v),
            (w = (q.k >= x ? q.k - x : q.k - x + q.p) << 1),
            (E = q.f + v),
            (B = M > y ? y : M),
            q.c[E + B] == q.c[J + B])
          ) {
            for (; ++B != F && q.c[E + B] == q.c[J + B]; );
            if (B > L && ((r[G++] = L = B), (r[G++] = x - 1), B == F)) {
              q.L[N] = q.L[w];
              q.L[A] = q.L[w + 1];
              break;
            }
          }
          (255 & q.c[J + B]) > (255 & q.c[E + B])
            ? ((q.L[N] = v), (N = w + 1), (v = q.L[N]), (M = B))
            : ((q.L[A] = v), (A = w), (v = q.L[A]), (y = B));
        }
        q = (la(q), G);
      }
      return (
        (g.D = q),
        0 < g.D &&
          ((l = g.m[g.D - 2]),
          l == g.n && (l += Sb(g.b, l - 1, g.m[g.D - 1], 273 - l))),
        ++g.s,
        l
      );
    }
    function ha(g) {
      g.b && g.W && ((g.b.cc = null), (g.W = 0));
    }
    function ca(g) {
      return 2048 > g
        ? $d[g]
        : 2097152 > g
          ? $d[g >> 10] + 20
          : $d[g >> 20] + 40;
    }
    function T(g, l) {
      ib(g.db);
      for (var q = 0; l > q; ++q) (ib(g.Vb[q].G), ib(g.Wb[q].G));
      ib(g.ic.G);
    }
    function cd(g, l, r, t, v) {
      var q;
      var u = Jb[g.db[0] >>> 2];
      var w = Jb[(2048 - g.db[0]) >>> 2];
      var x = w + Jb[g.db[1] >>> 2];
      w += Jb[(2048 - g.db[1]) >>> 2];
      for (q = 0; 8 > q; ++q) {
        if (q >= r) return;
        t[v + q] = u + Pb(g.Vb[l], q);
      }
      for (; 16 > q; ++q) {
        if (q >= r) return;
        t[v + q] = x + Pb(g.Wb[l], q - 8);
      }
      for (; r > q; ++q) t[v + q] = w + Pb(g.ic, q - 8 - 8);
    }
    function ya(g, l, r, t) {
      8 > r
        ? (fb(l, g.db, 0, 0), W(g.Vb[t], l, r))
        : ((r -= 8),
          fb(l, g.db, 0, 1),
          8 > r
            ? (fb(l, g.db, 1, 0), W(g.Wb[t], l, r))
            : (fb(l, g.db, 1, 1), W(g.ic, l, r - 8)));
      0 == --g.sc[t] && (cd(g, t, g.rb, g.Cc, 272 * t), (g.sc[t] = g.rb));
    }
    function H(g) {
      g.db = A(2);
      g.Vb = A(16);
      g.Wb = A(16);
      g.ic = Cb({}, 8);
      for (var l = 0; 16 > l; ++l)
        ((g.Vb[l] = Cb({}, 3)), (g.Wb[l] = Cb({}, 3)));
      return ((g.Cc = []), (g.sc = []), g);
    }
    function wb(g, l) {
      for (var q = 0; l > q; ++q)
        (cd(g, q, g.rb, g.Cc, 272 * q), (g.sc[q] = g.rb));
    }
    function x(g, l, r) {
      return g.V[((l & g.qc) << g.u) + ((255 & r) >>> (8 - g.u))];
    }
    function O(g, l, r) {
      var q,
        t = 1;
      for (q = 7; 0 <= q; --q) {
        var u = (r >> q) & 1;
        fb(l, g.tb, t, u);
        t = (t << 1) | u;
      }
    }
    function J(g, l, r, t) {
      var q,
        u,
        v = 1,
        w = 7,
        x = 0;
      if (l)
        for (; 0 <= w; --w)
          if (
            ((u = (r >> w) & 1),
            (q = (t >> w) & 1),
            (x += ud(g.tb[((1 + u) << 8) + v], q)),
            (v = (v << 1) | q),
            u != q)
          ) {
            --w;
            break;
          }
      for (; 0 <= w; --w)
        ((q = (t >> w) & 1), (x += ud(g.tb[v], q)), (v = (v << 1) | q));
      return x;
    }
    function w(g, l) {
      return ((g.F = l), (g.G = A(1 << l)), g);
    }
    function cb(g, l) {
      var q,
        r = 1;
      for (q = g.F; 0 != q; --q) r = (r << 1) + Hb(l, g.G, r);
      return r - (1 << g.F);
    }
    function Cb(g, l) {
      return ((g.F = l), (g.G = A(1 << l)), g);
    }
    function W(g, l, r) {
      var q,
        t = 1;
      for (q = g.F; 0 != q; ) {
        --q;
        var u = (r >>> q) & 1;
        fb(l, g.G, t, u);
        t = (t << 1) | u;
      }
    }
    function Pb(g, l) {
      var q,
        r = 1,
        t = 0;
      for (q = g.F; 0 != q; ) {
        --q;
        var u = (l >>> q) & 1;
        t += ud(g.G[r], u);
        r = (r << 1) + u;
      }
      return t;
    }
    function U(g, l, r) {
      var q,
        t = 1;
      for (q = 0; g.F > q; ++q) {
        var u = 1 & r;
        fb(l, g.G, t, u);
        t = (t << 1) | u;
        r >>= 1;
      }
    }
    function Hb(g, l, t) {
      var q,
        u = l[t];
      return (
        (q = (g.E >>> 11) * u),
        (-2147483648 ^ q) > (-2147483648 ^ g.Bb)
          ? ((g.E = q),
            (l[t] = ((u + ((2048 - u) >>> 5)) << 16) >> 16),
            -16777216 & g.E || ((g.Bb = (g.Bb << 8) | r(g.Ab)), (g.E <<= 8)),
            0)
          : ((g.E -= q),
            (g.Bb -= q),
            (l[t] = ((u - (u >>> 5)) << 16) >> 16),
            -16777216 & g.E || ((g.Bb = (g.Bb << 8) | r(g.Ab)), (g.E <<= 8)),
            1)
      );
    }
    function ib(g) {
      for (var l = g.length - 1; 0 <= l; --l) g[l] = 1024;
    }
    function fb(g, l, r, v) {
      var q = l[r];
      var u = (g.E >>> 11) * q;
      v
        ? ((g.xc = t(g.xc, E(M(u), [4294967295, 0]))),
          (g.E -= u),
          (l[r] = ((q - (q >>> 5)) << 16) >> 16))
        : ((g.E = u), (l[r] = ((q + ((2048 - q) >>> 5)) << 16) >> 16));
      -16777216 & g.E || ((g.E <<= 8), ic(g));
    }
    function oc(g, l, r) {
      for (--r; 0 <= r; --r)
        ((g.E >>>= 1),
          1 == ((l >>> r) & 1) && (g.xc = t(g.xc, M(g.E))),
          -16777216 & g.E || ((g.E <<= 8), ic(g)));
    }
    function ic(g) {
      var q = g.xc;
      var r = 32,
        v;
      q =
        ((r &= 63),
        (v = l(q, r)),
        0 > q[1] && (v = t(v, ea([2, 0], 63 - r))),
        v);
      r = aa(q);
      if (0 != r || 0 > B(g.xc, [4278190080, 0])) {
        g.mc = t(g.mc, M(g.Jb));
        q = g.Oc;
        do ((v = g.Ab), (q += r), (v.Mc[v.Yb++] = (q << 24) >> 24), (q = 255));
        while (0 != --g.Jb);
        g.Oc = aa(g.xc) >>> 24;
      }
      ++g.Jb;
      g.xc = ea(E(g.xc, [16777215, 0]), 8);
    }
    function ud(g, l) {
      return Jb[(2047 & ((g - l) ^ -l)) >>> 2];
    }
    function gg(g) {
      for (
        var l, q, r, t = 0, v = 0, w = g.length, x = [], y = [];
        w > t;
        ++t, ++v
      ) {
        if (((l = 255 & g[t]), 128 & l))
          if (192 == (224 & l)) {
            if (t + 1 >= w || ((q = 255 & g[++t]), 128 != (192 & q))) return g;
            y[v] = ((31 & l) << 6) | (63 & q);
          } else {
            if (
              224 != (240 & l) ||
              t + 2 >= w ||
              ((q = 255 & g[++t]), 128 != (192 & q)) ||
              ((r = 255 & g[++t]), 128 != (192 & r))
            )
              return g;
            y[v] = ((15 & l) << 12) | ((63 & q) << 6) | (63 & r);
          }
        else {
          if (!l) return g;
          y[v] = l;
        }
        16383 == v && (x.push(String.fromCharCode.apply(String, y)), (v = -1));
      }
      return (
        0 < v && ((y.length = v), x.push(String.fromCharCode.apply(String, y))),
        x.join('')
      );
    }
    function Hd(g) {
      var l,
        q,
        r = [],
        t = 0,
        v = g.length;
      if ('object' == typeof g) return g;
      for (q = l = 0; v > q; ++q) r[l++] = g.charCodeAt(q);
      for (q = 0; v > q; ++q)
        ((g = r[q]),
          1 <= g && 127 >= g
            ? ++t
            : (t += !g || (128 <= g && 2047 >= g) ? 2 : 3));
      l = [];
      for (q = t = 0; v > q; ++q)
        ((g = r[q]),
          1 <= g && 127 >= g
            ? (l[t++] = (g << 24) >> 24)
            : !g || (128 <= g && 2047 >= g)
              ? ((l[t++] = ((192 | ((g >> 6) & 31)) << 24) >> 24),
                (l[t++] = ((128 | (63 & g)) << 24) >> 24))
              : ((l[t++] = ((224 | ((g >> 12) & 15)) << 24) >> 24),
                (l[t++] = ((128 | ((g >> 6) & 63)) << 24) >> 24),
                (l[t++] = ((128 | (63 & g)) << 24) >> 24)));
      return l;
    }
    function ee(g) {
      return g[1] + g[0];
    }
    var Rc = 'function' == typeof setImmediate ? setImmediate : setTimeout,
      Ib = 4294967296,
      dd = [4294967295, -Ib],
      ff = [0, -9223372036854775808],
      ta = [0, 0],
      Je = [1, 0],
      fe = (function () {
        var g,
          l,
          r = [];
        for (g = 0; 256 > g; ++g) {
          var t = g;
          for (l = 0; 8 > l; ++l)
            0 != (1 & t) ? (t = (t >>> 1) ^ -306674912) : (t >>>= 1);
          r[g] = t;
        }
        return r;
      })(),
      $d = (function () {
        var g,
          l,
          r = 2,
          t = [0, 1];
        for (l = 2; 22 > l; ++l) {
          var v = 1 << ((l >> 1) - 1);
          for (g = 0; v > g; ++g, ++r) t[r] = (l << 24) >> 24;
        }
        return t;
      })(),
      Jb = (function () {
        var g,
          l,
          r = [];
        for (l = 8; 0 <= l; --l) {
          var t = 1 << (9 - l - 1);
          for (g = 1 << (9 - l); g > t; ++t)
            r[t] = (l << 6) + (((g - t) << 6) >>> (9 - l - 1));
        }
        return r;
      })(),
      tc = (function () {
        var g = [
          { s: 16, f: 64, m: 0 },
          { s: 20, f: 64, m: 0 },
          { s: 19, f: 64, m: 1 },
          { s: 20, f: 64, m: 1 },
          { s: 21, f: 128, m: 1 },
          { s: 22, f: 128, m: 1 },
          { s: 23, f: 128, m: 1 },
          { s: 24, f: 255, m: 1 },
          { s: 25, f: 255, m: 1 },
        ];
        return function (l) {
          return g[l - 1] || g[6];
        };
      })();
    return (
      'undefined' == typeof onmessage ||
        ('undefined' != typeof window && void 0 !== window.document) ||
        !(function () {
          onmessage = function (g) {
            g &&
              g.gc &&
              (2 == g.gc.action
                ? e.decompress(g.gc.gc, g.gc.cbn)
                : 1 == g.gc.action && e.compress(g.gc.gc, g.gc.Rc, g.gc.cbn));
          };
        })(),
      {
        compress: function (g, l, r, t) {
          function q() {
            try {
              for (var g, l = new Date().getTime(); lb(w.c.yb); )
                if (
                  ((u = ee(w.c.yb.Pb) / ee(w.c.Tb)),
                  200 < new Date().getTime() - l)
                )
                  return (t(u), Rc(q, 0), 0);
              t(1);
              g = G(w.c.Nb);
              Rc(r.bind(null, g), 0);
            } catch (xc) {
              r(null, xc);
            }
          }
          var u,
            v,
            w = {},
            x = void 0 === r && void 0 === t;
          if (
            ('function' != typeof r && ((v = r), (r = t = 0)),
            (t =
              t ||
              function (g) {
                void 0 !== v && postMessage({ action: 3, cbn: v, result: g });
              }),
            (r =
              r ||
              function (g, l) {
                return void 0 !== v
                  ? postMessage({ action: 1, cbn: v, result: g, error: l })
                  : void 0;
              }),
            x)
          ) {
            for (w.c = sa({}, Hd(g), tc(l)); lb(w.c.yb); );
            return G(w.c.Nb);
          }
          try {
            ((w.c = sa({}, Hd(g), tc(l))), t(0));
          } catch (vd) {
            return r(null, vd);
          }
          Rc(q, 0);
        },
        decompress: function (g, l, r) {
          function q() {
            try {
              for (var g, u = 0, w = new Date().getTime(); lb(v.d.yb); )
                if (0 == ++u % 1e3 && 200 < new Date().getTime() - w)
                  return (y && ((t = ee(v.d.yb.Z.g) / x), r(t)), Rc(q, 0), 0);
              r(1);
              g = gg(G(v.d.Nb));
              Rc(l.bind(null, g), 0);
            } catch (Le) {
              l(null, Le);
            }
          }
          var t,
            u,
            v = {},
            w = void 0 === l && void 0 === r;
          if (
            ('function' != typeof l && ((u = l), (l = r = 0)),
            (r =
              r ||
              function (g) {
                void 0 !== u &&
                  postMessage({ action: 3, cbn: u, result: y ? g : -1 });
              }),
            (l =
              l ||
              function (g, l) {
                return void 0 !== u
                  ? postMessage({ action: 2, cbn: u, result: g, error: l })
                  : void 0;
              }),
            w)
          ) {
            for (v.d = ab({}, g); lb(v.d.yb); );
            return gg(G(v.d.Nb));
          }
          try {
            v.d = ab({}, g);
            var x = ee(v.d.Tb);
            var y = -1 < x;
            r(0);
          } catch (fd) {
            return l(null, fd);
          }
          Rc(q, 0);
        },
      }
    );
  })();
  this.LZMA = this.LZMA_WORKER = e;
}
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var saveAs =
    saveAs ||
    (function (A) {
      if (
        !(
          'undefined' === typeof A ||
          ('undefined' !== typeof navigator &&
            /MSIE [1-9]\./.test(navigator.userAgent))
        )
      ) {
        var t = A.document.createElementNS('http://www.w3.org/1999/xhtml', 'a'),
          E = 'download' in t,
          B = /constructor/i.test(A.HTMLElement) || A.safari,
          L = /CriOS\/[\d]+/.test(navigator.userAgent),
          M = function (g) {
            (A.setImmediate || A.setTimeout)(function () {
              throw g;
            }, 0);
          },
          aa = function (g) {
            setTimeout(function () {
              'string' === typeof g
                ? (A.URL || A.webkitURL || A).revokeObjectURL(g)
                : g.remove();
            }, 4e4);
          },
          v = function (g) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
              g.type,
            )
              ? new Blob([String.fromCharCode(65279), g], { type: g.type })
              : g;
          },
          ea = function (g, l, y) {
            y || (g = v(g));
            var r = this,
              ea = 'application/octet-stream' === g.type,
              sa = function () {
                var g = ['writestart', 'progress', 'write', 'writeend'];
                g = [].concat(g);
                for (var l = g.length; l--; ) {
                  var t = r['on' + g[l]];
                  if ('function' === typeof t)
                    try {
                      t.call(r, r);
                    } catch (oa) {
                      M(oa);
                    }
                }
              };
            r.readyState = r.INIT;
            if (E) {
              var ab = (A.URL || A.webkitURL || A).createObjectURL(g);
              setTimeout(function () {
                t.href = ab;
                t.download = l;
                var g = new MouseEvent('click');
                t.dispatchEvent(g);
                sa();
                aa(ab);
                r.readyState = r.DONE;
              });
            } else
              (function () {
                if ((L || (ea && B)) && A.FileReader) {
                  var l = new FileReader();
                  l.onloadend = function () {
                    var g = L
                      ? l.result
                      : l.result.replace(
                          /^data:[^;]*;/,
                          'data:attachment/file;',
                        );
                    A.open(g, '_blank') || (A.location.href = g);
                    r.readyState = r.DONE;
                    sa();
                  };
                  l.readAsDataURL(g);
                  r.readyState = r.INIT;
                } else
                  (ab || (ab = (A.URL || A.webkitURL || A).createObjectURL(g)),
                    ea
                      ? (A.location.href = ab)
                      : A.open(ab, '_blank') || (A.location.href = ab),
                    (r.readyState = r.DONE),
                    sa(),
                    aa(ab));
              })();
          },
          l = ea.prototype;
        if ('undefined' !== typeof navigator && navigator.msSaveOrOpenBlob)
          return function (g, l, t) {
            l = l || g.name || 'download';
            t || (g = v(g));
            return navigator.msSaveOrOpenBlob(g, l);
          };
        l.abort = function () {};
        l.readyState = l.INIT = 0;
        l.WRITING = 1;
        l.DONE = 2;
        l.error =
          l.onwritestart =
          l.onprogress =
          l.onwrite =
          l.onabort =
          l.onerror =
          l.onwriteend =
            null;
        return function (g, l, t) {
          return new ea(g, l || g.name || 'download', t);
        };
      }
    })(
      ('undefined' !== typeof self && self) ||
        ('undefined' !== typeof window && window) ||
        this.content,
    );
  'undefined' !== typeof module && module.exports
    ? (module.exports.saveAs = saveAs)
    : 'undefined' !== typeof define &&
      null !== define &&
      null !== define.amd &&
      define('FileSaver.js', function () {
        return saveAs;
      });
}
'function' === typeof define &&
  define.__amd &&
  ((define.amd = define.__amd), delete define.__amd);
