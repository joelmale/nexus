/*
 howler.js v2.2.4 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function (K) {
  var v = 0;
  return function () {
    return v < K.length ? { done: !1, value: K[v++] } : { done: !0 };
  };
};
$jscomp.arrayIterator = function (K) {
  return { next: $jscomp.arrayIteratorImpl(K) };
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || 'function' == typeof Object.defineProperties
    ? Object.defineProperty
    : function (K, v, z) {
        K != Array.prototype && K != Object.prototype && (K[v] = z.value);
      };
$jscomp.getGlobal = function (K) {
  K = [
    'object' == typeof window && window,
    'object' == typeof self && self,
    'object' == typeof global && global,
    K,
  ];
  for (var v = 0; v < K.length; ++v) {
    var z = K[v];
    if (z && z.Math == Math) return z;
  }
  throw Error('Cannot find global object');
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.SymbolClass = function (K, v) {
  this.$jscomp$symbol$id_ = K;
  $jscomp.defineProperty(this, 'description', {
    configurable: !0,
    writable: !0,
    value: v,
  });
};
$jscomp.SymbolClass.prototype.toString = function () {
  return this.$jscomp$symbol$id_;
};
$jscomp.Symbol = (function () {
  function K(z) {
    if (this instanceof K) throw new TypeError('Symbol is not a constructor');
    return new $jscomp.SymbolClass(
      $jscomp.SYMBOL_PREFIX + (z || '') + '_' + v++,
      z,
    );
  }
  var v = 0;
  return K;
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var K = $jscomp.global.Symbol.iterator;
  K ||
    (K = $jscomp.global.Symbol.iterator =
      $jscomp.global.Symbol('Symbol.iterator'));
  'function' != typeof Array.prototype[K] &&
    $jscomp.defineProperty(Array.prototype, K, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.initSymbolAsyncIterator = function () {
  $jscomp.initSymbol();
  var K = $jscomp.global.Symbol.asyncIterator;
  K ||
    (K = $jscomp.global.Symbol.asyncIterator =
      $jscomp.global.Symbol('Symbol.asyncIterator'));
  $jscomp.initSymbolAsyncIterator = function () {};
};
$jscomp.iteratorPrototype = function (K) {
  $jscomp.initSymbolIterator();
  K = { next: K };
  K[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return K;
};
$jscomp.iteratorFromArray = function (K, v) {
  $jscomp.initSymbolIterator();
  K instanceof String && (K += '');
  var z = 0,
    H = {
      next: function () {
        if (z < K.length) {
          var F = z++;
          return { value: v(F, K[F]), done: !1 };
        }
        H.next = function () {
          return { done: !0, value: void 0 };
        };
        return H.next();
      },
    };
  H[Symbol.iterator] = function () {
    return H;
  };
  return H;
};
$jscomp.polyfill = function (K, v, z, H) {
  if (v) {
    z = $jscomp.global;
    K = K.split('.');
    for (H = 0; H < K.length - 1; H++) {
      var F = K[H];
      F in z || (z[F] = {});
      z = z[F];
    }
    K = K[K.length - 1];
    H = z[K];
    v = v(H);
    v != H &&
      null != v &&
      $jscomp.defineProperty(z, K, {
        configurable: !0,
        writable: !0,
        value: v,
      });
  }
};
$jscomp.polyfill(
  'Array.prototype.keys',
  function (K) {
    return K
      ? K
      : function () {
          return $jscomp.iteratorFromArray(this, function (v) {
            return v;
          });
        };
  },
  'es6',
  'es3',
);
$jscomp.checkStringArgs = function (K, v, z) {
  if (null == K)
    throw new TypeError(
      "The 'this' value for String.prototype." +
        z +
        ' must not be null or undefined',
    );
  if (v instanceof RegExp)
    throw new TypeError(
      'First argument to String.prototype.' +
        z +
        ' must not be a regular expression',
    );
  return K + '';
};
$jscomp.polyfill(
  'String.prototype.endsWith',
  function (K) {
    return K
      ? K
      : function (v, z) {
          var H = $jscomp.checkStringArgs(this, v, 'endsWith');
          v += '';
          void 0 === z && (z = H.length);
          z = Math.max(0, Math.min(z | 0, H.length));
          for (var F = v.length; 0 < F && 0 < z; )
            if (H[--z] != v[--F]) return !1;
          return 0 >= F;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.fromCodePoint',
  function (K) {
    return K
      ? K
      : function (v) {
          for (var z = '', H = 0; H < arguments.length; H++) {
            var F = Number(arguments[H]);
            if (0 > F || 1114111 < F || F !== Math.floor(F))
              throw new RangeError('invalid_code_point ' + F);
            65535 >= F
              ? (z += String.fromCharCode(F))
              : ((F -= 65536),
                (z += String.fromCharCode(((F >>> 10) & 1023) | 55296)),
                (z += String.fromCharCode((F & 1023) | 56320)));
          }
          return z;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.values',
  function (K) {
    return K
      ? K
      : function () {
          return $jscomp.iteratorFromArray(this, function (v, z) {
            return z;
          });
        };
  },
  'es8',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.fill',
  function (K) {
    return K
      ? K
      : function (v, z, H) {
          var F = this.length || 0;
          0 > z && (z = Math.max(0, F + z));
          if (null == H || H > F) H = F;
          H = Number(H);
          0 > H && (H = Math.max(0, F + H));
          for (z = Number(z || 0); z < H; z++) this[z] = v;
          return this;
        };
  },
  'es6',
  'es3',
);
$jscomp.underscoreProtoCanBeSet = function () {
  var K = { a: !0 },
    v = {};
  try {
    return ((v.__proto__ = K), v.a);
  } catch (z) {}
  return !1;
};
$jscomp.setPrototypeOf =
  'function' == typeof Object.setPrototypeOf
    ? Object.setPrototypeOf
    : $jscomp.underscoreProtoCanBeSet()
      ? function (K, v) {
          K.__proto__ = v;
          if (K.__proto__ !== v) throw new TypeError(K + ' is not extensible');
          return K;
        }
      : null;
$jscomp.polyfill(
  'Object.setPrototypeOf',
  function (K) {
    return K || $jscomp.setPrototypeOf;
  },
  'es6',
  'es5',
);
$jscomp.owns = function (K, v) {
  return Object.prototype.hasOwnProperty.call(K, v);
};
$jscomp.polyfill(
  'Object.values',
  function (K) {
    return K
      ? K
      : function (v) {
          var z = [],
            H;
          for (H in v) $jscomp.owns(v, H) && z.push(v[H]);
          return z;
        };
  },
  'es8',
  'es3',
);
$jscomp.findInternal = function (K, v, z) {
  K instanceof String && (K = String(K));
  for (var H = K.length, F = 0; F < H; F++) {
    var O = K[F];
    if (v.call(z, O, F, K)) return { i: F, v: O };
  }
  return { i: -1, v: void 0 };
};
$jscomp.polyfill(
  'Array.prototype.find',
  function (K) {
    return K
      ? K
      : function (v, z) {
          return $jscomp.findInternal(this, v, z).v;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.startsWith',
  function (K) {
    return K
      ? K
      : function (v, z) {
          var H = $jscomp.checkStringArgs(this, v, 'startsWith');
          v += '';
          var F = H.length,
            K = v.length;
          z = Math.max(0, Math.min(z | 0, H.length));
          for (var V = 0; V < K && z < F; ) if (H[z++] != v[V++]) return !1;
          return V >= K;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.repeat',
  function (K) {
    return K
      ? K
      : function (v) {
          var z = $jscomp.checkStringArgs(this, null, 'repeat');
          if (0 > v || 1342177279 < v)
            throw new RangeError('Invalid count value');
          v |= 0;
          for (var H = ''; v; ) if ((v & 1 && (H += z), (v >>>= 1))) z += z;
          return H;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Object.is',
  function (K) {
    return K
      ? K
      : function (v, z) {
          return v === z ? 0 !== v || 1 / v === 1 / z : v !== v && z !== z;
        };
  },
  'es6',
  'es3',
);
$jscomp.polyfill(
  'Array.prototype.includes',
  function (K) {
    return K
      ? K
      : function (v, z) {
          var H = this;
          H instanceof String && (H = String(H));
          var F = H.length;
          z = z || 0;
          for (0 > z && (z = Math.max(z + F, 0)); z < F; z++) {
            var K = H[z];
            if (K === v || Object.is(K, v)) return !0;
          }
          return !1;
        };
  },
  'es7',
  'es3',
);
$jscomp.polyfill(
  'String.prototype.includes',
  function (K) {
    return K
      ? K
      : function (v, z) {
          return (
            -1 !==
            $jscomp.checkStringArgs(this, v, 'includes').indexOf(v, z || 0)
          );
        };
  },
  'es6',
  'es3',
);
var $lime_init = function (K, v) {
  var z = function (v, z) {
    (function (v, z) {
      function u(a, b) {
        a = Object.create(a);
        for (var c in b) a[c] = b[c];
        b.toString !== Object.prototype.toString && (a.toString = b.toString);
        return a;
      }
      function H(a) {
        return a instanceof Array ? new Pf(a) : a.iterator();
      }
      function m(a, b) {
        if (null == b) return null;
        null == b.__id__ && (b.__id__ = z.$haxeUID++);
        var c;
        null == a.hx__closures__
          ? (a.hx__closures__ = {})
          : (c = a.hx__closures__[b.__id__]);
        null == c && ((c = b.bind(a)), (a.hx__closures__[b.__id__] = c));
        return c;
      }
      v.lime = v.lime || {};
      var h = {},
        r = function () {
          return xa.__string_rec(this, '');
        },
        L = L || {},
        E,
        Ya = function () {};
      h['lime.app.IModule'] = Ya;
      Ya.__name__ = 'lime.app.IModule';
      Ya.__isInterface__ = !0;
      Ya.prototype = { __class__: Ya };
      var qa = function () {
        this.onExit = new Qf();
      };
      h['lime.app.Module'] = qa;
      qa.__name__ = 'lime.app.Module';
      qa.__interfaces__ = [Ya];
      qa.prototype = {
        __registerLimeModule: function (a) {},
        __unregisterLimeModule: function (a) {},
        __class__: qa,
      };
      var K = function (a) {
        this.gameDeviceCache = new tc();
        this.parent = a;
        this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
        this.framePeriod = -1;
        Re.init();
        this.accelerometer = Se.registerSensor(Wj.ACCELEROMETER, 0);
      };
      h['lime._internal.backend.html5.HTML5Application'] = K;
      K.__name__ = 'lime._internal.backend.html5.HTML5Application';
      K.prototype = {
        convertKeyCode: function (a) {
          if (65 <= a && 90 >= a) return a + 32;
          switch (a) {
            case 12:
              return 1073741980;
            case 16:
              return 1073742049;
            case 17:
              return 1073742048;
            case 18:
              return 1073742050;
            case 19:
              return 1073741896;
            case 20:
              return 1073741881;
            case 33:
              return 1073741899;
            case 34:
              return 1073741902;
            case 35:
              return 1073741901;
            case 36:
              return 1073741898;
            case 37:
              return 1073741904;
            case 38:
              return 1073741906;
            case 39:
              return 1073741903;
            case 40:
              return 1073741905;
            case 41:
              return 1073741943;
            case 43:
              return 1073741940;
            case 44:
              return 1073741894;
            case 45:
              return 1073741897;
            case 46:
              return 127;
            case 91:
              return 1073742051;
            case 92:
              return 1073742055;
            case 93:
              return 1073742055;
            case 95:
              return 1073742106;
            case 96:
              return 1073741922;
            case 97:
              return 1073741913;
            case 98:
              return 1073741914;
            case 99:
              return 1073741915;
            case 100:
              return 1073741916;
            case 101:
              return 1073741917;
            case 102:
              return 1073741918;
            case 103:
              return 1073741919;
            case 104:
              return 1073741920;
            case 105:
              return 1073741921;
            case 106:
              return 1073741909;
            case 107:
              return 1073741911;
            case 108:
              return 1073741923;
            case 109:
              return 1073741910;
            case 110:
              return 1073741923;
            case 111:
              return 1073741908;
            case 112:
              return 1073741882;
            case 113:
              return 1073741883;
            case 114:
              return 1073741884;
            case 115:
              return 1073741885;
            case 116:
              return 1073741886;
            case 117:
              return 1073741887;
            case 118:
              return 1073741888;
            case 119:
              return 1073741889;
            case 120:
              return 1073741890;
            case 121:
              return 1073741891;
            case 122:
              return 1073741892;
            case 123:
              return 1073741893;
            case 124:
              return 1073741928;
            case 125:
              return 1073741929;
            case 126:
              return 1073741930;
            case 127:
              return 1073741931;
            case 128:
              return 1073741932;
            case 129:
              return 1073741933;
            case 130:
              return 1073741934;
            case 131:
              return 1073741935;
            case 132:
              return 1073741936;
            case 133:
              return 1073741937;
            case 134:
              return 1073741938;
            case 135:
              return 1073741939;
            case 144:
              return 1073741907;
            case 145:
              return 1073741895;
            case 160:
              return 94;
            case 161:
              return 33;
            case 163:
              return 35;
            case 164:
              return 36;
            case 166:
              return 1073742094;
            case 167:
              return 1073742095;
            case 168:
              return 1073742097;
            case 169:
              return 41;
            case 170:
              return 42;
            case 171:
              return 96;
            case 172:
              return 1073741898;
            case 173:
              return 45;
            case 174:
              return 1073741953;
            case 175:
              return 1073741952;
            case 176:
              return 1073742082;
            case 177:
              return 1073742083;
            case 178:
              return 1073742084;
            case 179:
              return 1073742085;
            case 180:
              return 1073742089;
            case 181:
              return 1073742086;
            case 182:
              return 1073741953;
            case 183:
              return 1073741952;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 193:
              return 63;
            case 194:
              return 1073741923;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
            case 223:
              return 96;
            case 224:
              return 1073742051;
            case 226:
              return 92;
          }
          return a;
        },
        exec: function () {
          window.addEventListener('keydown', m(this, this.handleKeyEvent), !1);
          window.addEventListener('keyup', m(this, this.handleKeyEvent), !1);
          window.addEventListener('focus', m(this, this.handleWindowEvent), !1);
          window.addEventListener('blur', m(this, this.handleWindowEvent), !1);
          window.addEventListener(
            'resize',
            m(this, this.handleWindowEvent),
            !1,
          );
          window.addEventListener(
            'beforeunload',
            m(this, this.handleWindowEvent),
            !1,
          );
          Object.prototype.hasOwnProperty.call(window, 'Accelerometer') &&
            window.addEventListener(
              'devicemotion',
              m(this, this.handleSensorEvent),
              !1,
            );
          CanvasRenderingContext2D.prototype.isPointInStroke ||
            (CanvasRenderingContext2D.prototype.isPointInStroke = function (
              a,
              b,
              c,
            ) {
              return !1;
            });
          CanvasRenderingContext2D.prototype.isPointInPath ||
            (CanvasRenderingContext2D.prototype.isPointInPath = function (
              a,
              b,
              c,
            ) {
              return !1;
            });
          0 == 'performance' in window && (window.performance = {});
          if (0 == 'now' in window.performance) {
            var a = Date.now();
            performance.timing &&
              performance.timing.navigationStart &&
              (a = performance.timing.navigationStart);
            window.performance.now = function () {
              return Date.now() - a;
            };
          }
          for (
            var b = 0, c = ['ms', 'moz', 'webkit', 'o'], d = 0;
            d < c.length && !window.requestAnimationFrame;
            ++d
          )
            ((window.requestAnimationFrame =
              window[c[d] + 'RequestAnimationFrame']),
              (window.cancelAnimationFrame =
                window[c[d] + 'CancelAnimationFrame'] ||
                window[c[d] + 'CancelRequestAnimationFrame']));
          window.requestAnimationFrame ||
            (window.requestAnimationFrame = function (a, c) {
              var d = window.performance.now(),
                f = Math.max(0, 16 - (d - b));
              c = window.setTimeout(function () {
                a(d + f);
              }, f);
              b = d + f;
              return c;
            });
          window.cancelAnimationFrame ||
            (window.cancelAnimationFrame = function (a) {
              clearTimeout(a);
            });
          window.requestAnimFrame = window.requestAnimationFrame;
          this.lastUpdate = window.performance.now();
          this.handleApplicationEvent();
          return 0;
        },
        exit: function () {},
        handleApplicationEvent: function (a) {
          a = 0;
          for (var b = this.parent.__windows; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__backend.updateSize();
          }
          this.updateGameDevices();
          this.currentUpdate = window.performance.now();
          if (this.currentUpdate >= this.nextUpdate) {
            this.deltaTime = this.currentUpdate - this.lastUpdate;
            a = 0;
            for (b = this.parent.__windows; a < b.length; )
              ((c = b[a]),
                ++a,
                this.parent.onUpdate.dispatch(this.deltaTime | 0),
                null != c.context && c.onRender.dispatch(c.context));
            this.nextUpdate =
              0 > this.framePeriod
                ? this.currentUpdate
                : this.currentUpdate -
                  (this.currentUpdate % this.framePeriod) +
                  this.framePeriod;
            this.lastUpdate = this.currentUpdate;
          }
          window.requestAnimationFrame(m(this, this.handleApplicationEvent));
        },
        handleKeyEvent: function (a) {
          if (null != this.parent.__window) {
            var b = this.convertKeyCode(
                null != a.keyCode ? a.keyCode : a.which,
              ),
              c =
                (a.shiftKey ? 3 : 0) |
                (a.ctrlKey ? 192 : 0) |
                (a.altKey ? 768 : 0) |
                (a.metaKey ? 3072 : 0);
            'keydown' == a.type
              ? (this.parent.__window.onKeyDown.dispatch(b, c),
                this.parent.__window.onKeyDown.canceled &&
                  a.cancelable &&
                  a.preventDefault())
              : (this.parent.__window.onKeyUp.dispatch(b, c),
                this.parent.__window.onKeyUp.canceled &&
                  a.cancelable &&
                  a.preventDefault());
          }
        },
        handleSensorEvent: function (a) {
          this.accelerometer.onUpdate.dispatch(
            a.accelerationIncludingGravity.x,
            a.accelerationIncludingGravity.y,
            a.accelerationIncludingGravity.z,
          );
        },
        handleWindowEvent: function (a) {
          if (null != this.parent.__window)
            switch (a.type) {
              case 'blur':
                this.hidden ||
                  (this.parent.__window.onFocusOut.dispatch(),
                  this.parent.__window.onDeactivate.dispatch(),
                  (this.hidden = !0));
                break;
              case 'focus':
                this.hidden &&
                  (this.parent.__window.onFocusIn.dispatch(),
                  this.parent.__window.onActivate.dispatch(),
                  (this.hidden = !1));
                break;
              case 'resize':
                this.parent.__window.__backend.handleResizeEvent(a);
                break;
              case 'visibilitychange':
                window.document.hidden
                  ? this.hidden ||
                    (this.parent.__window.onFocusOut.dispatch(),
                    this.parent.__window.onDeactivate.dispatch(),
                    (this.hidden = !0))
                  : this.hidden &&
                    (this.parent.__window.onFocusIn.dispatch(),
                    this.parent.__window.onActivate.dispatch(),
                    (this.hidden = !1));
            }
        },
        updateGameDevices: function () {
          var a = pc.__getDeviceData();
          if (null != a)
            for (var b, c, d, f, g, k = 0, q = a.length; k < q; )
              if (((b = k++), (f = a[b]), null != f)) {
                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                  g = new Xj();
                  g.id = b;
                  g.connected = f.connected;
                  c = 0;
                  for (d = f.buttons.length; c < d; ) {
                    var p = c++;
                    g.buttons.push(f.buttons[p].value);
                  }
                  c = 0;
                  for (d = f.axes.length; c < d; )
                    ((p = c++), g.axes.push(f.axes[p]));
                  'standard' == f.mapping && (g.isGamepad = !0);
                  this.gameDeviceCache.h[b] = g;
                  f.connected &&
                    (pc.__connect(b), g.isGamepad && uc.__connect(b));
                }
                g = this.gameDeviceCache.h[b];
                d = pc.devices.h[b];
                c = uc.devices.h[b];
                if (f.connected) {
                  for (var l = 0, h = f.buttons.length; l < h; ) {
                    var n = l++;
                    p = f.buttons[n].value;
                    if (p != g.buttons[n]) {
                      if (6 == n)
                        (d.onAxisMove.dispatch(f.axes.length, p),
                          null != c && c.onAxisMove.dispatch(4, p));
                      else if (7 == n)
                        (d.onAxisMove.dispatch(f.axes.length + 1, p),
                          null != c && c.onAxisMove.dispatch(5, p));
                      else if (
                        (0 < p
                          ? d.onButtonDown.dispatch(n)
                          : d.onButtonUp.dispatch(n),
                        null != c)
                      ) {
                        switch (n) {
                          case 0:
                            b = 0;
                            break;
                          case 1:
                            b = 1;
                            break;
                          case 2:
                            b = 2;
                            break;
                          case 3:
                            b = 3;
                            break;
                          case 4:
                            b = 9;
                            break;
                          case 5:
                            b = 10;
                            break;
                          case 8:
                            b = 4;
                            break;
                          case 9:
                            b = 6;
                            break;
                          case 10:
                            b = 7;
                            break;
                          case 11:
                            b = 8;
                            break;
                          case 12:
                            b = 11;
                            break;
                          case 13:
                            b = 12;
                            break;
                          case 14:
                            b = 13;
                            break;
                          case 15:
                            b = 14;
                            break;
                          case 16:
                            b = 5;
                            break;
                          default:
                            continue;
                        }
                        0 < p
                          ? c.onButtonDown.dispatch(b)
                          : c.onButtonUp.dispatch(b);
                      }
                      g.buttons[n] = p;
                    }
                  }
                  b = 0;
                  for (p = f.axes.length; b < p; )
                    ((l = b++),
                      f.axes[l] != g.axes[l] &&
                        (d.onAxisMove.dispatch(l, f.axes[l]),
                        null != c && c.onAxisMove.dispatch(l, f.axes[l]),
                        (g.axes[l] = f.axes[l])));
                } else
                  g.connected &&
                    ((g.connected = !1),
                    pc.__disconnect(b),
                    uc.__disconnect(b));
              }
        },
        __class__: K,
      };
      var F = function () {
        this.onCreateWindow = new Yj();
        this.onUpdate = new Qf();
        this.onExit = new Qf();
        null == F.current && (F.current = this);
        this.meta = new Ja();
        this.modules = [];
        this.__windowByID = new tc();
        this.__windows = [];
        this.__backend = new K(this);
        this.__registerLimeModule(this);
        this.__preloader = new Zj();
        this.__preloader.onProgress.add(m(this, this.onPreloadProgress));
        this.__preloader.onComplete.add(m(this, this.onPreloadComplete));
      };
      h['lime.app.Application'] = F;
      F.__name__ = 'lime.app.Application';
      F.__super__ = qa;
      F.prototype = u(qa.prototype, {
        addModule: function (a) {
          a.__registerLimeModule(this);
          this.modules.push(a);
        },
        exec: function () {
          F.current = this;
          return this.__backend.exec();
        },
        onGamepadAxisMove: function (a, b, c) {},
        onGamepadButtonDown: function (a, b) {},
        onGamepadButtonUp: function (a, b) {},
        onGamepadConnect: function (a) {},
        onGamepadDisconnect: function (a) {},
        onJoystickAxisMove: function (a, b, c) {},
        onJoystickButtonDown: function (a, b) {},
        onJoystickButtonUp: function (a, b) {},
        onJoystickConnect: function (a) {},
        onJoystickDisconnect: function (a) {},
        onJoystickHatMove: function (a, b, c) {},
        onKeyDown: function (a, b) {},
        onKeyUp: function (a, b) {},
        onModuleExit: function (a) {},
        onMouseDown: function (a, b, c) {},
        onMouseMove: function (a, b) {},
        onMouseMoveRelative: function (a, b) {},
        onMouseUp: function (a, b, c) {},
        onMouseWheel: function (a, b, c) {},
        onPreloadComplete: function () {},
        onPreloadProgress: function (a, b) {},
        onRenderContextLost: function () {},
        onRenderContextRestored: function (a) {},
        onTextEdit: function (a, b, c) {},
        onTextInput: function (a) {},
        onTouchCancel: function (a) {},
        onTouchEnd: function (a) {},
        onTouchMove: function (a) {},
        onTouchStart: function (a) {},
        onWindowActivate: function () {},
        onWindowClose: function () {},
        onWindowCreate: function () {},
        onWindowDeactivate: function () {},
        onWindowDropFile: function (a) {},
        onWindowEnter: function () {},
        onWindowExpose: function () {},
        onWindowFocusIn: function () {},
        onWindowFocusOut: function () {},
        onWindowFullscreen: function () {},
        onWindowLeave: function () {},
        onWindowMove: function (a, b) {},
        onWindowMinimize: function () {},
        onWindowResize: function (a, b) {},
        onWindowRestore: function () {},
        removeModule: function (a) {
          null != a &&
            (a.__unregisterLimeModule(this), R.remove(this.modules, a));
        },
        render: function (a) {},
        update: function (a) {},
        __registerLimeModule: function (a) {
          a.onUpdate.add(m(this, this.update));
          a.onExit.add(m(this, this.onModuleExit), !1, 0);
          a.onExit.add(m(this, this.__onModuleExit), !1, -1e3);
          for (a = uc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onGamepadConnect(b);
          }
          uc.onConnect.add(m(this, this.__onGamepadConnect));
          for (a = pc.devices.iterator(); a.hasNext(); )
            ((b = a.next()), this.__onJoystickConnect(b));
          pc.onConnect.add(m(this, this.__onJoystickConnect));
          hc.onCancel.add(m(this, this.onTouchCancel));
          hc.onStart.add(m(this, this.onTouchStart));
          hc.onMove.add(m(this, this.onTouchMove));
          hc.onEnd.add(m(this, this.onTouchEnd));
        },
        __removeWindow: function (a) {
          null != a &&
            this.__windowByID.h.hasOwnProperty(a.id) &&
            (this.__window == a && (this.__window = null),
            R.remove(this.__windows, a),
            this.__windowByID.remove(a.id),
            a.close(),
            this.__checkForAllWindowsClosed());
        },
        __checkForAllWindowsClosed: function () {
          0 == this.__windows.length && Ec.exit(0);
        },
        __onGamepadConnect: function (a) {
          this.onGamepadConnect(a);
          var b = this,
            c = function (c, d) {
              b.onGamepadAxisMove(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = this;
          c = function (b) {
            d.onGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(c);
          var f = this;
          c = function (b) {
            f.onGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(c);
          var g = this;
          a.onDisconnect.add(function () {
            g.onGamepadDisconnect(a);
          });
        },
        __onJoystickConnect: function (a) {
          this.onJoystickConnect(a);
          var b = this,
            c = function (c, d) {
              b.onJoystickAxisMove(a, c, d);
            };
          a.onAxisMove.add(c);
          var d = this;
          c = function (b) {
            d.onJoystickButtonDown(a, b);
          };
          a.onButtonDown.add(c);
          var f = this;
          c = function (b) {
            f.onJoystickButtonUp(a, b);
          };
          a.onButtonUp.add(c);
          var g = this;
          a.onDisconnect.add(function () {
            g.onJoystickDisconnect(a);
          });
          var k = this;
          c = function (b, c) {
            k.onJoystickHatMove(a, b, c);
          };
          a.onHatMove.add(c);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (this.__unregisterLimeModule(this),
            this.__backend.exit(),
            F.current == this && (F.current = null));
        },
        __onWindowClose: function (a) {
          if (this.__window == a) this.onWindowClose();
          this.__removeWindow(a);
        },
        __unregisterLimeModule: function (a) {
          a.onUpdate.remove(m(this, this.update));
          a.onExit.remove(m(this, this.__onModuleExit));
          a.onExit.remove(m(this, this.onModuleExit));
          uc.onConnect.remove(m(this, this.__onGamepadConnect));
          pc.onConnect.remove(m(this, this.__onJoystickConnect));
          hc.onCancel.remove(m(this, this.onTouchCancel));
          hc.onStart.remove(m(this, this.onTouchStart));
          hc.onMove.remove(m(this, this.onTouchMove));
          hc.onEnd.remove(m(this, this.onTouchEnd));
        },
        __class__: F,
      });
      var V = function () {};
      h.ApplicationMain = V;
      V.__name__ = 'ApplicationMain';
      V.main = function () {
        Ec.__registerEntryPoint('Perilous', V.create);
      };
      V.create = function (a) {
        var b = new $g();
        yb.init(a);
        b.meta.h.build = '2035';
        b.meta.h.company = 'Retronic Games';
        b.meta.h.file = 'Perilous';
        b.meta.h.name = 'Perilous Shores';
        b.meta.h.packageName = 'com.watabou.perilous';
        b.meta.h.version = '1.7.2';
        var c = {
          allowHighDPI: !0,
          alwaysOnTop: !1,
          borderless: !1,
          element: null,
          frameRate: 60,
          height: 0,
          hidden: !1,
          maximized: !1,
          minimized: !1,
          parameters: {},
          resizable: !0,
          title: 'Perilous Shores',
          width: 0,
          x: null,
          y: null,
          context: {
            antialiasing: 0,
            background: 16777215,
            colorDepth: 32,
            depth: !0,
            hardware: !0,
            stencil: !0,
            type: null,
            vsync: !0,
          },
        };
        if (null == b.__window && null != a)
          for (var d = 0, f = ya.fields(a); d < f.length; ) {
            var g = f[d];
            ++d;
            Object.prototype.hasOwnProperty.call(c, g)
              ? (c[g] = ya.field(a, g))
              : Object.prototype.hasOwnProperty.call(c.context, g) &&
                (c.context[g] = ya.field(a, g));
          }
        b.createWindow(c);
        var k = new Ph(new ah());
        b.__preloader.onProgress.add(function (a, b) {
          k.update(a, b);
        });
        b.__preloader.onComplete.add(function () {
          k.start();
        });
        var q = b.__window.stage;
        k.onComplete.add(function () {
          V.start(q);
        });
        d = 0;
        for (f = yb.preloadLibraries; d < f.length; )
          ((a = f[d]), ++d, b.__preloader.addLibrary(a));
        d = 0;
        for (f = yb.preloadLibraryNames; d < f.length; )
          ((a = f[d]), ++d, b.__preloader.addLibraryName(a));
        b.__preloader.load();
        b.exec();
      };
      V.start = function (a) {
        if (a.__uncaughtErrorEvents.__enabled)
          try {
            var b = a.getChildAt(0);
            (null != b && b instanceof jb) || ((b = new Rf()), a.addChild(b));
            new vc(b);
            a.dispatchEvent(new za('resize', !1, !1));
            a.window.__fullscreen &&
              a.dispatchEvent(new of('fullScreen', !1, !1, !0, !0));
          } catch (c) {
            ((Ua.lastError = c),
              (b = aa.caught(c).unwrap()),
              a.__handleError(b));
          }
        else
          ((b = a.getChildAt(0)),
            (null != b && b instanceof jb) || ((b = new Rf()), a.addChild(b)),
            new vc(b),
            a.dispatchEvent(new za('resize', !1, !1)),
            a.window.__fullscreen &&
              a.dispatchEvent(new of('fullScreen', !1, !1, !0, !0)));
      };
      var O = function () {};
      h['openfl.events.IEventDispatcher'] = O;
      O.__name__ = 'openfl.events.IEventDispatcher';
      O.__isInterface__ = !0;
      var sa = function (a) {
        null != a && (this.__targetDispatcher = a);
      };
      h['openfl.events.EventDispatcher'] = sa;
      sa.__name__ = 'openfl.events.EventDispatcher';
      sa.__interfaces__ = [O];
      sa.prototype = {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          if (null != b)
            if (
              (null == this.__eventMap &&
                ((this.__eventMap = new Ja()), (this.__iterators = new Ja())),
              Object.prototype.hasOwnProperty.call(this.__eventMap.h, a))
            ) {
              p = this.__eventMap.h[a];
              for (var g = 0, k = p.length; g < k; ) {
                var q = g++;
                if (p[q].match(b, c)) return;
              }
              a = this.__iterators.h[a];
              for (g = 0; g < a.length; )
                ((k = a[g]), ++g, k.active && k.copy());
              this.__addListenerByPriority(p, new Sf(b, c, d, f));
            } else {
              var p = [];
              p.push(new Sf(b, c, d, f));
              k = new bh(p);
              this.__eventMap.h[a] = p;
              this.__iterators.h[a] = [k];
            }
        },
        dispatchEvent: function (a) {
          a.target =
            null != this.__targetDispatcher ? this.__targetDispatcher : this;
          return this.__dispatchEvent(a);
        },
        hasEventListener: function (a) {
          return null == this.__eventMap
            ? !1
            : Object.prototype.hasOwnProperty.call(this.__eventMap.h, a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          if (null != this.__eventMap && null != b) {
            var d = this.__eventMap.h[a];
            if (null != d) {
              for (
                var f = this.__iterators.h[a], g = 0, k = d.length;
                g < k;

              ) {
                var q = g++;
                if (d[q].match(b, c)) {
                  for (b = 0; b < f.length; )
                    ((c = f[b]), ++b, c.remove(d[q], q));
                  d.splice(q, 1);
                  break;
                }
              }
              0 == d.length &&
                ((d = this.__eventMap),
                (f = a),
                Object.prototype.hasOwnProperty.call(d.h, f) && delete d.h[f],
                (d = this.__iterators),
                (f = a),
                Object.prototype.hasOwnProperty.call(d.h, f) && delete d.h[f]);
              0 >= Object.keys(this.__eventMap.h).length &&
                (this.__iterators = this.__eventMap = null);
            }
          }
        },
        __dispatchEvent: function (a) {
          if (null == this.__eventMap || null == a) return !0;
          var b = a.type,
            c = this.__eventMap.h[b];
          if (null == c) return !0;
          null == a.target &&
            (a.target =
              null != this.__targetDispatcher ? this.__targetDispatcher : this);
          a.currentTarget = this;
          var d = 1 == a.eventPhase;
          b = this.__iterators.h[b];
          var f = b[0];
          f.active && ((f = new bh(c)), b.push(f));
          f.start();
          for (var g = f; g.hasNext(); ) {
            var k = g.next();
            if (null != k && k.useCapture == d) {
              if (k.useWeakReference && null != k.weakRefCallback) {
                var q = k.weakRefCallback.deref();
                if (null == q)
                  ((q = f.index - 1), c.splice(q, 1), f.remove(k, q));
                else if (
                  null != Ra.get_current() &&
                  null != Ra.get_current().stage &&
                  Ra.get_current().stage.__uncaughtErrorEvents.__enabled
                )
                  try {
                    q(a);
                  } catch (p) {
                    ((Ua.lastError = p),
                      (k = aa.caught(p).unwrap()),
                      a instanceof qg ||
                        Ra.get_current().stage.__handleError(k));
                  }
                else q(a);
              } else if (
                null != Ra.get_current() &&
                null != Ra.get_current().stage &&
                Ra.get_current().stage.__uncaughtErrorEvents.__enabled
              )
                try {
                  k.callback(a);
                } catch (p) {
                  ((Ua.lastError = p),
                    (k = aa.caught(p).unwrap()),
                    a instanceof qg || Ra.get_current().stage.__handleError(k));
                }
              else k.callback(a);
              if (a.__isCanceledNow) break;
            }
          }
          f.stop();
          f != b[0] ? R.remove(b, f) : f.reset(c);
          return !a.isDefaultPrevented();
        },
        __addListenerByPriority: function (a, b) {
          for (var c = a.length, d = c, f = 0; f < c; ) {
            var g = f++;
            if (a[g].priority < b.priority) {
              d = g;
              break;
            }
          }
          a.splice(d, 0, b);
        },
        __class__: sa,
      };
      var qb = function () {};
      h['openfl.display.IBitmapDrawable'] = qb;
      qb.__name__ = 'openfl.display.IBitmapDrawable';
      qb.__isInterface__ = !0;
      qb.prototype = { __class__: qb };
      var ra = {
          toIntVector: function (a, b, c, d) {
            return new ch(b, c, d);
          },
          toFloatVector: function (a, b, c, d) {
            return new Te(b, c, d, !0);
          },
          toObjectVector: function (a, b, c, d) {
            return new rg(b, c, d, !0);
          },
        },
        ub = function (a, b, c) {
          this.__pool = new va();
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList = new Xa();
          null != a && (this.create = a);
          null != b && (this.clean = b);
          null != c && this.set_size(c);
        };
      h['lime.utils.ObjectPool'] = ub;
      ub.__name__ = 'lime.utils.ObjectPool';
      ub.prototype = {
        clean: function (a) {},
        create: function () {
          return null;
        },
        get: function () {
          var a = null;
          if (0 < this.inactiveObjects)
            (null != this.__inactiveObject0
              ? ((a = this.__inactiveObject0), (this.__inactiveObject0 = null))
              : null != this.__inactiveObject1
                ? ((a = this.__inactiveObject1),
                  (this.__inactiveObject1 = null))
                : ((a = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
                  0 < this.__inactiveObjectList.length &&
                    (this.__inactiveObject1 = this.__inactiveObjectList.pop())),
              this.inactiveObjects--,
              this.activeObjects++);
          else if (null == this.__size || this.activeObjects < this.__size)
            ((a = this.create()),
              null != a && (this.__pool.set(a, !0), this.activeObjects++));
          return a;
        },
        release: function (a) {
          this.activeObjects--;
          null == this.__size ||
          this.activeObjects + this.inactiveObjects < this.__size
            ? (this.clean(a),
              null == this.__inactiveObject0
                ? (this.__inactiveObject0 = a)
                : null == this.__inactiveObject1
                  ? (this.__inactiveObject1 = a)
                  : this.__inactiveObjectList.add(a),
              this.inactiveObjects++)
            : this.__pool.remove(a);
        },
        __removeInactive: function (a) {
          if (
            !(0 >= a || 0 == this.inactiveObjects) &&
            (null != this.__inactiveObject0 &&
              (this.__pool.remove(this.__inactiveObject0),
              (this.__inactiveObject0 = null),
              this.inactiveObjects--,
              --a),
            0 != a &&
              0 != this.inactiveObjects &&
              (null != this.__inactiveObject1 &&
                (this.__pool.remove(this.__inactiveObject1),
                (this.__inactiveObject1 = null),
                this.inactiveObjects--,
                --a),
              0 != a && 0 != this.inactiveObjects))
          )
            for (var b = this.__inactiveObjectList.h; null != b; ) {
              var c = b.item;
              b = b.next;
              this.__pool.remove(c);
              this.__inactiveObjectList.remove(c);
              this.inactiveObjects--;
              --a;
              if (0 == a || 0 == this.inactiveObjects) break;
            }
        },
        set_size: function (a) {
          if (null == a) this.__size = null;
          else {
            var b = this.inactiveObjects + this.activeObjects;
            this.__size = a;
            if (b > a) this.__removeInactive(b - a);
            else if (a > b)
              for (var c = 0, d = a - b; c < d; )
                if ((c++, (b = this.create()), null != b))
                  (this.__pool.set(b, !1),
                    this.__inactiveObjectList.add(b),
                    this.inactiveObjects++);
                else break;
          }
          return a;
        },
        __class__: ub,
        __properties__: { set_size: 'set_size' },
      };
      var oa = function () {};
      h['haxe.IMap'] = oa;
      oa.__name__ = 'haxe.IMap';
      oa.__isInterface__ = !0;
      oa.prototype = { __class__: oa };
      var va = function () {
        this.h = { __keys__: {} };
      };
      h['haxe.ds.ObjectMap'] = va;
      va.__name__ = 'haxe.ds.ObjectMap';
      va.__interfaces__ = [oa];
      va.prototype = {
        set: function (a, b) {
          var c = a.__id__;
          null == c && (c = a.__id__ = z.$haxeUID++);
          this.h[c] = b;
          this.h.__keys__[c] = a;
        },
        get: function (a) {
          return this.h[a.__id__];
        },
        remove: function (a) {
          a = a.__id__;
          if (null == this.h.__keys__[a]) return !1;
          delete this.h[a];
          delete this.h.__keys__[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h.__keys__)
            this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
          return new Pf(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a.__id__];
            },
          };
        },
        __class__: va,
      };
      var Xa = function () {
        this.length = 0;
      };
      h['haxe.ds.List'] = Xa;
      Xa.__name__ = 'haxe.ds.List';
      Xa.prototype = {
        add: function (a) {
          a = new Qh(a, null);
          null == this.h ? (this.h = a) : (this.q.next = a);
          this.q = a;
          this.length++;
        },
        push: function (a) {
          this.h = a = new Qh(a, this.h);
          null == this.q && (this.q = a);
          this.length++;
        },
        pop: function () {
          if (null == this.h) return null;
          var a = this.h.item;
          this.h = this.h.next;
          null == this.h && (this.q = null);
          this.length--;
          return a;
        },
        isEmpty: function () {
          return null == this.h;
        },
        clear: function () {
          this.q = this.h = null;
          this.length = 0;
        },
        remove: function (a) {
          for (var b = null, c = this.h; null != c; ) {
            if (c.item == a)
              return (
                null == b ? (this.h = c.next) : (b.next = c.next),
                this.q == c && (this.q = b),
                this.length--,
                !0
              );
            b = c;
            c = c.next;
          }
          return !1;
        },
        iterator: function () {
          return new ak(this.h);
        },
        __class__: Xa,
      };
      var ca = function () {
        sa.call(this);
        this.__alpha = this.__drawableType = 1;
        this.__blendMode = 10;
        this.__cacheAsBitmap = !1;
        this.__transform = new ua();
        this.__visible = !0;
        this.__rotationSine = this.__rotation = 0;
        this.__worldAlpha =
          this.__scaleY =
          this.__scaleX =
          this.__rotationCosine =
            1;
        this.__worldBlendMode = 10;
        this.__worldTransform = new ua();
        this.__worldColorTransform = new Lb();
        this.__renderTransform = new ua();
        this.__worldVisible = !0;
        this.set_name('instance' + ++ca.__instanceCount);
        null != ca.__initStage &&
          ((this.stage = ca.__initStage),
          (ca.__initStage = null),
          this.stage.addChild(this));
      };
      h['openfl.display.DisplayObject'] = ca;
      ca.__name__ = 'openfl.display.DisplayObject';
      ca.__interfaces__ = [qb];
      ca.__super__ = sa;
      ca.prototype = u(sa.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              Object.prototype.hasOwnProperty.call(ca.__broadcastEvents.h, a) ||
                (ca.__broadcastEvents.h[a] = []);
              var g = ca.__broadcastEvents.h[a];
              -1 == g.indexOf(this) && g.push(this);
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              null == this.__customRenderEvent &&
                ((this.__customRenderEvent = new Rh(null)),
                (this.__customRenderEvent.objectColorTransform = new Lb()),
                (this.__customRenderEvent.objectMatrix = new ua()),
                (this.__customRenderClear = !0));
          }
          sa.prototype.addEventListener.call(this, a, b, c, d, f);
        },
        dispatchEvent: function (a) {
          if (a instanceof Fb) {
            var b = this.__getRenderTransform();
            a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
            b = this.__getRenderTransform();
            a.stageY = a.localX * b.b + a.localY * b.d + b.ty;
          } else
            a instanceof Yd &&
              ((b = this.__getRenderTransform()),
              (a.stageX = a.localX * b.a + a.localY * b.c + b.tx),
              (b = this.__getRenderTransform()),
              (a.stageY = a.localX * b.b + a.localY * b.d + b.ty));
          a.target = this;
          return this.__dispatchWithCapture(a);
        },
        getBounds: function (a) {
          var b = ua.__pool.get();
          if (null != a && a != this) {
            b.copyFrom(this.__getWorldTransform());
            var c = ua.__pool.get();
            c.copyFrom(a.__getWorldTransform());
            c.invert();
            b.concat(c);
            ua.__pool.release(c);
          } else b.identity();
          a = new na();
          this.__getBounds(a, b);
          ua.__pool.release(b);
          return a;
        },
        getRect: function (a) {
          return this.getBounds(a);
        },
        globalToLocal: function (a) {
          return this.__globalToLocal(a, new B());
        },
        hitTestPoint: function (a, b, c) {
          null == c && (c = !1);
          return null != this.stage
            ? this.__hitTest(a, b, c, null, !1, this)
            : !1;
        },
        localToGlobal: function (a) {
          return this.__getRenderTransform().transformPoint(a);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          sa.prototype.removeEventListener.call(this, a, b, c);
          switch (a) {
            case 'activate':
            case 'deactivate':
            case 'enterFrame':
            case 'exitFrame':
            case 'frameConstructed':
            case 'render':
              this.hasEventListener(a) ||
                (Object.prototype.hasOwnProperty.call(
                  ca.__broadcastEvents.h,
                  a,
                ) &&
                  R.remove(ca.__broadcastEvents.h[a], this));
              break;
            case 'clearDOM':
            case 'renderCairo':
            case 'renderCanvas':
            case 'renderDOM':
            case 'renderOpenGL':
              this.hasEventListener('clearDOM') ||
                this.hasEventListener('renderCairo') ||
                this.hasEventListener('renderCanvas') ||
                this.hasEventListener('renderDOM') ||
                this.hasEventListener('renderOpenGL') ||
                (this.__customRenderEvent = null);
          }
        },
        __cleanup: function () {
          this.__context = this.__canvas = this.__cairo = null;
          null != this.__graphics && this.__graphics.__cleanup();
          null != this.__cacheBitmap &&
            (this.__cacheBitmap.__cleanup(), (this.__cacheBitmap = null));
          null != this.__cacheBitmapData &&
            (this.__cacheBitmapData.dispose(), (this.__cacheBitmapData = null));
        },
        __dispatch: function (a) {
          if (null != this.__eventMap && this.hasEventListener(a.type)) {
            var b = sa.prototype.__dispatchEvent.call(this, a);
            return a.__isCanceled ? !0 : b;
          }
          return !0;
        },
        __dispatchChildren: function (a) {},
        __dispatchEvent: function (a) {
          var b = a.bubbles ? this.parent : null,
            c = sa.prototype.__dispatchEvent.call(this, a);
          if (a.__isCanceled) return !0;
          null != b &&
            b != this &&
            ((a.eventPhase = 3),
            null == a.target && (a.target = this),
            b.__dispatchEvent(a));
          return c;
        },
        __dispatchWithCapture: function (a) {
          null == a.target && (a.target = this);
          if (null != this.parent)
            if (((a.eventPhase = 1), this.parent == this.stage))
              this.parent.__dispatch(a);
            else {
              for (
                var b = ca.__tempStack.get(), c = this.parent, d = 0;
                null != c;

              )
                (b.set(d, c), (c = c.parent), ++d);
              c = 0;
              for (var f = d; c < f; ) {
                var g = c++;
                b.get(d - g - 1).__dispatch(a);
              }
              ca.__tempStack.release(b);
            }
          a.eventPhase = 2;
          return this.__dispatchEvent(a);
        },
        __enterFrame: function (a) {},
        __getBounds: function (a, b) {
          null != this.__graphics && this.__graphics.__getBounds(a, b);
        },
        __getCursor: function () {
          return null;
        },
        __getFilterBounds: function (a, b) {
          this.__getRenderBounds(a, b);
          if (null != this.__filters) {
            b = na.__pool.get();
            for (var c = 0, d = this.__filters; c < d.length; ) {
              var f = d[c];
              ++c;
              b.__expand(
                -f.__leftExtension,
                -f.__topExtension,
                f.__leftExtension + f.__rightExtension,
                f.__topExtension + f.__bottomExtension,
              );
            }
            a.width += b.width;
            a.height += b.height;
            a.x += b.x;
            a.y += b.y;
            na.__pool.release(b);
          }
        },
        __getInteractive: function (a) {
          return !1;
        },
        __getLocalBounds: function (a) {
          this.__getBounds(a, this.__transform);
          a.x -= this.__transform.tx;
          a.y -= this.__transform.ty;
        },
        __getRenderBounds: function (a, b) {
          if (null == this.__scrollRect) this.__getBounds(a, b);
          else {
            var c = na.__pool.get();
            c.copyFrom(this.__scrollRect);
            c.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            na.__pool.release(c);
          }
        },
        __getRenderTransform: function () {
          this.__getWorldTransform();
          return this.__renderTransform;
        },
        __getWorldTransform: function () {
          if (this.__transformDirty || this.__worldTransformInvalid) {
            var a = [],
              b = this;
            if (null == this.parent) this.__update(!0, !1);
            else
              for (
                ;
                b != this.stage && (a.push(b), (b = b.parent), null != b);

              );
            for (var c = a.length; 0 <= --c; ) ((b = a[c]), b.__update(!0, !1));
          }
          return this.__worldTransform;
        },
        __globalToLocal: function (a, b) {
          this.__getRenderTransform();
          if (a == b) {
            var c = this.__renderTransform,
              d = c.a * c.d - c.b * c.c;
            if (0 == d) ((a.x = -c.tx), (a.y = -c.ty));
            else {
              var f = (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
              a.y = (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
              a.x = f;
            }
          } else
            ((c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.x =
                0 == d
                  ? -c.tx
                  : (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx))),
              (c = this.__renderTransform),
              (d = c.a * c.d - c.b * c.c),
              (b.y =
                0 == d
                  ? -c.ty
                  : (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x))));
          return b;
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (null != this.__graphics) {
            if (
              !g.__visible ||
              this.__isMask ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
            )
              return !1;
            if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()))
              return (null == d || f || d.push(g), !0);
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          return null != this.__graphics &&
            this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform())
            ? !0
            : !1;
        },
        __readGraphicsData: function (a, b) {
          null != this.__graphics && this.__graphics.__readGraphicsData(a);
        },
        __setParentRenderDirty: function () {
          var a =
            null != this.__renderParent ? this.__renderParent : this.parent;
          null == a ||
            a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty());
        },
        __setStageReference: function (a) {
          this.stage = a;
        },
        __setTransformDirty: function () {
          this.__transformDirty ||
            ((this.__transformDirty = !0),
            this.__setWorldTransformInvalid(),
            this.__setParentRenderDirty());
        },
        __setWorldTransformInvalid: function () {
          this.__worldTransformInvalid = !0;
        },
        __update: function (a, b) {
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          this.__isMask && null == c && (c = this.__maskTarget);
          this.__renderable =
            this.__visible &&
            0 != this.__scaleX &&
            0 != this.__scaleY &&
            !this.__isMask &&
            (null == c || !c.__isMask);
          this.__updateTransforms();
          this.__worldTransformInvalid = this.__transformDirty = !1;
          if (!a)
            if (
              (ca.__supportDOM &&
                ((this.__renderTransformChanged =
                  !this.__renderTransform.equals(this.__renderTransformCache)),
                null == this.__renderTransformCache
                  ? (this.__renderTransformCache =
                      this.__renderTransform.clone())
                  : this.__renderTransformCache.copyFrom(
                      this.__renderTransform,
                    )),
              null != c)
            ) {
              if (ca.__supportDOM) {
                var d = c.__worldVisible && this.__visible;
                this.__worldVisibleChanged = this.__worldVisible != d;
                this.__worldVisible = d;
              }
              d = this.get_alpha() * c.__worldAlpha;
              this.__worldAlphaChanged = this.__worldAlpha != d;
              this.__worldAlpha = d;
              null != this.__objectTransform
                ? (this.__worldColorTransform.__copyFrom(
                    this.__objectTransform.__colorTransform,
                  ),
                  this.__worldColorTransform.__combine(c.__worldColorTransform))
                : this.__worldColorTransform.__copyFrom(
                    c.__worldColorTransform,
                  );
              this.__worldBlendMode =
                null == this.__blendMode || 10 == this.__blendMode
                  ? c.__worldBlendMode
                  : this.__blendMode;
              this.__worldShader =
                null == this.__shader ? c.__shader : this.__shader;
              this.__worldScale9Grid =
                null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid;
            } else
              ((this.__worldAlpha = this.get_alpha()),
                ca.__supportDOM &&
                  ((this.__worldVisibleChanged =
                    this.__worldVisible != this.__visible),
                  (this.__worldVisible = this.__visible)),
                (this.__worldAlphaChanged =
                  this.__worldAlpha != this.get_alpha()),
                null != this.__objectTransform
                  ? this.__worldColorTransform.__copyFrom(
                      this.__objectTransform.__colorTransform,
                    )
                  : this.__worldColorTransform.__identity(),
                (this.__worldBlendMode = this.__blendMode),
                (this.__worldShader = this.__shader),
                (this.__worldScale9Grid = this.__scale9Grid));
          b && null != this.get_mask() && this.get_mask().__update(a, !0);
        },
        __updateTransforms: function (a) {
          var b = null != a;
          a = b ? a : this.__transform;
          null == this.__worldTransform && (this.__worldTransform = new ua());
          null == this.__renderTransform && (this.__renderTransform = new ua());
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          if (b || null == this.parent) this.__worldTransform.copyFrom(a);
          else {
            var d = this.parent.__worldTransform,
              f = this.__worldTransform;
            f.a = a.a * d.a + a.b * d.c;
            f.b = a.a * d.b + a.b * d.d;
            f.c = a.c * d.a + a.d * d.c;
            f.d = a.c * d.b + a.d * d.d;
            f.tx = a.tx * d.a + a.ty * d.c + d.tx;
            f.ty = a.tx * d.b + a.ty * d.d + d.ty;
          }
          b || null == c
            ? this.__renderTransform.copyFrom(a)
            : ((d = c.__renderTransform),
              (f = this.__renderTransform),
              (f.a = a.a * d.a + a.b * d.c),
              (f.b = a.a * d.b + a.b * d.d),
              (f.c = a.c * d.a + a.d * d.c),
              (f.d = a.c * d.b + a.d * d.d),
              (f.tx = a.tx * d.a + a.ty * d.c + d.tx),
              (f.ty = a.tx * d.b + a.ty * d.d + d.ty));
          null != this.__scrollRect &&
            ((b = this.__renderTransform),
            (a = -this.__scrollRect.x),
            (c = -this.__scrollRect.y),
            (b.tx = a * b.a + c * b.c + b.tx),
            (b.ty = a * b.b + c * b.d + b.ty));
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          1 < a && (a = 1);
          0 > a && (a = 0);
          a == this.__alpha ||
            this.get_cacheAsBitmap() ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__alpha = a);
        },
        get_blendMode: function () {
          return this.__blendMode;
        },
        set_blendMode: function (a) {
          null == a && (a = 10);
          a == this.__blendMode ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__blendMode = a);
        },
        get_cacheAsBitmap: function () {
          return null == this.__filters ? this.__cacheAsBitmap : !0;
        },
        get_filters: function () {
          return null == this.__filters ? [] : this.__filters.slice();
        },
        set_filters: function (a) {
          if (null != a && 0 < a.length) {
            for (var b = [], c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              d = d.clone();
              d.__renderDirty = !0;
              b.push(d);
            }
            this.__filters = b;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          } else
            null != this.__filters &&
              ((this.__filters = null),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return a;
        },
        get_height: function () {
          var a = na.__pool.get();
          this.__getLocalBounds(a);
          var b = a.height;
          na.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = na.__pool.get(),
            c = ua.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
          na.__pool.release(b);
          ua.__pool.release(c);
          return a;
        },
        get_loaderInfo: function () {
          return null != this.stage ? Fc.current.__loaderInfo : null;
        },
        get_mask: function () {
          return this.__mask;
        },
        set_mask: function (a) {
          if (a == this.__mask) return a;
          a != this.__mask &&
            (this.__setTransformDirty(),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          if (null != this.__mask) {
            this.__mask.__isMask = !1;
            this.__mask.__maskTarget = null;
            this.__mask.__setTransformDirty();
            var b = this.__mask;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          null != a &&
            ((a.__isMask = !0),
            (a.__maskTarget = this),
            a.__setWorldTransformInvalid());
          null != this.__cacheBitmap &&
            this.__cacheBitmap.get_mask() != a &&
            this.__cacheBitmap.set_mask(a);
          return (this.__mask = a);
        },
        get_mouseX: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : Fc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : Fc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.tx
            : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
        },
        get_mouseY: function () {
          var a =
              null != this.stage
                ? this.stage.__mouseX
                : Fc.current.stage.__mouseX,
            b =
              null != this.stage
                ? this.stage.__mouseY
                : Fc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d
            ? -c.ty
            : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
        },
        get_name: function () {
          return this.__name;
        },
        set_name: function (a) {
          return (this.__name = a);
        },
        get_root: function () {
          return null != this.stage ? Fc.current : null;
        },
        get_rotation: function () {
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            a %= 360;
            180 < a ? (a -= 360) : -180 > a && (a += 360);
            this.__rotation = a;
            var b = (Math.PI / 180) * this.__rotation;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            this.__transform.a = this.__rotationCosine * this.__scaleX;
            this.__transform.b = this.__rotationSine * this.__scaleX;
            this.__transform.c = -this.__rotationSine * this.__scaleY;
            this.__transform.d = this.__rotationCosine * this.__scaleY;
            this.__setTransformDirty();
          }
          return a;
        },
        get_scaleX: function () {
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX)
            if (((this.__scaleX = a), 0 == this.__transform.b))
              (a != this.__transform.a && this.__setTransformDirty(),
                (this.__transform.a = a));
            else {
              var b = this.__rotationCosine * a,
                c = this.__rotationSine * a;
              (this.__transform.a == b && this.__transform.b == c) ||
                this.__setTransformDirty();
              this.__transform.a = b;
              this.__transform.b = c;
            }
          return a;
        },
        get_scaleY: function () {
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY)
            if (((this.__scaleY = a), 0 == this.__transform.c))
              (a != this.__transform.d && this.__setTransformDirty(),
                (this.__transform.d = a));
            else {
              var b = -this.__rotationSine * a,
                c = this.__rotationCosine * a;
              (this.__transform.d == c && this.__transform.c == b) ||
                this.__setTransformDirty();
              this.__transform.c = b;
              this.__transform.d = c;
            }
          return a;
        },
        get_scrollRect: function () {
          return null == this.__scrollRect ? null : this.__scrollRect.clone();
        },
        get_transform: function () {
          null == this.__objectTransform &&
            (this.__objectTransform = new Sh(this));
          return this.__objectTransform;
        },
        set_transform: function (a) {
          if (null == a) throw new Tf('Parameter transform must be non-null.');
          null == this.__objectTransform &&
            (this.__objectTransform = new Sh(this));
          this.__setTransformDirty();
          this.__objectTransform.set_matrix(a.get_matrix());
          if (
            !this.__objectTransform.__colorTransform.__equals(
              a.__colorTransform,
              !0,
            ) ||
            (!this.get_cacheAsBitmap() &&
              this.__objectTransform.__colorTransform.alphaMultiplier !=
                a.__colorTransform.alphaMultiplier)
          )
            (this.__objectTransform.__colorTransform.__copyFrom(
              a.get_colorTransform(),
            ),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__objectTransform;
        },
        get_visible: function () {
          return this.__visible;
        },
        set_visible: function (a) {
          a == this.__visible ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return (this.__visible = a);
        },
        get_width: function () {
          var a = na.__pool.get();
          this.__getLocalBounds(a);
          var b = a.width;
          na.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = na.__pool.get(),
            c = ua.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
          na.__pool.release(b);
          ua.__pool.release(c);
          return a;
        },
        get_x: function () {
          return this.__transform.tx;
        },
        set_x: function (a) {
          a != this.__transform.tx && this.__setTransformDirty();
          return (this.__transform.tx = a);
        },
        get_y: function () {
          return this.__transform.ty;
        },
        set_y: function (a) {
          a != this.__transform.ty && this.__setTransformDirty();
          return (this.__transform.ty = a);
        },
        __class__: ca,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          set_visible: 'set_visible',
          get_visible: 'get_visible',
          set_transform: 'set_transform',
          get_transform: 'get_transform',
          get_scrollRect: 'get_scrollRect',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          get_root: 'get_root',
          set_name: 'set_name',
          get_name: 'get_name',
          get_mouseY: 'get_mouseY',
          get_mouseX: 'get_mouseX',
          set_mask: 'set_mask',
          get_mask: 'get_mask',
          get_loaderInfo: 'get_loaderInfo',
          set_height: 'set_height',
          get_height: 'get_height',
          set_filters: 'set_filters',
          get_filters: 'get_filters',
          get_cacheAsBitmap: 'get_cacheAsBitmap',
          set_blendMode: 'set_blendMode',
          get_blendMode: 'get_blendMode',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      });
      var Aa = function () {
        ca.call(this);
        this.doubleClickEnabled = !1;
        this.mouseEnabled = !0;
        this.needsSoftKeyboard = !1;
        this.__tabEnabled = null;
        this.__tabIndex = -1;
      };
      h['openfl.display.InteractiveObject'] = Aa;
      Aa.__name__ = 'openfl.display.InteractiveObject';
      Aa.__super__ = ca;
      Aa.prototype = u(ca.prototype, {
        __allowMouseFocus: function () {
          return this.mouseEnabled ? this.get_tabEnabled() : !1;
        },
        __getInteractive: function (a) {
          null != a &&
            (a.push(this),
            null != this.parent && this.parent.__getInteractive(a));
          return !0;
        },
        __hitTest: function (a, b, c, d, f, g) {
          return !g.get_visible() || this.__isMask || (f && !this.mouseEnabled)
            ? !1
            : ca.prototype.__hitTest.call(this, a, b, c, d, f, g);
        },
        __tabTest: function (a) {
          this.get_tabEnabled() && a.push(this);
        },
        get_tabEnabled: function () {
          return 1 == this.__tabEnabled ? !0 : !1;
        },
        get_tabIndex: function () {
          return this.__tabIndex;
        },
        __class__: Aa,
        __properties__: u(ca.prototype.__properties__, {
          get_tabIndex: 'get_tabIndex',
          get_tabEnabled: 'get_tabEnabled',
        }),
      });
      var jb = function () {
        Aa.call(this);
        this.__tabChildren = this.mouseChildren = !0;
        this.__children = [];
        this.__removedChildren = ra.toObjectVector(null);
      };
      h['openfl.display.DisplayObjectContainer'] = jb;
      jb.__name__ = 'openfl.display.DisplayObjectContainer';
      jb.__super__ = Aa;
      jb.prototype = u(Aa.prototype, {
        addChild: function (a) {
          return this.addChildAt(a, this.get_numChildren());
        },
        addChildAt: function (a, b) {
          if (null == a)
            throw (
              (a = new Tf('Error #2007: Parameter child must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (a == this)
            throw (
              (a = new Uf(
                'Error #2024: An object cannot be added as a child of itself.',
              )),
              (a.errorID = 2024),
              a
            );
          if (a.stage == a)
            throw (
              (a = new Uf(
                'Error #3783: A Stage object cannot be added as the child of another object.',
              )),
              (a.errorID = 3783),
              a
            );
          if (b > this.__children.length || 0 > b)
            throw aa.thrown('Invalid index position ' + b);
          if (a.parent == this)
            this.__children[b] != a &&
              (R.remove(this.__children, a),
              this.__children.splice(b, 0, a),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else {
            null != a.parent && a.parent.removeChild(a);
            this.__children.splice(b, 0, a);
            a.parent = this;
            (b = null != this.stage && null == a.stage) &&
              a.__setStageReference(this.stage);
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var c = new za('added');
            c.bubbles = !0;
            c.target = a;
            a.__dispatchWithCapture(c);
            b &&
              ((c = new za('addedToStage', !1, !1)),
              a.__dispatchWithCapture(c),
              a.__dispatchChildren(c));
          }
          return a;
        },
        getChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.__children[a]
            : null;
        },
        getChildByName: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d.get_name() == a) return d;
          }
          return null;
        },
        getChildIndex: function (a) {
          for (var b = 0, c = this.__children.length; b < c; ) {
            var d = b++;
            if (this.__children[d] == a) return d;
          }
          return -1;
        },
        removeChild: function (a) {
          if (null != a && a.parent == this) {
            a.__setTransformDirty();
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty());
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
            var b = new za('removed', !0);
            a.__dispatchWithCapture(b);
            null != this.stage &&
              (null != a.stage &&
                this.stage.get_focus() == a &&
                this.stage.set_focus(null),
              (b = new za('removedFromStage', !1, !1)),
              a.__dispatchWithCapture(b),
              a.__dispatchChildren(b),
              a.__setStageReference(null));
            a.parent = null;
            R.remove(this.__children, a);
            this.__removedChildren.push(a);
            a.__setTransformDirty();
          }
          return a;
        },
        removeChildAt: function (a) {
          return 0 <= a && a < this.__children.length
            ? this.removeChild(this.__children[a])
            : null;
        },
        removeChildren: function (a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (2147483647 == b && ((b = this.__children.length - 1), 0 > b))
            return;
          if (!(a > this.__children.length - 1)) {
            if (b < a || 0 > a || b > this.__children.length)
              throw new dh('The supplied index is out of bounds.');
            for (b -= a; 0 <= b; ) (this.removeChildAt(a), --b);
          }
        },
        __cleanup: function () {
          Aa.prototype.__cleanup.call(this);
          for (var a = 0, b = this.__children; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__cleanup();
          }
          for (a = this.__removedChildren.iterator(); a.hasNext(); )
            ((b = a.next()), null == b.stage && b.__cleanup());
          this.__removedChildren.set_length(0);
        },
        __dispatchChildren: function (a) {
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              a.target = d;
              if (!d.__dispatchWithCapture(a)) break;
              d.__dispatchChildren(a);
            }
        },
        __enterFrame: function (a) {
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __getBounds: function (a, b) {
          Aa.prototype.__getBounds.call(this, a, b);
          if (0 != this.__children.length) {
            for (
              var c = ua.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var g = f[d];
              ++d;
              if (0 != g.__scaleX && 0 != g.__scaleY) {
                var k = g.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                g.__getBounds(a, c);
              }
            }
            ua.__pool.release(c);
          }
        },
        __getFilterBounds: function (a, b) {
          Aa.prototype.__getFilterBounds.call(this, a, b);
          if (null == this.__scrollRect && 0 != this.__children.length) {
            for (
              var c = ua.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var g = f[d];
              ++d;
              if (0 != g.__scaleX && 0 != g.__scaleY && !g.__isMask) {
                var k = g.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                k = na.__pool.get();
                g.__getFilterBounds(k, c);
                a.__expand(k.x, k.y, k.width, k.height);
                na.__pool.release(k);
              }
            }
            ua.__pool.release(c);
          }
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            Aa.prototype.__getRenderBounds.call(this, a, b);
          else if (
            (Aa.prototype.__getBounds.call(this, a, b),
            0 != this.__children.length)
          ) {
            for (
              var c = ua.__pool.get(), d = 0, f = this.__children;
              d < f.length;

            ) {
              var g = f[d];
              ++d;
              if (0 != g.__scaleX && 0 != g.__scaleY && !g.__isMask) {
                var k = g.__transform;
                c.a = k.a * b.a + k.b * b.c;
                c.b = k.a * b.b + k.b * b.d;
                c.c = k.c * b.a + k.d * b.c;
                c.d = k.c * b.b + k.d * b.d;
                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                g.__getRenderBounds(a, c);
              }
            }
            ua.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (
            !g.get_visible() ||
            this.__isMask ||
            (f && !this.mouseEnabled && !this.mouseChildren) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          if (null != this.__scrollRect) {
            var k = B.__pool.get();
            k.setTo(a, b);
            var q = this.__getRenderTransform(),
              p = q.a * q.d - q.b * q.c;
            if (0 == p) ((k.x = -q.tx), (k.y = -q.ty));
            else {
              var l = (1 / p) * (q.c * (q.ty - k.y) + q.d * (k.x - q.tx));
              k.y = (1 / p) * (q.a * (k.y - q.ty) + q.b * (q.tx - k.x));
              k.x = l;
            }
            if (!this.__scrollRect.containsPoint(k))
              return (B.__pool.release(k), !1);
            B.__pool.release(k);
          }
          k = this.__children.length;
          if (f)
            if (null == d || !this.mouseChildren)
              for (; 0 <= --k; ) {
                if (
                  this.__children[k].__hitTest(
                    a,
                    b,
                    c,
                    null,
                    !0,
                    this.__children[k],
                  )
                )
                  return (null != d && d.push(g), !0);
              }
            else {
              if (null != d) {
                f = d.length;
                for (
                  p = !1;
                  0 <= --k &&
                  !(
                    ((q = this.__children[k].__getInteractive(null)) ||
                      (this.mouseEnabled && !p)) &&
                    this.__children[k].__hitTest(
                      a,
                      b,
                      c,
                      d,
                      !0,
                      this.__children[k],
                    ) &&
                    ((p = !0), q && d.length > f)
                  );

                );
                if (p) return (d.splice(f, 0, g), !0);
              }
            }
          else {
            for (
              p = !1;
              0 <= --k &&
              (!this.__children[k].__hitTest(
                a,
                b,
                c,
                d,
                !1,
                this.__children[k],
              ) ||
                ((p = !0), null != d));

            );
            return p;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          for (var c = this.__children.length; 0 <= --c; )
            if (this.__children[c].__hitTestMask(a, b)) return !0;
          return !1;
        },
        __readGraphicsData: function (a, b) {
          Aa.prototype.__readGraphicsData.call(this, a, b);
          if (b)
            for (var c = 0, d = this.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              f.__readGraphicsData(a, b);
            }
        },
        __setStageReference: function (a) {
          Aa.prototype.__setStageReference.call(this, a);
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__setStageReference(a);
            }
        },
        __setWorldTransformInvalid: function () {
          if (
            !this.__worldTransformInvalid &&
            ((this.__worldTransformInvalid = !0), null != this.__children)
          )
            for (var a = 0, b = this.__children; a < b.length; ) {
              var c = b[a];
              ++a;
              c.__setWorldTransformInvalid();
            }
        },
        __tabTest: function (a) {
          Aa.prototype.__tabTest.call(this, a);
          if (this.get_tabChildren())
            for (var b, c = 0, d = this.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              if ((b = f.__getInteractive(null))) ((b = f), b.__tabTest(a));
            }
        },
        __update: function (a, b) {
          Aa.prototype.__update.call(this, a, b);
          if (b) {
            b = 0;
            for (var c = this.__children; b < c.length; ) {
              var d = c[b];
              ++b;
              d.__update(a, !0);
            }
          }
        },
        get_numChildren: function () {
          return this.__children.length;
        },
        get_tabChildren: function () {
          return this.__tabChildren;
        },
        __class__: jb,
        __properties__: u(Aa.prototype.__properties__, {
          get_tabChildren: 'get_tabChildren',
          get_numChildren: 'get_numChildren',
        }),
      });
      var T = function () {
        jb.call(this);
        this.__drawableType = 4;
        this.__buttonMode = !1;
        this.useHandCursor = !0;
        if (null != this.__pendingBindLibrary) {
          var a = this.__pendingBindLibrary,
            b = this.__pendingBindClassName;
          this.__pendingBindClassName = this.__pendingBindLibrary = null;
          a.bind(b, this);
        } else
          null != T.__constructor &&
            ((a = T.__constructor), (T.__constructor = null), a(this));
      };
      h['openfl.display.Sprite'] = T;
      T.__name__ = 'openfl.display.Sprite';
      T.__super__ = jb;
      T.prototype = u(jb.prototype, {
        stopDrag: function () {
          null != this.stage && this.stage.__stopDrag(this);
        },
        __setStageReference: function (a) {
          this.stage != a &&
            null != this.stage &&
            this.stage.__dragObject == this &&
            this.stopDrag();
          jb.prototype.__setStageReference.call(this, a);
        },
        __getCursor: function () {
          return this.__buttonMode && this.useHandCursor ? 'button' : null;
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (f && !this.mouseEnabled && !this.mouseChildren) return !1;
          if (
            !g.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return this.__hitTestHitArea(a, b, c, d, f, g);
          if (null != this.__scrollRect) {
            var k = B.__pool.get();
            k.setTo(a, b);
            var q = this.__getRenderTransform(),
              p = q.a * q.d - q.b * q.c;
            if (0 == p) ((k.x = -q.tx), (k.y = -q.ty));
            else {
              var l = (1 / p) * (q.c * (q.ty - k.y) + q.d * (k.x - q.tx));
              k.y = (1 / p) * (q.a * (k.y - q.ty) + q.b * (q.tx - k.x));
              k.x = l;
            }
            if (!this.__scrollRect.containsPoint(k))
              return (
                B.__pool.release(k),
                this.__hitTestHitArea(a, b, c, d, !0, g)
              );
            B.__pool.release(k);
          }
          return jb.prototype.__hitTest.call(this, a, b, c, d, f, g)
            ? null != d
              ? f
              : !0
            : null == this.hitArea &&
                null != this.__graphics &&
                this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())
              ? (null == d || (f && !this.mouseEnabled) || d.push(g), !0)
              : this.__hitTestHitArea(a, b, c, d, f, g);
        },
        __hitTestHitArea: function (a, b, c, d, f, g) {
          return null == this.hitArea || this.hitArea.mouseEnabled
            ? !1
            : ((this.hitArea.mouseEnabled = !0),
              (a = this.hitArea.__hitTest(a, b, c, null, !0, g)),
              (this.hitArea.mouseEnabled = !1),
              null != d && a && (d[d.length] = g),
              a);
        },
        __hitTestMask: function (a, b) {
          return jb.prototype.__hitTestMask.call(this, a, b) ||
            (null != this.__graphics &&
              this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()))
            ? !0
            : !1;
        },
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new Dd(this));
          return this.__graphics;
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? this.__buttonMode
            : this.__tabEnabled;
        },
        get_buttonMode: function () {
          return this.__buttonMode;
        },
        set_buttonMode: function (a) {
          return (this.__buttonMode = a);
        },
        __class__: T,
        __properties__: u(jb.prototype.__properties__, {
          get_graphics: 'get_graphics',
          set_buttonMode: 'set_buttonMode',
          get_buttonMode: 'get_buttonMode',
        }),
      });
      var ib = function (a) {
        ib.instance = this;
        T.call(this);
        this.prepareStage();
        sb.useEnterFrame(this);
        ib.switchScene(a);
      };
      h['com.watabou.coogee.Game'] = ib;
      ib.__name__ = 'com.watabou.coogee.Game';
      ib.switchScene = function (a) {
        ib.instance.switchSceneImp(a);
      };
      ib.quit = function () {};
      ib.__super__ = T;
      ib.prototype = u(T.prototype, {
        prepareStage: function () {
          var a = this;
          this.stage.align = 6;
          this.stage.set_scaleMode(2);
          this.stage.addEventListener('resize', function (b) {
            a.layout();
          });
          this.stage.application.onExit.add(m(this, this.onExit));
          this.stage.application.__window.onActivate.add(
            m(this, this.onResume),
          );
          this.stage.application.__window.onDeactivate.add(
            m(this, this.onPause),
          );
        },
        onExit: function (a) {
          sb.stop();
        },
        onResume: function () {},
        onPause: function () {},
        layout: function () {
          if (null != ib.scene) {
            var a = this.stage.stageWidth,
              b = this.stage.stageHeight,
              c = this.getScale(a, b);
            ib.scene.set_scaleX(ib.scene.set_scaleY(c));
            ib.scene.setSize(a / c, b / c);
          }
        },
        getScale: function (a, b) {
          return 1;
        },
        switchSceneImp: function (a) {
          null != ib.scene &&
            (ib.scene.deactivate(),
            this.removeChild(ib.scene),
            (ib.scene = null));
          null != a &&
            ((ib.scene = y.createInstance(a, [])),
            this.addChild(ib.scene),
            this.layout(),
            ib.scene.activate());
          this.stage.set_focus(this.stage);
        },
        __class__: ib,
      });
      var Gc = function () {
        l.reset();
        this.stage.showDefaultContextMenu = !1;
        C.useDefault();
        ob.baseURL = 'https://watabou.github.io/perilous-shores/';
        ib.call(this, bb);
      };
      h['com.watabou.perilous.Main'] = Gc;
      Gc.__name__ = 'com.watabou.perilous.Main';
      Gc.__super__ = ib;
      Gc.prototype = u(ib.prototype, {
        getScale: function (a, b) {
          return 1;
        },
        switchSceneImp: function (a) {
          null == w.layer && (w.layer = new ha());
          ib.prototype.switchSceneImp.call(this, a);
          this.addChild(w.layer);
          w.wipe();
        },
        layout: function () {
          ib.prototype.layout.call(this);
          Th.get_screenDPI();
          w.layer.set_scaleX(w.layer.set_scaleY(1));
          w.layer.setSize(
            this.stage.stageWidth / 1,
            this.stage.stageHeight / 1,
          );
        },
        __class__: Gc,
      });
      var vc = function (a) {
        a.addChild(this);
        Gc.call(this);
        this.dispatchEvent(new za('addedToStage', !1, !1));
      };
      h.DocumentClass = vc;
      vc.__name__ = 'DocumentClass';
      vc.__super__ = Gc;
      vc.prototype = u(Gc.prototype, { __class__: vc });
      var Ba = function (a, b) {
        this.r = new RegExp(a, b.split('u').join(''));
      };
      h.EReg = Ba;
      Ba.__name__ = 'EReg';
      Ba.prototype = {
        match: function (a) {
          this.r.global && (this.r.lastIndex = 0);
          this.r.m = this.r.exec(a);
          this.r.s = a;
          return null != this.r.m;
        },
        matched: function (a) {
          if (null != this.r.m && 0 <= a && a < this.r.m.length)
            return this.r.m[a];
          throw aa.thrown('EReg::matched');
        },
        matchedPos: function () {
          if (null == this.r.m) throw aa.thrown('No string matched');
          return { pos: this.r.m.index, len: this.r.m[0].length };
        },
        matchSub: function (a, b, c) {
          null == c && (c = -1);
          if (this.r.global) {
            if (
              ((this.r.lastIndex = b),
              (this.r.m = this.r.exec(0 > c ? a : R.substr(a, 0, b + c))),
              (c = null != this.r.m))
            )
              this.r.s = a;
          } else if (
            (c = this.match(0 > c ? R.substr(a, b, null) : R.substr(a, b, c)))
          )
            ((this.r.s = a), (this.r.m.index += b));
          return c;
        },
        split: function (a) {
          return a.replace(this.r, '#__delim__#').split('#__delim__#');
        },
        map: function (a, b) {
          var c = 0,
            d = '';
          do {
            if (c >= a.length) break;
            else if (!this.matchSub(a, c)) {
              d += I.string(R.substr(a, c, null));
              break;
            }
            var f = this.matchedPos();
            d += I.string(R.substr(a, c, f.pos - c));
            d += I.string(b(this));
            0 == f.len
              ? ((d += I.string(R.substr(a, f.pos, 1))), (c = f.pos + 1))
              : (c = f.pos + f.len);
          } while (this.r.global);
          !this.r.global &&
            0 < c &&
            c < a.length &&
            (d += I.string(R.substr(a, c, null)));
          return d;
        },
        __class__: Ba,
      };
      var R = function () {};
      h.HxOverrides = R;
      R.__name__ = 'HxOverrides';
      R.strDate = function (a) {
        switch (a.length) {
          case 8:
            a = a.split(':');
            var b = new Date();
            b.setTime(0);
            b.setUTCHours(a[0]);
            b.setUTCMinutes(a[1]);
            b.setUTCSeconds(a[2]);
            return b;
          case 10:
            return (
              (a = a.split('-')),
              new Date(a[0], a[1] - 1, a[2], 0, 0, 0)
            );
          case 19:
            return (
              (a = a.split(' ')),
              (b = a[0].split('-')),
              (a = a[1].split(':')),
              new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2])
            );
          default:
            throw aa.thrown('Invalid date format : ' + a);
        }
      };
      R.cca = function (a, b) {
        a = a.charCodeAt(b);
        if (a == a) return a;
      };
      R.substr = function (a, b, c) {
        if (null == c) c = a.length;
        else if (0 > c)
          if (0 == b) c = a.length + c;
          else return '';
        return a.substr(b, c);
      };
      R.remove = function (a, b) {
        b = a.indexOf(b);
        if (-1 == b) return !1;
        a.splice(b, 1);
        return !0;
      };
      R.now = function () {
        return Date.now();
      };
      var D = function () {};
      h.Lambda = D;
      D.__name__ = 'Lambda';
      D.array = function (a) {
        var b = [];
        for (a = H(a); a.hasNext(); ) {
          var c = a.next();
          b.push(c);
        }
        return b;
      };
      var yb = function () {};
      h.ManifestResources = yb;
      yb.__name__ = 'ManifestResources';
      yb.init = function (a) {
        yb.preloadLibraries = [];
        yb.preloadLibraryNames = [];
        yb.rootPath = null;
        null != a &&
          Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          ((yb.rootPath = ya.field(a, 'rootPath')),
          P.endsWith(yb.rootPath, '/') || (yb.rootPath += '/'));
        null == yb.rootPath && (yb.rootPath = './');
        la.registerFont(S);
        la.registerFont(U);
        la.registerFont(id);
        a = wd.parse(
          '{"name":null,"assets":"aoy4:sizei46596y4:typey4:FONTy9:classNamey37:__ASSET__assets_sharetech_regular_ttfy2:idy7:ui_fonty7:preloadtgoR0i42756R1R2R3y41:__ASSET__assets_sharetechmono_regular_ttfR5y12:ui_font_monoR7tgoR0i115128R1R2R3y34:__ASSET__assets_neucha_regular_ttfR5y8:def_fontR7tgoy4:pathy21:Assets%2Fdefault.jsonR0i1651R1y4:TEXTR5y7:defaultR7tgoR12y16:Assets%2Fbw.jsonR0i1651R1R14R5y2:bwR7tgoR12y21:Assets%2Fantique.jsonR0i1652R1R14R5y7:antiqueR7tgoR12y18:Assets%2Fsoft.jsonR0i1653R1R14R5y4:softR7tgoR12y21:Assets%2Fcartoon.jsonR0i1646R1R14R5y7:cartoonR7tgoR12y21:Assets%2Foctober.jsonR0i1652R1R14R5y7:octoberR7tgoR12y21:Assets%2Fgrammar.jsonR0i7219R1R14R5y7:grammarR7tgoR12y25:Assets%2Fcentrepiece.jsonR0i960R1R14R5y11:centrepieceR7tgoR12y20:Assets%2Fenglish.txtR0i6103R1R14R5y7:englishR7tgoR12y18:Assets%2Felven.txtR0i332R1R14R5y5:elvenR7tgoR12y20:Assets%2Fdemonic.txtR0i677R1R14R5y7:demonicR7tgoR12y23:Assets%2Fgiven_male.txtR0i808R1R14R5y4:maleR7tgoR12y25:Assets%2Fgiven_female.txtR0i665R1R14R5y6:femaleR7tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
          yb.rootPath,
        );
        a = Qb.fromManifest(a);
        Ka.registerLibrary('default', a);
        a = Ka.getLibrary('default');
        null != a
          ? yb.preloadLibraries.push(a)
          : yb.preloadLibraryNames.push('default');
      };
      var cb = function (a) {
        null != a && (this.name = a);
        this.__init ||
          (void 0 == this.ascender && (this.ascender = 0),
          void 0 == this.descender && (this.descender = 0),
          void 0 == this.height && (this.height = 0),
          void 0 == this.numGlyphs && (this.numGlyphs = 0),
          void 0 == this.underlinePosition && (this.underlinePosition = 0),
          void 0 == this.underlineThickness && (this.underlineThickness = 0),
          void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
          null != this.__fontID
            ? Ka.isLocal(this.__fontID) &&
              this.__fromBytes(Ka.getBytes(this.__fontID))
            : null != this.__fontPath && this.__fromFile(this.__fontPath));
      };
      h['lime.text.Font'] = cb;
      cb.__name__ = 'lime.text.Font';
      cb.fromFile = function (a) {
        if (null == a) return null;
        var b = new cb();
        b.__fromFile(a);
        return b;
      };
      cb.loadFromName = function (a) {
        return new cb().__loadFromName(a);
      };
      cb.__measureFontNode = function (a) {
        var b = window.document.createElement('span');
        b.setAttribute('aria-hidden', 'true');
        var c = window.document.createTextNode('BESbswy');
        b.appendChild(c);
        c = b.style;
        c.display = 'block';
        c.position = 'absolute';
        c.top = '-9999px';
        c.left = '-9999px';
        c.fontSize = '300px';
        c.width = 'auto';
        c.height = 'auto';
        c.lineHeight = 'normal';
        c.margin = '0';
        c.padding = '0';
        c.fontVariant = 'normal';
        c.whiteSpace = 'nowrap';
        c.fontFamily = a;
        window.document.body.appendChild(b);
        return b;
      };
      cb.prototype = {
        __copyFrom: function (a) {
          null != a &&
            ((this.ascender = a.ascender),
            (this.descender = a.descender),
            (this.height = a.height),
            (this.name = a.name),
            (this.numGlyphs = a.numGlyphs),
            (this.src = a.src),
            (this.underlinePosition = a.underlinePosition),
            (this.underlineThickness = a.underlineThickness),
            (this.unitsPerEM = a.unitsPerEM),
            (this.__fontID = a.__fontID),
            (this.__fontPath = a.__fontPath),
            (this.__init = !0));
        },
        __fromBytes: function (a) {
          this.__fontPath = null;
        },
        __fromFile: function (a) {
          this.__fontPath = a;
        },
        __loadFromName: function (a) {
          var b = this,
            c = new Ed();
          this.name = a;
          var d = z.navigator.userAgent.toLowerCase(),
            f = 0 <= d.indexOf(' safari/') && 0 > d.indexOf(' chrome/');
          d = new Ba('(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)', 'i').match(
            d,
          );
          if (
            !f &&
            !d &&
            window.document.fonts &&
            ((E = window.document.fonts), m(E, E.load))
          )
            window.document.fonts.load("1em '" + a + "'").then(
              function (a) {
                c.complete(b);
              },
              function (d) {
                La.warn('Could not load web font "' + a + '"', {
                  fileName: 'lime/text/Font.hx',
                  lineNumber: 640,
                  className: 'lime.text.Font',
                  methodName: '__loadFromName',
                });
                c.complete(b);
              },
            );
          else {
            var g = cb.__measureFontNode("'" + a + "', sans-serif"),
              k = cb.__measureFontNode("'" + a + "', serif"),
              q = g.offsetWidth,
              p = k.offsetWidth,
              l = -1,
              h = 0,
              n,
              t;
            l = window.setInterval(function () {
              h += 1;
              n = g.offsetWidth != q || k.offsetWidth != p;
              t = 3e3 <= 50 * h;
              if (n || t)
                (window.clearInterval(l),
                  g.parentNode.removeChild(g),
                  k.parentNode.removeChild(k),
                  (k = g = null),
                  t &&
                    La.warn('Could not load web font "' + a + '"', {
                      fileName: 'lime/text/Font.hx',
                      lineNumber: 675,
                      className: 'lime.text.Font',
                      methodName: '__loadFromName',
                    }),
                  c.complete(b));
            }, 50);
          }
          return c.future;
        },
        __class__: cb,
      };
      var Fa = (v.__ASSET__assets_sharetech_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 256;
        this.underlinePosition = -100;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Regular';
        cb.call(this);
      });
      h.__ASSET__assets_sharetech_regular_ttf = Fa;
      Fa.__name__ = '__ASSET__assets_sharetech_regular_ttf';
      Fa.__super__ = cb;
      Fa.prototype = u(cb.prototype, { __class__: Fa });
      var Pa = (v.__ASSET__assets_sharetechmono_regular_ttf = function () {
        this.ascender = 885;
        this.descender = -242;
        this.height = 1127;
        this.numGlyphs = 268;
        this.underlinePosition = -135;
        this.underlineThickness = 50;
        this.unitsPerEM = 1e3;
        this.name = 'Share Tech Mono';
        cb.call(this);
      });
      h.__ASSET__assets_sharetechmono_regular_ttf = Pa;
      Pa.__name__ = '__ASSET__assets_sharetechmono_regular_ttf';
      Pa.__super__ = cb;
      Pa.prototype = u(cb.prototype, { __class__: Pa });
      var Qa = (v.__ASSET__assets_neucha_regular_ttf = function () {
        this.ascender = 787;
        this.descender = -292;
        this.height = 1128;
        this.numGlyphs = 285;
        this.underlinePosition = -101;
        this.underlineThickness = 51;
        this.unitsPerEM = 1024;
        this.name = 'Neucha';
        cb.call(this);
      });
      h.__ASSET__assets_neucha_regular_ttf = Qa;
      Qa.__name__ = '__ASSET__assets_neucha_regular_ttf';
      Qa.__super__ = cb;
      Qa.prototype = u(cb.prototype, { __class__: Qa });
      var la = function (a) {
        cb.call(this, a);
      };
      h['openfl.text.Font'] = la;
      la.__name__ = 'openfl.text.Font';
      la.fromFile = function (a) {
        if (null == a) return null;
        var b = new la();
        b.__fromFile(a);
        return b;
      };
      la.loadFromName = function (a) {
        return cb.loadFromName(a).then(function (a) {
          var b = new la();
          b.__fromLimeFont(a);
          return qc.withValue(b);
        });
      };
      la.registerFont = function (a) {
        a =
          null == xa.getClass(a)
            ? xa.__cast(y.createInstance(a, []), la)
            : xa.__cast(a, la);
        null != a &&
          (la.__registeredFonts.push(a), (la.__fontByName.h[a.name] = a));
      };
      la.__super__ = cb;
      la.prototype = u(cb.prototype, {
        __fromLimeFont: function (a) {
          this.__copyFrom(a);
        },
        __class__: la,
      });
      var S = (v.__ASSET__OPENFL__assets_sharetech_regular_ttf = function () {
        this.__fromLimeFont(new Fa());
        cb.call(this, void 0);
      });
      h.__ASSET__OPENFL__assets_sharetech_regular_ttf = S;
      S.__name__ = '__ASSET__OPENFL__assets_sharetech_regular_ttf';
      S.__super__ = la;
      S.prototype = u(la.prototype, { __class__: S });
      var U = (v.__ASSET__OPENFL__assets_sharetechmono_regular_ttf =
        function () {
          this.__fromLimeFont(new Pa());
          cb.call(this, void 0);
        });
      h.__ASSET__OPENFL__assets_sharetechmono_regular_ttf = U;
      U.__name__ = '__ASSET__OPENFL__assets_sharetechmono_regular_ttf';
      U.__super__ = la;
      U.prototype = u(la.prototype, { __class__: U });
      var id = (v.__ASSET__OPENFL__assets_neucha_regular_ttf = function () {
        this.__fromLimeFont(new Qa());
        cb.call(this, void 0);
      });
      h.__ASSET__OPENFL__assets_neucha_regular_ttf = id;
      id.__name__ = '__ASSET__OPENFL__assets_neucha_regular_ttf';
      id.__super__ = la;
      id.prototype = u(la.prototype, { __class__: id });
      Math.__name__ = 'Math';
      var ya = function () {};
      h.Reflect = ya;
      ya.__name__ = 'Reflect';
      ya.field = function (a, b) {
        try {
          return a[b];
        } catch (c) {
          return ((Ua.lastError = c), null);
        }
      };
      ya.getProperty = function (a, b) {
        var c;
        if (null == a) return null;
        var d = a.__properties__ ? (c = a.__properties__['get_' + b]) : !1;
        return d ? a[c]() : a[b];
      };
      ya.fields = function (a) {
        var b = [];
        if (null != a) {
          var c = Object.prototype.hasOwnProperty,
            d;
          for (d in a)
            '__id__' != d && 'hx__closures__' != d && c.call(a, d) && b.push(d);
        }
        return b;
      };
      ya.isFunction = function (a) {
        return 'function' == typeof a ? !(a.__name__ || a.__ename__) : !1;
      };
      ya.compare = function (a, b) {
        return a == b ? 0 : a > b ? 1 : -1;
      };
      ya.deleteField = function (a, b) {
        if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
        delete a[b];
        return !0;
      };
      var I = function () {};
      h.Std = I;
      I.__name__ = 'Std';
      I.string = function (a) {
        return xa.__string_rec(a, '');
      };
      I.parseInt = function (a) {
        a = parseInt(a);
        return isNaN(a) ? null : a;
      };
      I.random = function (a) {
        return 0 >= a ? 0 : Math.floor(Math.random() * a);
      };
      var vb = function () {};
      h['_String.String_Impl_'] = vb;
      vb.__name__ = '_String.String_Impl_';
      vb.fromCharCode = function (a) {
        return String.fromCodePoint(a);
      };
      var G = function () {
        this.b = '';
      };
      h.StringBuf = G;
      G.__name__ = 'StringBuf';
      G.prototype = { __class__: G };
      var P = function () {};
      h.StringTools = P;
      P.__name__ = 'StringTools';
      P.htmlEscape = function (a, b) {
        for (var c = '', d = 0, f = a; d < f.length; ) {
          a = f;
          var g = d++,
            k = a.charCodeAt(g);
          55296 <= k &&
            56319 >= k &&
            (k = ((k - 55232) << 10) | (a.charCodeAt(g + 1) & 1023));
          a = k;
          65536 <= a && ++d;
          switch (a) {
            case 34:
              c = b ? c + '&quot;' : c + String.fromCodePoint(a);
              break;
            case 38:
              c += '&amp;';
              break;
            case 39:
              c = b ? c + '&#039;' : c + String.fromCodePoint(a);
              break;
            case 60:
              c += '&lt;';
              break;
            case 62:
              c += '&gt;';
              break;
            default:
              c += String.fromCodePoint(a);
          }
        }
        return c;
      };
      P.htmlUnescape = function (a) {
        return a
          .split('&gt;')
          .join('>')
          .split('&lt;')
          .join('<')
          .split('&quot;')
          .join('"')
          .split('&#039;')
          .join("'")
          .split('&amp;')
          .join('&');
      };
      P.startsWith = function (a, b) {
        return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1;
      };
      P.endsWith = function (a, b) {
        var c = b.length,
          d = a.length;
        return d >= c ? a.indexOf(b, d - c) == d - c : !1;
      };
      P.isSpace = function (a, b) {
        a = R.cca(a, b);
        return 8 < a && 14 > a ? !0 : 32 == a;
      };
      P.ltrim = function (a) {
        for (var b = a.length, c = 0; c < b && P.isSpace(a, c); ) ++c;
        return 0 < c ? R.substr(a, c, b - c) : a;
      };
      P.rtrim = function (a) {
        for (var b = a.length, c = 0; c < b && P.isSpace(a, b - c - 1); ) ++c;
        return 0 < c ? R.substr(a, 0, b - c) : a;
      };
      P.trim = function (a) {
        return P.ltrim(P.rtrim(a));
      };
      P.lpad = function (a, b, c) {
        if (0 >= b.length) return a;
        var d = '';
        for (c -= a.length; d.length < c; ) d += null == b ? 'null' : '' + b;
        return d + (null == a ? 'null' : '' + a);
      };
      P.replace = function (a, b, c) {
        return a.split(b).join(c);
      };
      P.hex = function (a, b) {
        var c = '';
        do ((c = '0123456789ABCDEF'.charAt(a & 15) + c), (a >>>= 4));
        while (0 < a);
        if (null != b) for (; c.length < b; ) c = '0' + c;
        return c;
      };
      var N = (L.ValueType = {
        __ename__: 'ValueType',
        __constructs__: null,
        TNull: {
          _hx_name: 'TNull',
          _hx_index: 0,
          __enum__: 'ValueType',
          toString: r,
        },
        TInt: {
          _hx_name: 'TInt',
          _hx_index: 1,
          __enum__: 'ValueType',
          toString: r,
        },
        TFloat: {
          _hx_name: 'TFloat',
          _hx_index: 2,
          __enum__: 'ValueType',
          toString: r,
        },
        TBool: {
          _hx_name: 'TBool',
          _hx_index: 3,
          __enum__: 'ValueType',
          toString: r,
        },
        TObject: {
          _hx_name: 'TObject',
          _hx_index: 4,
          __enum__: 'ValueType',
          toString: r,
        },
        TFunction: {
          _hx_name: 'TFunction',
          _hx_index: 5,
          __enum__: 'ValueType',
          toString: r,
        },
        TClass:
          ((E = function (a) {
            return { _hx_index: 6, c: a, __enum__: 'ValueType', toString: r };
          }),
          (E._hx_name = 'TClass'),
          (E.__params__ = ['c']),
          E),
        TEnum:
          ((E = function (a) {
            return { _hx_index: 7, e: a, __enum__: 'ValueType', toString: r };
          }),
          (E._hx_name = 'TEnum'),
          (E.__params__ = ['e']),
          E),
        TUnknown: {
          _hx_name: 'TUnknown',
          _hx_index: 8,
          __enum__: 'ValueType',
          toString: r,
        },
      });
      N.__constructs__ = [
        N.TNull,
        N.TInt,
        N.TFloat,
        N.TBool,
        N.TObject,
        N.TFunction,
        N.TClass,
        N.TEnum,
        N.TUnknown,
      ];
      N.__empty_constructs__ = [
        N.TNull,
        N.TInt,
        N.TFloat,
        N.TBool,
        N.TObject,
        N.TFunction,
        N.TUnknown,
      ];
      var y = function () {};
      h.Type = y;
      y.__name__ = 'Type';
      y.resolveEnum = function (a) {
        return L[a];
      };
      y.createInstance = function (a, b) {
        return new (Function.prototype.bind.apply(a, [null].concat(b)))();
      };
      y.createEnum = function (a, b, c) {
        var d = ya.field(a, b);
        if (null == d) throw aa.thrown('No such constructor ' + b);
        if (ya.isFunction(d)) {
          if (null == c)
            throw aa.thrown('Constructor ' + b + ' need parameters');
          return d.apply(a, c);
        }
        if (null != c && 0 != c.length)
          throw aa.thrown('Constructor ' + b + ' does not need parameters');
        return d;
      };
      y.typeof = function (a) {
        switch (typeof a) {
          case 'boolean':
            return N.TBool;
          case 'function':
            return a.__name__ || a.__ename__ ? N.TObject : N.TFunction;
          case 'number':
            return Math.ceil(a) == a % 2147483648 ? N.TInt : N.TFloat;
          case 'object':
            if (null == a) return N.TNull;
            var b = a.__enum__;
            if (null != b) return N.TEnum(L[b]);
            a = xa.getClass(a);
            return null != a ? N.TClass(a) : N.TObject;
          case 'string':
            return N.TClass(String);
          case 'undefined':
            return N.TNull;
          default:
            return N.TUnknown;
        }
      };
      y.enumParameters = function (a) {
        var b = L[a.__enum__].__constructs__[a._hx_index].__params__;
        if (null != b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            c.push(a[f]);
          }
          return c;
        }
        return [];
      };
      var db = {
          gt: function (a, b) {
            var c = 0 > a;
            return c != 0 > b ? c : a > b;
          },
          toFloat: function (a) {
            return 0 > a ? 4294967296 + a : a + 0;
          },
        },
        hb = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'Element';
              case 1:
                return 'PCData';
              case 2:
                return 'CData';
              case 3:
                return 'Comment';
              case 4:
                return 'DocType';
              case 5:
                return 'ProcessingInstruction';
              case 6:
                return 'Document';
            }
          },
        },
        ia = function (a) {
          this.nodeType = a;
          this.children = [];
          this.attributeMap = new Ja();
        };
      h.Xml = ia;
      ia.__name__ = 'Xml';
      ia.parse = function (a) {
        return pf.parse(a);
      };
      ia.createElement = function (a) {
        var b = new ia(ia.Element);
        if (b.nodeType != ia.Element)
          throw aa.thrown(
            'Bad node type, expected Element but found ' +
              (null == b.nodeType ? 'null' : hb.toString(b.nodeType)),
          );
        b.nodeName = a;
        return b;
      };
      ia.createPCData = function (a) {
        var b = new ia(ia.PCData);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element)
          throw aa.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : hb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      ia.createCData = function (a) {
        var b = new ia(ia.CData);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element)
          throw aa.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : hb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      ia.createComment = function (a) {
        var b = new ia(ia.Comment);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element)
          throw aa.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : hb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      ia.createDocType = function (a) {
        var b = new ia(ia.DocType);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element)
          throw aa.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : hb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      ia.createProcessingInstruction = function (a) {
        var b = new ia(ia.ProcessingInstruction);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element)
          throw aa.thrown(
            'Bad node type, unexpected ' +
              (null == b.nodeType ? 'null' : hb.toString(b.nodeType)),
          );
        b.nodeValue = a;
        return b;
      };
      ia.createDocument = function () {
        return new ia(ia.Document);
      };
      ia.prototype = {
        get: function (a) {
          if (this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          return this.attributeMap.h[a];
        },
        set: function (a, b) {
          if (this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          this.attributeMap.h[a] = b;
        },
        remove: function (a) {
          if (this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          var b = this.attributeMap;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
        },
        exists: function (a) {
          if (this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a);
        },
        attributes: function () {
          if (this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          return new Uh(this.attributeMap.h);
        },
        firstElement: function () {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          for (var a = 0, b = this.children; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.nodeType == ia.Element) return c;
          }
          return null;
        },
        addChild: function (a) {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          null != a.parent && a.parent.removeChild(a);
          this.children.push(a);
          a.parent = this;
        },
        removeChild: function (a) {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == this.nodeType ? 'null' : hb.toString(this.nodeType)),
            );
          return R.remove(this.children, a) ? ((a.parent = null), !0) : !1;
        },
        toString: function () {
          return Vf.print(this);
        },
        __class__: ia,
      };
      var Pc = function () {
        this.keyShift = this.keyCtrl = this.isSolid = !1;
        this.rWidth = this.rHeight = 0;
        this.update = new Ac();
        this.keyEvent = new sg();
        T.call(this);
      };
      h['com.watabou.coogee.Scene'] = Pc;
      Pc.__name__ = 'com.watabou.coogee.Scene';
      Pc.__super__ = T;
      Pc.prototype = u(T.prototype, {
        activate: function () {
          sb.get_tick().add(m(this, this.onUpdate));
          this.stage.addEventListener('keyDown', m(this, this.onKeyDown));
          this.stage.addEventListener('keyUp', m(this, this.onKeyUp));
        },
        deactivate: function () {
          sb.get_tick().remove(m(this, this.onUpdate));
          this.stage.removeEventListener('keyDown', m(this, this.onKeyDown));
          this.stage.removeEventListener('keyUp', m(this, this.onKeyUp));
        },
        onEsc: function () {
          ib.quit();
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !0;
              break;
            case 16:
              this.keyShift = !0;
              break;
            case 27:
              this.onEsc();
          }
          this.keyEvent.dispatch(a.keyCode, !0);
          null == this.stage ||
            this.stage.get_focus() instanceof Qc ||
            a.preventDefault();
        },
        onKeyUp: function (a) {
          switch (a.keyCode) {
            case 15:
            case 17:
              this.keyCtrl = !1;
              break;
            case 16:
              this.keyShift = !1;
          }
          this.keyEvent.dispatch(a.keyCode, !1);
          this.stage.get_focus() instanceof Qc || a.preventDefault();
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        get_width: function () {
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        layout: function () {},
        onUpdate: function (a) {
          this.update.dispatch(a);
        },
        __hitTest: function (a, b, c, d, f, g) {
          a = T.prototype.__hitTest.call(this, a, b, c, d, f, g);
          return this.isSolid ? (a || d.push(g), !0) : a;
        },
        __class__: Pc,
      });
      var ha = function () {
        this.valign = 'top';
        this.halign = 'left';
        this.rWidth = this.rHeight = 0;
        T.call(this);
      };
      h['com.watabou.coogee.ui.View'] = ha;
      ha.__name__ = 'com.watabou.coogee.ui.View';
      ha.__super__ = T;
      ha.prototype = u(T.prototype, {
        get_width: function () {
          return this.rWidth;
        },
        set_width: function (a) {
          this.setSize(a, this.rHeight);
          return this.rWidth;
        },
        get_height: function () {
          return this.rHeight;
        },
        set_height: function (a) {
          this.setSize(this.rWidth, a);
          return this.rHeight;
        },
        setSize: function (a, b) {
          this.rWidth = a;
          this.rHeight = b;
          this.layout();
        },
        layout: function () {},
        add: function (a) {
          this.addChild(a);
        },
        set_enabled: function (a) {
          return (this.mouseEnabled = this.mouseChildren = a);
        },
        __class__: ha,
        __properties__: u(T.prototype.__properties__, {
          set_enabled: 'set_enabled',
        }),
      });
      var Zb = function () {
        this.click = new he();
        ha.call(this);
        this.label = this.createLabel();
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.setSize(this.label.get_width() + 10, this.label.get_height() + 10);
      };
      h['com.watabou.coogee.ui.ButtonBase'] = Zb;
      Zb.__name__ = 'com.watabou.coogee.ui.ButtonBase';
      Zb.__super__ = ha;
      Zb.prototype = u(ha.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(C.black);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            10,
          );
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        createLabel: function () {
          return null;
        },
        onClick: function (a) {
          this.click.dispatch();
          a.stopPropagation();
        },
        __class__: Zb,
      });
      var kb = function (a, b) {
        this.txtLabel = a;
        Zb.call(this);
        null != b && this.click.add(b);
      };
      h['com.watabou.coogee.ui.Button'] = kb;
      kb.__name__ = 'com.watabou.coogee.ui.Button';
      kb.__super__ = Zb;
      kb.prototype = u(Zb.prototype, {
        createLabel: function () {
          return rc.get(
            this.txtLabel,
            C.format(C.uiFont, C.smallSize, C.white),
          );
        },
        __class__: kb,
      });
      var gb = function () {
        this.snap = !0;
        this.margin = this.gap = 10;
        ha.call(this);
      };
      h['com.watabou.coogee.ui.layouts.VBox'] = gb;
      gb.__name__ = 'com.watabou.coogee.ui.layouts.VBox';
      gb.__super__ = ha;
      gb.prototype = u(ha.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              c = !1,
              d = 0,
              f = this.get_numChildren();
            d < f;

          ) {
            var g = d++;
            g = this.getChildAt(g);
            'left' != g.halign && (c = !0);
            b < g.get_width() && (b = g.get_width());
            g.set_x(this.margin);
            g.set_y(a);
            a += g.get_height() + this.gap;
            this.snap && (a |= 0);
          }
          if (c)
            for (d = 0, f = this.get_numChildren(); d < f; )
              switch (((g = d++), (g = this.getChildAt(g)), g.halign)) {
                case 'center':
                  g.set_x(this.margin + (b - g.get_width()) / 2);
                  break;
                case 'fill':
                  g.set_width(b);
                  break;
                case 'right':
                  g.set_x(this.margin + (b - g.get_width()));
              }
          this.rHeight =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rWidth = b + 2 * this.margin;
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: gb,
      });
      var ad = function () {
        gb.call(this);
        this.setMargins(0, 0);
        this.addEventListener('keyDown', m(this, this.onKeyDown));
        this.addEventListener('focusOut', m(this, this.onFocusOut));
      };
      h['com.watabou.coogee.ui.Form'] = ad;
      ad.__name__ = 'com.watabou.coogee.ui.Form';
      ad.__super__ = gb;
      ad.prototype = u(gb.prototype, {
        getTitle: function () {
          return null;
        },
        onShow: function () {},
        onHide: function () {},
        onKeyDown: function (a) {
          this.onKey(a.keyCode) && (a.stopPropagation(), a.preventDefault());
        },
        onKey: function (a) {
          switch (a) {
            case 13:
              this.onEnter();
              break;
            case 27:
              this.onEsc();
              break;
            default:
              return !1;
          }
          return !0;
        },
        onEsc: function () {
          this.dialog.hide();
        },
        onEnter: function () {},
        onFocusOut: function (a) {
          null == a.relatedObject && this.stage.set_focus(this);
        },
        __class__: ad,
      });
      var pa = function (a) {
        ad.call(this);
        this.buttons = new De(a);
        this.buttons.click.add(m(this, this.onButton));
        this.addChild(this.buttons);
      };
      h['com.watabou.coogee.ui.ButtonsForm'] = pa;
      pa.__name__ = 'com.watabou.coogee.ui.ButtonsForm';
      pa.__super__ = ad;
      pa.prototype = u(ad.prototype, {
        add: function (a) {
          this.addChild(a);
          this.addChild(this.buttons);
          this.layout();
        },
        layout: function () {
          ad.prototype.layout.call(this);
          this.buttons.set_width(this.rWidth);
          ad.prototype.layout.call(this);
        },
        onButton: function (a) {
          this.dialog.hide();
        },
        onEnter: function () {
          this.onButton('OK');
        },
        onEsc: function () {
          this.onButton('Cancel');
        },
        __class__: pa,
      });
      var bd = function (a) {
        this.changed = new Ac();
        ha.call(this);
        this.border = Wa.black();
        this.add(this.border);
        this.empty = Wa.white();
        this.add(this.empty);
        this.filled = Wa.black();
        this.add(this.filled);
        null != a
          ? ((this.label = new wb(a)),
            (this.label.mouseEnabled = !0),
            (this.label.mouseChildren = !0),
            this.add(this.label),
            this.setSize(
              24 + this.label.get_width(),
              Math.max(20, this.label.get_height()),
            ))
          : this.setSize(20, 20);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
      };
      h['com.watabou.coogee.ui.CheckBox'] = bd;
      bd.__name__ = 'com.watabou.coogee.ui.CheckBox';
      bd.__super__ = ha;
      bd.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(20, 20);
          this.border.set_x(
            null != this.label
              ? 0
              : ((this.rWidth - this.border.get_width()) / 2) | 0,
          );
          this.border.set_y(
            ((this.rHeight - this.border.get_height()) / 2) | 0,
          );
          this.empty.setSize(
            this.border.get_width() - 4,
            this.border.get_height() - 4,
          );
          this.empty.set_x(this.border.get_x() + 2);
          this.empty.set_y(this.border.get_y() + 2);
          this.filled.setSize(
            this.empty.get_width() - 4,
            this.empty.get_height() - 4,
          );
          this.filled.set_x(this.empty.get_x() + 2);
          this.filled.set_y(this.empty.get_y() + 2);
          null != this.label && this.label.set_x(this.border.get_width() + 4);
        },
        get_value: function () {
          return this.filled.get_visible();
        },
        set_value: function (a) {
          this.filled.set_visible(a);
          return a;
        },
        onClick: function (a) {
          this.set_value(!this.get_value());
          this.changed.dispatch(this.get_value());
        },
        set_enabled: function (a) {
          ha.prototype.set_enabled.call(this, a);
          var b = a ? C.black : C.light;
          this.border.bmp.get_bitmapData().setPixel(0, 0, b);
          this.filled.bmp.get_bitmapData().setPixel(0, 0, b);
          null != this.label && this.label.set_color(b);
          return a;
        },
        __class__: bd,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var kd = function (a, b) {
        this.onMinimize = new Ac();
        this.onMove = new Ac();
        this.onHide = new Ac();
        this.minimized = this.minimizable = !1;
        ha.call(this);
        this.bg1 = Wa.black();
        this.addChild(this.bg1);
        this.bg2 = Wa.white();
        this.addChild(this.bg2);
        this.addEventListener('mouseDown', m(this, this.onBringUp));
        this.header = new Vh(b);
        this.header.addEventListener('mouseDown', m(this, this.onStartDrag));
        this.header.addEventListener('click', m(this, this.onClick));
        this.addChild(this.header);
        this.content = a;
        this.addChild(a);
        this.resize();
      };
      h['com.watabou.coogee.ui.Window'] = kd;
      kd.__name__ = 'com.watabou.coogee.ui.Window';
      kd.show = function (a, b, c, d) {
        c = null == d ? new kd(b, c) : y.createInstance(d, [b, c]);
        c.set_x(((a.get_width() - c.get_width()) / 2) | 0);
        c.set_y(((a.get_height() - c.get_height()) / 2) | 0);
        a.addChild(c);
        null != b.stage && b.stage.set_focus(b);
        return c;
      };
      kd.__super__ = ha;
      kd.prototype = u(ha.prototype, {
        resize: function (a) {
          null == a && (a = !1);
          var b = this.content.get_width() + 4,
            c = this.header.get_height() + this.content.get_height() + 2,
            d = a ? ((this.rWidth - b) / 2) | 0 : 0;
          a = a ? ((this.rHeight - c) / 2) | 0 : 0;
          this.setSize(b, c);
          this.set_x(this.get_x() + d);
          this.set_y(this.get_y() + a);
        },
        layout: function () {
          this.header.set_width(this.rWidth);
          this.minimized
            ? (this.bg1.setSize(this.rWidth, this.header.get_height()),
              this.content.set_visible(!1),
              this.bg2.set_visible(!1))
            : (this.bg1.setSize(this.rWidth, this.rHeight),
              this.content.set_visible(!0),
              this.bg2.set_visible(!0),
              this.bg2.setSize(
                this.rWidth - 4,
                this.rHeight - this.header.get_height() - 2,
              ),
              this.content.set_x(this.bg2.set_x(2)),
              this.content.set_y(this.bg2.set_y(this.header.get_height())));
        },
        hide: function () {
          null != this.parent &&
            (this.stage.set_focus(this.stage),
            this.parent.removeChild(this),
            this.onHide.dispatch(this));
        },
        onBringUp: function (a) {
          this.parent.addChild(this);
        },
        onStartDrag: function (a) {
          this.clicked = !0;
          this.stage.addEventListener('mouseMove', m(this, this.onDrag));
          this.stage.addEventListener('mouseUp', m(this, this.onEndDrag));
          this.grabX = this.get_mouseX();
          this.grabY = this.get_mouseY();
        },
        onDrag: function (a) {
          this.clicked = !1;
          this.set_x(this.parent.get_mouseX() - this.grabX);
          this.set_y(this.parent.get_mouseY() - this.grabY);
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', m(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', m(this, this.onEndDrag));
          this.clicked || this.onMove.dispatch(this);
        },
        onClick: function (a) {
          this.clicked &&
            this.minimizable &&
            ((this.minimized = !this.minimized),
            this.layout(),
            this.onMinimize.dispatch(this));
        },
        setTitle: function (a) {
          this.header.setText(a);
        },
        __class__: kd,
      });
      var Ue = function (a, b) {
        a.dialog = this;
        kd.call(this, a, b);
        this.header.close.add(function () {
          a.onEsc();
        });
      };
      h['com.watabou.coogee.ui.Dialog'] = Ue;
      Ue.__name__ = 'com.watabou.coogee.ui.Dialog';
      Ue.show = function (a, b, c) {
        null == c && (c = b.getTitle());
        a = kd.show(a, b, c, Ue);
        b.onShow();
        return a;
      };
      Ue.__super__ = kd;
      Ue.prototype = u(kd.prototype, {
        hide: function () {
          if (null != this.parent) xa.__cast(this.content, ad).onHide();
          kd.prototype.hide.call(this);
        },
        __class__: Ue,
      });
      var cd = function (a, b) {
        this.update = new Ac();
        var c = this;
        this.values = b;
        this.labels = a;
        ha.call(this);
        this.border = Wa.black();
        this.add(this.border);
        this.bg = Wa.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = rc.get('', C.format(C.uiFont, C.normalSize, C.black));
        this.addChild(this.tf);
        this.btn = new ab();
        this.btn.set_width(C.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        for (var d = 0, f = 0, g = 0; g < a.length; ) {
          var k = a[g];
          ++g;
          this.tf.set_text(k);
          d = Math.max(d, this.tf.get_width());
          f = Math.max(f, this.tf.get_height());
        }
        this.tf.set_autoSize(2);
        this.menu = new dc();
        g = [];
        k = 0;
        for (var q = a.length; k < q; ) {
          var p = [k++];
          g.push(
            this.menu.addItem(
              a[p[0]],
              (function (d) {
                return function () {
                  c.onSelect(a[d[0]], b[d[0]]);
                };
              })(p),
            ),
          );
        }
        this.items = g;
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.addEventListener('mouseWheel', m(this, this.onWheel));
        0 < a.length && this.set_text(a[0]);
        this.setSize(Math.ceil(d + this.btn.get_width()), Math.ceil(f));
      };
      h['com.watabou.coogee.ui.DropDown'] = cd;
      cd.__name__ = 'com.watabou.coogee.ui.DropDown';
      cd.ofStrings = function (a) {
        return new cd(a, a);
      };
      cd.__super__ = ha;
      cd.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        set_text: function (a) {
          this.tf.set_text(a);
          return a;
        },
        get_value: function () {
          var a = this.labels.indexOf(this.tf.get_text());
          return -1 == a ? null : this.values[a];
        },
        set_value: function (a) {
          for (var b = 0, c = this.values.length; b < c; ) {
            var d = b++;
            if (this.values[d] == a)
              return (this.tf.set_text(this.labels[d]), a);
          }
          return this.get_value();
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        onClick: function (a) {
          a = this.labels.indexOf(this.tf.get_text());
          for (var b = 0, c = this.items.length; b < c; ) {
            var d = b++;
            this.items[d].setCheck(d == a);
          }
          a = w.getRect(this);
          w.showMenuAt(this.menu, Math.ceil(a.get_left()), a.get_bottom() - 2);
        },
        onWheel: function (a) {
          w.hideMenu();
          var b = this.values.indexOf(this.get_value());
          if (
            -1 != b &&
            ((a = a.delta),
            (b += 0 == a ? 0 : 0 > a ? -1 : 1),
            0 <= b && b < this.values.length)
          )
            this.onSelect(this.labels[b], this.values[b]);
        },
        onSelect: function (a, b) {
          this.stage.set_focus(this);
          this.tf.set_text(a);
          this.update.dispatch(b);
        },
        __class__: cd,
        __properties__: u(ha.prototype.__properties__, {
          set_centered: 'set_centered',
          set_value: 'set_value',
          get_value: 'get_value',
          set_text: 'set_text',
        }),
      });
      var Zd = function (a) {
        ha.call(this);
        this.tf = rc.get(a, C.format(C.uiFont, C.smallSize, C.black));
        this.tf.set_wordWrap(!0);
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      h['com.watabou.coogee.ui.InfoLabel'] = Zd;
      Zd.__name__ = 'com.watabou.coogee.ui.InfoLabel';
      Zd.__super__ = ha;
      Zd.prototype = u(ha.prototype, {
        set_width: function (a) {
          this.tf.set_autoSize(1);
          this.tf.set_width(a + 4);
          var b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(a + 4);
          this.tf.set_height(Math.ceil(b));
          this.rWidth = a;
          this.rHeight = this.tf.get_height() - 4;
          return a;
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
          return a;
        },
        set_color: function (a) {
          return this.tf.set_textColor(a);
        },
        __class__: Zd,
        __properties__: u(ha.prototype.__properties__, {
          set_color: 'set_color',
          set_text: 'set_text',
        }),
      });
      var wb = function (a, b) {
        null == b && (b = !1);
        ha.call(this);
        this.tf = rc.get(
          a,
          C.format(C.uiFont, b ? C.smallSize : C.normalSize, C.black),
        );
        this.tf.set_x(-2);
        this.tf.set_y(-2);
        this.addChild(this.tf);
        this.setSize(this.tf.get_width() - 4, this.tf.get_height() - 4);
      };
      h['com.watabou.coogee.ui.Label'] = wb;
      wb.__name__ = 'com.watabou.coogee.ui.Label';
      wb.__super__ = ha;
      wb.prototype = u(ha.prototype, {
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(this.tf.get_width(), this.tf.get_height());
          return a;
        },
        set_color: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.color = a;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          return a;
        },
        __class__: wb,
        __properties__: u(ha.prototype.__properties__, {
          set_color: 'set_color',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var dc = function () {
        ha.call(this);
        this.bg = Wa.black();
        this.addChild(this.bg);
        this.items = [];
        this.addEventListener('addedToStage', m(this, this.onAdded));
        this.addEventListener('removedFromStage', m(this, this.onRemoved));
      };
      h['com.watabou.coogee.ui.Menu'] = dc;
      dc.__name__ = 'com.watabou.coogee.ui.Menu';
      dc.__super__ = ha;
      dc.prototype = u(ha.prototype, {
        layout: function () {
          for (
            var a = (this.rHeight = this.rWidth = 0), b = this.items;
            a < b.length;

          ) {
            var c = b[a];
            ++a;
            this.rWidth = Math.max(this.rWidth, c.get_width());
            this.rHeight += c.get_height();
          }
          var d = 2;
          a = 0;
          for (b = this.items; a < b.length; )
            ((c = b[a]),
              ++a,
              c.set_width(this.rWidth),
              c.set_x(2),
              c.set_y(d),
              (d += c.get_height()));
          this.rWidth += 4;
          this.rHeight += 4;
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        add: function (a) {
          this.items.push(a);
          this.addChild(a);
          this.layout();
        },
        remove: function (a) {
          R.remove(this.items, a);
          this.removeChild(a);
          this.layout();
        },
        addItem: function (a, b, c) {
          null == c && (c = !1);
          a = new qf(a, null, b);
          a.setCheck(c);
          this.add(a);
          return a;
        },
        addSubmenu: function (a, b) {
          a = new qf(a, b);
          this.add(a);
          return a;
        },
        addSeparator: function () {
          0 < this.items.length &&
            !(this.items[this.items.length - 1] instanceof Ve) &&
            this.add(new Ve());
        },
        hide: function () {
          null != this.submenu && (this.submenu.hide(), (this.submenu = null));
          null != this.parent &&
            (null != this.stage && this.stage.set_focus(this.stage),
            this.parent.removeChild(this));
        },
        getRoot: function () {
          return null != this.parentMenu ? this.parentMenu.getRoot() : this;
        },
        onMouseDown: function (a) {
          this.hitTestPoint(this.stage.get_mouseX(), this.stage.get_mouseY()) ||
            this.hide();
        },
        onAdded: function (a) {
          this.stage.addEventListener('mouseDown', m(this, this.onMouseDown));
          this.stage.addEventListener(
            'rightMouseDown',
            m(this, this.onMouseDown),
          );
        },
        onRemoved: function (a) {
          this.stage.removeEventListener(
            'mouseDown',
            m(this, this.onMouseDown),
          );
          this.stage.removeEventListener(
            'rightMouseDown',
            m(this, this.onMouseDown),
          );
        },
        cancel: function () {
          null != this.submenu &&
            (this.submenu.cancel(),
            this.parent.removeChild(this.submenu),
            (this.submenu = null));
        },
        hover: function (a, b) {
          this.cancel();
          if (null != b) {
            b.parentMenu = this;
            this.submenu = b;
            var c = a.get_x() + a.rWidth,
              d = a.get_y() - 2,
              f = new B(c, d);
            f = this.parent.globalToLocal(this.localToGlobal(f));
            if (this.parent == w.layer) {
              var g = !1;
              f.x + b.get_width() > this.parent.get_width() &&
                ((c = a.get_x() - b.get_width()), (g = !0));
              f.y + b.get_height() > this.parent.get_height() &&
                ((d = a.get_y() + a.rHeight - b.get_height() + 2), (g = !0));
              g &&
                ((f.x = c),
                (f.y = d),
                (f = this.parent.globalToLocal(this.localToGlobal(f))));
            }
            b.set_x(f.x);
            b.set_y(f.y);
            this.parent.addChild(b);
          }
        },
        __class__: dc,
      });
      var qf = function (a, b, c) {
        var d = this;
        ha.call(this);
        this.submenu = b;
        this.callback = c;
        this.bg = Wa.white();
        this.addChild(this.bg);
        this.bullet = Wa.black();
        this.bullet.set_visible(!1);
        this.bullet.setSize(8, 8);
        this.addChild(this.bullet);
        c = null == c && null == b;
        this.formatNormal = C.format(
          C.uiFont,
          C.smallSize,
          c ? C.medium : C.black,
        );
        this.formatHover = C.format(C.uiFont, C.smallSize, C.white);
        this.tf = rc.get(a, this.formatNormal);
        this.addChild(this.tf);
        null != b &&
          ((this.sub = rc.get(' >', this.formatNormal)),
          this.addChild(this.sub));
        this.addEventListener('mouseDown', function (a) {
          a.stopPropagation();
        });
        c ||
          (this.set_buttonMode(!0),
          this.addEventListener('rollOver', function (a) {
            d.hover(!0);
          }),
          this.addEventListener('rollOut', function (a) {
            d.hover(!1);
          }),
          this.addEventListener('click', m(this, this.onClick)));
        a = Math.round(C.normalSize / 4);
        this.bullet.set_x(a);
        this.tf.set_x(a + this.bullet.get_width() + a - 2);
        null != b
          ? (this.sub.set_x(this.tf.get_x() + this.tf.get_width() - 4),
            (this.rWidth = this.sub.get_x() + (this.sub.get_width() - 4) + a))
          : (this.rWidth =
              a + this.bullet.get_width() + a + (this.tf.get_width() - 4) + a);
        this.rHeight = 1.5 * C.normalSize;
        this.rWidth = Math.ceil(this.rWidth);
        this.rHeight = Math.ceil(this.rHeight);
        this.layout();
      };
      h['com.watabou.coogee.ui.MenuItem'] = qf;
      qf.__name__ = 'com.watabou.coogee.ui.MenuItem';
      qf.__super__ = ha;
      qf.prototype = u(ha.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.bullet.set_y((this.rHeight - this.bullet.get_height()) / 2);
          this.tf.set_y((this.rHeight - this.tf.get_height()) / 2);
          null != this.sub &&
            (this.sub.set_y(this.tf.get_y()),
            this.sub.set_x(
              this.rWidth - this.bullet.get_x() - this.sub.get_width() + 2,
            ));
        },
        hover: function (a) {
          null != this.get_root() &&
            (this.highlight(a),
            xa.__cast(this.parent, dc).hover(this, this.submenu));
        },
        highlight: function (a) {
          var b = a ? this.formatHover : this.formatNormal;
          this.tf.set_defaultTextFormat(b);
          var c = a ? C.black : C.white;
          this.bg.bmp.get_bitmapData().setPixel(0, 0, c);
          c = a ? C.white : C.black;
          this.bullet.bmp.get_bitmapData().setPixel(0, 0, c);
          null != this.submenu && this.sub.set_defaultTextFormat(b);
        },
        onClick: function (a) {
          null == this.submenu
            ? (a.stopPropagation(),
              this.highlight(!1),
              xa.__cast(this.parent, dc).getRoot().hide(),
              null != this.callback && this.callback())
            : xa
                .__cast(this.parent, dc)
                .hover(this, null == this.submenu.parent ? this.submenu : null);
        },
        setCheck: function (a) {
          this.bullet.set_visible(a);
          return this;
        },
        __class__: qf,
      });
      var Wa = function (a, b) {
        null == b && (b = 1);
        ha.call(this);
        this.set_alpha(b);
        this.bmp = new Ee(new $b(1, 1, !1, a));
        this.addChild(this.bmp);
      };
      h['com.watabou.coogee.ui.SolidRect'] = Wa;
      Wa.__name__ = 'com.watabou.coogee.ui.SolidRect';
      Wa.black = function () {
        return new Wa(C.black);
      };
      Wa.dark = function () {
        return new Wa(C.dark);
      };
      Wa.light = function () {
        return new Wa(C.light);
      };
      Wa.white = function () {
        return new Wa(C.white);
      };
      Wa.__super__ = ha;
      Wa.prototype = u(ha.prototype, {
        layout: function () {
          this.bmp.set_width(this.rWidth);
          this.bmp.set_height(this.rHeight);
        },
        __class__: Wa,
      });
      var Ve = function () {
        Wa.call(this, C.black);
        this.setSize(2, 2);
      };
      h['com.watabou.coogee.ui.MenuSeparator'] = Ve;
      Ve.__name__ = 'com.watabou.coogee.ui.MenuSeparator';
      Ve.__super__ = Wa;
      Ve.prototype = u(Wa.prototype, { __class__: Ve });
      var ie = function (a, b, c) {
        this.action = new Ac();
        var d = this;
        this.txtLabel = a;
        Zb.call(this);
        this.menu = new dc();
        a = 0;
        for (var f = b.length; a < f; ) {
          var g = a++,
            k = b[g];
          this.menu.addItem(
            k,
            (function (a) {
              return function () {
                d.action.dispatch(a[0]);
              };
            })([null != c ? c[g] : k]),
          );
        }
      };
      h['com.watabou.coogee.ui.MultiAction'] = ie;
      ie.__name__ = 'com.watabou.coogee.ui.MultiAction';
      ie.__super__ = Zb;
      ie.prototype = u(Zb.prototype, {
        createLabel: function () {
          var a = new Xc();
          a.setMargins(2, 4);
          var b = new wb(this.txtLabel, !0);
          b.set_color(C.white);
          a.add(b);
          b = new ab(C.white);
          b.mouseEnabled = !1;
          b.mouseChildren = !1;
          b.valign = 'fill';
          a.add(b);
          return a;
        },
        onClick: function (a) {
          Zb.prototype.onClick.call(this, a);
          a = w.getRect(this);
          w.showMenuAt(this.menu, a.get_left(), a.get_bottom());
        },
        __class__: ie,
      });
      var ld = function (a, b, c) {
        null == c && (c = 0);
        null == b && (b = 100);
        null == a && (a = 0);
        this.submit = new Ac();
        this.change = new Ac();
        this.cycled = !1;
        ha.call(this);
        this.min = a;
        this.max = b;
        this.rounding = Math.pow(10, c);
        this.bg = new T();
        this.bg.addEventListener('mouseDown', m(this, this.onPage));
        this.addChild(this.bg);
        this.scale = Wa.black();
        this.scale.mouseEnabled = !1;
        this.add(this.scale);
        this.thumb = Wa.black();
        this.thumb.set_buttonMode(!0);
        this.thumb.addEventListener('mouseDown', m(this, this.onStartDrag));
        this.add(this.thumb);
        this.addEventListener('mouseWheel', m(this, this.onWheel));
        this._value = a;
        this._prev = NaN;
        this.setSize(200, 20);
      };
      h['com.watabou.coogee.ui.Slider'] = ld;
      ld.__name__ = 'com.watabou.coogee.ui.Slider';
      ld.__super__ = ha;
      ld.prototype = u(ha.prototype, {
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = this.cycled
            ? ac.cycle(a, this.min, this.max)
            : ac.gate(a, this.min, this.max);
          this._value = Math.round(this._value * this.rounding) / this.rounding;
          this._prev != this._value &&
            ((this._prev = this._value),
            this.placeThumb(),
            this.change.dispatch(this._value));
          return a;
        },
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(16711680, 0);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.scale.setSize(this.rWidth, 2);
          this.scale.set_y(((this.rHeight - this.scale.get_height()) / 2) | 0);
          this.thumb.setSize(10, this.rHeight);
          this.thumb.set_y(((this.rHeight - this.thumb.get_height()) / 2) | 0);
          this.placeThumb();
        },
        placeThumb: function () {
          this.thumb.set_x(
            ((this.rWidth - this.thumb.get_width()) *
              (this.get_value() - this.min)) /
              (this.max - this.min),
          );
        },
        onStartDrag: function (a) {
          this.stage.addEventListener('mouseMove', m(this, this.onDrag));
          this.stage.addEventListener('mouseUp', m(this, this.onEndDrag));
          this.grabX = this.thumb.get_mouseX();
        },
        onDrag: function (a) {
          this.set_value(
            ((this.get_mouseX() - this.grabX) /
              (this.rWidth - this.thumb.get_width())) *
              (this.max - this.min) +
              this.min,
          );
          a.updateAfterEvent();
        },
        onEndDrag: function (a) {
          this.stage.removeEventListener('mouseMove', m(this, this.onDrag));
          this.stage.removeEventListener('mouseUp', m(this, this.onEndDrag));
          this.submit.dispatch(this.get_value());
        },
        onPage: function (a) {
          a = this.get_value();
          this.get_mouseX() < this.thumb.get_x()
            ? this.set_value(this.get_value() - 0.1 * (this.max - this.min))
            : this.get_mouseX() > this.thumb.get_x() + this.thumb.get_width() &&
              this.set_value(this.get_value() + 0.1 * (this.max - this.min));
          a != this.get_value() && this.submit.dispatch(this.get_value());
        },
        onWheel: function (a) {
          var b = this.get_value(),
            c = this.get_value();
          a = a.delta;
          this.set_value(c + (0 == a ? 0 : 0 > a ? -1 : 1) / this.rounding);
          b != this.get_value() && this.submit.dispatch(this.get_value());
        },
        __class__: ld,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Ab = function (a, b) {
        null == b && (b = !1);
        this.enter = new Ac();
        this.update = new Ac();
        ha.call(this);
        this.tf = rc.input(
          a,
          C.format(C.uiFont, C.normalSize, C.black),
          m(this, this.onUpdate),
        );
        this.tf.set_backgroundColor(C.white);
        this.tf.set_borderColor(C.black);
        this.tf.set_autoSize(2);
        this.tf.set_wordWrap(!0);
        this.tf.set_multiline(b);
        this.addChild(this.tf);
        this.addEventListener('focusIn', m(this, this.onFocusIn));
        this.tf.addEventListener('keyDown', m(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      h['com.watabou.coogee.ui.TextArea'] = Ab;
      Ab.__name__ = 'com.watabou.coogee.ui.TextArea';
      Ab.__super__ = ha;
      Ab.prototype = u(ha.prototype, {
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
        },
        get_text: function () {
          return this.tf.get_text();
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
          this.tf.setSelection(
            this.tf.get_text().length,
            this.tf.get_text().length,
          );
        },
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onUpdate: function () {
          this.update.dispatch(this.tf.get_text());
        },
        setLines: function (a) {
          var b = '' == this.tf.get_text();
          b && this.tf.set_text('1');
          var c = this.tf.getLineMetrics(0).height;
          this.rHeight = this.tf.set_height(Math.ceil(c * a + 4));
          b && this.tf.set_text('');
        },
        __class__: Ab,
        __properties__: u(ha.prototype.__properties__, {
          get_text: 'get_text',
        }),
      });
      var mc = function (a, b) {
        null == b && (b = !1);
        null == a && (a = '');
        this.leave = new he();
        this.enter = new Ac();
        this.update = new Ac();
        ha.call(this);
        this.tf = rc.input(
          a,
          C.format(b ? C.uiFontMono : C.uiFont, C.normalSize, C.black),
          m(this, this.onUpdate),
        );
        this.tf.set_backgroundColor(C.white);
        this.tf.set_borderColor(C.black);
        this.addChild(this.tf);
        this.addEventListener('focusIn', m(this, this.onFocusIn));
        this.addEventListener('focusOut', m(this, this.onFocusOut));
        this.addEventListener('keyDown', m(this, this.onKeyDown));
        this.setSize(this.tf.get_width(), this.tf.get_height());
      };
      h['com.watabou.coogee.ui.TextInput'] = mc;
      mc.__name__ = 'com.watabou.coogee.ui.TextInput';
      mc.__super__ = ha;
      mc.prototype = u(ha.prototype, {
        onKeyDown: function (a) {
          switch (a.keyCode) {
            case 13:
              this.enter.dispatch(this.tf.get_text());
              break;
            case 27:
              this.stage.set_focus(this.parent);
          }
          a.stopPropagation();
        },
        onFocusIn: function (a) {
          this.stage.set_focus(this.tf);
        },
        onFocusOut: function (a) {
          this.leave.dispatch();
        },
        layout: function () {
          this.tf.set_width(this.rWidth);
          this.tf.set_height(this.rHeight);
          this.layoutPrompt();
        },
        layoutPrompt: function () {
          if (null != this.label) {
            var a = this.get_centered();
            this.label.set_x(
              a ? (this.rWidth - this.label.get_width()) / 2 : 2,
            );
            this.label.set_y(
              a ? (this.rHeight - this.label.get_height()) / 2 : 2,
            );
          }
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.updatePrompt();
          return a;
        },
        get_centered: function () {
          return 0 == this.tf.get_defaultTextFormat().align;
        },
        set_centered: function (a) {
          var b = this.tf.get_defaultTextFormat();
          b.align = a ? 0 : 3;
          this.tf.setTextFormat(b);
          this.tf.set_defaultTextFormat(b);
          this.layoutPrompt();
          return a;
        },
        set_restrict: function (a) {
          return this.tf.set_restrict(a);
        },
        onUpdate: function () {
          this.updatePrompt();
          this.update.dispatch(this.tf.get_text());
        },
        updatePrompt: function () {
          null != this.label &&
            (this.layoutPrompt(),
            this.label.set_visible('' == this.tf.get_text()));
        },
        set_prompt: function (a) {
          null == this.label &&
            ((this.label = new wb(a)),
            this.label.set_enabled(!1),
            this.label.set_color(C.medium),
            this.add(this.label),
            this.updatePrompt());
          this.label.set_text(a);
          return a;
        },
        selecteAll: function () {
          this.tf.setSelection(0, this.tf.get_length());
        },
        set_enabled: function (a) {
          ha.prototype.set_enabled.call(this, a);
          this.tf.set_alpha(a ? 1 : 0.6);
          return (this.tf.mouseEnabled = a);
        },
        __class__: mc,
        __properties__: u(ha.prototype.__properties__, {
          set_prompt: 'set_prompt',
          set_restrict: 'set_restrict',
          set_centered: 'set_centered',
          get_centered: 'get_centered',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var t = function (a) {
        var b = this;
        ha.call(this);
        a = rc.get(a, C.format(C.uiFont, C.normalSize, C.white));
        a.set_x(10);
        a.set_y(10);
        this.addChild(a);
        this.rWidth = 10 + a.get_width() + 10;
        this.rHeight = 10 + a.get_height() + 10;
        this.get_graphics().beginFill(C.black);
        this.get_graphics().drawRoundRect(0, 0, this.rWidth, this.rHeight, 10);
        rf.run(t.delay, function (a) {
          b.set_alpha(t.delay * (1 - a));
        }).onComplete(function () {
          null != b.parent && b.parent.removeChild(b);
        });
      };
      h['com.watabou.coogee.ui.Toast'] = t;
      t.__name__ = 'com.watabou.coogee.ui.Toast';
      t.show = function (a) {
        t.hide();
        var b = w.layer;
        a = t.instance = new t(a);
        a.set_x(((b.get_width() - a.get_width()) / 2) | 0);
        a.set_y((b.get_height() - a.get_height() - t.offset) | 0);
        b.addChild(a);
        return a;
      };
      t.hide = function () {
        null != t.instance &&
          null != t.instance.parent &&
          t.instance.parent.removeChild(t.instance);
      };
      t.__super__ = ha;
      t.prototype = u(ha.prototype, { __class__: t });
      var w = function () {};
      h['com.watabou.coogee.ui.UI'] = w;
      w.__name__ = 'com.watabou.coogee.ui.UI';
      w.showMenu = function (a) {
        w.showMenuAt(a, w.layer.get_mouseX(), w.layer.get_mouseY());
      };
      w.showMenuAt = function (a, b, c) {
        var d = a.items;
        0 < d.length &&
          d[d.length - 1] instanceof Ve &&
          a.remove(d[d.length - 1]);
        w.menu = a;
        a.set_x(
          (b + a.get_width() <= w.layer.get_width() ? b : b - a.get_width()) |
            0,
        );
        a.set_y(
          (c + a.get_height() <= w.layer.get_height()
            ? c
            : c - a.get_height()) | 0,
        );
        0 > a.get_x() && a.set_x(0);
        0 > a.get_y() && a.set_y(0);
        w.layer.addChild(a);
      };
      w.hideMenu = function () {
        return null != w.menu && null != w.menu.stage
          ? (w.menu.hide(), (w.menu = null), !0)
          : !1;
      };
      w.showDialog = function (a, b) {
        a = Ue.show(w.layer, a, b);
        a.onHide.add(function (a) {
          R.remove(w.windows, a);
        });
        w.windows.push(a);
        return a;
      };
      w.replaceDialog = function (a, b) {
        null == b && (b = xa.getClass(a));
        b = w.findForm(b);
        null != b && b.dialog.hide();
        a = w.showDialog(a);
        null != b && (a.set_x(b.dialog.get_x()), a.set_y(b.dialog.get_y()));
        return a;
      };
      w.wipe = function () {
        w.hideMenu();
        for (var a = 0, b = w.windows.slice(); a < b.length; ) {
          var c = b[a];
          ++a;
          c.hide();
        }
        w.windows = [];
      };
      w.findForm = function (a) {
        for (var b = 0, c = w.windows; b < c.length; ) {
          var d = c[b];
          ++b;
          if (xa.__instanceof(d.content, a)) return d.content;
        }
        return null;
      };
      w.getRect = function (a) {
        var b = new B(a.get_x(), a.get_y()),
          c = new B(a.get_x() + a.rWidth, a.get_y() + a.rHeight);
        b = w.layer.globalToLocal(a.parent.localToGlobal(b));
        c = w.layer.globalToLocal(a.parent.localToGlobal(c));
        return new na(b.x, b.y, c.x - b.x, c.y - b.y);
      };
      w.showToast = function (a) {
        t.show(a);
      };
      var C = function () {};
      h['com.watabou.coogee.ui.UIStyle'] = C;
      C.__name__ = 'com.watabou.coogee.ui.UIStyle';
      C.format = function (a, b, c) {
        null == c && (c = 0);
        return new Fe('_' == a.charAt(0) ? a : Rb.getFont(a).name, b, c);
      };
      C.useDefault = function () {
        C.black = 4012352;
        C.dark = 5725031;
        C.medium = 7569526;
        C.light = 10064002;
        C.white = 14276035;
        C.smallSize = 18;
        C.normalSize = 20;
        C.uiFont = 'ui_font';
        C.uiFontMono = 'ui_font_mono';
      };
      var Ta = function () {
        this.click = new he();
        ha.call(this);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.setSize(12, 12);
      };
      h['com.watabou.coogee.ui.elements.CloseButton'] = Ta;
      Ta.__name__ = 'com.watabou.coogee.ui.elements.CloseButton';
      Ta.__super__ = ha;
      Ta.prototype = u(ha.prototype, {
        layout: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(C.white);
          this.get_graphics().drawCircle(this.rWidth / 2, this.rHeight / 2, 6);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: Ta,
      });
      var ab = function (a) {
        null == a && (a = 0);
        this.click = new he();
        ha.call(this);
        this.bg = new Wa(0, 0);
        this.addChild(this.bg);
        0 == a && (a = C.black);
        var b = C.smallSize / 4;
        this.image = new T();
        var c = this.image.get_graphics();
        c.beginFill(a);
        c.moveTo(-b, -b);
        c.lineTo(b, -b);
        c.lineTo(0, b);
        this.addChild(this.image);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
        this.setSize(2 * b, 2 * b);
      };
      h['com.watabou.coogee.ui.elements.DropDownButton'] = ab;
      ab.__name__ = 'com.watabou.coogee.ui.elements.DropDownButton';
      ab.__super__ = ha;
      ab.prototype = u(ha.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.image.set_x(this.rWidth / 2);
          this.image.set_y(this.rHeight / 2);
        },
        onClick: function (a) {
          a.stopPropagation();
          this.click.dispatch();
        },
        __class__: ab,
      });
      var wa = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1e3);
        null == b && (b = 0);
        var f = this;
        if (0 == d) mc.call(this, null == c ? 'null' : '' + c, !0);
        else {
          for (var g = '0.', k = 0, q = d; k < q; ) (k++, (g += '0'));
          mc.call(this, g, !0);
        }
        this.min = b;
        this.max = c;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('-0-9.');
        var p = Math.pow(10, Math.floor(Math.log(c - b) / Math.log(10)) - 1),
          l = 0 < d ? Math.pow(10, d) : 0;
        this.addEventListener('mouseWheel', function (a) {
          var d = parseFloat(f.get_text());
          d = ac.gate(d + (0 < a.delta ? 1 : -1) * p, b, c);
          0 < l && (d = Math.round(d * l) / l);
          f.set_text(null == d ? 'null' : '' + d);
        });
      };
      h['com.watabou.coogee.ui.elements.FloatInput'] = wa;
      wa.__name__ = 'com.watabou.coogee.ui.elements.FloatInput';
      wa.__super__ = mc;
      wa.prototype = u(mc.prototype, {
        get_value: function () {
          return parseFloat(this.get_text());
        },
        set_value: function (a) {
          a = ac.gate(a, this.min, this.max);
          this.tf.set_text(null == a ? 'null' : '' + a);
          return a;
        },
        __class__: wa,
        __properties__: u(mc.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var De = function (a) {
        this.click = new Ac();
        var b = this;
        ha.call(this);
        this.bg = Wa.light();
        this.add(this.bg);
        this.hbox = new Xc();
        this.add(this.hbox);
        for (var c = 0; c < a.length; ) {
          var d = [a[c]];
          ++c;
          var f = new kb(d[0]);
          f.click.add(
            (function (a) {
              return function () {
                b.click.dispatch(a[0]);
              };
            })(d),
          );
          f.set_width(100);
          this.hbox.add(f);
        }
        this.setSize(this.hbox.get_width(), this.hbox.get_height());
      };
      h['com.watabou.coogee.ui.elements.FormButtons'] = De;
      De.__name__ = 'com.watabou.coogee.ui.elements.FormButtons';
      De.__super__ = ha;
      De.prototype = u(ha.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.hbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.hbox.set_x(this.rWidth - this.hbox.get_width());
          this.hbox.set_y(((this.rHeight - this.hbox.get_height()) / 2) | 0);
        },
        __class__: De,
      });
      var nc = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1e3);
        null == b && (b = 0);
        var f = this,
          g = '0';
        if (0 == d) for (var k = c; 10 <= k; ) ((g += '0'), (k = (k / 10) | 0));
        else for (k = 1; k < d; ) (k++, (g += '0'));
        mc.call(this, g, !0);
        this.min = b;
        this.max = c;
        this.set_text(null == a ? 'null' : '' + a);
        this.set_restrict('0-9');
        this.addEventListener('mouseWheel', function (a) {
          a = 0 < a.delta ? 1 : -1;
          f.update.dispatch(I.string(f.set_value(f.get_value() + a)));
        });
      };
      h['com.watabou.coogee.ui.elements.IntInput'] = nc;
      nc.__name__ = 'com.watabou.coogee.ui.elements.IntInput';
      nc.__super__ = mc;
      nc.prototype = u(mc.prototype, {
        get_value: function () {
          return ac.gatei(I.parseInt(this.get_text()), this.min, this.max);
        },
        set_value: function (a) {
          a = ac.gatei(a, this.min, this.max);
          this.tf.set_text(null == a ? 'null' : '' + a);
          return a;
        },
        __class__: nc,
        __properties__: u(mc.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var eh = function (a, b) {
        ha.call(this);
        this.border2 = Wa.black();
        this.add(this.border2);
        this.paint2 = Wa.white();
        this.add(this.paint2);
        this.border = Wa.black();
        this.add(this.border);
        this.paint = Wa.white();
        this.add(this.paint);
        this.colors = a;
        a = this.colors[0];
        this.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        a = 1 < this.colors.length ? this.colors[1] : C.white;
        this.paint2.bmp.get_bitmapData().setPixel(0, 0, a);
        this.setSize(b, b);
        this.addEventListener('click', m(this, this.onClickEvent));
      };
      h['com.watabou.coogee.ui.elements.MultiSwatch'] = eh;
      eh.__name__ = 'com.watabou.coogee.ui.elements.MultiSwatch';
      eh.__super__ = ha;
      eh.prototype = u(ha.prototype, {
        layout: function () {
          var a = this.rWidth - 4 - 1,
            b = this.rHeight - 4 - 1;
          this.border.setSize(a, b);
          this.paint.setSize(a - 2, b - 2);
          this.paint.set_x(this.paint.set_y(1));
          this.border2.setSize(a, b);
          this.border2.set_x(this.border2.set_y(5));
          this.paint2.setSize(a - 2, b - 2);
          this.paint2.set_x(this.border2.get_x() + 1);
          this.paint2.set_y(this.border2.get_y() + 1);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: eh,
      });
      var Bc = function (a, b) {
        ha.call(this);
        this.border = Wa.black();
        this.add(this.border);
        this.paint = new Wa(a);
        this.add(this.paint);
        this.setSize(b, b);
        this.addEventListener('click', m(this, this.onClickEvent));
      };
      h['com.watabou.coogee.ui.elements.Swatch'] = Bc;
      Bc.__name__ = 'com.watabou.coogee.ui.elements.Swatch';
      Bc.__super__ = ha;
      Bc.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.paint.setSize(this.rWidth - 2, this.rHeight - 2);
          this.paint.set_x(this.paint.set_y(1));
        },
        onClick: function (a) {
          this.callback = a;
          this.set_buttonMode(null != a);
        },
        onClickEvent: function (a) {
          null != this.callback && this.callback();
        },
        __class__: Bc,
      });
      var Hc = function () {
        this.update = new sg();
        ha.call(this);
        this.selected = Da.get('tags', []);
        this.active = [];
        this.tagViews = new Ja();
        for (var a = 0, b = Hc.getTags(); a < b.length; ) {
          var c = b[a];
          ++a;
          var d = new We(c, Hc.getInfo(c), m(this, this.onClick));
          this.tagViews.h[c] = d;
          this.add(d);
          -1 != this.selected.indexOf(c) && d.setColor(C.black);
        }
      };
      h['com.watabou.coogee.ui.elements.TagsView'] = Hc;
      Hc.__name__ = 'com.watabou.coogee.ui.elements.TagsView';
      Hc.__super__ = ha;
      Hc.prototype = u(ha.prototype, {
        set: function (a) {
          this.active = a.slice();
          this.layout();
        },
        select: function (a, b) {
          null == b && (b = !0);
          if ((-1 != this.selected.indexOf(a)) != b) {
            b
              ? Hc.resTags(this.selected, a)
              : (R.remove(this.selected, a), Hc.resTags(this.selected, null));
            for (
              var c = this.tagViews.h, d = Object.keys(c), f = d.length, g = 0;
              g < f;

            ) {
              var k = d[g++];
              c[k].setColor(-1 != this.selected.indexOf(k) ? C.black : C.dark);
            }
            this.update.dispatch(a, b);
          }
        },
        layout: function () {
          for (
            var a = [],
              b = [],
              c = this.tagViews.h,
              d = Object.keys(c),
              f = d.length,
              g = 0;
            g < f;

          ) {
            var k = d[g++],
              q = k;
            k = c[k];
            -1 != this.active.indexOf(q) ? a.push(k) : b.push(k);
          }
          q = function (a, b) {
            return a.tag < b.tag ? -1 : a.tag > b.tag ? 1 : 0;
          };
          a.sort(q);
          b.sort(q);
          d = c = 8;
          for (g = f = 0; g < a.length; )
            ((q = a[g]),
              ++g,
              c + q.get_width() > this.rWidth - 8 &&
                ((c = 8), (d += f + 4), (f = 0)),
              q.set_x(c),
              q.set_y(d),
              f < q.get_height() && (f = q.get_height()),
              (c += q.get_width() + 4));
          d += f;
          8 == d && (d = 24);
          this.get_graphics().clear();
          this.get_graphics().beginFill(C.light);
          this.get_graphics().drawRoundRect(0, 0, this.rWidth, d + 8, 32);
          c = 0;
          d += 16;
          for (g = f = 0; g < b.length; )
            ((q = b[g]),
              ++g,
              c + q.get_width() > this.rWidth &&
                ((c = 0), (d += f + 4), (f = 0)),
              q.set_x(c),
              q.set_y(d),
              f < q.get_height() && (f = q.get_height()),
              (c += q.get_width() + 4));
          this.rHeight = d + f;
        },
        onClick: function (a) {
          this.select(a, -1 == this.selected.indexOf(a));
        },
        __class__: Hc,
      });
      var We = function (a, b, c) {
        this.color = C.dark;
        ha.call(this);
        this.tag = a;
        this.label = rc.get(a, C.format(C.uiFont, C.smallSize, C.white));
        this.label.mouseEnabled = !1;
        this.addChild(this.label);
        this.set_buttonMode(!0);
        this.addEventListener('click', function (d) {
          d.stopPropagation();
          d.shiftKey ? null != b && w.showToast(b) : c(a);
        });
        this.setSize(this.label.get_width() + 8, this.label.get_height() + 8);
      };
      h['com.watabou.coogee.ui.elements.TagView'] = We;
      We.__name__ = 'com.watabou.coogee.ui.elements.TagView';
      We.__super__ = ha;
      We.prototype = u(ha.prototype, {
        layout: function () {
          this.updateBg();
          this.label.set_x(((this.rWidth - this.label.get_width()) / 2) | 0);
          this.label.set_y(((this.rHeight - this.label.get_height()) / 2) | 0);
        },
        updateBg: function () {
          this.get_graphics().clear();
          this.get_graphics().beginFill(this.color);
          this.get_graphics().drawRoundRect(
            0,
            0,
            this.rWidth,
            this.rHeight,
            16,
          );
        },
        setColor: function (a) {
          this.color = a;
          this.updateBg();
        },
        __class__: We,
      });
      var Ic = function (a, b, c, d) {
        null == c && (c = !1);
        this.update = new Ac();
        this.edit = function (a) {
          console.log(
            '../classes/com/watabou/coogee/ui/elements/TextView.hx:22:',
            a.get_value(),
          );
        };
        this.data2text = function (a) {
          return I.string(a);
        };
        this._value = null;
        var f = this;
        null != b && (this.data2text = b);
        null != d && (this.edit = d);
        this._value = a;
        ha.call(this);
        this.border = Wa.black();
        this.add(this.border);
        this.bg = Wa.white();
        this.bg.set_x(this.bg.set_y(2));
        this.add(this.bg);
        this.tf = rc.get(
          this.data2text(a),
          C.format(C.uiFont, c ? C.smallSize : C.normalSize, C.black),
        );
        this.addChild(this.tf);
        this.btn = new ab();
        this.btn.set_width(C.normalSize);
        this.btn.set_enabled(!1);
        this.add(this.btn);
        this.tf.mouseEnabled = !1;
        this.set_buttonMode(!0);
        this.addEventListener('click', function (a) {
          f.edit(f);
        });
        this.setSize(
          Math.ceil(this.tf.get_width() + this.btn.get_width()),
          Math.ceil(this.tf.get_height()),
        );
      };
      h['com.watabou.coogee.ui.elements.TextView'] = Ic;
      Ic.__name__ = 'com.watabou.coogee.ui.elements.TextView';
      Ic.editInForm = function (a, b, c) {
        return function (d) {
          var f = w.findForm(a);
          null == f && ((f = y.createInstance(a, [])), w.showDialog(f));
          f.link(
            b,
            d.get_value(),
            function (a) {
              d.set_value(a);
              d.update.dispatch(a);
            },
            c,
          );
        };
      };
      Ic.__super__ = ha;
      Ic.prototype = u(ha.prototype, {
        layout: function () {
          this.border.setSize(this.rWidth, this.rHeight);
          this.bg.setSize(this.rWidth - 4, this.rHeight - 4);
          this.tf.set_autoSize(2);
          this.tf.set_width(this.rWidth - this.btn.get_width());
          this.tf.set_height(this.rHeight);
          this.tf.set_scrollH(0);
          this.btn.set_height(this.rHeight);
          this.btn.set_x(this.rWidth - this.btn.get_width());
          this.btn.set_y((this.rHeight - this.btn.get_height()) / 2);
        },
        get_value: function () {
          return this._value;
        },
        set_value: function (a) {
          this._value = a;
          this.tf.set_text(this.data2text(a));
          return a;
        },
        __class__: Ic,
        __properties__: u(ha.prototype.__properties__, {
          set_value: 'set_value',
          get_value: 'get_value',
        }),
      });
      var Jc = function (a) {
        pa.call(this, null != a ? a.concat(Jc.okCancel) : Jc.okCancel);
      };
      h['com.watabou.coogee.ui.elements.EditForm'] = Jc;
      Jc.__name__ = 'com.watabou.coogee.ui.elements.EditForm';
      Jc.__super__ = pa;
      Jc.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Edit';
        },
        onButton: function (a) {
          if ('OK' == a) {
            if (null != this.onOK) this.onOK(this.get());
            this.dialog.hide();
          } else pa.prototype.onButton.call(this, a);
        },
        set: function (a) {},
        get: function () {
          return null;
        },
        link: function (a, b, c, d) {
          null != a && this.dialog.setTitle(a);
          this.set(b);
          this.onOK = c;
          null != this.host &&
            this.host.dialog.onHide.remove(m(this, this.onHostHidden));
          this.host = d;
          null != d && d.dialog.onHide.add(m(this, this.onHostHidden));
        },
        onHostHidden: function (a) {
          this.dialog.hide();
        },
        __class__: Jc,
      });
      var Vh = function (a) {
        this.close = new he();
        var b = this;
        ha.call(this);
        this.bg = Wa.black();
        this.add(this.bg);
        this.btn = new Ta();
        this.btn.click.add(function () {
          b.close.dispatch();
        });
        this.add(this.btn);
        this.tf = rc.get(a, C.format(C.uiFont, C.smallSize, C.white));
        this.tf.mouseEnabled = !1;
        this.addChild(this.tf);
        this.setSize(this.tf.get_width(), 36);
      };
      h['com.watabou.coogee.ui.elements.WindowHeader'] = Vh;
      Vh.__name__ = 'com.watabou.coogee.ui.elements.WindowHeader';
      Vh.__super__ = ha;
      Vh.prototype = u(ha.prototype, {
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
          this.btn.setSize(this.rHeight, this.rHeight);
          this.btn.set_x(this.rWidth - this.rHeight);
          this.tf.set_x(
            this.tf.set_y(((this.rHeight - this.tf.get_height()) / 2) | 0),
          );
        },
        setText: function (a) {
          this.tf.set_text(a);
        },
        __class__: Vh,
      });
      var nb = function () {
        var a = this;
        Jc.call(this);
        var b = new Xc();
        this.swatch = new Bc(0, 60);
        this.swatch.valign = 'fill';
        b.add(this.swatch);
        var c = new Xe(3);
        c.setMargins(0, 10);
        var d = function (b, d) {
          b = new wb(b);
          b.valign = 'center';
          c.add(b);
          var f = new ld(0, d);
          f.valign = 'center';
          c.add(f);
          var g = new nc(0, 0, d, 3);
          c.add(g);
          g.update.add(function (a) {
            f.set_value(g.get_value());
          });
          f.change.add(function (b) {
            g.set_value(Math.round(b));
            a.updateSwatch();
          });
          return f;
        };
        this.hue = d('Hue', 359);
        this.hue.cycled = !0;
        this.sat = d('Sat', 100);
        this.val = d('Val', 100);
        b.add(c);
        this.add(b);
      };
      h['com.watabou.coogee.ui.forms.ColorForm'] = nb;
      nb.__name__ = 'com.watabou.coogee.ui.forms.ColorForm';
      nb.__super__ = Jc;
      nb.prototype = u(Jc.prototype, {
        set: function (a) {
          this.setColor(a);
        },
        get: function () {
          return this.color;
        },
        setColor: function (a) {
          a = bc.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
        },
        updateSwatch: function () {
          var a = (this.color = bc.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        },
        __class__: nb,
      });
      var Jd = function () {
        var a = this;
        Jc.call(this);
        var b = new gb(),
          c = new Xc();
        c.setMargins(0, 10);
        this.face = new mc('');
        this.face.set_width(300);
        this.face.set_prompt('Font name');
        this.face.update.add(function (b) {
          a.updatePreview();
        });
        c.add(this.face);
        this.size = new nc(18, 8, 96);
        this.size.set_restrict('0-9');
        this.size.update.add(function (b) {
          a.updatePreview();
        });
        c.add(this.size);
        var d = new Xc();
        d.setMargins(0, 10);
        this.bold = new bd('Bold');
        this.bold.changed.add(function (b) {
          a.updatePreview();
        });
        d.add(this.bold);
        this.italic = new bd('Italic');
        this.italic.changed.add(function (b) {
          a.updatePreview();
        });
        d.add(this.italic);
        this.preview = new Wh();
        this.preview.halign = 'fill';
        this.preview.set_height(100);
        b.add(c);
        b.add(d);
        b.add(this.preview);
        this.add(b);
      };
      h['com.watabou.coogee.ui.forms.FontForm'] = Jd;
      Jd.__name__ = 'com.watabou.coogee.ui.forms.FontForm';
      Jd.font2text = function (a) {
        if (null == a) return 'Default';
        if (null != a.face) {
          var b = a.face;
          b =
            b.length <= Jd.maxFaceLength
              ? b
              : R.substr(b, 0, Jd.maxFaceLength - 1) + '...';
        } else
          null != a.embedded && Rb.exists(a.embedded)
            ? ((b = Rb.getFont(a.embedded).name),
              (b =
                '[' +
                (b.length <= Jd.maxFaceLength
                  ? b
                  : R.substr(b, 0, Jd.maxFaceLength - 1) + '...') +
                ']'))
            : (b = '[default]');
        b += ' ' + a.size;
        a.bold && (b += ', bold');
        a.italic && (b += ', italic');
        return b;
      };
      Jd.fontFace2text = function (a) {
        if (null == a) return 'Default';
        var b =
          null != a.face
            ? a.face
            : null != a.embedded && Rb.exists(a.embedded)
              ? Rb.getFont(a.embedded).name
              : '[default]';
        a.bold && (b += ', bold');
        a.italic && (b += ', italic');
        return b;
      };
      Jd.__super__ = Jc;
      Jd.prototype = u(Jc.prototype, {
        set: function (a) {
          this.face.set_text(null != a.face ? a.face : '');
          this.size.set_value(a.size);
          this.bold.set_value(a.bold);
          this.italic.set_value(a.italic);
          this.embedded = a.embedded;
          this.face.set_prompt(
            null != this.embedded && Rb.exists(this.embedded)
              ? Rb.getFont(this.embedded).name
              : 'Font name',
          );
          this.preview.setFont(a);
          this.face.selecteAll();
          null != this.stage && this.stage.set_focus(this.face);
        },
        get: function () {
          return {
            face: '' == this.face.get_text() ? null : this.face.get_text(),
            embedded: this.embedded,
            size: this.size.get_value(),
            bold: this.bold.get_value(),
            italic: this.italic.get_value(),
          };
        },
        updatePreview: function () {
          this.preview.setFont(this.get());
        },
        __class__: Jd,
      });
      var Wh = function (a) {
        null == a && (a = 'Sample Text');
        ha.call(this);
        this.border = Wa.black();
        this.addChild(this.border);
        this.bg = Wa.white();
        this.bg.set_x(this.bg.set_y(1));
        this.addChild(this.bg);
        this.tf = new Qc();
        this.tf.set_text(a);
        this.fixText();
        this.addChild(this.tf);
        this.maskRect = new sf();
        this.addChild(this.maskRect);
        this.tf.set_mask(this.maskRect);
      };
      h['com.watabou.coogee.ui.forms._FontForm.FontPreview'] = Wh;
      Wh.__name__ = 'com.watabou.coogee.ui.forms._FontForm.FontPreview';
      Wh.__super__ = ha;
      Wh.prototype = u(ha.prototype, {
        layout: function () {
          var a = this.maskRect.get_graphics();
          a.clear();
          a.beginFill(16711680);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
          this.border.set_width(this.rWidth);
          this.border.set_height(this.rHeight);
          this.bg.set_width(this.rWidth - 2);
          this.bg.set_height(this.rHeight - 2);
          this.tf.set_x(Math.max((this.rWidth - this.tf.get_width()) / 2, 0));
          this.tf.set_y(Math.max((this.rHeight - this.tf.get_height()) / 2, 0));
        },
        setFont: function (a) {
          a = md.font2format(a);
          null == a && (a = new Fe());
          a.color = C.black;
          this.tf.setTextFormat(a);
          this.fixText();
          this.layout();
        },
        fixText: function () {
          this.tf.set_autoSize(1);
          var a = this.tf.get_width(),
            b = this.tf.get_height();
          this.tf.set_autoSize(2);
          this.tf.set_width(Math.ceil(a));
          this.tf.set_height(Math.ceil(b));
        },
        __class__: Wh,
      });
      var bk = function (a) {
        pa.call(this, ['OK']);
        var b = new tf();
        a = new Ab(a);
        a.mouseEnabled = !1;
        a.mouseChildren = !1;
        a.set_width(360);
        b.add(a);
        this.add(b);
      };
      h['com.watabou.coogee.ui.forms.Message'] = bk;
      bk.__name__ = 'com.watabou.coogee.ui.forms.Message';
      bk.__super__ = pa;
      bk.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Message';
        },
        __class__: bk,
      });
      var ck = function () {
        Jc.call(this);
        this.content = new gb();
        this.content.setMargins(12, 12);
        this.add(this.content);
      };
      h['com.watabou.coogee.ui.forms.MultiColorForm'] = ck;
      ck.__name__ = 'com.watabou.coogee.ui.forms.MultiColorForm';
      ck.__super__ = Jc;
      ck.prototype = u(Jc.prototype, {
        onButton: function (a) {
          'Add' == a
            ? ((a = this.get()), a.push(a[a.length - 1]), this.set(a))
            : Jc.prototype.onButton.call(this, a);
        },
        set: function (a) {
          this.content.removeChildren();
          for (var b = [], c = 0, d = a.length; c < d; ) {
            var f = c++,
              g = a[f];
            if (0 < f) {
              var k = new Wa(C.black);
              k.halign = 'fill';
              k.setSize(2, 2);
              this.content.add(k);
            }
            f = new dk(this.content, g, 0 == f, f == a.length - 1);
            f.action.add(m(this, this.onItemAction));
            b.push(f);
          }
          this.items = b;
          this.add(this.content);
          xa.__cast(this.parent, kd).resize(!0);
        },
        get: function () {
          for (var a = [], b = 0, c = this.items; b < c.length; ) {
            var d = c[b];
            ++b;
            a.push(d.color);
          }
          return a;
        },
        onItemAction: function (a, b) {
          var c = this.items.indexOf(a),
            d = this.get();
          d.splice(c, 1);
          switch (b) {
            case 'Duplicate':
              d.splice(c, 0, a.color);
              d.splice(c, 0, a.color);
              break;
            case 'Move down':
              d.splice(c + 1, 0, a.color);
              break;
            case 'Move up':
              d.splice(c - 1, 0, a.color);
          }
          this.set(d);
        },
        __class__: ck,
      });
      var dk = function (a, b, c, d) {
        this.action = new sg();
        var f = this;
        this.color = b;
        var g = new Xc();
        g.setMargins(0, 10);
        var k = new gb();
        k.setMargins(0, 10);
        this.hex = new mc('#000000', !0);
        this.hex.set_text(P.hex(b, 6));
        this.hex.set_restrict('#0-9a-fA-F');
        this.hex.update.add(m(this, this.onHex));
        k.add(this.hex);
        this.swatch = new Bc(b, 10 + 2 * this.hex.get_height());
        this.swatch.halign = 'fill';
        k.add(this.swatch);
        g.add(k);
        k = new Xe(4);
        k.setMargins(0, 10);
        var q = ['Duplicate'];
        c || q.push('Move up');
        d || q.push('Move down');
        (c && d) || q.push('Delete');
        c = new ie('...', q);
        c.action.add(function (a) {
          f.action.dispatch(f, a);
        });
        c.valign = 'fill';
        b = bc.rgb2hsv(b);
        this.hue = this.addRow(k, 'Hue', 359, b.x, c);
        this.sat = this.addRow(k, 'Sat', 100, 100 * b.y);
        this.val = this.addRow(k, 'Val', 100, 100 * b.z);
        g.add(k);
        a.add(g);
      };
      h['com.watabou.coogee.ui.forms.ColorItem'] = dk;
      dk.__name__ = 'com.watabou.coogee.ui.forms.ColorItem';
      dk.prototype = {
        addRow: function (a, b, c, d, f) {
          var g = this;
          c |= 0;
          d |= 0;
          b = new wb(b);
          b.valign = 'center';
          a.add(b);
          var k = new ld(0, c);
          k.set_value(d);
          k.valign = 'center';
          a.add(k);
          var q = new nc(d, 0, c, 3);
          a.add(q);
          q.update.add(function (a) {
            k.set_value(q.get_value());
          });
          k.change.add(function (a) {
            q.set_value(Math.round(a));
            g.updateSwatch();
          });
          null != f ? a.add(f) : a.addEmpty();
          return k;
        },
        onHex: function (a) {
          '#' == a.charAt(0) && (a = R.substr(a, 1, null));
          if (3 == a.length) {
            var b = [];
            b.push(a.charAt(0) + a.charAt(0));
            b.push(a.charAt(1) + a.charAt(1));
            b.push(a.charAt(2) + a.charAt(2));
            a = b.join('');
          }
          6 < a.length && (a = R.substr(a, 0, 6));
          a = I.parseInt('0x' + a);
          a = bc.rgb2hsv(a);
          this.hue.set_value(a.x);
          this.sat.set_value(100 * a.y);
          this.val.set_value(100 * a.z);
          this.updateSwatch();
        },
        updateSwatch: function () {
          var a = (this.color = bc.hsv(
            this.hue.get_value(),
            this.sat.get_value() / 100,
            this.val.get_value() / 100,
          ));
          this.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          this.hex.set_text(P.hex(this.color, 6));
        },
        __class__: dk,
      };
      var Kc = function (a, b) {
        this.onNullAsset = function (a, b) {
          console.log(
            '../classes/com/watabou/coogee/ui/forms/PaletteForm.hx:38:',
            'No ' + a + ' palette!',
          );
        };
        this.getName = function (a) {
          return 'palette';
        };
        var c = this;
        ad.call(this);
        this.form = new Xc();
        this.form.setMargins(0, 0);
        this.add(this.form);
        this.tabs = new Xh();
        this.form.add(this.tabs);
        var d = [
          new kb('Load', m(this, this.onLoad)),
          new kb('Apply', function () {
            a(c.getPalette());
          }),
          new kb('Save', function () {
            c.onSave(c.getPalette());
          }),
        ];
        if (null != b) {
          for (var f = [], g = []; 0 < b.length; )
            (f.push(b.shift()), g.push(b.shift()));
          b = new ie('Preset', f, g);
          b.action.add(function (a) {
            c.loadPreset(a);
          });
          d.unshift(b);
        }
        this.buttons = new Yh(d);
        this.form.add(this.buttons);
        this.onApply = a;
        this.values = [];
      };
      h['com.watabou.coogee.ui.forms.PaletteForm'] = Kc;
      Kc.__name__ = 'com.watabou.coogee.ui.forms.PaletteForm';
      Kc.txt2color = function (a) {
        '#' == a.charAt(0) && (a = R.substr(a, 1, null));
        if (3 == a.length) {
          var b = [];
          b.push(a.charAt(0) + a.charAt(0));
          b.push(a.charAt(1) + a.charAt(1));
          b.push(a.charAt(2) + a.charAt(2));
          a = b.join('');
        }
        6 < a.length && (a = R.substr(a, 0, 6));
        return I.parseInt('0x' + a);
      };
      Kc.txt2float = function (a, b, c) {
        return ac.gate(parseFloat(a), b, c);
      };
      Kc.txt2int = function (a, b, c) {
        return ac.gatei(I.parseInt(a), b | 0, c | 0);
      };
      Kc.swatches = function (a, b) {
        return function (c) {
          for (
            var d = null != a ? a + '_' : '', f = [], g = 0;
            g < b.length;

          ) {
            var k = b[g];
            ++g;
            f.push(Zh.get(c.getColor(k)));
          }
          return d + f.join('_');
        };
      };
      Kc.__super__ = ad;
      Kc.prototype = u(ad.prototype, {
        onShow: function () {
          ad.prototype.onShow.call(this);
          this.tabs.onTab(Kc.lastTab);
          this.tabs.change.add(function (a) {
            Kc.lastTab = a;
          });
        },
        onEnter: function () {
          this.onApply(this.getPalette());
        },
        layout: function () {
          null != this.tabs && this.tabs.layout();
          this.form.layout();
          ad.prototype.layout.call(this);
        },
        onKey: function (a) {
          var b = this.tabs.getTab();
          switch (a) {
            case 33:
              if (b < this.tabs.getTabCount() - 1) this.tabs.onTab(b + 1);
              break;
            case 34:
              if (0 < b) this.tabs.onTab(this.tabs.getTab() - 1);
              break;
            default:
              return ad.prototype.onKey.call(this, a);
          }
          return !0;
        },
        setMaxTabs: function (a) {
          this.tabs.set_rowSize(a);
        },
        addTab: function (a) {
          this.grid = new Xe(2);
          this.tabs.addTab(a, this.grid);
        },
        addColor: function (a, b, c) {
          var d = this;
          null == this.grid && this.addTab(null);
          var f = new wb(b);
          this.grid.add(f);
          b = new Xc();
          b.setMargins(0, 10);
          var g = new mc('#000000', !0);
          g.set_text(P.hex(c, 6));
          g.set_restrict('#0-9a-fA-F');
          b.add(g);
          var k = new Bc(c, g.get_height());
          b.add(k);
          g.update.add(function (a) {
            a = Kc.txt2color(a);
            k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          });
          k.onClick(function () {
            d.onColor(f.get_text(), k, function (a) {
              g.set_text(P.hex(a, 6));
              k.paint.bmp.get_bitmapData().setPixel(0, 0, a);
            });
          });
          this.grid.add(b);
          this.values.push({ id: a, type: Cb.COLOR, view: g, swatch: k });
          this.layout();
        },
        addFont: function (a, b, c, d, f) {
          null == d && (d = !1);
          null == this.grid && this.addTab(null);
          b = new wb(b);
          this.grid.add(b);
          null != f && (c.embedded = f);
          c = new Ic(
            c,
            d ? Jd.fontFace2text : Jd.font2text,
            null,
            Ic.editInForm(Jd, b.get_text(), this),
          );
          c.set_width(d ? 80 : 220);
          c.halign = 'fill';
          this.grid.add(c);
          this.values.push({ id: a, type: Cb.FONT, view: c });
          this.layout();
        },
        addFloat: function (a, b, c, d, f) {
          null == this.grid && this.addTab(null);
          b = new wb(b);
          this.grid.add(b);
          c = new wa(c, d, f, 5);
          this.grid.add(c);
          this.values.push({ id: a, type: Cb.FLOAT, view: c, min: d, max: f });
          this.layout();
        },
        addInt: function (a, b, c, d, f) {
          null == this.grid && this.addTab(null);
          b = new wb(b);
          this.grid.add(b);
          c = new nc(c, d, f, 7);
          this.grid.add(c);
          this.values.push({ id: a, type: Cb.INT, view: c, min: d, max: f });
          this.layout();
        },
        addEnum: function (a, b, c, d) {
          null == this.grid && this.addTab(null);
          b = new wb(b);
          this.grid.add(b);
          c = cd.ofStrings(c);
          c.set_text(d);
          c.halign = 'fill';
          this.grid.add(c);
          this.values.push({ id: a, type: Cb.STRING, view: c });
          this.layout();
        },
        addCheck: function (a, b, c) {
          null == this.grid && this.addTab(null);
          b = new wb(b);
          this.grid.add(b);
          b = new bd();
          b.set_value(c);
          b.valign = 'fill';
          this.grid.add(b);
          this.values.push({ id: a, type: Cb.BOOL, view: b });
          this.layout();
        },
        onColor: function (a, b, c) {
          var d = w.findForm(nb);
          null == d && ((d = new nb()), w.showDialog(d));
          d.link(a, b.paint.bmp.get_bitmapData().getPixel(0, 0), c, this);
        },
        onLoad: function () {
          var a = this,
            b = new fh();
          b.addEventListener('select', function (c) {
            b.addEventListener('complete', m(a, a.onPaletteLoaded));
            b.load();
          });
          var c = [new ek('Palette', '*.json')];
          b.browse(c);
        },
        loadPreset: function (a) {
          if (Rb.exists(a)) this.loadPalette(md.fromJSON(Rb.getText(a)));
          else this.onNullAsset(a, this);
        },
        onPaletteLoaded: function (a) {
          try {
            this.loadPalette(
              md.fromJSON(xa.__cast(a.target, fh).data.toString()),
            );
          } catch (b) {
            t.show('Invalid palette file');
          }
        },
        loadPalette: function (a) {
          for (var b = 0, c = this.values; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                var f = d.view,
                  g = a.getColor(d.id, Kc.txt2color(f.get_text()));
                d.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, g);
                f.set_text(P.hex(g, 6));
                break;
              case 1:
                f = d.view;
                g = a.getMulti(d.id, Kc.txt2color(f.get_text()));
                d = d.multi;
                d.colors = g;
                var k = d.colors[0];
                d.paint.bmp.get_bitmapData().setPixel(0, 0, k);
                k = 1 < d.colors.length ? d.colors[1] : C.white;
                d.paint2.bmp.get_bitmapData().setPixel(0, 0, k);
                f.set_text(P.hex(g[0], 6));
                break;
              case 2:
                f = d.view;
                d = a.getFont(d.id, f.get_value());
                f.set_value(d);
                break;
              case 3:
                f = d.view;
                d = a.getFloat(d.id, Kc.txt2float(f.get_text(), d.min, d.max));
                f.set_text(null == d ? 'null' : '' + d);
                break;
              case 4:
                f = d.view;
                d = a.getInt(d.id, Kc.txt2int(f.get_text(), d.min, d.max));
                f.set_text(null == d ? 'null' : '' + d);
                break;
              case 5:
                d.view instanceof cd
                  ? ((f = d.view),
                    (d = a.getString(d.id, f.get_value())),
                    f.set_value(d))
                  : ((f = d.view),
                    (d = a.getString(d.id, f.get_text())),
                    f.set_text(d));
                break;
              case 6:
                ((f = d.view), f.set_value(a.getBool(d.id, f.get_value())));
            }
          }
        },
        getPalette: function () {
          for (var a = new md(), b = 0, c = this.values; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                var f = d.view,
                  g = Kc.txt2color(f.get_text());
                a.setColor(d.id, g);
                f.set_text(P.hex(g, 6));
                break;
              case 1:
                f = d.view;
                g = d.multi.colors;
                a.setMulti(d.id, g);
                f.set_text(P.hex(g[0], 6));
                break;
              case 2:
                f = d.view.get_value();
                a.setFont(d.id, f);
                break;
              case 3:
                f = d.view;
                g = Kc.txt2float(f.get_text(), d.min, d.max);
                a.setFloat(d.id, g);
                f.set_text(null == g ? 'null' : '' + g);
                break;
              case 4:
                f = d.view;
                g = Kc.txt2int(f.get_text(), d.min, d.max);
                a.setInt(d.id, g);
                f.set_text(null == g ? 'null' : '' + g);
                break;
              case 5:
                d.view instanceof cd
                  ? a.setString(d.id, d.view.get_value())
                  : a.setString(d.id, d.view.get_text());
                break;
              case 6:
                a.setBool(d.id, d.view.get_value());
            }
          }
          return a;
        },
        onSave: function (a) {
          je.saveText(a.json(), this.getName(a) + '.json', 'application/json');
        },
        __class__: Kc,
      });
      var Yh = function (a) {
        ha.call(this);
        this.bg = Wa.light();
        this.add(this.bg);
        this.vbox = new gb();
        this.add(this.vbox);
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          c.set_width(100);
          this.vbox.add(c);
        }
        this.setSize(this.vbox.get_width(), this.vbox.get_height());
        this.valign = 'fill';
      };
      h['com.watabou.coogee.ui.forms.ButtonColumn'] = Yh;
      Yh.__name__ = 'com.watabou.coogee.ui.forms.ButtonColumn';
      Yh.__super__ = ha;
      Yh.prototype = u(ha.prototype, {
        layout: function () {
          this.rWidth = Math.max(this.rWidth, this.vbox.get_width());
          this.bg.set_width(this.rWidth);
          this.bg.set_height(this.rHeight);
          this.vbox.set_x(((this.rWidth - this.vbox.get_width()) / 2) | 0);
          this.vbox.set_y(0);
        },
        __class__: Yh,
      });
      var Ge = function (a, b) {
        pa.call(this, ['Generate', 'Random']);
        this.generate = b;
        this.content = new gb();
        this.addAbove();
        this.tags = new Hc();
        this.tags.setSize(300, 0);
        this.tags.set(a);
        this.content.add(this.tags);
        null != Ge.hintText &&
          ((a = new Zd(Ge.hintText)),
          a.set_color(C.dark),
          a.set_width(300),
          this.content.add(a));
        this.add(this.content);
      };
      h['com.watabou.coogee.ui.forms.TagsForm'] = Ge;
      Ge.__name__ = 'com.watabou.coogee.ui.forms.TagsForm';
      Ge.__super__ = pa;
      Ge.prototype = u(pa.prototype, {
        onButton: function (a) {
          switch (a) {
            case 'Generate':
              Da.set('tags', this.tags.selected);
              this.tags.set(this.callGenerate(this.tags.selected));
              this.relayout();
              break;
            case 'Random':
              this.tags.set(this.callGenerate(null));
              this.relayout();
              break;
            default:
              pa.prototype.onButton.call(this, a);
          }
        },
        relayout: function () {
          this.content.layout();
          var a = this.buttons.get_y();
          this.layout();
          a > this.buttons.get_y() &&
            (this.buttons.set_y(a),
            (a = this.buttons),
            (this.rHeight = a.get_y() + a.rHeight + this.margin));
          xa.__cast(this.parent, kd).resize();
        },
        onEnter: function () {
          this.onButton('Generate');
        },
        onKey: function (a) {
          return 9 == a ? (this.onEsc(), !0) : pa.prototype.onKey.call(this, a);
        },
        callGenerate: function (a) {
          return this.generate(a);
        },
        addAbove: function () {},
        __class__: Ge,
      });
      var Xe = function (a) {
        null == a && (a = 2);
        this.margin = this.gap = 10;
        ha.call(this);
        this.cols = a;
      };
      h['com.watabou.coogee.ui.layouts.Grid'] = Xe;
      Xe.__name__ = 'com.watabou.coogee.ui.layouts.Grid';
      Xe.__super__ = ha;
      Xe.prototype = u(ha.prototype, {
        layout: function () {
          for (var a = [], b = 0, c = this.cols; b < c; ) (b++, a.push(0));
          c = a;
          var d = [];
          a = 0;
          for (b = this.get_numChildren(); a < b; ) {
            var f = a++;
            var g = f % this.cols,
              k = (f / this.cols) | 0;
            d.length <= k && d.push(0);
            f = this.getChildAt(f);
            var q = f.get_width();
            c[g] < q && (c[g] = q);
            g = f.get_height();
            d[k] < g && (d[k] = g);
          }
          var p = (q = this.margin);
          a = k = g = 0;
          for (b = this.get_numChildren(); a < b; ) {
            f = a++;
            f = this.getChildAt(f);
            var l = q,
              h = p;
            if (f instanceof ha) {
              var n = xa.__cast(f, ha);
              switch (n.halign) {
                case 'center':
                  l += (c[g] - n.get_width()) / 2;
                  break;
                case 'fill':
                  n.set_width(c[g]);
                  break;
                case 'right':
                  l += c[g] - n.get_width();
              }
              switch (n.valign) {
                case 'bottom':
                  h += d[k] - n.get_height();
                  break;
                case 'center':
                  h += (d[k] - n.get_height()) / 2;
                  break;
                case 'fill':
                  n.set_height(d[k]);
              }
            }
            f.set_x(l);
            f.set_y(h);
            q += c[g] + this.gap;
            ++g;
            g == this.cols &&
              ((q = this.margin), (p += d[k] + this.gap), ++k, (g = 0));
          }
          this.rHeight = 2 * this.margin + (d.length - 1) * this.gap;
          for (a = 0; a < d.length; ) ((g = d[a]), ++a, (this.rHeight += g));
          this.rWidth = 2 * this.margin + (c.length - 1) * this.gap;
          for (a = 0; a < c.length; ) ((q = c[a]), ++a, (this.rWidth += q));
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        addEmpty: function () {
          this.add(new Wa(0, 0));
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: Xe,
      });
      var Xc = function () {
        this.margin = this.gap = 10;
        ha.call(this);
      };
      h['com.watabou.coogee.ui.layouts.HBox'] = Xc;
      Xc.__name__ = 'com.watabou.coogee.ui.layouts.HBox';
      Xc.__super__ = ha;
      Xc.prototype = u(ha.prototype, {
        layout: function () {
          for (
            var a = this.margin,
              b = 0,
              c = !1,
              d = 0,
              f = this.get_numChildren();
            d < f;

          ) {
            var g = d++;
            g = this.getChildAt(g);
            'top' != g.valign && (c = !0);
            'fill' != g.valign && b < g.get_height() && (b = g.get_height());
            g.set_x(a);
            g.set_y(this.margin);
            a += g.get_width() + this.gap;
          }
          if (c)
            for (d = 0, f = this.get_numChildren(); d < f; )
              switch (((g = d++), (g = this.getChildAt(g)), g.valign)) {
                case 'bottom':
                  g.set_y(this.margin + (b - g.get_height()));
                  break;
                case 'center':
                  g.set_y(this.margin + (b - g.get_height()) / 2);
                  break;
                case 'fill':
                  g.set_height(b);
              }
          this.rWidth =
            a > this.margin ? a - this.gap + this.margin : 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a, b) {
          this.margin = a;
          this.gap = b;
        },
        __class__: Xc,
      });
      var tf = function () {
        this.margin = 10;
        ha.call(this);
      };
      h['com.watabou.coogee.ui.layouts.SimpleBox'] = tf;
      tf.__name__ = 'com.watabou.coogee.ui.layouts.SimpleBox';
      tf.__super__ = ha;
      tf.prototype = u(ha.prototype, {
        layout: function () {
          for (var a = 0, b = 0, c = 0, d = this.get_numChildren(); c < d; ) {
            var f = c++;
            f = this.getChildAt(f);
            a < f.get_width() && (a = f.get_width());
            b < f.get_height() && (b = f.get_height());
            f.set_x(this.margin);
            f.set_y(this.margin);
          }
          this.rWidth = a + 2 * this.margin;
          this.rHeight = b + 2 * this.margin;
        },
        add: function (a) {
          ha.prototype.add.call(this, a);
          this.layout();
        },
        setMargins: function (a) {
          this.margin = a;
        },
        __class__: tf,
      });
      var Xh = function () {
        this.change = new Ac();
        gb.call(this);
        this.setMargins(0, 0);
        this.tabRow = new $h();
        this.tabRow.click.add(m(this, this.onTab));
        this.tabRow.halign = 'fill';
        this.add(this.tabRow);
        this.stack = new tf();
        this.stack.setMargins(0);
        this.add(this.stack);
      };
      h['com.watabou.coogee.ui.layouts.Tabs'] = Xh;
      Xh.__name__ = 'com.watabou.coogee.ui.layouts.Tabs';
      Xh.__super__ = gb;
      Xh.prototype = u(gb.prototype, {
        layout: function () {
          null != this.stack && this.stack.layout();
          gb.prototype.layout.call(this);
        },
        addTab: function (a, b) {
          null != a && this.tabRow.addTab(a);
          this.stack.add(b);
          this.tabRow.get_selected() != this.stack.get_numChildren() - 1 &&
            null != a &&
            b.set_visible(!1);
          this.layout();
        },
        onTab: function (a) {
          var b = this.tabRow.get_selected();
          -1 != b && this.stack.getChildAt(b).set_visible(!1);
          this.stack.getChildAt(a).set_visible(!0);
          this.tabRow.set_selected(a);
          this.change.dispatch(a);
        },
        getTab: function () {
          return this.tabRow.get_selected();
        },
        getTabCount: function () {
          return this.tabRow.get_size();
        },
        set_rowSize: function (a) {
          return (this.tabRow.rowSize = a);
        },
        __class__: Xh,
        __properties__: u(gb.prototype.__properties__, {
          set_rowSize: 'set_rowSize',
        }),
      });
      var $d = function () {
        this._selected = -1;
        this.tabs = [];
        this.rowSize = 256;
        this.click = new Ac();
        ha.call(this);
        this.bg = Wa.light();
        this.add(this.bg);
      };
      h['com.watabou.coogee.ui.layouts._Tabs.TabButtons'] = $d;
      $d.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabButtons';
      $d.__super__ = ha;
      $d.prototype = u(ha.prototype, {
        get_selected: function () {
          return this._selected;
        },
        set_selected: function (a) {
          return (this._selected = a);
        },
        get_size: function () {
          return this.tabs.length;
        },
        layout: function () {
          this.bg.setSize(this.rWidth, this.rHeight);
        },
        addTab: function (a) {
          a = new ai(a);
          a.click.add(m(this, this.onTab));
          this.tabs.push(a);
          return a;
        },
        onTab: function (a) {
          this.click.dispatch(this.tabs.indexOf(a));
        },
        __class__: $d,
        __properties__: u(ha.prototype.__properties__, {
          get_size: 'get_size',
          set_selected: 'set_selected',
          get_selected: 'get_selected',
        }),
      });
      var fk = function () {
        this.first = 0;
        $d.call(this);
        this.stripe = new Xc();
        this.stripe.setMargins(0, 0);
        this.add(this.stripe);
        this.more = new kb('...');
        this.more.click.add(m(this, this.showList));
        this.more.set_visible(!1);
        this.add(this.more);
      };
      h['com.watabou.coogee.ui.layouts._Tabs.TabRow'] = fk;
      fk.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabRow';
      fk.__super__ = $d;
      fk.prototype = u($d.prototype, {
        layout: function () {
          $d.prototype.layout.call(this);
          this.more.set_height(this.rHeight - 8);
          this.more.set_x(this.rWidth - this.more.get_width());
          this.more.set_y(4);
        },
        addTab: function (a) {
          a = $d.prototype.addTab.call(this, a);
          this.stripe.add(a);
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (this.tabs.length > this.rowSize) {
            this.first > a
              ? (this.first = a)
              : a >= this.first + this.rowSize &&
                (this.first = a - this.rowSize + 1);
            for (var b = 0, c = this.tabs.length; b < c; )
              ((a = b++),
                this.tabs[a].set_visible(
                  a >= this.first && a < this.first + this.rowSize,
                ));
            this.stripe.set_x(-this.tabs[this.first].get_x());
          }
          -1 != this._selected && this.tabs[this._selected].set_selected(!0);
          return this.get_selected();
        },
        updateSize: function () {
          if (this.tabs.length <= this.rowSize)
            (this.more.set_visible(!1),
              (this.rWidth = this.stripe.get_width()));
          else {
            this.more.set_visible(!0);
            for (
              var a = (this.rWidth = 0),
                b = this.tabs.length - this.rowSize + 1;
              a < b;

            ) {
              for (var c = a++, d = 0, f = 0, g = this.rowSize; f < g; ) {
                var k = f++;
                d += this.tabs[c + k].get_width();
              }
              this.rWidth < d && (this.rWidth = d);
            }
            this.rWidth += 4 + this.more.get_width();
          }
          this.rHeight = this.stripe.get_height();
        },
        showList: function () {
          for (
            var a = this, b = new dc(), c = 0, d = this.tabs.length;
            c < d;

          ) {
            var f = [c++];
            b.addItem(
              this.tabs[f[0]].get_text(),
              (function (b) {
                return function () {
                  a.click.dispatch(b[0]);
                };
              })(f),
              this.get_selected() == f[0],
            );
          }
          c = w.getRect(this.more);
          w.showMenuAt(b, Math.ceil(c.x), c.get_bottom());
        },
        __class__: fk,
      });
      var $h = function () {
        $d.call(this);
        this.stripes = new gb();
        this.stripes.setMargins(0, 0);
        this.add(this.stripes);
      };
      h['com.watabou.coogee.ui.layouts._Tabs.TabMultiRow'] = $h;
      $h.__name__ = 'com.watabou.coogee.ui.layouts._Tabs.TabMultiRow';
      $h.__super__ = $d;
      $h.prototype = u($d.prototype, {
        addTab: function (a) {
          a = $d.prototype.addTab.call(this, a);
          null == this.lastRow &&
            ((this.lastRow = new Xc()),
            this.lastRow.setMargins(0, 0),
            this.stripes.add(this.lastRow));
          this.lastRow.add(a);
          this.lastRow.get_numChildren() >= this.rowSize &&
            (this.lastRow = null);
          this.stripes.layout();
          this.updateSize();
          this.layout();
          1 == this.tabs.length && this.set_selected(0);
          return a;
        },
        set_selected: function (a) {
          if (0 == this.tabs.length) return 0;
          -1 != this._selected && this.tabs[this._selected].set_selected(!1);
          this._selected = a;
          if (-1 != this._selected) {
            a = this.tabs[this._selected];
            a.set_selected(!0);
            for (
              var b = this.stripes.getChildAt(
                this.stripes.get_numChildren() - 1,
              );
              -1 == b.getChildIndex(a);

            )
              ((b = this.stripes.removeChildAt(0)), this.stripes.add(b));
          }
          return this.get_selected();
        },
        updateSize: function () {
          this.rWidth = this.stripes.get_width();
          this.rHeight = this.stripes.get_height();
        },
        __class__: $h,
      });
      var ai = function (a) {
        this.click = new Ac();
        ha.call(this);
        this.bg = new T();
        this.addChild(this.bg);
        this.tf = rc.get('', C.format(C.uiFont, C.smallSize, C.black));
        this.tf.set_x(4);
        this.tf.set_y(8);
        this.addChild(this.tf);
        this.set_text(a);
        this.set_selected(!1);
        this.set_buttonMode(!0);
        this.addEventListener('click', m(this, this.onClick));
      };
      h['com.watabou.coogee.ui.layouts.Tab'] = ai;
      ai.__name__ = 'com.watabou.coogee.ui.layouts.Tab';
      ai.__super__ = ha;
      ai.prototype = u(ha.prototype, {
        layout: function () {
          var a = this.bg.get_graphics();
          a.clear();
          a.beginFill(C.white);
          a.drawRoundRectComplex(
            0,
            4,
            this.rWidth,
            this.rHeight - 4,
            4,
            4,
            0,
            0,
          );
        },
        onClick: function (a) {
          this.click.dispatch(this);
        },
        get_text: function () {
          return this.tf.get_text();
        },
        set_text: function (a) {
          this.tf.set_text(a);
          this.setSize(
            this.tf.get_width() + 8,
            Math.ceil(this.tf.get_height() + 8),
          );
          return a;
        },
        set_selected: function (a) {
          this.mouseEnabled = !a;
          this.bg.set_alpha(a ? 1 : 0);
          return a;
        },
        __class__: ai,
        __properties__: u(ha.prototype.__properties__, {
          set_selected: 'set_selected',
          set_text: 'set_text',
          get_text: 'get_text',
        }),
      });
      var rc = function () {};
      h['com.watabou.coogee.ui.utils.Text'] = rc;
      rc.__name__ = 'com.watabou.coogee.ui.utils.Text';
      rc.get = function (a, b, c, d) {
        null == a && (a = '');
        var f = new Qc();
        null != c || null != d ? rc.activate(f, c, d) : f.set_selectable(!1);
        f.set_autoSize(1);
        null != b && f.set_defaultTextFormat(b);
        f.set_htmlText(a);
        return f;
      };
      rc.input = function (a, b, c) {
        null == a && (a = '');
        var d = new Qc();
        d.set_type(1);
        d.set_borderColor(d.get_defaultTextFormat().color);
        d.set_background(!0);
        d.set_border(!0);
        d.addEventListener('change', function (a) {
          null != c && c();
        });
        d.set_defaultTextFormat(b);
        d.set_text('' != a ? a : ' ');
        d.set_autoSize(1);
        d.set_height(d.get_height());
        d.set_autoSize(2);
        d.set_text(a);
        return d;
      };
      rc.format = function (a, b, c) {
        null == c && (c = 0);
        return new Fe(Rb.exists(a) ? Rb.getFont(a).name : a, b, c);
      };
      rc.activate = function (a, b, c) {
        a.set_type(1);
        a.addEventListener('focusIn', function (b) {
          a.set_borderColor(a.get_defaultTextFormat().color);
          a.set_border(!0);
        });
        a.addEventListener('focusOut', function (b) {
          a.set_border(!1);
          null != c && c();
        });
        a.addEventListener('keyDown', function (b) {
          if (13 == b.keyCode || 27 == b.keyCode)
            (a.stage.set_focus(a.stage), b.stopPropagation());
        });
        a.addEventListener('change', function (a) {
          null != b && b();
        });
      };
      var B = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      h['openfl.geom.Point'] = B;
      B.__name__ = 'openfl.geom.Point';
      B.distance = function (a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(c * c + a * a);
      };
      B.polar = function (a, b) {
        return new B(a * Math.cos(b), a * Math.sin(b));
      };
      B.prototype = {
        add: function (a) {
          return new B(a.x + this.x, a.y + this.y);
        },
        clone: function () {
          return new B(this.x, this.y);
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
        },
        normalize: function (a) {
          if (0 != this.x || 0 != this.y)
            ((a /= Math.sqrt(this.x * this.x + this.y * this.y)),
              (this.x *= a),
              (this.y *= a));
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setTo: function (a, b) {
          this.x = a;
          this.y = b;
        },
        subtract: function (a) {
          return new B(this.x - a.x, this.y - a.y);
        },
        __toLimeVector2: function () {
          null == B.__limeVector2 && (B.__limeVector2 = new tg());
          var a = B.__limeVector2;
          a.x = this.x;
          a.y = this.y;
          return B.__limeVector2;
        },
        get_length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        __class__: B,
        __properties__: { get_length: 'get_length' },
      };
      var Ea = function (a, b) {
        this.width = a;
        this.height = b;
        this.root = ia.createElement('svg');
        this.root.set('width', I.string(Math.round(1e3 * a) / 1e3));
        this.root.set('height', I.string(Math.round(1e3 * b) / 1e3));
        this.root.set('xmlns', 'http://www.w3.org/2000/svg');
      };
      h['com.watabou.formats.SVG'] = Ea;
      Ea.__name__ = 'com.watabou.formats.SVG';
      Ea.setOpacity = function (a, b) {
        a.set('opacity', null == b ? 'null' : '' + b);
        return a;
      };
      Ea.setFill = function (a, b, c) {
        null == c && (c = 1);
        a.set('fill', '#' + P.hex(b, 6));
        1 > c && a.set('fill-opacity', null == c ? 'null' : '' + c);
        return a;
      };
      Ea.noFill = function (a) {
        a.set('fill', 'none');
        return a;
      };
      Ea.fillRule = function (a, b) {
        a.set('fill-rule', b);
        return a;
      };
      Ea.setStroke = function (a, b, c, d, f) {
        null == c && (c = 0);
        a.set('stroke', '#' + P.hex(b, 6));
        0 != c && a.set('stroke-width', I.string(Math.round(1e3 * c) / 1e3));
        Ea.joinNcap(a, d, f);
        return a;
      };
      Ea.strokeOpacity = function (a, b) {
        a.set('stroke-opacity', null == b ? 'null' : '' + b);
        return a;
      };
      Ea.joinNcap = function (a, b, c) {
        null != b && a.set('stroke-linejoin', b);
        null != c && a.set('stroke-linecap', c);
        return a;
      };
      Ea.style = function (a, b) {
        a.set('style', b);
        return a;
      };
      Ea.clearTransform = function (a) {
        a.remove('transform');
        return a;
      };
      Ea.addTransform = function (a, b) {
        var c = a.get('transform');
        a.set('transform', null == c ? b : '' + b + ' ' + c);
        return a;
      };
      Ea.translate = function (a, b, c) {
        return Ea.addTransform(
          a,
          'translate(' +
            I.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * c) / 1e3) +
            ')',
        );
      };
      Ea.scale = function (a, b, c) {
        return Ea.addTransform(
          a,
          'scale(' +
            I.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * c) / 1e3) +
            ')',
        );
      };
      Ea.rotate = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        return Ea.addTransform(
          a,
          'rotate(' +
            I.string(Math.round(1e3 * b) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * c) / 1e3) +
            ' ' +
            I.string(Math.round(1e3 * d) / 1e3) +
            ')',
        );
      };
      Ea.x = function (a, b) {
        a.set('x', I.string(Math.round(1e3 * b) / 1e3));
      };
      Ea.y = function (a, b) {
        a.set('y', I.string(Math.round(1e3 * b) / 1e3));
      };
      Ea.linearGradient = function (a, b, c) {
        null == b && (b = 'userSpaceOnUse');
        var d = ia.createElement('linearGradient');
        d.set('id', a);
        d.set('gradientUnits', b);
        null != c &&
          ((a = c.transformPoint(Ea._p0)),
          (c = c.transformPoint(Ea._p1)),
          d.set('x1', I.string(Math.round(1e3 * a.x) / 1e3)),
          d.set('y1', I.string(Math.round(1e3 * a.y) / 1e3)),
          d.set('x2', I.string(Math.round(1e3 * c.x) / 1e3)),
          d.set('y2', I.string(Math.round(1e3 * c.y) / 1e3)));
        return d;
      };
      Ea.radialGradient = function (a, b, c) {
        null == b && (b = 'userSpaceOnUse');
        var d = ia.createElement('radialGradient');
        d.set('id', a);
        d.set('gradientUnits', b);
        null != c &&
          (d.set('cx', I.string(Math.round(1e3 * c.tx) / 1e3)),
          d.set('cy', I.string(Math.round(1e3 * c.ty) / 1e3)),
          d.set('r', I.string(Math.round(819200 * c.a) / 1e3)));
        return d;
      };
      Ea.stop = function (a, b, c) {
        null == c && (c = 1);
        var d = ia.createElement('stop');
        d.set('offset', Math.round(100 * a) + '%');
        d.set('stop-color', '#' + P.hex(b, 6));
        1 > c && d.set('stop-opacity', null == c ? 'null' : '' + c);
        return d;
      };
      Ea.group = function (a) {
        var b = ia.createElement('g');
        null != a && b.set('id', a);
        return b;
      };
      Ea.clipPath = function (a) {
        var b = ia.createElement('clipPath');
        b.set('id', a);
        Ea.setFill(b, 16777215);
        return b;
      };
      Ea.text = function (a, b, c) {
        var d = ia.createElement('text');
        a = ia.createPCData(a);
        d.addChild(a);
        null != b && d.set('text-anchor', b);
        null != c && d.set('dominant-baseline', c);
        return d;
      };
      Ea.tspan = function (a) {
        var b = ia.createElement('tspan');
        a = ia.createPCData(a);
        b.addChild(a);
        return b;
      };
      Ea.rect = function (a, b, c, d) {
        var f = ia.createElement('rect');
        f.set('x', I.string(Math.round(1e3 * a) / 1e3));
        f.set('y', I.string(Math.round(1e3 * b) / 1e3));
        f.set('width', I.string(Math.round(1e3 * c) / 1e3));
        f.set('height', I.string(Math.round(1e3 * d) / 1e3));
        return f;
      };
      Ea.prototype = { __class__: Ea };
      var Tb = function () {
        this.buff = new G();
      };
      h['com.watabou.formats.SVGPath'] = Tb;
      Tb.__name__ = 'com.watabou.formats.SVGPath';
      Tb.prototype = {
        xml: function () {
          var a = ia.createElement('path');
          a.set('d', this.buff.b);
          return a;
        },
        __class__: Tb,
      };
      var ja = function () {};
      h['com.watabou.formats.Sprite2SVG'] = ja;
      ja.__name__ = 'com.watabou.formats.Sprite2SVG';
      ja.create = function (a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = -1);
        d && (ja.resetGradients(), ja.resetImports());
        d = new Ea(a, b);
        ja.defaultAttributes(d.root);
        -1 != c &&
          ((a = Ea.rect(0, 0, a, b)), Ea.setFill(a, c), d.root.addChild(a));
        return d;
      };
      ja.defaultAttributes = function (a) {
        Ea.joinNcap(a, 'round', 'round');
        Ea.fillRule(a, 'evenodd');
        Ea.noFill(a);
      };
      ja.drawSprite = function (a) {
        var b = a.__isMask ? Ea.clipPath(a.get_name()) : Ea.group();
        ja.copyAttributes(a, b);
        ja.drawGraphics(a.get_graphics(), b);
        ja.drawChildren(a, b);
        return b;
      };
      ja.drawShape = function (a) {
        var b = a.__isMask ? Ea.clipPath(a.get_name()) : Ea.group();
        ja.copyAttributes(a, b);
        ja.drawGraphics(a.get_graphics(), b);
        return b;
      };
      ja.copyAttributes = function (a, b) {
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          Ea.scale(b, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && Ea.rotate(b, a.get_rotation());
        (0 == a.get_x() && 0 == a.get_y()) ||
          Ea.translate(b, a.get_x(), a.get_y());
        1 > a.get_alpha() && Ea.setOpacity(b, a.get_alpha());
        if (10 != a.get_blendMode()) {
          var c = ja.BLEND_MODES,
            d = a.get_blendMode();
          Ea.style(b, 'mix-blend-mode: ' + c.h[d]);
        }
        null != a.get_mask() &&
          b.set('clip-path', 'url(#' + a.get_mask().get_name() + ')');
      };
      ja.drawGraphics = function (a, b) {
        var c = !1,
          d = 0,
          f = 1,
          g = 1,
          k = 2,
          q = 1,
          p = !1,
          l = 0,
          h = 1,
          n = null;
        for (a = a.readGraphicsData(!1).iterator(); a.hasNext(); ) {
          var t = a.next();
          switch (t.__graphicsDataType) {
            case 0:
              c = t;
              f = c.thickness;
              g = c.fill;
              d = g.color;
              g = g.alpha;
              k = c.joints;
              q = c.caps;
              c = !0;
              break;
            case 1:
              n = null;
              p = t;
              l = p.color;
              h = p.alpha;
              p = !0;
              break;
            case 2:
              n = t;
              ja.gradients.push(n);
              p = !0;
              break;
            case 3:
              t = ja.drawPath(t.commands, t.data, t.winding);
              p &&
                (null == n
                  ? Ea.setFill(t, l, h)
                  : t.set('fill', 'url(#grad' + ja.gradients.length + ')'));
              c &&
                (Ea.setStroke(t, d, f),
                (2 == k && 1 == q) ||
                  Ea.joinNcap(t, ja.JOINTS.h[k], ja.CAPS.h[q]),
                1 > g && Ea.strokeOpacity(t, g));
              b.addChild(t);
              break;
            case 5:
              ((p = c = !1), (n = null));
          }
        }
      };
      ja.drawPath = function (a, b, c) {
        c = new Tb();
        var d = 0;
        a = a.iterator();
        a: for (; a.hasNext(); )
          switch (a.next()) {
            case 1:
              var f = b.get(d),
                g = (Tb.ly = b.get(d + 1));
              c.buff.b += I.string(
                ' M ' +
                  (I.string(Math.round(1e3 * (Tb.lx = f)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * g) / 1e3)),
              );
              d += 2;
              break;
            case 2:
              f = b.get(d);
              g = b.get(d + 1);
              if (0 == c.buff.b.length) {
                var k = (Tb.ly = Tb.ly);
                c.buff.b += I.string(
                  ' M ' +
                    (I.string(Math.round(1e3 * (Tb.lx = Tb.lx)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * k) / 1e3)),
                );
              }
              g = Tb.ly = g;
              c.buff.b += I.string(
                ' L ' +
                  (I.string(Math.round(1e3 * (Tb.lx = f)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * g) / 1e3)),
              );
              d += 2;
              break;
            case 3:
              k = b.get(d);
              var q = b.get(d + 1);
              f = b.get(d + 2);
              g = b.get(d + 3);
              if (0 == c.buff.b.length) {
                var p = (Tb.ly = Tb.ly);
                c.buff.b += I.string(
                  ' M ' +
                    (I.string(Math.round(1e3 * (Tb.lx = Tb.lx)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * p) / 1e3)),
                );
              }
              k =
                'Q ' +
                (I.string(Math.round(1e3 * k) / 1e3) +
                  ',' +
                  I.string(Math.round(1e3 * q) / 1e3)) +
                ' ';
              g = Tb.ly = g;
              c.buff.b += I.string(
                ' ' +
                  (k +
                    (I.string(Math.round(1e3 * (Tb.lx = f)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * g) / 1e3))),
              );
              d += 4;
              break;
            case 4:
              a = b.get(d + 2);
              b = Tb.ly = b.get(d + 3);
              c.buff.b += I.string(
                ' M ' +
                  (I.string(Math.round(1e3 * (Tb.lx = a)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 5:
              a = b.get(d + 2);
              b = b.get(d + 3);
              0 == c.buff.b.length &&
                ((d = Tb.ly = Tb.ly),
                (c.buff.b += I.string(
                  ' M ' +
                    (I.string(Math.round(1e3 * (Tb.lx = Tb.lx)) / 1e3) +
                      ',' +
                      I.string(Math.round(1e3 * d) / 1e3)),
                )));
              b = Tb.ly = b;
              c.buff.b += I.string(
                ' L ' +
                  (I.string(Math.round(1e3 * (Tb.lx = a)) / 1e3) +
                    ',' +
                    I.string(Math.round(1e3 * b) / 1e3)),
              );
              break a;
            case 6:
              f = b.get(d);
              g = b.get(d + 1);
              k = b.get(d + 2);
              q = b.get(d + 3);
              p = b.get(d + 4);
              var l = b.get(d + 5);
              c.buff.b += I.string(
                ' C ' + (f + ',' + g + ' ' + k + ',' + q + ' ' + p + ',' + l),
              );
              d += 6;
          }
        return c.xml();
      };
      ja.drawChildren = function (a, b) {
        for (var c = 0, d = a.get_numChildren(); c < d; ) {
          var f = c++;
          f = a.getChildAt(f);
          if (f.get_visible()) {
            var g = null;
            null != ja.handleObject && (g = ja.handleObject(f));
            null == g &&
              (f instanceof T
                ? (g = ja.drawSprite(f))
                : f instanceof sf
                  ? (g = ja.drawShape(f))
                  : f instanceof Qc && (g = ja.drawText(f)));
            if (null != g) {
              for (var k = 0, q = f.get_filters(); k < q.length; ) {
                var p = q[k];
                ++k;
                ja.handleFilter(f, p, g, b);
              }
              b.addChild(g);
            }
          }
        }
      };
      ja.drawText = function (a) {
        var b = a.get_defaultTextFormat(),
          c = 1 < a.get_numLines(),
          d = Ea.text(c ? '' : a.get_text(), null, 'text-before-edge');
        Ea.style(d, ja.svgFont(b));
        Ea.setFill(d, b.color);
        (1 == a.get_scaleX() && 1 == a.get_scaleY()) ||
          Ea.scale(d, a.get_scaleX(), a.get_scaleY());
        0 != a.get_rotation() && Ea.rotate(d, a.get_rotation());
        1 > a.get_alpha() && Ea.setOpacity(d, a.get_alpha());
        if (c)
          for (
            Ea.translate(d, a.get_x(), a.get_y()), b = 0, c = a.get_numLines();
            b < c;

          ) {
            var f = b++,
              g = Ea.tspan(a.getLineText(f));
            f = a.getCharBoundaries(a.getLineOffset(f));
            Ea.x(g, f.x);
            Ea.y(g, f.y);
            d.addChild(g);
          }
        else
          ((f = a.getCharBoundaries(a.getLineOffset(0))),
            Ea.translate(
              d,
              a.get_x() + f.x * a.get_scaleX(),
              a.get_y() + f.y * a.get_scaleY(),
            ));
        return d;
      };
      ja.substituteGenerics = function (a) {
        switch (a) {
          case '_sans':
            return 'sans-serif';
          case '_serif':
            return 'serif';
          case '_typewriter':
            return 'monospace';
          default:
            return a;
        }
      };
      ja.svgFont = function (a) {
        var b = ja.substituteFont(a.font),
          c = 'font: ';
        a.bold && (c += 'bold ');
        a.italic && (c += 'italic ');
        c += '' + a.size + 'px ' + b;
        0 != a.letterSpacing &&
          (c += '; letter-spacing: ' + a.letterSpacing + 'px');
        return c;
      };
      ja.resetGradients = function () {
        ja.gradients = [];
      };
      ja.getGradients = function () {
        for (
          var a = ia.createElement('defs'), b = 0, c = ja.gradients.length;
          b < c;

        ) {
          var d = b++,
            f = 'grad' + (d + 1);
          d = ja.gradients[d];
          if (0 == d.type) {
            f = Ea.linearGradient(f, null, d.matrix);
            for (var g = 0, k = d.colors.length; g < k; ) {
              var q = g++;
              f.addChild(Ea.stop(d.ratios[q] / 255, d.colors[q], d.alphas[q]));
            }
            a.addChild(f);
          } else {
            f = Ea.radialGradient(f, null, d.matrix);
            g = 0;
            for (k = d.colors.length; g < k; )
              ((q = g++),
                f.addChild(
                  Ea.stop(d.ratios[q] / 255, d.colors[q], d.alphas[q]),
                ));
            a.addChild(f);
          }
        }
        return a;
      };
      ja.resetImports = function () {
        ja.imports = [];
      };
      ja.addImport = function (a) {
        -1 == ja.imports.indexOf(a) && ja.imports.push(a);
      };
      ja.getImports = function () {
        for (
          var a = ia.createElement('style'), b = '', c = 0, d = ja.imports;
          c < d.length;

        ) {
          var f = d[c];
          ++c;
          b += I.string('@import url("' + f + '");');
        }
        a.addChild(ia.createCData(b));
        return a;
      };
      ja.handleFilter = function (a, b, c, d) {
        if (b instanceof dd) {
          for (var f = 1; null != a.parent; )
            ((f *= a.get_scaleX()), (a = a.parent));
          f = a.get_scaleX();
          a = ia.parse(Vf.print(c)).firstElement();
          Ea.setStroke(a, b.get_color(), (2 * b.get_blurX()) / f);
          1 > b.get_alpha() && Ea.strokeOpacity(a, b.get_alpha());
          d.addChild(a);
        }
      };
      var kc = function () {};
      h['com.watabou.geom.Chaikin'] = kc;
      kc.__name__ = 'com.watabou.geom.Chaikin';
      kc.render = function (a, b, c, d) {
        null == c && (c = 1);
        for (var f = 0; f < c; ) {
          f++;
          for (var g = [], k = a.length, q = 1, p = k - 1; q < p; ) {
            var l = q++,
              h = a[l];
            null == d || -1 == d.indexOf(h)
              ? (g.push(ta.lerp(h, a[l - 1], 0.25)),
                g.push(ta.lerp(h, a[l + 1], 0.25)))
              : g.push(h);
          }
          b
            ? ((q = a[k - 1]),
              null == d || -1 == d.indexOf(q)
                ? (g.push(ta.lerp(q, a[k - 2], 0.25)),
                  g.push(ta.lerp(q, a[0], 0.25)))
                : g.push(q),
              (q = a[0]),
              null == d || -1 == d.indexOf(q)
                ? (g.push(ta.lerp(q, a[k - 1], 0.25)),
                  g.push(ta.lerp(q, a[1], 0.25)))
                : g.push(q))
            : (g.unshift(a[0]), g.push(a[k - 1]));
          a = g;
        }
        return a;
      };
      var bi = function (a, b) {
        null == b && (b = 0);
        this.c = a;
        this.r = b;
      };
      h['com.watabou.geom.Circle'] = bi;
      bi.__name__ = 'com.watabou.geom.Circle';
      bi.prototype = {
        overlaps: function (a) {
          return B.distance(this.c, a.c) < this.r + a.r;
        },
        __class__: bi,
      };
      var bc = function () {};
      h['com.watabou.geom.Color'] = bc;
      bc.__name__ = 'com.watabou.geom.Color';
      bc.rgbfSafe = function (a, b, c) {
        return (
          ((ac.gate(255 * a, 0, 255) | 0) << 16) |
          ((ac.gate(255 * b, 0, 255) | 0) << 8) |
          ac.gate(255 * c, 0, 255) |
          0
        );
      };
      bc.lerp = function (a, b, c) {
        null == c && (c = 0.5);
        var d = (a >>> 8) & 255,
          f = a & 255,
          g = b >>> 16,
          k = (b >>> 8) & 255;
        b &= 255;
        var q = 1 - c;
        return (
          (((db.toFloat(a >>> 16) * q + db.toFloat(g) * c) | 0) << 16) |
          (((db.toFloat(d) * q + db.toFloat(k) * c) | 0) << 8) |
          (db.toFloat(f) * q + db.toFloat(b) * c) |
          0
        );
      };
      bc.lerpHSV = function (a, b, c) {
        null == c && (c = 0.5);
        a = bc.rgb2hsv(a);
        b = bc.rgb2hsv(b);
        var d = 0 == a.y ? b.x : 0 == b.y ? a.x : bc.lerpHue(a.x, b.x, c),
          f = 1 - c;
        return bc.hsv(d, a.y * f + b.y * c, a.z * f + b.z * c);
      };
      bc.lerpHue = function (a, b, c) {
        null == c && (c = 0.5);
        a -= 360 * Math.floor(a / 360);
        b -= 360 * Math.floor(a / 360);
        if (a > b) {
          var d = a;
          a = b;
          b = d;
          c = 1 - c;
        }
        180 < b - a && (b -= 360);
        return a * (1 - c) + b * c;
      };
      bc.scale = function (a, b) {
        return bc.rgbfSafe(
          (db.toFloat(a >>> 16) / db.toFloat(255)) * b,
          (db.toFloat((a >>> 8) & 255) / db.toFloat(255)) * b,
          (db.toFloat(a & 255) / db.toFloat(255)) * b,
        );
      };
      bc.hsv = function (a, b, c) {
        var d = function (a) {
            a -= 360 * Math.floor(a / 360);
            return ac.gate(Math.abs(a / 60 - 3) - 1, 0, 1);
          },
          f = d(a),
          g = d(a - 120);
        a = d(a + 120);
        return bc.rgbfSafe(
          (f * b + 1 - b) * c,
          (g * b + 1 - b) * c,
          (a * b + 1 - b) * c,
        );
      };
      bc.rgb2hsv = function (a) {
        var b = db.toFloat(a >>> 16) / db.toFloat(255),
          c = db.toFloat((a >>> 8) & 255) / db.toFloat(255);
        a = db.toFloat(a & 255) / db.toFloat(255);
        var d = Math.min(b, Math.min(c, a)),
          f = Math.max(b, Math.max(c, a));
        return d == f
          ? new ci(0, 0, d)
          : new ci(
              60 *
                ((b == d ? 3 : a == d ? 1 : 5) -
                  (b == d ? c - a : a == d ? b - c : a - b) / (f - d)),
              (f - d) / f,
              f,
            );
      };
      bc.brightness = function (a) {
        var b = db.toFloat(a >>> 16) / db.toFloat(255),
          c = db.toFloat((a >>> 8) & 255) / db.toFloat(255);
        a = db.toFloat(a & 255) / db.toFloat(255);
        return Math.sqrt(0.299 * b * b + 0.587 * c * c + 0.114 * a * a);
      };
      var uf = function () {};
      h['com.watabou.geom.Cubic'] = uf;
      uf.__name__ = 'com.watabou.geom.Cubic';
      uf.smoothOpen = function (a, b) {
        null == b && (b = 4);
        var c = function (a, b, c) {
            a = b.subtract(a);
            b = c.subtract(b);
            var d = a.get_length() * b.get_length(),
              f = (a.x * b.y - a.y * b.x) / d;
            a = (a.x * b.x + a.y * b.y) / d;
            return c.add(new B(b.x * a - b.y * f, b.y * a + b.x * f));
          },
          d = a.length;
        if (2 >= d) return a;
        var f = c(a[2], a[1], a[0]);
        c = c(a[d - 3], a[d - 2], a[d - 1]);
        a = a.slice();
        a.unshift(f);
        a.push(c);
        f = [];
        c = 1;
        for (var g = a.length - 2; c < g; ) {
          var k = c++,
            q = a[k],
            p = a[k + 1],
            l = a[k + 2],
            h = q,
            n = p;
          k = q.subtract(a[k - 1]);
          k.normalize(1);
          q = p.subtract(q);
          q.normalize(1);
          p = l.subtract(p);
          p.normalize(1);
          l = k.add(q);
          l.normalize(1);
          p = q.add(p);
          p.normalize(1);
          k = B.distance(h, n);
          q = 1 / (1 + (l.x * q.x + l.y * q.y) + (p.x * q.x + p.y * q.y));
          var t = k * q;
          l = new B(h.x + l.x * t, h.y + l.y * t);
          q *= -k;
          q = new B(n.x + p.x * q, n.y + p.y * q);
          f.push(h);
          f.push(l);
          f.push(q);
          f.push(n);
        }
        b = uf.build(f, b);
        b.push(a[d].clone());
        return b;
      };
      uf.build = function (a, b) {
        null == b && (b = 4);
        var c = a.length,
          d = [],
          f = 0;
        do {
          var g = a[f++],
            k = a[f++],
            q = a[f++],
            p = a[f++];
          d.push(g.clone());
          for (var l = 1, h = b; l < h; ) {
            var n = l++;
            d.push(uf.cubic(g, k, q, p, n / b));
          }
        } while (f < c);
        return d;
      };
      uf.cubic = function (a, b, c, d, f) {
        var g = 1 - f,
          k = g * g * g;
        a = new B(a.x * k, a.y * k);
        k = 3 * g * g * f;
        a.x += b.x * k;
        a.y += b.y * k;
        k = 3 * g * f * f;
        a.x += c.x * k;
        a.y += c.y * k;
        k = f * f * f;
        a.x += d.x * k;
        a.y += d.y * k;
        return a;
      };
      var ec = function (a, b) {
        this.vertices = new va();
        this.edges = [];
        this.faces = [];
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          for (var f = [], g = 0; g < d.length; ) {
            var k = d[g];
            ++g;
            k = new gk(this.addVertex(k));
            this.edges.push(k);
            f.push(k);
          }
          g = new hk(f[0]);
          this.faces.push(g);
          var q = d.length;
          d = 0;
          for (var p = q; d < p; ) {
            k = d++;
            var l = f[k];
            l.next = f[(k + 1) % q];
            l.face = g;
          }
        }
        c = 0;
        for (g = this.edges; c < g.length; )
          if (((a = g[c]), ++c, null == a.twin))
            for (f = a.origin, k = a.next.origin.edges, d = 0; d < k.length; )
              if (((q = k[d]), ++d, q.next.origin == f)) {
                a.twin = q;
                q.twin = a;
                break;
              }
        if (null != b)
          for (c = 0, g = this.faces.length; c < g; )
            ((k = c++), (this.faces[k].data = b[k]));
      };
      h['com.watabou.geom.DCEL'] = ec;
      ec.__name__ = 'com.watabou.geom.DCEL';
      ec.floodFill = function (a, b) {
        var c = [];
        a = [a];
        var d = new va();
        for (
          null == b &&
          (b = function (a) {
            return !0;
          });
          0 < a.length;

        ) {
          var f = a.pop();
          if (b(f)) {
            c.push(f);
            for (var g = f.halfEdge, k = g, q = !0; q; ) {
              var p = k;
              k = k.next;
              q = k != g;
              null != p.twin &&
                ((p = p.twin.face),
                null == d.h.__keys__[p.__id__] && da.add(a, p));
            }
          }
          d.set(f, !0);
        }
        return c;
      };
      ec.floodFillEx = function (a, b) {
        for (var c = [a], d = [], f = (a = a.halfEdge), g = !0; g; ) {
          var k = f;
          f = f.next;
          g = f != a;
          null != k.twin && d.push(k);
        }
        for (; 0 < d.length; )
          if (((k = d.pop()), (a = k.twin.face), -1 == c.indexOf(a) && b(k)))
            for (c.push(a), f = a = a.halfEdge, g = !0; g; )
              ((k = f),
                (f = f.next),
                (g = f != a),
                null != k.twin && d.push(k));
        return c;
      };
      ec.split = function (a) {
        for (var b = [], c = Ye.fromArray(a); !Ye.isEmpty(c); ) {
          for (var d = null, f = 0; f < a.length; ) {
            var g = a[f];
            ++f;
            if (null != c.h.__keys__[g.__id__]) {
              d = g;
              break;
            }
          }
          d = ec.floodFill(d, function (a) {
            return null != c.h.__keys__[a.__id__];
          });
          Ye.removeArr(c, d);
          b.push(d);
        }
        return b;
      };
      ec.circumference = function (a, b) {
        var c = Ye.fromArray(b);
        if (null == a)
          for (var d = Infinity, f = 0; f < b.length; ) {
            var g = b[f];
            ++f;
            for (var k = (g = g.halfEdge), q = !0; q; ) {
              var p = k;
              k = k.next;
              q = k != g;
              var l = p;
              if (null == l.twin || null == c.h.__keys__[l.twin.face.__id__])
                ((p = l.origin.point.x), d > p && ((d = p), (a = l)));
            }
          }
        p = [];
        l = a;
        do
          for (
            p.push(l), l = l.next;
            null != l.twin && null != c.h.__keys__[l.twin.face.__id__];

          )
            l = l.twin.next;
        while (l != a);
        return p;
      };
      ec.outline = function (a) {
        for (var b = Ye.fromArray(a), c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          for (var g = (f = f.halfEdge), k = !0; k; ) {
            var q = g;
            g = g.next;
            k = g != f;
            (null != q.twin && null != b.h.__keys__[q.twin.face.__id__]) ||
              c.push(q);
          }
        }
        b = null;
        for (d = []; !da.isEmpty(c); )
          ((f = ec.circumference(c[0], a)),
            da.removeAll(c, f),
            0 < Fd.area(nd.toPoly(f)) ? (b = f) : d.push(f));
        d.unshift(b);
        return d;
      };
      ec.outlineEx = function (a, b) {
        for (var c = [], d = Ye.fromArray(a), f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          for (var k = g.halfEdge, q = k, p = !0; p; )
            ((g = q),
              (q = q.next),
              (p = q != k),
              (null == g.twin ||
                null == d.h.__keys__[g.twin.face.__id__] ||
                (null != b && !b(g))) &&
                c.push(g));
        }
        for (a = []; !da.isEmpty(c); ) {
          b = [];
          g = d = c[0];
          do for (b.push(g), g = g.next; -1 == c.indexOf(g); ) g = g.twin.next;
          while (g != d);
          da.removeAll(c, b);
          a.push(b);
        }
        return a;
      };
      ec.prototype = {
        addVertex: function (a) {
          var b = this.vertices.h[a.__id__];
          if (null == b) {
            b = this.vertices;
            var c = new ik(a);
            b.set(a, c);
            return c;
          }
          return b;
        },
        __class__: ec,
      };
      var gk = function (a) {
        this.origin = a;
        a.edges.push(this);
      };
      h['com.watabou.geom.HalfEdge'] = gk;
      gk.__name__ = 'com.watabou.geom.HalfEdge';
      gk.prototype = { __class__: gk };
      var ik = function (a) {
        this.edges = [];
        this.point = a;
      };
      h['com.watabou.geom.Vertex'] = ik;
      ik.__name__ = 'com.watabou.geom.Vertex';
      ik.prototype = { __class__: ik };
      var hk = function (a) {
        this.halfEdge = a;
      };
      h['com.watabou.geom.Face'] = hk;
      hk.__name__ = 'com.watabou.geom.Face';
      hk.prototype = {
        getNeighbours: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            null != f.twin && a.push(f.twin.face);
          }
          return a;
        },
        getPoly: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            a.push(f.origin.point);
          }
          return a;
        },
        invert: function () {
          for (var a = [], b = this.halfEdge, c = b, d = !0; d; ) {
            var f = c;
            c = c.next;
            d = c != b;
            a.push(f);
          }
          b = a;
          c = b.length;
          for (a = 0; a < c; ) ((d = a++), (b[d].next = b[(d + c - 1) % c]));
        },
        __class__: hk,
      };
      var ug = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      h['com.watabou.geom.Dot'] = ug;
      ug.__name__ = 'com.watabou.geom.Dot';
      ug.prototype = {
        add: function (a) {
          return new ug(this.x + a.x, this.y + a.y);
        },
        __class__: ug,
      };
      var nd = function () {};
      h['com.watabou.geom.EdgeChain'] = nd;
      nd.__name__ = 'com.watabou.geom.EdgeChain';
      nd.toPoly = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(d.origin.point);
        }
        return b;
      };
      nd.toPolyline = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(d.origin.point);
        }
        b.push(a[a.length - 1].next.origin.point);
        return b;
      };
      nd.vertices = function (a, b) {
        null == b && (b = !1);
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          c.push(f.origin);
        }
        b && c.push(a[a.length - 1].next.origin);
        return c;
      };
      nd.edgeByOrigin = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (d.origin == b) return d;
        }
        return null;
      };
      var ta = function () {};
      h['com.watabou.geom.GeomUtils'] = ta;
      ta.__name__ = 'com.watabou.geom.GeomUtils';
      ta.intersectLines = function (a, b, c, d, f, g, k, q) {
        var p = c * q - d * k;
        if (0 == p) return null;
        p = (d * (f - a) - c * (g - b)) / p;
        return new B(
          Math.abs(c) > Math.abs(d) ? (f - a + k * p) / c : (g - b + q * p) / d,
          p,
        );
      };
      ta.lerp = function (a, b, c) {
        null == c && (c = 0.5);
        var d = a.x,
          f = c;
        null == f && (f = 0.5);
        var g = a.y;
        a = c;
        null == a && (a = 0.5);
        return new B(d + (b.x - d) * f, g + (b.y - g) * a);
      };
      ta.triArea = function (a, b, c) {
        return 0.5 * ((a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y));
      };
      var di = function () {
        this.nodes = [];
      };
      h['com.watabou.geom.Graph'] = di;
      di.__name__ = 'com.watabou.geom.Graph';
      di.prototype = {
        add: function (a) {
          this.nodes.push(a);
          return a;
        },
        aStar: function (a, b, c) {
          c = null != c ? c.slice() : [];
          var d = [a],
            f = new va(),
            g = new va();
          for (g.set(a, 0); 0 < d.length; ) {
            a = d.shift();
            if (a == b) return this.buildPath(f, a);
            R.remove(d, a);
            c.push(a);
            var k = g.h[a.__id__],
              q = a.links,
              p = q;
            for (q = q.keys(); q.hasNext(); ) {
              var l = q.next(),
                h = p.get(l);
              if (-1 == c.indexOf(l)) {
                h = k + h;
                if (-1 == d.indexOf(l)) d.push(l);
                else if (h >= g.h[l.__id__]) continue;
                f.set(l, a);
                g.set(l, h);
              }
            }
          }
          return null;
        },
        buildPath: function (a, b) {
          for (var c = [b]; null != a.h.__keys__[b.__id__]; )
            ((b = a.h[b.__id__]), c.push(b));
          return c;
        },
        __class__: di,
      };
      var ei = function (a) {
        this.links = new va();
        this.data = a;
      };
      h['com.watabou.geom.Node'] = ei;
      ei.__name__ = 'com.watabou.geom.Node';
      ei.prototype = {
        link: function (a, b, c) {
          null == c && (c = !0);
          null == b && (b = 1);
          this.links.set(a, b);
          c && a.links.set(this, b);
        },
        __class__: ei,
      };
      var gh = function (a, b, c, d) {
        null == d && (d = 0);
        this.width = a;
        this.height = b;
        this.dist = c;
        this.dist2 = c * c;
        this.cellSize = c / Math.sqrt(2);
        this.gridWidth = Math.ceil(this.width / this.cellSize);
        this.gridHeight = Math.ceil(this.height / this.cellSize);
        c = [];
        for (var f = 0, g = this.gridWidth * this.gridHeight; f < g; )
          (f++, c.push(null));
        this.grid = c;
        this.points = [];
        this.queue = [];
        for (
          this.emit(
            new B(
              a * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              b * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            ),
          );
          this.step();

        );
        0 < d && this.uneven(d);
      };
      h['com.watabou.geom.PoissonPattern'] = gh;
      gh.__name__ = 'com.watabou.geom.PoissonPattern';
      gh.prototype = {
        emit: function (a) {
          this.points.push(a);
          this.queue.push(a);
          this.grid[
            Math.floor(a.y / this.cellSize) * this.gridWidth +
              Math.floor(a.x / this.cellSize)
          ] = a;
        },
        step: function () {
          if (0 == this.queue.length) return !1;
          for (var a = da.random(this.queue), b = !1, c = 0; 50 > c; ) {
            c++;
            var d = B.polar(
              this.dist *
                (1 +
                  0.1 *
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                      2147483647)),
              6.28318530718 *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            );
            d.x += a.x;
            d.y += a.y;
            this.warp(d);
            this.validate(d) && ((b = !0), this.emit(d));
          }
          b || R.remove(this.queue, a);
          return 0 < this.queue.length;
        },
        warp: function (a) {
          0 > a.x
            ? (a.x += this.width)
            : a.x >= this.width && (a.x -= this.width);
          0 > a.y
            ? (a.y += this.height)
            : a.y >= this.height && (a.y -= this.height);
        },
        validate: function (a) {
          var b = a.x;
          a = a.y;
          for (
            var c = Math.floor(b / this.cellSize),
              d = Math.floor(a / this.cellSize),
              f = c - 2,
              g = c + 2 + 1,
              k = d - 2,
              q = d + 2 + 1;
            k < q;

          ) {
            d = k++;
            d = ((d + this.gridHeight) % this.gridHeight) * this.gridWidth;
            for (var p = f, l = g; p < l; ) {
              c = p++;
              var h = this.grid[d + ((c + this.gridWidth) % this.gridWidth)];
              if (
                null != h &&
                ((c = Math.abs(h.x - b)),
                (h = Math.abs(h.y - a)),
                c > this.width - c && (c = this.width - c),
                h > this.height - h && (h = this.height - h),
                c * c + h * h < this.dist2)
              )
                return !1;
            }
          }
          return !0;
        },
        uneven: function (a) {
          if (0 != a)
            for (var b = 0, c = this.points; b < c.length; ) {
              var d = c[b];
              ++b;
              var f = B.polar(
                this.dist *
                  a *
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
                6.28318530718 *
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.x += f.x;
              d.y += f.y;
              this.warp(d);
            }
        },
        scale: function (a, b) {
          for (var c = 0, d = this.points; c < d.length; ) {
            var f = d[c];
            ++c;
            f.x *= a;
            f.y *= b;
          }
          this.width *= a;
          this.height *= b;
        },
        fill: function (a) {
          var b = a.getBounds(),
            c = Math.floor(b.get_left() / this.width),
            d = Math.floor(b.get_top() / this.height),
            f = Math.ceil(b.get_right() / this.width);
          b = Math.ceil(b.get_bottom() / this.height);
          for (var g = []; d < b; )
            for (var k = d++, q = c, p = f; q < p; )
              for (
                var l = q++,
                  h = a.validateRect(
                    l * this.width,
                    k * this.height,
                    this.width,
                    this.height,
                  ),
                  n = 0,
                  t = this.points;
                n < t.length;

              ) {
                var w = t[n];
                ++n;
                if (0 != k || 0 != l)
                  w = new B(w.x + l * this.width, w.y + k * this.height);
                (h || a.validate(w)) && g.push(w);
              }
          return g;
        },
        __class__: gh,
      };
      var fi = function () {};
      h['com.watabou.geom.IFillableShape'] = fi;
      fi.__name__ = 'com.watabou.geom.IFillableShape';
      fi.__isInterface__ = !0;
      fi.prototype = { __class__: fi };
      var vf = function (a) {
        this.poly = a;
        this.rect = Yc.rect(a);
      };
      h['com.watabou.geom.FillablePoly'] = vf;
      vf.__name__ = 'com.watabou.geom.FillablePoly';
      vf.__interfaces__ = [fi];
      vf.prototype = {
        getBounds: function () {
          return this.rect;
        },
        validate: function (a) {
          return Yc.containsPoint(this.poly, a);
        },
        validateRect: function (a, b, c, d) {
          return !1;
        },
        __class__: vf,
      };
      var gi = function (a) {
        vf.call(this, a[0]);
        this.holed = a;
      };
      h['com.watabou.geom.FillableHoledPoly'] = gi;
      gi.__name__ = 'com.watabou.geom.FillableHoledPoly';
      gi.__super__ = vf;
      gi.prototype = u(vf.prototype, {
        validate: function (a) {
          if (!vf.prototype.validate.call(this, a)) return !1;
          for (var b = 1, c = this.holed.length; b < c; ) {
            var d = b++;
            if (Yc.containsPoint(this.holed[d], a)) return !1;
          }
          return !0;
        },
        __class__: gi,
      });
      var Wf = function (a, b) {
        null == b && (b = !1);
        this.height = 0;
        this.poly = a;
        for (var c = a.length, d = [], f = 0, g = c; f < g; ) {
          var k = f++;
          d.push(new jk(a[k], a[(k + 1) % c]));
        }
        this.segments = d;
        this.leaves = new va();
        d = [];
        f = 0;
        for (g = c; f < g; ) {
          k = f++;
          var q = new hi(a[k]);
          this.leaves.set(a[k], q);
          d.push(new hh(q, this.segments[k], this.segments[(k + c - 1) % c]));
        }
        this.ribs = d;
        this.bones = [];
        b && this.run();
      };
      h['com.watabou.geom.SkeletonBuilder'] = Wf;
      Wf.__name__ = 'com.watabou.geom.SkeletonBuilder';
      Wf.intersect = function (a, b) {
        return ta.intersectLines(
          a.a.point.x,
          a.a.point.y,
          a.slope.x,
          a.slope.y,
          b.a.point.x,
          b.a.point.y,
          b.slope.x,
          b.slope.y,
        );
      };
      Wf.prototype = {
        run: function () {
          for (; this.step(); );
        },
        step: function () {
          if (2 >= this.ribs.length)
            return (
              2 == this.ribs.length &&
                ((this.root = this.ribs[0]),
                (this.root.b = this.ribs[1].a),
                (this.root.b.parent = this.root),
                this.bones.push(this.root),
                (this.ribs = [])),
              !1
            );
          for (
            var a = Infinity,
              b = null,
              c = null,
              d = null,
              f = 0,
              g = this.ribs;
            f < g.length;

          ) {
            var k = g[f];
            ++f;
            var q = Infinity,
              p = null,
              l = null,
              h = k.right.lRib,
              n = Wf.intersect(k, h);
            if (null != n && 0 <= n.x && 0 <= n.y) {
              var t = n.x + k.a.height;
              q > t && ((q = t), (l = n), (p = h));
            }
            n = k.left.rRib;
            h = Wf.intersect(k, n);
            null != h &&
              0 <= h.x &&
              0 <= h.y &&
              q > h.x + k.a.height &&
              ((l = h), (p = n));
            null != l &&
              ((q = l.y + p.a.height),
              a > q && ((a = q), (b = k), (c = p), (d = l)));
          }
          return null != d
            ? ((this.height = a),
              (a = b.a.point),
              (f = b.slope),
              (n = d.x),
              (d = new B(a.x + f.x * n, a.y + f.y * n)),
              this.merge(b, c, d),
              !0)
            : !1;
        },
        merge: function (a, b, c) {
          c = new hi(c, this.height, a, b);
          c =
            a.right == b.left
              ? new hh(c, a.left, b.right)
              : new hh(c, b.left, a.right);
          this.ribs.push(c);
          this.bones.push(a);
          R.remove(this.ribs, a);
          this.bones.push(b);
          R.remove(this.ribs, b);
          return c;
        },
        getPath: function (a, b) {
          if (a == b) return [a];
          a = this.getPath2Root(a);
          b = this.getPath2Root(b);
          if (a[a.length - 1] == b[b.length - 1]) {
            for (; a[a.length - 1] == b[b.length - 1]; ) (a.pop(), b.pop());
            a.push(a[a.length - 1].parent.b);
          }
          return a.concat(da.revert(b));
        },
        getPath2Root: function (a) {
          for (var b = [a]; this.root.a != a && this.root.b != a; )
            ((a = a.parent.b), b.push(a));
          return b;
        },
        __class__: Wf,
      };
      var hh = function (a, b, c) {
        this.a = a;
        this.a.parent = this;
        this.left = b;
        this.right = c;
        b.lRib = this;
        c.rRib = this;
        a = c.dir;
        b = b.dir;
        c = a.x * b.x + a.y * b.y;
        0.99999 < c
          ? (this.slope = new B(-a.y, a.x))
          : ((c = Math.sqrt((1 + c) / 2)),
            (this.slope = b.subtract(a)),
            this.slope.normalize(1 / c),
            null == this.a.child1 &&
              0 > a.x * b.y - a.y * b.x &&
              ((a = this.slope), (a.x *= -1), (a.y *= -1)));
      };
      h['com.watabou.geom.Rib'] = hh;
      hh.__name__ = 'com.watabou.geom.Rib';
      hh.prototype = { __class__: hh };
      var hi = function (a, b, c, d) {
        null == b && (b = 0);
        this.point = a;
        this.height = b;
        this.child1 = c;
        this.child2 = d;
        null != this.child1 && ((this.child1.b = this), (this.child2.b = this));
      };
      h['com.watabou.geom._SkeletonBuilder.Node'] = hi;
      hi.__name__ = 'com.watabou.geom._SkeletonBuilder.Node';
      hi.prototype = { __class__: hi };
      var jk = function (a, b) {
        this.p0 = a;
        this.p1 = b;
        this.dir = b.subtract(a);
        this.len = this.dir.get_length();
        a = this.dir;
        b = 1 / this.len;
        a.x *= b;
        a.y *= b;
      };
      h['com.watabou.geom._SkeletonBuilder.Segment'] = jk;
      jk.__name__ = 'com.watabou.geom._SkeletonBuilder.Segment';
      jk.prototype = { __class__: jk };
      var ii = function () {};
      h['com.watabou.geom.polygons.PolyBool'] = ii;
      ii.__name__ = 'com.watabou.geom.polygons.PolyBool';
      ii.augmentPolygons = function (a, b) {
        for (var c = a.length, d = b.length, f = [], g = 0, k = c; g < k; ) {
          var q = g++;
          f.push([]);
        }
        var p = f;
        f = [];
        g = 0;
        for (k = d; g < k; ) {
          var l = g++;
          f.push([]);
        }
        var h = f;
        f = 0;
        for (g = c; f < g; ) {
          q = f++;
          var n = a[q],
            t = a[(q + 1) % c],
            w = n.x,
            x = n.y,
            r = t.x - w,
            C = t.y - x;
          k = 0;
          for (var m = d; k < m; ) {
            l = k++;
            var G = b[l],
              y = b[(l + 1) % d],
              B = G.x;
            G = G.y;
            y = ta.intersectLines(w, x, r, C, B, G, y.x - B, y.y - G);
            null != y &&
              0 <= y.x &&
              1 >= y.x &&
              0 <= y.y &&
              1 >= y.y &&
              ((y = { a: y.x, b: y.y, p: ta.lerp(n, t, y.x) }),
              p[q].push(y),
              h[l].push(y));
          }
        }
        l = [];
        f = 0;
        for (g = c; f < g; )
          if (((q = f++), l.push(a[q]), (q = p[q]), 0 < q.length))
            for (
              q.sort(function (a, b) {
                a = a.a - b.a;
                return 0 == a ? 0 : 0 > a ? -1 : 1;
              }),
                k = 0;
              k < q.length;

            )
              ((y = q[k]), ++k, l.push(y.p));
        a = [];
        f = 0;
        for (g = d; f < g; )
          if (((q = f++), a.push(b[q]), (d = h[q]), 0 < d.length))
            for (
              d.sort(function (a, b) {
                a = a.b - b.b;
                return 0 == a ? 0 : 0 > a ? -1 : 1;
              }),
                k = 0;
              k < d.length;

            )
              ((y = d[k]), ++k, a.push(y.p));
        return [l, a];
      };
      ii.or = function (a, b) {
        var c = ii.augmentPolygons(a, b),
          d = c[0],
          f = c[1];
        if (d.length == a.length)
          return Yc.containsPoint(a, b[0])
            ? a
            : Yc.containsPoint(b, a[0])
              ? b
              : null;
        c = d;
        for (
          var g = f, k = [], q = -1, p = null, l = 0, h = d.length;
          l < h;

        ) {
          var n = l++;
          p = d[n];
          if (-1 == a.indexOf(d[n])) {
            q = n;
            break;
          }
        }
        a = ta.lerp(p, d[(q + 1) % d.length]);
        Yc.containsPoint(b, a) && ((c = f), (g = d), (q = f.indexOf(p)));
        for (;;) {
          k.push(c[q]);
          b = (q + 1) % c.length;
          d = c[b];
          if (d == k[0]) return k;
          d = g.indexOf(d);
          -1 != d ? ((q = d), (b = c), (c = g), (g = b)) : (q = b);
        }
      };
      var Yc = function () {};
      h['com.watabou.geom.polygons.PolyBounds'] = Yc;
      Yc.__name__ = 'com.watabou.geom.polygons.PolyBounds';
      Yc.rect = function (a) {
        for (
          var b = Infinity, c = Infinity, d = -Infinity, f = -Infinity, g = 0;
          g < a.length;

        ) {
          var k = a[g];
          ++g;
          var q = k.x;
          k = k.y;
          q < b && (b = q);
          k < c && (c = k);
          q > d && (d = q);
          k > f && (f = k);
        }
        return new na(b, c, d - b, f - c);
      };
      Yc.aabb = function (a) {
        for (
          var b = Infinity, c = Infinity, d = -Infinity, f = -Infinity, g = 0;
          g < a.length;

        ) {
          var k = a[g];
          ++g;
          var q = k.x;
          k = k.y;
          q < b && (b = q);
          k < c && (c = k);
          q > d && (d = q);
          k > f && (f = k);
        }
        return [new B(b, c), new B(d, c), new B(d, f), new B(b, f)];
      };
      Yc.obb = function (a) {
        a = Yc.convexHull(a);
        for (
          var b = Infinity, c = null, d = null, f = a.length, g = 0;
          g < f;

        ) {
          var k = g++,
            q = a[k];
          k = a[(k + 1) % f];
          if (q.x != k.x || q.y != k.y) {
            q = k.subtract(q);
            q.normalize(1);
            for (
              var p = q.x,
                l = -q.y,
                h = (k = Infinity),
                n = -Infinity,
                t = -Infinity,
                w = 0;
              w < a.length;

            ) {
              var x = a[w];
              ++w;
              var r = x.x * p - x.y * l;
              x = x.y * p + x.x * l;
              r < k && (k = r);
              x < h && (h = x);
              r > n && (n = r);
              x > t && (t = x);
            }
            p = (n - k) * (t - h);
            b > p &&
              ((b = p),
              (c = [new B(k, h), new B(n, h), new B(n, t), new B(k, t)]),
              (d = q));
          }
        }
        sc.asRotateYX(c, d.y, d.x);
        return c;
      };
      Yc.convexHull = function (a) {
        var b = a.length;
        if (3 > b) return null;
        if (3 == b) return a;
        var c = a[0],
          d = a[1],
          f = a[2];
        c =
          0 < (d.x - c.x) * (f.y - c.y) - (f.x - c.x) * (d.y - c.y)
            ? [f, c, d, f]
            : [f, d, c, f];
        for (d = 3; ; ) {
          if (d >= b) return (c[0] == c[c.length - 1] && c.pop(), c);
          f = a[d++];
          for (var g = c.length; ; ) {
            var k = c[0];
            var q = c[1];
            0 <= (k.x - f.x) * (q.y - f.y) - (q.x - f.x) * (k.y - f.y)
              ? ((k = c[g - 2]),
                (q = c[g - 1]),
                (k =
                  0 <= (q.x - k.x) * (f.y - k.y) - (f.x - k.x) * (q.y - k.y)))
              : (k = !1);
            if (!k) break;
            if (d >= b) return (c[0] == c[c.length - 1] && c.pop(), c);
            f = a[d++];
          }
          for (;;) {
            2 <= c.length
              ? ((g = c[c.length - 2]),
                (k = c[c.length - 1]),
                (g = 0 > (k.x - g.x) * (f.y - g.y) - (f.x - g.x) * (k.y - g.y)))
              : (g = !1);
            if (!g) break;
            c.pop();
          }
          for (c.push(f); ; ) {
            g = c[0];
            k = c[1];
            if (!(0 > (g.x - f.x) * (k.y - f.y) - (k.x - f.x) * (g.y - f.y)))
              break;
            c.shift();
          }
          c.unshift(f);
        }
      };
      Yc.containsPoint = function (a, b, c) {
        null == c && (c = !1);
        var d = b.x;
        b = b.y;
        for (var f = a.length, g = a[f - 1], k = 0; k < f; ) {
          var q = k++,
            p = g;
          g = a[q];
          q = p.x;
          p = p.y;
          var l = g.x - q,
            h = g.y - p;
          if (0 != h) {
            var n = (h * (d - q) - l * (b - p)) / h;
            0 >= n &&
              ((q = Math.abs(l) > Math.abs(h) ? (d - q - n) / l : (b - p) / h),
              0 <= q && 1 >= q && (c = !c));
          }
        }
        return c;
      };
      var Fd = function () {};
      h['com.watabou.geom.polygons.PolyCore'] = Fd;
      Fd.__name__ = 'com.watabou.geom.polygons.PolyCore';
      Fd.area = function (a) {
        for (
          var b = a.length,
            c = a[b - 1],
            d = a[0],
            f = c.x * d.y - d.x * c.y,
            g = 1;
          g < b;

        ) {
          var k = g++;
          c = d;
          d = a[k];
          f += c.x * d.y - d.x * c.y;
        }
        return 0.5 * f;
      };
      Fd.perimeter = function (a) {
        for (
          var b = a.length, c = a[b - 1], d = a[0], f = B.distance(c, d), g = 1;
          g < b;

        ) {
          var k = g++;
          c = d;
          d = a[k];
          f += B.distance(c, d);
        }
        return f;
      };
      Fd.$length = function (a) {
        for (var b = 0, c = 1, d = a.length; c < d; ) {
          var f = c++;
          b += B.distance(a[f - 1], a[f]);
        }
        return b;
      };
      Fd.center = function (a) {
        for (var b = a.length, c = a[0].clone(), d = 1; d < b; ) {
          var f = d++;
          f = a[f];
          c.x += f.x;
          c.y += f.y;
        }
        a = 1 / b;
        c.x *= a;
        c.y *= a;
        return c;
      };
      var vg = function () {};
      h['com.watabou.geom.polygons.PolyCreate'] = vg;
      vg.__name__ = 'com.watabou.geom.polygons.PolyCreate';
      vg.rect = function (a, b) {
        a /= 2;
        b /= 2;
        return [new B(-a, -b), new B(a, -b), new B(a, b), new B(-a, b)];
      };
      vg.regular = function (a, b, c) {
        null == c && (c = 0);
        for (var d = [], f = 0; f < a; ) {
          var g = f++;
          d.push(B.polar(b, c + (2 * Math.PI * g) / a));
        }
        return d;
      };
      var He = function () {};
      h['com.watabou.geom.polygons.PolyCut'] = He;
      He.__name__ = 'com.watabou.geom.polygons.PolyCut';
      He.pierce = function (a, b, c) {
        for (
          var d = b.x,
            f = b.y,
            g = c.x - d,
            k = c.y - f,
            q = a.length,
            p = [],
            l = 0,
            h = q;
          l < h;

        ) {
          var n = l++,
            t = a[n];
          n = a[(n + 1) % q];
          var w = t.x;
          t = t.y;
          t = ta.intersectLines(d, f, g, k, w, t, n.x - w, n.y - t);
          null != t && 0 <= t.y && 1 >= t.y && p.push(t.x);
        }
        p.sort(function (a, b) {
          a -= b;
          return 0 == a ? 0 : 0 > a ? -1 : 1;
        });
        l = [];
        for (h = 0; h < p.length; ) ((t = p[h]), ++h, l.push(ta.lerp(b, c, t)));
        return l;
      };
      He.pierceMulti = function (a, b, c) {
        for (
          var d = b.x, f = b.y, g = c.x - d, k = c.y - f, q = [], p = 0;
          p < a.length;

        ) {
          var l = a[p];
          ++p;
          for (var h = l.length, n = 0, t = h; n < t; ) {
            var w = n++,
              x = l[w];
            w = l[(w + 1) % h];
            var r = x.x;
            x = x.y;
            x = ta.intersectLines(d, f, g, k, r, x, w.x - r, w.y - x);
            null != x && 0 <= x.y && 1 >= x.y && q.push(x.x);
          }
        }
        q.sort(function (a, b) {
          a -= b;
          return 0 == a ? 0 : 0 > a ? -1 : 1;
        });
        p = [];
        for (n = 0; n < q.length; ) ((x = q[n]), ++n, p.push(ta.lerp(b, c, x)));
        return p;
      };
      He.insetEq = function (a, b) {
        var c = a.length,
          d = a[c - 2],
          f = a[c - 1],
          g = f.subtract(d);
        g.normalize(1);
        for (var k = [], q = 0; q < c; ) {
          var p = q++;
          d = f;
          f = a[p];
          p = g;
          g = f.subtract(d);
          g.normalize(1);
          var l = p.add(g);
          l = new B(-l.y, l.x);
          p = p.x * g.x + p.y * g.y;
          -0.999 < p
            ? (l.normalize(b / Math.sqrt((1 + p) / 2)), k.push(d.add(l)))
            : k.push(d);
        }
        return k;
      };
      var sc = function () {};
      h['com.watabou.geom.polygons.PolyTransform'] = sc;
      sc.__name__ = 'com.watabou.geom.polygons.PolyTransform';
      sc.translate = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          d.push(new B(g.x + b, g.y + c));
        }
        return d;
      };
      sc.asTranslate = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.x += b;
          f.y += c;
        }
      };
      sc.scale = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          d.push(new B(g.x * b, g.y * c));
        }
        return d;
      };
      sc.asScale = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.x *= b;
          f.y *= c;
        }
      };
      sc.rotateYX = function (a, b, c) {
        for (var d = [], f = 0; f < a.length; ) {
          var g = a[f];
          ++f;
          d.push(new B(g.x * c - g.y * b, g.y * c + g.x * b));
        }
        return d;
      };
      sc.asRotateYX = function (a, b, c) {
        for (var d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          f.setTo(f.x * c - f.y * b, f.y * c + f.x * b);
        }
      };
      var Mb = function (a, b, c, d, f, g, k, q) {
        null == c && (c = 0);
        null == b && (b = 0);
        this.morphemes = new Ja();
        this.postSpell = null;
        this.spellVowel = Kd.spellVowDefault;
        this.spellConsonant = Kd.spellConsDefault;
        null == a ? this.buildSyllable() : (this.syllable = a);
        0 == b || 0 == c
          ? this.buildStructure()
          : ((this.minSyll = b), (this.maxSyll = c));
        null == d ? this.buildConsonants() : (this.consonants = d);
        null == f ? this.buildSibilants() : (this.sibilants = f);
        null == g ? this.buildLiquids() : (this.liquids = g);
        null == k ? this.buildFinals() : (this.finals = k);
        null == q ? this.buildVowels() : (this.vowels = q);
        this.buildBadSeqs();
      };
      h['com.watabou.nlp.Conlang'] = Mb;
      Mb.__name__ = 'com.watabou.nlp.Conlang';
      Mb.gamma = function (a, b) {
        null == b && (b = 1.5);
        var c = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
        null == b && (b = 2);
        return a[(a.length * Math.pow(c, b)) | 0];
      };
      Mb.prototype = {
        buildSyllable: function () {
          var a =
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
            b =
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (a ? 0.5 : 0),
            c = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
            d = b + c;
          1 > d && ((b /= d), (c /= d));
          b = 0.333 > b ? '' : 0.666 > b ? 'c' : 'C';
          'C' == b &&
            ((d = 0.4),
            null == d && (d = 0.5),
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d &&
              (b = 's' + b),
            (d = 0.4),
            null == d && (d = 0.5),
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d &&
              (b += 'l'));
          d = 0.9;
          null == d && (d = 0.5);
          d =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d
              ? 'V'
              : 0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                ? 'Vv'
                : 'VV';
          this.syllable =
            b +
            d +
            (0.333 > c ? '' : 0.666 > c ? (a ? 'f' : 'c') : a ? 'F' : 'C');
        },
        buildConsonants: function () {
          var a =
            7 +
            Math.round(
              (Mb.allCons.length - 7) *
                Math.pow(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3,
                  2,
                ),
            );
          this.consonants = [];
          for (var b = Mb.allCons.slice(), c = 0; c < a; ) {
            c++;
            var d = Mb.gamma(b, 3);
            this.consonants.push(d);
            R.remove(b, d);
          }
        },
        buildSibilants: function () {
          -1 == this.syllable.toUpperCase().indexOf('S')
            ? (this.sibilants = [])
            : ((this.sibilants = da.intersect(Mb.allSibs, this.consonants)),
              (this.sibilants =
                0 == this.sibilants.length
                  ? [Mb.gamma(Mb.allSibs)]
                  : this.sibilants.slice(
                      0,
                      1 +
                        Math.floor(
                          ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647) *
                            this.sibilants.length,
                        ),
                    )));
        },
        buildLiquids: function () {
          -1 == this.syllable.toUpperCase().indexOf('L')
            ? (this.liquids = [])
            : ((this.liquids = da.intersect(Mb.allLiqs, this.consonants)),
              (this.liquids =
                0 == this.liquids.length
                  ? [Mb.gamma(Mb.allLiqs)]
                  : this.liquids.slice(
                      0,
                      1 +
                        Math.floor(
                          ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647) *
                            this.liquids.length,
                        ),
                    )));
        },
        buildFinals: function () {
          -1 == this.syllable.toUpperCase().indexOf('F')
            ? (this.finals = [])
            : ((this.finals = da.intersect(
                da.random([
                  ['n', 'm'],
                  ['s', 'k'],
                  ['s', '\u0283', 'z', '\u0292'],
                  [],
                ]),
                this.consonants,
              )),
              0 == this.finals.length &&
                (this.finals = da.subset(
                  this.consonants,
                  (1 +
                    this.consonants.length *
                      Math.abs(
                        ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647) /
                          2 -
                          1,
                      )) |
                    0,
                )));
        },
        buildVowels: function () {
          for (
            var a = da.random([3, 4, 4, 5, 5, 5]),
              b = [],
              c = Mb.allVows.slice(),
              d = 0;
            d < a;

          ) {
            d++;
            var f = Mb.gamma(c, 2);
            R.remove(c, f);
            b.push(f);
          }
          this.vowels = b.slice();
          a = Math.abs(
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              2 -
              1,
          );
          for (d = 0; d < b.length; )
            ((f = b[d]),
              ++d,
              (c = a),
              null == c && (c = 0.5),
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < c &&
                this.vowels.push(f.toUpperCase()));
        },
        buildBadSeqs: function () {
          this.badSeqs = [];
          for (var a = 0, b = this.sibilants; a < b.length; ) {
            var c = b[a];
            ++a;
            for (var d = 0, f = this.consonants; d < f.length; ) {
              var g = f[d];
              ++d;
              c != g &&
                -1 != Mb.allSibs.indexOf(g) &&
                this.badSeqs.push('' + c + g);
            }
          }
          a = 0;
          for (b = this.consonants; a < b.length; )
            for (g = b[a], ++a, d = 0, f = this.liquids; d < f.length; )
              ((c = f[d]),
                ++d,
                g == c ||
                  (-1 == Mb.allLiqs.indexOf(g) &&
                    -1 == Mb.allNasal.indexOf(g)) ||
                  this.badSeqs.push('' + g + c));
        },
        buildStructure: function () {
          var a = 0.4;
          null == a && (a = 0.5);
          this.minSyll =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
              ? 1
              : 2;
          this.maxSyll =
            this.minSyll +
            Math.floor(
              1 +
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 3,
            );
        },
        getSyll: function () {
          for (;;) {
            for (var a = '', b = 0, c = this.syllable.length; b < c; ) {
              var d = b++,
                f = this.syllable.charAt(d);
              switch (f.toUpperCase()) {
                case 'C':
                  d = this.consonants;
                  break;
                case 'F':
                  d = this.finals;
                  break;
                case 'L':
                  d = this.liquids;
                  break;
                case 'S':
                  d = this.sibilants;
                  break;
                case 'V':
                  d = this.vowels;
                  break;
                default:
                  d = Mb.invalid;
              }
              f != f.toUpperCase()
                ? ((f = 0.333),
                  null == f && (f = 0.5),
                  (f =
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 <
                    f))
                : (f = !0);
              f && (a += Mb.gamma(d));
            }
            if (this.validateSyll(a)) return a;
          }
        },
        validateSyll: function (a) {
          for (var b = 1, c = a.length; b < c; ) {
            var d = b++;
            if (a.charAt(d) == a.charAt(d - 1)) return !1;
          }
          b = 0;
          for (c = this.badSeqs; b < c.length; )
            if (((d = c[b]), ++b, -1 != a.indexOf(d))) return !1;
          return !0;
        },
        getWord: function (a) {
          null == a && (a = 0);
          if (0 == a) {
            var b = this.maxSyll - this.minSyll,
              c =
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3;
            a = 1.5;
            null == a && (a = 2);
            a = this.minSyll + Math.round(b * Math.pow(c, a));
          }
          b = [];
          for (c = 0; c < a; ) (c++, b.push(this.getSyll()));
          return b;
        },
        spellWord: function (a) {
          for (var b = '', c = 0, d = a.length; c < d; ) {
            var f = c++;
            f = a.charAt(f);
            b =
              -1 != Mb.allCons.indexOf(f)
                ? b + this.spellConsonant(f)
                : -1 != Mb.allVows.indexOf(f) ||
                    -1 != Mb.allVows.indexOf(f.toLowerCase())
                  ? b + this.spellVowel(f)
                  : b + f;
          }
          return null != this.postSpell ? this.postSpell(b) : b;
        },
        getNewMorpheme: function () {
          for (;;) {
            var a = 1,
              b = 2 / this.maxSyll;
            null == b && (b = 0.5);
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b ||
              ++a;
            a = this.getWord(a).join('');
            b = !0;
            var c = this.morphemes.h,
              d = c;
            c = Object.keys(c);
            for (var f = c.length, g = 0; g < f; )
              if (-1 != d[c[g++]].indexOf(a)) {
                b = !1;
                break;
              }
            if (b) return a;
          }
        },
        getMorpheme: function (a) {
          null == a && (a = '');
          var b = this.morphemes.h[a];
          null == b && ((b = []), (this.morphemes.h[a] = b));
          if (
            Math.round(
              b.length *
                Math.pow(
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
                  2,
                ),
            ) < b.length
          )
            return Mb.gamma(b);
          a = this.getNewMorpheme();
          b.push(a);
          return a;
        },
        getWordTagged: function (a, b) {
          null == b && (b = !1);
          b && (a = da.shuffle(a));
          b = '';
          for (var c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            b += this.getMorpheme(d);
          }
          c = this.maxSyll - this.minSyll;
          d =
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
          var f = 1.5;
          null == f && (f = 2);
          d = this.minSyll + Math.round(c * Math.pow(d, f));
          d = d > a.length ? d - a.length : 1;
          c = 0;
          for (a = d; c < a; ) (c++, (b = this.getSyll() + b));
          return b;
        },
        getWordSuffix: function (a) {
          return this.getWordTagged([a]);
        },
        __class__: Mb,
      };
      var Ld = function (a) {
        this.map = new Ja();
        null == Ld.phonemes &&
          ((Ld.phonemes = Md.VOWELS.concat(Md.CONSONANTS)),
          Ld.phonemes.sort(function (a, b) {
            return b.length - a.length;
          }));
        this.source = a;
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          if ('' != c) {
            c = Ld.split(c.toLowerCase());
            for (var d = [], f = 0; f < c.length; ) {
              var g = c[f];
              ++f;
              var k = d.join('');
              Object.prototype.hasOwnProperty.call(this.map.h, k)
                ? this.map.h[k].push(g)
                : (this.map.h[k] = [g]);
              d.push(g);
              2 < d.length && d.shift();
            }
            c = d.join('');
            Object.prototype.hasOwnProperty.call(this.map.h, c)
              ? this.map.h[c].push('')
              : (this.map.h[c] = ['']);
          }
        }
      };
      h['com.watabou.nlp.Markov'] = Ld;
      Ld.__name__ = 'com.watabou.nlp.Markov';
      Ld.split = function (a) {
        for (var b = []; '' != a; ) {
          for (var c = !1, d = 0, f = Ld.phonemes; d < f.length; ) {
            var g = f[d];
            ++d;
            if (R.substr(a, -g.length, null) == g) {
              b.unshift(g);
              a = R.substr(a, 0, a.length - g.length);
              c = !0;
              break;
            }
          }
          c || (a = R.substr(a, 0, a.length - 1));
        }
        return b;
      };
      Ld.prototype = {
        generate: function (a) {
          for (null == a && (a = -1); ; ) {
            for (var b = '', c = [], d = da.random(this.map.h['']); '' != d; ) {
              b += d;
              c.push(d);
              2 < c.length && c.shift();
              d = this.map;
              var f = c.join('');
              d = da.random(d.h[f]);
            }
            if (-1 == a || Md.splitWord(b).length <= a) return b;
          }
        },
        __class__: Ld,
      };
      var Kd = function () {};
      h['com.watabou.nlp.Spelling'] = Kd;
      Kd.__name__ = 'com.watabou.nlp.Spelling';
      Kd.spellConsDefault = function (a) {
        switch (a) {
          case 'j':
            return 'y';
          case 'x':
            return 'kh';
          case '\u00f0':
            return 'th';
          case '\u0263':
            return 'gh';
          case '\u0283':
            return 'sh';
          case '\u0292':
            return 'zh';
          case '\u02a3':
            return 'dz';
          case '\u02a4':
            return 'j';
          case '\u02a6':
            return 'ts';
          case '\u02a7':
            return 'ch';
          case '\u03b8':
            return 'th';
          default:
            return a;
        }
      };
      Kd.spellVowDefault = function (a) {
        switch (a) {
          case 'A':
            return '\u00e1';
          case 'E':
            return '\u00e9';
          case 'I':
            return '\u00ed';
          case 'O':
            return '\u00f3';
          case 'U':
            return '\u00fa';
          default:
            return a;
        }
      };
      Kd.spellVowDoubles = function (a) {
        switch (a) {
          case 'A':
            return 'aa';
          case 'E':
            return 'ee';
          case 'I':
            return 'ii';
          case 'O':
            return 'oo';
          case 'U':
            return 'uu';
          default:
            return a;
        }
      };
      var Md = function () {};
      h['com.watabou.nlp.Syllables'] = Md;
      Md.__name__ = 'com.watabou.nlp.Syllables';
      Md.splitWord = function (a) {
        for (var b = []; 0 < a.length; ) {
          var c =
            0 == b.length && 'e' == R.substr(a, -1, null)
              ? Md.pinch(R.substr(a, 0, a.length - 1)) + 'e'
              : Md.pinch(a);
          b.unshift(c);
          a = R.substr(a, 0, a.length - c.length);
          da.every(Md.VOWELS, function (b) {
            return -1 == a.indexOf(b);
          }) && ((b[0] = a + b[0]), (a = ''));
        }
        return b;
      };
      Md.pinch = function (a) {
        for (
          var b = a.length - 1;
          0 <= b && -1 == Md.VOWELS.indexOf(a.charAt(b));

        )
          --b;
        if (0 > b) return a;
        for (var c = 0, d = Md.VOWELS; c < d.length; ) {
          var f = d[c];
          ++c;
          if (R.substr(a, b - (f.length - 1), f.length) == f) {
            b -= f.length;
            break;
          }
        }
        if (0 > b) return a;
        c = 0;
        for (d = Md.CONSONANTS; c < d.length; )
          if (((f = d[c]), ++c, R.substr(a, b - (f.length - 1), f.length) == f))
            return R.substr(a, b - (f.length - 1), null);
        return R.substr(a, b + 1, null);
      };
      var tg = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
      };
      h['lime.math.Vector2'] = tg;
      tg.__name__ = 'lime.math.Vector2';
      tg.prototype = {
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        __toFlashPoint: function () {
          return null;
        },
        __class__: tg,
      };
      var $b = function (a, b, c, d) {
        null == d && (d = -1);
        null == c && (c = !0);
        this.__drawableType = 0;
        this.transparent = c;
        null == a && (a = 0);
        null == b && (b = 0);
        0 > a && (a = 0);
        0 > b && (b = 0);
        this.width = a;
        this.height = b;
        this.rect = new na(0, 0, a, b);
        this.__textureWidth = a;
        this.__textureHeight = b;
        0 < a &&
          0 < b &&
          (c
            ? 0 == (d & -16777216) && (d = 0)
            : (d = -16777216 | (d & 16777215)),
          (this.image = new Ub(
            null,
            0,
            0,
            a,
            b,
            (d << 8) | ((d >>> 24) & 255),
          )),
          this.image.set_transparent(c),
          (this.readable = this.__isValid = !0));
        this.__renderTransform = new ua();
        this.__worldAlpha = 1;
        this.__worldTransform = new ua();
        this.__worldColorTransform = new Lb();
        this.__renderable = !0;
      };
      h['openfl.display.BitmapData'] = $b;
      $b.__name__ = 'openfl.display.BitmapData';
      $b.__interfaces__ = [qb];
      $b.fromCanvas = function (a, b) {
        null == b && (b = !0);
        if (null == a) return null;
        var c = new $b(0, 0, b, 0);
        c.__fromImage(Ub.fromCanvas(a));
        c.image.set_transparent(b);
        return c;
      };
      $b.prototype = {
        colorTransform: function (a, b) {
          this.readable &&
            this.image.colorTransform(
              a.__toLimeRectangle(),
              b.__toLimeColorMatrix(),
            );
        },
        copyPixels: function (a, b, c, d, f, g) {
          null == g && (g = !1);
          this.readable &&
            null != a &&
            (null != f &&
              (($b.__tempVector.x = f.x), ($b.__tempVector.y = f.y)),
            this.image.copyPixels(
              a.image,
              b.__toLimeRectangle(),
              c.__toLimeVector2(),
              null != d ? d.image : null,
              null != f ? $b.__tempVector : null,
              g,
            ));
        },
        dispose: function () {
          this.image = null;
          this.height = this.width = 0;
          this.rect = null;
          this.readable = this.__isValid = !1;
          this.__textureContext =
            this.__texture =
            this.__framebufferContext =
            this.__framebuffer =
            this.__vertexBuffer =
            this.__surface =
              null;
        },
        draw: function (a, b, c, d, f, g) {
          null == g && (g = !1);
          if (null != a) {
            var k = !0,
              q = null;
            a instanceof ca &&
              ((q = xa.__cast(a, ca)),
              q.get_visible() || ((k = !1), q.set_visible(!0)));
            a.__update(!1, !0);
            var p = ua.__pool.get();
            p.copyFrom(a.__renderTransform);
            p.invert();
            null != b && p.concat(b);
            b = null;
            null != f && ((b = ua.__pool.get()), b.copyFrom(p), b.invert());
            var l = new Lb();
            l.__copyFrom(a.__worldColorTransform);
            l.__invert();
            if (this.readable || null == Ra.get_current().stage.context3D) {
              if (null != c) {
                var h = na.__pool.get(),
                  n = ua.__pool.get();
                a.__getBounds(h, n);
                var t = Math.ceil(h.width),
                  w = Math.ceil(h.height);
                n.tx = -h.x;
                n.ty = -h.y;
                t = new $b(t, w, !0, 0);
                t.draw(a, n);
                t.colorTransform(t.rect, c);
                t.__renderTransform.identity();
                t.__renderTransform.tx = h.x;
                t.__renderTransform.ty = h.y;
                t.__renderTransform.concat(a.__renderTransform);
                t.__worldAlpha = a.__worldAlpha;
                t.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                a = t;
                na.__pool.release(h);
                ua.__pool.release(n);
              }
              Na.convertToCanvas(this.image);
              c = new Ze(this.image.buffer.__srcContext);
              c.__allowSmoothing = g;
              c.__overrideBlendMode = d;
              c.__worldTransform = p;
              c.__worldAlpha = 1 / a.__worldAlpha;
              c.__worldColorTransform = l;
              null != f && c.__pushMaskRect(f, b);
              this.__drawCanvas(a, c);
              c.__overrideBlendMode = null;
              c.__setBlendMode(10);
            } else
              (null == this.__textureContext &&
                (this.__textureContext = F.current.__window.context),
                null != c && l.__combine(c),
                (c = new eb(Ra.get_current().stage.context3D, this)),
                (c.__allowSmoothing = g),
                (c.__pixelRatio = Ra.get_current().stage.window.__scale),
                (c.__overrideBlendMode = d),
                (c.__worldTransform = p),
                (c.__worldAlpha = 1 / a.__worldAlpha),
                (c.__worldColorTransform = l),
                c.__resize(this.width, this.height),
                null != f && c.__pushMaskRect(f, b),
                this.__drawGL(a, c));
            null != f && (c.__popMaskRect(), ua.__pool.release(b));
            ua.__pool.release(p);
            null == q || k || q.set_visible(!1);
          }
        },
        encode: function (a, b, c) {
          if (!this.readable || null == a) return null;
          null == c && (c = new Zc(0));
          var d = this.image;
          if (!a.equals(this.rect)) {
            var f = ua.__pool.get();
            f.tx = Math.round(-a.x);
            f.ty = Math.round(-a.y);
            a = new $b(Math.ceil(a.width), Math.ceil(a.height), !0, 0);
            a.draw(this, f);
            d = a.image;
            ua.__pool.release(f);
          }
          return b instanceof ji
            ? (c.writeBytes(Nd.fromBytes(d.encode(wf.PNG)), 0, 0), c)
            : b instanceof ki
              ? (c.writeBytes(
                  Nd.fromBytes(d.encode(wf.JPEG, xa.__cast(b, ki).quality)),
                  0,
                  0,
                ),
                c)
              : null;
        },
        fillRect: function (a, b) {
          this.__fillRect(a, b, !0);
        },
        getIndexBuffer: function (a, b) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context ||
            (null != b && null == this.__indexBufferGrid) ||
            (null != this.__indexBufferGrid &&
              !this.__indexBufferGrid.equals(b))
          ) {
            this.__indexBufferContext = a.__context;
            this.__indexBuffer = null;
            if (null != b) {
              null == this.__indexBufferGrid &&
                (this.__indexBufferGrid = new na());
              this.__indexBufferGrid.copyFrom(b);
              var c = b.width;
              b = b.height;
              0 != c && 0 != b
                ? ((this.__indexBufferData = new Uint16Array(54)),
                  (this.__indexBufferData[0] = 0),
                  (this.__indexBufferData[1] = 1),
                  (this.__indexBufferData[2] = 2),
                  (this.__indexBufferData[3] = 2),
                  (this.__indexBufferData[4] = 1),
                  (this.__indexBufferData[5] = 3),
                  (this.__indexBufferData[6] = 4),
                  (this.__indexBufferData[7] = 0),
                  (this.__indexBufferData[8] = 5),
                  (this.__indexBufferData[9] = 5),
                  (this.__indexBufferData[10] = 0),
                  (this.__indexBufferData[11] = 2),
                  (this.__indexBufferData[12] = 6),
                  (this.__indexBufferData[13] = 4),
                  (this.__indexBufferData[14] = 7),
                  (this.__indexBufferData[15] = 7),
                  (this.__indexBufferData[16] = 4),
                  (this.__indexBufferData[17] = 5),
                  (this.__indexBufferData[18] = 8),
                  (this.__indexBufferData[19] = 9),
                  (this.__indexBufferData[20] = 0),
                  (this.__indexBufferData[21] = 0),
                  (this.__indexBufferData[22] = 9),
                  (this.__indexBufferData[23] = 1),
                  (this.__indexBufferData[24] = 10),
                  (this.__indexBufferData[25] = 8),
                  (this.__indexBufferData[26] = 4),
                  (this.__indexBufferData[27] = 4),
                  (this.__indexBufferData[28] = 8),
                  (this.__indexBufferData[29] = 0),
                  (this.__indexBufferData[30] = 11),
                  (this.__indexBufferData[31] = 10),
                  (this.__indexBufferData[32] = 6),
                  (this.__indexBufferData[33] = 6),
                  (this.__indexBufferData[34] = 10),
                  (this.__indexBufferData[35] = 4),
                  (this.__indexBufferData[36] = 12),
                  (this.__indexBufferData[37] = 13),
                  (this.__indexBufferData[38] = 8),
                  (this.__indexBufferData[39] = 8),
                  (this.__indexBufferData[40] = 13),
                  (this.__indexBufferData[41] = 9),
                  (this.__indexBufferData[42] = 14),
                  (this.__indexBufferData[43] = 12),
                  (this.__indexBufferData[44] = 10),
                  (this.__indexBufferData[45] = 10),
                  (this.__indexBufferData[46] = 12),
                  (this.__indexBufferData[47] = 8),
                  (this.__indexBufferData[48] = 15),
                  (this.__indexBufferData[49] = 14),
                  (this.__indexBufferData[50] = 11),
                  (this.__indexBufferData[51] = 11),
                  (this.__indexBufferData[52] = 14),
                  (this.__indexBufferData[53] = 10),
                  (this.__indexBuffer = a.createIndexBuffer(54)))
                : 0 == c && 0 != b
                  ? ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 5),
                    (this.__indexBufferData[8] = 0),
                    (this.__indexBufferData[9] = 0),
                    (this.__indexBufferData[10] = 5),
                    (this.__indexBufferData[11] = 1),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 7),
                    (this.__indexBufferData[14] = 4),
                    (this.__indexBufferData[15] = 4),
                    (this.__indexBufferData[16] = 7),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)))
                  : 0 != c &&
                    0 == b &&
                    ((this.__indexBufferData = new Uint16Array(18)),
                    (this.__indexBufferData[0] = 0),
                    (this.__indexBufferData[1] = 1),
                    (this.__indexBufferData[2] = 2),
                    (this.__indexBufferData[3] = 2),
                    (this.__indexBufferData[4] = 1),
                    (this.__indexBufferData[5] = 3),
                    (this.__indexBufferData[6] = 4),
                    (this.__indexBufferData[7] = 0),
                    (this.__indexBufferData[8] = 5),
                    (this.__indexBufferData[9] = 5),
                    (this.__indexBufferData[10] = 0),
                    (this.__indexBufferData[11] = 2),
                    (this.__indexBufferData[12] = 6),
                    (this.__indexBufferData[13] = 4),
                    (this.__indexBufferData[14] = 7),
                    (this.__indexBufferData[15] = 7),
                    (this.__indexBufferData[16] = 4),
                    (this.__indexBufferData[17] = 5),
                    (this.__indexBuffer = a.createIndexBuffer(18)));
            } else this.__indexBufferGrid = null;
            null == this.__indexBuffer &&
              ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBuffer = a.createIndexBuffer(6)));
            this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
          }
          return this.__indexBuffer;
        },
        getVertexBuffer: function (a, b, c) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            (null != b && null == this.__vertexBufferGrid) ||
            (null != this.__vertexBufferGrid &&
              !this.__vertexBufferGrid.equals(b)) ||
            (null != c &&
              (this.__vertexBufferWidth != c.get_width() ||
                this.__vertexBufferHeight != c.get_height() ||
                this.__vertexBufferScaleX != c.get_scaleX() ||
                this.__vertexBufferScaleY != c.get_scaleY()))
          ) {
            this.__uvRect = new na(0, 0, this.width, this.height);
            this.__vertexBufferContext = a.__context;
            this.__vertexBuffer = null;
            null != c &&
              ((this.__vertexBufferWidth = c.get_width()),
              (this.__vertexBufferHeight = c.get_height()),
              (this.__vertexBufferScaleX = c.get_scaleX()),
              (this.__vertexBufferScaleY = c.get_scaleY()));
            if (null != b && null != c) {
              null == this.__vertexBufferGrid &&
                (this.__vertexBufferGrid = new na());
              this.__vertexBufferGrid.copyFrom(b);
              this.__vertexBufferWidth = c.get_width();
              this.__vertexBufferHeight = c.get_height();
              this.__vertexBufferScaleX = c.get_scaleX();
              this.__vertexBufferScaleY = c.get_scaleY();
              var d = b.width,
                f = b.height;
              if (0 != d && 0 != f) {
                this.__vertexBufferData = new Float32Array(224);
                var g = b.x,
                  k = b.y,
                  q = this.width - d - g,
                  p = this.height - f - k;
                b = g / this.width;
                var l = k / this.height;
                d /= this.width;
                f /= this.height;
                g /= c.get_scaleX();
                k /= c.get_scaleY();
                q /= c.get_scaleX();
                var h = p / c.get_scaleY();
                p = c.get_width() / c.get_scaleX() - g - q;
                q = c.get_height() / c.get_scaleY() - k - h;
                this.__vertexBufferData[0] = g;
                this.__vertexBufferData[1] = k;
                this.__vertexBufferData[3] = 1 * b;
                this.__vertexBufferData[4] = 1 * l;
                this.__vertexBufferData[15] = k;
                this.__vertexBufferData[18] = 1 * l;
                this.__vertexBufferData[28] = g;
                this.__vertexBufferData[31] = 1 * b;
                this.__vertexBufferData[56] = g + p;
                this.__vertexBufferData[57] = k;
                this.__vertexBufferData[59] = 1 * (b + d);
                this.__vertexBufferData[60] = 1 * l;
                this.__vertexBufferData[70] = g + p;
                this.__vertexBufferData[73] = 1 * (b + d);
                this.__vertexBufferData[84] = this.width;
                this.__vertexBufferData[85] = k;
                this.__vertexBufferData[87] = 1;
                this.__vertexBufferData[88] = 1 * l;
                this.__vertexBufferData[98] = this.width;
                this.__vertexBufferData[101] = 1;
                this.__vertexBufferData[112] = g;
                this.__vertexBufferData[113] = k + q;
                this.__vertexBufferData[115] = 1 * b;
                this.__vertexBufferData[116] = 1 * (l + f);
                this.__vertexBufferData[127] = k + q;
                this.__vertexBufferData[130] = 1 * (l + f);
                this.__vertexBufferData[140] = g + p;
                this.__vertexBufferData[141] = k + q;
                this.__vertexBufferData[143] = 1 * (b + d);
                this.__vertexBufferData[144] = 1 * (l + f);
                this.__vertexBufferData[154] = this.width;
                this.__vertexBufferData[155] = k + q;
                this.__vertexBufferData[157] = 1;
                this.__vertexBufferData[158] = 1 * (l + f);
                this.__vertexBufferData[168] = g;
                this.__vertexBufferData[169] = this.height;
                this.__vertexBufferData[171] = 1 * b;
                this.__vertexBufferData[172] = 1;
                this.__vertexBufferData[183] = this.height;
                this.__vertexBufferData[186] = 1;
                this.__vertexBufferData[196] = g + p;
                this.__vertexBufferData[197] = this.height;
                this.__vertexBufferData[199] = 1 * (b + d);
                this.__vertexBufferData[200] = 1;
                this.__vertexBufferData[210] = this.width;
                this.__vertexBufferData[211] = this.height;
                this.__vertexBufferData[213] = 1;
                this.__vertexBufferData[214] = 1;
                this.__vertexBuffer = a.createVertexBuffer(16, 14);
              } else
                0 == d && 0 != f
                  ? ((this.__vertexBufferData = new Float32Array(112)),
                    (k = b.y),
                    (p = this.height - f - k),
                    (l = k / this.height),
                    (f /= this.height),
                    (k /= c.get_scaleY()),
                    (h = p / c.get_scaleY()),
                    (q = c.get_height() / c.get_scaleY() - k - h),
                    (c = c.get_width() / c.get_scaleX()),
                    (this.__vertexBufferData[0] = c),
                    (this.__vertexBufferData[1] = k),
                    (this.__vertexBufferData[3] = 1),
                    (this.__vertexBufferData[4] = 1 * l),
                    (this.__vertexBufferData[15] = k),
                    (this.__vertexBufferData[18] = 1 * l),
                    (this.__vertexBufferData[28] = c),
                    (this.__vertexBufferData[31] = 1),
                    (this.__vertexBufferData[56] = c),
                    (this.__vertexBufferData[57] = k + q),
                    (this.__vertexBufferData[59] = 1),
                    (this.__vertexBufferData[60] = 1 * (l + f)),
                    (this.__vertexBufferData[71] = k + q),
                    (this.__vertexBufferData[74] = 1 * (l + f)),
                    (this.__vertexBufferData[84] = c),
                    (this.__vertexBufferData[85] = this.height),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[99] = this.height),
                    (this.__vertexBufferData[102] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)))
                  : 0 == f &&
                    0 != d &&
                    ((this.__vertexBufferData = new Float32Array(112)),
                    (g = b.x),
                    (q = this.width - d - g),
                    (b = g / this.width),
                    (d /= this.width),
                    (g /= c.get_scaleX()),
                    (q /= c.get_scaleX()),
                    (p = c.get_width() / c.get_scaleX() - g - q),
                    (c = c.get_height() / c.get_scaleY()),
                    (this.__vertexBufferData[0] = g),
                    (this.__vertexBufferData[1] = c),
                    (this.__vertexBufferData[3] = 1 * b),
                    (this.__vertexBufferData[4] = 1),
                    (this.__vertexBufferData[15] = c),
                    (this.__vertexBufferData[18] = 1),
                    (this.__vertexBufferData[28] = g),
                    (this.__vertexBufferData[31] = 1 * b),
                    (this.__vertexBufferData[56] = g + p),
                    (this.__vertexBufferData[57] = c),
                    (this.__vertexBufferData[59] = 1 * (b + d)),
                    (this.__vertexBufferData[60] = 1),
                    (this.__vertexBufferData[70] = g + p),
                    (this.__vertexBufferData[73] = 1 * (b + d)),
                    (this.__vertexBufferData[84] = this.width),
                    (this.__vertexBufferData[85] = c),
                    (this.__vertexBufferData[87] = 1),
                    (this.__vertexBufferData[88] = 1),
                    (this.__vertexBufferData[98] = this.width),
                    (this.__vertexBufferData[101] = 1),
                    (this.__vertexBuffer = a.createVertexBuffer(8, 14)));
            } else this.__vertexBufferGrid = null;
            null == this.__vertexBuffer &&
              ((this.__vertexBufferData = new Float32Array(56)),
              (this.__vertexBufferData[0] = this.width),
              (this.__vertexBufferData[1] = this.height),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[15] = this.height),
              (this.__vertexBufferData[18] = 1),
              (this.__vertexBufferData[28] = this.width),
              (this.__vertexBufferData[31] = 1),
              (this.__vertexBuffer = a.createVertexBuffer(3, 14)));
            this.__vertexBuffer.uploadFromTypedArray(
              ih.toArrayBufferView(this.__vertexBufferData),
            );
          }
          return this.__vertexBuffer;
        },
        getPixel: function (a, b) {
          return this.readable ? this.image.getPixel(a, b, 1) : 0;
        },
        getTexture: function (a) {
          if (!this.__isValid) return null;
          if (null == this.__texture || this.__textureContext != a.__context)
            ((this.__textureContext = a.__context),
              (this.__texture = a.createRectangleTexture(
                this.width,
                this.height,
                1,
                !1,
              )),
              (this.__textureVersion = -1));
          Na.sync(this.image, !1);
          null != this.image &&
            this.image.version > this.__textureVersion &&
            (null != this.__surface && Kl.flush(this.__surface),
            (a = this.image),
            Bb.__supportsBGRA ||
              0 == a.get_format() ||
              ((a = a.clone()), a.set_format(0)),
            this.__texture.__uploadFromImage(a),
            (this.__textureVersion = this.image.version),
            (this.__textureWidth = a.buffer.width),
            (this.__textureHeight = a.buffer.height));
          this.readable ||
            null == this.image ||
            (this.image = this.__surface = null);
          return this.__texture;
        },
        setPixel: function (a, b, c) {
          this.readable && this.image.setPixel(a, b, c, 1);
        },
        __drawCanvas: function (a, b) {
          var c = this.image.buffer;
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
          b.__render(a);
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
          c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
          c.__srcImageData = null;
          c.data = null;
          this.image.dirty = !0;
          this.image.version++;
        },
        __drawGL: function (a, b) {
          var c = b.__context3D,
            d = c.__state.renderToTexture,
            f = c.__state.renderToTextureDepthStencil,
            g = c.__state.renderToTextureAntiAlias,
            k = c.__state.renderToTextureSurfaceSelector;
          c.setRenderToTexture(this.getTexture(c), !0);
          b.__render(a);
          null != d
            ? c.setRenderToTexture(d, f, g, k)
            : c.setRenderToBackBuffer();
        },
        __fillRect: function (a, b, c) {
          if (null != a)
            if (
              (this.transparent && 0 == (b & -16777216) && (b = 0),
              c &&
                null != this.__texture &&
                null != this.__texture.__glFramebuffer &&
                'opengl' == Ra.get_current().stage.__renderer.__type)
            ) {
              c = Ra.get_current().stage.__renderer.__context3D;
              var d = !this.rect.equals(a),
                f = c.__state.renderToTexture,
                g = c.__state.renderToTextureDepthStencil,
                k = c.__state.renderToTextureAntiAlias,
                q = c.__state.renderToTextureSurfaceSelector;
              c.setRenderToTexture(this.__texture);
              d && c.setScissorRectangle(a);
              c.clear(
                ((b >>> 16) & 255) / 255,
                ((b >>> 8) & 255) / 255,
                (b & 255) / 255,
                this.transparent ? ((b >>> 24) & 255) / 255 : 1,
                0,
                0,
                1,
              );
              d && c.setScissorRectangle(null);
              null != f
                ? c.setRenderToTexture(f, g, k, q)
                : c.setRenderToBackBuffer();
            } else
              this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1);
        },
        __fromImage: function (a) {
          null != a &&
            null != a.buffer &&
            ((this.image = a),
            (this.width = a.width),
            (this.height = a.height),
            (this.rect = new na(0, 0, a.width, a.height)),
            (this.__textureWidth = this.width),
            (this.__textureHeight = this.height),
            (this.__isValid = this.readable = !0));
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          this.rect.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __setUVRect: function (a, b, c, d, f) {
          if (
            null != this.getVertexBuffer(a) &&
            (d != this.__uvRect.width ||
              f != this.__uvRect.height ||
              b != this.__uvRect.x ||
              c != this.__uvRect.y)
          ) {
            null == this.__uvRect && (this.__uvRect = new na());
            this.__uvRect.setTo(b, c, d, f);
            a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
            c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
            b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
            var g = 0 < this.__textureHeight ? f / this.__textureHeight : 0;
            this.__vertexBufferData[0] = d;
            this.__vertexBufferData[1] = f;
            this.__vertexBufferData[3] = a + b;
            this.__vertexBufferData[4] = c + g;
            this.__vertexBufferData[15] = f;
            this.__vertexBufferData[17] = a;
            this.__vertexBufferData[18] = c + g;
            this.__vertexBufferData[28] = d;
            this.__vertexBufferData[31] = a + b;
            this.__vertexBufferData[32] = c;
            this.__vertexBufferData[45] = a;
            this.__vertexBufferData[46] = c;
            this.__vertexBuffer.uploadFromTypedArray(
              ih.toArrayBufferView(this.__vertexBufferData),
            );
          }
        },
        __update: function (a, b) {
          this.__updateTransforms();
        },
        __updateTransforms: function (a) {
          null == a
            ? this.__worldTransform.identity()
            : this.__worldTransform.copyFrom(a);
          this.__renderTransform.copyFrom(this.__worldTransform);
        },
        __class__: $b,
      };
      var na = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      h['openfl.geom.Rectangle'] = na;
      na.__name__ = 'openfl.geom.Rectangle';
      na.prototype = {
        clone: function () {
          return new na(this.x, this.y, this.width, this.height);
        },
        contains: function (a, b) {
          return a >= this.x && b >= this.y && a < this.get_right()
            ? b < this.get_bottom()
            : !1;
        },
        containsPoint: function (a) {
          return this.contains(a.x, a.y);
        },
        containsRect: function (a) {
          return 0 >= a.width || 0 >= a.height
            ? a.x > this.x && a.y > this.y && a.get_right() < this.get_right()
              ? a.get_bottom() < this.get_bottom()
              : !1
            : a.x >= this.x &&
                a.y >= this.y &&
                a.get_right() <= this.get_right()
              ? a.get_bottom() <= this.get_bottom()
              : !1;
        },
        copyFrom: function (a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height;
        },
        equals: function (a) {
          return a == this
            ? !0
            : null != a &&
                this.x == a.x &&
                this.y == a.y &&
                this.width == a.width
              ? this.height == a.height
              : !1;
        },
        inflate: function (a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -= b;
          this.height += 2 * b;
        },
        intersection: function (a) {
          var b = this.x < a.x ? a.x : this.x,
            c =
              this.get_right() > a.get_right()
                ? a.get_right()
                : this.get_right();
          if (c <= b) return new na();
          var d = this.y < a.y ? a.y : this.y;
          a =
            this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          return a <= d ? new na() : new na(b, d, c - b, a - d);
        },
        intersects: function (a) {
          var b = this.x < a.x ? a.x : this.x;
          if (
            (this.get_right() > a.get_right()
              ? a.get_right()
              : this.get_right()) <= b
          )
            return !1;
          b = this.y < a.y ? a.y : this.y;
          return (
            (this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom()) > b
          );
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        offsetPoint: function (a) {
          this.x += a.x;
          this.y += a.y;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        union: function (a) {
          if (0 == this.width || 0 == this.height) return a.clone();
          if (0 == a.width || 0 == a.height) return this.clone();
          var b = this.x > a.x ? a.x : this.x,
            c =
              this.get_right() < a.get_right()
                ? a.get_right()
                : this.get_right(),
            d = this.y > a.y ? a.y : this.y;
          a =
            this.get_bottom() < a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          return new na(b, d, c - b, a - d);
        },
        __contract: function (a, b, c, d) {
          if (0 != this.width || 0 != this.height) {
            var f = 0,
              g = 0,
              k = 0,
              q = 0;
            this.x < a && (f = a - this.x);
            this.y < b && (g = b - this.y);
            this.get_right() > a + c && (k = a + c - this.get_right());
            this.get_bottom() > b + d && (q = b + d - this.get_bottom());
            this.x += f;
            this.y += g;
            this.width += k - f;
            this.height += q - g;
          }
        },
        __expand: function (a, b, c, d) {
          if (0 == this.width && 0 == this.height)
            ((this.x = a), (this.y = b), (this.width = c), (this.height = d));
          else {
            var f = this.get_right(),
              g = this.get_bottom();
            this.x > a && ((this.x = a), (this.width = f - a));
            this.y > b && ((this.y = b), (this.height = g - b));
            f < a + c && (this.width = a + c - this.x);
            g < b + d && (this.height = b + d - this.y);
          }
        },
        __toLimeRectangle: function () {
          null == na.__limeRectangle && (na.__limeRectangle = new Gd());
          na.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
          return na.__limeRectangle;
        },
        __transform: function (a, b) {
          var c = b.a * this.x + b.c * this.y,
            d = c,
            f = b.b * this.x + b.d * this.y,
            g = f,
            k = b.a * (this.x + this.width) + b.c * this.y,
            q = b.b * (this.x + this.width) + b.d * this.y;
          k < c && (c = k);
          q < f && (f = q);
          k > d && (d = k);
          q > g && (g = q);
          k = b.a * (this.x + this.width) + b.c * (this.y + this.height);
          q = b.b * (this.x + this.width) + b.d * (this.y + this.height);
          k < c && (c = k);
          q < f && (f = q);
          k > d && (d = k);
          q > g && (g = q);
          k = b.a * this.x + b.c * (this.y + this.height);
          q = b.b * this.x + b.d * (this.y + this.height);
          k < c && (c = k);
          q < f && (f = q);
          k > d && (d = k);
          q > g && (g = q);
          a.setTo(c + b.tx, f + b.ty, d - c, g - f);
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_left: function () {
          return this.x;
        },
        get_right: function () {
          return this.x + this.width;
        },
        get_top: function () {
          return this.y;
        },
        get_topLeft: function () {
          return new B(this.x, this.y);
        },
        __class__: na,
        __properties__: {
          get_topLeft: 'get_topLeft',
          get_top: 'get_top',
          get_right: 'get_right',
          get_left: 'get_left',
          get_bottom: 'get_bottom',
        },
      };
      var Ub = function (a, b, c, d, f, g, k) {
        null == f && (f = -1);
        null == d && (d = -1);
        null == c && (c = 0);
        null == b && (b = 0);
        this.offsetX = b;
        this.offsetY = c;
        this.width = d;
        this.height = f;
        this.version = 0;
        null == k &&
          ((k = wc.CANVAS), null != xd.__current.__worker || xd.__isWorker) &&
          (k = wc.DATA);
        this.type = k;
        if (null == a) {
          if (0 < d && 0 < f)
            switch (this.type._hx_index) {
              case 0:
                this.buffer = new $e(null, d, f);
                Na.createCanvas(this, d, f);
                null != g && 0 != g && this.fillRect(new Gd(0, 0, d, f), g);
                break;
              case 1:
                ((a = d * f * 4),
                  (a = null != a ? new Uint8Array(a) : null),
                  (this.buffer = new $e(a, d, f)),
                  null != g && 0 != g && this.fillRect(new Gd(0, 0, d, f), g));
            }
        } else this.__fromImageBuffer(a);
      };
      h['lime.graphics.Image'] = Ub;
      Ub.__name__ = 'lime.graphics.Image';
      Ub.fromCanvas = function (a) {
        if (null == a) return null;
        var b = new $e(null, a.width, a.height);
        b.set_src(a);
        a = new Ub(b);
        a.type = wc.CANVAS;
        return a;
      };
      Ub.fromFile = function (a) {
        if (null == a) return null;
        var b = new Ub();
        return b.__fromFile(a) ? b : null;
      };
      Ub.loadFromBytes = function (a) {
        if (null == a) return qc.withValue(null);
        if (Ub.__isPNG(a)) var b = 'image/png';
        else if (Ub.__isJPG(a)) b = 'image/jpeg';
        else if (Ub.__isGIF(a)) b = 'image/gif';
        else if (Ub.__isWebP(a)) b = 'image/webp';
        else return qc.withValue(null);
        return Ga.loadImageFromBytes(a, b);
      };
      Ub.loadFromFile = function (a) {
        return null == a ? qc.withValue(null) : Ga.loadImage(a);
      };
      Ub.__isGIF = function (a) {
        if (null == a || 6 > a.length) return !1;
        a = a.getString(0, 6);
        return 'GIF87a' != a ? 'GIF89a' == a : !0;
      };
      Ub.__isJPG = function (a) {
        return null == a || 4 > a.length
          ? !1
          : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2]
            ? 217 == a.b[a.length - 1]
            : !1;
      };
      Ub.__isPNG = function (a) {
        return null == a || 8 > a.length
          ? !1
          : 137 == a.b[0] &&
              80 == a.b[1] &&
              78 == a.b[2] &&
              71 == a.b[3] &&
              13 == a.b[4] &&
              10 == a.b[5] &&
              26 == a.b[6]
            ? 10 == a.b[7]
            : !1;
      };
      Ub.__isWebP = function (a) {
        return null == a || 16 > a.length
          ? !1
          : 'RIFF' == a.getString(0, 4)
            ? 'WEBP' == a.getString(8, 4)
            : !1;
      };
      Ub.prototype = {
        clone: function () {
          if (null != this.buffer) {
            this.type == wc.CANVAS
              ? Na.convertToCanvas(this)
              : Na.convertToData(this);
            var a = new Ub(
              this.buffer.clone(),
              this.offsetX,
              this.offsetY,
              this.width,
              this.height,
              null,
              this.type,
            );
            a.version = this.version;
            return a;
          }
          return new Ub(
            null,
            this.offsetX,
            this.offsetY,
            this.width,
            this.height,
            null,
            this.type,
          );
        },
        colorTransform: function (a, b) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Na.colorTransform(this, a, b);
                break;
              case 1:
                Na.convertToData(this);
                fc.colorTransform(this, a, b);
                break;
              case 2:
                (a.offset(this.offsetX, this.offsetY),
                  this.buffer.__srcBitmapData.colorTransform(
                    a.__toFlashRectangle(),
                    Rc.__toFlashColorTransform(b),
                  ));
            }
        },
        copyChannel: function (a, b, c, d, f) {
          b = this.__clipRect(b);
          if (
            null != this.buffer &&
            null != b &&
            !(
              (f == ke.ALPHA && !this.get_transparent()) ||
              0 >= b.width ||
              0 >= b.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              this.type._hx_index)
            ) {
              case 0:
                Na.copyChannel(this, a, b, c, d, f);
                break;
              case 1:
                Na.convertToData(this);
                Na.convertToData(a);
                fc.copyChannel(this, a, b, c, d, f);
                break;
              case 2:
                switch (d._hx_index) {
                  case 0:
                    var g = 1;
                    break;
                  case 1:
                    g = 2;
                    break;
                  case 2:
                    g = 4;
                    break;
                  case 3:
                    g = 8;
                }
                switch (f._hx_index) {
                  case 0:
                    var k = 1;
                    break;
                  case 1:
                    k = 2;
                    break;
                  case 2:
                    k = 4;
                    break;
                  case 3:
                    k = 8;
                }
                b.offset(a.offsetX, a.offsetY);
                c.offset(this.offsetX, this.offsetY);
                this.buffer.__srcBitmapData.copyChannel(
                  a.buffer.get_src(),
                  b.__toFlashRectangle(),
                  c.__toFlashPoint(),
                  g,
                  k,
                );
            }
        },
        copyPixels: function (a, b, c, d, f, g) {
          null == g && (g = !1);
          if (
            null != this.buffer &&
            null != a &&
            !(
              0 >= b.width ||
              0 >= b.height ||
              0 >= this.width ||
              0 >= this.height
            )
          )
            switch (
              (b.x + b.width > a.width && (b.width = a.width - b.x),
              b.y + b.height > a.height && (b.height = a.height - b.y),
              0 > b.x && ((b.width += b.x), (b.x = 0)),
              0 > b.y && ((b.height += b.y), (b.y = 0)),
              c.x + b.width > this.width && (b.width = this.width - c.x),
              c.y + b.height > this.height && (b.height = this.height - c.y),
              0 > c.x && ((b.width += c.x), (b.x -= c.x), (c.x = 0)),
              0 > c.y && ((b.height += c.y), (b.y -= c.y), (c.y = 0)),
              a == this &&
                c.x < b.get_right() &&
                c.y < b.get_bottom() &&
                (a = this.clone()),
              d == a && (null == f || (0 == f.x && 0 == f.y)) && (f = d = null),
              this.type._hx_index)
            ) {
              case 0:
                null != d
                  ? (Na.convertToData(this),
                    Na.convertToData(a),
                    null != d && Na.convertToData(d),
                    fc.copyPixels(this, a, b, c, d, f, g))
                  : (Na.convertToCanvas(this),
                    Na.convertToCanvas(a),
                    Na.copyPixels(this, a, b, c, d, f, g));
                break;
              case 1:
                Na.convertToData(this);
                Na.convertToData(a);
                null != d && Na.convertToData(d);
                fc.copyPixels(this, a, b, c, d, f, g);
                break;
              case 2:
                (b.offset(a.offsetX, a.offsetY),
                  c.offset(this.offsetX, this.offsetY),
                  null != d && null != f && f.offset(d.offsetX, d.offsetY),
                  this.buffer.__srcBitmapData.copyPixels(
                    a.buffer.__srcBitmapData,
                    b.__toFlashRectangle(),
                    c.__toFlashPoint(),
                    null != d ? d.buffer.get_src() : null,
                    null != f ? f.__toFlashPoint() : null,
                    g,
                  ));
            }
        },
        encode: function (a, b) {
          null == b && (b = 90);
          if (null == a) return kk.encode(this);
          switch (a._hx_index) {
            case 0:
              return gl.encode(this);
            case 1:
              return hl.encode(this, b);
            case 2:
              return kk.encode(this);
          }
        },
        fillRect: function (a, b, c) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a)
            switch (this.type._hx_index) {
              case 0:
                Na.fillRect(this, a, b, c);
                break;
              case 1:
                Na.convertToData(this);
                if (0 == this.buffer.data.length) break;
                fc.fillRect(this, a, b, c);
                break;
              case 2:
                a.offset(this.offsetX, this.offsetY);
                if (null == c)
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 24) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 8) & 255);
                else
                  switch (c) {
                    case 1:
                      break;
                    case 2:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 8) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 24) & 255);
                      break;
                    default:
                      b =
                        ((b & 255) << 24) |
                        (((b >>> 24) & 255) << 16) |
                        (((b >>> 16) & 255) << 8) |
                        ((b >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b);
            }
        },
        getPixel: function (a, b, c) {
          if (
            null == this.buffer ||
            0 > a ||
            0 > b ||
            a >= this.width ||
            b >= this.height
          )
            return 0;
          switch (this.type._hx_index) {
            case 0:
              return Na.getPixel(this, a, b, c);
            case 1:
              return (Na.convertToData(this), fc.getPixel(this, a, b, c));
            case 2:
              a = this.buffer.__srcBitmapData.getPixel(
                a + this.offsetX,
                b + this.offsetY,
              );
              if (null == c)
                return (
                  (((a >>> 16) & 255) << 24) |
                  (((a >>> 8) & 255) << 16) |
                  ((a & 255) << 8) |
                  ((a >>> 24) & 255)
                );
              switch (c) {
                case 1:
                  return a;
                case 2:
                  return (
                    ((a & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    (((a >>> 16) & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
                default:
                  return (
                    (((a >>> 16) & 255) << 24) |
                    (((a >>> 8) & 255) << 16) |
                    ((a & 255) << 8) |
                    ((a >>> 24) & 255)
                  );
              }
            default:
              return 0;
          }
        },
        getPixels: function (a, b) {
          if (null == this.buffer) return null;
          switch (this.type._hx_index) {
            case 0:
              return Na.getPixels(this, a, b);
            case 1:
              return (Na.convertToData(this), fc.getPixels(this, a, b));
            case 2:
              return null;
            default:
              return null;
          }
        },
        setPixel: function (a, b, c, d) {
          if (
            !(
              null == this.buffer ||
              0 > a ||
              0 > b ||
              a >= this.width ||
              b >= this.height
            )
          )
            switch (this.type._hx_index) {
              case 0:
                Na.setPixel(this, a, b, c, d);
                break;
              case 1:
                Na.convertToData(this);
                fc.setPixel(this, a, b, c, d);
                break;
              case 2:
                if (null == d)
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
                else
                  switch (d) {
                    case 1:
                      break;
                    case 2:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 8) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 24) & 255);
                      break;
                    default:
                      c =
                        ((c & 255) << 24) |
                        (((c >>> 24) & 255) << 16) |
                        (((c >>> 16) & 255) << 8) |
                        ((c >>> 8) & 255);
                  }
                this.buffer.__srcBitmapData.setPixel(
                  a + this.offsetX,
                  b + this.offsetX,
                  c,
                );
            }
        },
        __clipRect: function (a) {
          return null == a ||
            (0 > a.x && ((a.width -= -a.x), (a.x = 0), 0 >= a.x + a.width)) ||
            (0 > a.y && ((a.height -= -a.y), (a.y = 0), 0 >= a.y + a.height)) ||
            (a.x + a.width >= this.width &&
              ((a.width -= a.x + a.width - this.width), 0 >= a.width)) ||
            (a.y + a.height >= this.height &&
              ((a.height -= a.y + a.height - this.height), 0 >= a.height))
            ? null
            : a;
        },
        __fromBase64: function (a, b, c) {
          var d = this,
            f = new window.Image();
          f.addEventListener(
            'load',
            function (a) {
              d.buffer = new $e(null, f.width, f.height);
              d.buffer.__srcImage = f;
              d.offsetX = 0;
              d.offsetY = 0;
              d.width = d.buffer.width;
              d.height = d.buffer.height;
              null != c && c(d);
            },
            !1,
          );
          f.src = 'data:' + b + ';base64,' + a;
        },
        __fromBytes: function (a, b) {
          if (Ub.__isPNG(a)) var c = 'image/png';
          else if (Ub.__isJPG(a)) c = 'image/jpeg';
          else if (Ub.__isGIF(a)) c = 'image/gif';
          else return !1;
          this.__fromBase64(Ie.encode(a), c, b);
          return !0;
        },
        __fromFile: function (a, b, c) {
          var d = this,
            f = new window.Image();
          Ga.__isSameOrigin(a) || (f.crossOrigin = 'Anonymous');
          f.onload = function (a) {
            d.buffer = new $e(null, f.width, f.height);
            d.buffer.__srcImage = f;
            d.width = f.width;
            d.height = f.height;
            null != b && b(d);
          };
          f.onerror = function (a) {
            null != c && c();
          };
          f.src = a;
          return !0;
        },
        __fromImageBuffer: function (a) {
          this.buffer = a;
          null != a &&
            (-1 == this.width && (this.width = a.width),
            -1 == this.height && (this.height = a.height));
        },
        get_data: function () {
          null == this.buffer.data &&
            0 < this.buffer.width &&
            0 < this.buffer.height &&
            Na.convertToData(this);
          return this.buffer.data;
        },
        get_format: function () {
          return this.buffer.format;
        },
        set_format: function (a) {
          this.buffer.format != a &&
            1 == this.type._hx_index &&
            fc.setFormat(this, a);
          return (this.buffer.format = a);
        },
        get_premultiplied: function () {
          return this.buffer.premultiplied;
        },
        set_premultiplied: function (a) {
          if (a && !this.buffer.premultiplied)
            switch (this.type._hx_index) {
              case 0:
              case 1:
                (Na.convertToData(this), fc.multiplyAlpha(this));
            }
          else
            !a &&
              this.buffer.premultiplied &&
              1 == this.type._hx_index &&
              (Na.convertToData(this), fc.unmultiplyAlpha(this));
          return a;
        },
        get_rect: function () {
          return new Gd(0, 0, this.width, this.height);
        },
        get_src: function () {
          null != this.buffer.__srcCanvas ||
            (null == this.buffer.data && this.type != wc.DATA) ||
            Na.convertToCanvas(this);
          return this.buffer.get_src();
        },
        get_transparent: function () {
          return null == this.buffer ? !1 : this.buffer.transparent;
        },
        set_transparent: function (a) {
          return null == this.buffer ? !1 : (this.buffer.transparent = a);
        },
        __class__: Ub,
        __properties__: {
          set_transparent: 'set_transparent',
          get_transparent: 'get_transparent',
          get_src: 'get_src',
          get_rect: 'get_rect',
          set_premultiplied: 'set_premultiplied',
          get_premultiplied: 'get_premultiplied',
          set_format: 'set_format',
          get_format: 'get_format',
          get_data: 'get_data',
        },
      };
      var wc = (L['lime.graphics.ImageType'] = {
        __ename__: 'lime.graphics.ImageType',
        __constructs__: null,
        CANVAS: {
          _hx_name: 'CANVAS',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
        DATA: {
          _hx_name: 'DATA',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
        FLASH: {
          _hx_name: 'FLASH',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
        CUSTOM: {
          _hx_name: 'CUSTOM',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageType',
          toString: r,
        },
      });
      wc.__constructs__ = [wc.CANVAS, wc.DATA, wc.FLASH, wc.CUSTOM];
      wc.__empty_constructs__ = [wc.CANVAS, wc.DATA, wc.FLASH, wc.CUSTOM];
      var lk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Dynamic_Void'] = lk;
      lk.__name__ = 'lime.app._Event_Dynamic_Void';
      lk.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: lk,
      };
      var Al = {
          disablePreserveClasses: function (a) {
            null != a &&
              a instanceof Object &&
              1 != ya.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              (a.__skipPrototype__ = !0);
          },
          restoreClasses: function (a, b) {
            null == b &&
              ((b = (2147483647 * Math.random()) | 0),
              ya.field(a, '__restoreFlag__') == b && ++b);
            if (
              null != a &&
              a instanceof Object &&
              1 != ya.field(a, '__skipPrototype__') &&
              !(
                null != a.byteLength &&
                null != a.byteOffset &&
                null != a.buffer &&
                a.buffer instanceof ArrayBuffer
              ) &&
              ya.field(a, '__restoreFlag__') != b
            ) {
              try {
                a.__restoreFlag__ = b;
              } catch (f) {
                Ua.lastError = f;
                return;
              }
              if (null != ya.field(a, '__prototype__'))
                try {
                  Object.setPrototypeOf(
                    a,
                    h[ya.field(a, '__prototype__')].prototype,
                  );
                } catch (f) {
                  Ua.lastError = f;
                }
              var c = 0;
              for (a = Object.values(a); c < a.length; ) {
                var d = a[c];
                ++c;
                Al.restoreClasses(d, b);
              }
            }
          },
        },
        Ll = {
          toFunction: function (a) {
            if (null != a.func) return a.func;
            if (null != a.classPath && null != a.functionName)
              return ((a.func = h[a.classPath][a.functionName]), a.func);
            if (null != a.sourceCode)
              return (
                (a.func = new Function('return ' + a.sourceCode)()),
                a.func
              );
            throw aa.thrown(
              'Object is not a valid WorkFunction: ' + I.string(a),
            );
          },
        },
        xa = function () {};
      h['js.Boot'] = xa;
      xa.__name__ = 'js.Boot';
      xa.getClass = function (a) {
        if (null == a) return null;
        if (a instanceof Array) return Array;
        var b = a.__class__;
        if (null != b) return b;
        a = xa.__nativeClassName(a);
        return null != a ? xa.__resolveNativeClass(a) : null;
      };
      xa.__string_rec = function (a, b) {
        if (null == a) return 'null';
        if (5 <= b.length) return '<...>';
        var c = typeof a;
        'function' == c && (a.__name__ || a.__ename__) && (c = 'object');
        switch (c) {
          case 'function':
            return '<function>';
          case 'object':
            if (a.__enum__) {
              var d = L[a.__enum__].__constructs__[a._hx_index];
              c = d._hx_name;
              if (d.__params__) {
                b += '\t';
                var f = [],
                  g = 0;
                for (d = d.__params__; g < d.length; ) {
                  var k = d[g];
                  g += 1;
                  f.push(xa.__string_rec(a[k], b));
                }
                return c + '(' + f.join(',') + ')';
              }
              return c;
            }
            if (a instanceof Array) {
              c = '[';
              b += '\t';
              f = 0;
              for (g = a.length; f < g; )
                ((d = f++),
                  (c += (0 < d ? ',' : '') + xa.__string_rec(a[d], b)));
              return c + ']';
            }
            try {
              f = a.toString;
            } catch (q) {
              return ((Ua.lastError = q), '???');
            }
            if (
              null != f &&
              f != Object.toString &&
              'function' == typeof f &&
              ((c = a.toString()), '[object Object]' != c)
            )
              return c;
            c = '{\n';
            b += '\t';
            f = null != a.hasOwnProperty;
            g = null;
            for (g in a)
              (f && !a.hasOwnProperty(g)) ||
                'prototype' == g ||
                '__class__' == g ||
                '__super__' == g ||
                '__interfaces__' == g ||
                '__properties__' == g ||
                (2 != c.length && (c += ', \n'),
                (c += b + g + ' : ' + xa.__string_rec(a[g], b)));
            b = b.substring(1);
            return c + ('\n' + b + '}');
          case 'string':
            return a;
          default:
            return String(a);
        }
      };
      xa.__interfLoop = function (a, b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var c = a.__interfaces__;
        if (null != c)
          for (var d = 0, f = c.length; d < f; ) {
            var g = d++;
            g = c[g];
            if (g == b || xa.__interfLoop(g, b)) return !0;
          }
        return xa.__interfLoop(a.__super__, b);
      };
      xa.__instanceof = function (a, b) {
        if (null == b) return !1;
        switch (b) {
          case Array:
            return a instanceof Array;
          case Ml:
            return 'boolean' == typeof a;
          case Nl:
            return null != a;
          case Ol:
            return 'number' == typeof a;
          case Bl:
            return 'number' == typeof a ? (a | 0) === a : !1;
          case String:
            return 'string' == typeof a;
          default:
            if (null != a)
              if ('function' == typeof b) {
                if (xa.__downcastCheck(a, b)) return !0;
              } else {
                if (
                  'object' == typeof b &&
                  xa.__isNativeObj(b) &&
                  a instanceof b
                )
                  return !0;
              }
            else return !1;
            return (b == Dl && null != a.__name__) ||
              (b == El && null != a.__ename__)
              ? !0
              : null != a.__enum__
                ? L[a.__enum__] == b
                : !1;
        }
      };
      xa.__downcastCheck = function (a, b) {
        return a instanceof b
          ? !0
          : b.__isInterface__
            ? xa.__interfLoop(xa.getClass(a), b)
            : !1;
      };
      xa.__cast = function (a, b) {
        if (null == a || xa.__instanceof(a, b)) return a;
        throw aa.thrown('Cannot cast ' + I.string(a) + ' to ' + I.string(b));
      };
      xa.__nativeClassName = function (a) {
        a = xa.__toStr.call(a).slice(8, -1);
        return 'Object' == a || 'Function' == a || 'Math' == a || 'JSON' == a
          ? null
          : a;
      };
      xa.__isNativeObj = function (a) {
        return null != xa.__nativeClassName(a);
      };
      xa.__resolveNativeClass = function (a) {
        return z[a];
      };
      var xd = function (a, b) {
        this.__href = a;
        null != b &&
          ((this.__worker = b),
          (this.__worker.onmessage = m(this, this.dispatchMessage)),
          (this.onMessage = new lk()));
        Al.disablePreserveClasses(this);
      };
      h['lime._internal.backend.html5.HTML5Thread'] = xd;
      xd.__name__ = 'lime._internal.backend.html5.HTML5Thread';
      xd.prototype = {
        dispatchMessage: function (a) {
          a = a.data;
          Al.restoreClasses(a);
          null != this.onMessage && this.onMessage.dispatch(a);
          xd.__resolveMethods.isEmpty()
            ? xd.__messages.add(a)
            : xd.__resolveMethods.pop()(a);
        },
        destroy: function () {
          if (null != this.__worker) this.__worker.terminate();
          else if (xd.__isWorker)
            try {
              z.close();
            } catch (a) {
              Ua.lastError = a;
            }
        },
        __class__: xd,
      };
      var $e = function (a, b, c, d, f) {
        null == d && (d = 32);
        null == c && (c = 0);
        null == b && (b = 0);
        this.data = a;
        this.width = b;
        this.height = c;
        this.bitsPerPixel = d;
        this.format = null == f ? 0 : f;
        this.premultiplied = !1;
        this.transparent = !0;
      };
      h['lime.graphics.ImageBuffer'] = $e;
      $e.__name__ = 'lime.graphics.ImageBuffer';
      $e.prototype = {
        clone: function () {
          var a = new $e(this.data, this.width, this.height, this.bitsPerPixel);
          if (null != this.data) {
            var b = this.data.byteLength,
              c = null,
              d = null,
              f = null,
              g = null,
              k = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != g
                        ? null == k
                          ? new Uint8Array(g, 0)
                          : new Uint8Array(g, 0, k)
                        : null;
            a.data = b;
            d = c = b = null;
            f = this.data;
            k = g = null;
            b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != g
                        ? null == k
                          ? new Uint8Array(g, 0)
                          : new Uint8Array(g, 0, k)
                        : null;
            a.data.set(b);
          } else
            null != this.__srcImageData
              ? ((a.__srcCanvas = window.document.createElement('canvas')),
                (a.__srcContext = a.__srcCanvas.getContext('2d')),
                (a.__srcCanvas.width = this.__srcImageData.width),
                (a.__srcCanvas.height = this.__srcImageData.height),
                (a.__srcImageData = a.__srcContext.createImageData(
                  this.__srcImageData.width,
                  this.__srcImageData.height,
                )),
                (b = new Uint8ClampedArray(this.__srcImageData.data)),
                a.__srcImageData.data.set(b))
              : null != this.__srcCanvas
                ? ((a.__srcCanvas = window.document.createElement('canvas')),
                  (a.__srcContext = a.__srcCanvas.getContext('2d')),
                  (a.__srcCanvas.width = this.__srcCanvas.width),
                  (a.__srcCanvas.height = this.__srcCanvas.height),
                  a.__srcContext.drawImage(this.__srcCanvas, 0, 0))
                : (a.__srcImage = this.__srcImage);
          a.bitsPerPixel = this.bitsPerPixel;
          a.format = this.format;
          a.premultiplied = this.premultiplied;
          a.transparent = this.transparent;
          return a;
        },
        get_src: function () {
          return null != this.__srcImage ? this.__srcImage : this.__srcCanvas;
        },
        set_src: function (a) {
          a instanceof Image
            ? (this.__srcImage = a)
            : a instanceof HTMLCanvasElement &&
              ((this.__srcCanvas = a),
              (this.__srcContext = this.__srcCanvas.getContext('2d')));
          return a;
        },
        get_stride: function () {
          return this.width * ((this.bitsPerPixel / 8) | 0);
        },
        __class__: $e,
        __properties__: {
          get_stride: 'get_stride',
          set_src: 'set_src',
          get_src: 'get_src',
        },
      };
      var Na = function () {};
      h['lime._internal.graphics.ImageCanvasUtil'] = Na;
      Na.__name__ = 'lime._internal.graphics.ImageCanvasUtil';
      Na.colorTransform = function (a, b, c) {
        Na.convertToData(a);
        fc.colorTransform(a, b, c);
      };
      Na.convertToCanvas = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage
          ? (null == c.__srcCanvas &&
              (Na.createCanvas(a, c.__srcImage.width, c.__srcImage.height),
              c.__srcContext.drawImage(c.__srcImage, 0, 0)),
            (c.__srcImage = null))
          : null == c.__srcCanvas && null != c.data
            ? (a.set_transparent(!0),
              Na.createCanvas(a, c.width, c.height),
              Na.createImageData(a),
              c.__srcContext.putImageData(c.__srcImageData, 0, 0))
            : a.type == wc.DATA &&
              null != c.__srcImageData &&
              a.dirty &&
              (c.__srcContext.putImageData(c.__srcImageData, 0, 0),
              (a.dirty = !1));
        b
          ? ((c.data = null), (c.__srcImageData = null))
          : null == c.data &&
            null != c.__srcImageData &&
            (c.data = c.__srcImageData.data);
        a.type = wc.CANVAS;
      };
      Na.convertToData = function (a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage && Na.convertToCanvas(a);
        if (null != c.__srcCanvas && null == c.data)
          (Na.createImageData(a), a.type == wc.CANVAS && (a.dirty = !1));
        else if (a.type == wc.CANVAS && null != c.__srcCanvas && a.dirty) {
          if (null == c.__srcImageData) Na.createImageData(a);
          else {
            c.__srcImageData = c.__srcContext.getImageData(
              0,
              0,
              c.width,
              c.height,
            );
            var d = c.__srcImageData.data.buffer;
            d = null != d ? new Uint8Array(d) : null;
            c.data = d;
          }
          a.dirty = !1;
        }
        b && ((a.buffer.__srcCanvas = null), (a.buffer.__srcContext = null));
        a.type = wc.DATA;
      };
      Na.copyChannel = function (a, b, c, d, f, g) {
        Na.convertToData(b);
        Na.convertToData(a);
        fc.copyChannel(a, b, c, d, f, g);
      };
      Na.copyPixels = function (a, b, c, d, f, g, k) {
        null == k && (k = !1);
        null == d ||
          d.x >= a.width ||
          d.y >= a.height ||
          null == c ||
          1 > c.width ||
          1 > c.height ||
          (null != f &&
            f.get_transparent() &&
            (null == g && (g = new tg()),
            (b = b.clone()),
            b.copyChannel(
              f,
              new Gd(c.x + g.x, c.y + g.y, c.width, c.height),
              new tg(c.x, c.y),
              ke.ALPHA,
              ke.ALPHA,
            )),
          Na.convertToCanvas(a, !0),
          k ||
            (a.get_transparent() &&
              b.get_transparent() &&
              a.buffer.__srcContext.clearRect(
                d.x + a.offsetX,
                d.y + a.offsetY,
                c.width + a.offsetX,
                c.height + a.offsetY,
              )),
          Na.convertToCanvas(b),
          null != b.buffer.get_src() &&
            ((a.buffer.__srcContext.globalCompositeOperation = 'source-over'),
            a.buffer.__srcContext.drawImage(
              b.buffer.get_src(),
              (c.x + b.offsetX) | 0,
              (c.y + b.offsetY) | 0,
              c.width | 0,
              c.height | 0,
              (d.x + a.offsetX) | 0,
              (d.y + a.offsetY) | 0,
              c.width | 0,
              c.height | 0,
            )),
          (a.dirty = !0),
          a.version++);
      };
      Na.createCanvas = function (a, b, c) {
        var d = a.buffer;
        null == d.__srcCanvas &&
          ((d.__srcCanvas = window.document.createElement('canvas')),
          (d.__srcCanvas.width = b),
          (d.__srcCanvas.height = c),
          a.get_transparent()
            ? (d.__srcContext = d.__srcCanvas.getContext('2d'))
            : (a.get_transparent() ||
                d.__srcCanvas.setAttribute('moz-opaque', 'true'),
              (d.__srcContext = d.__srcCanvas.getContext('2d', {
                alpha: !1,
              }))));
      };
      Na.createImageData = function (a) {
        a = a.buffer;
        if (null == a.__srcImageData) {
          null == a.data
            ? (a.__srcImageData = a.__srcContext.getImageData(
                0,
                0,
                a.width,
                a.height,
              ))
            : ((a.__srcImageData = a.__srcContext.createImageData(
                a.width,
                a.height,
              )),
              a.__srcImageData.data.set(a.data));
          var b = a.__srcImageData.data.buffer;
          b = null != b ? new Uint8Array(b) : null;
          a.data = b;
        }
      };
      Na.fillRect = function (a, b, c, d) {
        Na.convertToCanvas(a);
        if (1 == d) {
          d = (c >> 16) & 255;
          var f = (c >> 8) & 255;
          var g = c & 255;
          c = a.get_transparent() ? (c >> 24) & 255 : 255;
        } else
          ((d = (c >> 24) & 255),
            (f = (c >> 16) & 255),
            (g = (c >> 8) & 255),
            (c = a.get_transparent() ? c & 255 : 255));
        0 == b.x &&
        0 == b.y &&
        b.width == a.width &&
        b.height == a.height &&
        a.get_transparent() &&
        0 == c
          ? (a.buffer.__srcCanvas.width = a.buffer.width)
          : (255 > c &&
              a.buffer.__srcContext.clearRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              ),
            0 < c &&
              ((a.buffer.__srcContext.fillStyle =
                'rgba(' + d + ', ' + f + ', ' + g + ', ' + c / 255 + ')'),
              a.buffer.__srcContext.fillRect(
                b.x + a.offsetX,
                b.y + a.offsetY,
                b.width + a.offsetX,
                b.height + a.offsetY,
              )),
            (a.dirty = !0),
            a.version++);
      };
      Na.getPixel = function (a, b, c, d) {
        Na.convertToData(a);
        return fc.getPixel(a, b, c, d);
      };
      Na.getPixels = function (a, b, c) {
        Na.convertToData(a);
        return fc.getPixels(a, b, c);
      };
      Na.setPixel = function (a, b, c, d, f) {
        Na.convertToData(a);
        fc.setPixel(a, b, c, d, f);
      };
      Na.sync = function (a, b) {
        null != a &&
          (a.type != wc.CANVAS ||
          (null == a.buffer.__srcCanvas && null == a.buffer.data)
            ? a.type == wc.DATA && Na.convertToData(a, b)
            : Na.convertToCanvas(a, b));
      };
      var Gd = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
      };
      h['lime.math.Rectangle'] = Gd;
      Gd.__name__ = 'lime.math.Rectangle';
      Gd.prototype = {
        intersection: function (a, b) {
          null == b && (b = new Gd());
          var c = this.x < a.x ? a.x : this.x,
            d =
              this.get_right() > a.get_right()
                ? a.get_right()
                : this.get_right();
          if (d <= c) return (b.setEmpty(), b);
          var f = this.y < a.y ? a.y : this.y;
          a =
            this.get_bottom() > a.get_bottom()
              ? a.get_bottom()
              : this.get_bottom();
          if (a <= f) return (b.setEmpty(), b);
          b.x = c;
          b.y = f;
          b.width = d - c;
          b.height = a - f;
          return b;
        },
        offset: function (a, b) {
          this.x += a;
          this.y += b;
        },
        setEmpty: function () {
          this.x = this.y = this.width = this.height = 0;
        },
        setTo: function (a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d;
        },
        __toFlashRectangle: function () {
          return null;
        },
        get_bottom: function () {
          return this.y + this.height;
        },
        get_right: function () {
          return this.x + this.width;
        },
        __class__: Gd,
        __properties__: { get_right: 'get_right', get_bottom: 'get_bottom' },
      };
      var ua = function (a, b, c, d, f, g) {
        null == g && (g = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = f;
        this.ty = g;
      };
      h['openfl.geom.Matrix'] = ua;
      ua.__name__ = 'openfl.geom.Matrix';
      ua.prototype = {
        clone: function () {
          return new ua(this.a, this.b, this.c, this.d, this.tx, this.ty);
        },
        concat: function (a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty * a.d + a.ty;
          this.tx = b;
        },
        copyFrom: function (a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty;
        },
        createGradientBox: function (a, b, c, d, f) {
          null == f && (f = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          this.a = a / 1638.4;
          this.d = b / 1638.4;
          if (0 != c) {
            var g = Math.cos(c);
            c = Math.sin(c);
            this.b = c * this.d;
            this.c = -c * this.a;
            this.a *= g;
            this.d *= g;
          } else this.c = this.b = 0;
          this.tx = d + a / 2;
          this.ty = f + b / 2;
        },
        equals: function (a) {
          return null != a &&
            this.tx == a.tx &&
            this.ty == a.ty &&
            this.a == a.a &&
            this.b == a.b &&
            this.c == a.c
            ? this.d == a.d
            : !1;
        },
        identity: function () {
          this.a = 1;
          this.c = this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0;
        },
        invert: function () {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a)
            ((this.a = this.b = this.c = this.d = 0),
              (this.tx = -this.tx),
              (this.ty = -this.ty));
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a;
          }
          return this;
        },
        scale: function (a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b;
        },
        setTo: function (a, b, c, d, f, g) {
          this.a = a;
          this.b = b;
          this.c = c;
          this.d = d;
          this.tx = f;
          this.ty = g;
        },
        transformPoint: function (a) {
          return new B(
            a.x * this.a + a.y * this.c + this.tx,
            a.x * this.b + a.y * this.d + this.ty,
          );
        },
        translate: function (a, b) {
          this.tx += a;
          this.ty += b;
        },
        __class__: ua,
      };
      var Lb = function (a, b, c, d, f, g, k, q) {
        null == q && (q = 0);
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.redMultiplier = a;
        this.greenMultiplier = b;
        this.blueMultiplier = c;
        this.alphaMultiplier = d;
        this.redOffset = f;
        this.greenOffset = g;
        this.blueOffset = k;
        this.alphaOffset = q;
      };
      h['openfl.geom.ColorTransform'] = Lb;
      Lb.__name__ = 'openfl.geom.ColorTransform';
      Lb.prototype = {
        __clone: function () {
          return new Lb(
            this.redMultiplier,
            this.greenMultiplier,
            this.blueMultiplier,
            this.alphaMultiplier,
            this.redOffset,
            this.greenOffset,
            this.blueOffset,
            this.alphaOffset,
          );
        },
        __copyFrom: function (a) {
          this.redMultiplier = a.redMultiplier;
          this.greenMultiplier = a.greenMultiplier;
          this.blueMultiplier = a.blueMultiplier;
          this.alphaMultiplier = a.alphaMultiplier;
          this.redOffset = a.redOffset;
          this.greenOffset = a.greenOffset;
          this.blueOffset = a.blueOffset;
          this.alphaOffset = a.alphaOffset;
        },
        __combine: function (a) {
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *= a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier;
          this.redOffset += a.redOffset;
          this.greenOffset += a.greenOffset;
          this.blueOffset += a.blueOffset;
          this.alphaOffset += a.alphaOffset;
        },
        __identity: function () {
          this.alphaMultiplier =
            this.blueMultiplier =
            this.greenMultiplier =
            this.redMultiplier =
              1;
          this.alphaOffset =
            this.blueOffset =
            this.greenOffset =
            this.redOffset =
              0;
        },
        __invert: function () {
          this.redMultiplier =
            0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
          this.greenMultiplier =
            0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
          this.blueMultiplier =
            0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
          this.alphaMultiplier =
            0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
          this.redOffset = -this.redOffset;
          this.greenOffset = -this.greenOffset;
          this.blueOffset = -this.blueOffset;
          this.alphaOffset = -this.alphaOffset;
        },
        __equals: function (a, b) {
          return null == a ||
            this.redMultiplier != a.redMultiplier ||
            this.greenMultiplier != a.greenMultiplier ||
            this.blueMultiplier != a.blueMultiplier ||
            (!b && this.alphaMultiplier != a.alphaMultiplier) ||
            this.redOffset != a.redOffset ||
            this.greenOffset != a.greenOffset ||
            this.blueOffset != a.blueOffset
            ? !1
            : this.alphaOffset == a.alphaOffset;
        },
        __isDefault: function (a) {
          return a
            ? 1 == this.redMultiplier &&
              1 == this.greenMultiplier &&
              1 == this.blueMultiplier &&
              0 == this.redOffset &&
              0 == this.greenOffset &&
              0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1
            : 1 == this.redMultiplier &&
                1 == this.greenMultiplier &&
                1 == this.blueMultiplier &&
                1 == this.alphaMultiplier &&
                0 == this.redOffset &&
                0 == this.greenOffset &&
                0 == this.blueOffset
              ? 0 == this.alphaOffset
              : !1;
        },
        __setArrays: function (a, b) {
          a[0] = this.redMultiplier;
          a[1] = this.greenMultiplier;
          a[2] = this.blueMultiplier;
          a[3] = this.alphaMultiplier;
          b[0] = this.redOffset;
          b[1] = this.greenOffset;
          b[2] = this.blueOffset;
          b[3] = this.alphaOffset;
        },
        get_color: function () {
          return (
            ((this.redOffset | 0) << 16) |
            ((this.greenOffset | 0) << 8) |
            this.blueOffset |
            0
          );
        },
        set_color: function (a) {
          this.redOffset = (a >> 16) & 255;
          this.greenOffset = (a >> 8) & 255;
          this.blueOffset = a & 255;
          this.blueMultiplier = this.greenMultiplier = this.redMultiplier = 0;
          return this.get_color();
        },
        __toLimeColorMatrix: function () {
          null == Lb.__limeColorMatrix &&
            (Lb.__limeColorMatrix = new Float32Array(20));
          Lb.__limeColorMatrix[0] = this.redMultiplier;
          Lb.__limeColorMatrix[4] = this.redOffset / 255;
          Lb.__limeColorMatrix[6] = this.greenMultiplier;
          Lb.__limeColorMatrix[9] = this.greenOffset / 255;
          Lb.__limeColorMatrix[12] = this.blueMultiplier;
          Lb.__limeColorMatrix[14] = this.blueOffset / 255;
          Lb.__limeColorMatrix[18] = this.alphaMultiplier;
          Lb.__limeColorMatrix[19] = this.alphaOffset / 255;
          return Lb.__limeColorMatrix;
        },
        __class__: Lb,
        __properties__: { set_color: 'set_color', get_color: 'get_color' },
      };
      var Ee = function (a, b, c) {
        null == c && (c = !1);
        ca.call(this);
        this.__drawableType = 2;
        this.__bitmapData = a;
        this.pixelSnapping = b;
        this.smoothing = c;
        null == b && (this.pixelSnapping = 1);
      };
      h['openfl.display.Bitmap'] = Ee;
      Ee.__name__ = 'openfl.display.Bitmap';
      Ee.__super__ = ca;
      Ee.prototype = u(ca.prototype, {
        __enterFrame: function (a) {
          null == this.__bitmapData ||
            null == this.__bitmapData.image ||
            this.__bitmapData.image.version == this.__imageVersion ||
            this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          null != this.__bitmapData
            ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height)
            : c.setTo(0, 0, 0, 0);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (
            !g.get_visible() ||
            this.__isMask ||
            null == this.__bitmapData ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            q = k.a * k.d - k.b * k.c;
          c = 0 == q ? -k.tx : (1 / q) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          q = k.a * k.d - k.b * k.c;
          a = 0 == q ? -k.ty : (1 / q) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          if (
            0 < c &&
            0 < a &&
            c <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
          ) {
            if (null != this.__scrollRect && !this.__scrollRect.contains(c, a))
              return !1;
            null == d || f || d.push(g);
            return !0;
          }
          return !1;
        },
        __hitTestMask: function (a, b) {
          if (null == this.__bitmapData) return !1;
          this.__getRenderTransform();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            f =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          a = 0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
          return 0 < f &&
            0 < a &&
            f <= this.__bitmapData.width &&
            a <= this.__bitmapData.height
            ? !0
            : !1;
        },
        get_bitmapData: function () {
          return this.__bitmapData;
        },
        set_bitmapData: function (a) {
          this.__bitmapData = a;
          this.smoothing = !1;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          this.__imageVersion = -1;
          return this.__bitmapData;
        },
        set_height: function (a) {
          null != this.__bitmapData
            ? this.set_scaleY(a / this.__bitmapData.height)
            : this.set_scaleY(0);
          return a;
        },
        set_width: function (a) {
          null != this.__bitmapData
            ? this.set_scaleX(a / this.__bitmapData.width)
            : this.set_scaleX(0);
          return a;
        },
        __class__: Ee,
        __properties__: u(ca.prototype.__properties__, {
          set_bitmapData: 'set_bitmapData',
          get_bitmapData: 'get_bitmapData',
        }),
      });
      var bb = function () {
        bb.inst = this;
        Pc.call(this);
        fa.tiltMode = Da.get('tilt', 0);
        fa.vantage = Da.get('vantage', 1);
        x.restorePalette();
        bb.pixel.setPixel(0, 0, 0);
        this.view = new M();
        this.addChild(this.view);
        this.screena = new Ee(bb.pixel);
        this.addChild(this.screena);
        this.screenb = new Ee(bb.pixel);
        this.addChild(this.screenb);
        t.offset = 45;
        this.keyEvent.add(m(this, this.onKey));
        this.addEventListener('click', m(this, this.onClick));
        this.clicker = new mk();
      };
      h['com.watabou.perilous.MapScene'] = bb;
      bb.__name__ = 'com.watabou.perilous.MapScene';
      bb.__super__ = Pc;
      bb.prototype = u(Pc.prototype, {
        activate: function () {
          Pc.prototype.activate.call(this);
          this.stage.addEventListener('touchTap', m(this, this.onRightClick));
          this.stage.addEventListener('rightClick', m(this, this.onRightClick));
        },
        deactivate: function () {
          Pc.prototype.deactivate.call(this);
          this.stage.removeEventListener(
            'touchTap',
            m(this, this.onRightClick),
          );
          this.stage.removeEventListener(
            'rightClick',
            m(this, this.onRightClick),
          );
        },
        onEsc: function () {
          w.hideMenu() || Pc.prototype.onEsc.call(this);
        },
        onKey: function (a, b) {
          if (b)
            switch (a) {
              case 9:
              case 80:
                this.showTags();
                break;
              case 13:
                this.keyShift ? this.resetRegion() : this.newRegion();
                break;
              case 49:
                this.applyPreset('bw');
                break;
              case 50:
                this.applyPreset('antique');
                break;
              case 51:
                this.applyPreset('soft');
                break;
              case 52:
                this.applyPreset('cartoon');
                break;
              case 53:
                this.applyPreset('october');
                break;
              case 65:
                this.toggleRugged();
                break;
              case 67:
                this.keyShift
                  ? this.view.customizeCompass()
                  : this.view.toggleCompass();
                break;
              case 70:
                this.view.toggleForestType();
                break;
              case 71:
                this.view.toggleGrid();
                break;
              case 72:
                this.setShading((x.shadingMode + 1) % 4);
                break;
              case 73:
                this.view.toggleIndividualTrees();
                break;
              case 76:
                this.view.toggleLabels();
                break;
              case 77:
                this.view.toggleMatte();
                break;
              case 78:
                this.keyShift ? this.rerollNames() : this.showToponymy();
                break;
              case 79:
                this.setShading(4);
                break;
              case 82:
                switch (fa.tiltMode) {
                  case 1:
                    a = 2;
                    break;
                  case 2:
                    a = 3;
                    break;
                  default:
                    a = 1;
                }
                this.setTilt(a);
                break;
              case 83:
                this.showStyle();
                break;
              case 84:
                this.view.randomTowns();
                break;
              case 86:
                this.showVantage();
                break;
              case 89:
                this.keyShift ? this.customizeLight() : this.toggleLight();
                break;
              case 90:
                this.keyCtrl &&
                  0 < bb.history.length &&
                  this.reset(bb.history.pop(), !1);
                break;
              case 192:
                this.applyPreset('default');
                break;
              case 219:
                1 == fa.vantage && this.rotate90ccw();
                break;
              case 221:
                1 == fa.vantage && this.rotate90cw();
            }
        },
        onClick: function (a) {
          var b = this;
          this.updateContext();
          if (!(a.target instanceof Ca))
            if (null != bb.context) {
              var c = bb.context.getFeature();
              bb.context = null;
              if (
                this.clicker.click(function () {
                  b.editFeature(c);
                })
              )
                this.view.stickers.add(c, !0);
              else if (a.ctrlKey || a.commandKey) {
                this.view.stickers.clear();
                a = 0;
                for (
                  var d = da.shuffle(this.region.getFeatures());
                  a < d.length;

                ) {
                  var f = d[a];
                  ++a;
                  this.view.stickers.add(f, !0);
                }
              } else this.view.stickers.add(c, a.shiftKey);
            } else this.view.stickers.add(null, a.shiftKey);
        },
        onRightClick: function (a) {
          for (a = a.target; null != a; ) {
            if (a == w.layer) return;
            a = a.parent;
          }
          a = this.getContextSubmenu();
          this.keyShift && null != a ? w.showMenu(a) : this.showMenu(a);
          bb.menu = new dc();
          bb.context = null;
        },
        getContextSubmenu: function () {
          var a = bb.context;
          if (null == (null != a ? a : this.updateContext())) return null;
          a = bb.context.terrain;
          var b = bb.context.site;
          if (null != b || null != a)
            if (
              (null != b ? (b.init(), (a = b)) : (a.init(), (a = a.area)),
              (b = new dc()),
              a.fillMenu(b),
              0 < b.items.length)
            )
              return b;
          return null;
        },
        showMenu: function (a) {
          var b = this;
          if (null != bb.context) {
            if (null != a) {
              var c = bb.context.site;
              bb.menu.addSubmenu(
                (null != c ? c : bb.context.terrain.area).getName(),
                a,
              );
            }
            var d = bb.context;
            a = new dc();
            this.region.editor.validateTownCell(bb.context) &&
              a.addItem('Town...', function () {
                b.addTown(d);
              });
            this.region.editor.validateDangerCell(bb.context) &&
              a.addItem('Danger...', function () {
                b.addDanger(d);
              });
            this.region.editor.validateLandmarkCell(bb.context) &&
              a.addItem('Landmark...', function () {
                b.addLandmark(d);
              });
            0 < a.items.length && bb.menu.addSubmenu('Add', a);
          }
          bb.menu.addSeparator();
          var f = new dc();
          a = function (a, c) {
            f.addItem(
              a,
              function () {
                b.view.setGrid(c);
              },
              M.gridMode == c,
            );
          };
          a('Hidden', 0);
          a('Under', 1);
          a('Above', 2);
          f.addSeparator();
          f.addItem(
            'Ocean tiles',
            ((E = this.view), m(E, E.toggleOceanTiles)),
            M.oceanTiles,
          );
          f.addItem(
            'Numbers',
            ((E = this.view), m(E, E.toggleNumbers)),
            M.showNumbers && 0 != M.gridMode,
          );
          f.addItem('Customize...', le.customize);
          a = new dc();
          a.addItem('180\u00b0', m(this, this.rotate180));
          a.addItem(
            '90\u00b0 CW',
            1 == fa.vantage ? m(this, this.rotate90cw) : null,
          );
          a.addItem(
            '90\u00b0 CCW',
            1 == fa.vantage ? m(this, this.rotate90ccw) : null,
          );
          a.addSeparator();
          a.addItem('Flip H', m(this, this.flipHorizontal));
          a.addItem('Flip V', m(this, this.flipVertical));
          var g = new dc();
          c = function (a, c) {
            g.addItem(
              a,
              function () {
                b.view.setForestType(c);
              },
              Ia.type == c,
            );
          };
          c('Varied', null);
          c('Light', Ia.lightTree);
          c('Dark', Ia.darkTree);
          c('Dead', Ia.deadTree);
          var k = new dc();
          c = !M.pinTowns;
          var q = M.showTowns && c;
          k.addItem(
            'Hidden',
            function () {
              b.view.toggleTownsEx(0);
            },
            !M.showTowns,
          );
          k.addItem(
            'Icons',
            function () {
              b.view.toggleTownsEx(1);
            },
            M.showTowns && c,
          );
          k.addItem(
            'Pins',
            function () {
              b.view.toggleTownsEx(2);
            },
            M.showTowns && !c,
          );
          k.addSeparator();
          k.addItem(
            'Uniform',
            q ? ((E = this.view), m(E, E.toggleUniform)) : null,
          ).setCheck(M.uniformTowns);
          k.addItem(
            'Random icons',
            q ? ((E = this.view), m(E, E.randomTowns)) : null,
          );
          k.addItem(
            'Outline',
            q ? ((E = this.view), m(E, E.outlineTowns)) : null,
          ).setCheck(Ib.outline);
          c = new dc();
          c.addItem('Rugged', m(this, this.toggleRugged), fa.rugged);
          c.addSeparator();
          c.addSubmenu('Towns', k);
          c.addItem(
            'Roads',
            ((E = this.view), m(E, E.toggleRoads)),
            M.showRoads,
          );
          c.addItem(
            'Sea routes',
            ((E = this.view), m(E, E.toggleRoutes)),
            M.showRoutes,
          );
          c.addItem(
            'Dangers',
            ((E = this.view), m(E, E.toggleDangers)),
            M.showDangers,
          );
          c.addItem(
            'Meadows',
            ((E = this.view), m(E, E.toggleMeadows)),
            M.showMeadows,
          );
          c.addSeparator();
          c.addItem(
            'Individual trees',
            ((E = this.view), m(E, E.toggleIndividualTrees)),
            M.individualTrees,
          );
          c.addItem(
            'Front trees',
            M.individualTrees
              ? null
              : ((E = this.view), m(E, E.toggleFrontTrees)),
          ).setCheck(Ia.frontTrees);
          c.addItem(
            'Edge trees',
            ((E = this.view), m(E, E.toggleEdgeTrees)),
          ).setCheck(M.edgeTrees);
          c.addItem(
            'Shadows',
            ((E = this.view), m(E, E.toggleTreeShadows)),
          ).setCheck(M.treeShadows);
          c.addItem(
            'Reveal rivers',
            M.individualTrees
              ? null
              : ((E = this.view), m(E, E.toggleRevealRivers)),
            M.revealRivers,
          );
          c.addSubmenu('Forest type', g);
          c.addSeparator();
          c.addItem(
            'Simple rivers',
            ((E = this.view), m(E, E.toggleHollowRivers)),
            !M.hollowRivers,
          );
          c.addItem(
            'Shade banks',
            ((E = this.view), m(E, E.toggleRiverBanks)),
            M.riverBanks,
          );
          var p = new dc();
          k = function (a, c) {
            p.addItem(a, function () {
              b.view.setLabels(c);
            }).setCheck(Jb.mode == c);
          };
          k('Hidden', 'hidden');
          k('Straight', 'straight');
          k('Arced', 'arced');
          k('Curved', 'curved');
          p.addSeparator();
          p.addItem('Toponymy...', m(this, this.showToponymy));
          p.addItem('Reroll names', m(this, this.rerollNames));
          var l = new dc();
          k = function (a, c) {
            l.addItem(
              a,
              function () {
                b.view.setHeader(c);
              },
              M.headerDecor == c,
            );
          };
          k('Hidden', Sc.HIDDEN);
          k('Plain', Sc.NONE);
          k('Plaque', Sc.PLAQUE);
          k('Banner', Sc.BANNER);
          k = new dc();
          k.addSubmenu('Header', l);
          k.addItem('Matte', ((E = this.view), m(E, E.toggleMatte))).setCheck(
            M.showMatte,
          );
          k.addItem(
            'Compass',
            ((E = this.view), m(E, E.toggleCompass)),
          ).setCheck(M.showCompass);
          k.addItem(
            'Descriptions',
            ((E = this.view), m(E, E.toggleInfo)),
          ).setCheck(M.showInfo);
          k.addItem('Clouds', ((E = this.view), m(E, E.toggleClouds))).setCheck(
            M.showClouds,
          );
          k.addItem('Light', m(this, this.customizeLight), M.showLight);
          q = new dc();
          q.addItem('PNG', ((E = this.view), m(E, E.exportPNG)));
          q.addItem('SVG', function () {
            me.export(b.region, b.view);
          });
          q.addItem('JSON', function () {
            Xf.saveAsJSON(b.region);
          });
          bb.menu.addItem('Procgen Arcana', m(this, this.arcana));
          bb.menu.addSeparator();
          bb.menu.addItem('New region', m(this, this.newRegion));
          bb.menu.addItem('Parameters...', m(this, this.showTags));
          bb.menu.addSubmenu('Rotate', a);
          bb.menu.addSeparator();
          bb.menu.addItem('Style...', m(this, this.showStyle));
          bb.menu.addItem('Vantage...', m(this, this.showVantage));
          bb.menu.addSubmenu('Grid', f);
          bb.menu.addSubmenu('Details', c);
          bb.menu.addSubmenu('Labels', p);
          bb.menu.addSubmenu('Elements', k);
          bb.menu.addSeparator();
          bb.menu.addSubmenu('Export as', q);
          w.showMenu(bb.menu);
        },
        updateContext: function () {
          bb.context = null;
          for (
            var a = new B(this.view.get_mouseX(), this.view.get_mouseY()),
              b = 0,
              c = this.region.dcel.faces;
            b < c.length;

          ) {
            var d = c[b];
            ++b;
            d = d.data;
            if (d.containsPoint(a)) {
              d.land && (bb.context = d);
              break;
            }
          }
          return bb.context;
        },
        editFeature: function (a) {
          null != a && a.edit();
        },
        addTown: function (a) {
          a = this.region.editor.addTown(a);
          this.view.draw(this.region);
          this.view.stickers.recreate();
          a.edit();
        },
        addDanger: function (a) {
          a = this.region.editor.addDanger(a);
          this.view.draw(this.region);
          this.view.stickers.recreate();
          a.edit();
        },
        addLandmark: function (a) {
          a = this.region.editor.addLandmark(a);
          M.updateSprites();
          a.edit();
        },
        reset: function (a, b) {
          null == b && (b = !0);
          b && null != this.region && bb.history.push(this.region.bp);
          t.hide();
          this.view.stickers.clear();
          this.region = new fa(a);
          this.view.draw(this.region);
          this.layout();
          M.headerDecor == Sc.HIDDEN && t.show(this.region.name);
        },
        newRegion: function () {
          this.reset(ae.random());
        },
        resetRegion: function () {
          this.reset(this.region.bp);
        },
        restoreRegion: function () {
          var a = ae.fromURL();
          this.reset(null != a ? a : ae.random());
        },
        rerollNames: function () {
          this.region.rerollNames();
          M.updateLabels();
        },
        layout: function () {
          null == this.region && this.restoreRegion();
          var a = Math.min(
            this.rWidth / this.region.viewWidth,
            this.rHeight / this.region.viewHeight,
          );
          this.view.set_x(this.rWidth / 2);
          this.view.set_y(this.rHeight / 2);
          this.view.set_scaleX(this.view.set_scaleY(a));
          var b = fa.hexRadius * fa.vantage * 2;
          a = this.region.viewWidth - b;
          b = this.region.viewHeight - b;
          this.view.stickers.view.setTo(-a / 2, -b / 2, a, b);
          this.updateShutters();
        },
        toggleRugged: function () {
          fa.rugged = !fa.rugged;
          this.reset(this.region.bp);
        },
        setTilt: function (a) {
          Da.set('tilt', (fa.tiltMode = a));
          this.region.bp.hexes = a;
          this.reset(this.region.bp);
        },
        rotate180: function () {
          this.region.rotate180();
          this.view.draw(this.region);
        },
        rotate90cw: function () {
          this.region.rotate90cw();
          this.view.draw(this.region);
          this.layout();
        },
        rotate90ccw: function () {
          this.region.rotate90ccw();
          this.view.draw(this.region);
          this.layout();
        },
        flipHorizontal: function () {
          this.region.flipHorizontal();
          this.view.draw(this.region);
        },
        flipVertical: function () {
          this.region.flipVertical();
          this.view.draw(this.region);
        },
        setShading: function (a) {
          x.shadingMode = a;
          this.view.draw(this.region);
        },
        applyStyle: function (a) {
          x.applyPalette(a, !0);
          this.view.draw(this.region);
          this.view.stickers.recreate();
        },
        applyPreset: function (a) {
          this.applyStyle(md.fromJSON(Rb.getText(a)));
        },
        showTags: function () {
          var a = this;
          if (null == w.findForm(xf)) {
            var b = null;
            b = new xf(this.region.bp.tags, function (c) {
              a.reset(ae.fromTags(b.getWidth(), b.getHeight(), c));
              return a.region.bp.tags;
            });
            w.showDialog(b).minimizable = !0;
          }
        },
        showToponymy: function () {
          null == w.findForm(Yf) &&
            (w.showDialog(new Yf(m(this, this.rerollNames))).minimizable = !0);
        },
        showStyle: function () {
          if (null == w.findForm(Kc)) {
            var a = new Kc(
              m(this, this.applyStyle),
              'Default default B&W bw Antique antique Soft soft Cartoon cartoon October october'.split(
                ' ',
              ),
            );
            a.getName = Kc.swatches(null, [
              'colorBackground',
              'colorWater',
              'colorLightWood',
            ]);
            x.fillForm(a);
            w.showDialog(a, 'Style');
          }
        },
        showVantage: function () {
          var a = this;
          null == w.findForm(jh) &&
            w.showDialog(
              new jh(function (b) {
                a.region.setVantage(b);
                Da.set('vantage', fa.vantage);
                a.view.draw(a.region);
                a.layout();
              }),
            );
        },
        customizeLight: function () {
          null == w.findForm(kh) &&
            (Ca.enable(!0), (w.showDialog(new kh()).minimizable = !0));
        },
        toggleLight: function () {
          Ca.enable(!M.showLight);
        },
        updateShutters: function () {
          var a = this.region.viewWidth,
            b = this.region.viewHeight;
          this.rWidth / a > this.rHeight / b
            ? ((a = Math.ceil((this.rWidth - a * this.view.get_scaleX()) / 2)),
              this.screena.set_width(a),
              this.screena.set_height(this.rHeight),
              this.screenb.set_x(this.rWidth - a),
              this.screenb.set_y(0),
              this.screenb.set_width(a),
              this.screenb.set_height(this.rHeight))
            : ((a = Math.ceil((this.rHeight - b * this.view.get_scaleY()) / 2)),
              this.screena.set_width(this.rWidth),
              this.screena.set_height(a),
              this.screenb.set_x(0),
              this.screenb.set_y(this.rHeight - a),
              this.screenb.set_width(this.rWidth),
              this.screenb.set_height(a));
        },
        arcana: function () {
          var a = new Zf('https://watabou.github.io/');
          Ra.navigateToURL(a, 'arcana');
        },
        __class__: bb,
      });
      var oc = function (a, b) {
        null == b && (b = !1);
        this.g = a.get_graphics();
        b && this.g.clear();
        this.thickness1 = x.normal;
        this.thickness2 = x.ultraThin;
        this.brush = m(this, this.decay);
        this.filling = this.drawing = !1;
      };
      h['com.watabou.perilous.mapping.Canvas'] = oc;
      oc.__name__ = 'com.watabou.perilous.mapping.Canvas';
      oc.prototype = {
        draw: function (a, b, c) {
          null == c && (c = 1);
          this.drawing = !0;
          this.strokeColor = a;
          this.strokeAlpha = c;
          this.thickness1 = this.thickness2 = b;
          this.delta = 0;
          this.g.lineStyle(b, a, c);
        },
        useBrush: function (a, b, c, d) {
          null == d && (d = -1);
          this.brush = null != a ? a : m(this, this.decay);
          this.strokeColor = b;
          this.strokeAlpha = x.alpha;
          this.thickness1 = c;
          this.thickness2 = -1 != d ? d : x.ultraThin;
          this.delta = this.thickness1 - this.thickness2;
          this.hatchStep = Math.max(this.thickness1, this.thickness2) / x.alpha;
          this.transparency = x.alpha;
        },
        noCaps: function () {
          this.drawing = !0;
          this.g.endFill();
          this.g.lineStyle(
            this.thickness1,
            this.strokeColor,
            this.strokeAlpha,
            null,
            null,
            0,
          );
        },
        drawThin: function () {
          4 != x.shadingMode && this.draw(x.black, x.thin);
        },
        drawNormal: function () {
          4 != x.shadingMode && this.draw(x.black, x.normal);
        },
        drawThick: function () {
          4 != x.shadingMode && this.draw(x.black, x.thick);
        },
        fill: function (a) {
          this.filling = !0;
          this.fillColor = a;
          this.g.beginFill(a);
        },
        end: function () {
          this.filling = this.drawing = !1;
          this.g.endFill();
        },
        line: function (a, b, c, d) {
          this.g.moveTo(a, b);
          this.g.lineTo(c, d);
        },
        rect: function (a, b, c, d) {
          this.g.drawRect(a, b, c, d);
        },
        circle: function (a, b, c) {
          this.g.drawCircle(a, b, c);
        },
        dashedLine: function (a, b, c) {
          Tc.dashedLine(this.g, a, b, c);
        },
        polyline: function (a) {
          Tc.drawPolyline(this.g, a);
        },
        polygon: function (a) {
          Tc.drawPolygon(this.g, a);
        },
        polygonAt: function (a, b, c) {
          Tc.drawPolygonAt(this.g, a, b, c);
        },
        multiPolygon: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          if (0 == b && 0 == c)
            for (var d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              Tc.drawPolygon(this.g, f);
            }
          else
            for (d = 0; d < a.length; )
              ((f = a[d]), ++d, Tc.drawPolygonAt(this.g, f, b, c));
        },
        dashedMultiPolygon: function (a, b) {
          for (var c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            this.dashedPolygon(d, b);
          }
        },
        dashedPolyline: function (a, b) {
          Tc.dashedPolyline(this.g, a, null, b);
        },
        dashedPolygon: function (a, b) {
          Tc.dashedPolyline(this.g, a.concat([a[0]]), null, b);
        },
        fillArea: function (a, b) {
          if (!(3 == x.shadingMode || 0 >= this.transparency))
            if (0 == x.shadingMode) {
              a = sc.rotateYX(a, b.y, b.x);
              var c = Yc.rect(a),
                d = c.get_bottom(),
                f = c.get_topLeft();
              c = new B(f.x, f.y + this.hatchStep);
              for (var g = new B(c.x + 1, c.y); c.y < d; ) {
                for (var k = He.pierce(a, c, g); 2 <= k.length; ) {
                  f = k.shift();
                  var q = -b.y,
                    p = b.x;
                  f = new B(f.x * p - f.y * q, f.y * p + f.x * q);
                  q = k.shift();
                  p = -b.y;
                  var h = b.x;
                  q = new B(q.x * h - q.y * p, q.y * h + q.x * p);
                  this.shortStroke(q, f);
                }
                k =
                  this.hatchStep *
                  (1 +
                    0.5 *
                      Math.abs(
                        ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647) /
                          2 -
                          1,
                      ));
                c.y += k;
                g.y += k;
              }
            } else
              (this.end(),
                this.g.beginFill(
                  x.black,
                  1 == x.shadingMode || 4 == x.shadingMode
                    ? this.transparency
                    : 1,
                ),
                Tc.drawPolygon(this.g, a));
        },
        fillMultiArea: function (a, b) {
          if (!(3 == x.shadingMode || 0 >= this.transparency))
            if (0 == x.shadingMode) {
              for (var c = [], d = 0; d < a.length; ) {
                var f = a[d];
                ++d;
                c.push(sc.rotateYX(f, b.y, b.x));
              }
              a = c;
              d = null;
              for (c = 0; c < a.length; )
                ((f = a[c]),
                  ++c,
                  (d = null == d ? Yc.rect(f) : d.union(Yc.rect(f))));
              c = d.get_bottom();
              f = d.get_topLeft();
              f = new B(f.x, f.y + this.hatchStep);
              for (d = new B(f.x + 1, f.y); f.y < c; ) {
                for (var g = He.pierceMulti(a, f, d); 2 <= g.length; ) {
                  var k = g.shift(),
                    q = -b.y,
                    p = b.x;
                  k.setTo(k.x * p - k.y * q, k.y * p + k.x * q);
                  q = g.shift();
                  p = -b.y;
                  var h = b.x;
                  q.setTo(q.x * h - q.y * p, q.y * h + q.x * p);
                  this.shortStroke(q, k);
                }
                g =
                  this.hatchStep *
                  (1 +
                    Math.abs(
                      ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    ));
                f.y += g;
                d.y += g;
              }
            } else
              for (
                this.end(),
                  this.g.beginFill(
                    x.black,
                    1 == x.shadingMode || 4 == x.shadingMode
                      ? this.transparency
                      : 1,
                  ),
                  c = 0;
                c < a.length;

              )
                ((f = a[c]), ++c, Tc.drawPolygon(this.g, f));
        },
        trueStroke: function (a) {
          var b = Fd.$length(a),
            c = 0,
            d = a[0],
            f = a[1],
            g = f.subtract(d),
            k = g.get_length();
          g.normalize(1);
          var q = this.brush(0, b),
            p = new B(-g.y, g.x),
            l = q / 2;
          p.x *= l;
          p.y *= l;
          var h = [d.add(p)],
            n = [d.subtract(p)];
          l = 2;
          for (var t = a.length; l < t; ) {
            q = l++;
            c += k;
            d = f;
            f = a[q];
            var w = g;
            g = f.subtract(d);
            k = g.get_length();
            g.normalize(1);
            q = this.brush(c, b);
            p = w.add(g);
            p = new B(-p.y, p.x);
            w = Math.sqrt((1 + (w.x * g.x + w.y * g.y)) / 2);
            0.1 > w && (w = 0.1);
            p.normalize(q / 2 / w);
            h.push(d.add(p));
            n.unshift(d.subtract(p));
          }
          q = this.brush(b, b);
          p = new B(-g.y, g.x);
          l = q / 2;
          p.x *= l;
          p.y *= l;
          h.push(f.add(p));
          n.unshift(f.subtract(p));
          this.g.endFill();
          this.g.beginFill(this.strokeColor);
          Tc.drawPolygon(this.g, h.concat(n));
          this.g.endFill();
        },
        shortStroke: function (a, b) {
          var c = this.brush(0, 1),
            d = this.brush(1, 1),
            f = b.x - a.x,
            g = b.y - a.y,
            k = new B(-g, f);
          k.normalize(c / 2);
          c = a.add(k);
          var q = a.subtract(k);
          k.normalize(d / 2);
          d = b.add(k);
          b = b.subtract(k);
          this.brush == m(this, this.middle)
            ? ((a = new B(a.x + f / 2, a.y + g / 2)),
              (f = this.brush(0.5, 1)),
              k.normalize(f / 2),
              (f = a.add(k)),
              (k = a.subtract(k)),
              (k = [c, f, d, b, k, q]))
            : (k = [c, d, b, q]);
          this.g.endFill();
          this.g.beginFill(this.strokeColor);
          Tc.drawPolygon(this.g, k);
        },
        decay: function (a, b) {
          return this.thickness2 + this.delta * (1 - a / b);
        },
        middle: function (a, b) {
          return this.thickness2 + this.delta * (1 - Math.abs((2 * a) / b - 1));
        },
        __class__: oc,
      };
      var Db = function () {};
      h['com.watabou.perilous.mapping.sprites.DarkTree'] = Db;
      Db.__name__ = 'com.watabou.perilous.mapping.sprites.DarkTree';
      Db.proto = function () {
        var a = new af('darkTree', Db.draw);
        a.getColor = function () {
          return x.darkWood;
        };
        a.getDist = function () {
          return Db.max_width * x.clutterScale;
        };
        a.getTrunk = function () {
          return Db.min_trunk;
        };
        a.getBump = Db.getBump;
        a.getCloud = Db.getCloud;
        a.getFold = Db.getFold;
        return a;
      };
      Db.draw = function (a) {
        var b =
            Db.min_trunk +
            (Db.max_trunk - Db.min_trunk) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
          c =
            Db.min_width +
            (Db.max_width - Db.min_width) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
          d =
            Db.min_height +
            (Db.max_height - Db.min_height) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              );
        b *= x.clutterScale;
        c *= x.clutterScale;
        d *= x.clutterScale;
        a = new oc(a);
        af.drawShadow(a, -c / 2, d / 2);
        var f = bc.lerp(x.darkWood, x.black, x.alpha);
        a.g.lineStyle(x.thin, f);
        a.line(0, 0, 0, -b);
        a.end();
        a.drawThin();
        a.fill(x.darkWood);
        b = [
          new B(0, -b - d),
          new B((2 * c) / 3, -b),
          new B(0, -b),
          new B((2 * -c) / 3, -b),
        ];
        b = kc.render(b, !0, 2, [b[0]]);
        a.polygon(b);
        a.useBrush(null, x.black, x.thin);
        for (c = 0; c < b.length; ) ((d = b[c]), ++c, 0 > d.x && (d.x *= -0.3));
        a.fillArea(b, Db.hatching);
      };
      Db.getBump = function () {
        return (
          Db.min_width *
          (1 <= x.clutterScale ? x.clutterScale : Math.sqrt(x.clutterScale))
        );
      };
      Db.getCloud = function (a) {
        return Db.confBloat(a, 1.5);
      };
      Db.getFold = function (a) {
        return Db.createConfTop(a, 1.2);
      };
      Db.confBloat = function (a, b) {
        for (
          var c = 2 * Db.getBump(), d = [], f = a.length, g = a[f - 1], k = 0;
          k < f;

        ) {
          var q = k++,
            p = g;
          g = a[q];
          q = g.x - p.x;
          if (0 < q) {
            q *= b;
            var l = ta.lerp(p, g);
            l.y -= q;
            var h = ta.lerp(p, l);
            h.y -= 0.1 * q;
            var n = ta.lerp(g, l);
            n.y -= 0.1 * q;
            d.push(p);
            d.push(h);
            d.push(l);
            d.push(n);
          } else
            for (p = be.extrudeEx(p, g, c, 0.1), q = 0; q < p.length; )
              ((l = p[q]), ++q, d.push(l));
        }
        return d;
      };
      Db.createConfTop = function (a, b) {
        for (var c = [], d = a[0], f = 1, g = a.length; f < g; ) {
          var k = f++,
            q = d;
          d = a[k];
          k = (d.x - q.x) * b;
          var p = ta.lerp(q, d);
          p.y -= k;
          var l = ta.lerp(q, p);
          l.y -= 0.1 * k;
          var h = ta.lerp(d, p);
          h.y -= 0.1 * k;
          c.push(q);
          c.push(l);
          c.push(p);
          c.push(h);
        }
        c.push(d);
        return c;
      };
      var l = function () {};
      h['com.watabou.utils.Random'] = l;
      l.__name__ = 'com.watabou.utils.Random';
      l.reset = function (a) {
        null == a && (a = -1);
        l.seed = -1 != a ? a : new Date().getTime() % 2147483647 | 0;
      };
      l.save = function () {
        return (l.saved = l.seed);
      };
      l.restore = function (a) {
        null == a && (a = -1);
        -1 != a
          ? (l.seed = a)
          : -1 != l.saved && ((l.seed = l.saved), (l.saved = -1));
      };
      l.preserve = function (a) {
        var b = l.save();
        a = a();
        l.restore(b);
        return a;
      };
      l.run = function (a, b, c) {
        null == c && (c = !0);
        null == a && (a = -1);
        var d = l.save();
        -1 != a && l.reset(a);
        a = b();
        l.restore(d);
        c && (l.seed = (48271 * l.seed) % 2147483647 | 0);
        return a;
      };
      l.float = function () {
        return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
      };
      var x = function () {};
      h['com.watabou.perilous.mapping.Style'] = x;
      x.__name__ = 'com.watabou.perilous.mapping.Style';
      x.getFormat = function (a, b) {
        null == b && (b = 1);
        a = md.font2format(a);
        null == a && (a = new Fe());
        a.color = x.textColor;
        1 != b && (a.size = Math.round(a.size * b));
        return a;
      };
      x.scaleFormat = function (a, b) {
        a = a.clone();
        a.size = Math.round(b * a.size);
        return a;
      };
      x.applyPalette = function (a, b) {
        null == b && (b = !1);
        x.black = a.getColor('colorForeground', 5062454);
        x.earth = a.getColor('colorBackground', 15460575);
        x.water = a.getColor('colorWater', x.earth);
        x.shadingMode = x.shadings.indexOf(
          a.getString('enumShading', 'Hatching'),
        );
        x.alpha = a.getFloat('floatAlpha', 0.5);
        x.landBorderColor = a.getColor('colorLandShadow', 6708311);
        x.landBorderAlpha = a.getFloat('alphaLandShadow', 0.2);
        x.landBorderWidth = a.getFloat('widthLandShadow', 0.666);
        x.lightWood = a.getColor('colorLightWood', x.earth);
        x.darkWood = a.getColor('colorDarkWood', x.earth);
        x.shallow = a.getColor('colorShallow', x.water);
        x.rivers = a.getColor('colorRivers', x.black);
        x.contours = a.getColor('colorContours', x.black);
        x.routes = a.getColor('colorRoutes', x.black);
        x.mountain = a.getColor('colorMountain', x.earth);
        x.danger = a.getColor('colorDanger', x.earth);
        x.walls = a.getColor('colorWalls', x.earth);
        x.roofs = a.getColor('colorRoofs', x.earth);
        x.flags = a.getColor('colorFlags', x.black);
        x.shallowEdge = a.getFloat('shallowEdge', 0.666);
        x.shallowSize = a.getFloat('shallowSize', 0.4);
        x.bandsNumber = a.getInt('bandsNumber', 1);
        x.townScale = a.getFloat('townScale', 1);
        x.dangerScale = a.getFloat('dangerScale', 1);
        x.textColor = a.getColor('textColor', x.black);
        x.outlineColor = a.getColor('outlineColor', x.earth);
        x.compass = a.getColor('colorCompass', x.earth);
        x.clouds = a.getColor('colorClouds', 16777215);
        x.banner = a.getColor('colorBanners', x.earth);
        x.matte = a.getColor('colorMatte', x.earth);
        x.ruggedMountains = a.getBool('ruggedMountains', !0);
        x.treesDensity = a.getFloat('treesDensity', 0.2);
        x.treesRegularity = a.getFloat('treesRegularity', 0.5);
        x.clutterScale = a.getFloat('clutterScale', 0.7);
        x.fontTown = a.getFont('fontTown', x.fontTown);
        x.fontDanger = a.getFont('fontDanger', x.fontDanger);
        x.fontArea = a.getFont('fontArea', x.fontArea);
        x.fontTitle = a.getFont('fontTitle', x.fontArea);
        x.fontSticker = a.getFont('fontSticker', x.fontSticker);
        x.ultraThin = a.getFloat('ultraThin', 0.4);
        x.thin = a.getFloat('thin', 0.8);
        x.normal = a.getFloat('normal', 1.4);
        x.thick = a.getFloat('thick', 3);
        x.river = a.getFloat('river', x.thick);
        x.formatSticker = x.getFormat(x.fontSticker);
        x.formatHead = x.scaleFormat(x.formatSticker, 1.25);
        x.formatTown = x.getFormat(x.fontTown);
        x.formatDanger = x.getFormat(x.fontDanger);
        x.formatArea = x.getFormat(x.fontArea);
        x.formatTitle = x.getFormat(x.fontTitle);
        x.formatTown.align = x.formatDanger.align = 0;
        x.landShadeColor = bc.lerp(
          x.earth,
          x.landBorderColor,
          x.landBorderAlpha,
        );
        b && Da.set('palette', a.data());
      };
      x.restorePalette = function () {
        var a = Da.get('palette');
        null != a
          ? x.applyPalette(md.fromData(a))
          : ((x.formatSticker = x.getFormat(x.fontSticker)),
            (x.formatHead = x.scaleFormat(x.formatSticker, 1.25)),
            (x.formatTown = x.getFormat(x.fontTown)),
            (x.formatDanger = x.getFormat(x.fontDanger)),
            (x.formatArea = x.getFormat(x.fontArea)),
            (x.formatTitle = x.getFormat(x.fontTitle)),
            (x.formatTown.align = x.formatDanger.align = 0),
            (x.landShadeColor = bc.lerp(
              x.earth,
              x.landBorderColor,
              x.landBorderAlpha,
            )));
      };
      x.fillForm = function (a) {
        a.setMaxTabs(4);
        a.addTab('Basic');
        a.addColor('colorForeground', 'Linework', x.black);
        a.addColor('colorBackground', 'Earth', x.earth);
        a.addColor('colorWater', 'Water', x.water);
        a.addColor('colorRivers', 'Rivers', x.rivers);
        a.addEnum(
          'enumShading',
          'Shading',
          x.shadings,
          x.shadings[x.shadingMode],
        );
        a.addFloat('floatAlpha', 'Density', x.alpha, 0, 1);
        a.addTab('Land');
        a.addColor('colorLandShadow', 'Inner shadow', x.landBorderColor);
        a.addFloat('alphaLandShadow', 'Opacity', x.landBorderAlpha, 0, 1);
        a.addFloat('widthLandShadow', 'Width', x.landBorderWidth, 0, 1);
        a.addTab('Water');
        a.addColor('colorRoutes', 'Sea route color', x.routes);
        a.addColor('colorContours', 'Contour color', x.contours);
        a.addColor('colorShallow', 'Shallow color', x.shallow);
        a.addFloat('shallowEdge', 'Shallow contour', x.shallowEdge, 0, 1);
        a.addFloat('shallowSize', 'Shallow width', x.shallowSize, 0, 4);
        a.addInt('bandsNumber', 'No. of bands', x.bandsNumber, 0, 5);
        a.addTab('Terrain');
        a.addColor('colorMountain', 'Mountain', x.mountain);
        a.addCheck('ruggedMountains', 'Jagged', x.ruggedMountains);
        a.addColor('colorLightWood', 'Light wood', x.lightWood);
        a.addColor('colorDarkWood', 'Dark wood', x.darkWood);
        a.addFloat('treesDensity', 'Trees density', x.treesDensity, 0.1, 1);
        a.addFloat(
          'treesRegularity',
          'Trees regularity',
          x.treesRegularity,
          0.1,
          1,
        );
        a.addFloat('clutterScale', 'Clutter scale', x.clutterScale, 0.5, 2);
        a.addTab('Sites');
        a.addColor('colorDanger', 'Danger', x.danger);
        a.addColor('colorWalls', 'Town walls', x.walls);
        a.addColor('colorRoofs', 'Town roofs', x.roofs);
        a.addColor('colorFlags', 'Flags', x.flags);
        a.addFloat('townScale', 'Town scale', x.townScale, 0.1, 2);
        a.addFloat('dangerScale', 'Danger scale', x.dangerScale, 0.1, 2);
        a.addTab('Elements');
        a.addColor('textColor', 'Labels', x.textColor);
        a.addColor('outlineColor', 'Outline', x.outlineColor);
        a.addColor('colorCompass', 'Compass', x.compass);
        a.addColor('colorClouds', 'Clouds', x.clouds);
        a.addColor('colorBanners', 'Banners', x.banner);
        a.addColor('colorMatte', 'Matte', x.matte);
        a.addTab('Strokes');
        a.addFloat('ultraThin', 'Ultra-thin', x.ultraThin, 0.1, 8);
        a.addFloat('thin', 'Thin', x.thin, 0.1, 8);
        a.addFloat('normal', 'Normal', x.normal, 0.1, 8);
        a.addFloat('thick', 'Thick', x.thick, 0.1, 8);
        a.addFloat('river', 'Rivers', x.river, 0.1, 8);
        a.addTab('Text');
        a.addFont('fontTown', 'Towns', x.fontTown, null, 'def_font');
        a.addFont('fontDanger', 'Dangers', x.fontDanger, null, 'def_font');
        a.addFont('fontArea', 'Terrain', x.fontArea, null, 'def_font');
        a.addFont('fontTitle', 'Header', x.fontTitle, null, 'def_font');
        a.addFont('fontSticker', 'Stickers', x.fontSticker, null, 'def_font');
      };
      var af = function (a, b) {
        this.id = a;
        this.draw = b;
      };
      h['com.watabou.perilous.mapping.sprites.TreeType'] = af;
      af.__name__ = 'com.watabou.perilous.mapping.sprites.TreeType';
      af.drawShadow = function (a, b, c) {
        if (M.treeShadows)
          switch (x.shadingMode) {
            case 0:
              a.drawThin();
              b = new B(b);
              c = new B(c);
              var d = [];
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              d.push(
                5 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              );
              a.dashedLine(b, c, d);
              break;
            case 2:
              a.drawThin();
              a.line(b, 0, c, 0);
              break;
            case 1:
            case 4:
              (a.draw(x.black, x.thin, x.alpha), a.line(b, 0, c, 0));
          }
      };
      af.prototype = {
        getSprite: function () {
          var a = this,
            b = new T();
          od.draw(b.get_graphics(), this.id, null, function () {
            a.draw(b);
          });
          return b;
        },
        __class__: af,
      };
      var Sc = (L['com.watabou.perilous.mapping.elements.Decoration'] = {
        __ename__: 'com.watabou.perilous.mapping.elements.Decoration',
        __constructs__: null,
        PLAQUE: {
          _hx_name: 'PLAQUE',
          _hx_index: 0,
          __enum__: 'com.watabou.perilous.mapping.elements.Decoration',
          toString: r,
        },
        BANNER: {
          _hx_name: 'BANNER',
          _hx_index: 1,
          __enum__: 'com.watabou.perilous.mapping.elements.Decoration',
          toString: r,
        },
        NONE: {
          _hx_name: 'NONE',
          _hx_index: 2,
          __enum__: 'com.watabou.perilous.mapping.elements.Decoration',
          toString: r,
        },
        HIDDEN: {
          _hx_name: 'HIDDEN',
          _hx_index: 3,
          __enum__: 'com.watabou.perilous.mapping.elements.Decoration',
          toString: r,
        },
      });
      Sc.__constructs__ = [Sc.PLAQUE, Sc.BANNER, Sc.NONE, Sc.HIDDEN];
      Sc.__empty_constructs__ = [Sc.PLAQUE, Sc.BANNER, Sc.NONE, Sc.HIDDEN];
      var M = function () {
        M.inst = this;
        T.call(this);
        M.gridMode = Da.get('grid', 0);
        M.oceanTiles = Da.get('oceanTiles', !1);
        M.showNumbers = Da.get('hexNumbers', !1);
        M.pinTowns = Da.get('pinTowns', !1);
        M.uniformTowns = Da.get('uniformTowns', !1);
        M.showRoutes = Da.get('seaRoutes', !1);
        Ib.outline = Da.get('outlineTowns', !0);
        M.individualTrees = Da.get('individualTrees', !1);
        M.edgeTrees = Da.get('edgeTrees', !0);
        M.treeShadows = Da.get('treeShadows', !1);
        M.revealRivers = Da.get('revealRivers', !0);
        M.hollowRivers = Da.get('hollowRivers', !0);
        M.riverBanks = Da.get('riverBanks', !0);
        Ia.frontTrees = Da.get('frontTrees', !0);
        Jb.mode = Da.get('labels', 'arced');
        M.headerDecor = y.createEnum(Sc, Da.get('header', 'NONE'), null);
        M.showMatte = Da.get('matte', !0);
        M.showCompass = Da.get('compass', !0);
        M.showInfo = Da.get('info', !0);
        M.showLight = Da.get('spotlight', !1);
        this.grid = new T();
        this.addChild(this.grid);
        this.numbers = new le(this);
        this.water = new ce();
        this.addChild(this.water);
        this.land = new T();
        this.addChild(this.land);
        this.landMask = new T();
        this.addChild(this.landMask);
        this.landOver = new T();
        this.addChild(this.landOver);
        this.roads = new T();
        this.roads.set_visible(M.showRoads);
        this.addChild(this.roads);
        this.objects = new T();
        this.addChild(this.objects);
        this.labels = new Jb();
        this.addChild(this.labels);
        this.spotlight = new Ca();
        this.spotlight.set_visible(M.showLight);
        this.addChild(this.spotlight);
        this.clouds = new li();
        this.addChild(this.clouds);
        this.compass = new Ma(100);
        this.compass.set_visible(M.showCompass);
        this.addChild(this.compass);
        this.stickers = new $f();
        this.addChild(this.stickers);
        this.matte = new mi();
        this.matte.set_visible(M.showMatte);
        this.addChild(this.matte);
        this.header = new yf();
        this.addChild(this.header);
        this.setGrid(M.gridMode);
      };
      h['com.watabou.perilous.mapping.MapView'] = M;
      M.__name__ = 'com.watabou.perilous.mapping.MapView';
      M.updateMap = function () {
        M.inst.draw(M.inst.region);
      };
      M.updateNetwork = function () {
        M.inst.updateRoads();
      };
      M.updateNavigation = function () {
        M.showRoutes && M.inst.water.drawRoutes(M.inst.region);
      };
      M.updateSprites = function () {
        M.inst.updateObjects();
      };
      M.updateLabels = function (a) {
        M.inst.updateLabelsInst(a);
      };
      M.updateNumbers = function () {
        M.inst.numbers.reset(M.inst.region);
      };
      M.updateGrid = function () {
        M.inst.drawGrid();
      };
      M.getGridColor = function () {
        return Da.get('useInkColor', !1)
          ? x.black
          : Da.get('numbersColor', 52479);
      };
      M.__super__ = T;
      M.prototype = u(T.prototype, {
        draw: function (a) {
          a != this.region && ((this.compass.manual = !1), (this.region = a));
          this.stage.set_color(x.water);
          this.maskNeeded =
            !a.noWater &&
            x.landBorderColor != x.earth &&
            0 < x.landBorderAlpha &&
            0 < x.landBorderWidth;
          this.updateWater();
          this.updateLand();
          this.updateRoads();
          this.updateObjects();
          M.updateLabels();
          this.drawGrid();
          this.clouds.update(a);
          this.matte.update(a);
          M.showCompass && this.updateCompass();
          M.headerDecor != Sc.HIDDEN &&
            (this.header.update(M.headerDecor), this.autoPlaceHeader());
          this.numbers.reset(a);
          Ca.update(a);
        },
        updateWater: function () {
          this.water.draw(this.region, this.compass.rhumbs);
        },
        updateLand: function () {
          this.land.set_visible(this.landMask.set_visible(this.maskNeeded));
          il.draw(
            this.region,
            this.land,
            this.landOver,
            this.maskNeeded ? this.landMask : null,
          );
        },
        updateRoads: function () {
          var a = new oc(this.roads, !0),
            b = [x.normal, 3 * x.normal];
          a.draw(x.flags, x.normal);
          for (var c = 0, d = this.region.islands; c < d.length; ) {
            var f = d[c];
            ++c;
            var g = 0;
            for (f = f.network.getSegments(Ib.getBaseline()); g < f.length; ) {
              var k = f[g];
              ++g;
              a.dashedPolyline(kc.render(k, !1, 2), b);
            }
          }
        },
        updateObjects: function () {
          this.objects.get_graphics().clear();
          this.objects.removeChildren();
          this.sprites = [];
          this.drawMountains();
          this.drawContent();
          this.sprites.sort(function (a, b) {
            a = a.get_y() - b.get_y();
            return 0 == a ? 0 : 0 > a ? -1 : 1;
          });
          for (var a = 0, b = this.sprites; a < b.length; ) {
            var c = b[a];
            ++a;
            this.objects.addChild(c);
          }
        },
        drawMountains: function () {
          for (
            var a = this.sprites, b = Vb.draw(this.region), c = 0;
            c < b.length;

          ) {
            var d = b[c];
            ++c;
            a.push(d);
          }
        },
        drawContent: function () {
          od.reset();
          for (var a = 0, b = this.region.dcel.faces; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = !0,
              f = !1,
              g = c.data,
              k = g.site;
            if (null != k)
              switch (xa.getClass(k)) {
                case Je:
                  d = !1;
                  f = !0;
                  this.drawDungeon(k);
                  break;
                case bf:
                  this.drawLandmark(k);
                  break;
                case Uc:
                  ((d = !1), (f = !0), this.drawTown(k));
              }
            if (d)
              switch (((d = g.terrain), xa.getClass(d))) {
                case ne:
                  f = !0;
                  this.drawDesert(d);
                  break;
                case wg:
                  this.drawRocks(d);
                  break;
                case oe:
                  f = !0;
                  this.drawSwamp(d);
                  break;
                case Nb:
                  M.individualTrees && Ia.drawWood(d, this.sprites);
                  break;
                default:
                  g.land && !g.mountain && ((f = !0), this.drawMeadow(c.data));
              }
            f && M.edgeTrees && Ia.drawOrphans(c, this.sprites);
          }
          if (!M.individualTrees) {
            a = 0;
            for (b = this.region.islands; a < b.length; )
              ((c = b[a]), ++a, Ia.drawUngroupForests(c, this.sprites));
            Ia.frontTrees && Ia.drawFront(this.region, this.sprites);
          }
        },
        drawRocks: function (a) {
          var b = new oc(this.landOver),
            c = a.cell.center,
            d = 0;
          for (a = a.rocks; d < a.length; ) {
            var f = a[d];
            ++d;
            b.drawThick();
            b.fill(x.landShadeColor);
            b.polygonAt(f, c.x, c.y);
            b.end();
          }
        },
        drawSwamp: function (a) {
          var b = 0;
          for (a = pe.some(a.cell, 16, 5, 11); b < a.length; ) {
            var c = a[b];
            ++b;
            var d = ed.reed();
            d.set_x(c.x);
            d.set_y(c.y);
            this.sprites.push(d);
          }
        },
        drawDesert: function (a) {
          a = pe.get(a.cell, fa.hexRadius, 0.5);
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = new ni();
            d.set_x(c.x);
            d.set_y(c.y);
            this.sprites.push(d);
          }
        },
        drawTown: function (a) {
          var b = M.pinTowns ? Ib.pin(a) : Ib.icon(a);
          b.set_visible(M.showTowns);
          var c = a.cell.center;
          a = a.getOffset();
          b.set_x(c.x + a.x);
          b.set_y(c.y + a.y * fa.vantage + Ib.getBaseline());
          this.sprites.push(b);
        },
        drawDungeon: function (a) {
          var b = new Vc();
          b.set_visible(M.showDangers);
          b.set_x(a.cell.center.x);
          b.set_y(a.cell.center.y);
          this.sprites.push(b);
        },
        drawLandmark: function (a) {
          var b = new oi(a);
          b.set_visible(M.showLandmarks);
          b.set_x(a.cell.center.x);
          b.set_y(a.cell.center.y + b.getOffset() * fa.vantage);
          this.sprites.push(b);
        },
        drawMeadow: function (a) {
          var b = 0;
          for (a = pe.some(a, 12, 0, 4); b < a.length; ) {
            var c = a[b];
            ++b;
            var d = ed.grass();
            d.set_visible(M.showMeadows);
            d.set_x(c.x);
            d.set_y(c.y);
            this.sprites.push(d);
          }
        },
        drawGrid: function () {
          this.grid.set_alpha(Da.get('gridAlpha', 0.4));
          this.grid.get_graphics().clear();
          var a = new oc(this.grid);
          a.draw(M.getGridColor(), x.thin);
          var b = [],
            c = [10, 10];
          if (M.revealRivers || M.individualTrees)
            for (var d = 0, f = this.region.dcel.edges; d < f.length; ) {
              var g = f[d];
              ++d;
              g.data == Hd.NONE &&
                -1 == b.indexOf(g.twin) &&
                (M.oceanTiles || g.face.data.land) &&
                (a.dashedLine(g.origin.point, g.next.origin.point, c),
                b.push(g));
            }
          else
            for (d = 0, f = this.region.dcel.edges; d < f.length; )
              ((g = f[d]),
                ++d,
                g.data == Hd.NONE
                  ? -1 == b.indexOf(g.twin) &&
                    (M.oceanTiles || g.face.data.land) &&
                    (a.dashedLine(g.origin.point, g.next.origin.point, c),
                    b.push(g))
                  : null != g.data.river &&
                    -1 == b.indexOf(g.twin) &&
                    g.face.data.terrain instanceof Nb &&
                    g.twin.face.data.terrain instanceof Nb &&
                    (M.oceanTiles || g.face.data.land) &&
                    (a.dashedLine(g.origin.point, g.next.origin.point, c),
                    b.push(g)));
        },
        addNumbers: function () {
          this.addChildAt(this.numbers, this.getChildIndex(this.objects) + 1);
        },
        setGrid: function (a) {
          Da.set('grid', (M.gridMode = a));
          this.removeChild(this.grid);
          switch (a) {
            case 1:
              this.addChildAt(this.grid, 5);
              break;
            case 2:
              this.addChildAt(this.grid, 6);
          }
          this.numbers.update(this.region);
        },
        toggleGrid: function () {
          0 == M.gridMode ? this.setGrid(1) : this.setGrid(0);
        },
        toggleOceanTiles: function () {
          0 == M.gridMode && this.setGrid(1);
          Da.set('oceanTiles', (M.oceanTiles = !M.oceanTiles));
          this.drawGrid();
          M.updateNumbers();
        },
        toggleNumbers: function () {
          0 == M.gridMode
            ? (Da.set('hexNumbers', (M.showNumbers = !0)), this.setGrid(1))
            : (Da.set('hexNumbers', (M.showNumbers = !M.showNumbers)),
              this.numbers.update(this.region));
        },
        toggleMatte: function () {
          Da.set('matte', this.matte.set_visible((M.showMatte = !M.showMatte)));
          this.labels.update(this.region);
          M.headerDecor != Sc.HIDDEN && this.autoPlaceHeader();
        },
        toggleTowns: function () {
          M.showTowns = !M.showTowns;
          this.updateVisibility();
          this.updateLabelsInst();
        },
        togglePinTowns: function () {
          Da.set('pinTowns', (M.pinTowns = !M.pinTowns));
          this.updateObjects();
          this.labels.update(this.region);
        },
        toggleTownsEx: function (a) {
          switch (a) {
            case 0:
              M.showTowns && this.toggleTowns();
              break;
            case 1:
              M.showTowns || this.toggleTowns();
              M.pinTowns && this.togglePinTowns();
              break;
            case 2:
              (M.showTowns || this.toggleTowns(),
                M.pinTowns || this.togglePinTowns());
          }
          a = 0;
          for (var b = this.region.islands; a < b.length; ) {
            var c = b[a];
            ++a;
            c.network.resetSegments();
          }
          this.updateRoads();
        },
        randomTowns: function () {
          if (M.uniformTowns) Ib.commonDesign = new zf();
          else
            for (var a = 0, b = this.region.islands; a < b.length; ) {
              var c = b[a];
              ++a;
              var d = 0;
              for (c = c.towns; d < c.length; ) {
                var f = c[d];
                ++d;
                f.design = new zf();
              }
            }
          M.showTowns || this.toggleTowns();
          M.pinTowns ? this.togglePinTowns() : this.updateObjects();
        },
        toggleUniform: function () {
          Da.set('uniformTowns', (M.uniformTowns = !M.uniformTowns));
          this.updateObjects();
        },
        outlineTowns: function () {
          Da.set('outlineTowns', (Ib.outline = !Ib.outline));
          this.updateObjects();
        },
        toggleDangers: function () {
          M.showDangers = !M.showDangers;
          this.updateVisibility();
          this.updateLabelsInst();
        },
        toggleRoads: function () {
          this.roads.set_visible((M.showRoads = !M.showRoads));
        },
        toggleRoutes: function () {
          this.water.routes.set_visible((M.showRoutes = !M.showRoutes)) &&
            this.water.drawRoutes(this.region);
          Da.set('seaRoutes', M.showRoutes);
        },
        toggleMeadows: function () {
          M.showMeadows = !M.showMeadows;
          this.updateVisibility();
        },
        toggleLabels: function () {
          var a = Jb.MODES,
            b = a.indexOf(Jb.mode);
          0 > b && (b = 0);
          this.setLabels(a[(b + 1) % a.length]);
        },
        setLabels: function (a) {
          Da.set('labels', (Jb.mode = a));
          Jb.mode != Jb.HIDDEN
            ? (this.labels.set_visible(!0), this.labels.update(this.region))
            : this.labels.set_visible(!1);
        },
        toggleCompass: function () {
          (M.showCompass = !M.showCompass)
            ? ((this.compass.manual = !1),
              this.compass.set_visible(!0),
              this.updateCompass())
            : this.compass.set_visible(!1);
          Da.set('compass', M.showCompass);
          M.headerDecor != Sc.HIDDEN && this.autoPlaceHeader();
        },
        customizeCompass: function () {
          M.showCompass || this.toggleCompass();
          this.compass.customize();
        },
        setHeader: function (a) {
          this.header.manual = !1;
          this.header.update((M.headerDecor = a));
          this.autoPlaceHeader();
          Da.set('header', L[a.__enum__].__constructs__[a._hx_index]._hx_name);
        },
        toggleInfo: function () {
          Da.set('info', (M.showInfo = !M.showInfo));
          this.stickers.recreate();
        },
        toggleClouds: function () {
          M.showClouds = !M.showClouds;
          this.clouds.update(this.region);
        },
        toggleIndividualTrees: function () {
          M.individualTrees = !M.individualTrees;
          Da.set('individualTrees', M.individualTrees);
          this.updateLand();
          this.updateObjects();
          M.revealRivers || this.drawGrid();
        },
        toggleFrontTrees: function () {
          Da.set('frontTrees', (Ia.frontTrees = !Ia.frontTrees));
          this.updateObjects();
        },
        toggleEdgeTrees: function () {
          Da.set('edgeTrees', (M.edgeTrees = !M.edgeTrees));
          this.updateObjects();
        },
        toggleTreeShadows: function () {
          M.treeShadows = !M.treeShadows;
          Da.set('treeShadows', M.treeShadows);
          od.reset('lightTree');
          od.reset('darkTree');
          od.reset('deadTree');
          (M.individualTrees || M.edgeTrees) && this.updateObjects();
          M.individualTrees || this.updateLand();
        },
        toggleRevealRivers: function () {
          M.revealRivers = !M.revealRivers;
          Da.set('revealRivers', M.revealRivers);
          for (var a = 0, b = this.region.islands; a < b.length; ) {
            var c = b[a];
            ++a;
            c.forests = null;
          }
          this.updateLand();
          this.drawGrid();
        },
        toggleHollowRivers: function () {
          Da.set('hollowRivers', (M.hollowRivers = !M.hollowRivers));
          this.updateLand();
        },
        toggleRiverBanks: function () {
          Da.set('riverBanks', (M.riverBanks = !M.riverBanks));
          this.updateLand();
          Ia.frontTrees && this.updateObjects();
        },
        setForestType: function (a) {
          Ia.type = a;
          M.individualTrees
            ? this.updateObjects()
            : (this.updateLand(),
              (M.edgeTrees || Ia.frontTrees) && this.updateObjects());
        },
        toggleForestType: function () {
          this.setForestType(
            null == Ia.type
              ? Ia.lightTree
              : Ia.type == Ia.lightTree
                ? Ia.darkTree
                : Ia.type == Ia.darkTree
                  ? Ia.deadTree
                  : null,
          );
        },
        updateCompass: function () {
          var a = fa.hexRadius,
            b = -this.region.viewWidth / 2 + a,
            c = -this.region.viewHeight / 2 + a,
            d = this.region.viewWidth / 2 - a;
          a = this.region.viewHeight / 2 - a;
          this.compass.update(
            100 *
              Math.sqrt((this.region.width + this.region.height) / 2 / 1200),
          );
          this.compass.manual || this.compass.place(this.region, b, c, d, a);
        },
        autoPlaceHeader: function () {
          if (!this.header.manual) {
            var a = this.region.viewWidth,
              b = this.region.viewHeight,
              c = new na(0, 0, a, b);
            c.offset(-a / 2, -b / 2);
            M.showMatte && c.inflate(-fa.hexRadius, -fa.hexRadius);
            this.header.place(
              this.region,
              c,
              M.showCompass ? this.compass.getBounds(this) : null,
            );
          }
        },
        updateVisibility: function () {
          for (var a = 0, b = this.sprites; a < b.length; ) {
            var c = b[a];
            ++a;
            c instanceof Ib
              ? c.set_visible(M.showTowns)
              : c instanceof Vc
                ? c.set_visible(M.showDangers)
                : c instanceof ed &&
                  xa.__cast(c, ed).meadow &&
                  c.set_visible(M.showMeadows);
          }
        },
        exportPNG: function () {
          this.labels.exportAsPNG();
          this.header.exportAsPNG();
          var a = Math.sqrt(
              16777215 / (this.region.width * this.region.height),
            ),
            b = (this.region.width * a) | 0,
            c = (this.region.height * a * fa.vantage) | 0,
            d = new $b(b, c, !1, x.water),
            f = new ua();
          f.scale(a, a);
          f.translate(b / 2, c / 2);
          d.draw(this, f, null, null, null, !0);
          M.updateLabels();
          je.savePNG(d, this.region.getFileName());
        },
        updateLabelsInst: function (a) {
          null != a ? this.stickers.update(a) : this.stickers.recreate();
          Jb.mode != Jb.HIDDEN
            ? (this.labels.update(this.region), this.labels.set_visible(!0))
            : ((this.labels.isDirty = !0), this.labels.set_visible(!1));
          M.headerDecor != Sc.HIDDEN &&
            (this.header.update(M.headerDecor), this.autoPlaceHeader());
        },
        __class__: M,
      });
      var be = function () {};
      h['com.watabou.perilous.utils.Bloater'] = be;
      be.__name__ = 'com.watabou.perilous.utils.Bloater';
      be.doBloat = function (a, b, c) {
        null == c && (c = 0.1);
        for (var d = a.length, f = [], g = 0; g < d; ) {
          var k = g++;
          k = be.extrudeEx(a[k], a[(k + 1) % d], b, c);
          for (var q = 0; q < k.length; ) {
            var p = k[q];
            ++q;
            f.push(p);
          }
        }
        return f;
      };
      be.doBloatOpen = function (a, b, c) {
        null == c && (c = 0.1);
        for (var d = [], f = 1, g = a.length; f < g; ) {
          var k = f++;
          k = be.extrudeEx(a[k - 1], a[k], b, c);
          for (var q = 0; q < k.length; ) {
            var p = k[q];
            ++q;
            d.push(p);
          }
        }
        return d;
      };
      be.extrude = function (a, b, c, d) {
        var f = a.subtract(b);
        c = f.get_length() / c;
        return c > d
          ? (f.setTo(-f.y, f.x),
            (d = 0.5 * (1 > c ? c : 1)),
            (f.x *= d),
            (f.y *= d),
            (a = ta.lerp(a, b)),
            (a.x += f.x),
            (a.y += f.y),
            a)
          : null;
      };
      be.extrudeEx = function (a, b, c, d) {
        var f = be.extrude(a, b, c, d);
        return null == f
          ? [a]
          : be.extrudeEx(a, f, c, d).concat(be.extrudeEx(f, b, c, d));
      };
      var cf = function () {};
      h['com.watabou.perilous.mapping.sprites.DeadTree'] = cf;
      cf.__name__ = 'com.watabou.perilous.mapping.sprites.DeadTree';
      cf.proto = function () {
        return new af('deadTree', cf.draw);
      };
      cf.draw = function (a) {
        var b =
            cf.min_height +
            (cf.max_height - cf.min_height) *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3),
          c = new oc(a);
        af.drawShadow(c, -b / 6, b / 3);
        var d = null;
        d = function (a, g, k) {
          if (5 > k) {
            var f = a.add(B.polar(k, g)),
              p = x.ultraThin;
            k /= b;
            null == k && (k = 0.5);
            c.useBrush(null, x.black, p + (x.normal - p) * k, x.ultraThin);
            c.shortStroke(a, f);
          } else {
            f =
              k *
              (0.2 +
                0.2 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3));
            var h = k - f,
              t =
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3,
              n = 1 - t;
            f = a.add(B.polar(f, g));
            p = x.ultraThin;
            k /= b;
            null == k && (k = 0.5);
            var w = x.ultraThin,
              jd = h / b;
            null == jd && (jd = 0.5);
            c.useBrush(
              null,
              x.black,
              p + (x.normal - p) * k,
              w + (x.normal - w) * jd,
            );
            c.shortStroke(a, f);
            a = h * Math.sqrt(n);
            p = ((t * Math.PI) / 2) * Math.sqrt(1 - a / b);
            d(f, g - p, a);
            a = h * Math.sqrt(t);
            p = ((n * Math.PI) / 2) * Math.sqrt(1 - a / b);
            d(f, g + p, a);
          }
        };
        c.brush = m(c, c.decay);
        d(
          new B(),
          Math.PI *
            (-0.5 +
              0.1 *
                ((((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1)),
          b,
        );
      };
      var fa = function (a) {
        this.indices = new va();
        this.meshAngle = NaN;
        var b = this;
        fa.inst = this;
        this.bp = a;
        this.editor = new nk(this);
        l.reset(a.seed);
        Z.processTags(a.tags);
        console.log(
          'Source/com/watabou/perilous/model/Region.hx:97:',
          a.seed + ': ' + a.tags.join(', '),
        );
        this.width = a.width;
        this.height = a.height;
        this.viewWidth = this.width;
        this.viewHeight = this.height * fa.vantage;
        fa.hexInner = (fa.hexRadius * Math.sqrt(3)) / 2;
        fa.hexWidth2 = fa.hexInner;
        fa.hexHeight2 = fa.hexRadius;
        var c = Math.max(this.width, this.height);
        this.cols = Math.ceil((Math.sqrt(2) * c) / 2 / fa.hexWidth2);
        this.rows = Math.ceil((Math.sqrt(2) * c) / 2 / (0.75 * fa.hexHeight2));
        l.preserve(function () {
          ka.reset(b);
        });
        Ha.reset();
        this.createMesh();
        this.createLandscape();
        this.createIslands();
        this.spawnDungeons();
        this.name = null != a.name ? a.name : this.rollName();
        a.updateURL();
        Z.width = this.width;
        Z.height = this.height;
      };
      h['com.watabou.perilous.model.Region'] = fa;
      fa.__name__ = 'com.watabou.perilous.model.Region';
      fa.getVicinity = function (a, b) {
        for (var c = [a]; 0 < b--; ) {
          for (var d = [], f = 0; f < c.length; )
            ((a = c[f]), ++f, da.addAll(d, a.getNeighbours()));
          da.addAll(c, d);
        }
        return c;
      };
      fa.getAlign = function (a, b) {
        null == b && (b = 0);
        null == a && (a = zb.NEUTRAL);
        null == b && (b = 0);
        null == b && (b = 0);
        b =
          1 +
          Math.floor(
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 12,
          ) +
          b;
        b = 1 > b ? 1 : 12 < b ? 12 : b;
        switch (a._hx_index) {
          case 0:
            switch (b) {
              case 1:
                return zb.EVIL;
              case 2:
              case 3:
                return zb.CHAOTIC;
              case 4:
              case 5:
                return zb.NEUTRAL;
              case 6:
              case 7:
                return zb.LAWFUL;
              default:
                return zb.GOOD;
            }
          case 1:
            switch (b) {
              case 1:
              case 2:
                return zb.EVIL;
              case 3:
                return zb.CHAOTIC;
              case 4:
              case 5:
                return zb.NEUTRAL;
              case 11:
              case 12:
                return zb.GOOD;
              default:
                return zb.LAWFUL;
            }
          case 2:
            switch (b) {
              case 1:
                return zb.EVIL;
              case 2:
              case 3:
                return zb.CHAOTIC;
              case 10:
              case 11:
                return zb.LAWFUL;
              case 12:
                return zb.GOOD;
              default:
                return zb.NEUTRAL;
            }
          case 3:
            switch (b) {
              case 1:
              case 2:
                return zb.EVIL;
              case 10:
                return zb.LAWFUL;
              case 11:
              case 12:
                return zb.GOOD;
              default:
                return zb.CHAOTIC;
            }
          case 4:
            switch (b) {
              case 6:
              case 7:
                return zb.CHAOTIC;
              case 8:
              case 9:
                return zb.NEUTRAL;
              case 10:
              case 11:
                return zb.LAWFUL;
              case 12:
                return zb.GOOD;
              default:
                return zb.EVIL;
            }
        }
      };
      fa.prototype = {
        rerollNames: function () {
          ka.reset(this);
          this.name = this.bp.name = this.rollName();
          for (var a = 0, b = this.getFeatures(); a < b.length; ) {
            var c = b[a];
            ++a;
            c.rollName();
          }
          this.bp.updateURL();
        },
        getFileName: function () {
          return this.name
            .toLowerCase()
            .split(' ')
            .join('_')
            .split("'")
            .join('');
        },
        rollName: function () {
          switch (Z.template) {
            case 'archipelago':
              return ka.archi();
            case 'bay':
              return ka.bay();
            case 'coast':
              return ka.coast();
            case 'fjord':
              return ka.fjord();
            case 'lake':
              for (var a = 0, b = 0, c = this.islands; b < c.length; ) {
                var d = c[b];
                ++b;
                a += d.outline.length - 1;
              }
              b = (a - 1) / 3;
              null == b && (b = 0.5);
              return ka.lake(
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b,
              );
            case 'land':
              return ka.land();
            case 'peninsula':
              return ka.peninsula();
            default:
              b = 1 - 1 / this.islands.length;
              null == b && (b = 0.5);
              b = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b;
              if (!b) {
                var f = (a = 0);
                b = 0;
                for (c = this.islands; b < c.length; )
                  ((d = c[b]), ++b, (d = d.size), (a += d), f < d && (f = d));
                b = f < (2 * a) / 3;
              }
              return ka.island(b);
          }
        },
        createMesh: function () {
          var a =
              (Math.PI / 3) *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 - 0.5),
            b = 1 == this.bp.hexes ? 0 : 2 == this.bp.hexes ? Math.PI / 6 : a,
            c = Math.sin(b),
            d = Math.cos(b);
          this.meshAngle = a;
          var f =
            2 == this.bp.hexes
              ? function (a, b) {
                  b = Math.floor((b - a) / 2);
                  return new ug(b, a + Math.floor(b / 2));
                }
              : function (a, b) {
                  return new ug(Math.floor(b / 2), a);
                };
          a = [];
          var g = 0;
          for (b = this.rows + 1; g < b; ) {
            for (var k = g++, q = [], p = 0, h = 2 * this.cols + 2; p < h; ) {
              var t = p++,
                n = fa.hexWidth2 * (t - this.cols - 0.5),
                w = fa.hexHeight2 * (k - this.rows / 2) * 1.5;
              w += (fa.hexHeight2 / 4) * ((t & 1) == (k & 1) ? 1 : -1);
              n = new B(n, w);
              n.setTo(n.x * d - n.y * c, n.y * d + n.x * c);
              w = this.indices;
              t = f(k, t);
              w.set(n, t);
              q.push(n);
            }
            a.push(q);
          }
          n = a;
          d = c = 16777215;
          f = this.width / 2 + 1.1 * fa.hexRadius;
          q = this.height / 2 + 1.1 * fa.hexRadius;
          a = [];
          g = 0;
          for (b = this.cols * this.rows; g < b; )
            ((k = g++),
              (p = (k / this.cols) | 0),
              (h = (k % this.cols) * 2),
              0 != (p & 1) && ++h,
              (k = ta.lerp(n[p][h], n[p + 1][h + 2])),
              Math.abs(k.x) > f ||
                Math.abs(k.y) > q ||
                ((k = this.indices.h[n[p][h].__id__]),
                c > k.x && (c = k.x),
                d > k.y && (d = k.y),
                a.push([
                  n[p][h],
                  n[p][h + 1],
                  n[p][h + 2],
                  n[p + 1][h + 2],
                  n[p + 1][h + 1],
                  n[p + 1][h],
                ])));
          this.dcel = new ec(a);
          if (1 != fa.vantage)
            for (t = this.dcel.vertices.iterator(); t.hasNext(); )
              t.next().point.y *= fa.vantage;
          for (k = this.indices.iterator(); k.hasNext(); )
            ((a = k.next()), (a.x -= c), (a.y -= d));
          if (3 == this.bp.hexes) {
            l.save();
            a = new va();
            g = 0;
            for (b = this.dcel.faces; g < b.length; )
              ((n = b[g]),
                ++g,
                (c = n.halfEdge),
                a.set(
                  n,
                  ta.lerp(c.origin.point, c.next.next.next.origin.point),
                ));
            f = a;
            a = 0;
            for (g = this.dcel.faces; a < g.length; )
              for (
                n = g[a],
                  ++a,
                  k = f.h[n.__id__],
                  b =
                    (Math.PI / 6) *
                    ((((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                      2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      3) *
                      2 -
                      1),
                  p = q = n.halfEdge,
                  h = !0;
                h;

              )
                ((n = p),
                  (p = p.next),
                  (h = p != q),
                  (n = n.origin.point),
                  (t = n.subtract(k)),
                  (c = Math.sin(b)),
                  (d = Math.cos(b)),
                  lh.set(
                    n,
                    new B(t.x * d - t.y * c, t.y * d + t.x * c).add(k),
                  ));
            l.restore();
          }
        },
        getCells: function (a) {
          for (var b = [], c = 0, d = this.dcel.faces; c < d.length; ) {
            var f = d[c];
            ++c;
            a.containsPoint(f.data.center) && b.push(f.data);
          }
          return b;
        },
        createLandscape: function () {
          var a = Math.max(this.width, this.height),
            b =
              1 +
              2 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            c =
              0.3 +
              0.3 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3);
          -1 != this.bp.tags.indexOf('chaotic')
            ? (c += 0.1)
            : -1 != this.bp.tags.indexOf('lawful') && (c -= 0.1);
          var d = mh.fractal(6, b, c),
            f = lc.get(this);
          this.minLevel = Infinity;
          this.maxLevel = -Infinity;
          b = 0;
          for (c = this.dcel.faces; b < c.length; ) {
            var g = c[b];
            ++b;
            g = g.data = new ok(this, g);
            var k = new B(g.center.x, g.center.y / fa.vantage),
              q = ac.gate(k.x / a + 0.5, 0, 1),
              p = ac.gate(k.y / a + 0.5, 0, 1);
            k = d.get(q, p) + f.raise(k);
            g.level = k;
            this.minLevel > k && (this.minLevel = k);
            this.maxLevel < k && (this.maxLevel = k);
          }
          a = [];
          b = 0;
          for (c = this.dcel.edges; b < c.length; )
            ((d = c[b]),
              ++b,
              null == d.twin
                ? ((d.data = Hd.EDGE),
                  (d.face.data.border = !0),
                  da.add(a, d.face))
                : (d.data = Hd.NONE));
          for (b = 0; b < a.length; )
            for (g = a[b], ++b, c = 0, d = g.getNeighbours(); c < d.length; )
              ((f = d[c]), ++c, (f.data.march = !0));
        },
        createIslands: function () {
          switch (Z.template) {
            case 'archipelago':
              var a = 0.65;
              break;
            case 'bay':
              a = 0.4;
              break;
            case 'coast':
              a = 0.5;
              break;
            case 'fjord':
              a = 0.3;
              break;
            case 'island':
              a = 0.65;
              break;
            case 'lake':
              a = 0.3;
              break;
            case 'land':
              a = -0.1;
              break;
            case 'peninsula':
              a = 0.5;
              break;
            default:
              a = 0;
          }
          var b = this.minLevel;
          null == a && (a = 0.5);
          var c = b + (this.maxLevel - b) * a;
          a = [];
          var d = [];
          b = 0;
          for (var f = this.dcel.faces; b < f.length; ) {
            var g = f[b];
            ++b;
            var k = g.data;
            (k.land = k.level > c)
              ? ((k.aboveSea = (k.level - c) / (this.maxLevel - c)),
                a.push(g),
                k.aboveSea > Z.lowlandArea && d.push(k))
              : (k.aboveSea = (k.level - c) / (c - this.minLevel));
          }
          for (; 0 < d.length; )
            for (f = [da.pick(d)]; 0 < f.length; ) {
              k = da.pick(f);
              g = k.aboveSea;
              k.mountain = !0;
              new nh(k, g - Z.lowlandArea);
              var q = k.face.getNeighbours();
              for (b = 0; b < q.length; )
                ((k = q[b]),
                  ++b,
                  (c = k.data),
                  -1 != d.indexOf(c) &&
                    (R.remove(d, c),
                    (c = (2 * (1 - (g - c.aboveSea))) / 3),
                    null == c && (c = 0.5),
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 <
                      c && da.add(f, k.data)));
            }
          for (this.islands = []; 0 < a.length; )
            ((b = ec.floodFill(a[0], function (a) {
              return a.data.land;
            })),
              this.islands.push(new pk(b)),
              da.removeAll(a, b));
          this.noWater = da.every(this.islands, function (a) {
            return a.landlocked;
          });
          this.rocks = [];
          if (!this.noWater) {
            a = [];
            b = 0;
            for (f = this.dcel.faces; b < f.length; )
              ((g = f[b]),
                ++b,
                g.data.land ||
                  ((k = da.count(g.getNeighbours(), function (a) {
                    return a.data.land;
                  })),
                  (d = c =
                    (1 == k ? 0.1 : 0 == k ? 0.01 : 0.001) *
                    (1 + g.data.aboveSea)),
                  null == d && (d = 0.5),
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 <
                    d && a.push(g)));
            l.save();
            for (b = 0; b < a.length; )
              ((g = a[b]),
                ++b,
                this.rocks.push(new wg(g.data)),
                (g.data.shallow = !0));
            l.restore();
          }
        },
        spawnDungeons: function () {
          this.landmarks = [];
          for (var a = [], b = 0, c = this.dcel.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            var f = d.data;
            !f.land || f.march || f.mountain || null != f.site || a.push(d);
          }
          d = a;
          a = 0;
          for (b = this.islands; a < b.length; )
            for (f = b[a], ++a, c = 0, f = f.towns; c < f.length; ) {
              var g = f[c];
              ++c;
              da.removeAll(
                d,
                fa.getVicinity(g.cell.face, g.type._hx_index + 1),
              );
            }
          a = Math.sqrt(d.length * Z.dungeonDensity);
          b = a - (a | 0);
          null == b && (b = 0.5);
          c =
            (a | 0) +
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b
              ? 1
              : 0);
          a = [];
          for (b = 0; b < c; ) {
            b++;
            if (0 == d.length) break;
            f = da.random(d);
            g = fa.getVicinity(f, 1);
            for (var k = 0; k < g.length; ) {
              var q = g[k];
              for (++k; R.remove(d, q); );
            }
            a.push(new Je(f.data, 0));
          }
          this.dangers = a;
        },
        getNavigation: function () {
          null == this.routes && (this.routes = new oh(this));
          return this.routes;
        },
        resetNavigation: function () {
          this.routes = null;
        },
        getFeatures: function () {
          if (null == this.features) {
            l.save();
            l.reset(this.bp.seed);
            this.features = [];
            for (var a = 0, b = this.islands; a < b.length; ) {
              var c = b[a];
              ++a;
              var d = 0;
              for (c = c.towns; d < c.length; ) {
                var f = c[d];
                ++d;
                f.init();
                this.features.push(f);
              }
            }
            a = 0;
            for (b = this.dangers; a < b.length; )
              ((d = b[a]), ++a, d.init(), this.features.push(d));
            a = [];
            b = 0;
            for (d = this.dcel.faces; b < d.length; )
              ((c = d[b]), ++b, c.data.land && !c.data.march && a.push(c));
            d = a;
            c = Math.sqrt(d.length) | 0;
            a = 0;
            for (b = c; a < b; ) {
              a++;
              if (this.features.length >= c) break;
              f = da.random(d).data.terrain;
              null != f && (f.init(), da.add(this.features, f.area));
            }
            l.restore();
          }
          return this.features;
        },
        getIsland: function (a) {
          for (var b = 0, c = this.islands; b < c.length; ) {
            var d = c[b];
            ++b;
            if (-1 != d.faces.indexOf(a)) return d;
          }
          return null;
        },
        getCell: function (a) {
          for (var b = 0, c = this.dcel.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            d = d.data;
            if (d.containsPoint(a)) return d;
          }
          return null;
        },
        rotate: function (a, b) {
          null == b && (b = !1);
          for (var c = this.dcel.vertices.iterator(); c.hasNext(); ) {
            var d = c.next();
            a(d.point);
          }
          c = 0;
          for (d = this.dcel.faces; c < d.length; ) {
            var f = d[c];
            ++c;
            a(f.data.center);
            b && (f.invert(), f.data.poly.reverse());
          }
          c = 0;
          for (d = this.islands; c < d.length; ) {
            a = d[c];
            ++c;
            if (b) {
              f = 0;
              for (var g = a.outline; f < g.length; ) {
                var k = g[f];
                ++f;
                k.reverse();
              }
              a.forests = null;
            }
            a.recreateGeometry();
          }
          null != this.routes && this.routes.resetCurves();
        },
        rotate180: function () {
          this.rotate(function (a) {
            a.x = -a.x;
            a.y = -a.y;
          });
        },
        flipHorizontal: function () {
          this.rotate(function (a) {
            a.x = -a.x;
          }, !0);
        },
        flipVertical: function () {
          this.rotate(function (a) {
            a.y = -a.y;
          }, !0);
        },
        rotate90cw: function () {
          var a = this.width;
          this.width = this.height;
          this.height = a;
          this.viewWidth = this.width;
          this.viewHeight = this.height * fa.vantage;
          this.rotate(function (a) {
            var b = a.y;
            a.y = a.x;
            a.x = -b;
          });
        },
        rotate90ccw: function () {
          var a = this.width;
          this.width = this.height;
          this.height = a;
          this.viewWidth = this.width;
          this.viewHeight = this.height * fa.vantage;
          this.rotate(function (a) {
            var b = a.x;
            a.x = a.y;
            a.y = -b;
          });
        },
        setVantage: function (a) {
          var b = a / fa.vantage;
          this.viewHeight = this.height * (fa.vantage = a);
          this.rotate(function (a) {
            a.y *= b;
          });
        },
        __class__: fa,
      };
      var Ob = function () {};
      h['com.watabou.perilous.mapping.sprites.LightTree'] = Ob;
      Ob.__name__ = 'com.watabou.perilous.mapping.sprites.LightTree';
      Ob.proto = function () {
        var a = new af('lightTree', Ob.draw);
        a.getColor = function () {
          return x.lightWood;
        };
        a.getDist = function () {
          return Ob.max_width * x.clutterScale;
        };
        a.getTrunk = function () {
          return Ob.min_trunk;
        };
        a.getBump = Ob.getBump;
        a.getCloud = Ob.getCloud;
        a.getFold = Ob.getFold;
        return a;
      };
      Ob.draw = function (a) {
        var b =
            Ob.min_trunk +
            (Ob.max_trunk - Ob.min_trunk) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
          c =
            Ob.min_width +
            (Ob.max_width - Ob.min_width) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
          d =
            Ob.min_height +
            (Ob.max_height - Ob.min_height) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              );
        b *= x.clutterScale;
        c *= x.clutterScale;
        d *= x.clutterScale;
        a = new oc(a);
        af.drawShadow(a, -c / 4, d / 2);
        var f = bc.lerp(x.lightWood, x.black, x.alpha);
        a.g.lineStyle(x.thin, f);
        a.line(0, 0, 0, -b);
        a.end();
        a.drawThin();
        a.fill(x.lightWood);
        f = [];
        for (var g = 0; 16 > g; ) {
          var k = (g++ / 8) * Math.PI;
          f.push(
            new B((c / 2) * Math.cos(k), (d / 2) * Math.sin(k) - b - d / 2),
          );
        }
        b = f;
        a.polygon(b);
        for (f = 0; f < b.length; ) ((c = b[f]), ++f, 0 > c.x && (c.x *= -0.5));
        a.useBrush(null, x.black, x.thin);
        a.fillArea(b, Ob.hatching);
      };
      Ob.getBump = function () {
        return (
          Ob.min_width *
          (1 <= x.clutterScale ? x.clutterScale : Math.sqrt(x.clutterScale))
        );
      };
      Ob.getCloud = function (a) {
        return be.doBloat(a, 2 * Ob.getBump());
      };
      Ob.getFold = function (a) {
        return be.doBloatOpen(a, 2 * Ob.getBump());
      };
      var Ia = function () {};
      h['com.watabou.perilous.mapping.ForestView'] = Ia;
      Ia.__name__ = 'com.watabou.perilous.mapping.ForestView';
      Ia.draw = function (a, b) {
        null == b.forests && Ia.createForests(b);
        var c = 0;
        for (b = b.forests; c < b.length; ) {
          var d = b[c];
          ++c;
          Ia.updateForest(d);
          Ia.drawForest(a, d);
        }
      };
      Ia.updateForests = function (a) {
        if (null != a.forests) {
          var b = 0;
          for (a = a.forests; b < a.length; ) {
            var c = a[b];
            ++b;
            c.springs && (c.poly = null);
          }
        }
      };
      Ia.updateForest = function (a) {
        if (a.springs && null == a.poly) {
          var b = ec.outlineEx(
            a.faces,
            M.revealRivers
              ? function (a) {
                  return null == a.data.river;
                }
              : null,
          );
          a.poly = Ia.outline2polyPolygon(b);
        }
      };
      Ia.createForests = function (a) {
        for (var b = [], c = 0, d = a.faces; c < d.length; ) {
          var f = d[c];
          ++c;
          f.data.terrain instanceof Nb &&
            (null == f.data.site || f.data.site instanceof bf) &&
            b.push(f);
        }
        var g = b;
        for (b = []; !da.isEmpty(g); ) {
          var k = [
            M.revealRivers
              ? ec.floodFillEx(
                  g[0],
                  (function () {
                    return function (a) {
                      return a.data.isEdge || null != a.data.river
                        ? !1
                        : -1 != g.indexOf(a.twin.face);
                    };
                  })(),
                )
              : ec.floodFill(
                  g[0],
                  (function () {
                    return function (a) {
                      return -1 != g.indexOf(a);
                    };
                  })(),
                ),
          ];
          da.removeAll(g, k[0]);
          c = [];
          d = 0;
          for (var q = k[0]; d < q.length; )
            ((f = q[d]),
              ++d,
              6 ==
                da.count(
                  f.getNeighbours(),
                  (function (a) {
                    return function (b) {
                      return -1 != a[0].indexOf(b);
                    };
                  })(k),
                ) && c.push(f));
          d = new va();
          d.set(Ia.lightTree, 0);
          d.set(Ia.darkTree, 0);
          d.set(Ia.deadTree, 0);
          q = d;
          for (d = 0; d < k[0].length; )
            ((f = k[0][d]),
              ++d,
              (f = xa.__cast(f.data.terrain, Nb).type),
              q.set(f, q.h[f.__id__] + 1));
          f = 0;
          d = null;
          var p = q;
          q = p;
          for (p = p.keys(); p.hasNext(); ) {
            var l = p.next(),
              h = q.get(l);
            f < h && ((f = h), (d = l));
          }
          f = M.revealRivers
            ? (function () {
                return function (a) {
                  return null == a.data.river;
                };
              })()
            : null;
          f = ec.outlineEx(k[0], f);
          f = Ia.outline2polyPolygon(f);
          b.push({
            faces: k[0],
            inner: c,
            type: d,
            poly: f,
            springs: Ia.hasSprings,
          });
        }
        a.forests = b;
      };
      Ia.outline2polyPolygon = function (a) {
        Ia.hasSprings = !1;
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          for (
            var f = d.length, g = nd.toPoly(d), k = !1, q = 0, p = f;
            q < p;

          ) {
            var l = q++;
            if (d[l].twin == d[(l + 1) % f]) {
              k = Ia.hasSprings = !0;
              break;
            }
          }
          if (k) {
            d = [];
            p = g.length;
            f = g[p - 2];
            k = g[p - 1];
            for (q = 0; q < p; ) {
              var h = q++;
              l = f;
              f = k;
              k = g[h];
              l != k
                ? d.push(f)
                : ((h = f.subtract(l)),
                  h.setTo(-h.y, h.x),
                  (l = new B(l.y - f.y, f.x - l.x)),
                  l.normalize(Ia.inset / 2),
                  d.push(f.add(l)),
                  d.push(f.subtract(l)));
            }
            b.push(d);
          } else b.push(g);
        }
        return b;
      };
      Ia.drawForest = function (a, b) {
        var c = fa.hexRadius,
          d = Ia.type;
        var f = null != d ? d : b.type;
        if (null != f.getDist) {
          var g = f.getBump(),
            k =
              g / 2 +
              f.getTrunk() *
                (1 <= x.clutterScale
                  ? x.clutterScale
                  : Math.sqrt(x.clutterScale));
          d = [];
          for (var q = [], p = [], h = 0, t = b.poly; h < t.length; ) {
            var n = t[h];
            ++h;
            n = xc.wobbleFixed(n, 0.5 * c);
            n = He.insetEq(n, Ia.inset);
            sc.asTranslate(n, 0, -k);
            n = xc.resampleClosed(kc.render(n, !0), g);
            n = xc.wobbleFixed(n, g);
            var w = n.length,
              jd = n[w - 2];
            w = n[w - 1];
            for (var r = 0, C = n.length; r < C; ) {
              var G = r++,
                y = jd;
              jd = w;
              w = n[G];
              G = jd.x - y.x;
              y = jd.y - y.y;
              var A = w.x - jd.x,
                N = w.y - jd.y;
              0 < y * N &&
                0 > G * N - y * A &&
                ((G = Math.sqrt(
                  1 -
                    (G * A + y * N) /
                      Math.sqrt((G * G + y * y) * (A * A + N * N)),
                )),
                null == G && (G = 0.5),
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < G &&
                  ((y = 0 < y ? d : q),
                  (0 == y.length || B.distance(y[y.length - 1], jd) > c) &&
                    y.push(jd)));
            }
            p.push(n);
          }
          r = p;
          b.curves = r;
          if (M.treeShadows && 3 != x.shadingMode) {
            p = [];
            for (h = 0; h < r.length; )
              ((n = r[h]),
                ++h,
                (n = sc.translate(n, k / 2, k)),
                p.push(0 == x.shadingMode ? n : kc.render(n, !0)));
            a.useBrush(m(a, a.middle), x.black, x.thin);
            a.fillMultiArea(p, Ia.shadowHatching);
          }
          if (!(Ia.frontTrees || (M.treeShadows && 2 == x.shadingMode))) {
            p = bc.lerp(f.getColor(), x.black, x.alpha);
            a.g.lineStyle(x.normal, p);
            for (p = 0; p < r.length; )
              for (
                n = r[p], ++p, w = n.length, jd = n[w - 1], h = 0, t = w;
                h < t;

              )
                ((G = h++),
                  (y = jd),
                  (jd = n[G]),
                  y.x > jd.x &&
                    ((w = ta.lerp(y, jd)), a.line(w.x, w.y, w.x, w.y + k)));
            a.end();
          }
          a.drawNormal();
          a.fill(f.getColor());
          p = [];
          for (h = 0; h < r.length; ) ((n = r[h]), ++h, p.push(f.getCloud(n)));
          a.multiPolygon(p);
          a.end();
          a.drawNormal();
          p = 0;
          for (h = b.inner; p < h.length; )
            for (
              b = h[p], ++p, t = 0, r = pe.get(b.data, 2 * c, 0.5);
              t < r.length;

            )
              ((w = r[t]),
                ++t,
                (b =
                  c *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
                (y = new B(w.x + -b, w.y)),
                (jd = new B(w.x + b, w.y)),
                (b = new B(
                  w.x,
                  w.y +
                    -b *
                      (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3),
                )),
                (b = xc.resampleOpen(kc.render([y, b, jd], !1), g)),
                (n = xc.wobbleFixedInner(b, 0.8 * g)),
                a.polyline(f.getFold(n)));
          c = fa.hexInner - Ia.inset;
          Ia.frontTrees ? a.drawThin() : a.drawNormal();
          h = function (b, d) {
            var k =
                c *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
              p = d ? new B(b.x + -k, b.y + 0.4 * -k) : b;
            b = d ? b : new B(b.x + k, b.y + 0.4 * -k);
            d = d ? new B(p.x + 0.6 * k, p.y) : new B(b.x + 0.6 * -k, b.y);
            p = xc.resampleOpen(kc.render([p, d, b], !1), 0.8 * g);
            p = xc.wobbleFixedInner(p, 0.5 * g);
            a.polyline(f.getFold(p));
          };
          for (p = 0; p < d.length; ) ((t = d[p]), ++p, h(t, !0));
          for (p = 0; p < q.length; ) ((t = q[p]), ++p, h(t, !1));
        }
      };
      Ia.drawFront = function (a, b) {
        var c = 0;
        for (a = a.islands; c < a.length; ) {
          var d = a[c];
          ++c;
          var f = 0;
          for (d = d.forests; f < d.length; ) {
            var g = d[f];
            ++f;
            var k = Ia.type;
            k = null != k ? k : g.type;
            if (null != k.getDist) {
              var q = k.getDist(),
                p = k.getBump() / 2 + k.getTrunk() * x.clutterScale,
                l = 0;
              for (g = g.curves; l < g.length; ) {
                var h = g[l];
                ++l;
                h = xc.resampleClosed(h, q);
                for (
                  var n = h.length, t = h[n - 2], w = h[n - 1], r = 0;
                  r < n;

                ) {
                  var C = r++,
                    m = t;
                  t = w;
                  w = h[C];
                  t.x < m.x &&
                    w.x < t.x &&
                    ((C = k.getSprite()),
                    C.set_x(t.x),
                    C.set_y(t.y + p),
                    b.push(C));
                }
              }
            }
          }
        }
      };
      Ia.drawWood = function (a, b) {
        var c = Ia.type;
        Ia.drawGrove(a, null != c ? c : a.type, b);
      };
      Ia.drawUngroupForests = function (a, b) {
        var c = 0;
        for (a = a.forests; c < a.length; ) {
          var d = a[c];
          ++c;
          var f = Ia.type;
          f = null != f ? f : d.type;
          if (null == f.getDist) {
            var g = 0;
            for (d = d.faces; g < d.length; ) {
              var k = d[g];
              ++g;
              Ia.drawGrove(k.data.terrain, f, b);
            }
          }
        }
      };
      Ia.drawGrove = function (a, b, c) {
        var d = 0;
        for (a = a.getTrees(); d < a.length; ) {
          var f = a[d];
          ++d;
          var g = b.getSprite();
          g.set_x(f.x);
          g.set_y(f.y);
          c.push(g);
        }
      };
      Ia.drawOrphans = function (a, b) {
        for (var c = a.data.center, d = (a = a.halfEdge), f = !0; f; ) {
          var g = d;
          d = d.next;
          f = d != a;
          var k = g.twin;
          k = null != k ? k.face.data.terrain : null;
          if (k instanceof Nb) {
            var q = Ia.type;
            for (k = null != q ? q : xa.__cast(k, Nb).type; ; ) {
              q = 0.4;
              null == q && (q = 0.5);
              if (
                !((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < q)
              )
                break;
              q = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
              null == q && (q = 0.5);
              q = ta.lerp(
                ta.lerp(g.origin.point, g.next.origin.point, q),
                c,
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
              );
              var p = k.getSprite();
              p.set_x(q.x);
              p.set_y(q.y);
              b.push(p);
            }
          }
        }
      };
      var Jb = function () {
        this.isDirty = !0;
        T.call(this);
      };
      h['com.watabou.perilous.mapping.LabelsLayer'] = Jb;
      Jb.__name__ = 'com.watabou.perilous.mapping.LabelsLayer';
      Jb.__super__ = T;
      Jb.prototype = u(T.prototype, {
        update: function (a) {
          this.removeChildren();
          var b = x.normal * (Th.get_screenDPI() / 72);
          Jb.outlineGlow =
            x.outlineColor != x.textColor
              ? [new dd(x.outlineColor, 1, b, b, 64, 3)]
              : null;
          a = a.getFeatures();
          for (b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            if (!(c instanceof Uc) || M.showTowns)
              if (!(c instanceof Je) || M.showDangers) {
                var d = null;
                if (c instanceof Uc) d = new pi(c);
                else if (c instanceof Je) d = new qi(c);
                else if (c instanceof Od) {
                  d = [];
                  for (var f = 0, g = c.faces; f < g.length; ) {
                    var k = g[f];
                    ++f;
                    -1 == a.indexOf(k.data.site) && d.push(k);
                  }
                  d = [d];
                  g = ec.outline(d[0]);
                  if (1 < g.length) {
                    f = [];
                    k = 1;
                    for (var q = g.length; k < q; ) {
                      var p = k++;
                      p = ec.floodFill(
                        g[p][0].twin.face,
                        (function (a) {
                          return function (b) {
                            return -1 == a[0].indexOf(b);
                          };
                        })(d),
                      );
                      for (var l = 0; l < p.length; ) {
                        var h = p[l];
                        ++l;
                        f.push(h);
                      }
                    }
                    for (g = 0; g < f.length; )
                      ((k = f[g]),
                        ++g,
                        k.data.land &&
                          ((q = k.data.getFeature()),
                          -1 == a.indexOf(q) && d[0].push(k)));
                  }
                  c = c.getName();
                  d = Jb.mode == Jb.CURVED ? new Af(d[0], c) : new Pd(d[0], c);
                }
                null != d && this.addChild(d);
              }
          }
          this.outline(x.outlineColor != x.textColor);
          this.isDirty = !1;
        },
        outline: function (a) {
          for (var b = 0, c = this.get_numChildren(); b < c; ) {
            var d = b++;
            xa.__cast(this.getChildAt(d), qe).setOutline(a);
          }
        },
        exportAsPNG: function () {
          for (var a = 0, b = this.get_numChildren(); a < b; ) {
            var c = a++;
            xa.__cast(this.getChildAt(c), qe).exportAsPNG();
          }
        },
        __class__: Jb,
      });
      var il = function () {};
      h['com.watabou.perilous.mapping.LandView'] = il;
      il.__name__ = 'com.watabou.perilous.mapping.LandView';
      il.draw = function (a, b, c, d) {
        var f = null != b.set_mask(d);
        if (f) {
          d = new oc(d, !0);
          d.fill(16711680);
          for (var g = 0, k = a.islands; g < k.length; ) {
            var q = k[g];
            ++g;
            for (var p = [], l = q.coasts.iterator(); l.hasNext(); ) {
              var h = l.next();
              p.push(h);
            }
            d.multiPolygon(p);
          }
          g = fa.hexRadius * x.landBorderWidth;
          var n = 0.5 * -g * (1 - fa.vantage);
          d = new oc(b, !0);
          d.fill(x.earth);
          d.draw(x.landShadeColor, g);
          g = 0;
          for (k = a.islands; g < k.length; ) {
            q = k[g];
            ++g;
            p = [];
            for (l = q.coasts.iterator(); l.hasNext(); )
              ((h = l.next()), p.push(h));
            d.multiPolygon(p, 0, n);
          }
        }
        d = new oc(c, !0);
        g = 0;
        for (k = a.islands; g < k.length; ) {
          q = k[g];
          ++g;
          f || d.fill(x.earth);
          d.drawThick();
          p = [];
          for (l = q.coasts.iterator(); l.hasNext(); )
            ((h = l.next()), p.push(h));
          d.multiPolygon(p);
          d.end();
          if (4 != x.shadingMode)
            for (
              d.useBrush(null, x.black, x.thick), a = 0, b = q.nicks;
              a < b.length;

            )
              ((c = b[a]), ++a, d.trueStroke(c));
          jl.draw(d, q.rivers);
          M.individualTrees || Ia.draw(d, q);
          d.end();
        }
      };
      var Vb = function () {};
      h['com.watabou.perilous.mapping.MountainsView'] = Vb;
      Vb.__name__ = 'com.watabou.perilous.mapping.MountainsView';
      Vb.draw = function (a) {
        var b =
            -1 != a.bp.tags.indexOf('highland')
              ? 1.2
              : -1 != a.bp.tags.indexOf('lowland')
                ? 0.8
                : 1,
          c = [],
          d = 0;
        for (a = a.islands; d < a.length; ) {
          var f = a[d];
          ++d;
          var g = [],
            k = 0;
          for (f = f.faces; k < f.length; ) {
            var q = f[k];
            ++k;
            Vb.drawPeaks(q.data) && g.push(q);
          }
          for (g = [g]; !da.isEmpty(g[0]); ) {
            k = ec.floodFill(
              g[0][0],
              (function (a) {
                return function (b) {
                  return -1 != a[0].indexOf(b);
                };
              })(g),
            );
            if (1 == k.length) c.push(Vb.getLonely(k[0], b));
            else
              for (f = Vb.getRange(k, b), q = 0; q < f.length; ) {
                var p = f[q];
                ++q;
                c.push(p);
              }
            da.removeAll(g[0], k);
          }
        }
        return c;
      };
      Vb.drawPeaks = function (a) {
        var b = a.site;
        return a.mountain ? (null != b ? b instanceof bf : !0) : !1;
      };
      Vb.getRange = function (a, b) {
        for (var c = ec.outline(a), d = [], f = 0; f < c.length; ) {
          var g = c[f];
          ++f;
          d.push(nd.toPoly(g));
        }
        c = d;
        var k = Vb.halfBase / Vb.density;
        null == Vb.pattern &&
          ((Vb.pattern = new gh(10 * k, 10 * k, k)), Vb.pattern.uneven(0.3));
        var q = Vb.pattern.fill(new gi(c));
        d = [];
        for (f = 0; f < q.length; ) {
          var p = q[f];
          ++f;
          var l = Infinity;
          for (g = 0; g < q.length; ) {
            var h = q[g];
            ++g;
            h != p && ((h = B.distance(p, h)), l > h && (l = h));
          }
          for (h = 0; h < c.length; ) {
            g = c[h];
            ++h;
            for (var n = g.length, t = 0, w = n; t < w; ) {
              var x = t++;
              x = Math.sqrt(Vb.dist2segSq(p, g[x], g[(x + 1) % n]));
              l > x && (l = x);
            }
          }
          for (g = 0; g < a.length; )
            for (h = a[g], ++g, n = h = h.halfEdge, t = !0; t; )
              ((w = n),
                (n = n.next),
                (t = n != h),
                null != w.data.river &&
                  ((w =
                    Math.sqrt(
                      Vb.dist2segSq(p, w.origin.point, w.next.origin.point),
                    ) / 1.2),
                  l > w && (l = w)));
          l /= k;
          0.3 <= l &&
            ((l = new ic(Vb.halfBase * l, b * Vb.height * Math.pow(l, 2))),
            l.set_x(p.x),
            l.set_y(p.y),
            d.push(l));
        }
        return d;
      };
      Vb.getLonely = function (a, b) {
        a = a.data.center;
        var c =
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3 -
          0.5;
        a = a.add(
          B.polar(
            c * Vb.halfBase,
            Math.PI *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
          ),
        );
        c = 1 - Math.abs(c);
        b = new ic(Vb.halfBase * c, b * Vb.height * Math.pow(c, 2));
        b.set_x(a.x);
        b.set_y(a.y + fa.hexRadius / 3);
        return b;
      };
      Vb.distSq = function (a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return c * c + a * a;
      };
      Vb.dist2segSq = function (a, b, c) {
        var d = Vb.distSq(b, c);
        if (0 == d) return Vb.distSq(a, b);
        var f = c.x - b.x;
        c = c.y - b.y;
        d = ((a.x - b.x) * f + (a.y - b.y) * c) / d;
        d = ac.gate(d, 0, 1);
        return Vb.distSq(a, new B(b.x + d * f, b.y + d * c));
      };
      var le = function (a) {
        this.tfCache = [];
        T.call(this);
        this.map = a;
      };
      h['com.watabou.perilous.mapping.NumbersLayer'] = le;
      le.__name__ = 'com.watabou.perilous.mapping.NumbersLayer';
      le.getPlacing = function (a) {
        a = Da.get('numbersPos', 'Top');
        if ('Center' == a) return le.center;
        switch (fa.tiltMode) {
          case 0:
            var b = (1 - fa.hexInner / fa.hexRadius) / 2,
              c = 0;
            'Bottom' == a && ((b = 1 - b), (c = 1));
            return function (a, d) {
              d = ta.lerp(d[1], d[4], b);
              a.set_x(d.x - a.get_width() / 2);
              a.set_y(d.y - a.get_height() * c);
            };
          case 1:
            var d = fa.hexRadius - fa.hexInner,
              f = 0;
            'Bottom' == a && ((d = 2 * fa.hexRadius - d), (f = 1));
            return function (a, b) {
              a.set_x(b[1].x - a.get_width() / 2);
              a.set_y(b[1].y + d - a.get_height() * f);
            };
          case 2:
            var g = 'Top' == a ? 0 : 3,
              k = 'Top' == a ? 1 : 4,
              q = 'Top' == a ? 0 : 1;
            return function (a, b) {
              a.set_x((b[g].x + b[k].x - a.get_width()) / 2);
              a.set_y(b[g].y - a.get_height() * q);
            };
          default:
            return le.center;
        }
      };
      le.center = function (a, b) {
        a.set_x((b[0].x + b[3].x) / 2 - a.get_width() / 2);
        a.set_y((b[0].y + b[3].y) / 2 - a.get_height() / 2);
      };
      le.customize = function () {
        null == w.findForm(ph) && w.showDialog(new ph());
      };
      le.__super__ = T;
      le.prototype = u(T.prototype, {
        reset: function (a) {
          this.map.removeChild(this);
          this.update(a);
        },
        update: function (a) {
          this.set_visible(M.showNumbers && 0 != M.gridMode);
          null == this.parent && this.get_visible() && this.draw(a);
        },
        draw: function (a) {
          if (null != a) {
            this.map.addNumbers();
            for (var b = 0, c = this.get_numChildren(); b < c; ) {
              var d = b++;
              this.tfCache.push(this.getChildAt(d));
            }
            this.removeChildren();
            d = rc.format(
              'ui_font_mono',
              Da.get('numbersSize', 14),
              M.getGridColor(),
            );
            var f = le.getPlacing(a);
            b = 0;
            for (c = a.dcel.faces; b < c.length; ) {
              var g = c[b];
              ++b;
              if (M.oceanTiles || g.data.land) {
                g = g.data.poly;
                var k = a.indices.h[g[0].__id__],
                  q = P.lpad(null == k.x ? 'null' : '' + k.x, '0', 2);
                k = P.lpad(null == k.y ? 'null' : '' + k.y, '0', 2);
                q = P.replace(q + k, '0', 'O');
                0 < this.tfCache.length
                  ? ((k = this.tfCache.pop()),
                    k.set_defaultTextFormat(d),
                    k.set_text(q))
                  : (k = rc.get(q, d));
                q = k;
                f(q, g);
                this.addChild(q);
              }
            }
          }
        },
        __class__: le,
      });
      var ce = function () {
        T.call(this);
        this.tide = new T();
        this.addChild(this.tide);
        this.routes = new T();
        this.addChild(this.routes);
      };
      h['com.watabou.perilous.mapping.OceanView'] = ce;
      ce.__name__ = 'com.watabou.perilous.mapping.OceanView';
      ce.drawContour = function (a, b, c, d) {
        0 < d &&
          ((c += 2 * x.thin),
          1 == d
            ? (a.draw(x.contours, c), a.multiPolygon(b))
            : ((d = ce.getTidePattern(d)),
              a.g.lineStyle(c, x.contours, null, null, null, 0),
              a.dashedMultiPolygon(b, d)));
      };
      ce.drawBand = function (a, b, c, d) {
        a.draw(d, c);
        a.multiPolygon(b);
      };
      ce.getTidePattern = function (a) {
        var b = 10 / Math.min(a, 1 - a),
          c = [];
        c.push(
          b * a * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b *
            (1 - a) *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b * a * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b *
            (1 - a) *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b * a * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b *
            (1 - a) *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b * a * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b *
            (1 - a) *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b * a * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        c.push(
          b *
            (1 - a) *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        return c;
      };
      ce.__super__ = T;
      ce.prototype = u(T.prototype, {
        draw: function (a, b) {
          this.get_graphics().clear();
          this.tide.get_graphics().clear();
          if (!a.noWater) {
            for (var c = [], d = 0, f = a.rocks; d < f.length; ) {
              var g = f[d];
              ++d;
              var k = g.cell.center,
                q = 0;
              for (g = g.rocks; q < g.length; ) {
                var p = g[q];
                ++q;
                c.push(sc.translate(p, k.x, k.y));
              }
            }
            k = [];
            d = 0;
            for (f = a.islands; d < f.length; )
              for (q = f[d], ++d, q = q.coasts.iterator(); q.hasNext(); )
                ((g = q.next()), k.push(g));
            0 < x.shallowSize &&
              (0 < x.bandsNumber
                ? this.drawTidelines(k, c)
                : this.drawShallow(a));
            M.showRoutes && this.drawRoutes(a);
            this.addChildAt(b, 0 < x.shallowEdge ? 0 : 1);
          }
        },
        drawTidelines: function (a, b) {
          var c = new oc(this.tide),
            d = fa.hexRadius * x.shallowSize,
            f = x.shallowSize / 4;
          null == f && (f = 0.5);
          f = 1 + f;
          for (var g = 0, k = x.bandsNumber; g < k; ) {
            var q = g++,
              p = d * Math.pow(1 - q / x.bandsNumber, f) * 2,
              l = p / 1.5;
            q =
              x.water == x.shallow
                ? x.water
                : bc.lerpHSV(x.water, x.shallow, (q + 1) / x.bandsNumber);
            ce.drawContour(c, b, l, x.shallowEdge);
            ce.drawContour(c, a, p, x.shallowEdge);
            ce.drawBand(c, b, l, q);
            ce.drawBand(c, a, p, q);
          }
        },
        drawShallow: function (a) {
          for (
            var b = [x.shallow, x.shallow, x.shallow],
              c = [1, 0.25, 0],
              d = this.tide.get_graphics(),
              f = 0,
              g = a.islands;
            f < g.length;

          ) {
            var k = g[f];
            ++f;
            for (var q = 0, p = k.faces; q < p.length; ) {
              var l = p[q];
              ++q;
              if (l.data.coastal) {
                k = l.data.center;
                var h = new ua();
                l = da.count(l.getNeighbours(), function (a) {
                  return a.data.land;
                });
                l = fa.hexInner * (1 + (2 * x.shallowSize * (l + 1)) / 4);
                var n = Math.round((255 * fa.hexInner) / l),
                  t = (n + 255) >> 1;
                h.createGradientBox(2 * l, 2 * l, 0, k.x - l, k.y - l);
                d.beginGradientFill(1, b, c, [n, t, 255], h);
                d.drawCircle(k.x, k.y, l);
              }
            }
          }
          c = [0.6, 0.2, 0];
          n = Math.round(255 / (1 + x.shallowSize));
          n = [n, (n + 255) >> 1, 255];
          f = 0;
          for (g = a.rocks; f < g.length; )
            for (
              p = g[f], ++f, k = p.cell.center, q = 0, p = p.circles;
              q < p.length;

            )
              ((l = p[q]),
                ++q,
                (h = new ua()),
                (a = k.add(l.c)),
                (l = l.r * (1 + x.shallowSize)),
                h.createGradientBox(2 * l, 2 * l, 0, a.x - l, a.y - l),
                d.beginGradientFill(1, b, c, n, h),
                d.drawCircle(a.x, a.y, l));
        },
        drawRoutes: function (a) {
          var b = new oc(this.routes, !0);
          b.draw(x.routes, x.normal);
          var c = [10, 10];
          a = a.getNavigation();
          for (var d = a.getCurves(), f = 0, g = a.routes.length; f < g; ) {
            var k = f++;
            a.enabled.h[a.routes[k].__id__] &&
              b.dashedPolyline(uf.smoothOpen(d[k], 8), c);
          }
        },
        __class__: ce,
      });
      var qh = function (a, b, c, d) {
        null == d && (d = 4);
        this.matrix = new ua();
        this.obj = a;
        this.size = c;
        this.quality = d;
        this.color = new Lb();
        this.color.set_color(b);
        Ee.call(this);
        this.update(d);
      };
      h['com.watabou.perilous.mapping.Outline'] = qh;
      qh.__name__ = 'com.watabou.perilous.mapping.Outline';
      qh.__super__ = Ee;
      qh.prototype = u(Ee.prototype, {
        destroy: function () {
          null != this.get_bitmapData() && this.get_bitmapData().dispose();
        },
        update: function (a) {
          null == a && (a = 0);
          this.destroy();
          0 == a && (a = this.quality);
          var b = this.obj.getRect(this.obj),
            c = new $b(Math.ceil(b.width * a), Math.ceil(b.height * a), !0, 0);
          this.matrix.identity();
          this.matrix.translate(-b.get_left(), -b.get_top());
          this.matrix.scale(a, a);
          c.draw(this.obj, this.matrix, null, null, null, !0);
          c.colorTransform(c.rect, this.color);
          for (
            var d = new $b(
                Math.ceil((b.width + 2 * this.size) * a),
                Math.ceil((b.height + 2 * this.size) * a),
                !0,
                0,
              ),
              f = Math.ceil(a * this.size * 6),
              g = 0;
            g < f;

          ) {
            var k = g++;
            k = B.polar(this.size, (k / f) * 2 * Math.PI);
            k.offset(this.size, this.size);
            this.matrix.identity();
            this.matrix.translate(k.x * a, k.y * a);
            d.draw(c, this.matrix, null, null, null, !0);
          }
          c.dispose();
          this.set_bitmapData(d);
          this.smoothing = !0;
          this.set_scaleX(this.set_scaleY(1 / a));
          this.set_x(this.obj.get_x() + b.get_left() - this.size);
          this.set_y(this.obj.get_y() + b.get_top() - this.size);
        },
        __class__: qh,
      });
      var jl = function () {};
      h['com.watabou.perilous.mapping.RiversView'] = jl;
      jl.__name__ = 'com.watabou.perilous.mapping.RiversView';
      jl.draw = function (a, b) {
        for (var c = M.hollowRivers, d = new va(), f = 0; f < b.length; ) {
          var g = b[f];
          ++f;
          var k = x.ultraThin,
            q = g.start;
          null == q && (q = 0.5);
          var p = x.ultraThin,
            l = g.end;
          null == l && (l = 0.5);
          if (c) {
            var h = x.thin;
            var n = g.start;
            null == n && (n = 0.5);
            h = 2 * (h + (x.normal - h) * n);
          } else h = 0;
          if (c) {
            n = x.thin;
            var t = g.end;
            null == t && (t = 0.5);
            n = 2 * (n + (x.normal - n) * t);
          } else n = 0;
          d.set(g, [k + (x.river - k) * q, p + (x.river - p) * l, h, n]);
        }
        f = d;
        if (
          x.landBorderColor != x.earth &&
          0 < x.landBorderAlpha &&
          0 < x.landBorderWidth &&
          M.riverBanks
        )
          for (
            q = 2 * Math.min(x.landBorderWidth * fa.hexRadius, x.river), d = 0;
            d < b.length;

          )
            ((g = b[d]),
              ++d,
              (k = f.h[g.__id__]),
              a.useBrush(
                null,
                x.landShadeColor,
                k[0] + k[2] + q * g.start,
                k[1] + k[3] + q * g.end,
              ),
              a.trueStroke(g.poly));
        if (4 != x.shadingMode || !c)
          for (d = 0; d < b.length; )
            ((g = b[d]),
              ++d,
              (k = f.h[g.__id__]),
              (q = k[0] + k[2]),
              (k = k[1] + k[3]),
              a.useBrush(null, x.rivers, q, k),
              a.trueStroke(g.poly),
              a.fill(x.rivers),
              (l = g.poly[g.poly.length - 1]),
              a.circle(l.x, l.y, k / 2),
              (l = g.poly[0]),
              (k = g.poly[1]),
              (g = vg.rect(q, q)),
              (q = k.subtract(l)),
              (q = Math.atan2(q.y, q.x)),
              sc.asRotateYX(g, Math.sin(q), Math.cos(q)),
              sc.asTranslate(g, l.x, l.y),
              a.polygon(g),
              a.end());
        if (c)
          for (d = 0; d < b.length; )
            ((g = b[d]),
              ++d,
              (k = f.h[g.__id__]),
              a.useBrush(null, x.shallow, k[0], k[1]),
              a.trueStroke(g.poly),
              1 == g.start &&
                ((c = g.poly[0]),
                (l = g.poly[1]),
                (q = c.subtract(l)),
                (l = Math.max(x.thick, x.river)),
                null == l && (l = 1),
                (q = q.clone()),
                q.normalize(l),
                (q = c.add(q)),
                a.draw(x.shallow, x.river),
                a.line(c.x, c.y, q.x, q.y),
                a.end()),
              (l = g.poly[g.poly.length - 1]),
              a.fill(x.shallow),
              a.circle(l.x, l.y, k[1] / 2),
              a.end());
      };
      var pe = function () {};
      h['com.watabou.perilous.mapping.Scattering'] = pe;
      pe.__name__ = 'com.watabou.perilous.mapping.Scattering';
      pe.get = function (a, b, c) {
        null == c && (c = 1);
        var d = fa.vantage,
          f = Math.floor(
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 2,
          ),
          g = '' + b + '-' + c + '-' + d + '-' + f,
          k = pe.cache.h[g];
        null == k &&
          (0 == f &&
            (b *= Math.pow(
              2,
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3 -
                0.5,
            )),
          (f = Math.max(10 * b, 2 * fa.hexRadius)),
          (k = new gh(f, f, b)),
          1 > c && k.uneven(1 - c),
          1 != d && k.scale(1, d),
          (pe.cache.h[g] = k));
        return k.fill(new vf(a.getLand()));
      };
      pe.some = function (a, b, c, d) {
        a = pe.get(a, b);
        return da.subset(
          a,
          Math.floor(
            c +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) *
                (d - c),
          ),
        );
      };
      var $f = function () {
        this.view = new na();
        this.stickers = new va();
        $f.inst = this;
        T.call(this);
      };
      h['com.watabou.perilous.mapping.StickerLayer'] = $f;
      $f.__name__ = 'com.watabou.perilous.mapping.StickerLayer';
      $f.placeAround = function (a, b, c) {
        a += 2 * c;
        b += 2 * c;
        c = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 - 0.5;
        var d = a / (a + b);
        null == d && (d = 0.5);
        return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d
          ? new B(
              a * c,
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                ? -b / 2
                : b / 2,
            )
          : new B(
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                ? -a / 2
                : a / 2,
              b * c,
            );
      };
      $f.__super__ = T;
      $f.prototype = u(T.prototype, {
        clear: function () {
          for (var a = this.stickers, b = a.keys(); b.hasNext(); ) {
            var c = b.next();
            c = a.get(c);
            this.removeChild(c);
          }
          this.stickers = new va();
        },
        recreate: function () {
          var a = new va(),
            b = this.stickers,
            c = b;
          for (b = b.keys(); b.hasNext(); ) {
            var d = b.next(),
              f = c.get(d);
            a.set(
              d,
              new B(
                f.content.get_x() + f.content.get_width() / 2,
                f.content.get_y() + f.content.get_height() / 2,
              ),
            );
          }
          this.clear();
          c = b = a;
          for (b = b.keys(); b.hasNext(); )
            ((d = b.next()), (a = f = c.get(d)), this.add(d, !0).set_offset(a));
        },
        add: function (a, b) {
          null == b && (b = !1);
          this.remove(a) && (a = null);
          b || this.clear();
          if (null != a) {
            b = a.getName();
            var c = a.getInfo();
            b = M.showInfo && null != c ? Wb.titleNdesc(b, c) : Wb.title(b);
            b.set_x(a.cell.center.x);
            b.set_y(a.cell.center.y);
            this.addChild(b);
            this.place(b);
            this.stickers.set(a, b);
            return b;
          }
          return null;
        },
        remove: function (a) {
          return null != a && null != this.stickers.h.__keys__[a.__id__]
            ? (this.removeChild(this.stickers.h[a.__id__]),
              this.stickers.remove(a),
              !0)
            : !1;
        },
        update: function (a) {
          this.remove(a) && this.add(a, !0);
        },
        place: function (a) {
          for (
            var b = Infinity,
              c = null,
              d = fa.inst,
              f = [],
              g = 0,
              k = d.islands;
            g < k.length;

          ) {
            var q = k[g];
            ++g;
            var p = 0;
            for (q = q.towns; p < q.length; ) {
              var h = q[p];
              ++p;
              f.push(h);
            }
          }
          g = 0;
          for (k = d.dangers; g < k.length; ) ((d = k[g]), ++g, f.push(d));
          for (g = 0; 100 > g; )
            if (
              (g++,
              (d = $f.placeAround(
                a.rectWidth,
                a.rectHeight,
                50 *
                  (1 +
                    Math.abs(
                      ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        2 -
                        1,
                    )),
              )),
              (p = a.rectAt(d)),
              this.view.containsRect(p))
            ) {
              q = 0;
              for (k = this.stickers.iterator(); k.hasNext(); )
                ((h = k.next()),
                  h != a &&
                    ((h = h.rectAt().intersection(p)),
                    (q += h.width * h.height)));
              p.inflate(2 * fa.hexRadius, 2 * fa.hexRadius);
              for (k = 0; k < f.length; )
                ((h = f[k]),
                  ++k,
                  p.containsPoint(h.cell.center) && (q += p.width * p.height));
              if (b > q && ((b = q), (c = d), 0 >= b)) break;
            }
          a.set_offset(null != c ? c : new B());
        },
        __class__: $f,
      });
      var me = function () {};
      h['com.watabou.perilous.mapping.SvgExporter'] = me;
      me.__name__ = 'com.watabou.perilous.mapping.SvgExporter';
      me.export = function (a, b) {
        var c = a.width,
          d = a.height * fa.vantage,
          f = ja.create(c, d, x.water);
        ja.substituteFont = me.fixFontNames;
        ja.handleObject = re.handleTooltips;
        var g = new re(a);
        b.addChild(g);
        var k = ja.drawSprite(b);
        Ea.clearTransform(k);
        Ea.translate(k, c / 2, d / 2);
        c = ja.getImports();
        f.root.addChild(c);
        c = ja.getGradients();
        f.root.addChild(c);
        f.root.addChild(k);
        b.removeChild(g);
        je.saveText(
          '<?xml version="1.0" encoding="UTF-8" standalone="no"?>' +
            Vf.print(f.root),
          a.getFileName() + '.svg',
          'image/svg+xml',
        );
      };
      me.fixFontNames = function (a) {
        if (!me.embeddedScanned) {
          me.embeddedScanned = !0;
          for (
            var b = new Ja(),
              c = me.embedded.h,
              d = Object.keys(c),
              f = d.length,
              g = 0;
            g < f;

          ) {
            var k = d[g++],
              q = c[k];
            k = Rb.getFont(k).name;
            b.h[k] = { name: q.name, url: q.url };
          }
          me.embedded = b;
        }
        q = me.embedded.h[a];
        return null != q
          ? (ja.addImport(q.url), q.name)
          : ja.substituteGenerics(a);
      };
      var re = function (a) {
        T.call(this);
        var b = a.getFeatures();
        a = [];
        for (var c = 0, d = b; c < d.length; ) {
          var f = d[c];
          ++c;
          f instanceof Od && a.push(f);
        }
        var g = a;
        for (a = 0; a < g.length; ) {
          f = g[a];
          ++a;
          c = xa.__cast(f, Od);
          f = new T();
          f.set_name(re.getText(c));
          var k = ec.outline(c.faces);
          c = [];
          for (d = 0; d < k.length; ) {
            var q = k[d];
            ++d;
            c.push(nd.toPoly(q));
          }
          d = c;
          c = f.get_graphics();
          c.beginFill(65280);
          for (k = 0; k < d.length; ) ((q = d[k]), ++k, Tc.drawPolygon(c, q));
          this.addChild(f);
        }
        a = [];
        c = 0;
        for (d = b; c < d.length; )
          ((f = d[c]), ++c, f instanceof pd && a.push(f));
        b = a;
        for (a = 0; a < b.length; )
          ((g = b[a]),
            ++a,
            (f = new T()),
            f.set_name(re.getText(g)),
            (c = f.get_graphics()),
            c.beginFill(16711680),
            Tc.drawPolygon(c, g.cell.poly),
            this.addChild(f));
      };
      h['com.watabou.perilous.mapping.TooltipLayer'] = re;
      re.__name__ = 'com.watabou.perilous.mapping.TooltipLayer';
      re.getText = function (a) {
        var b = a.getName();
        a = a.getInfo();
        return b + (M.showInfo && null != a ? '\n' + a : '');
      };
      re.handleTooltips = function (a) {
        if (a instanceof re) {
          a = xa.__cast(a, re);
          var b = Ea.group('features');
          Ea.setOpacity(b, 0);
          for (var c = 0, d = a.get_numChildren(); c < d; ) {
            var f = c++,
              g = a.getChildAt(f);
            f = ja.drawSprite(g);
            var k = ia.createElement('title');
            g = ia.createPCData(g.get_name());
            k.addChild(g);
            f.addChild(k);
            b.addChild(f);
          }
          return b;
        }
        return null;
      };
      re.__super__ = T;
      re.prototype = u(T.prototype, { __class__: re });
      var jc = function () {};
      h['com.watabou.perilous.mapping.clouds.Cloud'] = jc;
      jc.__name__ = 'com.watabou.perilous.mapping.clouds.Cloud';
      jc.draw = function (a, b, c, d, f) {
        null == f && (f = 0);
        var g =
            b +
            (c - b) *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3),
          k = new B(b, 0),
          q = new B(c, 0),
          p = Math.max(-d, f),
          h = function () {
            return Math.pow(
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
              2,
            );
          };
        c = [
          k,
          new B(
            b +
              (g - b) *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            d * h(),
          ),
          new B(g, d),
          new B(
            g +
              (c - g) *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            d * h(),
          ),
          q,
          new B(
            c +
              (g - c) *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            f * h(),
          ),
          new B(g, f),
          new B(
            g +
              (b - g) *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            f * h(),
          ),
        ];
        c = kc.render(c, !0, 3, [k, q]);
        k = c.splice(0, c.length >> 2);
        for (b = 0; b < k.length; ) ((q = k[b]), ++b, c.push(q));
        k = [c[0]];
        b = new xg(c.concat([c[0]]));
        for (q = 0; ; )
          if (
            ((q +=
              jc.chord *
              Math.pow(2, (Math.abs(k[k.length - 1].y) / p) * 2 - 1) *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647)),
            (f = b.getPos(q)),
            null != f)
          )
            k.push(f);
          else break;
        p = xc.distort(k);
        a.fill(jc.fillColor);
        a.draw(jc.fillColor, x.normal);
        a.polygon(p);
        a.end();
        c = p.length;
        b = [];
        for (d = 0; d < c; )
          ((f = d++),
            (k = new qk(p[f], p[(f + 1) % c])),
            (q =
              (1 -
                jc.chaos *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )) /
              jc.fluffiness),
            (q = Math.PI * Math.pow(k.d / (k.d + jc.chord), q)),
            k.setSinCos(Math.sin(q), Math.cos(q)),
            a.fill(jc.fillColor),
            (f = k.p0),
            a.g.moveTo(f.x, f.y),
            jc.drawArc(a.g, k.c.x, k.c.y, k.r, k.a0, k.a1),
            a.end(),
            4 != x.shadingMode &&
              (a.draw(x.black, x.thick),
              (q = k.p0),
              a.g.moveTo(q.x, q.y),
              jc.drawArc(a.g, k.c.x, k.c.y, k.r, k.a0, k.a1),
              a.end()),
            b.push(k));
        q = b;
        if (4 != x.shadingMode)
          for (
            a.useBrush(m(a, a.decay), x.black, x.thick, x.thin),
              c = [],
              q.sort(function (a, b) {
                a = b.d - a.d;
                return 0 == a ? 0 : 0 > a ? -1 : 1;
              });
            0 < q.length;

          ) {
            f =
              (q.length *
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                )) |
              0;
            k = q[f];
            q.splice(f, 1);
            d = new bi(k.c, k.r);
            f = !0;
            for (b = 0; b < c.length; )
              if (((g = c[b]), ++b, d.overlaps(g))) {
                f = !1;
                break;
              }
            f &&
              ((f = B.polar(-k.r, (k.a0 + k.a1) / 2).add(k.c)),
              (f = Yc.containsPoint(p, f)));
            if (f) {
              b = k.r;
              f = b / ((2 * Math.PI) / jc.minAngle) / jc.swirlTurns;
              if (0 > k.v.x * k.v.y) {
                g = k.a1;
                h = jc.minAngle;
                var t = [k.p1];
              } else ((g = k.a0), (h = -jc.minAngle), (t = [k.p0]));
              for (var n = b * (1 - jc.swirlDepth); (b -= f) > n; )
                ((g += h), t.push(B.polar(b, g).add(k.c)));
              a.trueStroke(t);
              k = c.push(d);
              k /= k + 4;
              null == k && (k = 0.5);
              if ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < k)
                break;
            }
          }
      };
      jc.drawArc = function (a, b, c, d, f, g) {
        for (var k = Math.ceil((g - f) / jc.minAngle), q = 0; q < k; ) {
          var p = q++;
          p = B.polar(d, f + ((p + 1) / k) * (g - f));
          p = new B(p.x + b, p.y + c);
          a.lineTo(p.x, p.y);
        }
      };
      var qk = function (a, b) {
        this.p0 = a;
        this.p1 = b;
        this.v = b.subtract(a);
        this.d = this.v.get_length();
      };
      h['com.watabou.perilous.mapping.clouds._Cloud.CloudSeg'] = qk;
      qk.__name__ = 'com.watabou.perilous.mapping.clouds._Cloud.CloudSeg';
      qk.prototype = {
        setSinCos: function (a, b) {
          this.r = this.d / 2 / a;
          var c = -this.r * b;
          this.c = ta.lerp(this.p0, this.p1);
          a = this.v;
          b = new B(-a.y, a.x);
          a = this.c;
          c = -c / this.d;
          b = new B(b.x * c, b.y * c);
          a.x += b.x;
          a.y += b.y;
          a = this.p0.subtract(this.c);
          this.a0 = Math.atan2(a.y, a.x);
          a = this.p1.subtract(this.c);
          this.a1 = Math.atan2(a.y, a.x);
          this.a1 < this.a0 && (this.a1 += 2 * Math.PI);
        },
        __class__: qk,
      };
      var li = function () {
        T.call(this);
      };
      h['com.watabou.perilous.mapping.clouds.CloudsLayer'] = li;
      li.__name__ = 'com.watabou.perilous.mapping.clouds.CloudsLayer';
      li.__super__ = T;
      li.prototype = u(T.prototype, {
        update: function (a) {
          if (this.set_visible(M.showClouds)) {
            this.removeChildren();
            jc.fillColor = x.clouds;
            jc.chord = Math.min(a.width, a.height) / 30;
            var b = a.width / 3,
              c = a.height / 4,
              d = b / 5,
              f = c / 5,
              g = 0.2 * Math.pow(fa.vantage, 2),
              k = a.viewWidth / 2;
            a = a.viewHeight / 2;
            for (var q = [], p = 0; 4 > p; )
              for (var h = p++, t = 0; 10 > t; ) {
                var n = t++,
                  w =
                    ((h +
                      ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3) *
                      Math.PI) /
                    2,
                  r = Math.sqrt(n / 9) * (Math.sqrt(2) - 1);
                n = (1 + r) * Math.cos(w) * k;
                w = (1 + r) * Math.sin(w) * a;
                var C = r;
                null == C && (C = 0.5);
                C = d + (b - d) * C;
                if (
                  !(
                    Math.abs(n) - C > k ||
                    (null == r && (r = 0.5),
                    (r = f + (c - f) * r),
                    w + r * g < -a || w - r > a)
                  )
                ) {
                  var m = new T();
                  m.set_x(n);
                  m.set_y(w);
                  jc.draw(new oc(m), -C, C, -r, r * g);
                  q.push(m);
                }
              }
            q.sort(function (a, b) {
              a = a.get_y() - b.get_y();
              return 0 == a ? 0 : 0 > a ? -1 : 1;
            });
            for (p = 0; p < q.length; ) ((m = q[p]), ++p, this.addChild(m));
          }
        },
        __class__: li,
      });
      var se = function () {};
      h['com.watabou.perilous.mapping.elements.Banner'] = se;
      se.__name__ = 'com.watabou.perilous.mapping.elements.Banner';
      se.draw = function (a, b, c, d) {
        c += 2 * d;
        var f = [-c / 2, c / 2];
        b = se.createCurve(b / 2, d);
        var g = Bf.cutDistant(b, se.fromAbove);
        try {
          var k = se.fromAbove;
          Bf.sortSegments(g, new B(k.x * c, k.y * c), !0);
        } catch (Cl) {
          Ua.lastError = Cl;
          var q = aa.caught(Cl).unwrap();
          console.log(
            'Source/com/watabou/perilous/mapping/elements/Banner.hx:28:',
            q,
          );
        }
        k = c / 4;
        for (var p = c / 4, h = 0, t = g.length; h < t; ) {
          var n = h++;
          n = g[n];
          q = [];
          var w = [];
          var r = Bf.extrudeDistant(n, f, se.fromAbove);
          var C = r[0];
          r = r[1];
          var m = n.length - 1;
          if (n[n.length - 1] == b[b.length - 1] && 0 < k) {
            w = [];
            var G = [],
              y = 0;
            do {
              y += B.distance(n[m--], n[m]);
              if (y > k) break;
              var A = y / k,
                N = r[m],
                u = C[m];
              w.push(ta.lerp(u, N, A / 2));
              G.push(ta.lerp(N, u, A / 2));
            } while (0 < m);
            y > k &&
              ((A = B.distance(n[m + 1], n[m])),
              (A = (k - (y - A)) / A),
              (y = ta.lerp(r[m + 1], r[m], A)),
              (A = ta.lerp(C[m + 1], C[m], A)),
              (y = ta.lerp(y, A)),
              G.push(y));
            w = w.concat(da.revert(G));
          }
          y = 0;
          if (n[0] == b[0] && 0 < p) {
            q = [];
            G = [];
            A = 0;
            do {
              A += B.distance(n[y++], n[y]);
              if (A > p) break;
              N = A / p;
              u = r[y];
              var L = C[y];
              q.push(ta.lerp(L, u, N / 2));
              G.push(ta.lerp(u, L, N / 2));
            } while (y < n.length - 1);
            A > p &&
              ((N = B.distance(n[y - 1], n[y])),
              (N = (p - (A - N)) / N),
              (A = ta.lerp(r[y - 1], r[y], N)),
              (N = ta.lerp(C[y - 1], C[y], N)),
              (A = ta.lerp(A, N)),
              G.push(A));
            q = q.concat(da.revert(G));
          }
          q = C.concat(w).concat(da.revert(q.concat(r)));
          a.drawThick();
          a.fill(x.banner);
          a.polygon(q);
          w = n[1].subtract(n[0]);
          G = se.fromAbove;
          w = w.x * G.y - w.y * G.x;
          0 == x.shadingMode
            ? se.shadeFolds(
                a,
                n,
                r,
                C,
                d / 2,
                n[0] != b[0],
                n[n.length - 1] != b[b.length - 1],
              )
            : 0 < w &&
              (a.useBrush(null, x.black, x.thin), a.fillArea(q, new B(0, 1)));
          if (
            4 != x.shadingMode &&
            (0 > w || 1 == x.shadingMode || 3 == x.shadingMode)
          ) {
            a.useBrush(null, x.black, x.thick);
            q = [];
            for (w = y + 1; w < m; ) ((G = w++), q.push(G));
            m = q;
            q = Fd.$length(n) / c;
            w = q - (q | 0);
            null == w && (w = 0.5);
            for (
              w =
                (q | 0) +
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < w
                  ? 1
                  : 0);
              0 < m.length && 0 < w--;

            )
              ((G = da.pick(m)),
                R.remove(m, G - 1),
                R.remove(m, G + 1),
                (q =
                  0.5 >
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                    ? C[G]
                    : r[G]),
                (G = n[G].subtract(q)),
                (y =
                  x.thick +
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ) *
                    d),
                G.normalize(y),
                a.shortStroke(q, q.add(G)));
          }
        }
      };
      se.createCurve = function (a, b) {
        var c = function (c) {
          var d = a * c,
            g = [new B(d, 0)],
            k = function (a, b) {
              var f = g[g.length - 1].y;
              g.push(
                new B(
                  d + c * a,
                  f -
                    0.5 *
                      b *
                      (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3),
                ),
              );
              g.push(
                new B(
                  d + c * a,
                  f +
                    b +
                    0.5 *
                      b *
                      (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3),
                ),
              );
              g.push(new B(d, f + b));
              c = -c;
            },
            q = function () {
              return Math.pow(
                2,
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1,
              );
            };
          k(b, (b / 2) * q());
          k(b * q(), (b / 2) * q());
          (function (a, b) {
            var f = g[g.length - 1].y;
            g.push(new B(d + (c * b) / 2, f));
            g.push(
              new B(
                d + c * b,
                f +
                  a *
                    (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                      2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      3),
              ),
            );
          })(b, 3 * b);
          return g;
        };
        c = da.revert(c(-1)).concat(c(1));
        return (c = kc.render(c, !1, 2));
      };
      se.shadeFolds = function (a, b, c, d, f, g, k) {
        var q = function (g, k) {
          for (var p = 1, q = b.length; p < q; ) {
            var l = p++ * k;
            if (Math.abs(b[g + l].x - b[g].x) > f) {
              g = new B(b[g].x - b[g + l].x, b[g + l].y - b[g].y);
              g.normalize(1);
              k = function (a, b) {
                return 0 < b ? a.slice(0, b) : a.slice(b);
              };
              l = k(d, l).concat(da.revert(k(c, l)));
              a.fillArea(l, g);
              break;
            }
          }
        };
        a.useBrush(null, x.black, x.normal);
        g && q(0, 1);
        k && q(b.length - 1, -1);
      };
      var Ma = function (a) {
        this.manual = !1;
        this.scale = 0;
        var b = this;
        T.call(this);
        this.rhumbs = new de();
        this.rhumbs.mouseEnabled = !1;
        0 == Ma.convexity && this.init();
        this.update(a);
        this.addEventListener('click', m(this, this.onClick));
        this.addEventListener('rightClick', m(this, this.onRightClick));
        this.addEventListener('mouseWheel', m(this, this.onWheel));
        new ri(this, function () {
          b.manual = !0;
        });
      };
      h['com.watabou.perilous.mapping.elements.Compass'] = Ma;
      Ma.__name__ = 'com.watabou.perilous.mapping.elements.Compass';
      Ma.__super__ = T;
      Ma.prototype = u(T.prototype, {
        init: function () {
          Ma.showRhumbs = Da.get('rhumbs', !0);
          Ma.convexity =
            0.2 +
            0.1 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          Ma.secondary =
            Ma.convexity +
            (1 - Ma.convexity) *
              (0.2 +
                0.8 *
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647));
          Ma.mainRing =
            Ma.convexity +
            (1 - Ma.convexity) *
              (0.2 +
                0.8 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3));
          Ma.auxRing =
            Ma.convexity +
            (1 - Ma.convexity) *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647);
          Ma.north =
            1.4 +
            0.2 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          Ma.south = 1;
          Ma.nipple =
            0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
              ? 0
              : Math.max(0.5 * Ma.convexity, 0.1);
        },
        reroll: function () {
          Ma.convexity =
            0.15 +
            0.2 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647);
          var a = 0.9;
          null == a && (a = 0.5);
          Ma.secondary =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
              ? Ma.convexity +
                (1 - Ma.convexity) *
                  (0.1 +
                    0.9 *
                      ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647))
              : 0;
          a = 0.8;
          null == a && (a = 0.5);
          (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
            ? ((Ma.mainRing =
                Ma.convexity +
                (1 - Ma.convexity) *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
              (Ma.auxRing =
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647))
            : (Ma.mainRing = Ma.auxRing = 0);
          a = Math.pow(1 - Ma.convexity, 2);
          null == a && (a = 0.5);
          (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
            ? ((Ma.north =
                1.3 +
                0.6 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
              (a = 0.7),
              null == a && (a = 0.5),
              (Ma.south =
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
                  ? 1 +
                    (Ma.north - 1) *
                      (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3)
                  : 1))
            : (Ma.north = Ma.south = 1);
          a = 0.3;
          null == a && (a = 0.5);
          (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a &&
            ((Ma.secondary = 1), (Ma.convexity = Math.pow(Ma.convexity, 0.7)));
          a = 0.3;
          null == a && (a = 0.5);
          Ma.nipple =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
              ? Math.min(
                  0.1 +
                    0.2 *
                      ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647),
                  Ma.convexity,
                )
              : 0;
          this.redraw();
        },
        reset: function () {
          this.set_rotation(0);
          this.scale = 0;
          this.redraw();
        },
        update: function (a) {
          this.baseR = a;
          this.redraw();
        },
        redraw: function () {
          this.radius = this.baseR * Math.pow(2, this.scale);
          this.rhumbs.update(this.radius * Ma.mainRing);
          var a = this.get_graphics();
          a.clear();
          a.beginFill(16711680, 0);
          a.drawCircle(0, 0, this.radius);
          a.endFill();
          var b = new oc(this);
          0 < Ma.mainRing &&
            (a.lineStyle(x.thick, x.black),
            b.circle(0, 0, this.radius * Ma.mainRing),
            a.lineStyle(x.normal, x.black),
            b.circle(0, 0, this.radius * Ma.auxRing),
            b.end());
          1 == Ma.secondary
            ? this.drawStarN(b, 8, 1, Ma.convexity)
            : (this.drawStarN(
                b,
                4,
                Ma.secondary,
                Ma.convexity * Ma.secondary,
                0.5,
              ),
              this.drawStarN(b, 4, 1, Ma.convexity));
          0 < Ma.nipple &&
            (b.drawThick(),
            b.fill(x.compass),
            b.circle(0, 0, this.radius * Ma.nipple),
            b.end(),
            b.fill(x.black),
            b.circle(0, 0, x.thick),
            b.end());
        },
        drawStarN: function (a, b, c, d, f) {
          null == f && (f = 0);
          for (var g = (2 * Math.PI) / b, k = [], q = 0, p = b; q < p; ) {
            var l = q++,
              h = this.radius * c;
            0 == f &&
              (l == 3 * (b >> 2) && (h *= Ma.north),
              l == b >> 2 && (h *= Ma.south));
            k.push(B.polar(h, g * (l + f)));
            k.push(B.polar(this.radius * d, g * (l + f + 0.5)));
          }
          a.fill(x.compass);
          a.polygon(k);
          a.useBrush(m(a, a.decay), x.black, x.thin);
          q = 0;
          for (p = b; q < p; )
            ((l = q++),
              a.fillArea(
                [k[2 * l], k[2 * l + 1], Ma.o],
                B.polar(1, g * (1.5 - f - l)),
              ));
          a.end();
          a.drawThick();
          a.polygon(k);
          if (2 != x.shadingMode)
            for (
              a.drawThin(),
                c = function (c) {
                  a.line(k[c].x, k[c].y, k[c + b].x, k[c + b].y);
                },
                q = 0,
                p = b >> 1;
              q < p;

            )
              ((l = q++), c(2 * l), 3 == x.shadingMode && c(2 * l + 1));
          a.end();
        },
        onClick: function (a) {
          a.ctrlKey || a.commandKey
            ? this.reset()
            : a.shiftKey && this.reroll();
          a.stopPropagation();
        },
        onRightClick: function (a) {
          bb.menu.addItem('Compass...', m(this, this.customize));
          bb.menu.addSeparator();
        },
        onWheel: function (a) {
          if (a.commandKey || a.ctrlKey)
            ((a = a.delta),
              (this.scale = ac.gate(
                this.scale + 0.1 * (0 == a ? 0 : 0 > a ? -1 : 1),
                -1,
                1,
              )),
              this.redraw());
          else {
            var b = this.get_rotation();
            a = a.delta;
            this.set_rotation(
              b + (360 / de.NLINES) * (0 == a ? 0 : 0 > a ? -1 : 1),
            );
          }
        },
        place: function (a, b, c, d, f) {
          b += this.radius;
          c += this.radius * Ma.north;
          d -= this.radius;
          f -= this.radius * Ma.south;
          for (
            var g = Math.ceil(this.radius / fa.hexInner),
              k = null,
              q = function (a) {
                return a.land
                  ? null != a.site
                    ? 20
                    : a.mountain || a.riverside || a.coastal
                      ? 5
                      : xa.getClass(a.terrain) != k
                        ? 3
                        : 2
                  : null == a.terrain
                    ? 0
                    : 1;
              },
              p = function (a, b) {
                k = xa.getClass(a.terrain);
                var c = q(a);
                if (c > b) return NaN;
                var d = [a.face];
                a = [a.face];
                for (var f = 0; f < g; ) {
                  for (var p = f++, n = [], l = 0; l < a.length; ) {
                    var h = a[l];
                    ++l;
                    da.addAll(n, h.getNeighbours());
                  }
                  a = da.difference(n, d);
                  for (d = 0; d < a.length; )
                    if (((l = a[d]), ++d, (c += q(l.data) / (p + 1)), c > b))
                      return NaN;
                  if (c > b) return NaN;
                  d = n;
                }
                return c;
              },
              l = [],
              h = 0,
              n = a.dcel.faces;
            h < n.length;

          ) {
            var t = n[h];
            ++h;
            var w = t.data.center;
            w.x >= b && w.x <= d && w.y >= c && w.y <= f && l.push(t);
          }
          h = l;
          0 == h.length &&
            (h.push(a.getCell(new B((b + d) / 2, (c + f) / 2)).face),
            f - c < d - b
              ? (h.push(a.getCell(new B(b, (c + f) / 2)).face),
                h.push(a.getCell(new B(d, (c + f) / 2)).face))
              : (h.push(a.getCell(new B((b + d) / 2, c)).face),
                h.push(a.getCell(new B((b + d) / 2, f)).face)));
          b = null;
          c = Infinity;
          for (l = 0; l < h.length; )
            ((t = h[l]),
              ++l,
              (t = t.data),
              (d = p(t, c)),
              isNaN(d) || (d == c ? b.push(t) : ((c = d), (b = [t]))));
          if (null == b) this.set_x(this.set_y(0));
          else if (1 == b.length)
            ((w = b[0].center), this.set_x(w.x), this.set_y(w.y));
          else {
            var r = new B();
            if ('land' != Z.template) {
              l = p = 0;
              for (h = a.dcel.faces; l < h.length; )
                ((t = h[l]),
                  ++l,
                  t.data.land &&
                    ((a = t.data.center), (r.x += a.x), (r.y += a.y), ++p));
              l = 1 / p;
              r.x *= l;
              r.y *= l;
            }
            t = da.max(b, function (a) {
              return B.distance(a.center, r);
            });
            this.set_x(t.center.x);
            this.set_y(t.center.y);
          }
          this.rhumbs.update(this.radius * Ma.mainRing);
        },
        customize: function () {
          null == w.findForm(Cf) && w.showDialog(new Cf(this));
        },
        set_visible: function (a) {
          this.rhumbs.set_visible(a && Ma.showRhumbs);
          return T.prototype.set_visible.call(this, a);
        },
        set_x: function (a) {
          this.rhumbs.set_x(a);
          this.rhumbs.update(this.radius * Ma.mainRing);
          return T.prototype.set_x.call(this, a);
        },
        set_y: function (a) {
          this.rhumbs.set_y(a);
          this.rhumbs.update(this.radius * Ma.mainRing);
          return T.prototype.set_y.call(this, a);
        },
        __class__: Ma,
      });
      var yf = function () {
        this.manual = !1;
        var a = this;
        T.call(this);
        new ri(this, function () {
          a.manual = !0;
        });
        this.addEventListener('click', m(this, this.onClick));
        this.addEventListener('rightClick', m(this, this.onRightClick));
      };
      h['com.watabou.perilous.mapping.elements.Header'] = yf;
      yf.__name__ = 'com.watabou.perilous.mapping.elements.Header';
      yf.__super__ = T;
      yf.prototype = u(T.prototype, {
        update: function (a) {
          var b = fa.inst.name;
          null != this.tf &&
            (this.manual && this.tf.text != b && (this.manual = !1),
            this.removeChild(this.tf));
          var c = this.get_graphics();
          c.clear();
          null != this.outline &&
            (this.removeChild(this.outline),
            this.outline.destroy(),
            (this.outline = null));
          if (a == Sc.HIDDEN) this.set_visible(!1);
          else
            switch (
              (this.set_visible(!0),
              (this.tf = new Ke(b, x.formatTitle)),
              this.tf.layoutStraight(),
              this.addChild(this.tf),
              a._hx_index)
            ) {
              case 0:
                a = this.tf.get_width() + 2 * yf.MARGIN;
                b = this.tf.get_height() + 2 * yf.MARGIN;
                c.beginFill(x.banner);
                c.lineStyle(x.thick, x.black, null, null, null, 2, 1);
                c.drawRect(-a / 2, -b / 2, a, b);
                break;
              case 1:
                c = new oc(this);
                se.draw(
                  c,
                  this.tf.get_width(),
                  this.tf.get_height(),
                  yf.MARGIN,
                );
                break;
              case 2:
                x.outlineColor != x.textColor &&
                  this.tf.set_filters(Jb.outlineGlow);
            }
        },
        place: function (a, b, c) {
          var d = b.x,
            f = b.y,
            g = b.get_right();
          b = b.get_bottom();
          var k = (fa.hexRadius * fa.vantage) / 2,
            q = this.getBounds(this);
          q.inflate(k, k);
          k = d - q.get_left();
          var p = g - q.get_right();
          d = (d + g) / 2;
          f -= q.get_top();
          b -= q.get_bottom();
          q.inflate(fa.hexRadius, fa.hexRadius);
          f = da.min(
            [
              new B(k, f),
              new B(p, f),
              new B(k, b),
              new B(p, b),
              new B(d, f),
              new B(d, b),
            ],
            function (b) {
              var d = q.clone();
              d.offsetPoint(b);
              if (null != c && d.intersects(c)) return Infinity;
              b = 0;
              d = a.getCells(d);
              for (var f = 0; f < d.length; ) {
                var g = d[f];
                ++f;
                b += g.land
                  ? null != g.site
                    ? 20
                    : g.mountain || g.riverside || g.coastal
                      ? 5
                      : 2
                  : null == g.terrain
                    ? 0
                    : 1;
              }
              return b;
            },
          );
          this.set_x(f.x);
          this.set_y(f.y);
        },
        onClick: function (a) {
          a.stopPropagation();
        },
        onRightClick: function (a) {
          bb.menu.addItem('Rename...', m(this, this.rename));
          bb.menu.addSeparator();
        },
        rename: function () {
          null == w.findForm(ag) &&
            w.showDialog(
              new ag(fa.inst.name, function (a) {
                fa.inst.name = a;
                M.updateLabels();
              }),
            );
        },
        exportAsPNG: function () {
          x.outlineColor != x.textColor &&
            null != this.tf &&
            null != this.tf.get_filters() &&
            (this.tf.set_filters(null),
            (this.outline = new qh(this.tf, x.outlineColor, x.normal, 8)),
            this.addChildAt(this.outline, 0));
        },
        __class__: yf,
      });
      var mi = function () {
        T.call(this);
      };
      h['com.watabou.perilous.mapping.elements.Matte'] = mi;
      mi.__name__ = 'com.watabou.perilous.mapping.elements.Matte';
      mi.__super__ = T;
      mi.prototype = u(T.prototype, {
        update: function (a) {
          var b = new oc(this, !0),
            c = fa.hexRadius * fa.vantage,
            d = a.viewWidth / 2,
            f = d - c;
          a = a.viewHeight / 2;
          c = a - c;
          d = [new B(-d, -a), new B(d, -a), new B(d, a), new B(-d, a)];
          a = [new B(-f, -c), new B(-f, c), new B(f, c), new B(f, -c)];
          b.fill(x.matte);
          b.multiPolygon([d, a]);
          b.end();
          b.g.lineStyle(2 * x.thick, x.black, null, null, null, 2, 1);
          b.polygon(a);
          b.end();
          f = f + 2 * x.thick + x.normal;
          c = c + 2 * x.thick + x.normal;
          b.g.lineStyle(x.normal, x.black, null, null, null, 2, 1);
          b.rect(-f, -c, 2 * f, 2 * c);
        },
        __class__: mi,
      });
      var de = function () {
        T.call(this);
      };
      h['com.watabou.perilous.mapping.elements.RhumbNexus'] = de;
      de.__name__ = 'com.watabou.perilous.mapping.elements.RhumbNexus';
      de.__super__ = T;
      de.prototype = u(T.prototype, {
        update: function (a) {
          if (null != fa.inst) {
            var b = fa.inst.viewWidth / 2,
              c = fa.inst.viewHeight / 2,
              d = this.get_graphics();
            d.clear();
            d.lineStyle(x.ultraThin, x.black);
            for (var f = 0, g = de.NLINES; f < g; ) {
              var k = f++,
                q = (k / de.NLINES) * Math.PI * 2;
              k = Math.sin(q);
              q = Math.cos(q);
              var p = (0 > q ? -b - this.get_x() : b - this.get_x()) / q,
                l = (0 > k ? -c - this.get_y() : c - this.get_y()) / k;
              p = Math.min(p, l);
              0 < p && (d.moveTo(a * q, a * k), d.lineTo(p * q, p * k));
            }
          }
        },
        __class__: de,
      });
      var Bf = function () {};
      h['com.watabou.perilous.mapping.elements.Ribbons'] = Bf;
      Bf.__name__ = 'com.watabou.perilous.mapping.elements.Ribbons';
      Bf.cut = function (a, b) {
        if (null == a) return null;
        if (0 == a.length) return [];
        if (1 == a.length) return [[a[0]]];
        var c = a[1],
          d = [a[0], c],
          f = b(d[0], c);
        var g = [d];
        for (var k = 2, q = a.length; k < q; ) {
          var p = k++,
            l = c;
          c = a[p];
          p = b(l, c);
          0 > p * f ? ((d = [l, c]), g.push(d), (f = p)) : d.push(c);
        }
        return g;
      };
      Bf.cutDistant = function (a, b) {
        return Bf.cut(a, function (a, d) {
          a = d.subtract(a);
          return a.x * b.y - a.y * b.x;
        });
      };
      Bf.sortSegments = function (a, b, c) {
        for (var d = 0, f = a.length * a.length; ; ) {
          for (var g = !0, k = 0, q = a.length - 1; k < q; ) {
            for (
              var p = k++,
                l = a[p],
                h = l.length,
                n = l[0],
                t = l[h - 1],
                w = p + 1,
                r = a.length;
              w < r;

            ) {
              for (
                var x = w++,
                  C = !1,
                  m = a[x],
                  G = m.length,
                  y = m[0],
                  A = m[G - 1],
                  B = 0,
                  N = [n, t];
                B < N.length;

              ) {
                var u = N[B];
                ++B;
                if (!C && u != y && u != A)
                  for (
                    var L = c ? b : b.subtract(u), v = 0, E = G - 1;
                    v < E;

                  ) {
                    var D = v++,
                      wa = m[D];
                    D = m[D + 1];
                    wa = ta.intersectLines(
                      u.x,
                      u.y,
                      L.x,
                      L.y,
                      wa.x,
                      wa.y,
                      D.x - wa.x,
                      D.y - wa.y,
                    );
                    if (null != wa && 0 > wa.x && 0 <= wa.y && 1 >= wa.y) {
                      C = !0;
                      break;
                    }
                  }
              }
              G = 0;
              for (y = [y, A]; G < y.length; )
                if (((A = y[G]), ++G, !C && A != n && A != t))
                  for (B = c ? b : b.subtract(A), N = 0, u = h - 1; N < u; )
                    if (
                      ((v = N++),
                      (L = l[v]),
                      (v = l[v + 1]),
                      (L = ta.intersectLines(
                        A.x,
                        A.y,
                        B.x,
                        B.y,
                        L.x,
                        L.y,
                        v.x - L.x,
                        v.y - L.y,
                      )),
                      null != L && 0 < L.x && 1 > L.x && 0 <= L.y && 1 >= L.y)
                    ) {
                      C = !0;
                      break;
                    }
              if (C) {
                g = !1;
                a.splice(x, 1);
                a.splice(p, 0, m);
                break;
              }
            }
            if (!g) break;
          }
          if (g) break;
          else if (++d > f) throw aa.thrown('*** failed to sort segments ***');
        }
      };
      Bf.extrudeDistant = function (a, b, c) {
        for (var d = b.length, f = [], g = 0, k = d; g < k; ) (g++, f.push([]));
        var q = f;
        for (f = 0; f < a.length; ) {
          var p = a[f];
          ++f;
          g = 0;
          for (k = d; g < k; ) {
            var l = g++,
              h = c,
              n = b[l];
            null == n && (n = 1);
            h = h.clone();
            h.normalize(n);
            h = p.add(h);
            q[l].push(h);
          }
        }
        return q;
      };
      var Ca = function () {
        T.call(this);
        Ca.inst = this;
        this.light = new T();
        this.light.set_blendMode(0);
        this.light.mouseEnabled = !1;
        this.addChild(this.light);
        this.dark = new T();
        this.dark.set_blendMode(9);
        this.dark.mouseEnabled = !1;
        this.addChild(this.dark);
        this.addEventListener('mouseDown', m(this, this.onMouseDown));
        this.mouseEnabled = this.mouseChildren = !1;
      };
      h['com.watabou.perilous.mapping.elements.Spotlight'] = Ca;
      Ca.__name__ = 'com.watabou.perilous.mapping.elements.Spotlight';
      Ca.enable = function (a) {
        Da.set('spotlight', (M.showLight = a));
        null != Ca.inst && Ca.inst.set_visible(a);
      };
      Ca.activate = function (a) {
        Ca.inst.mouseEnabled = Ca.inst.mouseChildren = a;
      };
      Ca.update = function (a) {
        Ca.inst.redraw(a);
      };
      Ca.reset = function () {
        Ca.balance = 0.7;
        Ca.opaLight = 0.2;
        Ca.satLight = 0.5;
        Ca.opaDark = 0.2;
        Ca.satDark = 0.5;
        Ca.spotFocus = new B();
        Ca.frontAnchor = new B(-1, -1);
      };
      Ca.adjust = function (a, b) {
        a =
          0 == a
            ? Ca.GREY
            : bc.scale(a, bc.brightness(Ca.GREY) / bc.brightness(a));
        return 1 > b ? bc.lerp(Ca.GREY, a, Ca.satDark) : a;
      };
      Ca.__super__ = T;
      Ca.prototype = u(T.prototype, {
        redraw: function (a) {
          null != a && ((this.w2 = a.width / 2), (this.h2 = a.height / 2));
          a = this.light.get_graphics();
          a.clear();
          var b = this.dark.get_graphics();
          b.clear();
          var c = Ca.type == Ca.SPOTLIGHT ? 1 : 0,
            d = (255 * Ca.balance) | 0,
            f = new ua();
          if (Ca.type == Ca.FRONT) {
            var g = Ca.frontAnchor,
              k = this.h2;
            null == k && (k = 1);
            k = new B(g.x * this.w2, g.y * k);
            if (0 == k.x) {
              g = 0;
              var q = k.y;
              q = (0 == q ? 0 : 0 > q ? -1 : 1) * this.h2;
            } else
              Math.abs(k.y / k.x) > this.h2 / this.w2
                ? ((q = k.y),
                  (q = (0 == q ? 0 : 0 > q ? -1 : 1) * this.h2),
                  (g = (q / k.y) * k.x))
                : ((q = k.x),
                  (g = (0 == q ? 0 : 0 > q ? -1 : 1) * this.w2),
                  (q = (g / k.x) * k.y));
            k = 2 * Math.sqrt(g * g + q * q);
            f.createGradientBox(k, k, Math.atan2(-q, -g), -k / 2, -k / 2);
          } else
            ((g = Ca.spotFocus),
              (k = this.h2),
              null == k && (k = 1),
              (k = new B(g.x * this.w2, g.y * k)),
              (q = []),
              (g = new B(-this.w2, -this.h2)),
              q.push(B.distance(k, g)),
              (g = new B(this.w2, -this.h2)),
              q.push(B.distance(k, g)),
              (g = new B(-this.w2, this.h2)),
              q.push(B.distance(k, g)),
              (g = new B(this.w2, this.h2)),
              q.push(B.distance(k, g)),
              (g = da.max(q, function (a) {
                return a;
              })),
              f.createGradientBox(2 * g, 2 * g, 0, -g + k.x, -g + k.y));
          0 < d &&
            ((g = Ca.adjust(Ca.clrLight, Ca.satLight)),
            a.beginGradientFill(c, [g, g], [Ca.opaLight, 0], [0, d], f),
            a.drawRect(-this.w2, -this.h2, 2 * this.w2, 2 * this.h2));
          255 > d &&
            ((g = Ca.adjust(Ca.clrDark, Ca.satDark)),
            b.beginGradientFill(c, [g, g], [0, Ca.opaDark], [d, 255], f),
            b.drawRect(-this.w2, -this.h2, 2 * this.w2, 2 * this.h2));
        },
        onMouseDown: function (a) {
          this.stage.addEventListener('mouseMove', m(this, this.onMouseMove));
          this.stage.addEventListener('mouseUp', m(this, this.onMouseUp));
          this.onMouseMove(a);
          a.stopImmediatePropagation();
          a.stopPropagation();
          a.preventDefault();
        },
        onMouseUp: function (a) {
          this.stage.removeEventListener(
            'mouseMove',
            m(this, this.onMouseMove),
          );
          this.stage.removeEventListener('mouseUp', m(this, this.onMouseUp));
          a.stopImmediatePropagation();
          a.stopPropagation();
          a.preventDefault();
        },
        onMouseMove: function (a) {
          (Ca.type == Ca.FRONT ? Ca.frontAnchor : Ca.spotFocus).setTo(
            this.get_mouseX() / this.w2,
            this.get_mouseY() / this.h2,
          );
          this.redraw(null);
          a.updateAfterEvent();
        },
        __class__: Ca,
      });
      var qe = function () {
        T.call(this);
      };
      h['com.watabou.perilous.mapping.labels.MapLabel'] = qe;
      qe.__name__ = 'com.watabou.perilous.mapping.labels.MapLabel';
      qe.__super__ = T;
      qe.prototype = u(T.prototype, {
        getFormat: function () {
          return null;
        },
        setOutline: function (a) {
          this.set_filters(a ? Jb.outlineGlow : null);
        },
        exportAsPNG: function () {
          this.setOutline(!1);
          if (x.outlineColor != x.textColor) {
            var a = new qh(this, x.outlineColor, x.normal, 8);
            this.addChildAt(a, 0);
          }
        },
        __class__: qe,
      });
      var Pd = function (a, b) {
        T.call(this);
        var c = new Ke(b, this.getFormat()),
          d = Pd.largestPatch(a);
        a = new B();
        for (var f = 0, g = 0; g < d.length; ) {
          var k = d[g];
          ++g;
          k = k.data.center;
          a.x += k.x;
          a.y += k.y;
          ++f;
        }
        g = 1 / f;
        a.x *= g;
        a.y *= g;
        k = ec.outline(d);
        g = [];
        for (f = 0; f < k.length; ) {
          var q = k[f];
          ++f;
          g.push(nd.toPoly(q));
        }
        k = g;
        k[0] = Pd.smooth(k[0]);
        q = fa.inst.width / 2;
        var p = fa.inst.height / 2;
        for (g = 0; g < k.length; ) {
          var l = k[g];
          ++g;
          f = 0;
          for (var h = l.length; f < h; ) {
            var n = f++;
            n = l[n];
            n.x = ac.gate(n.x, -q, q);
            n.y = ac.gate(n.y, -p, p);
          }
        }
        g = Jb.mode == Jb.ARCED && 1 < d.length ? Yc.obb(k[0]) : Yc.aabb(k[0]);
        q = g[0].subtract(g[3]);
        d = g[1].subtract(g[0]);
        Math.abs(d.y / d.x) > Math.pow(d.get_length() / q.get_length(), 2) &&
          ((q = g[1].subtract(g[0])), (d = g[2].subtract(g[1])));
        n = new B(a.x + 0.5, a.y + 0.5);
        g = Pd.largestSpan(He.pierceMulti(k, n, n.add(q)));
        l = g[0];
        h = g[1];
        var t = null;
        p = -Infinity;
        g = 0;
        for (f = Pd.marks; g < f.length; ) {
          var w = f[g];
          ++g;
          n = ta.lerp(l, h, w);
          n = new B(n.x + 0.5, n.y + 0.5);
          n = Pd.largestSpan(He.pierceMulti(k, n, n.add(d)));
          var r = B.distance(n[0], n[1]);
          0.5 != w && (r *= 0.999);
          p < r && ((p = r), (t = n));
        }
        g = ta.lerp(t[0], t[1]);
        f = new T();
        f.addChild(c);
        n = c.proto.get_textWidth() + 0 * (c.text.length - 1);
        k = ac.gate(Math.sqrt(p / n), 0.5, 2);
        b =
          (n * k < p ? Math.max(n * k, p - 2 * fa.hexRadius) / k - n : 0) /
          b.length;
        Jb.mode == Jb.ARCED
          ? ((a = 2 * lh.project(q, g.subtract(a))),
            (a = 0 < a ? Math.sqrt(a) : -Math.sqrt(-a)),
            (a = q.get_length() / (2 * a)),
            0 < d.x && (a = -a),
            c.layoutArced(a, b))
          : c.layoutStraight(b);
        f.set_scaleX(f.set_scaleY(k));
        f.set_rotation((Math.atan(d.y / d.x) / Math.PI) * 180);
        f.set_x(g.x);
        f.set_y(g.y);
        this.addChild(f);
      };
      h['com.watabou.perilous.mapping.labels.AreaLabel'] = Pd;
      Pd.__name__ = 'com.watabou.perilous.mapping.labels.AreaLabel';
      Pd.largestSpan = function (a) {
        for (var b = -1, c = 0, d = 0; d + 1 < a.length; ) {
          var f = B.distance(a[d], a[d + 1]);
          c < f && ((c = f), (b = d));
          d += 2;
        }
        return [a[b], a[b + 1]];
      };
      Pd.largestPatch = function (a) {
        return da.max(ec.split(a), function (a) {
          return a.length;
        });
      };
      Pd.smooth = function (a) {
        for (var b = a.length, c = [], d = 0; d < b; ) {
          var f = d++,
            g = a[f],
            k = a[(f + b - 1) % b];
          f = a[(f + 1) % b];
          c.push(
            new B(
              0.5 * (g.x + 0.5 * (k.x + f.x)),
              0.5 * (g.y + 0.5 * (k.y + f.y)),
            ),
          );
        }
        return c;
      };
      Pd.__super__ = qe;
      Pd.prototype = u(qe.prototype, {
        getFormat: function () {
          return x.formatArea;
        },
        __class__: Pd,
      });
      var yg = function (a, b, c) {
        T.call(this);
        this.tf = rc.get(a, this.getFormat());
        this.addChild(this.tf);
        var d = 3 * fa.hexRadius;
        if (this.tf.get_textWidth() > d) {
          var f = new Ba('[ ]+', 'g').split(a);
          if (1 < f.length) {
            for (var g = 0, k = 0; k < f.length; ) {
              var q = f[k];
              ++k;
              this.tf.set_text(q);
              q = Math.ceil(this.tf.get_textWidth());
              g < q && (g = q);
            }
            this.tf.set_text(a);
            this.tf.set_wordWrap(!0);
            if (g < d) {
              this.tf.set_width(d + 4);
              a = this.tf.get_numLines();
              do ((d = this.tf), d.set_width(d.get_width() - 2));
              while (
                this.tf.get_numLines() == a &&
                this.tf.get_width() > g + 4
              );
              d = this.tf;
              d.set_width(d.get_width() + 2);
            } else this.tf.set_width(g + 4);
          }
        }
        this.tf.set_x(b - this.tf.get_width() / 2);
        this.tf.set_y(c - this.tf.get_height() / 2);
      };
      h['com.watabou.perilous.mapping.labels.PointLabel'] = yg;
      yg.__name__ = 'com.watabou.perilous.mapping.labels.PointLabel';
      yg.__super__ = qe;
      yg.prototype = u(qe.prototype, { __class__: yg });
      var df = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        yg.call(this, b, a.center.x, a.center.y);
        0 < c &&
          ((a = this.tf), a.set_x(a.get_x() + (this.tf.get_width() / 2 + c)));
        0 > c &&
          ((a = this.tf), a.set_x(a.get_x() - (this.tf.get_width() / 2 - c)));
        0 < d &&
          ((a = this.tf), a.set_y(a.get_y() + (this.tf.get_height() / 2 + d)));
        0 > d &&
          ((a = this.tf), a.set_y(a.get_y() - (this.tf.get_height() / 2 - d)));
      };
      h['com.watabou.perilous.mapping.labels.CellLabel'] = df;
      df.__name__ = 'com.watabou.perilous.mapping.labels.CellLabel';
      df.__super__ = yg;
      df.prototype = u(yg.prototype, {
        getFormat: function () {
          return x.formatTown;
        },
        __class__: df,
      });
      var qi = function (a) {
        df.call(
          this,
          a.cell,
          a.getName(),
          0,
          0.5 * fa.hexRadius * x.dangerScale,
        );
      };
      h['com.watabou.perilous.mapping.labels.DangerLabel'] = qi;
      qi.__name__ = 'com.watabou.perilous.mapping.labels.DangerLabel';
      qi.__super__ = df;
      qi.prototype = u(df.prototype, {
        getFormat: function () {
          return x.formatDanger;
        },
        __class__: qi,
      });
      var Af = function (a, b) {
        T.call(this);
        b = new Ke(b, this.getFormat());
        this.addChild(b);
        a = da.max(ec.split(a), function (a) {
          return a.length;
        });
        a = nd.toPoly(ec.outline(a)[0]);
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var g = f++;
          d.push(ta.lerp(a[(g + 1) % c], ta.lerp(a[g], a[(g + 2) % c])));
        }
        xc.simplify(d, (Math.pow(3, 1.5) * Math.pow(fa.hexRadius, 2)) / 2);
        a = Af.getRidge(d);
        a = Af.getRidgeSegment(
          a,
          b.proto.get_textWidth() + 0 * (b.text.length - 1),
        );
        b.layoutCurved(a);
      };
      h['com.watabou.perilous.mapping.labels.SkeletonLabel'] = Af;
      Af.__name__ = 'com.watabou.perilous.mapping.labels.SkeletonLabel';
      Af.getRidge = function (a) {
        for (var b = new Wf(a, !0); 0 < b.ribs.length; ) {
          for (var c = [], d = 0; d < a.length; )
            ((b = a[d]),
              ++d,
              c.push(
                b.add(
                  B.polar(
                    1,
                    2 *
                      Math.PI *
                      ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647),
                  ),
                ),
              ));
          a = c;
          b = new Wf(a, !0);
        }
        var f = 0,
          g = null,
          k = null;
        c = 0;
        for (d = a.length - 1; c < d; )
          for (var q = c++, p = q + 1, h = a.length; p < h; ) {
            var t = p++,
              n = a[q];
            t = a[t];
            var w = B.distance(n, t) + Math.abs(n.x - t.x);
            f < w && ((f = w), (g = n), (k = t));
          }
        a = b.leaves.h[g.__id__];
        k = b.leaves.h[k.__id__];
        c = [];
        d = 0;
        for (p = b.getPath(a, k); d < p.length; )
          ((b = p[d]), ++d, c.push(b.point));
        return c;
      };
      Af.getRidgeSegment = function (a, b) {
        var c = new xg(kc.render(a, !1)),
          d = c.length(),
          f = 0.9 * d;
        b = f > b ? 0.5 * (f + b) : f;
        d = (d - b) / 2;
        f = [];
        for (var g = 0; 5 > g; ) {
          var k = g++;
          f.push(c.getPos(d + (b * k) / 4));
        }
        xc.visvalingam(f, 3);
        f.unshift(a[0]);
        f.push(a[a.length - 1]);
        a = uf.smoothOpen(f, 4);
        a = a.slice(4, -4);
        a[0].x > a[a.length - 1].x && a.reverse();
        return a;
      };
      Af.__super__ = qe;
      Af.prototype = u(qe.prototype, {
        getFormat: function () {
          return x.formatArea;
        },
        __class__: Af,
      });
      var Ke = function (a, b) {
        T.call(this);
        this.text = a;
        this.format = b;
        this.proto = new Qc();
        this.proto.set_autoSize(1);
        this.proto.set_defaultTextFormat(b);
        this.proto.set_text(a);
      };
      h['com.watabou.perilous.mapping.labels.TextFieldEx'] = Ke;
      Ke.__name__ = 'com.watabou.perilous.mapping.labels.TextFieldEx';
      Ke.__super__ = T;
      Ke.prototype = u(T.prototype, {
        layoutStraight: function (a) {
          null == a && (a = 0);
          this.dispose();
          var b = a;
          null == b && (b = 0);
          b = this.proto.get_textWidth() + (this.text.length - 1) * b;
          for (var c = 0, d = this.text.length; c < d; ) {
            var f = c++,
              g = this.getChar(this.text.charAt(f));
            this.addChild(g);
            var k = this.proto.getCharBoundaries(f);
            g.set_x(k.x + k.width / 2 + a * f - b / 2);
            g.set_y(0);
          }
        },
        layoutArced: function (a, b) {
          null == b && (b = 0);
          this.dispose();
          var c = b;
          null == c && (c = 0);
          c = this.proto.get_textWidth() + (this.text.length - 1) * c;
          Math.abs(a) < c / Math.PI &&
            (a = (c / Math.PI) * (0 == a ? 0 : 0 > a ? -1 : 1));
          for (var d = c / a, f = 0, g = this.text.length; f < g; ) {
            var k = f++,
              q = this.getChar(this.text.charAt(k));
            this.addChild(q);
            var p = this.proto.getCharBoundaries(k);
            k = ((p.x - 2 + 0.5 * p.width + b * k) / c - 0.5) * d;
            q.set_rotation((-k / Math.PI) * 180);
            q.set_x(a * Math.sin(k));
            q.set_y(a * Math.cos(k) - a);
          }
        },
        layoutCurved: function (a) {
          this.dispose();
          a = new xg(a);
          var b = a.length(),
            c = this.proto.get_textWidth(),
            d = b / c,
            f = 0;
          1 < d &&
            ((d = Math.min(Math.sqrt(d), 2)),
            1 < this.text.length && (f = (b - c * d) / (this.text.length - 1)));
          b = (b - (c * d + f * (this.text.length - 1))) / 2;
          c = 0;
          for (var g = this.text.length; c < g; ) {
            var k = c++,
              q = this.proto.getCharBoundaries(k);
            q = a.getPos(b + (q.x + 0.5 * q.width) * d + k * f);
            k = this.getChar(this.text.charAt(k));
            this.addChild(k);
            var p = a.get_tangent();
            k.set_rotation((Math.atan2(p.y, p.x) / Math.PI) * 180);
            k.set_scaleX(k.set_scaleY(d));
            k.set_x(q.x);
            k.set_y(q.y);
          }
        },
        dispose: function () {
          for (var a = 0, b = this.get_numChildren(); a < b; ) {
            var c = a++;
            c = this.getChildAt(c);
            Ke.cache.push(c);
          }
          this.removeChildren();
        },
        getChar: function (a) {
          var b = 0 == Ke.cache.length ? new si() : Ke.cache.pop();
          b.set(a, this.format);
          return b;
        },
        __class__: Ke,
      });
      var si = function () {
        T.call(this);
        this.tf = new Qc();
        this.tf.set_selectable(!1);
        this.tf.set_autoSize(1);
        this.addChild(this.tf);
      };
      h['com.watabou.perilous.mapping.labels._TextFieldEx.Char'] = si;
      si.__name__ = 'com.watabou.perilous.mapping.labels._TextFieldEx.Char';
      si.__super__ = T;
      si.prototype = u(T.prototype, {
        set: function (a, b) {
          this.tf.set_defaultTextFormat(b);
          this.tf.set_text(a);
          this.tf.set_x(-this.tf.get_width() / 2);
          this.tf.set_y(-this.tf.get_height() / 2);
        },
        __class__: si,
      });
      var pi = function (a, b, c) {
        this.town = a;
        df.call(
          this,
          a.cell,
          a.getName(),
          0,
          Ib.getBaseline() + Ib.getLabelPos(a),
        );
        a = a.getOffset();
        b = this.tf;
        b.set_x(b.get_x() + a.x);
        b = this.tf;
        b.set_y(b.get_y() + a.y * fa.vantage);
      };
      h['com.watabou.perilous.mapping.labels.TownLabel'] = pi;
      pi.__name__ = 'com.watabou.perilous.mapping.labels.TownLabel';
      pi.__super__ = df;
      pi.prototype = u(df.prototype, {
        getFormat: function () {
          switch (this.town.type._hx_index) {
            case 0:
              var a = 0.8;
              break;
            case 1:
              a = 1;
              break;
            case 2:
              a = 1.2;
          }
          return x.scaleFormat(x.formatTown, a);
        },
        __class__: pi,
      });
      var od = function () {};
      h['com.watabou.perilous.mapping.sprites.CachedDrawing'] = od;
      od.__name__ = 'com.watabou.perilous.mapping.sprites.CachedDrawing';
      od.reset = function (a) {
        if (null == a) od.cache.h = Object.create(null);
        else {
          var b = od.cache;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
        }
      };
      od.draw = function (a, b, c, d) {
        null == c && (c = 10);
        var f = od.cache.h[b];
        null == f && ((f = []), (od.cache.h[b] = f));
        f.length >= c
          ? a.drawGraphicsData(da.random(f))
          : (d(), f.push(a.readGraphicsData(!1)));
      };
      var Vc = function () {
        T.call(this);
        od.draw(this.get_graphics(), 'danger', 2, m(this, this.draw));
      };
      h['com.watabou.perilous.mapping.sprites.DangerSprite'] = Vc;
      Vc.__name__ = 'com.watabou.perilous.mapping.sprites.DangerSprite';
      Vc.buildShapes = function (a) {
        Vc.shape = kc.render(
          [
            new B(-1 * a, 0.5 * a),
            new B(-1 * a, -1 * a),
            new B(a, -1 * a),
            new B(a, 0.5 * a),
            new B(0.75 * a, 0.5 * a),
            new B(0.5 * a, 0.5 * a),
            new B(0.5 * a, a),
            new B(0.25 * a, a),
            new B(-0.25 * a, a),
            new B(-0.5 * a, a),
            new B(-0.5 * a, 0.5 * a),
            new B(-0.75 * a, 0.5 * a),
          ],
          !0,
          3,
        );
        Vc.leftEye = kc.render(
          [
            new B(-0.75 * a, -0.35 * a),
            new B(-0.75 * a, 0.25 * a),
            new B(-0.25 * a, 0.25 * a),
            new B(-0.15 * a, -0.25 * a),
          ],
          !0,
          3,
        );
        Vc.rightEye = kc.render(
          [
            new B(0.15 * a, -0.25 * a),
            new B(0.25 * a, 0.25 * a),
            new B(0.75 * a, 0.25 * a),
            new B(0.75 * a, -0.35 * a),
          ],
          !0,
          3,
        );
        Vc.nose = kc.render(
          [
            new B(0 * a, 0 * a),
            new B(-0.2 * a, 0.5 * a),
            new B(0 * a, 0.5 * a),
            new B(0.2 * a, 0.5 * a),
          ],
          !0,
          3,
        );
        Vc.strokes = [
          [
            new B(-0.16666666666666666 * a, a),
            new B(-0.16666666666666666 * a, 0.75 * a),
          ],
          [
            new B(0.16666666666666666 * a, a),
            new B(0.16666666666666666 * a, 0.75 * a),
          ],
        ];
      };
      Vc.__super__ = T;
      Vc.prototype = u(T.prototype, {
        draw: function () {
          var a = new oc(this),
            b = 20 * x.dangerScale;
          Vc.buildShapes(b);
          a.brush = m(a, a.middle);
          b = 1 + x.thick / b;
          a.useBrush(m(a, a.middle), x.black, x.thin);
          a.fillArea(sc.scale(Vc.shape, b, b), Vc.dir);
          a.drawNormal();
          a.fill(x.danger);
          a.multiPolygon([Vc.shape, Vc.leftEye, Vc.rightEye, Vc.nose]);
          a.useBrush(null, x.black, x.normal, x.thin);
          b = 0;
          for (var c = Vc.strokes; b < c.length; ) {
            var d = c[b];
            ++b;
            a.shortStroke(d[0], d[1]);
          }
        },
        __class__: Vc,
      });
      var ni = function () {
        T.call(this);
        od.draw(this.get_graphics(), 'dune', 5, m(this, this.draw));
      };
      h['com.watabou.perilous.mapping.sprites.DuneSprite'] = ni;
      ni.__name__ = 'com.watabou.perilous.mapping.sprites.DuneSprite';
      ni.__super__ = T;
      ni.prototype = u(T.prototype, {
        draw: function () {
          var a = fa.hexRadius / 2,
            b =
              a *
              (1 -
                0.5 *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )),
            c =
              b *
              (0.4 +
                0.1 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
            d = new oc(this);
          d.brush = m(d, d.middle);
          var f = new B(),
            g = new B(f.x, f.y + -c),
            k = new B(f.x + -b, f.y),
            q = ta.lerp(
              f,
              ta.lerp(
                k,
                g,
                0.5 *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
              ),
              0.9,
            );
          a = new B(f.x + b, f.y);
          var p = ta.lerp(
            f,
            ta.lerp(
              a,
              g,
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
            ),
            0.7,
          );
          q = [a, p, g, q, k];
          q = kc.render(q, !1, 3);
          d.fill(x.earth);
          d.polygon(q.concat([new B(f.x, f.y + 5)]));
          d.end();
          d.drawThin();
          d.polyline(q);
          b = new B(0.5 * b, c);
          b.normalize(1);
          c = 0;
          p = q[c].y;
          for (var h = 1, t = q.length; h < t; ) {
            var n = h++;
            p > q[n].y && ((p = q[n].y), (c = n));
          }
          q = q.slice(0, c + 1);
          a = kc.render(
            [q[q.length - 1], ta.lerp(k, ta.lerp(g, f), 0.7), ta.lerp(a, f), a],
            !1,
            2,
          );
          a.shift();
          a.pop();
          a = q.concat(a);
          d.useBrush(null, x.black, x.thin);
          d.fillArea(a, new B(-b.x, b.y));
        },
        __class__: ni,
      });
      var ed = function () {
        this.meadow = this.swamp = !1;
        T.call(this);
      };
      h['com.watabou.perilous.mapping.sprites.GrassSprite'] = ed;
      ed.__name__ = 'com.watabou.perilous.mapping.sprites.GrassSprite';
      ed.drawBlade = function (a, b, c, d) {
        b *= x.clutterScale;
        d *=
          x.clutterScale *
          (1 -
            0.5 *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ));
        a.trueStroke(
          kc.render(
            [
              new B(b),
              new B(b * (1 + c / 2), 0.75 * -d),
              new B(b * (1 + c), -d),
            ],
            !1,
            2,
          ),
        );
      };
      ed.grass = function () {
        var a = new ed();
        a.meadow = !0;
        od.draw(a.get_graphics(), 'grass', 5, function () {
          var b = new oc(a);
          b.useBrush(null, x.black, x.thin);
          ed.drawBlade(
            b,
            -1 -
              5 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            0.5,
            5,
          );
          ed.drawBlade(
            b,
            (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
            0.5,
            6,
          );
          ed.drawBlade(
            b,
            1 +
              5 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            0.5,
            5,
          );
        });
        return a;
      };
      ed.reed = function () {
        var a = new ed();
        a.swamp = !0;
        od.draw(a.get_graphics(), 'reed', null, function () {
          var b = new oc(a);
          b.useBrush(null, x.black, x.thin);
          0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 &&
            (ed.drawBlade(
              b,
              -1 -
                4 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3),
              1,
              6,
            ),
            ed.drawBlade(
              b,
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1,
              1,
              9,
            ),
            ed.drawBlade(
              b,
              1 +
                4 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3),
              1,
              6,
            ));
          var c = 6 * Math.sqrt(x.clutterScale);
          b.useBrush(m(b, b.middle), x.black, x.thin);
          b.shortStroke(
            new B(
              -c *
                (1 +
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )),
            ),
            new B(
              c *
                (1 +
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )),
            ),
          );
        });
        return a;
      };
      ed.__super__ = T;
      ed.prototype = u(T.prototype, { __class__: ed });
      var oi = function (a) {
        T.call(this);
        this.draw(a);
      };
      h['com.watabou.perilous.mapping.sprites.LandmarkSprite'] = oi;
      oi.__name__ = 'com.watabou.perilous.mapping.sprites.LandmarkSprite';
      oi.__super__ = T;
      oi.prototype = u(T.prototype, {
        draw: function (a) {
          var b = new oc(this),
            c = 10 * x.townScale;
          b.g.lineStyle(x.thick, x.black, null, null, null, 0);
          b.polyline([new B(0 * c, 0 * c), new B(0 * c, -8 * c)]);
          b.drawNormal();
          b.noCaps();
          b.fill(a.getColor());
          b.polygon([
            new B(0 * c, -1.5 * c),
            new B(-2 * c, -2.5 * c),
            new B(-2 * c, -6.5 * c),
            new B(2 * c, -6.5 * c),
            new B(2 * c, -2.5 * c),
          ]);
          b.end();
          b.useBrush(null, x.black, x.normal);
          b.fillArea(
            [
              new B(2 * c, -3.5 * c),
              new B(2 * c, -2.5 * c),
              new B(0 * c, -1.5 * c),
              new B(-2 * c, -2.5 * c),
              new B(-2 * c, -3.5 * c),
              new B(0 * c, -2.5 * c),
            ],
            B.polar(1, -Math.PI / 2),
          );
          b.end();
          b.g.lineStyle(x.thick, x.black, null, null, null, 0);
          b.polyline([new B(-3 * c, -6.5 * c), new B(3 * c, -6.5 * c)]);
          b.g.lineStyle(x.thin, x.black);
          b.polyline([
            new B(-2.5 * c, -6.5 * c),
            new B(0 * c, -7.5 * c),
            new B(2.5 * c, -6.5 * c),
          ]);
        },
        getOffset: function () {
          return 30 * x.townScale;
        },
        __class__: oi,
      });
      var ic = function (a, b) {
        T.call(this);
        x.ruggedMountains ? this.rugged(a, b) : this.smooth(a, b);
      };
      h['com.watabou.perilous.mapping.sprites.MountainSprite'] = ic;
      ic.__name__ = 'com.watabou.perilous.mapping.sprites.MountainSprite';
      ic.fill = function (a, b, c) {
        if (x.mountain != x.earth) {
          var d = new ua();
          b = Math.sqrt(b * b + c * c);
          d.createGradientBox(2 * b, 2 * b, 0, -b, 2 * -b);
          a.g.beginGradientFill(
            1,
            [x.mountain, x.earth],
            [1, 1],
            [128, 255],
            d,
          );
        } else a.fill(x.earth);
      };
      ic.wobble = function (a, b, c) {
        null == c && (c = 0.5);
        for (var d = a.length, f = [], g = 0; g < d; ) {
          var k = g++,
            q = a[k];
          0 == k || k == d - 1 || -1 != b.indexOf(q)
            ? f.push(q)
            : f.push(
                new B(
                  q.x,
                  q.y +
                    Math.min(
                      Math.abs(a[k - 1].y - q.y),
                      Math.abs(q.y - a[k + 1].y),
                    ) *
                      c *
                      ((((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3) *
                        2 -
                        1),
                ),
              );
        }
        return f;
      };
      ic.__super__ = T;
      ic.prototype = u(T.prototype, {
        smooth: function (a, b) {
          var c = new oc(this),
            d = ic.o,
            f = new B(d.x, d.y + -b);
          d = ic.o;
          var g = new B(
              d.x + -a,
              d.y +
                -10 *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
            ),
            k = ta.lerp(
              ic.o,
              ta.lerp(
                g,
                f,
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
              ),
              0.9,
            );
          d = ic.o;
          var q = new B(
              d.x + a,
              d.y +
                -10 *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  ),
            ),
            p = ta.lerp(
              ic.o,
              ta.lerp(
                q,
                f,
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
              ),
              0.9,
            );
          d = ic.o;
          d = new B(d.x, d.y + 0.1 * b * fa.vantage);
          k = [q, p, f, k, g];
          k = kc.render(k, !1, 3);
          ic.fill(c, a, b);
          c.polygon(k.concat([d]));
          c.end();
          4 != x.shadingMode &&
            (c.useBrush(m(c, c.middle), x.black, x.thick, x.thin),
            c.trueStroke(k));
          a = new B(2 * a, -b);
          a.normalize(1);
          b = 0;
          p = k[b].y;
          for (var h = 1, t = k.length; h < t; ) {
            var n = h++;
            p > k[n].y && ((p = k[n].y), (b = n));
          }
          k = k.slice(0, b + 1);
          f = kc.render(
            [
              k[k.length - 1],
              ta.lerp(q, ta.lerp(f, ic.o), 0.7),
              ta.lerp(g, d),
              ta.lerp(q, d),
              q,
            ],
            !1,
            2,
          );
          f.shift();
          f.pop();
          f = k.concat(f);
          c.useBrush(m(c, c.middle), x.black, x.thin);
          c.fillArea(f, a);
        },
        rugged: function (a, b) {
          var c = new oc(this),
            d = ic.o,
            f = new B(d.x, d.y + -b);
          d = ic.o;
          var g = new B(d.x, d.y + -a);
          d = ic.o;
          var k = new B(
            d.x + -a,
            d.y +
              -10 *
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
          );
          d =
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
          var q = ta.lerp(ic.o, ta.lerp(k, g, d * d), 0.9);
          d = ic.o;
          var p = new B(
            d.x + a,
            d.y +
              -10 *
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
          );
          d =
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
          var h = ta.lerp(ic.o, ta.lerp(p, g, d * d), 0.9);
          g = new B(
            f.x +
              10 *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 -
                  0.5),
            f.y,
          );
          k = g.x < f.x ? [p, h, f, g, q, k] : [p, h, g, f, q, k];
          k = ic.wobble(k, [f], 0.5);
          k = kc.render(k, !1, 2, [f]);
          k = ic.wobble(k, [f], b / a);
          ic.fill(c, a, b);
          c.polygon(k.concat([ic.ob]));
          4 != x.shadingMode &&
            (c.useBrush(m(c, c.middle), x.black, x.thick, x.thin),
            c.trueStroke(k));
          if (4 != x.shadingMode)
            for (
              h = k.length >> 1,
                c.useBrush(m(c, c.decay), x.black, x.normal, x.ultraThin),
                q = h + 1,
                g = k.length - 1;
              q < g;

            ) {
              d = q++;
              h = k[d];
              var t = k[d + 1];
              d = h.subtract(k[d - 1]);
              t = t.subtract(h);
              var n = d.x * t.y - d.y * t.x;
              0 < n &&
                n / d.get_length() / t.get_length() > 1 + h.y / b &&
                ((t =
                  -h.y *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3)),
                null == t && (t = 1),
                (d = d.clone()),
                d.normalize(t),
                c.shortStroke(h, h.add(d)));
            }
          t = Math.sqrt(1.5 * b) | 0;
          f = [f];
          q = 0;
          for (g = t; q < g; )
            ((h = q++),
              (d = f[h]),
              (h = (h + 1) / t),
              f.push(
                new B(
                  0.5 * d.x +
                    h *
                      a *
                      (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) /
                        3 -
                        0.5),
                  d.y + b / t,
                ),
              ));
          q = f[f.length - 1];
          q.y += 0.1 * b * fa.vantage;
          f.push(new B(0.5 * q.x + 0.5 * p.x, 0.8 * q.y + 0.2 * p.y));
          a = new B(2 * -a, -b);
          a.normalize(1);
          b = k.slice(0, k.length >> 1).concat(f);
          c.useBrush(null, x.black, x.thin);
          c.fillArea(b, a);
        },
        __class__: ic,
      });
      var qd = function () {};
      h['com.watabou.perilous.mapping.sprites.Options'] = qd;
      qd.__name__ = 'com.watabou.perilous.mapping.sprites.Options';
      var te = (L['com.watabou.perilous.mapping.sprites.TownType'] = {
        __ename__: 'com.watabou.perilous.mapping.sprites.TownType',
        __constructs__: null,
        VILLAGE: {
          _hx_name: 'VILLAGE',
          _hx_index: 0,
          __enum__: 'com.watabou.perilous.mapping.sprites.TownType',
          toString: r,
        },
        TOWN: {
          _hx_name: 'TOWN',
          _hx_index: 1,
          __enum__: 'com.watabou.perilous.mapping.sprites.TownType',
          toString: r,
        },
        CITY: {
          _hx_name: 'CITY',
          _hx_index: 2,
          __enum__: 'com.watabou.perilous.mapping.sprites.TownType',
          toString: r,
        },
      });
      te.__constructs__ = [te.VILLAGE, te.TOWN, te.CITY];
      te.__empty_constructs__ = [te.VILLAGE, te.TOWN, te.CITY];
      var ue = (L['com.watabou.perilous.mapping.sprites.TownLayer'] = {
        __ename__: 'com.watabou.perilous.mapping.sprites.TownLayer',
        __constructs__: null,
        NORMAL: {
          _hx_name: 'NORMAL',
          _hx_index: 0,
          __enum__: 'com.watabou.perilous.mapping.sprites.TownLayer',
          toString: r,
        },
        OUTLINE: {
          _hx_name: 'OUTLINE',
          _hx_index: 1,
          __enum__: 'com.watabou.perilous.mapping.sprites.TownLayer',
          toString: r,
        },
        INNER: {
          _hx_name: 'INNER',
          _hx_index: 2,
          __enum__: 'com.watabou.perilous.mapping.sprites.TownLayer',
          toString: r,
        },
      });
      ue.__constructs__ = [ue.NORMAL, ue.OUTLINE, ue.INNER];
      ue.__empty_constructs__ = [ue.NORMAL, ue.OUTLINE, ue.INNER];
      var zf = function (a) {
        null == a && (a = !0);
        this.house_many_doors =
          this.house_flat_roof =
          this.tower_square =
          this.tower_no_roof =
          this.tower_crown =
            !1;
        this.flag_folds = 5;
        this.flag_swing = 1;
        this.flag_width = 6;
        this.flag_length = 20;
        this.tower_roof_onion = 0;
        this.tower_roof_concave = 0.4;
        this.tower_roof_slope = 3;
        this.tower_roof_radius = 1.5;
        this.tower_nub_ratio = 0.4;
        this.tower_max_height = 60;
        this.tower_min_height = 40;
        this.tower_max_radius = 7;
        this.tower_min_radius = 5;
        this.house_spheric_roof = 0;
        this.house_spine_concave = 0.96;
        this.house_window_shape = 0.4;
        this.house_window_width = 2;
        this.house_window_height = 6;
        this.house_door_width = 3;
        this.house_door_height = 8;
        this.house_side = 10;
        this.house_wall_slope = 0.05;
        this.house_roof_slope = 1.8;
        this.house_max_width = 30;
        this.house_min_width = 15;
        this.house_max_height = 30;
        this.house_min_height = 10;
        this.house_room_width = 15;
        this.house_floor_height = 20;
        if (a) {
          l.reset(I.random(1073741823));
          a = 0.3;
          null == a && (a = 0.5);
          this.house_many_doors =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a;
          a = 0.2;
          null == a && (a = 0.5);
          this.house_flat_roof =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a;
          this.house_floor_height =
            15 +
            10 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          a = this.house_many_doors ? 10 : 15;
          this.house_room_width =
            a +
            (7 - a) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              );
          this.house_min_height = 0.5 * this.house_floor_height;
          this.house_max_height =
            this.house_floor_height *
            (1 +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          this.house_min_width =
            10 +
            10 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          this.house_max_width =
            this.house_min_width *
            (1 +
              2 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3));
          a = this.house_min_height;
          this.house_door_height =
            0.5 *
            (a +
              (this.house_floor_height - a) *
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ));
          this.house_door_width =
            this.house_door_height *
            (0.25 +
              0.25 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3));
          this.house_window_height =
            this.house_door_height *
            (0.5 +
              0.30000000000000004 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3));
          this.house_window_width = Math.min(
            this.house_window_height *
              (0.3 +
                0.7 *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )),
            this.house_door_width,
          );
          this.house_window_shape = Math.pow(
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              3,
            2,
          );
          this.house_roof_slope =
            0.4 +
            2.8000000000000003 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          this.house_wall_slope =
            (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
            1;
          this.house_wall_slope *= 0 < this.house_wall_slope ? 0.2 : 0.1;
          this.house_side =
            this.house_min_width /
            Math.pow(
              1.5,
              2 *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            );
          this.tower_min_radius =
            4 +
            4 *
              Math.pow(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3,
                2,
              );
          this.tower_max_radius =
            this.tower_min_radius *
            (1 +
              2 *
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ));
          this.tower_min_height =
            this.house_max_height *
            (1 +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          this.tower_max_height =
            this.tower_min_height *
            (1 +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3);
          this.tower_roof_radius =
            1 + (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
          a = this.house_roof_slope;
          this.tower_roof_slope =
            a +
            (2 * this.house_roof_slope - a) *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647);
          this.tower_roof_concave =
            -0.4 +
            1.2000000000000002 *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647);
          a = this.house_flat_roof ? 0.5 : 0.3333333333333333;
          null == a && (a = 0.5);
          (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a &&
            (this.tower_roof_onion =
              0.4 +
              0.6 *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647));
          a = 0.2;
          null == a && (a = 0.5);
          this.tower_square =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a;
          a = 0.2;
          null == a && (a = 0.5);
          if (
            (this.tower_no_roof =
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a)
          )
            ((this.tower_min_height += this.house_floor_height / 2),
              (this.tower_max_height += this.house_floor_height / 2),
              (this.tower_min_radius += 2 * this.house_window_width),
              (this.tower_max_radius += 2 * this.house_window_width));
          0 == this.tower_roof_onion
            ? ((a = this.tower_no_roof ? 0.5 : 0.3),
              null == a && (a = 0.5),
              (a =
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a))
            : (a = !1);
          this.tower_crown = a;
          this.house_spine_concave =
            1 -
            (this.tower_roof_concave / this.house_roof_slope) *
              1.2 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3 -
                0.4);
          this.tower_nub_ratio =
            1 +
            -1 * ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647);
          1 >
            this.tower_min_radius *
              (this.tower_roof_radius - 1) *
              this.tower_nub_ratio && (this.tower_nub_ratio = 0);
          this.flag_length =
            20 *
            Math.pow(
              2,
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1,
            );
          this.flag_folds =
            ((this.flag_length / 4) | 0) +
            Math.floor(
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 3,
            );
          this.flag_width =
            4 +
            8 *
              Math.pow(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3,
                2,
              );
          this.flag_swing = Math.pow(
            2,
            (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
          this.house_flat_roof &&
            ((this.house_roof_slope = 0),
            (this.house_spine_concave = 1),
            (this.house_min_height *= 1.5),
            (this.house_max_height *= 1.5),
            (this.house_spheric_roof =
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            0.3 > this.house_spheric_roof && (this.house_spheric_roof = 0));
        }
      };
      h['com.watabou.perilous.mapping.sprites.Design'] = zf;
      zf.__name__ = 'com.watabou.perilous.mapping.sprites.Design';
      zf.prototype = { __class__: zf };
      var J = function () {
        this.right = 40;
        J.lastScale != x.townScale &&
          ((J.lastScale = x.townScale), J.updateScale());
        T.call(this);
        this.canvas = new oc(this);
      };
      h['com.watabou.perilous.mapping.sprites.TownIcon'] = J;
      J.__name__ = 'com.watabou.perilous.mapping.sprites.TownIcon';
      J.setDesign = function (a) {
        J.design != a &&
          ((J.design = a),
          (J.house_window_shape = J.design.house_window_shape),
          (J.house_roof_slope = J.design.house_roof_slope),
          (J.house_wall_slope = J.design.house_wall_slope),
          (J.house_spine_concave = J.design.house_spine_concave),
          (J.house_spheric_roof = J.design.house_spheric_roof),
          (J.tower_roof_radius = J.design.tower_roof_radius),
          (J.tower_nub_ratio = J.design.tower_nub_ratio),
          (J.tower_roof_slope = J.design.tower_roof_slope),
          (J.tower_roof_concave = J.design.tower_roof_concave),
          (J.tower_roof_onion = J.design.tower_roof_onion),
          (J.flag_swing = J.design.flag_swing),
          (J.flag_folds = J.design.flag_folds),
          (J.house_many_doors = J.design.house_many_doors),
          (J.house_flat_roof = J.design.house_flat_roof),
          (J.tower_square = J.design.tower_square),
          (J.tower_no_roof = J.design.tower_no_roof),
          (J.tower_crown = J.design.tower_crown),
          J.updateScale());
      };
      J.updateScale = function () {
        var a = x.townScale;
        J.xSpan = 20 * a;
        J.house_floor_height = a * J.design.house_floor_height;
        J.house_room_width = a * J.design.house_room_width;
        J.house_min_height = a * J.design.house_min_height;
        J.house_max_height = a * J.design.house_max_height;
        J.house_min_width = a * J.design.house_min_width;
        J.house_max_width = a * J.design.house_max_width;
        J.house_door_height = a * J.design.house_door_height;
        J.house_door_width = a * J.design.house_door_width;
        J.house_window_height = a * J.design.house_window_height;
        J.house_window_width = a * J.design.house_window_width;
        J.house_side = a * J.design.house_side;
        J.tower_min_radius = a * J.design.tower_min_radius;
        J.tower_max_radius = a * J.design.tower_max_radius;
        J.tower_min_height = a * J.design.tower_min_height;
        J.tower_max_height = a * J.design.tower_max_height;
        J.flag_length = a * J.design.flag_length;
        J.flag_width = a * J.design.flag_width;
      };
      J.town = function (a, b, c) {
        null == c && (c = ue.NORMAL);
        l.reset(b);
        var d = new J();
        d.layer = c;
        var f = (b = 0);
        switch (a._hx_index) {
          case 0:
            b = Math.floor(
              2 +
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 2,
            );
            break;
          case 1:
            b = Math.floor(
              3 +
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 3,
            );
            f = 1;
            break;
          case 2:
            ((b = Math.floor(
              5 +
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 3,
            )),
              (f = 2));
        }
        c = function (a, b, c) {
          null == c && (c = !0);
          for (var f = [], g = 0; g < a; ) {
            var k = g++;
            f.push(
              B.polar(
                1,
                (Math.PI *
                  (k +
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      3 -
                    0.5)) /
                  (a - 1),
              ),
            );
          }
          g = f;
          g.sort(function (a, b) {
            a = a.y - b.y;
            return 0 == a ? 0 : 0 > a ? -1 : 1;
          });
          for (f = 0; f < g.length; ) {
            var p = g[f];
            ++f;
            var q = 1 - Math.abs(p.x);
            k = J.house_min_width;
            k +=
              (J.house_max_width - k) *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              );
            q =
              J.house_min_height +
              (J.house_max_height - J.house_min_height) *
                q *
                (0.5 +
                  0.5 *
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                      2147483647));
            var h = Math.min(1, a / 3) * b * p.x - J.house_side / 2;
            p = c ? (p.y * b) / 3 : (-p.y * b) / 3 - J.house_min_height / 2;
            qd.sideView && c && (p = 0);
            var t = 0.7;
            null == t && (t = 0.5);
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < t
              ? d.drawFrontHouse(h, p, k, q)
              : d.drawSideHouse(h, p, k, q);
          }
        };
        a == te.CITY &&
          c(
            Math.floor(
              3 +
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) *
                  (b - 3),
            ),
            J.xSpan,
            !1,
          );
        d.canvas.end();
        if (1 == f) {
          f = J.tower_min_radius;
          var g = J.tower_min_height;
          d.drawTower(
            J.xSpan *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3 -
                (0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                  ? 1
                  : 0)),
            0,
            f +
              (J.tower_max_radius - f) *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            g +
              (J.tower_max_height - g) *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
          );
        } else if (2 == f) {
          g =
            0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
              ? 1
              : 0;
          f = J.tower_min_height;
          var k =
              f +
              (J.tower_max_height - f) *
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3),
            q =
              k *
              (1.1 +
                0.3999999999999999 *
                  (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3));
          f = J.tower_min_radius;
          d.drawTower(
            J.xSpan *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3 -
                (1 - g)),
            0,
            f +
              (J.tower_max_radius - f) *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            q,
          );
          f = J.tower_min_radius;
          d.drawTower(
            J.xSpan *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3 -
                g),
            0,
            f +
              (J.tower_max_radius - f) *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            k,
          );
        }
        c(b, (a == te.CITY ? 1.4 : 1) * J.xSpan);
        return d;
      };
      J.getBaseline = function () {
        return (x.townScale * J.R) / 2;
      };
      J.__super__ = T;
      J.prototype = u(T.prototype, {
        drawFrontHouse: function (a, b, c, d) {
          var f = c / 2,
            g = f * J.house_roof_slope,
            k = qd.rigid ? 0 : d * J.house_wall_slope,
            q = k / 2,
            p = g * (qd.rigid ? 0 : 1 - J.house_spine_concave),
            l = 0.75 * p;
          this.canvas.fill(x.walls);
          this.drawNormal();
          this.canvas.polygon([
            new B(a + (-f - k), b),
            new B(a + -f, b + -d),
            new B(a, b + (-d - g)),
            new B(a + f, b + -d),
            new B(a + (f + q), b),
          ]);
          var h = new B(a + (f + q), b),
            n = new B(a + f, b + -d),
            t = new B(a, b + (-d - g)),
            w = new B(a + 0.25 * J.house_side, b + (-d - g + l)),
            r = new B(a + 0.5 * J.house_side, b + (-d - g + p)),
            C = new B(a + 0.75 * J.house_side, b + (-d - g + l)),
            m = new B(a + J.house_side, b + (-d - g)),
            G = new B(a + (J.house_side + f), b + -d);
          q = J.house_side + f + k;
          k = b;
          k = [
            h,
            n,
            t,
            w,
            r,
            C,
            m,
            G,
            new B(
              a + q,
              0 < k ? (k * (this.right - (a + q))) / (this.right - a) : k,
            ),
          ];
          this.canvas.polygon(k);
          x.roofs == x.walls || J.house_flat_roof
            ? this.canvas.line(a + f, b - d, a + f + J.house_side, b - d)
            : (this.canvas.fill(x.roofs),
              this.canvas.polygon([
                new B(a + f, b + -d),
                new B(a, b + (-d - g)),
                new B(a + 0.25 * J.house_side, b + (-d - g + l)),
                new B(a + 0.5 * J.house_side, b + (-d - g + p)),
                new B(a + 0.75 * J.house_side, b + (-d - g + l)),
                new B(a + J.house_side, b + (-d - g)),
                new B(a + (J.house_side + f), b + -d),
              ]));
          this.canvas.useBrush(null, x.black, x.thin);
          this.fillArea(k, J.hatching_dirSW);
          this.canvas.end();
          if (d > J.house_floor_height)
            if (((g = Math.round(c / J.house_room_width)), 1 < g))
              for (
                p = Math.ceil(d / J.house_floor_height), l = 1, h = p;
                l < h;

              )
                for (
                  k = l++, k = b - (d / p) * (k + 0.5), n = 0, t = g;
                  n < t;

                )
                  ((q = n++),
                    (q = a - f + (c / (g + 1)) * (q + 1)),
                    this.drawWindow(q, k));
            else J.house_flat_roof || this.drawAttic(a, b - d);
          if (J.house_many_doors)
            for (g = Math.round(c / J.house_room_width), l = 0, h = g; l < h; )
              ((q = l++),
                (q = a - f + (c / (g + 1)) * (q + 1)),
                this.drawDoor(q, b));
          else this.drawDoor(a, b);
          0 < J.house_spheric_roof &&
            this.drawSphericRoof(c, a + J.house_side / 2, b - d);
        },
        drawSideHouse: function (a, b, c, d) {
          var f = c / 2,
            g = f * J.house_roof_slope,
            k = qd.rigid ? 0 : d * J.house_wall_slope,
            q = k / 2,
            p = g * (qd.rigid ? 0 : 1 - J.house_spine_concave),
            l = 0.75 * p;
          this.canvas.fill(x.walls);
          this.drawNormal();
          this.canvas.polygon([
            new B(a + (-f - k), b),
            new B(a + -f, b + -d),
            new B(a + (-f + J.house_side / 2), b + (-d - g)),
            new B(a + (-f / 2 + J.house_side / 2), b + (-d - g + l)),
            new B(a + J.house_side / 2, b + (-d - g + p)),
            new B(a + (f / 2 + J.house_side / 2), b + (-d - g + l)),
            new B(a + (f + J.house_side / 2), b + (-d - g)),
            new B(a + f, b + -d),
            new B(a + (f + q), b),
          ]);
          this.canvas.line(a - f, b - d, a + f, b - d);
          q = new B(a + (f + q), b);
          var h = new B(a + f, b + -d),
            n = new B(a + (f + J.house_side / 2), b + (-d - g)),
            t = new B(a + (f + J.house_side), b + -d);
          k = f + J.house_side + k;
          k = [
            q,
            h,
            n,
            t,
            new B(
              a + k,
              0 < b ? (b * (this.right - (a + k))) / (this.right - a) : b,
            ),
          ];
          this.canvas.polygon(k);
          x.roofs == x.walls ||
            J.house_flat_roof ||
            (this.canvas.fill(x.roofs),
            this.canvas.polygon([
              new B(a + -f, b + -d),
              new B(a + (-f + J.house_side / 2), b + (-d - g)),
              new B(a + (-f / 2 + J.house_side / 2), b + (-d - g + l)),
              new B(a + J.house_side / 2, b + (-d - g + p)),
              new B(a + (f / 2 + J.house_side / 2), b + (-d - g + l)),
              new B(a + (f + J.house_side / 2), b + (-d - g)),
              new B(a + f, b + -d),
            ]));
          this.canvas.useBrush(null, x.black, x.thin);
          this.fillArea(k, J.hatching_dirSW);
          this.canvas.end();
          g = Math.ceil(d / J.house_floor_height);
          p = Math.round((2 * f) / J.house_room_width);
          for (l = 0; l < g; )
            for (q = l++, h = b - (d / g) * (q + 0.5), n = 0, t = p; n < t; )
              ((k = n++),
                (k = a - f + (c / (p + 1)) * (k + 1)),
                0 == q && J.house_many_doors
                  ? this.drawDoor(k, b)
                  : this.drawWindow(k, h));
          0 < J.house_spheric_roof &&
            this.drawSphericRoof(c, a + J.house_side / 2, b - d);
        },
        drawSphericRoof: function (a, b, c) {
          var d = (J.house_spheric_roof * Math.PI) / 2;
          a = a / 2 / Math.sin(d);
          for (
            var f = Math.cos(d) * a,
              g = Math.ceil(d / (Math.PI / 12)),
              k = [],
              q = 0;
            q < g;

          ) {
            var p = q++;
            p = B.polar(a, (p / (g - 1)) * d - Math.PI / 2);
            k.push(new B(p.x, p.y + f));
          }
          this.drawConicRoof(k, b, c);
        },
        drawTower: function (a, b, c, d) {
          var f = c * J.tower_roof_radius,
            g = f * J.tower_roof_slope,
            k = qd.rigid ? c : c * (1 + 5 * J.house_wall_slope);
          this.canvas.fill(x.walls);
          this.drawNormal();
          var q = d,
            p = c,
            h = 0;
          if (0 < J.tower_nub_ratio) {
            q = d - J.house_floor_height;
            var t = J.tower_nub_ratio;
            null == t && (t = 0.5);
            p = c + (f - c) * t;
            h = p - c;
            t = [new B(p, -d), new B(p, -q), new B(c, -q + h), new B(k, 0)];
          } else t = [new B(c, -d), new B(k, 0)];
          this.drawCylinder(t, a, b, J.tower_square);
          J.tower_no_roof
            ? J.tower_crown
              ? this.drawSpire(
                  a,
                  b - d - (J.house_floor_height / 2 + (f - p) / 2),
                  J.flag_width / 2,
                )
              : (this.drawBattlements(
                  a - p,
                  a + p * (J.tower_square ? J.SHADE : 1),
                  b - d,
                ),
                this.drawSpire(a, b - d, J.flag_width / 2))
            : ((t = b - d),
              J.tower_crown && (t -= (f - p) / 2),
              0 < J.tower_roof_onion
                ? this.drawOnion(a, t, p, g)
                : this.drawCone(a, t, f, g),
              this.drawSpire(a, t - g));
          J.tower_crown && this.drawCrown(a, b - d, p, f);
          t = J.tower_nub_ratio;
          null == t && (t = 0.5);
          f =
            (c + (f - c) * t) *
            (J.tower_square
              ? (J.SHADE - 1) / 2
              : (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                1);
          this.drawWindow(a + f, b - d + J.house_floor_height / 2);
          J.tower_square &&
            2 != x.shadingMode &&
            (this.drawNormal(),
            this.canvas.polyline(
              0 < J.tower_nub_ratio
                ? [
                    new B(a + k * J.SHADE, b),
                    new B(a + c * J.SHADE, b + (-q + h)),
                    new B(a + p * J.SHADE, b + -q),
                    new B(a + p * J.SHADE, b + -d),
                  ]
                : [new B(a + k * J.SHADE, b), new B(a + c * J.SHADE, b + -d)],
            ),
            this.canvas.end());
        },
        drawCylinder: function (a, b, c, d) {
          for (var f = a.slice(), g = 0; g < a.length; ) {
            var k = a[g];
            ++g;
            f.unshift(new B(-k.x, k.y));
          }
          this.drawNormal();
          this.canvas.fill(x.walls);
          this.canvas.polygonAt(f, b, c);
          g = [];
          for (f = 0; f < a.length; )
            ((k = a[f]), ++f, g.push(new B(k.x * J.SHADE, k.y)));
          a = a.concat(da.revert(g));
          sc.asTranslate(a, b, c);
          this.canvas.useBrush(null, x.black, x.thin);
          this.fillArea(a, d ? J.hatching_dirSW : J.hatching_dirNE);
          this.canvas.end();
          d && (this.drawNormal(), this.canvas.polyline(g), this.canvas.end());
        },
        drawBattlements: function (a, b, c) {
          b -= a;
          for (
            var d = Math.max(J.house_window_width, x.normal),
              f = Math.max(J.house_window_height, x.normal),
              g = Math.floor((b / d - 1) / 2),
              k = 1;
            k < g;

          ) {
            var q = k++;
            q = a + (q / g) * b;
            this.drawFenestra([
              new B(q - d / 2, c),
              new B(q + d / 2, c),
              new B(q + d / 2, c + f),
              new B(q - d / 2, c + f),
            ]);
          }
        },
        drawCrown: function (a, b, c, d) {
          var f = J.house_floor_height / 2,
            g = (d - c) / 2;
          this.drawCylinder(
            [new B(c, 0), new B(d, -g), new B(d, -g - f)],
            a,
            b,
            J.tower_square,
          );
          this.drawBattlements(
            a - d,
            a + d * (J.tower_square ? J.SHADE : 1),
            b - g - f,
          );
        },
        drawSpire: function (a, b, c) {
          null == c && (c = 0);
          var d = this;
          if (qd.showFlags || qd.showPoles) {
            var f = function (a, b, c) {
                d.canvas.drawNormal();
                d.canvas.line(a, b, a, b - c);
              },
              g = function (a, b) {
                l.save();
                var c =
                    0.5 >
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                      ? 1
                      : 0,
                  f = new B(a + J.flag_length, b - J.flag_width / 2),
                  g = new B(a, b);
                a = new B(a, b - J.flag_width);
                b = [f];
                for (
                  var k = (J.flag_length / J.flag_folds) * J.flag_swing,
                    p = 1,
                    q = J.flag_folds;
                  p < q;

                ) {
                  var h = p++,
                    t =
                      (h +
                        (((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647) /
                          3 -
                          0.5)) /
                      J.flag_folds;
                  h = k * t * ((h & 1) == c ? 1 : -1);
                  h *=
                    0.5 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
                  var w = ta.lerp(f, g, t);
                  b.push(new B(w.x, w.y + h));
                  t = ta.lerp(f, a, t);
                  b.unshift(new B(t.x, t.y + h));
                }
                b.push(g);
                b.unshift(a);
                b = kc.render(b, !1, 2, [f]);
                4 != x.shadingMode &&
                  (d.canvas.draw(x.earth, 2 * x.thin),
                  d.canvas.polygon(b),
                  d.canvas.end());
                d.canvas.fill(x.flags);
                d.canvas.polygon(b);
                l.restore();
              };
            if (qd.showFlags) {
              var k = x.thin + x.normal / 2;
              qd.showPoles
                ? (g(a, b - k - c), f(a, b, J.flag_width + k + c))
                : g(a - x.thin / 2, b - k - c);
            } else f(a, b, J.flag_width);
          }
        },
        drawDoor: function (a, b) {
          var c = Math.max(J.house_door_width, x.normal),
            d = J.house_door_height,
            f = c * J.house_window_shape,
            g = f / 2;
          this.drawFenestra([
            new B(a + -c / 2, b),
            new B(a + -c / 2, b + (-d + f)),
            new B(a + (-c / 2 + g), b + -d),
            new B(a + (c / 2 - g), b + -d),
            new B(a + c / 2, b + (-d + f)),
            new B(a + c / 2, b),
          ]);
        },
        drawWindow: function (a, b) {
          var c = Math.max(J.house_window_width, x.normal),
            d = Math.max(J.house_window_height, x.normal),
            f = c * J.house_window_shape,
            g = f / 2;
          this.drawFenestra([
            new B(a + c / 2, b + d / 2),
            new B(a + c / 2, b + (-d / 2 + f)),
            new B(a + (c / 2 - g), b + -d / 2),
            new B(a + (-c / 2 + g), b + -d / 2),
            new B(a + -c / 2, b + (-d / 2 + f)),
            new B(a + -c / 2, b + d / 2),
          ]);
        },
        drawAttic: function (a, b) {
          var c = vg.regular(12, Math.max(J.house_window_width, x.normal) / 2);
          sc.asTranslate(c, a, b);
          this.drawFenestra(c);
        },
        drawFenestra: function (a) {
          this.canvas.end();
          qd.darkDoors || 2 == x.shadingMode
            ? (this.canvas.fill(x.black), this.canvas.polygon(a))
            : (this.canvas.drawThin(),
              this.canvas.fill(x.walls),
              this.canvas.polygon(a),
              this.canvas.useBrush(null, x.black, x.thin),
              this.fillArea(a, J.hatching_dirNE));
          this.canvas.end();
        },
        drawConicRoof: function (a, b, c, d) {
          null == d && (d = !1);
          var f = sc.scale(a, -1, 1);
          f.reverse();
          0 == a[0].x && (a = a.slice(1));
          this.canvas.fill(x.roofs);
          this.drawNormal();
          this.canvas.polygonAt(a.concat(f), b, c);
          this.canvas.end();
          this.canvas.useBrush(null, x.black, x.thin);
          a = a.concat(sc.scale(f, -J.SHADE, 1));
          sc.asTranslate(a, b, c);
          this.fillArea(a, d ? J.hatching_dirW : J.hatching_dirE);
          this.canvas.end();
          d &&
            3 == x.shadingMode &&
            (this.drawNormal(),
            (d = sc.scale(f, -J.SHADE, 1)),
            sc.asTranslate(d, b, c),
            this.canvas.polyline(d));
        },
        drawCone: function (a, b, c, d) {
          var f =
            d > c
              ? new B(0, -((d * d - c * c) / (2 * d)))
              : new B((c * c - d * d) / (2 * c), -d);
          c = kc.render(
            [
              new B(0, -d),
              ta.lerp(new B(c / 2, -d / 2), f, J.tower_roof_concave),
              new B(c, 0),
            ],
            !1,
            2,
          );
          this.drawConicRoof(c, a, b, J.tower_square);
        },
        drawOnion: function (a, b, c, d) {
          var f = new B(0, -d);
          d = new B(c * (1 - J.tower_roof_concave), -d / 2);
          var g = new B(c, 0);
          c = g.subtract(B.polar(c, Math.PI * J.tower_roof_onion));
          for (var k = [], q = 0; 8 > q; ) {
            var p = q++ / 7,
              l = ta.lerp(f, d, p),
              h = ta.lerp(d, c, p),
              n = ta.lerp(c, g, p);
            l = ta.lerp(l, h, p);
            h = ta.lerp(h, n, p);
            k.push(ta.lerp(l, h, p));
          }
          this.drawConicRoof(k, a, b);
        },
        drawNormal: function () {
          switch (this.layer._hx_index) {
            case 1:
              this.canvas.draw(x.black, 2 * x.thick - x.thin);
              break;
            case 2:
              this.canvas.drawThin();
              break;
            default:
              this.canvas.drawNormal();
          }
        },
        fillArea: function (a, b) {
          this.layer != ue.OUTLINE &&
            (l.save(), this.canvas.fillArea(a, b), l.restore());
        },
        __class__: J,
      });
      var Ib = function () {
        T.call(this);
      };
      h['com.watabou.perilous.mapping.sprites.TownSprite'] = Ib;
      Ib.__name__ = 'com.watabou.perilous.mapping.sprites.TownSprite';
      Ib.icon = function (a) {
        var b = new Ib();
        M.uniformTowns
          ? J.setDesign(Ib.commonDesign)
          : (null == a.design && (a.design = new zf()), J.setDesign(a.design));
        switch (a.type._hx_index) {
          case 0:
            var c = te.VILLAGE;
            break;
          case 1:
            c = te.TOWN;
            break;
          case 2:
            c = te.CITY;
        }
        l.run(a.cityscape, function () {
          var d = a.cityscape;
          return Ib.outline
            ? (b.addChild(J.town(c, d, ue.OUTLINE)),
              b.addChild(J.town(c, d, ue.INNER)))
            : b.addChild(J.town(c, d, ue.NORMAL));
        });
        return b;
      };
      Ib.getBaseline = function () {
        return !M.showTowns || M.pinTowns ? 0 : J.getBaseline() * fa.vantage;
      };
      Ib.getLabelPos = function (a) {
        if (M.pinTowns) {
          switch (a.type._hx_index) {
            case 0:
              var b = 8;
              break;
            case 1:
              b = 15;
              break;
            case 2:
              b = 20;
          }
          a = -b;
        } else a = 10;
        return x.townScale * a;
      };
      Ib.pin = function (a) {
        var b = new Ib(),
          c = b.get_graphics();
        c.beginFill(x.flags);
        switch (a.type._hx_index) {
          case 0:
            c.drawCircle(0, 0, 8 * x.townScale);
            break;
          case 1:
            Ib.drawRhombus(c, 15 * x.townScale);
            a = 15 * x.townScale - x.thick * Ib.sqrt2;
            0 < a && (c.beginFill(x.roofs), Ib.drawRhombus(c, a));
            break;
          case 2:
            (Ib.drawRhombus(c, 20 * x.townScale),
              (a = 20 * x.townScale - x.thick * Ib.sqrt2),
              0 < a &&
                (c.beginFill(x.roofs),
                Ib.drawRhombus(c, a),
                c.beginFill(x.flags),
                c.drawCircle(0, 0, Math.min(a, 8 * x.townScale))));
        }
        return b;
      };
      Ib.drawRhombus = function (a, b) {
        a.moveTo(-b, 0);
        a.lineTo(0, -b);
        a.lineTo(b, 0);
        a.lineTo(0, b);
        a.endFill();
      };
      Ib.__super__ = T;
      Ib.prototype = u(T.prototype, { __class__: Ib });
      var ae = function (a, b) {
        null == a && (a = 0);
        this.seed = 0 != a ? a : (l.seed = (48271 * l.seed) % 2147483647 | 0);
        this.tags = null != b ? b : Z.randomTags();
        Z.resolve(this.tags);
        this.width = Z.width;
        this.height = Z.height;
        this.name = null;
        this.hexes = fa.tiltMode;
      };
      h['com.watabou.perilous.model.Blueprint'] = ae;
      ae.__name__ = 'com.watabou.perilous.model.Blueprint';
      ae.random = function () {
        return new ae();
      };
      ae.fromTags = function (a, b, c) {
        c = new ae(null, c);
        c.width = a;
        c.height = b;
        return c;
      };
      ae.fromURL = function () {
        var a = ob.getInt('seed', 0),
          b = ob.get('tags', null);
        if (0 == a && null == b) return null;
        b = null == b ? null : b.split(',');
        a = new ae(a, b);
        a.width = ob.getInt('w', 1200);
        a.height = ob.getInt('h', 1200);
        a.name = ob.get('name', null);
        a.hexes = ob.getInt('hexes', 0);
        return a;
      };
      ae.prototype = {
        updateURL: function () {
          ob.reset();
          ob.set('seed', this.seed);
          ob.set('tags', this.tags.join(','));
          1200 != this.width && ob.set('w', this.width);
          1200 != this.height && ob.set('h', this.height);
          null != this.name && ob.set('name', encodeURIComponent(this.name));
          0 != this.hexes && ob.set('hexes', this.hexes);
        },
        __class__: ae,
      };
      var ok = function (a, b) {
        this.border = this.march = !1;
        this.region = a;
        this.face = b;
        this.poly = b.getPoly();
        this.center = Fd.center(this.poly);
      };
      h['com.watabou.perilous.model.Cell'] = ok;
      ok.__name__ = 'com.watabou.perilous.model.Cell';
      ok.prototype = {
        squash: function () {
          if (null != this.terrain) {
            for (
              var a = xa.getClass(this.terrain),
                b = !0,
                c = 0,
                d = this.face.getNeighbours();
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              if (xa.getClass(f.data.terrain) == a) {
                b = !1;
                break;
              }
            }
            b && (this.terrain = null);
          }
        },
        containsPoint: function (a) {
          var b = this.center,
            c = a.x - b.x;
          b = a.y - b.y;
          return c * c + b * b < fa.hexSqrR
            ? Yc.containsPoint(this.poly, a)
            : !1;
        },
        getLand: function () {
          if (null == this.landPoly) {
            if (this.coastal) {
              var a = [];
              for (var b = this.face.halfEdge, c = b, d = !0; d; ) {
                var f = c;
                c = c.next;
                d = c != b;
                var g = f.next.data.isCoast;
                f.data.isCoast && g
                  ? a.push(ta.lerp(f.origin.point, f.next.next.origin.point))
                  : a.push(f.next.origin.point);
              }
            } else a = this.poly;
            this.landPoly = a;
          }
          return this.landPoly;
        },
        getFeature: function () {
          null != this.site
            ? this.site.init()
            : null != this.terrain && this.terrain.init();
          return null != this.site
            ? this.site
            : null != this.terrain
              ? this.terrain.area
              : null;
        },
        __class__: ok,
      };
      var Hd = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = !1);
        this.isEdge = a;
        this.isCoast = b;
        this.river = c;
      };
      h['com.watabou.perilous.model.Edge'] = Hd;
      Hd.__name__ = 'com.watabou.perilous.model.Edge';
      Hd.prototype = { __class__: Hd };
      var pk = function (a) {
        this.towns = [];
        this.rivers = [];
        this.landlocked = !0;
        this.nicks = [];
        this.faces = a;
        this.size = a.length;
        this.buildCoast();
        this.buildRivers();
        this.spawnTerrains();
        this.spawnTowns();
      };
      h['com.watabou.perilous.model.Island'] = pk;
      pk.__name__ = 'com.watabou.perilous.model.Island';
      pk.prototype = {
        buildCoast: function () {
          var a = [];
          this.outline = ec.outline(this.faces);
          for (var b = 0, c = this.outline; b < c.length; ) {
            var d = c[b];
            ++b;
            for (var f = 0; f < d.length; ) {
              var g = d[f];
              ++f;
              null != g.twin &&
                ((g.data = g.twin.data = Hd.COAST),
                (g.face.data.coastal = !0),
                (g.twin.face.data.shallow = !0),
                da.add(a, g.face),
                (this.landlocked = !1));
            }
          }
          if (3 == this.faces[0].data.region.bp.hexes && 1 < this.faces.length)
            for (b = 0; b < a.length; ) {
              f = a[b];
              ++b;
              c =
                0.4 +
                0.6 *
                  (da.count(f.getNeighbours(), function (a) {
                    return a.data.land;
                  }) /
                    6);
              d = f.data.center;
              g = f = f.halfEdge;
              for (var k = !0; k; ) {
                var q = g;
                g = g.next;
                k = g != f;
                q = q.origin.point;
                lh.set(q, ta.lerp(d, q, c));
              }
            }
          this.buildCurves();
        },
        buildCurves: function () {
          l.save();
          this.rough = new va();
          this.coasts = new va();
          for (var a = 0, b = this.outline; a < b.length; ) {
            var c = b[a];
            ++a;
            var d = nd.toPoly(c);
            if (this.landlocked) {
              this.coasts.set(c, d);
              break;
            }
            for (
              var f = d.length, g = d[f - 2], k = d[f - 1], q = [], p = 0;
              p < f;

            ) {
              var h = p++,
                t = g;
              g = k;
              k = d[h];
              h = ta.lerp(t, k);
              q.push(
                ta.lerp(
                  h,
                  g,
                  Math.pow(
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
                    0.5,
                  ),
                ),
              );
            }
            d = q;
            d = xc.fractalize(d, null, 0.4);
            this.rough.set(c, d);
            d = fa.rugged ? xc.fractalize(d, 2) : kc.render(d, !0, 2);
            this.coasts.set(c, d);
          }
          l.restore();
        },
        buildRivers: function () {
          var a = this,
            b = this.faces[0].data.region;
          b = Math.max(b.width, b.height);
          var c = B.polar(
              1,
              2 *
                Math.PI *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            ),
            d = 2 / (b / 2);
          b = function (b) {
            for (var f = 0, g = 0, k = b.edges; g < k.length; ) {
              var p = k[g];
              ++g;
              f += p.face.data.level;
            }
            f /= b.edges.length;
            a.landlocked && (f += d * (c.y * b.point.x - c.x * b.point.y));
            return f;
          };
          for (var f = [], g = 0, k = this.outline; g < k.length; ) {
            var q = k[g];
            ++g;
            for (var p = nd.vertices(q), h = 0; h < p.length; ) {
              var t = p[h];
              ++h;
              f.push(t);
            }
          }
          q = f.slice();
          var n = [],
            w = [];
          for (g = 0; g < f.length; ) {
            var r = f[g];
            ++g;
            k = 0;
            for (h = r.edges; k < h.length; )
              if (((t = h[k]), ++k, null == t.twin)) {
                w.push(r);
                break;
              }
          }
          for (; 0 < q.length; ) {
            p = t = null;
            h = 2;
            g = 0;
            for (k = q.slice(); g < k.length; ) {
              r = k[g];
              ++g;
              var x = this.growChannel(r, f, n.slice(), b);
              null != x && 3 <= x.length
                ? x.length > h && ((h = x.length), (p = x), (t = r))
                : R.remove(q, r);
            }
            if (null != p) {
              g = p[p.length - 1].next.origin;
              k = null;
              h = 0;
              for (r = this.outline.length; h < r; )
                if (((x = h++), null != nd.edgeByOrigin(this.outline[x], t))) {
                  k = this.outline[x];
                  break;
                }
              h = new ti(
                this,
                k,
                null,
                p,
                -1 != w.indexOf(t) ? 0.666 : 1,
                -1 != w.indexOf(g) ? 0.333 : 0,
              );
              this.rivers.push(h);
              R.remove(q, t);
              p = nd.vertices(p, !0);
              for (g = 0; g < p.length; ) ((t = p[g]), ++g, n.push(t));
              t = Z.riverDensity;
              for (g = [h]; ; ) {
                p = [];
                h = 0;
                for (g = da.shuffle(g); h < g.length; ) {
                  k = g[h];
                  ++h;
                  r = k.channel;
                  x = [];
                  for (var C = 1, m = r.length - 3; C < m; ) {
                    var G = C++;
                    x.push(G);
                  }
                  x = da.shuffle(x);
                  for (C = 0; C < x.length; ) {
                    G = x[C];
                    ++C;
                    var y = r[G].origin;
                    m = k.getWidth(G);
                    var A = t * Math.sqrt(m);
                    null == A && (A = 0.5);
                    if (
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 <
                        A &&
                      ((y = this.growChannel(y, f, n.slice(), b)),
                      null != y && 3 <= y.length)
                    )
                      for (
                        y.length > r.length - G &&
                          (y = y.slice(0, r.length - G)),
                          G =
                            -1 != w.indexOf(y[y.length - 1].next.origin)
                              ? 0.333 * m
                              : 0,
                          m = new ti(this, null, k, y, m, G),
                          p.push(m),
                          m = nd.vertices(y, !0),
                          G = 0;
                        G < m.length;

                      )
                        ((y = m[G]), ++G, n.push(y));
                  }
                }
                if (0 < p.length)
                  for (g = p, h = this.rivers, k = 0; k < p.length; )
                    ((r = p[k]), ++k, h.push(r));
                else break;
              }
            } else break;
            if (
              da.count(this.faces, function (a) {
                return a.data.riverside;
              }) >=
              this.size * Z.riverDensity
            )
              break;
          }
          this.createRiverCurves();
          this.createNicks();
        },
        growChannel: function (a, b, c, d) {
          var f = null,
            g = 0;
          for (a = a.edges; g < a.length; ) {
            var k = a[g];
            ++g;
            null == k.data.river &&
              k.face.data.land &&
              null != k.twin &&
              k.twin.face.data.land &&
              (f = k);
          }
          if (
            null != f &&
            -1 == b.indexOf(f.next.origin) &&
            d(f.origin) < d(f.next.origin)
          ) {
            var q = [f];
            a = f.next.origin;
            c.push(a);
            for (var p = d(a); ; ) {
              var h = null;
              f = NaN;
              g = 0;
              for (a = a.edges; g < a.length; ) {
                k = a[g];
                ++g;
                if (-1 == c.indexOf(k.next.origin)) {
                  var t = k.data;
                  t = !t.isEdge && !t.isCoast;
                } else t = !1;
                t &&
                  ((t = d(k.next.origin)),
                  t > p &&
                    (null == h ||
                      0.5 >
                        (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647) &&
                    ((f = t), (h = k)));
              }
              g = h;
              if (null != g) {
                if (
                  ((a = g.next.origin),
                  q.push(g),
                  c.push(a),
                  (p = f),
                  -1 != b.indexOf(a))
                )
                  break;
              } else break;
            }
            return q;
          }
          return null;
        },
        createRiverCurves: function () {
          for (var a = 0, b = this.rivers; a < b.length; ) {
            var c = b[a];
            ++a;
            c.poly = null;
          }
          for (b = this.rivers.slice(); !da.isEmpty(b); ) {
            c = null;
            for (a = 0; a < b.length; ) {
              var d = b[a];
              ++a;
              if (null != d.coast || null != d.parent.poly) {
                c = d;
                break;
              }
            }
            c.createCurve();
            R.remove(b, c);
          }
        },
        createNicks: function () {
          this.nicks = [];
          if (!this.landlocked) {
            l.save();
            for (var a = [], b = 0, c = this.rivers; b < c.length; ) {
              var d = c[b];
              ++b;
              a.push(d.poly[0]);
            }
            for (b = this.coasts.iterator(); b.hasNext(); ) {
              c = b.next();
              var f = (Fd.perimeter(c) / 100) | 0;
              d = c.length;
              var g = da.difference(c, a);
              for (g = da.subset(g, f); 0 < g.length; ) {
                f = g.pop();
                var k = c.indexOf(f),
                  q = c[(k + d - 1) % d];
                k = c[(k + 1) % d];
                R.remove(g, q);
                R.remove(g, k);
                q = k.subtract(q);
                q.setTo(-q.y, q.x);
                k = Math.abs(q.x) / q.get_length();
                k = Math.pow(k, 2);
                null == k && (k = 0.5);
                q.normalize(
                  (1 + k) *
                    (1 +
                      Math.abs(
                        ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647 +
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647) /
                          2 -
                          1,
                      )),
                );
                k = new B(2 * q.x, 2 * q.y);
                f.x += k.x;
                f.y += k.y;
                q = new B(f.x + 5 * q.x, f.y + 5 * q.y);
                q = new B(q.x, q.y + -2);
                k = ta.lerp(f, q);
                k = new B(k.x, k.y + -1);
                this.nicks.push(kc.render([f, k, q], !1));
              }
            }
            l.restore();
          }
        },
        spawnTerrains: function () {
          for (var a = [], b = 0, c = this.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            null == d.data.terrain && a.push(d);
          }
          c = a;
          a = c.length * Z.forestDensity;
          d = a - (a | 0);
          null == d && (d = 0.5);
          b =
            (a | 0) +
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d
              ? 1
              : 0);
          a = c.length * Z.swampDensity;
          d = a - (a | 0);
          null == d && (d = 0.5);
          var f =
            (a | 0) +
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d
              ? 1
              : 0);
          a = c.length * Z.dessertDensity;
          d = a - (a | 0);
          null == d && (d = 0.5);
          var g =
            (a | 0) +
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < d
              ? 1
              : 0);
          d = [];
          for (a = 0; a < b; ) (a++, d.push(Nb));
          a = 0;
          for (b = f; a < b; ) (a++, d.push(oe));
          a = 0;
          for (b = g; a < b; ) (a++, d.push(ne));
          1 < c.length && d.push(Df);
          for (a = []; !da.isEmpty(c) && !da.isEmpty(d); ) {
            f = da.pick(d);
            b = da.pick(c);
            switch (f) {
              case ne:
                f = new ne(b.data);
                break;
              case Df:
                f = new Df(b.data);
                break;
              case oe:
                f = new oe(b.data);
                break;
              case Nb:
                f = new Nb(b.data, Nb.randomType());
                break;
              default:
                f = null;
            }
            b.data.terrain = f;
            a.push(b);
          }
          for (; !da.isEmpty(a); )
            for (
              b = da.pick(a), c = b.data.terrain, b = d = b.halfEdge, f = !0;
              f;

            )
              if (((g = b), (b = b.next), (f = b != d), null != g.twin)) {
                var k = g.twin.face;
                k.data.land &&
                  null == k.data.terrain &&
                  c.willGrow(g) &&
                  (c.spawn(k.data), a.push(k));
              }
          a = 0;
          for (b = this.faces; a < b.length; )
            ((c = b[a]),
              ++a,
              c.data.terrain instanceof Df && (c.data.terrain = null));
        },
        spawnTowns: function () {
          for (var a = [], b = 0, c = this.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            d.data.march ||
              (a.push(d),
              d.data.mountain ||
                (d.data.riverside && a.push(d),
                d.data.coastal && (a.push(d), a.push(d))));
          }
          b =
            a.length *
            Z.settlementDensity *
            Math.pow(
              2,
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1,
            );
          c = b - (b | 0);
          null == c && (c = 0.5);
          c =
            (b | 0) +
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < c
              ? 1
              : 0);
          0 == c && 0 < a.length && 18 < this.size && (c = 1);
          for (b = 0; b < c; ) {
            b++;
            if (0 == a.length) break;
            d = da.random(a);
            var f = this.addTown(d);
            d = fa.getVicinity(d, f.type._hx_index + 1);
            for (f = 0; f < d.length; ) {
              var g = d[f];
              for (++f; R.remove(a, g); );
            }
          }
          this.createRoads();
        },
        createRoads: function () {
          for (var a = [], b = 0, c = this.faces; b < c.length; ) {
            var d = c[b];
            ++b;
            d.data.border && a.push(d);
          }
          d = a;
          a = 2 * d.length * Z.settlementDensity;
          b = a - (a | 0);
          null == b && (b = 0.5);
          d = da.subset(
            d,
            (a | 0) +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b
                ? 1
                : 0),
          );
          var f = this.faces;
          a = [];
          b = 0;
          for (c = this.towns; b < c.length; ) {
            var g = c[b];
            ++b;
            a.push(g.cell.face);
          }
          this.network = new rh(f, a.concat(d));
        },
        addTown: function (a) {
          var b = da.random(Z.settlementChances);
          a = new Uc(a.data, b);
          this.towns.push(a);
          return a;
        },
        recreateGeometry: function () {
          for (var a = 0, b = this.faces; a < b.length; ) {
            var c = b[a];
            ++a;
            c.data.landPoly = null;
          }
          this.buildCurves();
          a = 0;
          for (b = this.rivers; a < b.length; )
            ((c = b[a]), ++a, c.createCurve());
          this.createNicks();
          a = 0;
          for (b = this.towns; a < b.length; )
            ((c = b[a]), ++a, (c.cellOffset = null));
          this.network.resetSegments();
          Ia.updateForests(this);
        },
        __class__: pk,
      };
      var oh = function (a) {
        l.save();
        l.reset(a.bp.seed);
        this.routes = [];
        if ('land' != Z.template) {
          for (var b = [], c = 0, d = a.islands; c < d.length; ) {
            var f = d[c];
            ++c;
            for (var g = [], k = 0, q = f.towns; k < q.length; )
              ((f = q[k]), ++k, f.cell.coastal && g.push(f));
            k = g;
            g = [];
            f = 0;
            for (q = k; f < q.length; ) {
              var p = q[f];
              ++f;
              p.type != cc.VILLAGE && g.push(p);
            }
            for (q = 0; q < g.length; ) ((f = g[q]), ++q, b.push(f));
            k = da.difference(k, g);
            for (g = 0; g < k.length; )
              ((f = k[g]),
                ++g,
                0.5 >
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 &&
                  b.push(f));
          }
          if (0 != b.length) {
            c = [];
            for (d = 0; d < b.length; ) ((k = b[d]), ++d, c.push(k.cell.face));
            b = c;
            c = [];
            d = 0;
            for (g = a.dcel.faces; d < g.length; )
              ((f = g[d]), ++d, f.data.land || c.push(f));
            k = c;
            c = [];
            d = 0;
            for (g = k; d < g.length; )
              ((f = g[d]), ++d, f.data.border && c.push(f));
            g = c;
            for (c = 0; c < b.length; ) ((f = b[c]), ++c, k.push(f));
            c = 2 * a.cols + 2 * a.rows;
            f = Math.round(
              Math.sqrt(
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
              ) *
                ((4 * g.length) / c),
            );
            q = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
            a = 2 * Math.max(a.width, a.height);
            c = 0;
            for (d = f; c < d; ) {
              p = c++;
              if (0 == g.length) break;
              p =
                2 *
                Math.PI *
                ((p +
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3) /
                  f +
                  q);
              p = [B.polar(a, p)];
              p = da.min(
                g,
                (function (a) {
                  return function (b) {
                    return B.distance(b.data.center, a[0]);
                  };
                })(p),
              );
              b.push(p);
              R.remove(g, p);
              da.removeAll(g, p.getNeighbours());
            }
            this.enabled = new va();
            this.initGraph(k);
            this.buildLinks(b);
            l.restore();
          }
        }
      };
      h['com.watabou.perilous.model.Navigation'] = oh;
      oh.__name__ = 'com.watabou.perilous.model.Navigation';
      oh.getPathPrice = function (a) {
        var b = a.length - 1,
          c = a[0];
        c = xa.__cast(c.data.site, Uc);
        b = null != c ? b / (c.type._hx_index + 2) : 10 * b;
        c = a[a.length - 1];
        c = xa.__cast(c.data.site, Uc);
        return (b = null != c ? b / (c.type._hx_index + 2) : 10 * b);
      };
      oh.prototype = {
        initGraph: function (a) {
          this.graph = new di();
          this.f2n = new va();
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = this.f2n,
              f = this.graph.add(new ei(c));
            d.set(c, f);
          }
          for (b = 0; b < a.length; ) {
            c = a[b];
            ++b;
            d = this.f2n.h[c.__id__];
            f = 0;
            for (var g = c.getNeighbours(); f < g.length; ) {
              var k = g[f];
              ++f;
              -1 != a.indexOf(k) &&
                d.link(
                  this.f2n.h[k.__id__],
                  c.data.shallow || k.data.shallow ? 10 : 1,
                );
            }
          }
        },
        buildLinks: function (a) {
          for (var b = a.length, c = [], d = 0, f = b; d < f; ) {
            d++;
            for (var g = [], k = 0, q = b; k < q; ) (k++, g.push(null));
            c.push(g);
          }
          var p = c,
            l = new va();
          c = 0;
          for (d = b - 1; c < d; ) {
            var h = c++,
              n = a[h],
              t = this.f2n.h[n.__id__];
            f = h + 1;
            for (g = b; f < g; ) {
              var w = f++;
              k = a[w];
              if (n.data.land || k.data.land) {
                var r = this.graph.aStar(t, this.f2n.h[k.__id__]);
                if (null != r) {
                  q = n.data;
                  null == q.island && (q.island = q.region.getIsland(q.face));
                  q = q.island;
                  if (null != q) {
                    var x = k.data;
                    null == x.island && (x.island = x.region.getIsland(x.face));
                    x = q == x.island;
                  } else x = !1;
                  if (!(x && q.network.getDistance(n, k) <= r.length)) {
                    k = [];
                    for (q = 0; q < r.length; )
                      ((x = r[q]), ++q, k.push(x.data));
                    q = oh.getPathPrice(k);
                    l.set(k, q);
                    p[h][w] = p[w][h] = k;
                  }
                }
              }
            }
          }
          c = 0;
          for (d = b; c < d; )
            if (((h = c++), !a[h].data.land)) {
              q = Infinity;
              n = -1;
              f = 0;
              for (g = b; f < g; )
                ((w = f++),
                  (k = p[h][w]),
                  null != k &&
                    q > l.h[k.__id__] &&
                    ((q = l.h[k.__id__]), (n = w)));
              if (-1 != n)
                for (k = 0, q = b; k < q; )
                  ((f = k++), f != n && (p[h][f] = p[f][h] = null));
            }
          c = [];
          d = 0;
          for (f = b; d < f; )
            ((h = d++),
              c.push(
                da.count(p[h], function (a) {
                  return null != a;
                }),
              ));
          q = c;
          c = 0;
          for (d = b - 1; c < d; )
            for (h = c++, f = h + 1, g = b; f < g; )
              ((w = f++),
                (k = p[h][w]),
                null != k && q[h] > q[w] != (k[0] == a[h]) && k.reverse());
          this.routes = [];
          c = 0;
          for (d = b - 1; c < d; )
            for (h = c++, f = h + 1, g = b; f < g; )
              if (((w = f++), null != p[h][w])) {
                a = l.h[p[h][w].__id__];
                n = !0;
                k = 0;
                for (q = b; k < q; )
                  if (
                    ((r = k++),
                    r != h &&
                      r != w &&
                      ((t = p[r][w]),
                      (r = p[h][r]),
                      null != t &&
                        null != r &&
                        ((r = l.h[r.__id__]), l.h[t.__id__] < a && r < a)))
                  ) {
                    n = !1;
                    break;
                  }
                n &&
                  ((w = p[h][w]), this.routes.push(w), this.enabled.set(w, !0));
              }
        },
        buildCurves: function () {
          for (var a = [], b = 0, c = this.routes; b < c.length; ) {
            var d = c[b];
            ++b;
            for (var f = d.length, g = [], k = 0, q = f; k < q; ) {
              var p = k++;
              p = d[p].data;
              if (p.border)
                g.push(
                  da.max(p.poly, function (a) {
                    return a.get_length();
                  }),
                );
              else {
                var l = p.center;
                p.site instanceof Uc
                  ? g.push(l.add(xa.__cast(p.site, Uc).getOffset()))
                  : g.push(l);
              }
            }
            d = g;
            g = [];
            k = 1;
            for (q = f - 1; k < q; )
              ((p = k++), g.push(ta.lerp(d[p], ta.lerp(d[p - 1], d[p + 1]))));
            xc.visvalingam(g, 8 > f ? 2 : f >> 2, 1.02);
            g.unshift(d[0]);
            g.push(d[d.length - 1]);
            a.push(g);
          }
          this.curves = a;
        },
        getCurves: function () {
          null == this.curves && this.buildCurves();
          return this.curves;
        },
        resetCurves: function () {
          this.curves = null;
        },
        __class__: oh,
      };
      var rh = function (a, b) {
        this.enabled = new va();
        1 < b.length
          ? (this.initGraph(a), this.buildLinks(b))
          : ((this.roads = []), (this.segments = []));
      };
      h['com.watabou.perilous.model.Network'] = rh;
      rh.__name__ = 'com.watabou.perilous.model.Network';
      rh.getPathPrice = function (a) {
        for (var b = 0, c = 1, d = a.length; c < d; ) {
          var f = c++,
            g = a[f - 1].data;
          f = a[f].data;
          b +=
            (g.site instanceof Uc ? 0 : g.mountain ? 4 : 1) +
            (f.site instanceof Uc ? 0 : f.mountain ? 4 : 1);
        }
        return b;
      };
      rh.prototype = {
        initGraph: function (a) {
          this.graph = new di();
          this.f2n = new va();
          for (var b = 0; b < a.length; ) {
            var c = a[b];
            ++b;
            var d = this.f2n,
              f = this.graph.add(new ei(c));
            d.set(c, f);
          }
          for (b = 0; b < a.length; ) {
            c = a[b];
            ++b;
            d = this.f2n.h[c.__id__];
            f = 0;
            for (var g = c.getNeighbours(); f < g.length; ) {
              var k = g[f];
              ++f;
              if (-1 != a.indexOf(k)) {
                var q = c.data,
                  p = k.data;
                d.link(
                  this.f2n.h[k.__id__],
                  (q.site instanceof Uc ? 0 : q.mountain ? 4 : 1) +
                    (p.site instanceof Uc ? 0 : p.mountain ? 4 : 1),
                );
              }
            }
          }
        },
        buildLinks: function (a) {
          for (var b = a.length, c = [], d = 0, f = b; d < f; ) {
            d++;
            for (var g = [], k = 0, q = b; k < q; ) (k++, g.push(null));
            c.push(g);
          }
          var p = c,
            l = new va();
          c = 0;
          for (d = b - 1; c < d; ) {
            var h = c++,
              n = this.f2n.h[a[h].__id__];
            f = h + 1;
            for (g = b; f < g; ) {
              var t = f++,
                w = this.graph.aStar(n, this.f2n.h[a[t].__id__]);
              k = [];
              for (q = 0; q < w.length; ) {
                var r = w[q];
                ++q;
                k.push(r.data);
              }
              p[h][t] = p[t][h] = k;
              t = rh.getPathPrice(k);
              l.set(k, t);
            }
          }
          this.roads = [];
          c = 0;
          for (d = b - 1; c < d; )
            for (h = c++, f = h + 1, g = b; f < g; ) {
              t = f++;
              a = l.h[p[h][t].__id__];
              n = !0;
              k = 0;
              for (q = b; k < q; )
                if (
                  ((w = k++),
                  w != h &&
                    w != t &&
                    ((r = l.h[p[h][w].__id__]),
                    l.h[p[w][t].__id__] < a && r < a))
                ) {
                  n = !1;
                  break;
                }
              n && ((t = p[h][t]), this.roads.push(t), this.enabled.set(t, !0));
            }
        },
        getDistance: function (a, b) {
          for (var c = 0, d = this.roads; c < d.length; ) {
            var f = d[c];
            ++c;
            var g = f[0],
              k = f[f.length - 1];
            if ((g == a && k == b) || (g == b && k == a)) return f.length;
          }
          return Infinity;
        },
        buildSegments: function (a) {
          if (0 == this.roads.length) this.segments = [];
          else {
            a = fa.hexRadius / 2;
            for (
              var b = new va(),
                c = function (a) {
                  if (null != b.h.__keys__[a.__id__]) return b.h[a.__id__];
                  var c = a.data,
                    d = c.border
                      ? da.max(c.poly, function (a) {
                          return a.get_length();
                        })
                      : c.center;
                  c.site instanceof Uc &&
                    (d = d.add(xa.__cast(c.site, Uc).getOffset()));
                  b.set(a, d);
                  return d;
                },
                d = [],
                f = 0,
                g = this.roads;
              f < g.length;

            ) {
              var k = g[f];
              ++f;
              da.addAll(d, k);
            }
            f = [];
            g = 0;
            for (k = da.shuffle(this.roads); g < k.length; ) {
              var q = k[g];
              ++g;
              this.enabled.h[q.__id__] && f.push(q);
            }
            k = f;
            for (this.segments = []; 0 < k.length; ) {
              var p = k.pop();
              for (f = 0; f < p.length; ) {
                for (var h = f; h < p.length && -1 == d.indexOf(p[h]); ) ++h;
                if (h >= p.length) break;
                for (var t = h + 1; t < p.length && -1 != d.indexOf(p[t]); )
                  ++t;
                0 < h && --h;
                t < p.length && ++t;
                var n = [c(p[h])];
                q = null;
                f = h + 1;
                for (g = t; f < g; ) {
                  var w = f++,
                    r = ta.lerp(p[w - 1].data.center, p[w].data.center),
                    x = B.polar(
                      a *
                        Math.sqrt(
                          (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                            2147483647,
                        ),
                      2 *
                        Math.PI *
                        ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                          2147483647),
                    );
                  r.x += x.x;
                  r.y += x.y;
                  n.push(r);
                  w > h + 1 && ((q = ta.lerp(r, q)), b.set(p[w - 1], q));
                  q = r;
                }
                n.push(c(p[t - 1]));
                this.segments.push(n);
                da.removeAll(d, p.slice(h, t));
                f = h + 1;
              }
            }
          }
        },
        getSegments: function (a) {
          null == this.segments && this.buildSegments(a);
          return this.segments;
        },
        resetSegments: function () {
          this.segments = null;
        },
        __class__: rh,
      };
      var zb = (L['com.watabou.perilous.model.Alignment'] = {
        __ename__: 'com.watabou.perilous.model.Alignment',
        __constructs__: null,
        GOOD: {
          _hx_name: 'GOOD',
          _hx_index: 0,
          __enum__: 'com.watabou.perilous.model.Alignment',
          toString: r,
        },
        LAWFUL: {
          _hx_name: 'LAWFUL',
          _hx_index: 1,
          __enum__: 'com.watabou.perilous.model.Alignment',
          toString: r,
        },
        NEUTRAL: {
          _hx_name: 'NEUTRAL',
          _hx_index: 2,
          __enum__: 'com.watabou.perilous.model.Alignment',
          toString: r,
        },
        CHAOTIC: {
          _hx_name: 'CHAOTIC',
          _hx_index: 3,
          __enum__: 'com.watabou.perilous.model.Alignment',
          toString: r,
        },
        EVIL: {
          _hx_name: 'EVIL',
          _hx_index: 4,
          __enum__: 'com.watabou.perilous.model.Alignment',
          toString: r,
        },
      });
      zb.__constructs__ = [zb.GOOD, zb.LAWFUL, zb.NEUTRAL, zb.CHAOTIC, zb.EVIL];
      zb.__empty_constructs__ = [
        zb.GOOD,
        zb.LAWFUL,
        zb.NEUTRAL,
        zb.CHAOTIC,
        zb.EVIL,
      ];
      var nk = function (a) {
        this.region = a;
      };
      h['com.watabou.perilous.model.RegionEditor'] = nk;
      nk.__name__ = 'com.watabou.perilous.model.RegionEditor';
      nk.prototype = {
        addDanger: function (a) {
          var b = new Je(a, 0);
          this.region.dangers.push(b);
          this.region.getFeatures().push(b);
          a.terrain instanceof Nb &&
            (null == a.island && (a.island = a.region.getIsland(a.face)),
            (a.island.forests = null));
          return b;
        },
        deleteDanger: function (a) {
          R.remove(this.region.getFeatures(), a);
          R.remove(this.region.dangers, a);
          a = a.cell;
          a.site = null;
          a.terrain instanceof Nb &&
            (null == a.island && (a.island = a.region.getIsland(a.face)),
            (a.island.forests = null));
        },
        addTown: function (a) {
          var b = da.random(Z.settlementChances);
          b = new Uc(a, b, !0);
          null == a.island && (a.island = a.region.getIsland(a.face));
          var c = a.island;
          c.towns.push(b);
          c.createRoads();
          this.region.getFeatures().push(b);
          a.coastal && this.region.resetNavigation();
          a.terrain instanceof Nb &&
            (null != c
              ? (a = c)
              : (null == a.island && (a.island = a.region.getIsland(a.face)),
                (a = a.island)),
            (a.forests = null));
          return b;
        },
        deleteTown: function (a) {
          var b = a.cell;
          b.site = null;
          null == b.island && (b.island = b.region.getIsland(b.face));
          var c = b.island;
          R.remove(c.towns, a);
          c.createRoads();
          R.remove(this.region.getFeatures(), a);
          b.coastal && this.region.resetNavigation();
          b.terrain instanceof Nb &&
            (null != c
              ? (a = c)
              : (null == b.island && (b.island = b.region.getIsland(b.face)),
                (a = b.island)),
            (a.forests = null));
        },
        addLandmark: function (a) {
          a = new bf(a);
          this.region.landmarks.push(a);
          this.region.getFeatures().push(a);
          return a;
        },
        deleteLandmark: function (a) {
          R.remove(this.region.getFeatures(), a);
          R.remove(this.region.landmarks, a);
          a.cell.site = null;
        },
        validateTownCell: function (a) {
          if (a.march || a.mountain || null != a.site) return !1;
          null == a.island && (a.island = a.region.getIsland(a.face));
          var b = a.island.towns,
            c = 0;
          for (a = a.face.getNeighbours(); c < a.length; ) {
            var d = a[c];
            ++c;
            for (var f = 0; f < b.length; ) {
              var g = b[f];
              ++f;
              if (g.cell.face == d) return !1;
            }
          }
          return !0;
        },
        validateDangerCell: function (a) {
          if (a.march || a.mountain || null != a.site) return !1;
          null == a.island && (a.island = a.region.getIsland(a.face));
          var b = a.island.towns,
            c = 0;
          for (a = a.face.getNeighbours(); c < a.length; ) {
            var d = a[c];
            ++c;
            for (var f = 0; f < b.length; ) {
              var g = b[f];
              ++f;
              if (g.cell.face == d) return !1;
            }
          }
          return !0;
        },
        validateLandmarkCell: function (a) {
          return a.march ? !1 : null == a.site;
        },
        __class__: nk,
      };
      var ti = function (a, b, c, d, f, g) {
        null == g && (g = 0);
        null == f && (f = 1);
        this.island = a;
        this.coast = b;
        this.parent = c;
        this.channel = d;
        this.start = f;
        this.end = g;
        for (a = 0; a < d.length; )
          ((b = d[a]),
            ++a,
            (b.data = b.twin.data = new Hd(null, null, this)),
            (b.face.data.riverside = !0),
            (b.twin.face.data.riverside = !0));
      };
      h['com.watabou.perilous.model.River'] = ti;
      ti.__name__ = 'com.watabou.perilous.model.River';
      ti.prototype = {
        createCurve: function () {
          var a = this;
          this.poly = nd.toPolyline(this.channel);
          var b =
              null != this.coast
                ? this.island.coasts.h[this.coast.__id__]
                : this.parent.poly,
            c = da.min(b, function (b) {
              return B.distance(b, a.poly[1]);
            });
          this.poly.shift();
          this.poly.unshift(c);
          if (1 == this.start) {
            var d = b.indexOf(c);
            if (-1 != d) {
              var f = b.length;
              f = b[(d + f - 1) % f];
            } else f = null;
            d = b.indexOf(c);
            d = -1 != d ? b[(d + 1) % b.length] : null;
            var g = d.subtract(f);
            b = new B(-g.y, g.x);
            var k = 3;
            null == k && (k = 1);
            g = b.clone();
            g.normalize(k);
            f.x += g.x;
            f.y += g.y;
            k = 9;
            null == k && (k = 1);
            g = b.clone();
            g.normalize(k);
            c.x += g.x;
            c.y += g.y;
            k = 3;
            null == k && (k = 1);
            g = b.clone();
            g.normalize(k);
            d.x += g.x;
            d.y += g.y;
          }
          c = this.poly;
          c[0] = c[0].clone();
          c = this.poly;
          d = this.poly.length - 1;
          c[d] = c[d].clone();
          this.poly = kc.render(this.poly, !1, 2);
          c = fa.vantage;
          1 != c && sc.asScale(this.poly, 1, 1 / c);
          l.save();
          this.poly = this.meander(this.poly);
          l.restore();
          1 != c && sc.asScale(this.poly, 1, c);
        },
        meander: function (a) {
          var b = 0.5 * fa.hexInner,
            c =
              b *
              (1 +
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                )),
            d = Fd.$length(a),
            f = new xg(a);
          a = [a[0], f.getPos(0.5 * c)];
          for (
            var g =
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                ? 1
                : -1;
            ;

          ) {
            var k = f.getPos(c);
            if (null == k) break;
            else {
              var q = this.start,
                p = c / d;
              null == p && (p = 0.5);
              p = q + (this.end - q) * p;
              q = b * (0.5 + 0.5 * p);
              p =
                0.2 +
                (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  p;
              p = ((g * Math.PI) / 2) * p * Z.riverTortuosity;
              var h = f.get_tangent(),
                t = Math.sin(p),
                n = Math.cos(p);
              h = new B(h.x * n - h.y * t, h.y * n + h.x * t);
              p = (0.5 * q) / (1 + Math.cos(p));
              null == p && (p = 1);
              h = h.clone();
              h.normalize(p);
              p = h;
              2 < a.length && a.push(k.subtract(p));
              a.push(k.add(p));
              g = -g;
              c += q;
            }
          }
          return uf.smoothOpen(a);
        },
        getWidth: function (a) {
          var b = this.start;
          a /= this.channel.length;
          null == a && (a = 0.5);
          return b + (this.end - b) * a;
        },
        __class__: ti,
      };
      var Xf = function (a) {
        this.region = a;
      };
      h['com.watabou.perilous.model.Serializer'] = Xf;
      Xf.__name__ = 'com.watabou.perilous.model.Serializer';
      Xf.saveAsJSON = function (a) {
        var b = new Xf(a).region2data();
        b = JSON.stringify(b, null, '  ');
        a = a.getFileName() + '.json';
        je.saveText(b, a, 'application/json');
      };
      Xf.set = function (a, b, c) {
        a[b] = c;
      };
      Xf.prototype = {
        region2data: function () {
          for (
            var a = {}, b = {}, c = 0, d = this.region.dcel.faces;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            var g = this.region.indices.h[f.halfEdge.origin.point.__id__];
            g = 'q' + g.x + '_r' + g.y;
            b[g] = this.getHex(f);
          }
          var k = {};
          c = 0;
          for (d = this.region.islands; c < d.length; ) {
            var q = d[c];
            ++c;
            var p = 0;
            for (q = q.network.roads; p < q.length; ) {
              var l = q[p];
              ++p;
              this.markHexSeq(k, l);
            }
          }
          l = {};
          if (null != this.region.routes)
            for (c = 0, d = this.region.routes.routes; c < d.length; ) {
              var h = d[c];
              ++c;
              this.markHexSeq(l, h);
            }
          h = {};
          c = 0;
          for (d = this.region.islands; c < d.length; )
            for (q = d[c], ++c, p = 0, q = q.rivers; p < q.length; ) {
              var n = q[p];
              ++p;
              var t = n.channel;
              if (null == t) g = null;
              else {
                f = t[0];
                g = this.region.indices.h[f.face.halfEdge.origin.point.__id__];
                f =
                  this.region.indices.h[
                    f.twin.face.halfEdge.origin.point.__id__
                  ];
                var w = t[t.length - 1];
                t = this.region.indices.h[w.face.halfEdge.origin.point.__id__];
                w =
                  this.region.indices.h[
                    w.twin.face.halfEdge.origin.point.__id__
                  ];
                g =
                  'q' +
                  g.x +
                  '_r' +
                  g.y +
                  ':q' +
                  (f.x + '_r' + f.y) +
                  '-q' +
                  (t.x + '_r' + t.y + ':q' + (w.x + '_r' + w.y));
              }
              f = [];
              t = 0;
              for (w = n.channel; t < w.length; ) {
                var r = w[t];
                ++t;
                var x =
                  this.region.indices.h[r.face.halfEdge.origin.point.__id__];
                r =
                  this.region.indices.h[
                    r.twin.face.halfEdge.origin.point.__id__
                  ];
                f.push('q' + x.x + '_r' + x.y + ':q' + (r.x + '_r' + r.y));
              }
              n = n.parent;
              w = null != n ? n.channel : null;
              null == w
                ? (n = null)
                : ((t = w[0]),
                  (n =
                    this.region.indices.h[t.face.halfEdge.origin.point.__id__]),
                  (t =
                    this.region.indices.h[
                      t.twin.face.halfEdge.origin.point.__id__
                    ]),
                  (x = w[w.length - 1]),
                  (w =
                    this.region.indices.h[x.face.halfEdge.origin.point.__id__]),
                  (x =
                    this.region.indices.h[
                      x.twin.face.halfEdge.origin.point.__id__
                    ]),
                  (n =
                    'q' +
                    n.x +
                    '_r' +
                    n.y +
                    ':q' +
                    (t.x + '_r' + t.y) +
                    '-q' +
                    (w.x + '_r' + w.y + ':q' + (x.x + '_r' + x.y))));
              h[g] = { parent: n, channel: f };
            }
          n = [];
          c = 0;
          for (d = this.region.getFeatures(); c < d.length; ) {
            t = d[c];
            ++c;
            if (t instanceof Od)
              for (w = xa.__cast(t, Od).faces, p = [], q = 0; q < w.length; )
                ((f = w[q]),
                  ++q,
                  (g = this.region.indices.h[f.halfEdge.origin.point.__id__]),
                  p.push('q' + g.x + '_r' + g.y));
            else
              ((f =
                this.region.indices.h[
                  t.cell.face.halfEdge.origin.point.__id__
                ]),
                (p = ['q' + f.x + '_r' + f.y]));
            n.push({ name: t.getName(), hexes: p });
          }
          c =
            2 == this.region.bp.hexes
              ? this.getLayoutFlag(!1)
                ? 'even-q'
                : 'odd-q'
              : this.getLayoutFlag(!0)
                ? 'even-r'
                : 'odd-r';
          a.name = this.region.name;
          a.origin = ob.getURL();
          a.bp = this.getBlueprint();
          a.layout = c;
          3 == this.region.bp.hexes && (a.angle = this.region.meshAngle);
          a.hexes = b;
          a.rivers = h;
          a.roads = k;
          a.searoutes = l;
          a.features = n;
          return a;
        },
        getBlueprint: function () {
          var a = {};
          a.width = this.region.bp.width;
          a.height = this.region.bp.height;
          a.tags = this.region.bp.tags;
          return a;
        },
        getHex: function (a) {
          var b = this.region.indices.h[a.halfEdge.origin.point.__id__];
          b = { q: b.x, r: b.y };
          null != a.data.site && this.markSite(b, a.data.site);
          null != a.data.terrain
            ? this.markTerrain(b, a.data.terrain)
            : a.data.land || Xf.set(b, 'terrain', 'water');
          return b;
        },
        markSite: function (a, b) {
          switch (xa.getClass(b)) {
            case Je:
              b = xa.__cast(b, Je);
              a.danger = { name: b.getName(), link: b.getLink() };
              break;
            case bf:
              b = xa.__cast(b, bf);
              var c = { name: b.getName(), info: b.getInfo() };
              16777216 != b.color && (c.color = b.color);
              a.landmark = c;
              break;
            case Uc:
              ((b = xa.__cast(b, Uc)),
                (a.town = {
                  name: b.getName(),
                  type: b.getNoun(),
                  info: b.getInfo(),
                  link: b.getLink(),
                }));
          }
        },
        markTerrain: function (a, b) {
          b instanceof nh
            ? (b = 'mountain')
            : b instanceof ne
              ? (b = 'desert')
              : b instanceof oe
                ? (b = 'swamp')
                : b instanceof wg
                  ? (b = 'rocks')
                  : b instanceof Nb
                    ? ((b = xa.__cast(b, Nb).type),
                      (b =
                        b == Ia.darkTree
                          ? 'forest-dark'
                          : b == Ia.deadTree
                            ? 'forest-dead'
                            : 'forest-light'))
                    : (b = 'unknown');
          a.terrain = b;
        },
        markHexSeq: function (a, b) {
          var c = this.region.indices.h[b[0].halfEdge.origin.point.__id__],
            d =
              this.region.indices.h[
                b[b.length - 1].halfEdge.origin.point.__id__
              ];
          d = 'q' + c.x + '_r' + c.y + '-q' + (d.x + '_r' + d.y);
          for (var f = [], g = 0; g < b.length; )
            ((c = b[g]),
              ++g,
              (c = this.region.indices.h[c.halfEdge.origin.point.__id__]),
              f.push('q' + c.x + '_r' + c.y));
          a[d] = f;
        },
        getLayoutFlag: function (a) {
          var b = B.polar(0.1, 0.1),
            c = this.region.getCell(b).face,
            d = this.region.indices,
            f = c.getPoly()[0];
          b = d.h[f.__id__];
          for (var g = new ug(), k = (c = c.halfEdge), q = !0; q; )
            ((d = k),
              (k = k.next),
              (q = k != c),
              (f = d.twin.face),
              (d = this.region.indices),
              (f = f.getPoly()[0]),
              (g = g.add(d.h[f.__id__])));
          return a
            ? g.x / 6 > b.x == (0 == (b.y & 1))
            : g.y / 6 > b.y == (0 == (b.x & 1));
        },
        __class__: Xf,
      };
      var cc = (L['com.watabou.perilous.model.content.TownType'] = {
        __ename__: 'com.watabou.perilous.model.content.TownType',
        __constructs__: null,
        VILLAGE: {
          _hx_name: 'VILLAGE',
          _hx_index: 0,
          __enum__: 'com.watabou.perilous.model.content.TownType',
          toString: r,
        },
        TOWN: {
          _hx_name: 'TOWN',
          _hx_index: 1,
          __enum__: 'com.watabou.perilous.model.content.TownType',
          toString: r,
        },
        CITY: {
          _hx_name: 'CITY',
          _hx_index: 2,
          __enum__: 'com.watabou.perilous.model.content.TownType',
          toString: r,
        },
      });
      cc.__constructs__ = [cc.VILLAGE, cc.TOWN, cc.CITY];
      cc.__empty_constructs__ = [cc.VILLAGE, cc.TOWN, cc.CITY];
      var Z = function () {};
      h['com.watabou.perilous.model.Settings'] = Z;
      Z.__name__ = 'com.watabou.perilous.model.Settings';
      Z.processTags = function (a) {
        var b = da.intersect(a, Z.TEMPLATE);
        Z.template = 0 < b.length ? b[0] : 'island';
        Z.lowlandArea = 0.6;
        -1 != a.indexOf('lowland') &&
          (Z.lowlandArea =
            1.1 -
            0.4 *
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3));
        -1 != a.indexOf('highland') && (Z.lowlandArea = 0.5);
        -1 != a.indexOf('difficult') && (Z.lowlandArea -= 0.1);
        Z.riverDensity = 0.25;
        -1 != a.indexOf('wetland') && (Z.riverDensity *= 1.5);
        -1 != a.indexOf('barren') && (Z.riverDensity /= 2);
        'coast' == Z.template
          ? (Z.riverDensity /= 1.5)
          : 'lake' == Z.template
            ? (Z.riverDensity /= 2)
            : 'land' == Z.template && (Z.riverDensity /= 2);
        Z.riverTortuosity = 1;
        -1 != a.indexOf('lowland') && (Z.riverTortuosity *= 1.2);
        -1 != a.indexOf('highland') && (Z.riverTortuosity /= 1.2);
        Z.swampDensity = 0.03333333333333333;
        -1 != a.indexOf('wetland') && (Z.swampDensity *= 1.5);
        -1 != a.indexOf('barren') && (Z.swampDensity /= 3);
        -1 != a.indexOf('difficult') && (Z.swampDensity *= 1.2);
        Z.forestDensity = 0.1;
        -1 != a.indexOf('woodland') && (Z.forestDensity *= 2);
        -1 != a.indexOf('wetland') && (Z.forestDensity /= 2);
        -1 != a.indexOf('barren') && (Z.forestDensity /= 3);
        -1 != a.indexOf('difficult') && (Z.forestDensity *= 1.2);
        Z.deadForestChance = 0.01;
        -1 != a.indexOf('wetland') && (Z.deadForestChance += 0.1);
        -1 != a.indexOf('barren') && (Z.deadForestChance += 0.1);
        -1 != a.indexOf('chaotic') && (Z.deadForestChance += 0.1);
        Z.dessertDensity = 0.025;
        -1 != a.indexOf('woodland') && (Z.dessertDensity /= 2);
        -1 != a.indexOf('wetland') && (Z.dessertDensity = 0);
        -1 != a.indexOf('barren') && (Z.dessertDensity *= 2);
        Z.settlementDensity = 0.016666666666666666;
        -1 != a.indexOf('civilized') && (Z.settlementDensity *= 1.5);
        -1 != a.indexOf('barren') && (Z.settlementDensity /= 1.5);
        Z.dungeonDensity = 0.03333333333333333;
        -1 != a.indexOf('safe') && (Z.dungeonDensity = 0);
        -1 != a.indexOf('perilous') && (Z.dungeonDensity *= 1.5);
        -1 != a.indexOf('land') &&
          ((Z.forestDensity /= 5),
          (Z.swampDensity /= 5),
          (Z.dessertDensity /= 5));
        Z.alignment = zb.NEUTRAL;
        b = 0;
        for (var c = zb.__empty_constructs__.slice(); b < c.length; ) {
          var d = c[b];
          ++b;
          -1 !=
            a.indexOf(
              L[d.__enum__].__constructs__[d._hx_index]._hx_name.toLowerCase(),
            ) && (Z.alignment = d);
        }
      };
      Z.randomTags = function () {
        var a = [];
        a.push(
          da.random(
            'lake land peninsula bay coast archipelago fjord island island island island island'.split(
              ' ',
            ),
          ),
        );
        var b = 0.3333333333333333;
        null == b && (b = 0.5);
        (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push(
            0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
              ? 'highland'
              : 'lowland',
          );
        b = 0.3333333333333333;
        null == b && (b = 0.5);
        (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push('wetland');
        b = 0.3333333333333333;
        null == b && (b = 0.5);
        (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push('woodland');
        b = 'island' == Z.template ? 0.2 : 0.125;
        null == b && (b = 0.5);
        (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push('difficult');
        b = 0.2;
        null == b && (b = 0.5);
        (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b &&
          a.push('civilized');
        b = 0.2;
        null == b && (b = 0.5);
        (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < b &&
          (a.push('barren'), R.remove(a, 'wetland'), R.remove(a, 'woodland'));
        b = fa.getAlign();
        a.push(
          L[b.__enum__].__constructs__[b._hx_index]._hx_name.toLowerCase(),
        );
        switch (b._hx_index) {
          case 0:
            var c = -3;
            break;
          case 1:
            c = -5;
            break;
          case 2:
            c = 0;
            break;
          case 3:
            c = 5;
            break;
          case 4:
            c = 3;
        }
        null == c && (c = 0);
        null == c && (c = 0);
        c =
          1 +
          Math.floor(
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 12,
          ) +
          c;
        switch (1 > c ? 1 : 12 < c ? 12 : c) {
          case 1:
            a.push('safe');
            break;
          case 10:
          case 11:
          case 12:
            a.push('perilous');
        }
        return a;
      };
      Z.resolve = function (a, b) {
        for (
          var c = [
              ['barren', 'wetland'],
              ['barren', 'woodland'],
              ['highland', 'lowland'],
              Z.DANGER,
              Z.ALIGNMENT,
              Z.TEMPLATE,
            ],
            d = 0;
          d < c.length;

        ) {
          var f = c[d];
          ++d;
          -1 != f.indexOf(b) && da.removeAll(a, da.difference(f, [b]));
        }
        null != b && a.push(b);
        da.intersects(a, Z.ALIGNMENT) || a.push('neutral');
        da.intersects(a, Z.TEMPLATE) || a.push('island');
      };
      Z.getInfo = function (a) {
        switch (a) {
          case 'archipelago':
            return 'A number of relatively small islands.';
          case 'barren':
            return 'There are fewer rivers, swamps and forests, more deserts. There are fewer settlements.';
          case 'bay':
            return 'A bay or a gulf.';
          case 'chaotic':
            return 'Most feature names hint their chaotic nature, coastlines are more jagged.';
          case 'civilized':
            return 'There are more settlements.';
          case 'coast':
            return 'A coastal region.';
          case 'difficult':
            return 'There are more mountains, forests and swamps.';
          case 'evil':
          case 'good':
          case 'neutral':
            return 'Most feature names hint their ' + a + ' nature.';
          case 'fjord':
            return 'A fjord.';
          case 'highland':
            return 'The mountains are higher, there are more of them.';
          case 'island':
            return 'An island or a small archipelago.';
          case 'lake':
            return 'A waterbody surrounded by earth.';
          case 'land':
            return 'A landlocked region.';
          case 'lawful':
            return 'Most feature names hint their lawful nature, coastlines are smoother.';
          case 'lowland':
            return 'The mountains are lower, there are fewer of them.';
          case 'peninsula':
            return 'A peninsula, a headland or an isthmus.';
          case 'perilous':
            return 'More dangers, towns and cities are more defended.';
          case 'safe':
            return 'No dangers, towns and cities less defended.';
          case 'wetland':
            return 'There are more rivers and swamps, fewer forests and no deserts.';
          case 'woodland':
            return 'There are more forests and fewer deserts.';
          default:
            return null;
        }
      };
      var Ha = function () {};
      h['com.watabou.perilous.model.TownStory'] = Ha;
      Ha.__name__ = 'com.watabou.perilous.model.TownStory';
      Ha.reset = function () {
        Ha.resources = da.shuffle(Ha.resources);
      };
      Ha.get = function (a) {
        var b = a.cell.region,
          c = a.getNoun(),
          d = a.cell,
          f = null;
        if (d.coastal)
          f =
            0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
              ? 'coastal'
              : -1 != b.bp.tags.indexOf('lake')
                ? 'lakeside'
                : 'seaside';
        else if (d.riverside) f = 'riverside';
        else if (d.mountain) f = 'mountain';
        else if (null != d.terrain)
          switch (xa.getClass(d.terrain)) {
            case ne:
              f = 'desert';
              break;
            case oe:
              f = 'swamp';
              break;
            case Nb:
              f = 'forest';
              break;
            default:
              f = null;
          }
        var g = a.countRoads(),
          k = g;
        d.coastal && ++k;
        d.riverside && ++k;
        var q = [null];
        switch (a.type._hx_index) {
          case 0:
            d.coastal &&
              (q.push('fishing'),
              -1 == b.bp.tags.indexOf('lake') && q.push('whaling'));
            d.mountain &&
              q.push(
                0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                  ? 'mining'
                  : da.fallOff('coal iron copper slate gold gem'.split(' ')) +
                      '-mining',
              );
            d.terrain instanceof Nb && da.addAll(q, ['logging', 'hunting']);
            2 < k && q.push('market');
            break;
          case 1:
            d.coastal &&
              (da.addAll(q, ['fishing', 'shipbuilding']),
              0 < g && q.push('port'),
              -1 == b.bp.tags.indexOf('lake') && q.push('whaling'));
            d.mountain &&
              q.push(
                0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                  ? 'mining'
                  : da.fallOff('coal iron copper slate gold gem'.split(' ')) +
                      '-mining',
              );
            3 < k && q.push(da.random(['trade', 'market']));
            break;
          case 2:
            d.coastal && q.push('port');
        }
        d = da.random(q);
        b = [];
        null != f && b.push(f);
        if (null != d)
          for (f = [d, d], d = 0; d < f.length; ) ((q = f[d]), ++d, b.push(q));
        c = 0 < b.length ? '' + da.random(b) + ' ' + c : c;
        f = null;
        0 == k ||
        (0 == g &&
          0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647)
          ? (f = 'isolated')
          : 1 == k
            ? (f = 'remote')
            : 5 == k
              ? (f = 'busy')
              : 6 <= k && (f = 'bustling');
        null != f && (c = '' + f + ' ' + c);
        switch (a.type._hx_index) {
          case 0:
            switch (
              Math.floor(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) *
                  (0 == b.length && null == f ? 2 : 3),
              )
            ) {
              case 0:
                var p = Ha.pickOne();
                break;
              case 1:
                p = Ha.pickTwo();
                break;
              default:
                p = null;
            }
            break;
          case 1:
            p =
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                ? Ha.pickOne()
                : Ha.pickTwo();
            break;
          case 2:
            p = Ha.pickTwo();
        }
        g = Le.capitalize(kl.a(c));
        null != p && (g += ' of ' + p);
        g += '.';
        0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 &&
          (g += ' Touchstone: ' + Ha.getCentrepiece(a) + '.');
        return g;
      };
      Ha.pickOne = function () {
        return (
          (0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
            ? 'abundant '
            : 'scarce ') + Ha.pickRes()
        );
      };
      Ha.pickTwo = function () {
        var a = 0.8;
        null == a && (a = 0.5);
        return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
          ? 'abundant ' +
              Ha.pickRes() +
              (0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
                ? ' and '
                : ' but ') +
              'scarce ' +
              Ha.pickRes()
          : (0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
              ? 'abundant '
              : 'scarce ') +
              Ha.pickRes() +
              ' and ' +
              Ha.pickRes();
      };
      Ha.pickRes = function () {
        var a = (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
        a = Math.floor((Ha.resources.length - 1) * a * a);
        var b = Ha.resources[a];
        Ha.resources.splice(a, 1);
        Ha.resources.push(b);
        return b;
      };
      Ha.getCentrepiece = function (a) {
        null == Ha.grammar
          ? ((Ha.grammar = new ui(JSON.parse(Rb.getText('centrepiece')))),
            Ha.grammar.addModifiers(Za.get()))
          : Ha.grammar.clearState();
        for (var b = 0, c = a.getFlags(); b < c.length; ) {
          var d = c[b];
          ++b;
          da.addAll(Ha.grammar.flags, new Ba(', +', '').split(d));
        }
        Ha.grammar.pushRules('name', [a.getName()]);
        return Ha.grammar.flatten('#centrepiece.a#');
      };
      var zg = function () {
        this.initialized = !1;
      };
      h['com.watabou.perilous.model.content.Feature'] = zg;
      zg.__name__ = 'com.watabou.perilous.model.content.Feature';
      zg.prototype = {
        init: function () {
          this.initialized || (this.initialize(), (this.initialized = !0));
        },
        getName: function () {
          null == this.name && this.rollName();
          return this.name;
        },
        getInfo: function () {
          return null;
        },
        rollName: function () {
          this.name = I.string(this);
        },
        getRequest: function () {
          return null;
        },
        getLink: function () {
          var a = this.getRequest();
          if (null == a) return null;
          for (
            var b = a.url, c = '', d = ya.fields(a.data), f = 0;
            f < d.length;

          ) {
            var g = d[f];
            ++f;
            0 < c.length && (c += '&');
            var k = ya.field(a.data, g);
            c += encodeURIComponent(g) + '=' + encodeURIComponent(k);
          }
          return (b = -1 != b.indexOf('?') ? b + ('&' + c) : b + ('?' + c));
        },
        open: function () {
          null != this.getRequest() && Ra.getURL(this.getRequest(), this.name);
        },
        initialize: function () {},
        toString: function () {
          return this.getName();
        },
        fillMenu: function (a) {
          a.addItem('Edit...', m(this, this.edit));
          var b = this.cell.region.features;
          null != b && -1 != b.indexOf(this)
            ? a.addItem('Unlabel', m(this, this.remove))
            : a.addItem('Label', m(this, this.add));
        },
        edit: function () {
          var a = this;
          return null == w.findForm(ag)
            ? (w.showDialog(
                new ag(this.name, function (b) {
                  a.name = b;
                  M.updateLabels(a);
                }),
              ),
              !0)
            : !1;
        },
        add: function () {
          da.add(this.cell.region.getFeatures(), this);
          M.updateLabels(this);
        },
        remove: function () {
          R.remove(this.cell.region.features, this);
          M.updateLabels(this);
        },
        __class__: zg,
      };
      var Od = function (a) {
        this.initialized = !1;
        this.cell = a[0].data;
        this.faces = a;
      };
      h['com.watabou.perilous.model.content.Area'] = Od;
      Od.__name__ = 'com.watabou.perilous.model.content.Area';
      Od.__super__ = zg;
      Od.prototype = u(zg.prototype, {
        initialize: function () {
          for (var a = new B(), b = 0, c = 0, d = this.faces; c < d.length; ) {
            var f = d[c];
            ++c;
            f = f.data.center;
            a.x += f.x;
            a.y += f.y;
            ++b;
          }
          f = 1 / b;
          a.x *= f;
          a.y *= f;
          this.cell = da.min(this.faces, function (b) {
            return null == b.data.site
              ? B.distance(a, b.data.center)
              : Infinity;
          }).data;
        },
        __class__: Od,
      });
      var pd = function (a) {
        this.initialized = !1;
        this.cell = a;
        a.site = this;
        a.squash();
      };
      h['com.watabou.perilous.model.content.Site'] = pd;
      pd.__name__ = 'com.watabou.perilous.model.content.Site';
      pd.__super__ = zg;
      pd.prototype = u(zg.prototype, {
        getFlags: function () {
          var a = [];
          this.cell.coastal && a.push('COAST');
          this.cell.riverside && a.push('RIVER');
          this.cell.mountain && a.push('MOUNT');
          if (null != this.cell.terrain) {
            switch (xa.getClass(this.cell.terrain)) {
              case ne:
                var b = 'DESERT';
                break;
              case oe:
                b = 'SWAMP';
                break;
              case Nb:
                b = 'FOREST';
                break;
              default:
                b = 'PLAIN';
            }
            a.push(b);
          }
          return a;
        },
        __class__: pd,
      });
      var Je = function (a, b) {
        pd.call(this, a);
        this.type = b;
        this.seed = l.seed;
      };
      h['com.watabou.perilous.model.content.Danger'] = Je;
      Je.__name__ = 'com.watabou.perilous.model.content.Danger';
      Je.__super__ = pd;
      Je.prototype = u(pd.prototype, {
        rollName: function () {
          this.name = 0 == this.type ? ka.dungeon(this.getFlags()) : '???';
        },
        fillMenu: function (a) {
          pd.prototype.fillMenu.call(this, a);
          a.addItem('Open in 1PDG', m(this, this.open));
        },
        getRequest: function () {
          var a = new Zf('https://watabou.github.io/one-page-dungeon/');
          a.method = 'GET';
          a.data = { seed: this.seed, name: this.name };
          a.data.from = 'perilous';
          return a;
        },
        edit: function () {
          w.replaceDialog(new vi(this), null);
          return !0;
        },
        delete: function () {
          this.cell.region.editor.deleteDanger(this);
        },
        __class__: Je,
      });
      var Wc = function (a) {
        this.cell = a;
        a.terrain = this;
      };
      h['com.watabou.perilous.model.content.Terrain'] = Wc;
      Wc.__name__ = 'com.watabou.perilous.model.content.Terrain';
      Wc.prototype = {
        willGrow: function (a) {
          return !1;
        },
        spawn: function (a) {
          throw aa.thrown("This kind of terrain can't grow!");
        },
        init: function () {
          null == this.area &&
            ((this.area = new wi(this.buildArea())),
            (this.area.align = this.getAlign()),
            this.area.init());
        },
        buildArea: function () {
          var a = xa.getClass(this);
          return ec.floodFill(this.cell.face, function (b) {
            return xa.getClass(b.data.terrain) == a;
          });
        },
        getName: function (a, b) {
          return I.string(this);
        },
        getAlign: function () {
          return fa.getAlign(Z.alignment);
        },
        __class__: Wc,
      };
      var ne = function (a) {
        Wc.call(this, a);
      };
      h['com.watabou.perilous.model.content.Desert'] = ne;
      ne.__name__ = 'com.watabou.perilous.model.content.Desert';
      ne.__super__ = Wc;
      ne.prototype = u(Wc.prototype, {
        willGrow: function (a) {
          a = 1 - a.twin.face.data.aboveSea;
          null == a && (a = 0.5);
          return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a;
        },
        spawn: function (a) {
          a.terrain = new ne(a);
        },
        getName: function (a, b) {
          a = (a - 5) / 6;
          null == a && (a = 0.5);
          return ka.terrain(
            'desert' +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
                ? '-n'
                : '-1'),
            b,
          );
        },
        __class__: ne,
      });
      var bf = function (a) {
        this.color = 16777216;
        pd.call(this, a);
        this.desc = '';
      };
      h['com.watabou.perilous.model.content.Landmark'] = bf;
      bf.__name__ = 'com.watabou.perilous.model.content.Landmark';
      bf.__super__ = pd;
      bf.prototype = u(pd.prototype, {
        rollName: function () {
          this.name = 'Landmark ' + this.cell.region.landmarks.length;
        },
        getInfo: function () {
          return this.desc;
        },
        edit: function () {
          w.replaceDialog(new xi(this));
          return !0;
        },
        delete: function () {
          this.cell.region.editor.deleteLandmark(this);
        },
        getColor: function () {
          return 16777216 == this.color ? x.banner : this.color;
        },
        setColor: function (a) {
          this.color = a == x.banner ? 16777216 : a;
        },
        __class__: bf,
      });
      var nh = function (a, b) {
        Wc.call(this, a);
        this.height = b;
      };
      h['com.watabou.perilous.model.content.Mountain'] = nh;
      nh.__name__ = 'com.watabou.perilous.model.content.Mountain';
      nh.__super__ = Wc;
      nh.prototype = u(Wc.prototype, {
        getName: function (a, b) {
          a = (a - 1) / 2;
          null == a && (a = 0.5);
          return ka.terrain(
            'mountain' +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
                ? '-n'
                : '-1'),
            b,
          );
        },
        __class__: nh,
      });
      var Df = function (a) {
        Wc.call(this, a);
      };
      h['com.watabou.perilous.model.content.Plain'] = Df;
      Df.__name__ = 'com.watabou.perilous.model.content.Plain';
      Df.__super__ = Wc;
      Df.prototype = u(Wc.prototype, {
        willGrow: function (a) {
          return null == a.data.river;
        },
        spawn: function (a) {
          a.terrain = new Df(a);
        },
        getName: function (a, b) {
          return '_plain_';
        },
        __class__: Df,
      });
      var wg = function (a) {
        Wc.call(this, a);
        this.rocks = [];
        for (this.circles = []; ; ) {
          var b =
              fa.hexInner *
              (0.2 +
                0.4 *
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )),
            c = B.polar(
              (fa.hexInner - b) *
                Math.sqrt(
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
                ),
              2 *
                Math.PI *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            );
          a = new bi(c, b);
          for (var d = !0, f = 0, g = this.circles; f < g.length; ) {
            var k = g[f];
            ++f;
            if (a.overlaps(k)) {
              d = !1;
              break;
            }
          }
          if (!d)
            if (
              ((a = 1 / (this.rocks.length + 1)),
              null == a && (a = 0.5),
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a)
            )
              continue;
            else break;
          d =
            Math.PI *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647);
          f = Math.floor(
            4 + ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 4,
          );
          g = [];
          k = 0;
          for (var q = f; k < q; ) {
            var p = k++;
            p = B.polar(
              b *
                (1 -
                  Math.abs(
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      2 -
                      1,
                  )),
              d +
                (2 *
                  Math.PI *
                  (p +
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647 +
                      (l.seed = (48271 * l.seed) % 2147483647 | 0) /
                        2147483647) /
                      3)) /
                  f,
            );
            p.x += c.x;
            p.y += c.y;
            p.y *= fa.vantage;
            g.push(p);
          }
          b = g;
          b = fa.rugged ? xc.fractalize(b) : kc.render(b, !0, 2);
          this.rocks.push(b);
          this.circles.push(a);
          a = 1 / (this.rocks.length + 1);
          null == a && (a = 0.5);
          if (!((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a))
            break;
        }
      };
      h['com.watabou.perilous.model.content.SeaRocks'] = wg;
      wg.__name__ = 'com.watabou.perilous.model.content.SeaRocks';
      wg.__super__ = Wc;
      wg.prototype = u(Wc.prototype, { __class__: wg });
      var oe = function (a) {
        Wc.call(this, a);
      };
      h['com.watabou.perilous.model.content.Swamp'] = oe;
      oe.__name__ = 'com.watabou.perilous.model.content.Swamp';
      oe.__super__ = Wc;
      oe.prototype = u(Wc.prototype, {
        willGrow: function (a) {
          a = a.twin.face.data;
          if (a.riverside && a.coastal) return !0;
          a = (a.riverside ? 1 : 0.3333333333333333) * (1 - a.aboveSea);
          null == a && (a = 0.5);
          return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a;
        },
        spawn: function (a) {
          a.terrain = new oe(a);
        },
        getName: function (a, b) {
          a = (a - 1) / 3;
          null == a && (a = 0.5);
          return ka.terrain(
            'swamp' +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
                ? '-n'
                : '-1'),
            b,
          );
        },
        getAlign: function () {
          return fa.getAlign(Z.alignment, -2);
        },
        __class__: oe,
      });
      var wi = function (a) {
        Od.call(this, a);
      };
      h['com.watabou.perilous.model.content.TerrainArea'] = wi;
      wi.__name__ = 'com.watabou.perilous.model.content.TerrainArea';
      wi.__super__ = Od;
      wi.prototype = u(Od.prototype, {
        rollName: function () {
          this.name = this.cell.terrain.getName(this.faces.length, this.align);
        },
        initialize: function () {
          Od.prototype.initialize.call(this);
          for (var a = 0, b = this.faces; a < b.length; ) {
            var c = b[a];
            ++a;
            c.data.terrain.area = this;
          }
        },
        edit: function () {
          return this.cell.terrain instanceof Nb
            ? (w.replaceDialog(new yi(this), null), !0)
            : Od.prototype.edit.call(this);
        },
        __class__: wi,
      });
      var Uc = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = cc.TOWN);
        this.cellOffset = null;
        pd.call(this, a);
        this.type = b;
        this.seed = this.cityscape = l.seed;
        if (b == cc.CITY && !c)
          for (b = 0, a = fa.getVicinity(a.face, 1); b < a.length; )
            ((c = a[b]),
              ++b,
              c.data.terrain instanceof Nb && (c.data.terrain = null));
      };
      h['com.watabou.perilous.model.content.Town'] = Uc;
      Uc.__name__ = 'com.watabou.perilous.model.content.Town';
      Uc.__super__ = pd;
      Uc.prototype = u(pd.prototype, {
        getOffset: function () {
          if (null == this.cellOffset) {
            this.cellOffset = new B();
            for (var a = this.cell.face.halfEdge, b = a, c = !0; c; ) {
              var d = b;
              b = b.next;
              c = b != a;
              if (d.data.isCoast || null != d.data.river) {
                d = ta
                  .lerp(d.origin.point, d.next.origin.point, 0.5)
                  .subtract(this.cell.center);
                var f = this.cellOffset;
                f.x += d.x;
                f.y += d.y;
              }
            }
            0.001 < this.cellOffset.get_length() &&
              this.cellOffset.normalize(fa.hexInner / (1 + x.townScale));
          }
          return this.cellOffset;
        },
        initialize: function () {
          null != this.cell.terrain && this.cell.terrain.init();
          this.story = Ha.get(this);
        },
        toString: function () {
          return this.getName() + ' ' + Le.capitalizeAll(this.getNoun());
        },
        getFlags: function () {
          var a = pd.prototype.getFlags.call(this);
          switch (this.type._hx_index) {
            case 0:
              a.push('VILLAGE');
              break;
            case 1:
              a.push('TOWN');
              break;
            case 2:
              a.push('CITY');
          }
          return a;
        },
        rollName: function () {
          var a = this.getFlags();
          switch (this.type._hx_index) {
            case 0:
              var b = ka.village(a);
              break;
            case 1:
              b = ka.town(a);
              break;
            case 2:
              b = ka.city(a);
          }
          this.name = b;
        },
        getNoun: function () {
          var a = this.type;
          return L[a.__enum__].__constructs__[
            a._hx_index
          ]._hx_name.toLowerCase();
        },
        fillMenu: function (a) {
          pd.prototype.fillMenu.call(this, a);
          M.pinTowns || a.addItem('Reroll icon', m(this, this.rollIcon));
          a.addItem(
            this.type == cc.TOWN || this.type == cc.CITY
              ? 'Open in MFCG'
              : 'Open in VG',
            m(this, this.open),
          );
        },
        edit: function () {
          w.replaceDialog(new zi(this), null);
          return !0;
        },
        delete: function () {
          this.cell.region.editor.deleteTown(this);
        },
        getInfo: function () {
          return this.story;
        },
        countRoads: function () {
          for (
            var a = 0,
              b = 0,
              c = this.cell.region.getIsland(this.cell.face).network.roads;
            b < c.length;

          ) {
            var d = c[b];
            ++b;
            (d[0] != this.cell.face && d[d.length - 1] != this.cell.face) ||
              ++a;
          }
          return a;
        },
        rollIcon: function () {
          this.design = new zf();
          this.cityscape = l.seed = (48271 * l.seed) % 2147483647 | 0;
          M.updateSprites();
        },
        getRequest: function () {
          return this.type == cc.TOWN || this.type == cc.CITY
            ? this.townRequest()
            : this.villageRequest();
        },
        townRequest: function () {
          l.save();
          l.reset(this.seed);
          var a = this.cell.region,
            b = -1 != a.bp.tags.indexOf('safe'),
            c = -1 != a.bp.tags.indexOf('perilous'),
            d = 0.5;
          -1 != a.bp.tags.indexOf('civilized') && (d += 0.5);
          this.type == cc.CITY && (d += 0.5);
          b && (d *= 1.5);
          c && (d *= 0.5);
          a = 0.4;
          this.type == cc.CITY && (a += 0.5);
          b && (a *= 0.5);
          c && (d *= 1.5);
          b = new B();
          c = 0;
          for (var f = this.cell.face.getNeighbours(); c < f.length; ) {
            var g = f[c];
            ++c;
            g.data.land ||
              ((g = g.data.center.subtract(this.cell.center)),
              (b.x += g.x),
              (b.y += g.y));
          }
          b =
            1 < b.get_length()
              ? Math.atan2(b.y, b.x) / Math.PI - 0.5
              : ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) * 2;
          c = new Zf('https://watabou.github.io/city-generator/');
          c.method = 'GET';
          f =
            this.type == cc.TOWN
              ? Math.floor(
                  15 +
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                      2147483647) *
                      15,
                )
              : Math.floor(
                  30 +
                    ((l.seed = (48271 * l.seed) % 2147483647 | 0) /
                      2147483647) *
                      20,
                );
          g = this.seed;
          var k = this.name,
            q = this.type == cc.CITY ? 1 : 0;
          if (this.type == cc.CITY) {
            var p = 0.25;
            null == p && (p = 0.5);
            var h =
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < p;
          } else h = !1;
          p = a;
          null == p && (p = 0.5);
          a =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < p
              ? 1
              : 0;
          p = d;
          null == p && (p = 0.5);
          d =
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < p
              ? 1
              : 0;
          p = this.countRoads();
          var t =
              this.type == cc.CITY ||
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647,
            n =
              this.type == cc.CITY ||
              0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647;
          c.data = {
            size: f,
            seed: g,
            name: k,
            citadel: q,
            urban_castle: h ? 1 : 0,
            walls: a,
            shantytown: d,
            gates: p,
            plaza: t ? 1 : 0,
            temple: n ? 1 : 0,
            river: this.cell.riverside ? 1 : 0,
            coast: this.cell.coastal ? 1 : 0,
            sea: b,
          };
          c.data.from = 'perilous';
          l.restore();
          return c;
        },
        villageRequest: function () {
          var a = [];
          if (this.cell.coastal) {
            var b = this.cell;
            null == b.island && (b.island = b.region.getIsland(b.face));
            1 == b.island.size ? a.push('island') : a.push('coast');
          } else this.cell.riverside ? a.push('river') : a.push('nowater');
          b = new Zf('https://watabou.github.io/village-generator/');
          b.method = 'GET';
          b.data = { seed: this.seed, name: this.name, tags: a.join(',') };
          b.data.from = 'perilous';
          return b;
        },
        __class__: Uc,
      });
      var Nb = function (a, b) {
        Wc.call(this, a);
        this.type = b;
      };
      h['com.watabou.perilous.model.content.Wood'] = Nb;
      Nb.__name__ = 'com.watabou.perilous.model.content.Wood';
      Nb.randomType = function () {
        var a = Z.deadForestChance;
        null == a && (a = 0.5);
        return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
          ? Ia.deadTree
          : 0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
            ? Ia.lightTree
            : Ia.darkTree;
      };
      Nb.__super__ = Wc;
      Nb.prototype = u(Wc.prototype, {
        willGrow: function (a) {
          a = null != a.data.river ? 0.2 : 0.5;
          null == a && (a = 0.5);
          return (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a;
        },
        spawn: function (a) {
          a.terrain = new Nb(a, this.type);
        },
        getName: function (a, b) {
          a = (a - 1) / 3;
          null == a && (a = 0.5);
          return ka.terrain(
            'wood' +
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
                ? '-n'
                : '-1'),
            b,
          );
        },
        getTrees: function () {
          return pe.get(
            this.cell,
            Nb.minR / Math.sqrt(x.treesDensity),
            x.treesRegularity,
          );
        },
        __class__: Nb,
      });
      var lc = function (a) {
        this.region = a;
        this.long = Math.max(a.width, a.height);
        this.short = Math.min(a.width, a.height);
        this.long2 = this.long / 2;
        this.short2 = this.short / 2;
      };
      h['com.watabou.perilous.model.templates.Raiser'] = lc;
      lc.__name__ = 'com.watabou.perilous.model.templates.Raiser';
      lc.get = function (a) {
        switch (Z.template) {
          case 'archipelago':
            return new Ai(a);
          case 'bay':
            return new Bi(a);
          case 'coast':
            return new Ci(a);
          case 'fjord':
            return new Di(a);
          case 'island':
            return new Me(a);
          case 'lake':
            return new Ei(a);
          case 'peninsula':
            return new Fi(a);
          default:
            return new lc(a);
        }
      };
      lc.prototype = {
        raise: function (a) {
          return 0;
        },
        __class__: lc,
      };
      var Ai = function (a) {
        lc.call(this, a);
        var b = a.dcel.faces.length;
        this.distance =
          Math.sqrt(b / Math.ceil(Math.pow(b / 20, 0.7))) * fa.hexRadius;
        var c = new gh(a.viewWidth, a.viewHeight, this.distance);
        b = 0.5;
        -1 != a.bp.tags.indexOf('lawful')
          ? (b = 0)
          : -1 != a.bp.tags.indexOf('chaotic') && (b = 1);
        c.uneven(b);
        b = [];
        var d = 0;
        for (c = c.points; d < c.length; ) {
          var f = c[d];
          ++d;
          b.push(new B(f.x - a.viewWidth / 2, f.y - a.viewHeight / 2));
        }
        this.islands = b;
      };
      h['com.watabou.perilous.model.templates.ArchiRaiser'] = Ai;
      Ai.__name__ = 'com.watabou.perilous.model.templates.ArchiRaiser';
      Ai.__super__ = lc;
      Ai.prototype = u(lc.prototype, {
        raise: function (a) {
          for (var b = 0, c = 0, d = this.islands; c < d.length; ) {
            var f = d[c];
            ++c;
            f = 1 - B.distance(f, a) / (this.distance / 2);
            f = 0.5 * (0 < f ? f * f * (3 - 2 * f) : 0);
            b < f && (b = f);
          }
          return b;
        },
        __class__: Ai,
      });
      var Bi = function (a) {
        lc.call(this, a);
        this.slope =
          1 +
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
        this.dir = B.polar(
          1,
          2 *
            Math.PI *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        this.dir.x *= a.width / a.height;
        this.dir.normalize(1);
      };
      h['com.watabou.perilous.model.templates.BayRaiser'] = Bi;
      Bi.__name__ = 'com.watabou.perilous.model.templates.BayRaiser';
      Bi.__super__ = lc;
      Bi.prototype = u(lc.prototype, {
        raise: function (a) {
          return (
            this.slope *
            Math.min(
              1,
              (a.get_length() + (this.dir.y * a.x - this.dir.x * a.y)) /
                this.long2,
            )
          );
        },
        __class__: Bi,
      });
      var Ci = function (a) {
        lc.call(this, a);
        this.slope =
          0.5 +
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
        this.dir = B.polar(
          1,
          2 *
            Math.PI *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        this.dir.x *= a.width / a.height;
        this.dir.normalize(1);
      };
      h['com.watabou.perilous.model.templates.CoastRaiser'] = Ci;
      Ci.__name__ = 'com.watabou.perilous.model.templates.CoastRaiser';
      Ci.__super__ = lc;
      Ci.prototype = u(lc.prototype, {
        raise: function (a) {
          return (
            this.slope *
            Math.min(1, (this.dir.y * a.x - this.dir.x * a.y) / this.short2)
          );
        },
        __class__: Ci,
      });
      var Di = function (a) {
        lc.call(this, a);
        this.slope =
          1.5 +
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
        var b =
            this.short2 *
            Math.pow(
              0.5,
              2 *
                Math.abs(
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    2 -
                    1,
                ),
            ),
          c = a.width;
        a = a.height;
        var d = vg.rect(c, a);
        a = He.pierce(
          d,
          new B(),
          new B(
            c *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 - 0.5),
            a *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 - 0.5),
          ),
        );
        c = a[0];
        a = a[1];
        d =
          1 -
          Math.abs(
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              2 -
              1,
          );
        a = new B(a.x * d, a.y * d);
        this.skeleton = new sh();
        b = this.skeleton.addBone(c, b, a, 0);
        this.skeleton.shatter(
          b,
          10,
          0.7,
          1 +
            0.5 *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
        );
        do {
          b = [];
          c = 0;
          for (a = this.skeleton.bones; c < a.length; )
            ((d = a[c]), ++c, 0 < d.r1 && b.push(d));
          b = da.random(b);
          c = b.p1.subtract(b.p0);
          c.normalize(
            this.short2 *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
          );
          d =
            (Math.PI / 2) *
            (1 -
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              )) *
            da.random([-1, 1]);
          a = Math.sin(d);
          d = Math.cos(d);
          c.setTo(c.x * d - c.y * a, c.y * d + c.x * a);
          b = this.skeleton.addBone(b.p1, b.r1, b.p1.add(c), 0);
          this.skeleton.shatter(b, 5, 0.5);
        } while (
          0.5 >
          (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
        );
      };
      h['com.watabou.perilous.model.templates.FjordRaiser'] = Di;
      Di.__name__ = 'com.watabou.perilous.model.templates.FjordRaiser';
      Di.__super__ = lc;
      Di.prototype = u(lc.prototype, {
        raise: function (a) {
          var b = this.skeleton.distRidge(a);
          a = this.slope;
          0 < b
            ? (b = 1 - ac.gate(b, 0, 1))
            : ((b = ac.gate(-b, 0, 1)), (b = -(b * b * (3 - 2 * b))));
          return a * b;
        },
        __class__: Di,
      });
      var Fi = function (a) {
        lc.call(this, a);
        this.slope =
          1 +
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
        this.ridge = Math.abs(
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            2 -
            1,
        );
        var b = (this.round =
            this.short2 *
            Math.pow(
              2,
              (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1,
            )),
          c =
            this.round *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
          d = vg.rect(a.width, a.height);
        d = He.pierce(
          d,
          new B(),
          new B(
            a.width *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 - 0.5),
            a.height *
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 - 0.5),
          ),
        );
        a = d[0];
        var f = d[1];
        d = B.distance(a, f);
        f = f.subtract(a);
        d = (d - c) / d;
        f = a.add(new B(f.x * d, f.y * d));
        f = ta.lerp(
          a,
          f,
          1 -
            0.5 *
              Math.abs(
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  2 -
                  1,
              ),
        );
        this.skeleton = new sh();
        b = this.skeleton.addBone(a, b, f, c);
        this.skeleton.shatter(
          b,
          20,
          0.5,
          1 +
            Math.abs(
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
        );
      };
      h['com.watabou.perilous.model.templates.HeadRaiser'] = Fi;
      Fi.__name__ = 'com.watabou.perilous.model.templates.HeadRaiser';
      Fi.__super__ = lc;
      Fi.prototype = u(lc.prototype, {
        raise: function (a) {
          var b = this.skeleton.distSoftRidge(a, this.ridge, this.round);
          if (0 < b) return 0;
          a = this.slope;
          b = ac.gate(-b, 0, 1);
          return a * b * b * (3 - 2 * b);
        },
        __class__: Fi,
      });
      var Me = function (a) {
        lc.call(this, a);
        this.slope =
          1 +
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
        var b =
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
          3;
        null == b && (b = 0.5);
        var c = 1 + (this.long / this.short - 1) * b;
        this.ridge = Math.abs(
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            2 -
            1,
        );
        this.round =
          this.short2 *
          Math.pow(
            2,
            (((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
              3) *
              2 -
              1,
          );
        var d =
            this.round *
            Math.abs(
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
          f =
            this.round *
            Math.abs(
              ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                2 -
                1,
            ),
          g =
            2 *
            Math.PI *
            ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
          k = B.polar(this.short2 - d, g);
        g = B.polar(
          this.short2 - f,
          g +
            Math.PI *
              (0.5 + (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
        );
        b = k.add(g);
        b = new B(-0.5 * b.x, -0.5 * b.y);
        a.width > a.height
          ? ((k.x *= c), (g.x *= c))
          : ((k.y *= c), (g.y *= c));
        Me.skeleton = new sh();
        a = Me.skeleton.addBone(k, d, b, this.round);
        f = Me.skeleton.addBone(g, f, b, this.round);
        Me.skeleton.shatter(a, 10);
        Me.skeleton.shatter(f, 10);
      };
      h['com.watabou.perilous.model.templates.IslandRaiser'] = Me;
      Me.__name__ = 'com.watabou.perilous.model.templates.IslandRaiser';
      Me.__super__ = lc;
      Me.prototype = u(lc.prototype, {
        raise: function (a) {
          var b = Me.skeleton.distSoftRidge(a, this.ridge, this.round);
          if (0 < b) return 0;
          a = this.slope;
          b = ac.gate(-b, 0, 1);
          return a * b * b * (3 - 2 * b);
        },
        __class__: Me,
      });
      var Ei = function (a) {
        lc.call(this, a);
        this.slope =
          0.5 +
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            3;
      };
      h['com.watabou.perilous.model.templates.LakeRaiser'] = Ei;
      Ei.__name__ = 'com.watabou.perilous.model.templates.LakeRaiser';
      Ei.__super__ = lc;
      Ei.prototype = u(lc.prototype, {
        raise: function (a) {
          return this.slope * Math.min(1, a.get_length() / this.short2);
        },
        __class__: Ei,
      });
      var ka = function () {};
      h['com.watabou.perilous.toponymy.Namer'] = ka;
      ka.__name__ = 'com.watabou.perilous.toponymy.Namer';
      ka.reset = function (a) {
        ka.useLang = Da.get('useConlang', !1);
        ka.terrNoun = Da.get('terrNoun', !1);
        null == ka.lang ? (ka.lang = yc.common()) : ka.lang.reset();
        null == ka.grammar &&
          ((ef.rng = l.float),
          (ka.grammar = new ui(JSON.parse(Rb.getText('grammar')))),
          (ka.grammar.defaultSelector = Gi),
          ka.grammar.addModifiers(Za.get()),
          ka.grammar.addExternal('word', ka.word),
          ka.grammar.addExternal('fantasy', ka.fantasy),
          ka.grammar.addExternal('evil', ka.evil),
          ka.grammar.addExternal('given', ka.given),
          (ka.english = new Ld(Rb.getText('english').split(' '))),
          (ka.elven = new Ld(Rb.getText('elven').split(' '))),
          (ka.demonic = new Ld(Rb.getText('demonic').split(' '))),
          (ka.male = new Ld(Rb.getText('male').split(' '))),
          (ka.female = new Ld(Rb.getText('female').split(' '))));
        ka.grammar.clearState();
        var b = 0;
        for (a = a.bp.tags; b < a.length; ) {
          var c = a[b];
          ++b;
          var d = ka.grammar;
          c = c.toUpperCase();
          da.addAll(d.flags, new Ba(', +', '').split(c));
        }
      };
      ka.given = function () {
        return (
          0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
            ? ka.male
            : ka.female
        ).generate(4);
      };
      ka.generate = function (a, b, c) {
        null == c && (c = 4);
        for (null == b && (b = 1); ; ) {
          var d = a.generate(c);
          if (d.length >= b && -1 == a.source.indexOf(d)) return d;
        }
      };
      ka.word = function () {
        return ka.generate(ka.english, 4, 3);
      };
      ka.fantasy = function () {
        return ka.generate(ka.elven);
      };
      ka.evil = function () {
        return ka.useLang
          ? ka.lang.getWord().join('')
          : ka.generate(ka.demonic);
      };
      ka.get = function (a, b, c, d) {
        null == d && (d = !1);
        if (null != c)
          for (var f = 0; f < c.length; ) {
            var g = c[f];
            ++f;
            var k = ka.grammar;
            da.addAll(k.flags, new Ba(', +', '').split(g));
          }
        null != b &&
          ((k = ka.grammar),
          (b =
            L[b.__enum__].__constructs__[b._hx_index]._hx_name.toUpperCase()),
          da.addAll(k.flags, new Ba(', +', '').split(b)));
        a = ka.grammar.flatten('#' + a + '#');
        ka.grammar.flags = [];
        return d ? Le.capitalizeAll(a) : a;
      };
      ka.terrain = function (a, b) {
        null == b && (b = Z.alignment);
        return ka.useLang
          ? ((b = a.split('-')[0]),
            (b = ka.lang.newName(b)),
            ka.terrNoun && (b += ' ' + Le.capitalizeAll(ka.get(a))),
            b)
          : ka.get(
              '[place:#' + a + '#][short-place:#' + a + '-suffix#]terrain',
              b,
              ['NATURE'],
              !0,
            );
      };
      ka.village = function (a) {
        return ka.useLang
          ? ka.lang.newName('town')
          : ka.get('village', null, a, !0);
      };
      ka.town = function (a) {
        return ka.useLang
          ? ka.lang.newName('town')
          : ka.get('town', null, a, !0);
      };
      ka.city = function (a) {
        return ka.useLang
          ? ka.lang.newName('town')
          : ka.get('city', null, a, !0);
      };
      ka.dungeon = function (a) {
        return ka.get('dungeon', null, a, !0);
      };
      ka.island = function (a) {
        null == a && (a = !1);
        a = 'island' + (a ? '-n' : '-1');
        return ka.useLang
          ? ka.terrain(a)
          : ka.get('[island-noun:#' + a + '#]island', Z.alignment, null, !0);
      };
      ka.lake = function (a) {
        null == a && (a = !1);
        a = 'lake' + (a ? '-n' : '-1');
        return ka.useLang
          ? ka.terrain(a)
          : ka.get('[lake-noun:#' + a + '#]lake', Z.alignment, null, !0);
      };
      ka.coast = function () {
        return ka.useLang
          ? ka.terrain('coast-noun')
          : ka.get('coast', Z.alignment, null, !0);
      };
      ka.archi = function () {
        return ka.useLang
          ? ka.terrain('archi-noun')
          : ka.get('archi', Z.alignment, null, !0);
      };
      ka.land = function () {
        return ka.useLang
          ? ka.terrain('land-noun')
          : ka.get('landlocked', Z.alignment, null, !0);
      };
      ka.peninsula = function () {
        return ka.useLang
          ? ka.terrain('peninsula-noun')
          : ka.get('peninsula', Z.alignment, null, !0);
      };
      ka.fjord = function () {
        return ka.useLang
          ? ka.terrain('fjord-noun')
          : ka.get('fjord', Z.alignment, null, !0);
      };
      ka.bay = function () {
        return ka.useLang
          ? ka.terrain('bay-noun')
          : ka.get('bay', Z.alignment, null, !0);
      };
      var yc = function (a, b, c, d, f, g, k, q, p) {
        null == c && (c = 0);
        null == b && (b = 0);
        Mb.call(this, a, b, c, d, f, g, k, q);
        this.double = Math.abs(
          ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
            (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
            2 -
            1,
        );
        this.joiner =
          0.5 > (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647
            ? '-'
            : ' ';
        if (null == p)
          for (a = new Ja(), b = 0, c = yc.concepts; b < c.length; )
            ((d = c[b]), ++b, (f = [this.getNewMorpheme()]), (a.h[d] = f));
        else a = p;
        this.premade = a;
        this.reset();
      };
      h['com.watabou.perilous.toponymy.NamingLang'] = yc;
      yc.__name__ = 'com.watabou.perilous.toponymy.NamingLang';
      yc.common = function () {
        for (
          var a = new yc(
              'sClVF',
              2,
              3,
              'nrtsdlkmpbfh\u0283\u02a4\u02a7\u03b8'.split(''),
              ['s'],
              ['r', 'l'],
              ['s', 'n', 'j', 'l', 'r'],
              'eaoiuOE'.split(''),
            ),
            b = a.badSeqs,
            c = 'sd sb sf sr s\u03b8 \u02a4r \u02a4l s\u02a4 \u03b8l'.split(
              ' ',
            ),
            d = 0;
          d < c.length;

        ) {
          var f = c[d];
          ++d;
          b.push(f);
        }
        a.double = 0.1;
        a.joiner = ' ';
        a.spellConsonant = Kd.spellConsDefault;
        a.spellVowel = Kd.spellVowDoubles;
        return a;
      };
      yc.elvish = function () {
        var a = new yc(
          'clVf',
          1,
          3,
          'nmtrlskxbfpv'.split(''),
          [],
          ['r', 'l'],
          ['s', 'n', 'l', 'r', 't'],
          ['a', 'e', 'i', 'u', 'o'],
        );
        a.double = 0.3;
        a.joiner = '-';
        a.spellConsonant = Kd.spellConsDefault;
        a.spellVowel = Kd.spellVowDefault;
        return a;
      };
      yc.exotic = function () {
        var a = new yc(
          'vCVC',
          1,
          3,
          'rltks\u0283dbf\u0263xmn\u02a4'.split(''),
          [],
          [],
          [],
          ['a', 'u', 'i'],
        );
        a.double = 0.4;
        a.joiner = ' ';
        a.spellConsonant = Kd.spellConsDefault;
        a.spellVowel = Kd.spellVowDefault;
        return a;
      };
      yc.alien = function () {
        var a = new yc(
          'ccVc',
          1,
          2,
          '\u0263\u02a4\u0283zkwgmr'.split(''),
          [],
          [],
          [],
          ['u', 'i', 'o', 'a', 'e'],
        );
        a.double = 0.9;
        a.joiner = '`';
        a.spellConsonant = Kd.spellConsDefault;
        a.spellVowel = Kd.spellVowDefault;
        return a;
      };
      yc.__super__ = Mb;
      yc.prototype = u(Mb.prototype, {
        reset: function () {
          this.names = [];
          this.morphemes = new Ja();
          for (
            var a = this.premade.h, b = Object.keys(a), c = b.length, d = 0;
            d < c;

          ) {
            var f = b[d++],
              g = f,
              k = this.morphemes;
            f = a[f].slice();
            k.h[g] = f;
          }
        },
        newName: function (a) {
          for (;;) {
            var b = null == a ? this.getWord().join('') : this.getWordSuffix(a);
            b = this.spellWord(b);
            b = Le.capitalize(b);
            var c = this.double;
            null == c && (c = 0.5);
            if ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < c) {
              c = this.spellWord(this.getWord().join(''));
              c = Le.capitalize(c);
              var d = 0.5 * this.double;
              null == d && (d = 0.5);
              if (
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 <
                d
              ) {
                d = this.spellWord(this.getMorpheme('prep'));
                var f = ' ' == this.joiner ? '-' : this.joiner;
                b = '' + b + f + d + f + c;
              } else b = '' + c + this.joiner + b;
            }
            if (
              -1 == this.names.indexOf(b) &&
              b.length >= yc.minLen &&
              b.length <= yc.maxLen
            )
              return (this.names.push(b), b);
          }
        },
        __class__: yc,
      });
      var Cf = function (a) {
        pa.call(this, [Cf.REROLL]);
        this.compass = a;
        var b = new gb(),
          c = new Xe();
        c.setMargins(0, 10);
        var d = new wb('Angle');
        c.add(d);
        d = new ld(-de.NLINES >> 1, de.NLINES >> 1);
        d.set_value((a.get_rotation() / 360) * de.NLINES);
        d.change.add(m(this, this.onAngle));
        d.valign = 'center';
        c.add(d);
        d = new wb('Size');
        c.add(d);
        d = new ld(-1, 1, 1);
        d.set_value(a.scale);
        d.change.add(m(this, this.onSize));
        d.valign = 'center';
        c.add(d);
        b.add(c);
        a = new bd('Rhumb lines');
        a.set_value(Ma.showRhumbs);
        a.changed.add(m(this, this.onRhumbs));
        b.add(a);
        this.add(b);
      };
      h['com.watabou.perilous.ui.CompassForm'] = Cf;
      Cf.__name__ = 'com.watabou.perilous.ui.CompassForm';
      Cf.__super__ = pa;
      Cf.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Compass';
        },
        onButton: function (a) {
          a == Cf.REROLL
            ? this.compass.reroll()
            : pa.prototype.onButton.call(this, a);
        },
        onAngle: function (a) {
          this.compass.set_rotation((360 * a) / de.NLINES);
        },
        onSize: function (a) {
          this.compass.scale = a;
          this.compass.redraw();
        },
        onRhumbs: function (a) {
          Da.set('rhumbs', (Ma.showRhumbs = a));
          this.compass.set_visible(!0);
        },
        __class__: Cf,
      });
      var ri = function (a, b) {
        this.target = a;
        this.onEndDrag = b;
        a.addEventListener('mouseDown', m(this, this.onMouseDown));
      };
      h['com.watabou.perilous.ui.Draggable'] = ri;
      ri.__name__ = 'com.watabou.perilous.ui.Draggable';
      ri.prototype = {
        onMouseDown: function (a) {
          a.commandKey ||
            a.shiftKey ||
            a.ctrlKey ||
            ((this.parent = this.target.parent),
            (this.localX = this.parent.get_mouseX() - this.target.get_x()),
            (this.localY = this.parent.get_mouseY() - this.target.get_y()),
            (a = this.target.stage),
            a.addEventListener('mouseMove', m(this, this.onMouseMove)),
            a.addEventListener('mouseUp', m(this, this.onMouseUp)));
        },
        onMouseMove: function (a) {
          this.target.set_x(this.parent.get_mouseX() - this.localX);
          this.target.set_y(this.parent.get_mouseY() - this.localY);
          a.updateAfterEvent();
        },
        onMouseUp: function (a) {
          a = this.target.stage;
          a.removeEventListener('mouseMove', m(this, this.onMouseMove));
          a.removeEventListener('mouseUp', m(this, this.onMouseUp));
          a.set_focus(a);
          if (null != this.onEndDrag) this.onEndDrag();
        },
        __class__: ri,
      };
      var vi = function (a) {
        var b = this;
        pa.call(this, ['Apply', 'Delete']);
        this.danger = a;
        var c = new tf();
        this.txtName = new mc(a.getName());
        this.txtName.set_prompt('Name');
        this.txtName.set_width(300);
        this.txtName.enter.add(function (a) {
          b.onButton('Apply');
        });
        c.add(this.txtName);
        this.add(c);
        this.txtName.selecteAll();
      };
      h['com.watabou.perilous.ui.EditDangerForm'] = vi;
      vi.__name__ = 'com.watabou.perilous.ui.EditDangerForm';
      vi.__super__ = pa;
      vi.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Danger';
        },
        onShow: function () {
          this.stage.set_focus(this.txtName);
        },
        onButton: function (a) {
          switch (a) {
            case 'Apply':
              this.apply();
              this.stage.set_focus(this.txtName);
              this.txtName.selecteAll();
              break;
            case 'Delete':
              this.delete();
              pa.prototype.onButton.call(this, a);
              break;
            default:
              pa.prototype.onButton.call(this, a);
          }
        },
        delete: function () {
          this.danger.delete();
          M.updateMap();
        },
        apply: function () {
          var a = this.txtName.get_text();
          this.danger.name != a && ((this.danger.name = a), M.updateLabels());
        },
        __class__: vi,
      });
      var xi = function (a) {
        var b = this;
        pa.call(this, ['Apply', 'Delete']);
        this.lm = a;
        var c = new gb(),
          d = new Xc();
        d.setMargins(0, 10);
        this.txtName = new mc(a.getName());
        this.txtName.set_prompt('Name');
        this.txtName.enter.add(function (a) {
          b.onButton('OK');
        });
        this.txtName.set_width(280);
        d.add(this.txtName);
        this.swatch = new Bc(a.getColor(), this.txtName.get_height());
        this.swatch.onClick(m(this, this.onColor));
        d.add(this.swatch);
        c.add(d);
        this.txtDesc = new Ab(a.desc, !0);
        this.txtDesc.halign = 'fill';
        this.txtDesc.setLines(4);
        c.add(this.txtDesc);
        this.add(c);
        this.txtName.selecteAll();
      };
      h['com.watabou.perilous.ui.EditLandmarkForm'] = xi;
      xi.__name__ = 'com.watabou.perilous.ui.EditLandmarkForm';
      xi.__super__ = pa;
      xi.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Landmark';
        },
        onShow: function () {
          this.stage.set_focus(this.txtName);
        },
        onButton: function (a) {
          switch (a) {
            case 'Apply':
              this.apply();
              pa.prototype.onButton.call(this, a);
              break;
            case 'Delete':
              this.delete();
              pa.prototype.onButton.call(this, a);
              break;
            default:
              pa.prototype.onButton.call(this, a);
          }
        },
        onColor: function () {
          var a = this,
            b = w.findForm(nb);
          null == b && ((b = new nb()), w.showDialog(b));
          b.link(
            'Icon color',
            this.swatch.paint.bmp.get_bitmapData().getPixel(0, 0),
            function (b) {
              a.swatch.paint.bmp.get_bitmapData().setPixel(0, 0, b);
            },
            this,
          );
        },
        delete: function () {
          this.lm.delete();
          M.updateSprites();
          M.inst.stickers.remove(this.lm);
        },
        apply: function () {
          var a = this.txtName.get_text(),
            b = this.txtDesc.get_text(),
            c = this.swatch.paint.bmp.get_bitmapData().getPixel(0, 0);
          if (this.lm.name != a || this.lm.desc != b)
            ((this.lm.name = a),
              (this.lm.desc = b),
              M.inst.stickers.recreate());
          this.lm.getColor() != c && (this.lm.setColor(c), M.updateSprites());
        },
        __class__: xi,
      });
      var ag = function (a, b) {
        var c = this;
        pa.call(this, ['OK', 'Cancel']);
        this.onSubmit = b;
        b = new tf();
        this.input = new mc(a);
        this.input.set_prompt('Name');
        this.input.enter.add(function (a) {
          c.onButton('OK');
        });
        this.input.set_width(300);
        b.add(this.input);
        this.add(b);
        this.input.selecteAll();
      };
      h['com.watabou.perilous.ui.EditNameForm'] = ag;
      ag.__name__ = 'com.watabou.perilous.ui.EditNameForm';
      ag.__super__ = pa;
      ag.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Edit name';
        },
        onShow: function () {
          this.stage.set_focus(this.input);
        },
        onButton: function (a) {
          'OK' == a
            ? ((a = this.input.get_text()),
              0 < a.length && (this.onSubmit(a), this.dialog.hide()))
            : pa.prototype.onButton.call(this, a);
        },
        __class__: ag,
      });
      var zi = function (a) {
        var b = this;
        pa.call(this, ['Apply', 'Delete']);
        this.town = a;
        var c = new gb(),
          d = new Xc();
        d.setMargins(0, 10);
        this.txtName = new mc(a.getName());
        this.txtName.set_prompt('Name');
        this.txtName.set_width(200);
        this.txtName.enter.add(function (a) {
          b.applyFrom(b.txtName);
        });
        d.add(this.txtName);
        this.ddType = new cd(
          ['Village', 'Town', 'City'],
          [cc.VILLAGE, cc.TOWN, cc.CITY],
        );
        this.ddType.set_value(a.type);
        this.ddType.valign = 'fill';
        this.ddType.set_centered(!0);
        d.add(this.ddType);
        c.add(d);
        this.txtInfo = new Ab(a.getInfo());
        this.txtInfo.set_width(d.get_width());
        this.txtInfo.halign = 'fill';
        this.txtInfo.set_height(4 * (this.txtInfo.get_height() - 4) + 4);
        this.txtInfo.enter.add(function (a) {
          b.applyFrom(b.txtInfo);
        });
        c.add(this.txtInfo);
        this.chkRoads = new va();
        this.chkRoutes = new va();
        var f = a.cell.face;
        d = a.cell;
        null == d.island && (d.island = d.region.getIsland(d.face));
        this.net = d.island.network;
        d = [];
        for (var g = 0, k = this.net.roads; g < k.length; ) {
          var q = k[g];
          ++g;
          (q[0] != f && q[q.length - 1] != f) || d.push(q);
        }
        this.nav = a.cell.region.getNavigation();
        a = [];
        g = 0;
        for (k = this.nav.routes; g < k.length; )
          ((q = k[g]), ++g, (q[0] != f && q[q.length - 1] != f) || a.push(q));
        if (0 < d.length || 0 < a.length) {
          g = Wa.black();
          g.halign = 'fill';
          g.set_height(2);
          c.add(g);
          var p = new Xc();
          p.setMargins(0, 20);
          g = function (a, b, c, d) {
            var g = new gb();
            g.setMargins(0, 10);
            a = new wb(a + ':', !0);
            a.set_color(C.dark);
            g.add(a);
            for (a = 0; a < b.length; ) {
              var k = b[a];
              ++a;
              var q = k[0] == f ? k[k.length - 1] : k[0];
              q = null != q.data.site ? q.data.site.getName() : 'offmap...';
              q = new bd(q);
              q.set_value(c.h[k.__id__]);
              g.add(q);
              d.set(q, k);
            }
            p.add(g);
          };
          0 < d.length && g('Roads', d, this.net.enabled, this.chkRoads);
          0 < a.length && g('Sea routes', a, this.nav.enabled, this.chkRoutes);
          c.add(p);
        }
        this.add(c);
        this.txtName.selecteAll();
      };
      h['com.watabou.perilous.ui.EditTownForm'] = zi;
      zi.__name__ = 'com.watabou.perilous.ui.EditTownForm';
      zi.__super__ = pa;
      zi.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Settlement';
        },
        onShow: function () {
          this.stage.set_focus(this.txtName);
        },
        onButton: function (a) {
          switch (a) {
            case 'Apply':
              this.apply();
              break;
            case 'Delete':
              this.delete();
              this.dialog.hide();
              break;
            default:
              pa.prototype.onButton.call(this, a);
          }
        },
        applyFrom: function (a) {
          this.apply();
          this.stage.set_focus(a);
          a == this.txtName && this.txtName.selecteAll();
        },
        delete: function () {
          this.town.delete();
          M.updateMap();
        },
        apply: function () {
          var a = !1,
            b = !1,
            c = !1,
            d = !1,
            f = this.txtName.get_text();
          this.town.name != f && ((this.town.name = f), (b = !0));
          f = this.ddType.get_value();
          this.town.type != f && ((this.town.type = f), (b = a = !0));
          f = this.txtInfo.get_text();
          this.town.story != f && ((this.town.story = f), (b = !0));
          var g = this.chkRoads;
          f = g;
          for (g = g.keys(); g.hasNext(); ) {
            var k = g.next(),
              q = f.get(k),
              p = q;
            this.net.enabled.h[p.__id__] != k.get_value() &&
              ((q = this.net.enabled),
              (k = k.get_value()),
              q.set(p, k),
              (c = !0));
          }
          c && this.net.resetSegments();
          f = g = this.chkRoutes;
          for (g = g.keys(); g.hasNext(); )
            ((k = g.next()),
              (p = q = f.get(k)),
              this.nav.enabled.h[p.__id__] != k.get_value() &&
                ((q = this.nav.enabled),
                (k = k.get_value()),
                q.set(p, k),
                (d = !0)));
          a && M.updateSprites();
          b && M.updateLabels();
          c && M.updateNetwork();
          d && M.updateNavigation();
        },
        __class__: zi,
      });
      var yi = function (a) {
        var b = this;
        pa.call(this, ['OK', 'Cancel']);
        this.wood = a;
        this.type = xa.__cast(a.cell.terrain, Nb).type;
        da.some(a.faces, function (a) {
          return xa.__cast(a.data.terrain, Nb).type != b.type;
        }) && (this.type = null);
        var c = new gb();
        this.inpName = new mc(a.getName());
        this.inpName.set_prompt('Name');
        this.inpName.enter.add(function (a) {
          b.onButton('OK');
        });
        this.inpName.set_width(240);
        c.add(this.inpName);
        a = ['Light', 'Dark', 'Dead'];
        var d = [Ia.lightTree, Ia.darkTree, Ia.deadTree];
        null == this.type && (a.unshift('Varied'), d.unshift(null));
        this.drpType = new cd(a, d);
        this.drpType.set_value(this.type);
        this.drpType.set_centered(!0);
        this.drpType.set_width(240);
        c.add(this.drpType);
        this.add(c);
        this.inpName.selecteAll();
      };
      h['com.watabou.perilous.ui.EditWoodForm'] = yi;
      yi.__name__ = 'com.watabou.perilous.ui.EditWoodForm';
      yi.__super__ = pa;
      yi.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Forest';
        },
        onShow: function () {
          this.stage.set_focus(this.inpName);
        },
        onButton: function (a) {
          if ('OK' == a) {
            var b = this.inpName.get_text();
            if (0 < b.length) {
              a = this.drpType.get_value();
              if (this.type != a) {
                b = 0;
                for (var c = this.wood.faces; b < c.length; ) {
                  var d = c[b];
                  ++b;
                  xa.__cast(d.data.terrain, Nb).type = a;
                }
                a = this.wood.cell;
                null == a.island && (a.island = a.region.getIsland(a.face));
                a.island.forests = null;
                M.updateMap();
              } else
                this.wood.name != b && ((this.wood.name = b), M.updateLabels());
              this.dialog.hide();
            }
          } else pa.prototype.onButton.call(this, a);
        },
        __class__: yi,
      });
      var ph = function () {
        pa.call(this, ['Reset', 'Apply']);
        this.grid = new Xe(2);
        this.chkInk = new bd('Use ink color');
        this.chkInk.set_value(Da.get('useInkColor', !1));
        this.chkInk.changed.add(m(this, this.onUseInk));
        this.grid.add(this.chkInk);
        this.grid.addEmpty();
        var a = Da.get('numbersColor', 52479);
        this.addLabel('Color');
        var b = new Xc();
        b.setMargins(0, 10);
        this.inColor = new mc(P.hex(a, 6), !0);
        this.inColor.update.add(m(this, this.onColorInput));
        this.inColor.set_restrict('0-9a-fA-F');
        b.add(this.inColor);
        this.swColor = new Bc(a, this.inColor.get_height());
        this.swColor.onClick(m(this, this.onColorSwatch));
        b.add(this.swColor);
        this.grid.add(b);
        this.addLabel('Grid opacity');
        this.flAlpha = new wa(Da.get('gridAlpha', 0.4), 0, 1);
        this.flAlpha.halign = 'fill';
        this.flAlpha.set_centered(!0);
        this.grid.add(this.flAlpha);
        this.addLabel('Numbers size');
        this.inSize = new nc(Da.get('numbersSize', 14), 8, 18);
        this.inSize.halign = 'fill';
        this.inSize.set_centered(!0);
        this.grid.add(this.inSize);
        this.addLabel('Numbers position');
        this.ddPos = cd.ofStrings(['Top', 'Bottom', 'Center']);
        this.ddPos.set_value(Da.get('numbersPos', 'Top'));
        this.ddPos.set_centered(!0);
        this.ddPos.halign = 'fill';
        this.grid.add(this.ddPos);
        this.add(this.grid);
        this.onUseInk(this.chkInk.get_value());
      };
      h['com.watabou.perilous.ui.NumbersForm'] = ph;
      ph.__name__ = 'com.watabou.perilous.ui.NumbersForm';
      ph.__super__ = pa;
      ph.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Grid parameters';
        },
        onButton: function (a) {
          switch (a) {
            case 'Apply':
              Da.set('useInkColor', this.chkInk.get_value());
              Da.set('gridAlpha', this.flAlpha.get_value());
              Da.set(
                'numbersColor',
                this.swColor.paint.bmp.get_bitmapData().getPixel(0, 0),
              );
              Da.set('numbersSize', this.inSize.get_value());
              Da.set('numbersPos', this.ddPos.get_value());
              M.updateGrid();
              M.updateNumbers();
              break;
            case 'Reset':
              this.chkInk.set_value(!1);
              this.swColor.paint.bmp.get_bitmapData().setPixel(0, 0, 52479);
              this.inColor.set_text('00CCFF');
              this.flAlpha.set_value(0.4);
              this.inSize.set_value(14);
              this.ddPos.set_value('Top');
              break;
            default:
              pa.prototype.onButton.call(this, a);
          }
        },
        addLabel: function (a) {
          a = new wb(a);
          a.valign = 'center';
          this.grid.add(a);
        },
        onUseInk: function (a) {
          this.inColor.set_enabled(!a);
        },
        onColorInput: function (a) {
          '#' == a.charAt(0) && (a = R.substr(a, 1, null));
          if (3 == a.length) {
            var b = [];
            b.push(a.charAt(0) + a.charAt(0));
            b.push(a.charAt(1) + a.charAt(1));
            b.push(a.charAt(2) + a.charAt(2));
            a = b.join('');
          }
          6 < a.length && (a = R.substr(a, 0, 6));
          a = I.parseInt('0x' + a);
          this.swColor.paint.bmp.get_bitmapData().setPixel(0, 0, a);
        },
        onColorSwatch: function () {
          var a = this,
            b = w.findForm(nb);
          null == b && ((b = new nb()), w.showDialog(b));
          b.link(
            'Numbers color',
            this.swColor.paint.bmp.get_bitmapData().getPixel(0, 0),
            function (b) {
              a.inColor.set_text(P.hex(b, 6));
              a.swColor.paint.bmp.get_bitmapData().setPixel(0, 0, b);
            },
            this,
          );
        },
        __class__: ph,
      });
      var kh = function () {
        this.synching = !1;
        var a = this;
        pa.call(this, ['Reset']);
        var b = new Xe(3),
          c = new wb('Type');
        c.valign = 'center';
        b.add(c);
        this.cmbPosition = cd.ofStrings([Ca.FRONT, Ca.SPOTLIGHT]);
        this.cmbPosition.setSize(120, this.cmbPosition.get_height());
        this.cmbPosition.update.add(function (b) {
          a.onChange(0);
        });
        b.add(this.cmbPosition);
        b.add(new ha());
        c = function (c) {
          c = new wb(c);
          b.add(c);
          c = new ld(0, 1, 1);
          c.setSize(120, 20);
          c.valign = 'center';
          c.change.add(m(a, a.onChange));
          b.add(c);
          var d = new wb('0.0', !0);
          d.valign = 'center';
          b.add(d);
          c.change.add(function (a) {
            d.set_text(null == a ? 'null' : '' + a);
          });
          return c;
        };
        var d = function (c) {
          var d = new wb(c);
          b.add(d);
          var f = new Bc(0, d.get_height());
          f.onClick(function () {
            a.onColor(c, f, function (b) {
              f.paint.bmp.get_bitmapData().setPixel(0, 0, b);
              a.onChange(0);
            });
          });
          b.add(f);
          b.add(new ha());
          return f;
        };
        this.slSpotSize = c('Size');
        this.swLightColor = d('Light');
        this.slLightOpacity = c('Intensity');
        this.slLightVividness = c('Saturation');
        this.swDarkColor = d('Shadow');
        this.slDarkOpacity = c('Intensity');
        this.slDarkVividness = c('Saturation');
        b.add(new ha());
        b.add((this.chkEnable = new bd('Enable')));
        this.chkEnable.set_value(M.showLight);
        this.chkEnable.changed.add(function (b) {
          a.onChange(0);
        });
        this.add(b);
        this.sync();
      };
      h['com.watabou.perilous.ui.SpotlightForm'] = kh;
      kh.__name__ = 'com.watabou.perilous.ui.SpotlightForm';
      kh.__super__ = pa;
      kh.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Dramatic light';
        },
        onShow: function () {
          Ca.activate(!0);
        },
        onHide: function () {
          Ca.activate(!1);
        },
        onButton: function (a) {
          'Reset' == a
            ? (Ca.reset(), Ca.update(), this.sync())
            : pa.prototype.onButton.call(this, a);
        },
        sync: function () {
          this.synching = !0;
          this.cmbPosition.set_value(Ca.type);
          this.slSpotSize.set_value(Ca.balance);
          var a = Ca.clrLight;
          this.swLightColor.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          this.slLightOpacity.set_value(Ca.opaLight);
          this.slLightVividness.set_value(Ca.satLight);
          a = Ca.clrDark;
          this.swDarkColor.paint.bmp.get_bitmapData().setPixel(0, 0, a);
          this.slDarkOpacity.set_value(Ca.opaDark);
          this.slDarkVividness.set_value(Ca.satDark);
          this.synching = !1;
        },
        onChange: function (a) {
          this.synching ||
            ((Ca.type = this.cmbPosition.get_value()),
            (Ca.balance = this.slSpotSize.get_value()),
            (Ca.clrLight = this.swLightColor.paint.bmp
              .get_bitmapData()
              .getPixel(0, 0)),
            (Ca.opaLight = this.slLightOpacity.get_value()),
            (Ca.satLight = this.slLightVividness.get_value()),
            (Ca.clrDark = this.swDarkColor.paint.bmp
              .get_bitmapData()
              .getPixel(0, 0)),
            (Ca.opaDark = this.slDarkOpacity.get_value()),
            (Ca.satDark = this.slDarkVividness.get_value()),
            Ca.enable(this.chkEnable.get_value()),
            M.showLight && Ca.update());
        },
        onColor: function (a, b, c) {
          var d = w.findForm(nb);
          null == d && ((d = new nb()), w.showDialog(d));
          d.link(a, b.paint.bmp.get_bitmapData().getPixel(0, 0), c, this);
        },
        __class__: kh,
      });
      var Wb = function (a) {
        T.call(this);
        this.content = a;
        this.rectWidth = a.get_width() + 2 * Wb.MARGIN;
        this.rectHeight = a.get_height() + 2 * Wb.MARGIN;
        this.addChild(a);
      };
      h['com.watabou.perilous.ui.Sticker'] = Wb;
      Wb.__name__ = 'com.watabou.perilous.ui.Sticker';
      Wb.text = function (a, b) {
        a = rc.get(a, b);
        a.set_multiline(!0);
        a.set_wordWrap(!0);
        Wb.setWidth(a, Wb.MAX_WIDTH);
        return new Wb(a);
      };
      Wb.title = function (a) {
        return Wb.text(a, x.formatHead);
      };
      Wb.titleNdesc = function (a, b) {
        var c = new T();
        a = rc.get(a, x.formatHead);
        c.addChild(a);
        b = rc.get(b, x.formatSticker);
        b.set_y(a.get_height());
        b.set_multiline(!0);
        b.set_wordWrap(!0);
        Wb.setWidth(b, Wb.MAX_WIDTH);
        c.addChild(b);
        return new Wb(c);
      };
      Wb.setWidth = function (a, b) {
        a.set_width(b);
        var c = a.get_numLines();
        if (1 < c) {
          do a.set_width(a.get_width() - 4);
          while (a.get_numLines() == c);
          a.set_width(a.get_width() + 4);
        } else a.get_textWidth() < b - 4 && a.set_width(a.get_textWidth() + 6);
        b = a.get_width();
        c = a.get_height();
        a.set_autoSize(2);
        a.set_width(b);
        a.set_height(Math.ceil(c));
      };
      Wb.__super__ = T;
      Wb.prototype = u(T.prototype, {
        set_offset: function (a) {
          this.content.set_x(a.x - this.content.get_width() / 2);
          this.content.set_y(a.y - this.content.get_height() / 2);
          this.updatePoly(a);
          return a;
        },
        rectAt: function (a) {
          null == a &&
            (a = new B(
              this.content.get_x() + this.content.get_width() / 2,
              this.content.get_y() + this.content.get_height() / 2,
            ));
          return new na(
            this.get_x() + a.x - this.rectWidth / 2,
            this.get_y() + a.y - this.rectHeight / 2,
            this.rectWidth,
            this.rectHeight,
          );
        },
        updatePoly: function (a) {
          var b = this.get_graphics();
          b.clear();
          var c = this.content.get_x(),
            d = this.content.get_y(),
            f = this.content.get_width(),
            g = this.content.get_height();
          c = [
            new B(c - Wb.MARGIN, d - Wb.MARGIN),
            new B(c + f + Wb.MARGIN, d - Wb.MARGIN),
            new B(c + f + Wb.MARGIN, d + g + Wb.MARGIN),
            new B(c - Wb.MARGIN, d + g + Wb.MARGIN),
          ];
          f = Wb.DISTANCE;
          null == f && (f = 1);
          d = a.clone();
          d.normalize(f);
          g = new B(-a.y, a.x);
          f = -10;
          null == f && (f = 1);
          g = g.clone();
          g.normalize(f);
          var k = a.add(g);
          g = new B(-a.y, a.x);
          f = 10;
          null == f && (f = 1);
          g = g.clone();
          g.normalize(f);
          a = [d, k, a.add(g)];
          a = ii.or(c, a);
          b.beginFill(x.banner);
          b.lineStyle(x.normal, x.black);
          Tc.drawPolygon(b, a);
        },
        __class__: Wb,
        __properties__: u(T.prototype.__properties__, {
          set_offset: 'set_offset',
        }),
      });
      var xf = function (a, b) {
        Hc.getTags = function () {
          return Z.tags;
        };
        Hc.getInfo = function (a) {
          return Z.getInfo(a);
        };
        Hc.resTags = function (a, b) {
          Z.resolve(a, b);
        };
        Ge.call(this, a, b);
        this.onSize(null);
      };
      h['com.watabou.perilous.ui.TagsForm'] = xf;
      xf.__name__ = 'com.watabou.perilous.ui.TagsForm';
      xf.__super__ = Ge;
      xf.prototype = u(Ge.prototype, {
        getTitle: function () {
          return 'Region parameters';
        },
        addAbove: function () {
          var a = this,
            b = new Xc();
          b.setMargins(0, 10);
          var c = new wb('Size:');
          c.valign = 'center';
          b.add(c);
          this.inpWidth = new nc(Z.width, 200, 4e3, 4);
          this.inpWidth.update.add(m(this, this.onSize));
          this.inpWidth.set_centered(!0);
          b.add(this.inpWidth);
          this.inpHeight = new nc(Z.height, 200, 4e3, 4);
          this.inpHeight.update.add(m(this, this.onSize));
          this.inpHeight.set_centered(!0);
          b.add(this.inpHeight);
          this.inpWidth.enter.add(function (b) {
            a.onEnter();
          });
          this.inpHeight.enter.add(function (b) {
            a.onEnter();
          });
          this.cmbSize = cd.ofStrings(['Small', 'Medium', 'Large', 'Huge']);
          this.cmbSize.update.add(m(this, this.onPredifined));
          this.cmbSize.set_centered(!0);
          b.add(this.cmbSize);
          this.content.add(b);
          this.hexes = new Hi();
          this.content.add(this.hexes);
        },
        onSize: function (a) {
          this.cmbSize.set_text('Custom');
          a = this.inpWidth.get_value();
          for (
            var b = this.inpHeight.get_value(),
              c = xf.predefined.h,
              d = Object.keys(c),
              f = d.length,
              g = 0;
            g < f;

          ) {
            var k = d[g++],
              q = k;
            k = c[k];
            if (a == k && b == k) {
              this.cmbSize.set_value(q);
              break;
            }
          }
        },
        onPredifined: function (a) {
          this.inpWidth.set_value(this.inpHeight.set_value(xf.predefined.h[a]));
        },
        getWidth: function () {
          return ac.gatei(this.inpWidth.get_value(), 200, 4e3);
        },
        getHeight: function () {
          return ac.gatei(this.inpHeight.get_value(), 200, 4e3);
        },
        callGenerate: function (a) {
          Da.set('tilt', (fa.tiltMode = this.hexes.selected));
          return Ge.prototype.callGenerate.call(this, a);
        },
        __class__: xf,
      });
      var Ag = function (a) {
        this.click = new he();
        ha.call(this);
        this.label = new wb(a, !0);
        this.add(this.label);
        this.arrow = new ab();
        this.add(this.arrow);
        this.set_buttonMode(!0);
        this.mouseChildren = !1;
        this.addEventListener('click', m(this, this.onClick));
        this.layout();
      };
      h['com.watabou.perilous.ui.TextLink'] = Ag;
      Ag.__name__ = 'com.watabou.perilous.ui.TextLink';
      Ag.__super__ = ha;
      Ag.prototype = u(ha.prototype, {
        layout: function () {
          this.arrow.set_x(this.label.get_width() + 4);
          this.arrow.set_y(
            (this.label.get_height() - this.arrow.get_height()) / 2,
          );
          this.rWidth = this.arrow.get_x() + this.arrow.get_width();
          this.rHeight = this.label.get_height();
          var a = this.get_graphics();
          a.clear();
          a.beginFill(0, 0);
          a.drawRect(0, 0, this.rWidth, this.rHeight);
        },
        onClick: function (a) {
          this.click.dispatch();
        },
        set: function (a) {
          this.label.set_text(a);
          this.layout();
        },
        __class__: Ag,
      });
      var Hi = function () {
        this.selected = fa.tiltMode;
        Ag.call(this, this.getText());
        this.click.add(m(this, this.showOptions));
      };
      h['com.watabou.perilous.ui.HexesButton'] = Hi;
      Hi.__name__ = 'com.watabou.perilous.ui.HexesButton';
      Hi.__super__ = Ag;
      Hi.prototype = u(Ag.prototype, {
        getText: function () {
          switch (this.selected) {
            case 1:
              var a = 'Pointy topped';
              break;
            case 2:
              a = 'Flat topped';
              break;
            default:
              a = 'Warped';
          }
          return 'Hexes: ' + a;
        },
        showOptions: function () {
          var a = this,
            b = new dc(),
            c = function (c, f) {
              b.addItem(
                c,
                function () {
                  a.selectOption(f);
                },
                a.selected == f,
              );
            };
          c('Pointy topped', 1);
          c('Flat topped', 2);
          c('Warped', 3);
          c = this.localToGlobal(new B(0, this.rHeight));
          w.showMenuAt(b, c.x, c.y);
        },
        selectOption: function (a) {
          this.selected = a;
          this.set(this.getText());
        },
        __class__: Hi,
      });
      var Yf = function (a) {
        pa.call(this, ['Apply']);
        this.onApply = a;
        this.lang = ka.lang;
        this.content = new gb();
        this.content.setMargins(10, 8);
        this.chkConlang = new bd('Use naming language');
        this.chkConlang.changed.add(m(this, this.onConlang));
        this.chkConlang.set_value(ka.useLang);
        this.chkConlang.set_width(280);
        this.content.add(this.chkConlang);
        this.langBox = new gb();
        this.langBox.setMargins(0, 8);
        a = Wa.dark();
        a.set_height(2);
        a.halign = 'fill';
        this.langBox.add(a);
        a = new ie('New language', Yf.presets);
        a.action.add(m(this, this.onPreset));
        this.langBox.add(a);
        this.txtSamples = new Zd(this.createSamples());
        this.txtSamples.set_width(280);
        this.langBox.add(this.txtSamples);
        this.chkCommon = new bd('Append terrain noun');
        this.chkCommon.set_value(ka.terrNoun);
        this.langBox.add(this.chkCommon);
        ka.useLang && this.content.add(this.langBox);
        this.add(this.content);
      };
      h['com.watabou.perilous.ui.ToponymyForm'] = Yf;
      Yf.__name__ = 'com.watabou.perilous.ui.ToponymyForm';
      Yf.__super__ = pa;
      Yf.prototype = u(pa.prototype, {
        createSamples: function () {
          for (var a = [], b = 0; 10 > b; )
            for (b++; ; ) {
              var c = this.lang.spellWord(this.lang.getWord().join(''));
              if (-1 == a.indexOf(c)) {
                a.push(c);
                break;
              }
            }
          b = [];
          for (var d = 0; d < a.length; )
            ((c = a[d]), ++d, b.push(Le.capitalize(c)));
          return b.join(', ');
        },
        getTitle: function () {
          return 'Toponymy';
        },
        onButton: function (a) {
          'Apply' == a
            ? (Da.set('useConlang', (ka.useLang = this.chkConlang.get_value())),
              Da.set('terrNoun', (ka.terrNoun = this.chkCommon.get_value())),
              ka.useLang && (ka.lang = this.lang),
              this.onApply())
            : pa.prototype.onButton.call(this, a);
        },
        onEnter: function () {
          this.onButton('Apply');
        },
        onConlang: function (a) {
          a
            ? this.content.add(this.langBox)
            : (this.content.removeChild(this.langBox), this.content.layout());
          this.resize(this.content);
        },
        onPreset: function (a) {
          switch (a) {
            case 'Alien':
              this.lang = yc.alien();
              break;
            case 'Common':
              this.lang = yc.common();
              break;
            case 'Elvish':
              this.lang = yc.elvish();
              break;
            case 'Exotic':
              this.lang = yc.exotic();
              break;
            case 'Random':
              this.lang = new yc();
          }
          this.txtSamples.set_text(this.createSamples());
          this.txtSamples.set_width(280);
          this.resize(this.txtSamples);
        },
        resize: function (a) {
          do ((a = a.parent), a.layout());
          while (a != this);
          xa.__cast(this.parent, kd).resize();
        },
        __class__: Yf,
      });
      var rk = function (a) {
        pa.call(this, ['Copy', 'Generate']);
        this.onGenerate = a;
        a = new tf();
        this.input = new mc(ob.getURL());
        this.input.set_width(500);
        a.add(this.input);
        this.add(a);
      };
      h['com.watabou.perilous.ui.URLForm'] = rk;
      rk.__name__ = 'com.watabou.perilous.ui.URLForm';
      rk.__super__ = pa;
      rk.prototype = u(pa.prototype, {
        onShow: function () {
          this.highlight();
        },
        getTitle: function () {
          return 'Permalink';
        },
        onButton: function (a) {
          switch (a) {
            case 'Copy':
              Ne.get_generalClipboard().setData(2, this.input.get_text());
              this.highlight();
              break;
            case 'Generate':
              this.onGenerate(this.input.get_text());
              this.highlight();
              break;
            default:
              pa.prototype.onButton.call(this, a);
          }
        },
        highlight: function () {
          this.stage.set_focus(this.input);
          this.input.selecteAll();
        },
        __class__: rk,
      });
      var jh = function (a) {
        var b = this;
        pa.call(this, ['Apply']);
        this.onApply = a;
        var c = new Xc();
        this.slider = new ld(0.5, 1, 2);
        this.slider.set_value(fa.vantage);
        this.slider.valign = 'fill';
        this.slider.set_width(250);
        c.add(this.slider);
        var d = new wa(fa.vantage, 0.5, 1, 2);
        d.update.add(function (a) {
          b.slider.set_value(d.get_value());
        });
        d.enter.add(function (c) {
          a(b.slider.get_value());
        });
        c.add(d);
        this.slider.change.add(function (a) {
          d.set_value(a);
        });
        this.add(c);
      };
      h['com.watabou.perilous.ui.VantageForm'] = jh;
      jh.__name__ = 'com.watabou.perilous.ui.VantageForm';
      jh.__super__ = pa;
      jh.prototype = u(pa.prototype, {
        getTitle: function () {
          return 'Vantage point';
        },
        onButton: function (a) {
          if ('Apply' == a) this.onApply(this.slider.get_value());
          else pa.prototype.onButton.call(this, a);
        },
        __class__: jh,
      });
      var mk = function () {};
      h['com.watabou.perilous.utils.DoubleClicker'] = mk;
      mk.__name__ = 'com.watabou.perilous.utils.DoubleClicker';
      mk.prototype = {
        click: function (a) {
          var b = this;
          if (null != this.process)
            return (sb.cancel(this.process), (this.process = null), a(), !0);
          this.process = sb.wait(0.5, function () {
            b.process = null;
          });
          return !1;
        },
        __class__: mk,
      };
      var xg = function (a) {
        this.path = a;
        this.size = a.length;
        this.reset();
      };
      h['com.watabou.perilous.utils.PathTracker'] = xg;
      xg.__name__ = 'com.watabou.perilous.utils.PathTracker';
      xg.prototype = {
        getPos: function (a) {
          for (
            a < this.offset && this.reset();
            a > this.offset + this.curLength;

          ) {
            if (++this.curIndex >= this.size - 1) return (this.reset(), null);
            this.offset += this.curLength;
            this.curVector = this.path[this.curIndex + 1].subtract(
              this.path[this.curIndex],
            );
            this.curLength = this.curVector.get_length();
          }
          return ta.lerp(
            this.path[this.curIndex],
            this.path[this.curIndex + 1],
            (a - this.offset) / this.curLength,
          );
        },
        reset: function () {
          this.curIndex = this.offset = 0;
          this.curVector = this.path[1].subtract(this.path[0]);
          this.curLength = this.curVector.get_length();
        },
        length: function () {
          return Fd.$length(this.path);
        },
        get_tangent: function () {
          return this.curVector;
        },
        __class__: xg,
        __properties__: { get_tangent: 'get_tangent' },
      };
      var xc = function () {};
      h['com.watabou.perilous.utils.PolyUtils'] = xc;
      xc.__name__ = 'com.watabou.perilous.utils.PolyUtils';
      xc.distort = function (a, b) {
        null == b && (b = 0.5);
        for (
          var c = a.length,
            d = a[c - 2],
            f = a[c - 1],
            g = B.distance(d, f),
            k = [],
            q = 0;
          q < c;

        ) {
          var p = q++;
          d = f;
          f = a[p];
          p = g;
          g = B.distance(d, f);
          k.push(
            d.add(
              B.polar(
                Math.min(p, g) *
                  b *
                  ((((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                    (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                    3) *
                    2 -
                    1),
                Math.PI *
                  ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
              ),
            ),
          );
        }
        return k;
      };
      xc.wobbleFixed = function (a, b) {
        for (var c = [], d = 0, f = a.length; d < f; ) {
          var g = d++,
            k = B.polar(
              b *
                ((((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1),
              Math.PI *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            );
          c.push(a[g].add(k));
        }
        return c;
      };
      xc.wobbleFixedInner = function (a, b) {
        for (var c = a.length, d = [], f = 0; f < c; ) {
          var g = f++;
          if (0 == g || g == c - 1) g = a[g];
          else {
            var k = B.polar(
              b *
                ((((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1),
              Math.PI *
                ((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647),
            );
            g = a[g].add(k);
          }
          d.push(g);
        }
        return d;
      };
      xc.resampleClosed = function (a, b) {
        var c = Fd.perimeter(a);
        b = c / Math.round(c / b);
        c = a[a.length - 1];
        for (var d = [c], f = b, g = 0, k = 0, q = a.length; k < q; ) {
          var p = k++,
            l = c;
          c = a[p];
          for (p = B.distance(l, c); g + p > f; )
            (d.push(ta.lerp(l, c, (f - g) / p)), (f += b));
          g += p;
        }
        return d;
      };
      xc.resampleOpen = function (a, b) {
        var c = Fd.$length(a);
        b = c / Math.round(c / b);
        c = a[0];
        for (var d = [c], f = b, g = 0, k = 1, q = a.length; k < q; ) {
          var p = k++,
            l = c;
          c = a[p];
          for (p = B.distance(l, c); g + p > f; )
            (d.push(ta.lerp(l, c, (f - g) / p)), (f += b));
          g += p;
        }
        d.push(a[a.length - 1]);
        return d;
      };
      xc.fractalize = function (a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = 0.5);
        null == b && (b = 1);
        var f = [],
          g = null;
        g = function (a, b, d) {
          if (0 < d) {
            var k = new B(a.y - b.y, b.x - a.x),
              p = ta.lerp(a, b),
              q =
                c *
                ((((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                  (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                  3) *
                  2 -
                  1);
            p.x += k.x * q;
            p.y += k.y * q;
            g(a, p, d - 1);
            f.push(p);
            g(p, b, d - 1);
          }
        };
        for (var k = a.length, q = 0, p = k - 1; q < p; ) {
          var h = q++,
            t = a[h];
          h = a[h + 1];
          f.push(t);
          g(t, h, b);
        }
        d
          ? ((t = a[k - 1]), (h = a[0]), f.push(t), g(t, h, b))
          : f.push(a[k - 1]);
        return f;
      };
      xc.simplify = function (a, b, c) {
        null == c && (c = 1.01);
        null == b && (b = 0);
        var d = Fd.area(a);
        0 == b && (b = d);
        for (var f = d, g = a.length; 3 <= g; ) {
          for (var k = !1, q = 0; q < g; ) {
            var p = ta.triArea(a[(q + g - 1) % g], a[q], a[(q + 1) % g]),
              l = (f - p) / d;
            Math.abs(p) < b && l < c && 1 / l < c
              ? (a.splice(q, 1), (k = !0), (f -= p), --g)
              : ++q;
          }
          if (!k) break;
        }
      };
      xc.visvalingam = function (a, b, c) {
        null == c && (c = 1.1);
        null == b && (b = 2);
        for (var d = a.length, f = [], g = 0, k = d; g < k; ) {
          var q = g++;
          f.push(q < d - 1 ? B.distance(a[q], a[q + 1]) : 0);
        }
        var p = f;
        f = [];
        g = 0;
        for (k = d; g < k; )
          ((q = g++),
            f.push(
              0 == q || q == d - 1
                ? 0
                : Math.abs(ta.triArea(a[q - 1], a[q], a[q + 1])),
            ));
        k = f;
        var l = 0;
        for (f = 0; f < p.length; ) ((g = p[f]), ++f, (l += g));
        for (var h = l; d > b; ) {
          q = 1;
          var n = k[q];
          f = 1;
          for (g = d - 1; f < g; ) {
            var t = f++;
            n > k[t] && ((n = k[t]), (q = t));
          }
          g = B.distance(a[q - 1], a[q + 1]);
          h = h - p[q - 1] - p[q] + g;
          if (l / h > c) break;
          --d;
          a.splice(q, 1);
          p.splice(q, 1);
          p[q - 1] = g;
          k.splice(q, 1);
          1 < q && (k[q - 1] = Math.abs(ta.triArea(a[q - 2], a[q - 1], a[q])));
          q < d - 1 && (k[q] = Math.abs(ta.triArea(a[q - 1], a[q], a[q + 1])));
        }
      };
      var sh = function () {
        this.bones = [];
      };
      h['com.watabou.perilous.utils.Skeleton'] = sh;
      sh.__name__ = 'com.watabou.perilous.utils.Skeleton';
      sh.prototype = {
        addBone: function (a, b, c, d) {
          null == d && (d = 0);
          null == b && (b = 0);
          a = new th(a, b, c, d);
          this.bones.push(a);
          return a;
        },
        distRidge: function (a) {
          for (var b = Infinity, c = 0, d = this.bones; c < d.length; ) {
            var f = d[c];
            ++c;
            b = Math.min(b, f.distRidge(a));
          }
          return b;
        },
        distSoftRidge: function (a, b, c) {
          for (var d = Infinity, f = 0, g = this.bones; f < g.length; ) {
            var k = g[f];
            ++f;
            d = Math.min(d, k.distSoftRidge(a, b, c));
          }
          return d;
        },
        shatter: function (a, b, c, d) {
          null == d && (d = 2);
          null == c && (c = 0.5);
          R.remove(this.bones, a);
          var f = Math.pow(0.5, 1 / d);
          d = Math.pow(0.5, d);
          a = [a];
          for (var g = 0, k = b; g < k; ) {
            g++;
            for (var q = [], p = 0; p < a.length; ) {
              var h = a[p];
              ++p;
              q.push(h.len / (h.r0 + h.r1));
            }
            q = da.weighted(a, q);
            R.remove(a, q);
            p = q.p0;
            h = q.p1;
            b = q.r0;
            var t = q.r0 < q.r1 ? f : d;
            null == t && (t = 0.5);
            t = b + (q.r1 - b) * t;
            var n = ta.lerp(p, h);
            b = new B(p.y - h.y, h.x - p.x);
            var w =
              c *
              ((((l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 +
                (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647) /
                3) *
                2 -
                1);
            n.x += b.x * w;
            n.y += b.y * w;
            a.push(new th(p, q.r0, n, t));
            a.push(new th(n, t, h, q.r1));
          }
          b = this.bones;
          for (g = 0; g < a.length; ) ((c = a[g]), ++g, b.push(c));
        },
        __class__: sh,
      };
      var th = function (a, b, c, d) {
        null == d && (d = 0);
        null == b && (b = 0);
        this.p0 = a;
        this.p1 = c;
        this.r0 = b;
        this.r1 = d;
        this.dx = c.x - a.x;
        this.dy = c.y - a.y;
        this.d2 = this.dx * this.dx + this.dy * this.dy;
        this.len = Math.sqrt(this.d2);
      };
      h['com.watabou.perilous.utils.Bone'] = th;
      th.__name__ = 'com.watabou.perilous.utils.Bone';
      th.prototype = {
        project: function (a) {
          return 0 == this.d2
            ? 0
            : ac.gate(
                ((a.x - this.p0.x) * this.dx + (a.y - this.p0.y) * this.dy) /
                  this.d2,
                0,
                1,
              );
        },
        distRidge: function (a) {
          var b = this.project(a),
            c = new B(this.p0.x + b * this.dx, this.p0.y + b * this.dy),
            d = this.r0;
          null == b && (b = 0.5);
          d += (this.r1 - d) * b;
          return (B.distance(a, c) - d) / (0 != d ? d : 1);
        },
        distSoftRidge: function (a, b, c) {
          var d = this.project(a),
            f = new B(this.p0.x + d * this.dx, this.p0.y + d * this.dy),
            g = this.r0;
          null == d && (d = 0.5);
          g += (this.r1 - g) * d;
          f = B.distance(a, f) - g;
          g = 0 != g ? 1 / g : 1;
          a = b;
          null == a && (a = 0.5);
          return f * (g + (1 / c - g) * a);
        },
        __class__: th,
      };
      var Ii = function () {
        this.complete = new he();
      };
      h['com.watabou.processes.Process'] = Ii;
      Ii.__name__ = 'com.watabou.processes.Process';
      Ii.prototype = {
        onComplete: function (a) {
          null != a && this.complete.add(a);
          return this;
        },
        __class__: Ii,
      };
      var rf = function () {
        this.complete = new he();
      };
      h['com.watabou.processes.Tweener'] = rf;
      rf.__name__ = 'com.watabou.processes.Tweener';
      rf.create = function (a, b) {
        var c = new rf();
        c.time = a;
        c.updateCallback = b;
        return c;
      };
      rf.run = function (a, b) {
        a = rf.create(a, b);
        a.start();
        return a;
      };
      rf.__super__ = Ii;
      rf.prototype = u(Ii.prototype, {
        start: function () {
          this.passed = 0;
          this.paused = !1;
          this.updateCallback(0);
          return this.resume();
        },
        stop: function () {
          return this.pause();
        },
        resume: function () {
          sb.get_tick().add(m(this, this.update));
          this.paused = !1;
          return this;
        },
        pause: function () {
          sb.get_tick().remove(m(this, this.update));
          this.paused = !0;
          return this;
        },
        update: function (a) {
          this.paused ||
            ((this.passed += a) < this.time
              ? this.updateCallback(this.passed / this.time)
              : (this.updateCallback(1),
                this.stop(),
                this.complete.dispatch()));
        },
        __class__: rf,
      });
      var je = function () {};
      h['com.watabou.system.Exporter'] = je;
      je.__name__ = 'com.watabou.system.Exporter';
      je.saveBinary = function (a, b, c) {
        b = je.fixName(b);
        a = Nd.toArrayBuffer(a);
        window.saveAs(new Blob([a], { type: c }), b, !0);
      };
      je.saveText = function (a, b, c) {
        b = je.fixName(b);
        window.saveAs(new Blob([a], { type: c }), b, !0);
      };
      je.savePNG = function (a, b) {
        a = a.encode(a.rect, new ji());
        je.saveBinary(a, b + '.png', 'image/png');
      };
      je.fixName = function (a) {
        return new Ba("[ ']", 'g').split(a.toLowerCase()).join('_');
      };
      var Da = function () {};
      h['com.watabou.system.State'] = Da;
      Da.__name__ = 'com.watabou.system.State';
      Da.init = function (a, b) {
        null == Da.so &&
          (null == a && (a = F.current.meta.h.packageName),
          (Da.so = fd.getLocal(a)),
          (Da.data = Da.so.data),
          null != b && 0 == ya.fields(Da.data).length && b(Da.data));
      };
      Da.get = function (a, b) {
        Da.init();
        return Object.prototype.hasOwnProperty.call(Da.data, a)
          ? Da.data[a]
          : b;
      };
      Da.set = function (a, b) {
        Da.init();
        Da.data[a] = b;
        Da.so.flush();
      };
      var ob = function () {};
      h['com.watabou.system.URLState'] = ob;
      ob.__name__ = 'com.watabou.system.URLState';
      ob.init = function () {
        if (null == ob.data) {
          ob.data = {};
          var a = new URLSearchParams(z.location.search);
          null != a &&
            a.forEach(function (a, c) {
              return (ob.data[c] = a);
            });
        }
      };
      ob.reset = function () {
        ob.data = {};
        ob.update();
      };
      ob.get = function (a, b) {
        ob.init();
        return Object.prototype.hasOwnProperty.call(ob.data, a)
          ? ob.data[a]
          : b;
      };
      ob.getInt = function (a, b) {
        null == b && (b = 0);
        ob.init();
        return Object.prototype.hasOwnProperty.call(ob.data, a)
          ? I.parseInt(ob.data[a])
          : b;
      };
      ob.set = function (a, b) {
        ob.init();
        ob.data[a] = b;
        ob.update();
      };
      ob.getParams = function () {
        for (var a = '', b = ob.data, c = ya.fields(b), d = 0; d < c.length; ) {
          var f = c[d++];
          a += ('' == a ? '?' : '&') + ('' + f + '=' + I.string(b[f]));
        }
        return a;
      };
      ob.getURL = function () {
        return ob.baseURL + ob.getParams();
      };
      ob.update = function () {
        window.history.replaceState(ob.data, '', ob.getParams());
      };
      var Bg = function (a) {
        this.ruleSet = a;
        this.clearState();
      };
      h['com.watabou.tracery.RuleSelector'] = Bg;
      Bg.__name__ = 'com.watabou.tracery.RuleSelector';
      Bg.prototype = {
        select: function () {
          var a = this.ruleSet.defaultRules,
            b = (ef.rng() * a.length) | 0;
          return a[b];
        },
        clearState: function () {},
        __class__: Bg,
      };
      var Gi = function (a) {
        Bg.call(this, a);
      };
      h['com.watabou.tracery.DeckRuleSelector'] = Gi;
      Gi.__name__ = 'com.watabou.tracery.DeckRuleSelector';
      Gi.__super__ = Bg;
      Gi.prototype = u(Bg.prototype, {
        select: function () {
          0 == this.deck.length && this.clearState();
          var a = (ef.rng() * this.deck.length) | 0,
            b = this.deck[a];
          this.deck.splice(a, 1);
          return b;
        },
        clearState: function () {
          this.deck = this.ruleSet.defaultRules.slice();
        },
        __class__: Gi,
      });
      var bg = function (a, b, c) {
        this.grammar = a;
        this.key = b;
        this.baseRules = c;
        this.clearState();
      };
      h['com.watabou.tracery.Symbol'] = bg;
      bg.__name__ = 'com.watabou.tracery.Symbol';
      bg.prototype = {
        clearState: function () {
          this.stack = [this.baseRules];
          this.baseRules.clearState();
        },
        pushRules: function (a) {
          this.pushRuleSet(new Cg(this.grammar, a));
        },
        pushRuleSet: function (a) {
          this.stack.push(a);
        },
        popRules: function () {
          this.stack.pop();
        },
        selectRule: function () {
          return 0 == this.stack.length
            ? (console.log(
                '../classes/com/watabou/tracery/Symbol.hx:37:',
                'The rule stack for ' + this.key + ' is empty, too many pops?',
              ),
              '((' + this.key + '))')
            : this.top().selectRule();
        },
        top: function () {
          return this.stack[this.stack.length - 1];
        },
        __class__: bg,
      };
      var Ji = function (a, b, c) {
        bg.call(this, a, b, new Cg(a, []));
        this.generator = c;
      };
      h['com.watabou.tracery.ExtSymbol'] = Ji;
      Ji.__name__ = 'com.watabou.tracery.ExtSymbol';
      Ji.__super__ = bg;
      Ji.prototype = u(bg.prototype, {
        selectRule: function () {
          return this.generator();
        },
        __class__: Ji,
      });
      var ui = function (a) {
        this.autoID = 0;
        this.defaultSelector = Bg;
        this.modifiers = new Ja();
        this.flags = [];
        this.loadFromRawObj(a);
      };
      h['com.watabou.tracery.Grammar'] = ui;
      ui.__name__ = 'com.watabou.tracery.Grammar';
      ui.prototype = {
        clearState: function () {
          for (
            var a = this.symbols.h, b = Object.keys(a), c = b.length, d = 0;
            d < c;

          )
            a[b[d++]].clearState();
          this.flags = [];
        },
        addModifiers: function (a) {
          for (var b = Object.keys(a.h), c = b.length, d = 0; d < c; ) {
            var f = b[d++];
            this.modifiers.h[f] = a.h[f];
          }
        },
        loadFromRawObj: function (a) {
          this.raw = a;
          this.symbols = new Ja();
          this.subgrammars = [];
          if (null != a)
            for (var b = ya.fields(a), c = 0; c < b.length; ) {
              var d = b[c++],
                f = d;
              d = a[d];
              var g = 'string' == typeof d ? [d] : d;
              null == g &&
                (console.log(
                  '../classes/com/watabou/tracery/Grammar.hx:55:',
                  a,
                ),
                console.log(
                  '../classes/com/watabou/tracery/Grammar.hx:56:',
                  f,
                ));
              d = this.symbols;
              g = new bg(this, f, new Cg(this, this.unwrap(a, g)));
              d.h[f] = g;
            }
        },
        unwrap: function (a, b) {
          for (var c = [], d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            if ('@' == R.substr(f, 0, 1)) {
              var g = R.substr(f, 1, null);
              f = null;
              var k = g.indexOf('?-');
              -1 != k &&
                ((f = R.substr(g, 0, k)), (g = R.substr(g, k + 2, null)));
              k = a[g];
              g = 0;
              for (
                k = this.unwrap(a, 'string' == typeof k ? [k] : k);
                g < k.length;

              ) {
                var q = k[g];
                ++g;
                c.push(null == f ? q : '' + f + '?-' + q);
              }
            } else c.push(f);
          }
          return c;
        },
        createRoot: function (a) {
          return new uh(this, null, 0, { type: -1, raw: a });
        },
        expand: function (a, b) {
          null == b && (b = !1);
          a = this.createRoot(a);
          a.expand();
          b || a.clearEscapeChars();
          return a;
        },
        flatten: function (a, b) {
          null == b && (b = !1);
          return this.expand(a, b).finishedText;
        },
        execute: function (a) {
          'set ' == R.substr(a, 0, 4)
            ? ((a = R.substr(a, 4, null)),
              da.addAll(this.flags, new Ba(', +', '').split(a)))
            : 'clear ' == R.substr(a, 0, 6)
              ? ((a = R.substr(a, 6, null)),
                da.addAll(this.flags, new Ba(', +', '').split(a)))
              : console.log(
                  '../classes/com/watabou/tracery/Grammar.hx:113:',
                  'Unknown function "' + a + '" is called',
                );
        },
        pushRules: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.symbols.h, a))
            this.symbols.h[a].pushRules(b);
          else {
            var c = this.symbols;
            b = new bg(this, a, new Cg(this, b));
            c.h[a] = b;
          }
        },
        popRules: function (a) {
          Object.prototype.hasOwnProperty.call(this.symbols.h, a)
            ? this.symbols.h[a].popRules()
            : console.log(
                '../classes/com/watabou/tracery/Grammar.hx:142:',
                "Can't pop: no symbol for key " + a,
              );
        },
        addAutoRules: function (a) {
          var b = '_auto' + this.autoID++;
          this.pushRules(b, a);
          return b;
        },
        selectRule: function (a) {
          for (
            var b = this.symbols.h[a], c = 0, d = this.flags;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f = this.symbols.h['' + f + '?-' + a];
            if (null != f) {
              b = f;
              break;
            }
          }
          if (null != b && ((c = b.selectRule()), null != c)) return c;
          c = 0;
          for (d = this.subgrammars; c < d.length; )
            if (
              ((b = d[c]),
              ++c,
              Object.prototype.hasOwnProperty.call(b.symbols.h, a))
            )
              return b.symbols.h[a].selectRule();
          console.log(
            '../classes/com/watabou/tracery/Grammar.hx:177:',
            'No symbol for "' + a + '"',
          );
          return '((' + a + '))';
        },
        validateRule: function (a) {
          var b = a.indexOf('?-');
          if (-1 == b) return a;
          var c = R.substr(a, 0, b);
          return this.eval(c) ? R.substr(a, b + 2, null) : null;
        },
        eval: function (a) {
          var b = parseFloat(a);
          if (!isNaN(b))
            return (
              (a = b),
              null == a && (a = 0.5),
              (l.seed = (48271 * l.seed) % 2147483647 | 0) / 2147483647 < a
            );
          b = a.split('&');
          if (1 < b.length) {
            for (a = 0; a < b.length; ) {
              var c = b[a];
              ++a;
              if (!this.eval(c)) return !1;
            }
            return !0;
          }
          a = (b = '!' == a.charAt(0)) ? R.substr(a, 1, null) : a;
          return (-1 != this.flags.indexOf(a)) != b;
        },
        addExternal: function (a, b) {
          var c = this.symbols;
          b = new Ji(this, a, b);
          c.h[a] = b;
        },
        __class__: ui,
      };
      var Za = function () {};
      h['com.watabou.tracery.ModsEngBasic'] = Za;
      Za.__name__ = 'com.watabou.tracery.ModsEngBasic';
      Za.isVowel = function (a) {
        return -1 != 'ieaou'.indexOf(a.toLowerCase());
      };
      Za.isAlphaNum = function (a) {
        return ('a' <= a && 'z' >= a) || ('A' <= a && 'Z' >= a)
          ? !0
          : '0' <= a
            ? '9' >= a
            : !1;
      };
      Za.isPlural = function (a) {
        a = a.toLowerCase();
        return 's' == R.substr(a, -1, null)
          ? 'ss' != R.substr(a, -2, null)
          : !1;
      };
      Za.escapeRegExp = function (a) {
        return a.replace(/([.*+?^=!:${}()|\[\]/\\])/g, '\\$1');
      };
      Za.replace = function (a, b) {
        var c = new RegExp(Za.escapeRegExp(b[0]), 'g');
        return a.replace(c, b[1]);
      };
      Za.capitalizeAll = function (a, b) {
        b = '';
        for (var c = !0, d = 0, f = a.length; d < f; ) {
          var g = d++;
          g = a.charAt(g);
          Za.isAlphaNum(g) || "'" == g
            ? c
              ? ((b += g.toUpperCase()), (c = !1))
              : (b += g)
            : ((c = !0), (b += g));
        }
        return b;
      };
      Za.capitalize = function (a, b) {
        return a.charAt(0).toUpperCase() + R.substr(a, 1, null);
      };
      Za.caps = function (a, b) {
        return a.toUpperCase();
      };
      Za.a = function (a, b) {
        if (0 < a.length) {
          if (
            'u' == a.charAt(0).toLowerCase() &&
            2 < a.length &&
            'i' == a.charAt(2).toLowerCase()
          )
            return 'a ' + a;
          if (Za.isVowel(a.charAt(0))) return 'an ' + a;
        }
        return 'a ' + a;
      };
      Za.firstS = function (a, b) {
        a = a.split(' ');
        return 1 == a.length
          ? Za.s(a[0], null)
          : Za.s(a[0], null) + ' ' + a.slice(1).join(' ');
      };
      Za.s = function (a, b) {
        b = Za.plurals.h;
        for (var c = Object.keys(b), d = c.length, f = 0; f < d; ) {
          var g = c[f++],
            k = g;
          g = b[g];
          if (R.substr(a, -k.length, null) == k)
            return R.substr(a, 0, a.length - k.length) + g;
        }
        b = R.substr(a, -1, null);
        if ('s' == b || 'x' == b || 'z' == b) return a + 'es';
        if ('y' == b && -1 == 'ieaou'.indexOf(R.substr(a, -2, 1)))
          return R.substr(a, 0, -1) + 'ies';
        b = R.substr(a, -2, null);
        return 'ch' == b || 'sh' == b ? a + 'es' : a + 's';
      };
      Za.possessive = function (a, b) {
        return 's' == R.substr(a, -1, null) ? a + "'" : a + "'s";
      };
      Za.ed = function (a, b) {
        switch (R.substr(a, -1, null)) {
          case 'e':
            return a + 'd';
          case 'h':
            return a + 'ed';
          case 's':
            return a + 'ed';
          case 'x':
            return a + 'ed';
          case 'y':
            return Za.isVowel(a.charAt(a.length - 2))
              ? a + 'd'
              : a.substring(0, a.length - 1) + 'ied';
          default:
            return a + 'ed';
        }
      };
      Za.ing = function (a, b) {
        return 'e' == R.substr(a, -1, null)
          ? a.substring(0, a.length - 1) + 'ing'
          : a + 'ing';
      };
      Za.thiss = function (a, b) {
        return Za.isPlural(a) ? 'these' : 'this';
      };
      Za.they = function (a, b) {
        return Za.isPlural(a) ? 'they' : 'it';
      };
      Za.them = function (a, b) {
        return Za.isPlural(a) ? 'them' : 'it';
      };
      Za.is = function (a, b) {
        return Za.isPlural(a) ? 'are' : 'is';
      };
      Za.was = function (a, b) {
        return Za.isPlural(a) ? 'were' : 'was';
      };
      Za.get = function () {
        var a = new Ja();
        a.h.replace = Za.replace;
        a.h.possessive = Za.possessive;
        a.h.capitalize = Za.capitalize;
        a.h.capitalizeAll = Za.capitalizeAll;
        a.h.caps = Za.caps;
        a.h.firstS = Za.firstS;
        a.h.s = Za.s;
        a.h.a = Za.a;
        a.h.ed = Za.ed;
        a.h.ing = Za.ing;
        a.h['this'] = Za.thiss;
        a.h.they = Za.they;
        a.h.them = Za.them;
        a.h.is = Za.is;
        a.h.was = Za.was;
        return a;
      };
      var vh = function (a, b) {
        this.node = a;
        a = b.split(':');
        this.target = a[0];
        1 == a.length
          ? (this.type = 2)
          : ((this.rule = a[1]), (this.type = 'POP' == this.rule ? 1 : 0));
      };
      h['com.watabou.tracery.NodeAction'] = vh;
      vh.__name__ = 'com.watabou.tracery.NodeAction';
      vh.prototype = {
        createUndo: function () {
          return 0 == this.type
            ? new vh(this.node, this.target + ':POP')
            : null;
        },
        activate: function () {
          var a = this.node.grammar;
          switch (this.type) {
            case 0:
              for (
                var b = this.rule.split(','), c = [], d = 0;
                d < b.length;

              ) {
                var f = b[d];
                ++d;
                f = new uh(a, null, 0, { type: -1, raw: f });
                f.expand();
                c.push(f.finishedText);
              }
              a.pushRules(this.target, c);
              break;
            case 1:
              a.popRules(this.target);
              break;
            case 2:
              a.execute(this.target);
          }
        },
        __class__: vh,
      };
      var Cg = function (a, b) {
        this.grammar = a;
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          a.push(this.process(d));
        }
        this.defaultRules = this.raw = a;
      };
      h['com.watabou.tracery.RuleSet'] = Cg;
      Cg.__name__ = 'com.watabou.tracery.RuleSet';
      Cg.prototype = {
        process: function (a) {
          var b = a.indexOf('{');
          if (-1 == b) return a;
          for (
            var c = -1, d = 1, f = [], g = b + 1, k = b + 1, q = a.length;
            k < q;

          ) {
            var p = k++,
              l = a.charAt(p);
            if ('|' == l && 1 == d) (f.push(a.substring(g, p)), (g = p + 1));
            else if ('{' == l) ++d;
            else if ('}' == l && 0 == --d) {
              f.push(a.substring(g, p));
              c = p;
              break;
            }
          }
          return -1 != c
            ? ((b = R.substr(a, 0, b)),
              (a = R.substr(a, c + 1, null)),
              (f = this.grammar.addAutoRules(1 == f.length ? [f[0], ''] : f)),
              '' + b + '#' + f + '#' + this.process(a))
            : a;
        },
        selectRule: function () {
          null == this.selector &&
            (this.selector = y.createInstance(this.grammar.defaultSelector, [
              this,
            ]));
          for (;;) {
            var a = this.grammar.validateRule(this.selector.select());
            if (null != a) return a;
          }
        },
        clearState: function () {
          null != this.selector && this.selector.clearState();
        },
        __class__: Cg,
      };
      var ef = function () {};
      h['com.watabou.tracery.Tracery'] = ef;
      ef.__name__ = 'com.watabou.tracery.Tracery';
      ef.parseTag = function (a) {
        for (
          var b = {
              symbol: null,
              preactions: [],
              postactions: [],
              modifiers: [],
            },
            c = ef.parse(a),
            d = null,
            f = 0;
          f < c.length;

        ) {
          var g = c[f];
          ++f;
          if (0 == g.type)
            if (null == d) d = g.raw;
            else throw aa.thrown('multiple main sections in ' + a);
          else b.preactions.push(g.raw);
        }
        null != d &&
          ((a = d.split('.')), (b.symbol = a[0]), (b.modifiers = a.slice(1)));
        return b;
      };
      ef.parse = function (a) {
        var b = 0,
          c = !1,
          d = [],
          f = !1,
          g = 0,
          k = '',
          q = -1;
        if (null == a) return [];
        for (
          var p = function (b, c, f) {
              1 > c - b &&
                (1 == f &&
                  console.log(
                    '../classes/com/watabou/tracery/Tracery.hx:63:',
                    '' + b + ': empty tag',
                  ),
                2 == f &&
                  console.log(
                    '../classes/com/watabou/tracery/Tracery.hx:65:',
                    '' + b + ': empty action',
                  ));
              b =
                -1 != q ? k + '\\' + a.substring(q + 1, c) : a.substring(b, c);
              d.push({ type: f, raw: b });
              q = -1;
              k = '';
            },
            l = 0,
            h = a.length;
          l < h;

        ) {
          var n = l++;
          if (f) f = !f;
          else
            switch (a.charAt(n)) {
              case '#':
                0 == b &&
                  (c ? p(g, n, 1) : g < n && p(g, n, 0), (g = n + 1), (c = !c));
                break;
              case '[':
                0 != b || c || (g < n && p(g, n, 0), (g = n + 1));
                ++b;
                break;
              case '\\':
                f = !0;
                k += a.substring(g, n);
                g = n + 1;
                q = n;
                break;
              case ']':
                (--b, 0 != b || c || (p(g, n, 2), (g = n + 1)));
            }
        }
        g < a.length && p(g, a.length, 0);
        c &&
          console.log(
            '../classes/com/watabou/tracery/Tracery.hx:130:',
            'Unclosed tag',
          );
        0 < b &&
          console.log(
            '../classes/com/watabou/tracery/Tracery.hx:132:',
            'Too many [',
          );
        0 > b &&
          console.log(
            '../classes/com/watabou/tracery/Tracery.hx:134:',
            'Too many ]',
          );
        l = [];
        h = 0;
        for (b = d; h < b.length; )
          ((c = b[h]), ++h, (0 != c.type || 0 < c.raw.length) && l.push(c));
        return (d = l);
      };
      var uh = function (a, b, c, d) {
        null == d.raw &&
          (console.log(
            '../classes/com/watabou/tracery/TraceryNode.hx:35:',
            'Empty input for node',
          ),
          (d.raw = ''));
        this.grammar = a;
        this.parent = b;
        this.depth = null != b ? b.depth + 1 : 0;
        this.childIndex = c;
        this.raw = d.raw;
        this.type = d.type;
        this.isExpanded = !1;
      };
      h['com.watabou.tracery.TraceryNode'] = uh;
      uh.__name__ = 'com.watabou.tracery.TraceryNode';
      uh.prototype = {
        expandChildren: function (a, b) {
          this.children = [];
          this.finishedText = '';
          this.childRule = a;
          if (null != a) {
            a = ef.parse(a);
            for (var c = 0, d = a.length; c < d; ) {
              var f = c++,
                g = new uh(this.grammar, this, f, a[f]);
              this.children[f] = g;
              b || g.expand(!1);
              this.finishedText += g.finishedText;
            }
          } else
            console.log(
              '../classes/com/watabou/tracery/TraceryNode.hx:72:',
              "No child rule provided, can't expand children",
            );
        },
        expand: function (a) {
          null == a && (a = !1);
          if (!this.isExpanded)
            switch (((this.isExpanded = !0), this.type)) {
              case 0:
                this.finishedText = this.raw;
                break;
              case 1:
                var b = ef.parseTag(this.raw);
                this.symbol = b.symbol;
                this.modifiers = b.modifiers;
                var c = [],
                  d = 0;
                for (b = b.preactions; d < b.length; ) {
                  var f = b[d];
                  ++d;
                  c.push(new vh(this, f));
                }
                this.preactions = c;
                this.postaction = [];
                c = 0;
                for (d = this.preactions; c < d.length; )
                  ((f = d[c]),
                    ++c,
                    0 == f.type && this.postaction.push(f.createUndo()));
                c = 0;
                for (d = this.preactions; c < d.length; )
                  ((f = d[c]), ++c, f.activate());
                this.finishedText = this.raw;
                c = this.grammar.selectRule(this.symbol);
                this.expandChildren(c, a);
                c = 0;
                for (d = this.modifiers; c < d.length; )
                  ((a = d[c]),
                    ++c,
                    (b = []),
                    (f = a.indexOf('(')),
                    -1 != f &&
                      ((b = a.substring(f + 1, a.indexOf(')')).split(',')),
                      (a = a.substring(0, f))),
                    (f = this.grammar.modifiers.h[a]),
                    null == f
                      ? (console.log(
                          '../classes/com/watabou/tracery/TraceryNode.hx:114:',
                          'Missing modifier ' + a,
                        ),
                        (this.finishedText += '((.' + a + '))'))
                      : (this.finishedText = f(this.finishedText, b)));
                c = 0;
                for (d = this.postaction; c < d.length; )
                  ((a = d[c]), ++c, a.activate());
                break;
              case 2:
                this.action = new vh(this, this.raw);
                this.action.activate();
                this.finishedText = '';
                break;
              default:
                this.expandChildren(this.raw, a);
            }
        },
        clearEscapeChars: function () {},
        __class__: uh,
      };
      var da = function () {};
      h['com.watabou.utils.ArrayExtender'] = da;
      da.__name__ = 'com.watabou.utils.ArrayExtender';
      da.revert = function (a) {
        a = a.slice();
        a.reverse();
        return a;
      };
      da.shuffle = function (a) {
        for (var b = [], c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          var f = da.rnd();
          b.splice((f * (b.length + 1)) | 0, 0, d);
        }
        return b;
      };
      da.random = function (a) {
        return a[(da.rnd() * a.length) | 0];
      };
      da.pick = function (a) {
        var b = (da.rnd() * a.length) | 0,
          c = a[b];
        a.splice(b, 1);
        return c;
      };
      da.fallOff = function (a, b) {
        null == b && (b = 2);
        return a[(Math.pow(da.rnd(), b) * a.length) | 0];
      };
      da.subset = function (a, b) {
        return da.shuffle(a).slice(0, b);
      };
      da.weighted = function (a, b) {
        for (
          var c = da.rnd() * da.sum(b), d = 0, f = 0, g = a.length;
          f < g;

        ) {
          var k = f++;
          if (c <= (d += b[k])) return a[k];
        }
        return a[0];
      };
      da.isEmpty = function (a) {
        return 0 == a.length;
      };
      da.min = function (a, b) {
        for (var c = a[0], d = b(c), f = 1, g = a.length; f < g; ) {
          var k = f++;
          k = a[k];
          var q = b(k);
          q < d && ((c = k), (d = q));
        }
        return c;
      };
      da.max = function (a, b) {
        for (var c = a[0], d = b(c), f = 1, g = a.length; f < g; ) {
          var k = f++;
          k = a[k];
          var q = b(k);
          q > d && ((c = k), (d = q));
        }
        return c;
      };
      da.every = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (!b(d)) return !1;
        }
        return !0;
      };
      da.some = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (b(d)) return !0;
        }
        return !1;
      };
      da.count = function (a, b) {
        for (var c = 0, d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          b(f) && ++c;
        }
        return c;
      };
      da.sum = function (a) {
        for (var b = 0, c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b += d;
        }
        return b;
      };
      da.add = function (a, b) {
        return -1 == a.indexOf(b) ? (a.push(b), !0) : !1;
      };
      da.intersect = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          -1 != b.indexOf(f) && c.push(f);
        }
        return c;
      };
      da.addAll = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          -1 == a.indexOf(d) && a.push(d);
        }
      };
      da.removeAll = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          R.remove(a, d);
        }
      };
      da.difference = function (a, b) {
        for (var c = [], d = 0; d < a.length; ) {
          var f = a[d];
          ++d;
          -1 == b.indexOf(f) && c.push(f);
        }
        return c;
      };
      da.intersects = function (a, b) {
        for (var c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          if (-1 != b.indexOf(d)) return !0;
        }
        return !1;
      };
      var Zh = function () {};
      h['com.watabou.utils.ColorNames'] = Zh;
      Zh.__name__ = 'com.watabou.utils.ColorNames';
      Zh.get = function (a) {
        for (
          var b = a >>> 16,
            c = (a >>> 8) & 255,
            d = a & 255,
            f = '',
            g = 1e10,
            k = Zh.values.h,
            q = Object.keys(k),
            p = q.length,
            l = 0;
          l < p;

        ) {
          var h = q[l++],
            n = h;
          a = k[h];
          h = a >> 16;
          var t = (a >> 8) & 255;
          a &= 255;
          h = (b - h) * (b - h) + (c - t) * (c - t) + (d - a) * (d - a);
          g > db.toFloat(h) && ((g = db.toFloat(h)), (f = n));
        }
        return f;
      };
      var kl = function () {};
      h['com.watabou.utils.GrammarExtender'] = kl;
      kl.__name__ = 'com.watabou.utils.GrammarExtender';
      kl.a = function (a, b) {
        null == b && (b = !1);
        return (
          (-1 != 'ieaou'.indexOf(a.charAt(0).toLowerCase()) ? 'an' : 'a') +
          (b ? '' : ' ' + a)
        );
      };
      var Tc = function () {};
      h['com.watabou.utils.GraphicsExtender'] = Tc;
      Tc.__name__ = 'com.watabou.utils.GraphicsExtender';
      Tc.drawPolygon = function (a, b) {
        var c = b[b.length - 1];
        a.moveTo(c.x, c.y);
        for (var d = 0; d < b.length; ) ((c = b[d]), ++d, a.lineTo(c.x, c.y));
      };
      Tc.drawPolygonAt = function (a, b, c, d) {
        var f = b[b.length - 1];
        a.moveTo(f.x + c, f.y + d);
        for (var g = 0; g < b.length; )
          ((f = b[g]), ++g, a.lineTo(f.x + c, f.y + d));
      };
      Tc.drawPolyline = function (a, b) {
        var c = b[0];
        a.moveTo(c.x, c.y);
        for (var d = 1, f = b.length; d < f; )
          ((c = d++), (c = b[c]), a.lineTo(c.x, c.y));
      };
      Tc.dashedLine = function (a, b, c, d) {
        var f = !0,
          g = 0;
        for (a.moveTo(b.x, b.y); ; ) {
          var k = B.distance(b, c),
            q = d[g];
          if (0 < q) {
            if (k < q) {
              f && a.lineTo(c.x, c.y);
              break;
            }
            b = ta.lerp(b, c, q / k);
            f ? a.lineTo(b.x, b.y) : a.moveTo(b.x, b.y);
          }
          ++g >= d.length && (g = 0);
          f = !f;
        }
      };
      Tc.dashedPolyline = function (a, b, c, d) {
        null == c && (c = !1);
        if (!(2 > b.length)) {
          var f = !0,
            g = 0,
            k = 0,
            q = d[0],
            p = c ? -1 : 0,
            l = b[c ? b.length - 1 : 0];
          c = b[c ? 0 : 1];
          for (a.moveTo(l.x, l.y); ; ) {
            var h = B.distance(l, c);
            if (k + h < q) {
              f && a.lineTo(c.x, c.y);
              if (++p >= b.length) break;
              l = c;
              c = b[p];
              k += h;
            } else
              (0 < q &&
                ((l = ta.lerp(l, c, (q - k) / h)),
                f ? a.lineTo(l.x, l.y) : a.moveTo(l.x, l.y)),
                ++g >= d.length && (g = 0),
                (q = d[g]),
                (k = 0),
                (f = !f));
          }
        }
      };
      var ac = function () {};
      h['com.watabou.utils.MathUtils'] = ac;
      ac.__name__ = 'com.watabou.utils.MathUtils';
      ac.gate = function (a, b, c) {
        return a < b ? b : a < c ? a : c;
      };
      ac.cycle = function (a, b, c) {
        for (; a < b; ) a += c - b;
        for (; a > c; ) a -= c - b;
        return a;
      };
      ac.gatei = function (a, b, c) {
        return a < b ? b : a < c ? a : c;
      };
      var mh = function () {
        this.components = [];
      };
      h['com.watabou.utils.Noise'] = mh;
      mh.__name__ = 'com.watabou.utils.Noise';
      mh.fractal = function (a, b, c) {
        null == c && (c = 0.5);
        null == b && (b = 1);
        null == a && (a = 1);
        for (var d = new mh(), f = 1, g = 0; g < a; ) {
          g++;
          var k = new ff((l.seed = (48271 * l.seed) % 2147483647 | 0));
          k.gridSize = b;
          k.amplitude = f;
          d.components.push(k);
          b *= 2;
          f *= c;
        }
        return d;
      };
      mh.prototype = {
        get: function (a, b) {
          for (var c = 0, d = 0, f = this.components; d < f.length; ) {
            var g = f[d];
            ++d;
            c += g.get(a, b);
          }
          return c;
        },
        __class__: mh,
      };
      var ff = function (a) {
        this.offsetX = this.offsetY = 0;
        this.gridSize = this.amplitude = 1;
        for (var b = [], c = 0; 256 > c; ) {
          var d = c++;
          b.push(ff.permutation[(d + a) % 256]);
        }
        this.p = b;
        this.p = this.p.concat(this.p);
        if (null == ff.smooth) {
          b = [];
          for (c = 0; 4096 > c; )
            ((d = c++),
              (a = d / 4096),
              b.push(a * a * a * (a * (6 * a - 15) + 10)));
          ff.smooth = b;
        }
      };
      h['com.watabou.utils.Perlin'] = ff;
      ff.__name__ = 'com.watabou.utils.Perlin';
      ff.prototype = {
        get: function (a, b) {
          a = a * this.gridSize + this.offsetX;
          0 > a && (a += 256);
          b = b * this.gridSize + this.offsetY;
          0 > b && (b += 256);
          var c = Math.floor(a),
            d = c + 1,
            f = a - c,
            g = ff.smooth[(4096 * f) | 0];
          a = Math.floor(b);
          var k = a + 1,
            q = b - a,
            p = ff.smooth[(4096 * q) | 0];
          b = this.p[this.p[d] + a];
          var l = this.p[this.p[c] + k];
          d = this.p[this.p[d] + k];
          switch (this.p[this.p[c] + a] & 3) {
            case 0:
              c = f + q;
              break;
            case 1:
              c = f - q;
              break;
            case 2:
              c = -f + q;
              break;
            case 3:
              c = -f - q;
              break;
            default:
              c = 0;
          }
          a = f - 1;
          switch (b & 3) {
            case 0:
              b = a + q;
              break;
            case 1:
              b = a - q;
              break;
            case 2:
              b = -a + q;
              break;
            case 3:
              b = -a - q;
              break;
            default:
              b = 0;
          }
          k = c + (b - c) * g;
          b = q - 1;
          switch (l & 3) {
            case 0:
              c = f + b;
              break;
            case 1:
              c = f - b;
              break;
            case 2:
              c = -f + b;
              break;
            case 3:
              c = -f - b;
              break;
            default:
              c = 0;
          }
          a = f - 1;
          b = q - 1;
          switch (d & 3) {
            case 0:
              b = a + b;
              break;
            case 1:
              b = a - b;
              break;
            case 2:
              b = -a + b;
              break;
            case 3:
              b = -a - b;
              break;
            default:
              b = 0;
          }
          return this.amplitude * (k + (c + (b - c) * g - k) * p);
        },
        __class__: ff,
      };
      var Cb = (L['com.watabou.utils.ParamType'] = {
        __ename__: 'com.watabou.utils.ParamType',
        __constructs__: null,
        COLOR: {
          _hx_name: 'COLOR',
          _hx_index: 0,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        MULTI: {
          _hx_name: 'MULTI',
          _hx_index: 1,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        FONT: {
          _hx_name: 'FONT',
          _hx_index: 2,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        FLOAT: {
          _hx_name: 'FLOAT',
          _hx_index: 3,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        INT: {
          _hx_name: 'INT',
          _hx_index: 4,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        STRING: {
          _hx_name: 'STRING',
          _hx_index: 5,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
        BOOL: {
          _hx_name: 'BOOL',
          _hx_index: 6,
          __enum__: 'com.watabou.utils.ParamType',
          toString: r,
        },
      });
      Cb.__constructs__ = [
        Cb.COLOR,
        Cb.MULTI,
        Cb.FONT,
        Cb.FLOAT,
        Cb.INT,
        Cb.STRING,
        Cb.BOOL,
      ];
      Cb.__empty_constructs__ = [
        Cb.COLOR,
        Cb.MULTI,
        Cb.FONT,
        Cb.FLOAT,
        Cb.INT,
        Cb.STRING,
        Cb.BOOL,
      ];
      var md = function () {
        this.params = [];
      };
      h['com.watabou.utils.Palette'] = md;
      md.__name__ = 'com.watabou.utils.Palette';
      md.float2str = function (a) {
        a = null == a ? 'null' : '' + a;
        -1 == a.indexOf('.') && (a += '.0');
        return a;
      };
      md.font2format = function (a) {
        if (null == a) return null;
        if (null != a.face) var b = a.face;
        else
          null != a.embedded && Rb.exists(a.embedded)
            ? ((b = Rb.getFont(a.embedded)), (b = null != b ? b.name : null))
            : (b = '_serif');
        return new Fe(b, a.size, 0, a.bold, a.italic);
      };
      md.fromData = function (a) {
        for (var b = new md(), c = ya.fields(a), d = 0; d < c.length; ) {
          var f = c[d++],
            g = f;
          f = a[f];
          if ('number' == typeof f && (f | 0) === f) b.setInt(g, f);
          else if ('number' == typeof f) b.setFloat(g, f);
          else if ('boolean' == typeof f) b.setBool(g, f);
          else if ('string' == typeof f) {
            if (7 == f.length && '#' == f.charAt(0)) {
              var k = I.parseInt('0x' + R.substr(f, 1, null));
              if (null != k) {
                b.setColor(g, k);
                continue;
              }
            }
            k = parseFloat(f);
            if (isNaN(k))
              switch (f) {
                case 'false':
                  b.setBool(g, !1);
                  break;
                case 'true':
                  b.setBool(g, !0);
                  break;
                default:
                  b.setString(g, f);
              }
            else -1 == f.indexOf('.') ? b.setInt(g, k | 0) : b.setFloat(g, k);
          } else if (f instanceof Array) {
            k = [];
            for (var q = 0; q < f.length; ) {
              var p = f[q];
              ++q;
              p = I.parseInt('0x' + R.substr(p, 1, null));
              null != p && k.push(p);
            }
            b.setMulti(g, k);
          } else null != f && b.setFont(g, f);
        }
        return b;
      };
      md.fromJSON = function (a) {
        a = JSON.parse(a);
        return md.fromData(a);
      };
      md.prototype = {
        getColor: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a) {
              if (f.type == Cb.COLOR) return f.color;
              if (f.type == Cb.MULTI) return f.multi[0];
              break;
            }
          }
          return b;
        },
        getMulti: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a) {
              if (f.type == Cb.MULTI) return f.multi;
              if (f.type == Cb.COLOR) return [f.color];
              break;
            }
          }
          return [b];
        },
        getFont: function (a, b) {
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Cb.FONT) return f.font;
          }
          return b;
        },
        getFloat: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Cb.FLOAT) return f.float;
          }
          return b;
        },
        getInt: function (a, b) {
          null == b && (b = 0);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Cb.INT) return f.int;
          }
          return b;
        },
        getString: function (a, b) {
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Cb.STRING) return f.string;
          }
          return b;
        },
        getBool: function (a, b) {
          null == b && (b = !1);
          for (var c = 0, d = this.params; c < d.length; ) {
            var f = d[c];
            ++c;
            if (f.id == a && f.type == Cb.BOOL) return f.bool;
          }
          return b;
        },
        setColor: function (a, b) {
          this.params.push({ id: a, type: Cb.COLOR, color: b });
        },
        setMulti: function (a, b) {
          this.params.push({ id: a, type: Cb.MULTI, multi: b });
        },
        setFont: function (a, b) {
          this.params.push({ id: a, type: Cb.FONT, font: b });
        },
        setFloat: function (a, b) {
          this.params.push({ id: a, type: Cb.FLOAT, float: b });
        },
        setInt: function (a, b) {
          this.params.push({ id: a, type: Cb.INT, int: b });
        },
        setString: function (a, b) {
          this.params.push({ id: a, type: Cb.STRING, string: b });
        },
        setBool: function (a, b) {
          this.params.push({ id: a, type: Cb.BOOL, bool: b });
        },
        data: function () {
          for (var a = {}, b = 0, c = this.params; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.type._hx_index) {
              case 0:
                a[d.id] = '#' + P.hex(d.color, 6);
                break;
              case 1:
                var f = d.id,
                  g = [],
                  k = 0;
                for (d = d.multi; k < d.length; ) {
                  var q = d[k];
                  ++k;
                  g.push('#' + P.hex(q, 6));
                }
                a[f] = g;
                break;
              case 2:
                a[d.id] = d.font;
                break;
              case 3:
                a[d.id] = md.float2str(d.float);
                break;
              case 4:
                a[d.id] = null == d.int ? 'null' : '' + d.int;
                break;
              case 5:
                a[d.id] = d.string;
                break;
              case 6:
                a[d.id] = null == d.bool ? 'null' : '' + d.bool;
            }
          }
          return a;
        },
        json: function () {
          return JSON.stringify(this.data(), null, '  ');
        },
        __class__: md,
      };
      var lh = function () {};
      h['com.watabou.utils.PointExtender'] = lh;
      lh.__name__ = 'com.watabou.utils.PointExtender';
      lh.set = function (a, b) {
        a.x = b.x;
        a.y = b.y;
      };
      lh.project = function (a, b) {
        var c = a.get_length();
        return (a.x * b.x + a.y * b.y) / (c * c);
      };
      var Ye = function () {};
      h['com.watabou.utils.SetUtils'] = Ye;
      Ye.__name__ = 'com.watabou.utils.SetUtils';
      Ye.fromArray = function (a) {
        for (var b = new va(), c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          b.set(d, !0);
        }
        return b;
      };
      Ye.removeArr = function (a, b) {
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          a.remove(d);
        }
      };
      Ye.isEmpty = function (a) {
        for (a = a.iterator(); a.hasNext(); ) return (a.next(), !1);
        return !0;
      };
      var Le = function () {};
      h['com.watabou.utils.StringUtils'] = Le;
      Le.__name__ = 'com.watabou.utils.StringUtils';
      Le.capitalize = function (a) {
        return R.substr(a, 0, 1).toUpperCase() + R.substr(a, 1, null);
      };
      Le.capitalizeAll = function (a) {
        var b = [],
          c = 0;
        for (a = a.split(' '); c < a.length; ) {
          var d = a[c];
          ++c;
          b.push(Le.capitalize(d));
        }
        return b.join(' ');
      };
      var ve = function (a) {
        null == a && (a = []);
        this.valueClasses = a;
        this.slots = yd.NIL;
        this.priorityBased = !1;
      };
      h['msignal.Signal'] = ve;
      ve.__name__ = 'msignal.Signal';
      ve.prototype = {
        add: function (a) {
          return this.registerListener(a);
        },
        addOnce: function (a) {
          return this.registerListener(a, !0);
        },
        addWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !1, b);
        },
        addOnceWithPriority: function (a, b) {
          null == b && (b = 0);
          return this.registerListener(a, !0, b);
        },
        remove: function (a) {
          var b = this.slots.find(a);
          if (null == b) return null;
          this.slots = this.slots.filterNot(a);
          return b;
        },
        removeAll: function () {
          this.slots = yd.NIL;
        },
        registerListener: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return this.registrationPossible(a, b)
            ? ((a = this.createSlot(a, b, c)),
              this.priorityBased || 0 == c || (this.priorityBased = !0),
              (this.slots =
                this.priorityBased || 0 != c
                  ? this.slots.insertWithPriority(a)
                  : this.slots.prepend(a)),
              a)
            : this.slots.find(a);
        },
        registrationPossible: function (a, b) {
          return this.slots.nonEmpty && null != this.slots.find(a) ? !1 : !0;
        },
        createSlot: function (a, b, c) {
          return null;
        },
        get_numListeners: function () {
          return this.slots.get_length();
        },
        __class__: ve,
        __properties__: { get_numListeners: 'get_numListeners' },
      };
      var Ac = function (a) {
        ve.call(this, [a]);
      };
      h['msignal.Signal1'] = Ac;
      Ac.__name__ = 'msignal.Signal1';
      Ac.__super__ = ve;
      Ac.prototype = u(ve.prototype, {
        dispatch: function (a) {
          for (var b = this.slots; b.nonEmpty; )
            (b.head.execute(a), (b = b.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new Ki(this, a, b, c);
        },
        __class__: Ac,
      });
      var yd = function (a, b) {
        this.nonEmpty = !1;
        null == a && null == b
          ? (this.nonEmpty = !1)
          : null != a &&
            ((this.head = a),
            (this.tail = null == b ? yd.NIL : b),
            (this.nonEmpty = !0));
      };
      h['msignal.SlotList'] = yd;
      yd.__name__ = 'msignal.SlotList';
      yd.prototype = {
        get_length: function () {
          if (!this.nonEmpty) return 0;
          if (this.tail == yd.NIL) return 1;
          for (var a = 0, b = this; b.nonEmpty; ) (++a, (b = b.tail));
          return a;
        },
        prepend: function (a) {
          return new yd(a, this);
        },
        insertWithPriority: function (a) {
          if (!this.nonEmpty) return new yd(a);
          var b = a.priority;
          if (b >= this.head.priority) return this.prepend(a);
          for (var c = new yd(this.head), d = c, f = this.tail; f.nonEmpty; ) {
            if (b > f.head.priority) return ((d.tail = f.prepend(a)), c);
            d = d.tail = new yd(f.head);
            f = f.tail;
          }
          d.tail = new yd(a);
          return c;
        },
        filterNot: function (a) {
          if (!this.nonEmpty || null == a) return this;
          if (this.head.listener == a) return this.tail;
          for (var b = new yd(this.head), c = b, d = this.tail; d.nonEmpty; ) {
            if (d.head.listener == a) return ((c.tail = d.tail), b);
            c = c.tail = new yd(d.head);
            d = d.tail;
          }
          return this;
        },
        find: function (a) {
          if (!this.nonEmpty) return null;
          for (var b = this; b.nonEmpty; ) {
            if (b.head.listener == a) return b.head;
            b = b.tail;
          }
          return null;
        },
        __class__: yd,
        __properties__: { get_length: 'get_length' },
      };
      var sb = function () {};
      h['com.watabou.utils.Updater'] = sb;
      sb.__name__ = 'com.watabou.utils.Updater';
      sb.__properties__ = { get_tick: 'get_tick' };
      sb.get_tick = function () {
        null == sb.source && sb.useTimer(60);
        return sb._tick;
      };
      sb.fire = function () {
        var a = Ra.getTimer();
        0 == sb.lastTime
          ? sb._tick.dispatch(0)
          : sb._tick.dispatch(((a - sb.lastTime) / 1e3) * sb.timeScale);
        sb.lastTime = a;
      };
      sb.useTimer = function (a) {
        null != sb.source && sb.source.stop();
        sb.source = new Li(a);
      };
      sb.useEnterFrame = function (a) {
        null != sb.source && sb.source.stop();
        sb.source = new Mi(a);
      };
      sb.wait = function (a, b) {
        var c = 0,
          d = null;
        d = function (f) {
          (c += f) >= a && (sb.get_tick().remove(d), b());
        };
        sb.get_tick().add(d);
        return d;
      };
      sb.cancel = function (a) {
        sb.get_tick().remove(a);
      };
      sb.stop = function () {
        null != sb.source && (sb.source.stop(), (sb.source = null));
      };
      var Dg = function () {};
      h['com.watabou.utils.RecurringEventDispatcher'] = Dg;
      Dg.__name__ = 'com.watabou.utils.RecurringEventDispatcher';
      Dg.prototype = { stop: function () {}, __class__: Dg };
      var Li = function (a) {
        this.timer = new Ni(a);
        this.timer.addEventListener('timer', m(this, this.onTimer));
        this.timer.start();
      };
      h['com.watabou.utils._Updater.TimerEventDispatcher'] = Li;
      Li.__name__ = 'com.watabou.utils._Updater.TimerEventDispatcher';
      Li.__super__ = Dg;
      Li.prototype = u(Dg.prototype, {
        onTimer: function (a) {
          sb.fire();
          a.updateAfterEvent();
        },
        stop: function () {
          this.timer.stop();
        },
        __class__: Li,
      });
      var Mi = function (a) {
        this.dispObj = a;
        a.addEventListener('enterFrame', m(this, this.onEnterFrame));
      };
      h['com.watabou.utils._Updater.FrameEventDispatcher'] = Mi;
      Mi.__name__ = 'com.watabou.utils._Updater.FrameEventDispatcher';
      Mi.__super__ = Dg;
      Mi.prototype = u(Dg.prototype, {
        onEnterFrame: function (a) {
          sb.fire();
        },
        stop: function () {
          this.dispObj.removeEventListener(
            'enterFrame',
            m(this, this.onEnterFrame),
          );
        },
        __class__: Mi,
      });
      var Qd = (L['haxe.StackItem'] = {
        __ename__: 'haxe.StackItem',
        __constructs__: null,
        CFunction: {
          _hx_name: 'CFunction',
          _hx_index: 0,
          __enum__: 'haxe.StackItem',
          toString: r,
        },
        Module:
          ((E = function (a) {
            return {
              _hx_index: 1,
              m: a,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (E._hx_name = 'Module'),
          (E.__params__ = ['m']),
          E),
        FilePos:
          ((E = function (a, b, c, d) {
            return {
              _hx_index: 2,
              s: a,
              file: b,
              line: c,
              column: d,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (E._hx_name = 'FilePos'),
          (E.__params__ = ['s', 'file', 'line', 'column']),
          E),
        Method:
          ((E = function (a, b) {
            return {
              _hx_index: 3,
              classname: a,
              method: b,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (E._hx_name = 'Method'),
          (E.__params__ = ['classname', 'method']),
          E),
        LocalFunction:
          ((E = function (a) {
            return {
              _hx_index: 4,
              v: a,
              __enum__: 'haxe.StackItem',
              toString: r,
            };
          }),
          (E._hx_name = 'LocalFunction'),
          (E.__params__ = ['v']),
          E),
      });
      Qd.__constructs__ = [
        Qd.CFunction,
        Qd.Module,
        Qd.FilePos,
        Qd.Method,
        Qd.LocalFunction,
      ];
      Qd.__empty_constructs__ = [Qd.CFunction];
      var Ef = {
          callStack: function () {
            return Ua.toHaxe(Ua.callStack());
          },
          exceptionStack: function (a) {
            null == a && (a = !1);
            var b = Ua.toHaxe(Ua.exceptionStack());
            return a ? b : Ef.subtract(b, Ef.callStack());
          },
          toString: function (a) {
            for (var b = new G(), c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              b.b += '\nCalled from ';
              Ef.itemToString(b, d);
            }
            return b.b;
          },
          subtract: function (a, b) {
            for (var c = -1, d = -1; ++d < a.length; ) {
              for (var f = 0, g = b.length; f < g; ) {
                var k = f++;
                if (Ef.equalItems(a[d], b[k])) {
                  if ((0 > c && (c = d), ++d, d >= a.length)) break;
                } else c = -1;
              }
              if (0 <= c) break;
            }
            return 0 <= c ? a.slice(0, c) : a;
          },
          equalItems: function (a, b) {
            if (null == a) return null == b ? !0 : !1;
            switch (a._hx_index) {
              case 0:
                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
              case 1:
                return null == b ? !1 : 1 == b._hx_index ? a.m == b.m : !1;
              case 2:
                if (null == b) return !1;
                if (2 == b._hx_index) {
                  var c = b.s,
                    d = b.line,
                    f = b.column,
                    g = a.column,
                    k = a.line,
                    q = a.s;
                  return a.file == b.file && k == d && g == f
                    ? Ef.equalItems(q, c)
                    : !1;
                }
                return !1;
              case 3:
                return null == b
                  ? !1
                  : 3 == b._hx_index
                    ? ((c = b.method),
                      (d = a.method),
                      a.classname == b.classname ? d == c : !1)
                    : !1;
              case 4:
                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1;
            }
          },
          itemToString: function (a, b) {
            switch (b._hx_index) {
              case 0:
                a.b += 'a C function';
                break;
              case 1:
                b = b.m;
                a.b += 'module ';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 2:
                var c = b.s,
                  d = b.file,
                  f = b.line;
                b = b.column;
                null != c && (Ef.itemToString(a, c), (a.b += ' ('));
                a.b += null == d ? 'null' : '' + d;
                a.b += ' line ';
                a.b += null == f ? 'null' : '' + f;
                null != b &&
                  ((a.b += ' column '), (a.b += null == b ? 'null' : '' + b));
                null != c && (a.b += ')');
                break;
              case 3:
                c = b.classname;
                b = b.method;
                a.b += I.string(null == c ? '<unknown>' : c);
                a.b += '.';
                a.b += null == b ? 'null' : '' + b;
                break;
              case 4:
                ((b = b.v),
                  (a.b += 'local function #'),
                  (a.b += null == b ? 'null' : '' + b));
            }
          },
        },
        aa = function (a, b, c) {
          Error.call(this, a);
          this.message = a;
          this.__previousException = b;
          this.__nativeException = null != c ? c : this;
          this.__skipStack = 0;
          a = Error.prepareStackTrace;
          Error.prepareStackTrace = function (a) {
            return a.stack;
          };
          if (c instanceof Error) this.stack = c.stack;
          else {
            c = null;
            if (Error.captureStackTrace)
              (Error.captureStackTrace(this, aa), (c = this));
            else if (((c = Error()), 'undefined' == typeof c.stack)) {
              try {
                throw c;
              } catch (d) {}
              this.__skipStack++;
            }
            this.stack = c.stack;
          }
          Error.prepareStackTrace = a;
        };
      h['haxe.Exception'] = aa;
      aa.__name__ = 'haxe.Exception';
      aa.caught = function (a) {
        return a instanceof aa
          ? a
          : a instanceof Error
            ? new aa(a.message, null, a)
            : new wh(a, null, a);
      };
      aa.thrown = function (a) {
        if (a instanceof aa) return a.get_native();
        if (a instanceof Error) return a;
        a = new wh(a);
        a.__skipStack++;
        return a;
      };
      aa.__super__ = Error;
      aa.prototype = u(Error.prototype, {
        unwrap: function () {
          return this.__nativeException;
        },
        toString: function () {
          return this.get_message();
        },
        __shiftStack: function () {
          this.__skipStack++;
        },
        get_message: function () {
          return this.message;
        },
        get_native: function () {
          return this.__nativeException;
        },
        get_stack: function () {
          var a = this.__exceptionStack;
          null == a &&
            ((a = Ua.toHaxe(Ua.normalize(this.stack), this.__skipStack)),
            this.setProperty('__exceptionStack', a));
          return a;
        },
        setProperty: function (a, b) {
          try {
            Object.defineProperty(this, a, { value: b });
          } catch (c) {
            this[a] = b;
          }
        },
        __class__: aa,
        __properties__: {
          get_native: 'get_native',
          get_stack: 'get_stack',
          get_message: 'get_message',
        },
      });
      var lb = function (a, b) {
        this.high = a;
        this.low = b;
      };
      h['haxe._Int64.___Int64'] = lb;
      lb.__name__ = 'haxe._Int64.___Int64';
      lb.prototype = { __class__: lb };
      var Ua = function () {};
      h['haxe.NativeStackTrace'] = Ua;
      Ua.__name__ = 'haxe.NativeStackTrace';
      Ua.saveStack = function (a) {
        Ua.lastError = a;
      };
      Ua.callStack = function () {
        var a = Error(''),
          b = Ua.tryHaxeStack(a);
        if ('undefined' == typeof b) {
          try {
            throw a;
          } catch (c) {}
          b = a.stack;
        }
        return Ua.normalize(b, 2);
      };
      Ua.exceptionStack = function () {
        return Ua.normalize(Ua.tryHaxeStack(Ua.lastError));
      };
      Ua.toHaxe = function (a, b) {
        null == b && (b = 0);
        if (null == a) return [];
        if ('string' == typeof a) {
          a = a.split('\n');
          'Error' == a[0] && a.shift();
          for (var c = [], d = 0, f = a.length; d < f; ) {
            var g = d++;
            if (!(b > g)) {
              var k = a[g];
              g = k.match(
                /^    at ([$A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/,
              );
              if (null != g) {
                k = g[1].split('.');
                '$hxClasses' == k[0] && k.shift();
                var q = k.pop(),
                  p = g[2],
                  l = I.parseInt(g[3]);
                g = I.parseInt(g[4]);
                c.push(
                  Qd.FilePos(
                    'Anonymous function' == q
                      ? Qd.LocalFunction()
                      : 'Global code' == q
                        ? null
                        : Qd.Method(k.join('.'), q),
                    p,
                    l,
                    g,
                  ),
                );
              } else c.push(Qd.Module(P.trim(k)));
            }
          }
          return c;
        }
        return 0 < b && Array.isArray(a) ? a.slice(b) : a;
      };
      Ua.tryHaxeStack = function (a) {
        if (null == a) return [];
        var b = Error.prepareStackTrace;
        Error.prepareStackTrace = Ua.prepareHxStackTrace;
        a = a.stack;
        Error.prepareStackTrace = b;
        return a;
      };
      Ua.prepareHxStackTrace = function (a, b) {
        a = [];
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          null != Ua.wrapCallSite && (d = Ua.wrapCallSite(d));
          var f = null,
            g = d.getFunctionName();
          if (null != g) {
            var k = g.lastIndexOf('.');
            0 <= k
              ? ((f = g.substring(0, k)),
                (g = g.substring(k + 1)),
                (f = Qd.Method(f, g)))
              : (f = Qd.Method(null, g));
          }
          g = d.getFileName();
          k = null == g ? -1 : g.indexOf('file:');
          null != Ua.wrapCallSite && 0 < k && (g = g.substring(k + 6));
          a.push(Qd.FilePos(f, g, d.getLineNumber(), d.getColumnNumber()));
        }
        return a;
      };
      Ua.normalize = function (a, b) {
        null == b && (b = 0);
        if (Array.isArray(a) && 0 < b) return a.slice(b);
        if ('string' == typeof a) {
          switch (a.substring(0, 6)) {
            case 'Error\n':
            case 'Error:':
              ++b;
          }
          return Ua.skipLines(a, b);
        }
        return a;
      };
      Ua.skipLines = function (a, b, c) {
        null == c && (c = 0);
        return 0 < b
          ? ((c = a.indexOf('\n', c)), 0 > c ? '' : Ua.skipLines(a, --b, c + 1))
          : a.substring(c);
      };
      var zd = function () {
        this.buf = new G();
        this.cache = [];
        this.useCache = zd.USE_CACHE;
        this.useEnumIndex = zd.USE_ENUM_INDEX;
        this.shash = new Ja();
        this.scount = 0;
      };
      h['haxe.Serializer'] = zd;
      zd.__name__ = 'haxe.Serializer';
      zd.run = function (a) {
        var b = new zd();
        b.serialize(a);
        return b.toString();
      };
      zd.prototype = {
        toString: function () {
          return this.buf.b;
        },
        serializeString: function (a) {
          var b = this.shash.h[a];
          null != b
            ? ((this.buf.b += 'R'), (this.buf.b += null == b ? 'null' : '' + b))
            : ((this.shash.h[a] = this.scount++),
              (this.buf.b += 'y'),
              (a = encodeURIComponent(a)),
              (this.buf.b += I.string(a.length)),
              (this.buf.b += ':'),
              (this.buf.b += null == a ? 'null' : '' + a));
        },
        serializeRef: function (a) {
          for (var b = typeof a, c = 0, d = this.cache.length; c < d; ) {
            var f = c++,
              g = this.cache[f];
            if (typeof g == b && g == a)
              return (
                (this.buf.b += 'r'),
                (this.buf.b += null == f ? 'null' : '' + f),
                !0
              );
          }
          this.cache.push(a);
          return !1;
        },
        serializeFields: function (a) {
          for (var b = 0, c = ya.fields(a); b < c.length; ) {
            var d = c[b];
            ++b;
            this.serializeString(d);
            this.serialize(ya.field(a, d));
          }
          this.buf.b += 'g';
        },
        serialize: function (a) {
          var b = y.typeof(a);
          switch (b._hx_index) {
            case 0:
              this.buf.b += 'n';
              break;
            case 1:
              if (0 == a) {
                this.buf.b += 'z';
                break;
              }
              this.buf.b += 'i';
              this.buf.b += null == a ? 'null' : '' + a;
              break;
            case 2:
              isNaN(a)
                ? (this.buf.b += 'k')
                : isFinite(a)
                  ? ((this.buf.b += 'd'),
                    (this.buf.b += null == a ? 'null' : '' + a))
                  : (this.buf.b += 0 > a ? 'm' : 'p');
              break;
            case 3:
              this.buf.b += a ? 't' : 'f';
              break;
            case 4:
              xa.__instanceof(a, Dl)
                ? ((a = a.__name__),
                  (this.buf.b += 'A'),
                  this.serializeString(a))
                : xa.__instanceof(a, El)
                  ? ((this.buf.b += 'B'), this.serializeString(a.__ename__))
                  : (this.useCache && this.serializeRef(a)) ||
                    ((this.buf.b += 'o'), this.serializeFields(a));
              break;
            case 5:
              throw aa.thrown('Cannot serialize function');
            case 6:
              b = b.c;
              if (b == String) {
                this.serializeString(a);
                break;
              }
              if (this.useCache && this.serializeRef(a)) break;
              switch (b) {
                case Array:
                  var c = 0;
                  this.buf.b += 'a';
                  for (var d = 0, f = a.length; d < f; )
                    ((b = d++),
                      null == a[b]
                        ? ++c
                        : (0 < c &&
                            (1 == c
                              ? (this.buf.b += 'n')
                              : ((this.buf.b += 'u'),
                                (this.buf.b += null == c ? 'null' : '' + c)),
                            (c = 0)),
                          this.serialize(a[b])));
                  0 < c &&
                    (1 == c
                      ? (this.buf.b += 'n')
                      : ((this.buf.b += 'u'),
                        (this.buf.b += null == c ? 'null' : '' + c)));
                  this.buf.b += 'h';
                  break;
                case Date:
                  this.buf.b += 'v';
                  this.buf.b += I.string(a.getTime());
                  break;
                case tc:
                  this.buf.b += 'q';
                  for (b = a.keys(); b.hasNext(); )
                    ((c = b.next()),
                      (this.buf.b += ':'),
                      (this.buf.b += null == c ? 'null' : '' + c),
                      this.serialize(a.h[c]));
                  this.buf.b += 'h';
                  break;
                case Xa:
                  this.buf.b += 'l';
                  for (a = a.h; null != a; )
                    ((b = a.item), (a = a.next), this.serialize(b));
                  this.buf.b += 'h';
                  break;
                case va:
                  this.buf.b += 'M';
                  for (b = a.keys(); b.hasNext(); ) {
                    c = b.next();
                    var g = ya.field(c, '__id__');
                    ya.deleteField(c, '__id__');
                    this.serialize(c);
                    c.__id__ = g;
                    this.serialize(a.h[c.__id__]);
                  }
                  this.buf.b += 'h';
                  break;
                case Ja:
                  this.buf.b += 'b';
                  c = Object.keys(a.h);
                  g = c.length;
                  for (d = 0; d < g; )
                    ((b = c[d++]),
                      this.serializeString(b),
                      this.serialize(a.h[b]));
                  this.buf.b += 'h';
                  break;
                case xb:
                  this.buf.b += 's';
                  this.buf.b += I.string(Math.ceil((8 * a.length) / 6));
                  this.buf.b += ':';
                  b = 0;
                  c = a.length - 2;
                  g = zd.BASE64_CODES;
                  if (null == g) {
                    g = Array(zd.BASE64.length);
                    d = 0;
                    for (f = zd.BASE64.length; d < f; ) {
                      var k = d++;
                      g[k] = R.cca(zd.BASE64, k);
                    }
                    zd.BASE64_CODES = g;
                  }
                  for (; b < c; )
                    ((d = a.b[b++]),
                      (f = a.b[b++]),
                      (k = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(g[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        g[((d << 4) | (f >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(
                        g[((f << 2) | (k >> 6)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(g[k & 63])));
                  b == c
                    ? ((d = a.b[b++]),
                      (f = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(g[d >> 2])),
                      (this.buf.b += String.fromCodePoint(
                        g[((d << 4) | (f >> 4)) & 63],
                      )),
                      (this.buf.b += String.fromCodePoint(g[(f << 2) & 63])))
                    : b == c + 1 &&
                      ((d = a.b[b++]),
                      (this.buf.b += String.fromCodePoint(g[d >> 2])),
                      (this.buf.b += String.fromCodePoint(g[(d << 4) & 63])));
                  break;
                default:
                  (this.useCache && this.cache.pop(),
                    null != a.hxSerialize
                      ? ((this.buf.b += 'C'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        a.hxSerialize(this),
                        (this.buf.b += 'g'))
                      : ((this.buf.b += 'c'),
                        this.serializeString(b.__name__),
                        this.useCache && this.cache.push(a),
                        this.serializeFields(a)));
              }
              break;
            case 7:
              b = b.e;
              if (this.useCache) {
                if (this.serializeRef(a)) break;
                this.cache.pop();
              }
              this.buf.b += I.string(this.useEnumIndex ? 'j' : 'w');
              this.serializeString(b.__ename__);
              this.useEnumIndex
                ? ((this.buf.b += ':'), (this.buf.b += I.string(a._hx_index)))
                : ((b = a),
                  this.serializeString(
                    L[b.__enum__].__constructs__[b._hx_index]._hx_name,
                  ));
              this.buf.b += ':';
              c = y.enumParameters(a);
              this.buf.b += I.string(c.length);
              for (b = 0; b < c.length; ) ((g = c[b]), ++b, this.serialize(g));
              this.useCache && this.cache.push(a);
              break;
            default:
              throw aa.thrown('Cannot serialize ' + I.string(a));
          }
        },
        __class__: zd,
      };
      var cg = function (a) {
        var b = this;
        this.id = setInterval(function () {
          b.run();
        }, a);
      };
      h['haxe.Timer'] = cg;
      cg.__name__ = 'haxe.Timer';
      cg.delay = function (a, b) {
        var c = new cg(b);
        c.run = function () {
          c.stop();
          a();
        };
        return c;
      };
      cg.prototype = {
        stop: function () {
          null != this.id && (clearInterval(this.id), (this.id = null));
        },
        run: function () {},
        __class__: cg,
      };
      var Oi = function () {};
      h['haxe._Unserializer.DefaultResolver'] = Oi;
      Oi.__name__ = 'haxe._Unserializer.DefaultResolver';
      Oi.prototype = {
        resolveClass: function (a) {
          return h[a];
        },
        resolveEnum: function (a) {
          return L[a];
        },
        __class__: Oi,
      };
      var rd = function (a) {
        this.buf = a;
        this.length = this.buf.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = rd.DEFAULT_RESOLVER;
        null == a && ((a = new Oi()), (rd.DEFAULT_RESOLVER = a));
        this.resolver = a;
      };
      h['haxe.Unserializer'] = rd;
      rd.__name__ = 'haxe.Unserializer';
      rd.initCodes = function () {
        for (var a = [], b = 0, c = rd.BASE64.length; b < c; ) {
          var d = b++;
          a[rd.BASE64.charCodeAt(d)] = d;
        }
        return a;
      };
      rd.run = function (a) {
        return new rd(a).unserialize();
      };
      rd.prototype = {
        setResolver: function (a) {
          null == a
            ? (null == Eg.instance && (Eg.instance = new Eg()),
              (this.resolver = Eg.instance))
            : (this.resolver = a);
        },
        readDigits: function () {
          for (var a = 0, b = !1, c = this.pos; ; ) {
            var d = this.buf.charCodeAt(this.pos);
            if (d != d) break;
            if (45 == d) {
              if (this.pos != c) break;
              b = !0;
            } else {
              if (48 > d || 57 < d) break;
              a = 10 * a + (d - 48);
            }
            this.pos++;
          }
          b && (a *= -1);
          return a;
        },
        readFloat: function () {
          for (var a = this.pos; ; ) {
            var b = this.buf.charCodeAt(this.pos);
            if (b != b) break;
            if ((43 <= b && 58 > b) || 101 == b || 69 == b) this.pos++;
            else break;
          }
          return parseFloat(R.substr(this.buf, a, this.pos - a));
        },
        unserializeObject: function (a) {
          for (;;) {
            if (this.pos >= this.length) throw aa.thrown('Invalid object');
            if (103 == this.buf.charCodeAt(this.pos)) break;
            var b = this.unserialize();
            if ('string' != typeof b) throw aa.thrown('Invalid object key');
            var c = this.unserialize();
            a[b] = c;
          }
          this.pos++;
        },
        unserializeEnum: function (a, b) {
          if (58 != this.buf.charCodeAt(this.pos++))
            throw aa.thrown('Invalid enum format');
          var c = this.readDigits();
          if (0 == c) return y.createEnum(a, b);
          for (var d = []; 0 < c--; ) d.push(this.unserialize());
          return y.createEnum(a, b, d);
        },
        unserialize: function () {
          switch (this.buf.charCodeAt(this.pos++)) {
            case 65:
              var a = this.unserialize(),
                b = this.resolver.resolveClass(a);
              if (null == b) throw aa.thrown('Class not found ' + a);
              return b;
            case 66:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw aa.thrown('Enum not found ' + a);
              return b;
            case 67:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw aa.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              b.hxUnserialize(this);
              if (103 != this.buf.charCodeAt(this.pos++))
                throw aa.thrown('Invalid custom data');
              return b;
            case 77:
              a = new va();
              this.cache.push(a);
              for (var c; 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()), a.set(b, this.unserialize()));
              this.pos++;
              return a;
            case 82:
              a = this.readDigits();
              if (0 > a || a >= this.scache.length)
                throw aa.thrown('Invalid string reference');
              return this.scache[a];
            case 97:
              b = [];
              for (this.cache.push(b); ; ) {
                c = this.buf.charCodeAt(this.pos);
                if (104 == c) {
                  this.pos++;
                  break;
                }
                117 == c
                  ? (this.pos++,
                    (a = this.readDigits()),
                    (b[b.length + a - 1] = null))
                  : b.push(this.unserialize());
              }
              return b;
            case 98:
              a = new Ja();
              for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
                ((b = this.unserialize()),
                  (c = this.unserialize()),
                  (a.h[b] = c));
              this.pos++;
              return a;
            case 99:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw aa.thrown('Class not found ' + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              this.unserializeObject(b);
              return b;
            case 100:
              return this.readFloat();
            case 102:
              return !1;
            case 105:
              return this.readDigits();
            case 106:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw aa.thrown('Enum not found ' + a);
              this.pos++;
              for (
                var d = this.readDigits(),
                  f = c.__constructs__,
                  g = Array(f.length),
                  k = 0,
                  q = f.length;
                k < q;

              )
                ((b = k++), (g[b] = f[b]._hx_name));
              b = g[d];
              if (null == b)
                throw aa.thrown('Unknown enum index ' + a + '@' + d);
              b = this.unserializeEnum(c, b);
              this.cache.push(b);
              return b;
            case 107:
              return NaN;
            case 108:
              b = new Xa();
              for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos); )
                b.add(this.unserialize());
              this.pos++;
              return b;
            case 109:
              return -Infinity;
            case 110:
              return null;
            case 111:
              return (
                (b = {}),
                this.cache.push(b),
                this.unserializeObject(b),
                b
              );
            case 112:
              return Infinity;
            case 113:
              a = new tc();
              this.cache.push(a);
              for (c = this.buf.charCodeAt(this.pos++); 58 == c; )
                ((b = this.readDigits()),
                  (c = this.unserialize()),
                  (a.h[b] = c),
                  (c = this.buf.charCodeAt(this.pos++)));
              if (104 != c) throw aa.thrown('Invalid IntMap format');
              return a;
            case 114:
              a = this.readDigits();
              if (0 > a || a >= this.cache.length)
                throw aa.thrown('Invalid reference');
              return this.cache[a];
            case 115:
              a = this.readDigits();
              c = this.buf;
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw aa.thrown('Invalid bytes length');
              d = rd.CODES;
              null == d && ((d = rd.initCodes()), (rd.CODES = d));
              b = this.pos;
              f = a & 3;
              g = b + (a - f);
              k = new xb(new ArrayBuffer(3 * (a >> 2) + (2 <= f ? f - 1 : 0)));
              for (q = 0; b < g; ) {
                var p = d[c.charCodeAt(b++)],
                  l = d[c.charCodeAt(b++)];
                k.b[q++] = ((p << 2) | (l >> 4)) & 255;
                p = d[c.charCodeAt(b++)];
                k.b[q++] = ((l << 4) | (p >> 2)) & 255;
                l = d[c.charCodeAt(b++)];
                k.b[q++] = ((p << 6) | l) & 255;
              }
              2 <= f &&
                ((p = d[c.charCodeAt(b++)]),
                (l = d[c.charCodeAt(b++)]),
                (k.b[q++] = ((p << 2) | (l >> 4)) & 255),
                3 == f &&
                  ((p = d[c.charCodeAt(b++)]),
                  (k.b[q++] = ((l << 4) | (p >> 2)) & 255)));
              this.pos += a;
              this.cache.push(k);
              return k;
            case 116:
              return !0;
            case 118:
              return (
                48 <= this.buf.charCodeAt(this.pos) &&
                57 >= this.buf.charCodeAt(this.pos) &&
                48 <= this.buf.charCodeAt(this.pos + 1) &&
                57 >= this.buf.charCodeAt(this.pos + 1) &&
                48 <= this.buf.charCodeAt(this.pos + 2) &&
                57 >= this.buf.charCodeAt(this.pos + 2) &&
                48 <= this.buf.charCodeAt(this.pos + 3) &&
                57 >= this.buf.charCodeAt(this.pos + 3) &&
                45 == this.buf.charCodeAt(this.pos + 4)
                  ? ((b = R.strDate(R.substr(this.buf, this.pos, 19))),
                    (this.pos += 19))
                  : (b = new Date(this.readFloat())),
                this.cache.push(b),
                b
              );
            case 119:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw aa.thrown('Enum not found ' + a);
              b = this.unserializeEnum(c, this.unserialize());
              this.cache.push(b);
              return b;
            case 120:
              throw aa.thrown(this.unserialize());
            case 121:
              a = this.readDigits();
              if (
                58 != this.buf.charCodeAt(this.pos++) ||
                this.length - this.pos < a
              )
                throw aa.thrown('Invalid string length');
              b = R.substr(this.buf, this.pos, a);
              this.pos += a;
              b = decodeURIComponent(b.split('+').join(' '));
              this.scache.push(b);
              return b;
            case 122:
              return 0;
          }
          this.pos--;
          throw aa.thrown(
            'Invalid char ' +
              this.buf.charAt(this.pos) +
              ' at position ' +
              this.pos,
          );
        },
        __class__: rd,
      };
      var Eg = function () {};
      h['haxe._Unserializer.NullResolver'] = Eg;
      Eg.__name__ = 'haxe._Unserializer.NullResolver';
      Eg.prototype = {
        resolveClass: function (a) {
          return null;
        },
        resolveEnum: function (a) {
          return null;
        },
        __class__: Eg,
      };
      var wh = function (a, b, c) {
        aa.call(this, String(a), b, c);
        this.value = a;
        this.__skipStack++;
      };
      h['haxe.ValueException'] = wh;
      wh.__name__ = 'haxe.ValueException';
      wh.__super__ = aa;
      wh.prototype = u(aa.prototype, {
        unwrap: function () {
          return this.value;
        },
        __class__: wh,
      });
      var Fg = function () {
        this.a1 = 1;
        this.a2 = 0;
      };
      h['haxe.crypto.Adler32'] = Fg;
      Fg.__name__ = 'haxe.crypto.Adler32';
      Fg.read = function (a) {
        var b = new Fg(),
          c = a.readByte(),
          d = a.readByte(),
          f = a.readByte();
        a = a.readByte();
        b.a1 = (f << 8) | a;
        b.a2 = (c << 8) | d;
        return b;
      };
      Fg.prototype = {
        update: function (a, b, c) {
          var d = this.a1,
            f = this.a2,
            g = b;
          for (b += c; g < b; )
            ((c = g++), (d = (d + a.b[c]) % 65521), (f = (f + d) % 65521));
          this.a1 = d;
          this.a2 = f;
        },
        equals: function (a) {
          return a.a1 == this.a1 ? a.a2 == this.a2 : !1;
        },
        __class__: Fg,
      };
      var xb = function (a) {
        this.length = a.byteLength;
        this.b = new Uint8Array(a);
        this.b.bufferValue = a;
        a.hxBytes = this;
        a.bytes = this.b;
      };
      h['haxe.io.Bytes'] = xb;
      xb.__name__ = 'haxe.io.Bytes';
      xb.ofString = function (a, b) {
        b = [];
        for (var c = 0; c < a.length; ) {
          var d = a.charCodeAt(c++);
          55296 <= d &&
            56319 >= d &&
            (d = ((d - 55232) << 10) | (a.charCodeAt(c++) & 1023));
          127 >= d
            ? b.push(d)
            : (2047 >= d
                ? b.push(192 | (d >> 6))
                : (65535 >= d
                    ? b.push(224 | (d >> 12))
                    : (b.push(240 | (d >> 18)), b.push(128 | ((d >> 12) & 63))),
                  b.push(128 | ((d >> 6) & 63))),
              b.push(128 | (d & 63)));
        }
        return new xb(new Uint8Array(b).buffer);
      };
      xb.ofData = function (a) {
        var b = a.hxBytes;
        return null != b ? b : new xb(a);
      };
      xb.prototype = {
        blit: function (a, b, c, d) {
          if (
            0 > a ||
            0 > c ||
            0 > d ||
            a + d > this.length ||
            c + d > b.length
          )
            throw aa.thrown(Ad.OutsideBounds);
          0 == c && d == b.b.byteLength
            ? this.b.set(b.b, a)
            : this.b.set(b.b.subarray(c, c + d), a);
        },
        setUInt16: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setUint16(a, b, !0);
        },
        setInt32: function (a, b) {
          null == this.data &&
            (this.data = new DataView(
              this.b.buffer,
              this.b.byteOffset,
              this.b.byteLength,
            ));
          this.data.setInt32(a, b, !0);
        },
        getString: function (a, b, c) {
          if (0 > a || 0 > b || a + b > this.length)
            throw aa.thrown(Ad.OutsideBounds);
          c = '';
          var d = this.b,
            f = vb.fromCharCode,
            g = a;
          for (a += b; g < a; )
            if (((b = d[g++]), 128 > b)) {
              if (0 == b) break;
              c += f(b);
            } else if (224 > b) c += f(((b & 63) << 6) | (d[g++] & 127));
            else if (240 > b) {
              var k = d[g++];
              c += f(((b & 31) << 12) | ((k & 127) << 6) | (d[g++] & 127));
            } else {
              k = d[g++];
              var q = d[g++];
              b =
                ((b & 15) << 18) |
                ((k & 127) << 12) |
                ((q & 127) << 6) |
                (d[g++] & 127);
              c += f((b >> 10) + 55232);
              c += f((b & 1023) | 56320);
            }
          return c;
        },
        toString: function () {
          return this.getString(0, this.length);
        },
        __class__: xb,
      };
      var Lc = function () {};
      h['haxe.ds.ArraySort'] = Lc;
      Lc.__name__ = 'haxe.ds.ArraySort';
      Lc.sort = function (a, b) {
        Lc.rec(a, b, 0, a.length);
      };
      Lc.rec = function (a, b, c, d) {
        var f = (c + d) >> 1;
        if (12 > d - c) {
          if (!(d <= c))
            for (f = c + 1; f < d; )
              for (var g = f++; g > c; ) {
                if (0 > b(a[g], a[g - 1])) Lc.swap(a, g - 1, g);
                else break;
                --g;
              }
        } else
          (Lc.rec(a, b, c, f),
            Lc.rec(a, b, f, d),
            Lc.doMerge(a, b, c, f, d, f - c, d - f));
      };
      Lc.doMerge = function (a, b, c, d, f, g, k) {
        if (0 != g && 0 != k)
          if (2 == g + k) 0 > b(a[d], a[c]) && Lc.swap(a, d, c);
          else {
            if (g > k) {
              var q = g >> 1;
              var p = c + q;
              var l = Lc.lower(a, b, d, f, p);
              var h = l - d;
            } else
              ((h = k >> 1),
                (l = d + h),
                (p = Lc.upper(a, b, c, d, l)),
                (q = p - c));
            Lc.rotate(a, b, p, d, l);
            d = p + h;
            Lc.doMerge(a, b, c, p, d, q, h);
            Lc.doMerge(a, b, d, l, f, g - q, k - h);
          }
      };
      Lc.rotate = function (a, b, c, d, f) {
        if (c != d && d != f)
          for (b = Lc.gcd(f - c, d - c); 0 != b--; ) {
            for (
              var g = a[c + b], k = d - c, q = c + b, p = c + b + k;
              p != c + b;

            )
              ((a[q] = a[p]),
                (q = p),
                (p = f - p > k ? p + k : c + (k - (f - p))));
            a[q] = g;
          }
      };
      Lc.gcd = function (a, b) {
        for (; 0 != b; ) {
          var c = a % b;
          a = b;
          b = c;
        }
        return a;
      };
      Lc.upper = function (a, b, c, d, f) {
        d -= c;
        for (var g, k; 0 < d; )
          ((g = d >> 1),
            (k = c + g),
            0 > b(a[f], a[k]) ? (d = g) : ((c = k + 1), (d = d - g - 1)));
        return c;
      };
      Lc.lower = function (a, b, c, d, f) {
        d -= c;
        for (var g, k; 0 < d; )
          ((g = d >> 1),
            (k = c + g),
            0 > b(a[k], a[f]) ? ((c = k + 1), (d = d - g - 1)) : (d = g));
        return c;
      };
      Lc.swap = function (a, b, c) {
        var d = a[b];
        a[b] = a[c];
        a[c] = d;
      };
      var tc = function () {
        this.h = {};
      };
      h['haxe.ds.IntMap'] = tc;
      tc.__name__ = 'haxe.ds.IntMap';
      tc.__interfaces__ = [oa];
      tc.prototype = {
        set: function (a, b) {
          this.h[a] = b;
        },
        get: function (a) {
          return this.h[a];
        },
        remove: function (a) {
          if (!this.h.hasOwnProperty(a)) return !1;
          delete this.h[a];
          return !0;
        },
        keys: function () {
          var a = [],
            b;
          for (b in this.h) this.h.hasOwnProperty(b) && a.push(+b);
          return new Pf(a);
        },
        iterator: function () {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function () {
              return this.it.hasNext();
            },
            next: function () {
              var a = this.it.next();
              return this.ref[a];
            },
          };
        },
        __class__: tc,
      };
      var Qh = function (a, b) {
        this.item = a;
        this.next = b;
      };
      h['haxe.ds._List.ListNode'] = Qh;
      Qh.__name__ = 'haxe.ds._List.ListNode';
      Qh.prototype = { __class__: Qh };
      var ak = function (a) {
        this.head = a;
      };
      h['haxe.ds._List.ListIterator'] = ak;
      ak.__name__ = 'haxe.ds._List.ListIterator';
      ak.prototype = {
        hasNext: function () {
          return null != this.head;
        },
        next: function () {
          var a = this.head.item;
          this.head = this.head.next;
          return a;
        },
        __class__: ak,
      };
      var Ja = function () {
        this.h = Object.create(null);
      };
      h['haxe.ds.StringMap'] = Ja;
      Ja.__name__ = 'haxe.ds.StringMap';
      Ja.__interfaces__ = [oa];
      Ja.prototype = {
        get: function (a) {
          return this.h[a];
        },
        set: function (a, b) {
          this.h[a] = b;
        },
        remove: function (a) {
          return Object.prototype.hasOwnProperty.call(this.h, a)
            ? (delete this.h[a], !0)
            : !1;
        },
        keys: function () {
          return new Uh(this.h);
        },
        __class__: Ja,
      };
      var Uh = function (a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0;
      };
      h['haxe.ds._StringMap.StringMapKeyIterator'] = Uh;
      Uh.__name__ = 'haxe.ds._StringMap.StringMapKeyIterator';
      Uh.prototype = {
        hasNext: function () {
          return this.current < this.length;
        },
        next: function () {
          return this.keys[this.current++];
        },
        __class__: Uh,
      };
      var Gg = function (a, b, c) {
        aa.call(this, a, b);
        this.posInfos =
          null == c
            ? {
                fileName: '(unknown)',
                lineNumber: 0,
                className: '(unknown)',
                methodName: '(unknown)',
              }
            : c;
        this.__skipStack++;
      };
      h['haxe.exceptions.PosException'] = Gg;
      Gg.__name__ = 'haxe.exceptions.PosException';
      Gg.__super__ = aa;
      Gg.prototype = u(aa.prototype, {
        toString: function () {
          return (
            '' +
            aa.prototype.toString.call(this) +
            ' in ' +
            this.posInfos.className +
            '.' +
            this.posInfos.methodName +
            ' at ' +
            this.posInfos.fileName +
            ':' +
            this.posInfos.lineNumber
          );
        },
        __class__: Gg,
      });
      var Pi = function (a, b, c) {
        null == a && (a = 'Not implemented');
        Gg.call(this, a, b, c);
        this.__skipStack++;
      };
      h['haxe.exceptions.NotImplementedException'] = Pi;
      Pi.__name__ = 'haxe.exceptions.NotImplementedException';
      Pi.__super__ = Gg;
      Pi.prototype = u(Gg.prototype, { __class__: Pi });
      var Qi = function () {
        this.size = this.pos = 0;
      };
      h['haxe.io.BytesBuffer'] = Qi;
      Qi.__name__ = 'haxe.io.BytesBuffer';
      Qi.prototype = {
        addByte: function (a) {
          this.pos == this.size && this.grow(1);
          this.view.setUint8(this.pos++, a);
        },
        add: function (a) {
          this.pos + a.length > this.size && this.grow(a.length);
          if (0 != this.size) {
            var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
            this.u8.set(b, this.pos);
            this.pos += a.length;
          }
        },
        addBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw aa.thrown(Ad.OutsideBounds);
          this.pos + c > this.size && this.grow(c);
          0 != this.size &&
            ((a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, c)),
            this.u8.set(a, this.pos),
            (this.pos += c));
        },
        grow: function (a) {
          var b = this.pos + a;
          for (a = 0 == this.size ? 16 : this.size; a < b; ) a = (3 * a) >> 1;
          b = new ArrayBuffer(a);
          var c = new Uint8Array(b);
          0 < this.size && c.set(this.u8);
          this.size = a;
          this.buffer = b;
          this.u8 = c;
          this.view = new DataView(this.buffer);
        },
        getBytes: function () {
          if (0 == this.size) return new xb(new ArrayBuffer(0));
          var a = new xb(this.buffer);
          a.length = this.pos;
          return a;
        },
        __class__: Qi,
      };
      var Ri = function () {};
      h['haxe.io.Input'] = Ri;
      Ri.__name__ = 'haxe.io.Input';
      Ri.prototype = {
        readByte: function () {
          throw new Pi(null, null, {
            fileName: 'haxe/io/Input.hx',
            lineNumber: 53,
            className: 'haxe.io.Input',
            methodName: 'readByte',
          });
        },
        readBytes: function (a, b, c) {
          var d = c,
            f = a.b;
          if (0 > b || 0 > c || b + c > a.length)
            throw aa.thrown(Ad.OutsideBounds);
          try {
            for (; 0 < d; ) ((f[b] = this.readByte()), ++b, --d);
          } catch (g) {
            if (((Ua.lastError = g), !(aa.caught(g).unwrap() instanceof xh)))
              throw g;
          }
          return c - d;
        },
        readFullBytes: function (a, b, c) {
          for (; 0 < c; ) {
            var d = this.readBytes(a, b, c);
            if (0 == d) throw aa.thrown(Ad.Blocked);
            b += d;
            c -= d;
          }
        },
        read: function (a) {
          for (var b = new xb(new ArrayBuffer(a)), c = 0; 0 < a; ) {
            var d = this.readBytes(b, c, a);
            if (0 == d) throw aa.thrown(Ad.Blocked);
            c += d;
            a -= d;
          }
          return b;
        },
        readInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          a = this.bigEndian ? b | (a << 8) : a | (b << 8);
          return 0 != (a & 32768) ? a - 65536 : a;
        },
        readUInt16: function () {
          var a = this.readByte(),
            b = this.readByte();
          return this.bigEndian ? b | (a << 8) : a | (b << 8);
        },
        readInt32: function () {
          var a = this.readByte(),
            b = this.readByte(),
            c = this.readByte(),
            d = this.readByte();
          return this.bigEndian
            ? d | (c << 8) | (b << 16) | (a << 24)
            : a | (b << 8) | (c << 16) | (d << 24);
        },
        readString: function (a, b) {
          var c = new xb(new ArrayBuffer(a));
          this.readFullBytes(c, 0, a);
          return c.getString(0, a, b);
        },
        __class__: Ri,
      };
      var Si = function (a, b, c) {
        null == b && (b = 0);
        null == c && (c = a.length - b);
        if (0 > b || 0 > c || b + c > a.length)
          throw aa.thrown(Ad.OutsideBounds);
        this.b = a.b;
        this.pos = b;
        this.totlen = this.len = c;
      };
      h['haxe.io.BytesInput'] = Si;
      Si.__name__ = 'haxe.io.BytesInput';
      Si.__super__ = Ri;
      Si.prototype = u(Ri.prototype, {
        readByte: function () {
          if (0 == this.len) throw aa.thrown(new xh());
          this.len--;
          return this.b[this.pos++];
        },
        readBytes: function (a, b, c) {
          if (0 > b || 0 > c || b + c > a.length)
            throw aa.thrown(Ad.OutsideBounds);
          if (0 == this.len && 0 < c) throw aa.thrown(new xh());
          this.len < c && (c = this.len);
          var d = this.b;
          a = a.b;
          for (var f = 0, g = c; f < g; ) {
            var k = f++;
            a[b + k] = d[this.pos + k];
          }
          this.pos += c;
          this.len -= c;
          return c;
        },
        __class__: Si,
      });
      var Ti = (L['haxe.io.Encoding'] = {
        __ename__: 'haxe.io.Encoding',
        __constructs__: null,
        UTF8: {
          _hx_name: 'UTF8',
          _hx_index: 0,
          __enum__: 'haxe.io.Encoding',
          toString: r,
        },
        RawNative: {
          _hx_name: 'RawNative',
          _hx_index: 1,
          __enum__: 'haxe.io.Encoding',
          toString: r,
        },
      });
      Ti.__constructs__ = [Ti.UTF8, Ti.RawNative];
      Ti.__empty_constructs__ = [Ti.UTF8, Ti.RawNative];
      var xh = function () {};
      h['haxe.io.Eof'] = xh;
      xh.__name__ = 'haxe.io.Eof';
      xh.prototype = {
        toString: function () {
          return 'Eof';
        },
        __class__: xh,
      };
      var Ad = (L['haxe.io.Error'] = {
        __ename__: 'haxe.io.Error',
        __constructs__: null,
        Blocked: {
          _hx_name: 'Blocked',
          _hx_index: 0,
          __enum__: 'haxe.io.Error',
          toString: r,
        },
        Overflow: {
          _hx_name: 'Overflow',
          _hx_index: 1,
          __enum__: 'haxe.io.Error',
          toString: r,
        },
        OutsideBounds: {
          _hx_name: 'OutsideBounds',
          _hx_index: 2,
          __enum__: 'haxe.io.Error',
          toString: r,
        },
        Custom:
          ((E = function (a) {
            return {
              _hx_index: 3,
              e: a,
              __enum__: 'haxe.io.Error',
              toString: r,
            };
          }),
          (E._hx_name = 'Custom'),
          (E.__params__ = ['e']),
          E),
      });
      Ad.__constructs__ = [
        Ad.Blocked,
        Ad.Overflow,
        Ad.OutsideBounds,
        Ad.Custom,
      ];
      Ad.__empty_constructs__ = [Ad.Blocked, Ad.Overflow, Ad.OutsideBounds];
      var Pl = {
          fromBytes: function (a, b, c) {
            null == b && (b = 0);
            null == c && (c = (a.length - b) >> 2);
            return new Float32Array(a.b.bufferValue, b, c);
          },
        },
        Rd = function (a) {
          switch (a) {
            case '.':
            case '..':
              this.dir = a;
              this.file = '';
              return;
          }
          var b = a.lastIndexOf('/'),
            c = a.lastIndexOf('\\');
          b < c
            ? ((this.dir = R.substr(a, 0, c)),
              (a = R.substr(a, c + 1, null)),
              (this.backslash = !0))
            : c < b
              ? ((this.dir = R.substr(a, 0, b)), (a = R.substr(a, b + 1, null)))
              : (this.dir = null);
          b = a.lastIndexOf('.');
          -1 != b
            ? ((this.ext = R.substr(a, b + 1, null)),
              (this.file = R.substr(a, 0, b)))
            : ((this.ext = null), (this.file = a));
        };
      h['haxe.io.Path'] = Rd;
      Rd.__name__ = 'haxe.io.Path';
      Rd.withoutDirectory = function (a) {
        a = new Rd(a);
        a.dir = null;
        return a.toString();
      };
      Rd.directory = function (a) {
        a = new Rd(a);
        return null == a.dir ? '' : a.dir;
      };
      Rd.extension = function (a) {
        a = new Rd(a);
        return null == a.ext ? '' : a.ext;
      };
      Rd.prototype = {
        toString: function () {
          return (
            (null == this.dir ? '' : this.dir + (this.backslash ? '\\' : '/')) +
            this.file +
            (null == this.ext ? '' : '.' + this.ext)
          );
        },
        __class__: Rd,
      };
      var Pf = function (a) {
        this.current = 0;
        this.array = a;
      };
      h['haxe.iterators.ArrayIterator'] = Pf;
      Pf.__name__ = 'haxe.iterators.ArrayIterator';
      Pf.prototype = {
        hasNext: function () {
          return this.current < this.array.length;
        },
        next: function () {
          return this.array[this.current++];
        },
        __class__: Pf,
      };
      var Mc = function (a, b, c) {
        this.xml = b;
        this.message = a;
        this.position = c;
        this.lineNumber = 1;
        for (a = this.positionAtLine = 0; a < c; ) {
          var d = a++;
          d = b.charCodeAt(d);
          10 == d
            ? (this.lineNumber++, (this.positionAtLine = 0))
            : 13 != d && this.positionAtLine++;
        }
      };
      h['haxe.xml.XmlParserException'] = Mc;
      Mc.__name__ = 'haxe.xml.XmlParserException';
      Mc.prototype = {
        toString: function () {
          return (
            xa.getClass(this).__name__ +
            ': ' +
            this.message +
            ' at line ' +
            this.lineNumber +
            ' char ' +
            this.positionAtLine
          );
        },
        __class__: Mc,
      };
      var pf = function () {};
      h['haxe.xml.Parser'] = pf;
      pf.__name__ = 'haxe.xml.Parser';
      pf.parse = function (a, b) {
        null == b && (b = !1);
        var c = ia.createDocument();
        pf.doParse(a, b, 0, c);
        return c;
      };
      pf.doParse = function (a, b, c, d) {
        null == c && (c = 0);
        for (
          var f = null,
            g = 1,
            k = 1,
            q = null,
            p = 0,
            l = 0,
            h = 0,
            n = new G(),
            t = 1,
            w = -1;
          c < a.length;

        ) {
          var r = a.charCodeAt(c);
          switch (g) {
            case 0:
              switch (r) {
                case 9:
                case 10:
                case 13:
                case 32:
                  break;
                default:
                  g = k;
                  continue;
              }
              break;
            case 1:
              if (60 == r) ((g = 0), (k = 2));
              else {
                p = c;
                g = 13;
                continue;
              }
              break;
            case 2:
              switch (r) {
                case 33:
                  if (91 == a.charCodeAt(c + 1)) {
                    c += 2;
                    if ('CDATA[' != R.substr(a, c, 6).toUpperCase())
                      throw aa.thrown(new Mc('Expected <![CDATA[', a, c));
                    c += 5;
                    g = 17;
                  } else if (
                    68 == a.charCodeAt(c + 1) ||
                    100 == a.charCodeAt(c + 1)
                  ) {
                    if ('OCTYPE' != R.substr(a, c + 2, 6).toUpperCase())
                      throw aa.thrown(new Mc('Expected <!DOCTYPE', a, c));
                    c += 8;
                    g = 16;
                  } else {
                    if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2))
                      throw aa.thrown(new Mc('Expected \x3c!--', a, c));
                    c += 2;
                    g = 15;
                  }
                  p = c + 1;
                  break;
                case 47:
                  if (null == d)
                    throw aa.thrown(new Mc('Expected node name', a, c));
                  p = c + 1;
                  g = 0;
                  k = 10;
                  break;
                case 63:
                  g = 14;
                  p = c;
                  break;
                default:
                  g = 3;
                  p = c;
                  continue;
              }
              break;
            case 3:
              if (
                !(
                  (97 <= r && 122 >= r) ||
                  (65 <= r && 90 >= r) ||
                  (48 <= r && 57 >= r) ||
                  58 == r ||
                  46 == r ||
                  95 == r ||
                  45 == r
                )
              ) {
                if (c == p) throw aa.thrown(new Mc('Expected node name', a, c));
                f = ia.createElement(R.substr(a, p, c - p));
                d.addChild(f);
                ++l;
                g = 0;
                k = 4;
                continue;
              }
              break;
            case 4:
              switch (r) {
                case 47:
                  g = 11;
                  break;
                case 62:
                  g = 9;
                  break;
                default:
                  g = 5;
                  p = c;
                  continue;
              }
              break;
            case 5:
              if (
                !(
                  (97 <= r && 122 >= r) ||
                  (65 <= r && 90 >= r) ||
                  (48 <= r && 57 >= r) ||
                  58 == r ||
                  46 == r ||
                  95 == r ||
                  45 == r
                )
              ) {
                if (p == c)
                  throw aa.thrown(new Mc('Expected attribute name', a, c));
                q = R.substr(a, p, c - p);
                if (f.exists(q))
                  throw aa.thrown(
                    new Mc('Duplicate attribute [' + q + ']', a, c),
                  );
                g = 0;
                k = 6;
                continue;
              }
              break;
            case 6:
              if (61 == r) ((g = 0), (k = 7));
              else throw aa.thrown(new Mc('Expected =', a, c));
              break;
            case 7:
              switch (r) {
                case 34:
                case 39:
                  n = new G();
                  g = 8;
                  p = c + 1;
                  w = r;
                  break;
                default:
                  throw aa.thrown(new Mc('Expected "', a, c));
              }
              break;
            case 8:
              switch (r) {
                case 38:
                  t = c - p;
                  n.b += null == t ? R.substr(a, p, null) : R.substr(a, p, t);
                  g = 18;
                  t = 8;
                  p = c + 1;
                  break;
                case 60:
                case 62:
                  if (b)
                    throw aa.thrown(
                      new Mc(
                        'Invalid unescaped ' +
                          String.fromCodePoint(r) +
                          ' in attribute value',
                        a,
                        c,
                      ),
                    );
                  r == w &&
                    ((k = c - p),
                    (n.b +=
                      null == k ? R.substr(a, p, null) : R.substr(a, p, k)),
                    (k = n.b),
                    (n = new G()),
                    f.set(q, k),
                    (g = 0),
                    (k = 4));
                  break;
                default:
                  r == w &&
                    ((k = c - p),
                    (n.b +=
                      null == k ? R.substr(a, p, null) : R.substr(a, p, k)),
                    (k = n.b),
                    (n = new G()),
                    f.set(q, k),
                    (g = 0),
                    (k = 4));
              }
              break;
            case 9:
              p = c = pf.doParse(a, b, c, f);
              g = 1;
              break;
            case 10:
              if (
                !(
                  (97 <= r && 122 >= r) ||
                  (65 <= r && 90 >= r) ||
                  (48 <= r && 57 >= r) ||
                  58 == r ||
                  46 == r ||
                  95 == r ||
                  45 == r
                )
              ) {
                if (p == c) throw aa.thrown(new Mc('Expected node name', a, c));
                k = R.substr(a, p, c - p);
                if (null == d || 0 != d.nodeType)
                  throw aa.thrown(
                    new Mc('Unexpected </' + k + '>, tag is not open', a, c),
                  );
                if (d.nodeType != ia.Element)
                  throw aa.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == d.nodeType ? 'null' : hb.toString(d.nodeType)),
                  );
                if (k != d.nodeName) {
                  if (d.nodeType != ia.Element)
                    throw aa.thrown(
                      'Bad node type, expected Element but found ' +
                        (null == d.nodeType ? 'null' : hb.toString(d.nodeType)),
                    );
                  throw aa.thrown(
                    new Mc('Expected </' + d.nodeName + '>', a, c),
                  );
                }
                g = 0;
                k = 12;
                continue;
              }
              break;
            case 11:
              if (62 == r) g = 1;
              else throw aa.thrown(new Mc('Expected >', a, c));
              break;
            case 12:
              if (62 == r)
                return (0 == l && d.addChild(ia.createPCData('')), c);
              throw aa.thrown(new Mc('Expected >', a, c));
            case 13:
              60 == r
                ? ((k = c - p),
                  (n.b += null == k ? R.substr(a, p, null) : R.substr(a, p, k)),
                  (k = ia.createPCData(n.b)),
                  (n = new G()),
                  d.addChild(k),
                  ++l,
                  (g = 0),
                  (k = 2))
                : 38 == r &&
                  ((t = c - p),
                  (n.b += null == t ? R.substr(a, p, null) : R.substr(a, p, t)),
                  (g = 18),
                  (t = 13),
                  (p = c + 1));
              break;
            case 14:
              63 == r &&
                62 == a.charCodeAt(c + 1) &&
                (++c,
                (g = R.substr(a, p + 1, c - p - 2)),
                d.addChild(ia.createProcessingInstruction(g)),
                ++l,
                (g = 1));
              break;
            case 15:
              45 == r &&
                45 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                (d.addChild(ia.createComment(R.substr(a, p, c - p))),
                ++l,
                (c += 2),
                (g = 1));
              break;
            case 16:
              91 == r
                ? ++h
                : 93 == r
                  ? --h
                  : 62 == r &&
                    0 == h &&
                    (d.addChild(ia.createDocType(R.substr(a, p, c - p))),
                    ++l,
                    (g = 1));
              break;
            case 17:
              93 == r &&
                93 == a.charCodeAt(c + 1) &&
                62 == a.charCodeAt(c + 2) &&
                ((g = ia.createCData(R.substr(a, p, c - p))),
                d.addChild(g),
                ++l,
                (c += 2),
                (g = 1));
              break;
            case 18:
              if (59 == r) {
                p = R.substr(a, p, c - p);
                if (35 == p.charCodeAt(0))
                  ((p =
                    120 == p.charCodeAt(1)
                      ? I.parseInt('0' + R.substr(p, 1, p.length - 1))
                      : I.parseInt(R.substr(p, 1, p.length - 1))),
                    (n.b += String.fromCodePoint(p)));
                else if (Object.prototype.hasOwnProperty.call(pf.escapes.h, p))
                  n.b += I.string(pf.escapes.h[p]);
                else {
                  if (b)
                    throw aa.thrown(new Mc('Undefined entity: ' + p, a, c));
                  n.b += I.string('&' + p + ';');
                }
                p = c + 1;
                g = t;
              } else if (
                !(
                  (97 <= r && 122 >= r) ||
                  (65 <= r && 90 >= r) ||
                  (48 <= r && 57 >= r) ||
                  58 == r ||
                  46 == r ||
                  95 == r ||
                  45 == r
                ) &&
                35 != r
              ) {
                if (b)
                  throw aa.thrown(
                    new Mc(
                      'Invalid character in entity: ' + String.fromCodePoint(r),
                      a,
                      c,
                    ),
                  );
                n.b += String.fromCodePoint(38);
                g = c - p;
                n.b += null == g ? R.substr(a, p, null) : R.substr(a, p, g);
                --c;
                p = c + 1;
                g = t;
              }
          }
          ++c;
        }
        1 == g && ((p = c), (g = 13));
        if (13 == g) {
          if (0 == d.nodeType) {
            if (d.nodeType != ia.Element)
              throw aa.thrown(
                'Bad node type, expected Element but found ' +
                  (null == d.nodeType ? 'null' : hb.toString(d.nodeType)),
              );
            throw aa.thrown(new Mc('Unclosed node <' + d.nodeName + '>', a, c));
          }
          if (c != p || 0 == l)
            ((t = c - p),
              (n.b += null == t ? R.substr(a, p, null) : R.substr(a, p, t)),
              d.addChild(ia.createPCData(n.b)));
          return c;
        }
        if (!b && 18 == g && 13 == t)
          return (
            (n.b += String.fromCodePoint(38)),
            (t = c - p),
            (n.b += null == t ? R.substr(a, p, null) : R.substr(a, p, t)),
            d.addChild(ia.createPCData(n.b)),
            c
          );
        throw aa.thrown(new Mc('Unexpected end', a, c));
      };
      var Vf = function (a) {
        this.output = new G();
        this.pretty = a;
      };
      h['haxe.xml.Printer'] = Vf;
      Vf.__name__ = 'haxe.xml.Printer';
      Vf.print = function (a, b) {
        null == b && (b = !1);
        b = new Vf(b);
        b.writeNode(a, '');
        return b.output.b;
      };
      Vf.prototype = {
        writeNode: function (a, b) {
          switch (a.nodeType) {
            case 0:
              this.output.b += I.string(b + '<');
              if (a.nodeType != ia.Element)
                throw aa.thrown(
                  'Bad node type, expected Element but found ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              this.output.b += I.string(a.nodeName);
              for (var c = a.attributes(); c.hasNext(); ) {
                var d = c.next();
                this.output.b += I.string(' ' + d + '="');
                d = P.htmlEscape(a.get(d), !0);
                this.output.b += I.string(d);
                this.output.b += '"';
              }
              if (this.hasChildren(a)) {
                this.output.b += '>';
                this.pretty && (this.output.b += '\n');
                if (a.nodeType != ia.Document && a.nodeType != ia.Element)
                  throw aa.thrown(
                    'Bad node type, expected Element or Document but found ' +
                      (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                  );
                c = 0;
                for (d = a.children; c < d.length; ) {
                  var f = d[c++];
                  this.writeNode(f, this.pretty ? b + '\t' : b);
                }
                this.output.b += I.string(b + '</');
                if (a.nodeType != ia.Element)
                  throw aa.thrown(
                    'Bad node type, expected Element but found ' +
                      (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                  );
                this.output.b += I.string(a.nodeName);
                this.output.b += '>';
              } else this.output.b += '/>';
              this.pretty && (this.output.b += '\n');
              break;
            case 1:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element)
                throw aa.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              a = a.nodeValue;
              0 != a.length &&
                ((d = b + P.htmlEscape(a)),
                (this.output.b += I.string(d)),
                this.pretty && (this.output.b += '\n'));
              break;
            case 2:
              this.output.b += I.string(b + '<![CDATA[');
              if (a.nodeType == ia.Document || a.nodeType == ia.Element)
                throw aa.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              this.output.b += I.string(a.nodeValue);
              this.output.b += ']]\x3e';
              this.pretty && (this.output.b += '\n');
              break;
            case 3:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element)
                throw aa.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              a = a.nodeValue;
              a = a.replace(/[\n\r\t]+/g, '');
              this.output.b += null == b ? 'null' : '' + b;
              d = P.trim('\x3c!--' + a + '--\x3e');
              this.output.b += I.string(d);
              this.pretty && (this.output.b += '\n');
              break;
            case 4:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element)
                throw aa.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              this.output.b += I.string('<!DOCTYPE ' + a.nodeValue + '>');
              this.pretty && (this.output.b += '\n');
              break;
            case 5:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element)
                throw aa.thrown(
                  'Bad node type, unexpected ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              this.output.b += I.string('<?' + a.nodeValue + '?>');
              this.pretty && (this.output.b += '\n');
              break;
            case 6:
              if (a.nodeType != ia.Document && a.nodeType != ia.Element)
                throw aa.thrown(
                  'Bad node type, expected Element or Document but found ' +
                    (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
                );
              c = 0;
              for (d = a.children; c < d.length; )
                ((f = d[c++]), this.writeNode(f, b));
          }
        },
        hasChildren: function (a) {
          if (a.nodeType != ia.Document && a.nodeType != ia.Element)
            throw aa.thrown(
              'Bad node type, expected Element or Document but found ' +
                (null == a.nodeType ? 'null' : hb.toString(a.nodeType)),
            );
          var b = 0;
          for (a = a.children; b < a.length; ) {
            var c = a[b++];
            switch (c.nodeType) {
              case 0:
              case 1:
                return !0;
              case 2:
              case 3:
                if (c.nodeType == ia.Document || c.nodeType == ia.Element)
                  throw aa.thrown(
                    'Bad node type, unexpected ' +
                      (null == c.nodeType ? 'null' : hb.toString(c.nodeType)),
                  );
                if (0 != P.ltrim(c.nodeValue).length) return !0;
            }
          }
          return !1;
        },
        __class__: Vf,
      };
      var Ff = (L['haxe.zip.ExtraField'] = {
        __ename__: 'haxe.zip.ExtraField',
        __constructs__: null,
        FUnknown:
          ((E = function (a, b) {
            return {
              _hx_index: 0,
              tag: a,
              bytes: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: r,
            };
          }),
          (E._hx_name = 'FUnknown'),
          (E.__params__ = ['tag', 'bytes']),
          E),
        FInfoZipUnicodePath:
          ((E = function (a, b) {
            return {
              _hx_index: 1,
              name: a,
              crc: b,
              __enum__: 'haxe.zip.ExtraField',
              toString: r,
            };
          }),
          (E._hx_name = 'FInfoZipUnicodePath'),
          (E.__params__ = ['name', 'crc']),
          E),
        FUtf8: {
          _hx_name: 'FUtf8',
          _hx_index: 2,
          __enum__: 'haxe.zip.ExtraField',
          toString: r,
        },
      });
      Ff.__constructs__ = [Ff.FUnknown, Ff.FInfoZipUnicodePath, Ff.FUtf8];
      Ff.__empty_constructs__ = [Ff.FUtf8];
      var ee = (L['haxe.zip.Huffman'] = {
        __ename__: 'haxe.zip.Huffman',
        __constructs__: null,
        Found:
          ((E = function (a) {
            return {
              _hx_index: 0,
              i: a,
              __enum__: 'haxe.zip.Huffman',
              toString: r,
            };
          }),
          (E._hx_name = 'Found'),
          (E.__params__ = ['i']),
          E),
        NeedBit:
          ((E = function (a, b) {
            return {
              _hx_index: 1,
              left: a,
              right: b,
              __enum__: 'haxe.zip.Huffman',
              toString: r,
            };
          }),
          (E._hx_name = 'NeedBit'),
          (E.__params__ = ['left', 'right']),
          E),
        NeedBits:
          ((E = function (a, b) {
            return {
              _hx_index: 2,
              n: a,
              table: b,
              __enum__: 'haxe.zip.Huffman',
              toString: r,
            };
          }),
          (E._hx_name = 'NeedBits'),
          (E.__params__ = ['n', 'table']),
          E),
      });
      ee.__constructs__ = [ee.Found, ee.NeedBit, ee.NeedBits];
      ee.__empty_constructs__ = [];
      var sk = function () {};
      h['haxe.zip.HuffTools'] = sk;
      sk.__name__ = 'haxe.zip.HuffTools';
      sk.prototype = {
        treeDepth: function (a) {
          switch (a._hx_index) {
            case 0:
              return 0;
            case 1:
              var b = a.right;
              a = this.treeDepth(a.left);
              b = this.treeDepth(b);
              return 1 + (a < b ? a : b);
            case 2:
              throw aa.thrown('assert');
          }
        },
        treeCompress: function (a) {
          var b = this.treeDepth(a);
          if (0 == b) return a;
          if (1 == b) {
            if (1 == a._hx_index)
              return (
                (b = a.right),
                ee.NeedBit(this.treeCompress(a.left), this.treeCompress(b))
              );
            throw aa.thrown('assert');
          }
          for (var c = [], d = 0, f = 1 << b; d < f; )
            (d++, c.push(ee.Found(-1)));
          this.treeWalk(c, 0, 0, b, a);
          return ee.NeedBits(b, c);
        },
        treeWalk: function (a, b, c, d, f) {
          if (1 == f._hx_index) {
            var g = f.left,
              k = f.right;
            0 < d
              ? (this.treeWalk(a, b, c + 1, d - 1, g),
                this.treeWalk(a, b | (1 << c), c + 1, d - 1, k))
              : (a[b] = this.treeCompress(f));
          } else a[b] = this.treeCompress(f);
        },
        treeMake: function (a, b, c, d) {
          if (d > b) throw aa.thrown('Invalid huffman');
          var f = (c << 5) | d;
          if (a.h.hasOwnProperty(f)) return ee.Found(a.h[f]);
          c <<= 1;
          ++d;
          return ee.NeedBit(
            this.treeMake(a, b, c, d),
            this.treeMake(a, b, c | 1, d),
          );
        },
        make: function (a, b, c, d) {
          if (1 == c) return ee.NeedBit(ee.Found(0), ee.Found(0));
          var f = [],
            g = [];
          if (32 < d) throw aa.thrown('Invalid huffman');
          for (var k = 0, q = d; k < q; ) (k++, f.push(0), g.push(0));
          k = 0;
          for (q = c; k < q; ) {
            var p = k++;
            p = a[p + b];
            if (p >= d) throw aa.thrown('Invalid huffman');
            f[p]++;
          }
          var l = 0;
          k = 1;
          for (q = d - 1; k < q; )
            ((p = k++), (l = (l + f[p]) << 1), (g[p] = l));
          f = new tc();
          k = 0;
          for (q = c; k < q; )
            ((p = k++),
              (c = a[p + b]),
              0 != c &&
                ((l = g[c - 1]), (g[c - 1] = l + 1), (f.h[(l << 5) | c] = p)));
          return this.treeCompress(
            ee.NeedBit(this.treeMake(f, d, 0, 1), this.treeMake(f, d, 1, 1)),
          );
        },
        __class__: sk,
      };
      var tk = function (a) {
        this.buffer = new xb(new ArrayBuffer(65536));
        this.pos = 0;
        a && (this.crc = new Fg());
      };
      h['haxe.zip._InflateImpl.Window'] = tk;
      tk.__name__ = 'haxe.zip._InflateImpl.Window';
      tk.prototype = {
        slide: function () {
          null != this.crc && this.crc.update(this.buffer, 0, 32768);
          var a = new xb(new ArrayBuffer(65536));
          this.pos -= 32768;
          a.blit(0, this.buffer, 32768, this.pos);
          this.buffer = a;
        },
        addBytes: function (a, b, c) {
          65536 < this.pos + c && this.slide();
          this.buffer.blit(this.pos, a, b, c);
          this.pos += c;
        },
        addByte: function (a) {
          65536 == this.pos && this.slide();
          this.buffer.b[this.pos] = a & 255;
          this.pos++;
        },
        getLastChar: function () {
          return this.buffer.b[this.pos - 1];
        },
        available: function () {
          return this.pos;
        },
        checksum: function () {
          null != this.crc && this.crc.update(this.buffer, 0, this.pos);
          return this.crc;
        },
        __class__: tk,
      };
      var Pb = (L['haxe.zip._InflateImpl.State'] = {
        __ename__: 'haxe.zip._InflateImpl.State',
        __constructs__: null,
        Head: {
          _hx_name: 'Head',
          _hx_index: 0,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Block: {
          _hx_name: 'Block',
          _hx_index: 1,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        CData: {
          _hx_name: 'CData',
          _hx_index: 2,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Flat: {
          _hx_name: 'Flat',
          _hx_index: 3,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Crc: {
          _hx_name: 'Crc',
          _hx_index: 4,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Dist: {
          _hx_name: 'Dist',
          _hx_index: 5,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        DistOne: {
          _hx_name: 'DistOne',
          _hx_index: 6,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
        Done: {
          _hx_name: 'Done',
          _hx_index: 7,
          __enum__: 'haxe.zip._InflateImpl.State',
          toString: r,
        },
      });
      Pb.__constructs__ = [
        Pb.Head,
        Pb.Block,
        Pb.CData,
        Pb.Flat,
        Pb.Crc,
        Pb.Dist,
        Pb.DistOne,
        Pb.Done,
      ];
      Pb.__empty_constructs__ = [
        Pb.Head,
        Pb.Block,
        Pb.CData,
        Pb.Flat,
        Pb.Crc,
        Pb.Dist,
        Pb.DistOne,
        Pb.Done,
      ];
      var gd = function (a, b, c) {
        null == c && (c = !0);
        null == b && (b = !0);
        this.isFinal = !1;
        this.htools = new sk();
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.dist = this.len = 0;
        this.state = b ? Pb.Head : Pb.Block;
        this.input = a;
        this.needed = this.nbits = this.bits = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.window = new tk(c);
      };
      h['haxe.zip.InflateImpl'] = gd;
      gd.__name__ = 'haxe.zip.InflateImpl';
      gd.prototype = {
        buildFixedHuffman: function () {
          if (null != gd.FIXED_HUFFMAN) return gd.FIXED_HUFFMAN;
          for (var a = [], b = 0; 288 > b; ) {
            var c = b++;
            a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8);
          }
          gd.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
          return gd.FIXED_HUFFMAN;
        },
        readBytes: function (a, b, c) {
          this.needed = c;
          this.outpos = b;
          this.output = a;
          if (0 < c) for (; this.inflateLoop(); );
          return c - this.needed;
        },
        getBits: function (a) {
          for (; this.nbits < a; )
            ((this.bits |= this.input.readByte() << this.nbits),
              (this.nbits += 8));
          var b = this.bits & ((1 << a) - 1);
          this.nbits -= a;
          this.bits >>= a;
          return b;
        },
        getBit: function () {
          0 == this.nbits &&
            ((this.nbits = 8), (this.bits = this.input.readByte()));
          var a = 1 == (this.bits & 1);
          this.nbits--;
          this.bits >>= 1;
          return a;
        },
        getRevBits: function (a) {
          return 0 == a
            ? 0
            : this.getBit()
              ? (1 << (a - 1)) | this.getRevBits(a - 1)
              : this.getRevBits(a - 1);
        },
        resetBits: function () {
          this.nbits = this.bits = 0;
        },
        addBytes: function (a, b, c) {
          this.window.addBytes(a, b, c);
          this.output.blit(this.outpos, a, b, c);
          this.needed -= c;
          this.outpos += c;
        },
        addByte: function (a) {
          this.window.addByte(a);
          this.output.b[this.outpos] = a & 255;
          this.needed--;
          this.outpos++;
        },
        addDistOne: function (a) {
          for (var b = this.window.getLastChar(), c = 0; c < a; )
            (c++, this.addByte(b));
        },
        addDist: function (a, b) {
          this.addBytes(this.window.buffer, this.window.pos - a, b);
        },
        applyHuffman: function (a) {
          switch (a._hx_index) {
            case 0:
              var b = a.i;
              return b;
            case 1:
              return (
                (b = a.left),
                (a = a.right),
                this.applyHuffman(this.getBit() ? a : b)
              );
            case 2:
              return ((b = a.n), this.applyHuffman(a.table[this.getBits(b)]));
          }
        },
        inflateLengths: function (a, b) {
          for (var c = 0, d = 0; c < b; ) {
            var f = this.applyHuffman(this.huffman);
            switch (f) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                d = f;
                a[c] = f;
                ++c;
                break;
              case 16:
                f = c + 3 + this.getBits(2);
                if (f > b) throw aa.thrown('Invalid data');
                for (; c < f; ) ((a[c] = d), ++c);
                break;
              case 17:
                c += 3 + this.getBits(3);
                if (c > b) throw aa.thrown('Invalid data');
                break;
              case 18:
                c += 11 + this.getBits(7);
                if (c > b) throw aa.thrown('Invalid data');
                break;
              default:
                throw aa.thrown('Invalid data');
            }
          }
        },
        inflateLoop: function () {
          switch (this.state._hx_index) {
            case 0:
              var a = this.input.readByte();
              if (8 != (a & 15)) throw aa.thrown('Invalid data');
              var b = this.input.readByte(),
                c = 0 != (b & 32);
              if (0 != ((a << 8) + b) % 31) throw aa.thrown('Invalid data');
              if (c) throw aa.thrown('Unsupported dictionary');
              this.state = Pb.Block;
              return !0;
            case 1:
              switch (((this.isFinal = this.getBit()), this.getBits(2))) {
                case 0:
                  this.len = this.input.readUInt16();
                  if (this.input.readUInt16() != 65535 - this.len)
                    throw aa.thrown('Invalid data');
                  this.state = Pb.Flat;
                  a = this.inflateLoop();
                  this.resetBits();
                  return a;
                case 1:
                  return (
                    (this.huffman = this.buildFixedHuffman()),
                    (this.huffdist = null),
                    (this.state = Pb.CData),
                    !0
                  );
                case 2:
                  a = this.getBits(5) + 257;
                  b = this.getBits(5) + 1;
                  var d = this.getBits(4) + 4;
                  c = 0;
                  for (var f = d; c < f; ) {
                    var g = c++;
                    this.lengths[gd.CODE_LENGTHS_POS[g]] = this.getBits(3);
                  }
                  c = d;
                  for (f = 19; c < f; )
                    ((g = c++), (this.lengths[gd.CODE_LENGTHS_POS[g]] = 0));
                  this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                  d = [];
                  c = 0;
                  for (f = a + b; c < f; ) (c++, d.push(0));
                  this.inflateLengths(d, a + b);
                  this.huffdist = this.htools.make(d, a, b, 16);
                  this.huffman = this.htools.make(d, 0, a, 16);
                  this.state = Pb.CData;
                  return !0;
                default:
                  throw aa.thrown('Invalid data');
              }
            case 2:
              b = this.applyHuffman(this.huffman);
              if (256 > b) return (this.addByte(b), 0 < this.needed);
              if (256 == b) this.state = this.isFinal ? Pb.Crc : Pb.Block;
              else {
                b -= 257;
                a = gd.LEN_EXTRA_BITS_TBL[b];
                if (-1 == a) throw aa.thrown('Invalid data');
                this.len = gd.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                b =
                  null == this.huffdist
                    ? this.getRevBits(5)
                    : this.applyHuffman(this.huffdist);
                a = gd.DIST_EXTRA_BITS_TBL[b];
                if (-1 == a) throw aa.thrown('Invalid data');
                this.dist = gd.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                if (this.dist > this.window.available())
                  throw aa.thrown('Invalid data');
                this.state = 1 == this.dist ? Pb.DistOne : Pb.Dist;
              }
              return !0;
            case 3:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                (b = this.input.read(a)),
                (this.len -= a),
                this.addBytes(b, 0, a),
                0 == this.len &&
                  (this.state = this.isFinal ? Pb.Crc : Pb.Block),
                0 < this.needed
              );
            case 4:
              a = this.window.checksum();
              if (null == a) return ((this.state = Pb.Done), !0);
              b = Fg.read(this.input);
              if (!a.equals(b)) throw aa.thrown('Invalid CRC');
              this.state = Pb.Done;
              return !0;
            case 5:
              for (; 0 < this.len && 0 < this.needed; )
                ((a = this.len < this.dist ? this.len : this.dist),
                  (a = this.needed < a ? this.needed : a),
                  this.addDist(this.dist, a),
                  (this.len -= a));
              0 == this.len && (this.state = Pb.CData);
              return 0 < this.needed;
            case 6:
              return (
                (a = this.len < this.needed ? this.len : this.needed),
                this.addDistOne(a),
                (this.len -= a),
                0 == this.len && (this.state = Pb.CData),
                0 < this.needed
              );
            case 7:
              return !1;
          }
        },
        __class__: gd,
      };
      var yh = function (a) {
        this.i = a;
      };
      h['haxe.zip.Reader'] = yh;
      yh.__name__ = 'haxe.zip.Reader';
      yh.readZip = function (a) {
        return new yh(a).read();
      };
      yh.prototype = {
        readZipDate: function () {
          var a = this.i.readUInt16(),
            b = (a >> 11) & 31,
            c = (a >> 5) & 63;
          a &= 31;
          var d = this.i.readUInt16();
          return new Date(
            (d >> 9) + 1980,
            ((d >> 5) & 15) - 1,
            d & 31,
            b,
            c,
            a << 1,
          );
        },
        readExtraFields: function (a) {
          for (var b = new Xa(); 0 < a; ) {
            if (4 > a) throw aa.thrown('Invalid extra fields data');
            var c = this.i.readUInt16(),
              d = this.i.readUInt16();
            if (a < d) throw aa.thrown('Invalid extra fields data');
            if (28789 == c) {
              var f = this.i.readByte();
              if (1 != f) {
                var g = new Qi();
                g.addByte(f);
                g.add(this.i.read(d - 1));
                b.add(Ff.FUnknown(c, g.getBytes()));
              } else
                ((c = this.i.readInt32()),
                  (f = this.i.read(d - 5).toString()),
                  b.add(Ff.FInfoZipUnicodePath(f, c)));
            } else b.add(Ff.FUnknown(c, this.i.read(d)));
            a -= 4 + d;
          }
          return b;
        },
        readEntryHeader: function () {
          var a = this.i,
            b = a.readInt32();
          if (33639248 == b || 101010256 == b) return null;
          if (67324752 != b) throw aa.thrown('Invalid Zip Data');
          a.readUInt16();
          b = a.readUInt16();
          var c = 0 != (b & 2048);
          if (0 != (b & 63473)) throw aa.thrown('Unsupported flags ' + b);
          var d = a.readUInt16(),
            f = 0 != d;
          if (f && 8 != d) throw aa.thrown('Unsupported compression ' + d);
          d = this.readZipDate();
          var g = a.readInt32(),
            k = a.readInt32(),
            q = a.readInt32(),
            p = a.readInt16(),
            l = a.readInt16();
          a = a.readString(p);
          l = this.readExtraFields(l);
          c && l.push(Ff.FUtf8);
          0 != (b & 8) && (g = null);
          return {
            fileName: a,
            fileSize: q,
            fileTime: d,
            compressed: f,
            dataSize: k,
            data: null,
            crc32: g,
            extraFields: l,
          };
        },
        read: function () {
          for (var a = new Xa(), b = null; ; ) {
            var c = this.readEntryHeader();
            if (null == c) break;
            if (null == c.crc32) {
              if (c.compressed) {
                null == b && (b = new xb(new ArrayBuffer(65536)));
                for (var d = new Qi(), f = new gd(this.i, !1, !1); ; ) {
                  var g = f.readBytes(b, 0, 65536);
                  d.addBytes(b, 0, g);
                  if (65536 > g) break;
                }
                c.data = d.getBytes();
              } else c.data = this.i.read(c.dataSize);
              c.crc32 = this.i.readInt32();
              134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
              c.dataSize = this.i.readInt32();
              c.fileSize = this.i.readInt32();
              c.dataSize = c.fileSize;
              c.compressed = !1;
            } else c.data = this.i.read(c.dataSize);
            a.add(c);
          }
          return a;
        },
        __class__: yh,
      };
      var Gf = function () {};
      h['js.Browser'] = Gf;
      Gf.__name__ = 'js.Browser';
      Gf.__properties__ = { get_supported: 'get_supported' };
      Gf.get_supported = function () {
        return 'undefined' != typeof window &&
          'undefined' != typeof window.location
          ? 'string' == typeof window.location.protocol
          : !1;
      };
      Gf.getLocalStorage = function () {
        try {
          var a = window.localStorage;
          a.getItem('');
          if (0 == a.length) {
            var b = '_hx_' + Math.random();
            a.setItem(b, b);
            a.removeItem(b);
          }
          return a;
        } catch (c) {
          return ((Ua.lastError = c), null);
        }
      };
      var ll = function () {};
      h['js.html._CanvasElement.CanvasUtil'] = ll;
      ll.__name__ = 'js.html._CanvasElement.CanvasUtil';
      ll.getContextWebGL = function (a, b) {
        var c = a.getContext('webgl', b);
        if (null != c) return c;
        c = a.getContext('experimental-webgl', b);
        return null != c ? c : null;
      };
      var Xj = function () {
        this.connected = !0;
        this.buttons = [];
        this.axes = [];
      };
      h['lime._internal.backend.html5.GameDeviceData'] = Xj;
      Xj.__name__ = 'lime._internal.backend.html5.GameDeviceData';
      Xj.prototype = { __class__: Xj };
      var vk = function (a) {
        this.parent = a;
        this.id = -1;
        this.gain = 1;
        this.position = new uk();
      };
      h['lime._internal.backend.html5.HTML5AudioSource'] = vk;
      vk.__name__ = 'lime._internal.backend.html5.HTML5AudioSource';
      vk.prototype = {
        dispose: function () {},
        init: function () {},
        play: function () {
          if (
            !this.playing &&
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            this.playing = !0;
            var a = this.getCurrentTime();
            this.completed = !1;
            var b = this.parent.buffer.__srcHowl._volume;
            this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
            this.id = this.parent.buffer.__srcHowl.play();
            this.parent.buffer.__srcHowl._volume = b;
            this.setPosition(this.parent.get_position());
            this.parent.buffer.__srcHowl.on(
              'end',
              m(this, this.howl_onEnd),
              this.id,
            );
            this.setCurrentTime(a);
          }
        },
        stop: function () {
          this.playing = !1;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            (this.parent.buffer.__srcHowl.stop(this.id),
            this.parent.buffer.__srcHowl.off(
              'end',
              m(this, this.howl_onEnd),
              this.id,
            ));
        },
        howl_onEnd: function () {
          this.playing = !1;
          0 < this.loops
            ? (this.loops--, this.stop(), this.play())
            : (null != this.parent.buffer &&
                null != this.parent.buffer.__srcHowl &&
                (this.parent.buffer.__srcHowl.stop(this.id),
                this.parent.buffer.__srcHowl.off(
                  'end',
                  m(this, this.howl_onEnd),
                  this.id,
                )),
              (this.completed = !0),
              this.parent.onComplete.dispatch());
        },
        getCurrentTime: function () {
          if (-1 == this.id) return 0;
          if (this.completed) return this.getLength();
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var a =
              ((1e3 * this.parent.buffer.__srcHowl.seek(this.id)) | 0) -
              this.parent.offset;
            return 0 > a ? 0 : a;
          }
          return 0;
        },
        setCurrentTime: function (a) {
          if (
            null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl
          ) {
            var b = (a + this.parent.offset) / 1e3;
            0 > b && (b = 0);
            this.parent.buffer.__srcHowl.seek(b, this.id);
          }
          return a;
        },
        getGain: function () {
          return this.gain;
        },
        setGain: function (a) {
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            -1 != this.id &&
            this.parent.buffer.__srcHowl.volume(a, this.id);
          return (this.gain = a);
        },
        getLength: function () {
          return 0 != this.length
            ? this.length
            : null != this.parent.buffer && null != this.parent.buffer.__srcHowl
              ? (1e3 * this.parent.buffer.__srcHowl.duration()) | 0
              : 0;
        },
        setLength: function (a) {
          return (this.length = a);
        },
        setLoops: function (a) {
          return (this.loops = a);
        },
        getPosition: function () {
          return this.position;
        },
        setPosition: function (a) {
          this.position.x = a.x;
          this.position.y = a.y;
          this.position.z = a.z;
          this.position.w = a.w;
          null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            null != this.parent.buffer.__srcHowl.pos &&
            this.parent.buffer.__srcHowl.pos(
              this.position.x,
              this.position.y,
              this.position.z,
              this.id,
            );
          return this.position;
        },
        __class__: vk,
      };
      var Ga = function () {
        this.validStatus0 = new Ba('Tizen', 'gi').match(
          window.navigator.userAgent,
        );
      };
      h['lime._internal.backend.html5.HTML5HTTPRequest'] = Ga;
      Ga.__name__ = 'lime._internal.backend.html5.HTML5HTTPRequest';
      Ga.loadImage = function (a) {
        var b = new Ed();
        Ga.activeRequests < Ga.requestLimit
          ? (Ga.activeRequests++, Ga.__loadImage(a, b, 0))
          : Ga.requestQueue.add({
              instance: null,
              uri: a,
              promise: b,
              type: 'IMAGE',
              options: 0,
            });
        return b.future;
      };
      Ga.loadImageFromBytes = function (a, b) {
        var c = URL.createObjectURL(new Blob([a.b.bufferValue], { type: b }));
        return null != c
          ? ((a = new Ed()),
            Ga.activeRequests < Ga.requestLimit
              ? (Ga.activeRequests++, Ga.__loadImage(c, a, 1))
              : Ga.requestQueue.add({
                  instance: null,
                  uri: c,
                  promise: a,
                  type: 'IMAGE',
                  options: 1,
                }),
            a.future)
          : Ga.loadImage('data:' + b + ';base64,' + Ie.encode(a));
      };
      Ga.processQueue = function () {
        if (Ga.activeRequests < Ga.requestLimit && 0 < Ga.requestQueue.length) {
          Ga.activeRequests++;
          var a = Ga.requestQueue.pop();
          switch (a.type) {
            case 'BINARY':
              a.instance.__loadData(a.uri, a.promise);
              break;
            case 'IMAGE':
              Ga.__loadImage(a.uri, a.promise, a.options);
              break;
            case 'TEXT':
              a.instance.__loadText(a.uri, a.promise);
              break;
            default:
              Ga.activeRequests--;
          }
        }
      };
      Ga.__fixHostname = function (a) {
        return null == a ? '' : a;
      };
      Ga.__fixPort = function (a, b) {
        if (null == a || '' == a)
          switch (b) {
            case 'ftp:':
              return '21';
            case 'gopher:':
              return '70';
            case 'http:':
              return '80';
            case 'https:':
              return '443';
            case 'ws:':
              return '80';
            case 'wss:':
              return '443';
            default:
              return '';
          }
        return a;
      };
      Ga.__fixProtocol = function (a) {
        return null == a || '' == a ? 'http:' : a;
      };
      Ga.__isInMemoryURI = function (a) {
        return P.startsWith(a, 'data:') ? !0 : P.startsWith(a, 'blob:');
      };
      Ga.__isSameOrigin = function (a) {
        if (null == a || '' == a || Ga.__isInMemoryURI(a)) return !0;
        null == Ga.originElement &&
          ((Ga.originElement = window.document.createElement('a')),
          (Ga.originHostname = Ga.__fixHostname(z.location.hostname)),
          (Ga.originProtocol = Ga.__fixProtocol(z.location.protocol)),
          (Ga.originPort = Ga.__fixPort(z.location.port, Ga.originProtocol)));
        var b = Ga.originElement;
        b.href = a;
        '' == b.hostname && (b.href = b.href);
        var c = Ga.__fixHostname(b.hostname);
        a = Ga.__fixProtocol(b.protocol);
        b = Ga.__fixPort(b.port, a);
        c = '' == c || c == Ga.originHostname;
        b = '' == b || b == Ga.originPort;
        return 'file:' != a && c ? b : !1;
      };
      Ga.__loadImage = function (a, b, c) {
        var d = new window.Image();
        Ga.__isSameOrigin(a) || (d.crossOrigin = 'Anonymous');
        null == Ga.supportsImageProgress &&
          (Ga.supportsImageProgress = 'onprogress' in d);
        if (Ga.supportsImageProgress || Ga.__isInMemoryURI(a))
          (d.addEventListener(
            'load',
            function (f) {
              Ga.__revokeBlobURI(a, c);
              f = new $e(null, d.width, d.height);
              f.__srcImage = d;
              Ga.activeRequests--;
              Ga.processQueue();
              b.complete(new Ub(f));
            },
            !1,
          ),
            d.addEventListener(
              'progress',
              function (a) {
                b.progress(a.loaded, a.total);
              },
              !1,
            ),
            d.addEventListener(
              'error',
              function (d) {
                Ga.__revokeBlobURI(a, c);
                Ga.activeRequests--;
                Ga.processQueue();
                b.error(new Hg(d.detail, null));
              },
              !1,
            ),
            (d.src = a));
        else {
          var f = new XMLHttpRequest();
          f.onload = function (a) {
            Ga.activeRequests--;
            Ga.processQueue();
            new Ub().__fromBytes(xb.ofData(f.response), function (a) {
              b.complete(a);
            });
          };
          f.onerror = function (a) {
            b.error(new Hg(a.message, null));
          };
          f.onprogress = function (a) {
            a.lengthComputable && b.progress(a.loaded, a.total);
          };
          f.open('GET', a, !0);
          f.responseType = 'arraybuffer';
          f.overrideMimeType('text/plain; charset=x-user-defined');
          f.send(null);
        }
      };
      Ga.__revokeBlobURI = function (a, b) {
        0 != (b & 1) && URL.revokeObjectURL(a);
      };
      Ga.prototype = {
        init: function (a) {
          this.parent = a;
        },
        load: function (a, b, c) {
          this.request = new XMLHttpRequest();
          'POST' == this.parent.method
            ? this.request.upload.addEventListener('progress', b, !1)
            : this.request.addEventListener('progress', b, !1);
          this.request.onreadystatechange = c;
          b = '';
          if (null == this.parent.data) {
            c = Object.keys(this.parent.formData.h);
            for (var d = c.length, f = 0; f < d; ) {
              var g = c[f++];
              0 < b.length && (b += '&');
              var k = this.parent.formData.h[g];
              if (-1 < g.indexOf('[]') && k instanceof Array) {
                var q = [];
                for (k = H(k); k.hasNext(); ) {
                  var p = k.next();
                  q.push(encodeURIComponent(p));
                }
                q = q.join('&amp;' + g + '=');
                b += encodeURIComponent(g) + '=' + q;
              } else
                ((q = encodeURIComponent(g) + '='),
                  (g = I.string(k)),
                  (b += q + encodeURIComponent(g)));
            }
            'GET' == this.parent.method &&
              '' != b &&
              ((a = -1 < a.indexOf('?') ? a + ('&' + b) : a + ('?' + b)),
              (b = ''));
          }
          this.request.open(I.string(this.parent.method), a, !0);
          0 < this.parent.timeout &&
            (this.request.timeout = this.parent.timeout);
          this.binary && (this.request.responseType = 'arraybuffer');
          a = null;
          q = 0;
          for (c = this.parent.headers; q < c.length; )
            ((d = c[q]),
              ++q,
              'Content-Type' == d.name
                ? (a = d.value)
                : this.request.setRequestHeader(d.name, d.value));
          null != this.parent.contentType && (a = this.parent.contentType);
          null == a &&
            (null != this.parent.data
              ? (a = 'application/octet-stream')
              : '' != b && (a = 'application/x-www-form-urlencoded'));
          null != a && this.request.setRequestHeader('Content-Type', a);
          this.parent.withCredentials && (this.request.withCredentials = !0);
          null != this.parent.data
            ? this.request.send(this.parent.data.b.bufferValue)
            : this.request.send(b);
        },
        loadData: function (a) {
          var b = new Ed();
          Ga.activeRequests < Ga.requestLimit
            ? (Ga.activeRequests++, this.__loadData(a, b))
            : Ga.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'BINARY',
                options: 0,
              });
          return b.future;
        },
        loadText: function (a) {
          var b = new Ed();
          Ga.activeRequests < Ga.requestLimit
            ? (Ga.activeRequests++, this.__loadText(a, b))
            : Ga.requestQueue.add({
                instance: this,
                uri: a,
                promise: b,
                type: 'TEXT',
                options: 0,
              });
          return b.future;
        },
        processResponse: function () {
          if (this.parent.enableResponseHeaders) {
            this.parent.responseHeaders = [];
            for (
              var a,
                b,
                c = 0,
                d = this.request.getAllResponseHeaders().split('\n');
              c < d.length;

            )
              ((b = d[c]),
                ++c,
                (a = P.trim(R.substr(b, 0, b.indexOf(':')))),
                (b = P.trim(R.substr(b, b.indexOf(':') + 1, null))),
                '' != a && this.parent.responseHeaders.push(new Ui(a, b)));
          }
          this.parent.responseStatus = this.request.status;
        },
        __loadData: function (a, b) {
          var c = this;
          this.binary = !0;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                ((a = null),
                '' == c.request.responseType
                  ? null != c.request.responseText &&
                    (a = xb.ofString(c.request.responseText))
                  : null != c.request.response &&
                    (a = xb.ofData(c.request.response)),
                null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(a))
                  : (c.processResponse(), b.error(new Hg(c.request.status, a))),
                (c.request = null),
                Ga.activeRequests--,
                Ga.processQueue());
            },
          );
        },
        __loadText: function (a, b) {
          var c = this;
          this.binary = !1;
          this.load(
            a,
            function (a) {
              b.progress(a.loaded, a.total);
            },
            function (a) {
              4 == c.request.readyState &&
                (null != c.request.status &&
                ((200 <= c.request.status && 400 > c.request.status) ||
                  (c.validStatus0 && 0 == c.request.status))
                  ? (c.processResponse(), b.complete(c.request.responseText))
                  : (c.processResponse(),
                    b.error(new Hg(c.request.status, c.request.responseText))),
                (c.request = null),
                Ga.activeRequests--,
                Ga.processQueue());
            },
          );
        },
        __class__: Ga,
      };
      var Sa = function (a) {
        this.imeCompositionActive = !1;
        this.unusedTouchesPool = new Xa();
        this.scale = 1;
        this.currentTouches = new tc();
        this.parent = a;
        this.cursor = tb.DEFAULT;
        this.cacheMouseY = this.cacheMouseX = 0;
        var b = a.__attributes;
        Object.prototype.hasOwnProperty.call(b, 'context') || (b.context = {});
        this.renderType = b.context.type;
        Object.prototype.hasOwnProperty.call(b, 'element') &&
          (a.element = b.element);
        var c = a.element;
        Object.prototype.hasOwnProperty.call(b, 'allowHighDPI') &&
          b.allowHighDPI &&
          'dom' != this.renderType &&
          (this.scale = window.devicePixelRatio);
        a.__scale = this.scale;
        this.setWidth = Object.prototype.hasOwnProperty.call(b, 'width')
          ? b.width
          : 0;
        this.setHeight = Object.prototype.hasOwnProperty.call(b, 'height')
          ? b.height
          : 0;
        a.__width = this.setWidth;
        a.__height = this.setHeight;
        a.id = Sa.windowID++;
        c instanceof HTMLCanvasElement
          ? (this.canvas = c)
          : 'dom' == this.renderType
            ? (this.div = window.document.createElement('div'))
            : (this.canvas = window.document.createElement('canvas'));
        if (null != this.canvas) {
          var d = this.canvas.style;
          d.setProperty('-webkit-transform', 'translateZ(0)', null);
          d.setProperty('transform', 'translateZ(0)', null);
        } else
          null != this.div &&
            ((d = this.div.style),
            d.setProperty('-webkit-transform', 'translate3D(0,0,0)', null),
            d.setProperty('transform', 'translate3D(0,0,0)', null),
            (d.position = 'relative'),
            (d.overflow = 'hidden'),
            d.setProperty('-webkit-user-select', 'none', null),
            d.setProperty('-moz-user-select', 'none', null),
            d.setProperty('-ms-user-select', 'none', null),
            d.setProperty('-o-user-select', 'none', null));
        0 == a.__width &&
          0 == a.__height &&
          (null != c
            ? ((a.__width = c.clientWidth), (a.__height = c.clientHeight))
            : ((a.__width = window.innerWidth),
              (a.__height = window.innerHeight)),
          (this.cacheElementWidth = a.__width),
          (this.cacheElementHeight = a.__height),
          (this.resizeElement = !0));
        null != this.canvas
          ? ((this.canvas.width = Math.round(a.__width * this.scale)),
            (this.canvas.height = Math.round(a.__height * this.scale)),
            (this.canvas.style.width = a.__width + 'px'),
            (this.canvas.style.height = a.__height + 'px'))
          : ((this.div.style.width = a.__width + 'px'),
            (this.div.style.height = a.__height + 'px'));
        if (
          (Object.prototype.hasOwnProperty.call(b, 'resizable') &&
            b.resizable) ||
          (!Object.prototype.hasOwnProperty.call(b, 'width') &&
            0 == this.setWidth &&
            0 == this.setHeight)
        )
          a.__resizable = !0;
        this.updateSize();
        if (null != c) {
          null != this.canvas
            ? c != this.canvas && c.appendChild(this.canvas)
            : c.appendChild(this.div);
          b = 'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
            ' ',
          );
          for (d = 0; d < b.length; ) {
            var f = b[d];
            ++d;
            c.addEventListener(f, m(this, this.handleMouseEvent), !0);
          }
          c.addEventListener(
            'contextmenu',
            m(this, this.handleContextMenuEvent),
            !0,
          );
          c.addEventListener('dragstart', m(this, this.handleDragEvent), !0);
          c.addEventListener('dragover', m(this, this.handleDragEvent), !0);
          c.addEventListener('drop', m(this, this.handleDragEvent), !0);
          c.addEventListener('touchstart', m(this, this.handleTouchEvent), !0);
          c.addEventListener('touchmove', m(this, this.handleTouchEvent), !0);
          c.addEventListener('touchend', m(this, this.handleTouchEvent), !0);
          c.addEventListener('touchcancel', m(this, this.handleTouchEvent), !0);
          c.addEventListener(
            'gamepadconnected',
            m(this, this.handleGamepadEvent),
            !0,
          );
          c.addEventListener(
            'gamepaddisconnected',
            m(this, this.handleGamepadEvent),
            !0,
          );
        }
        this.createContext();
        'webgl' == a.context.type &&
          (this.canvas.addEventListener(
            'webglcontextlost',
            m(this, this.handleContextEvent),
            !1,
          ),
          this.canvas.addEventListener(
            'webglcontextrestored',
            m(this, this.handleContextEvent),
            !1,
          ));
      };
      h['lime._internal.backend.html5.HTML5Window'] = Sa;
      Sa.__name__ = 'lime._internal.backend.html5.HTML5Window';
      Sa.prototype = {
        close: function () {
          var a = this.parent.element;
          if (null != a) {
            null != this.canvas
              ? (a != this.canvas && a.removeChild(this.canvas),
                (this.canvas = null))
              : null != this.div &&
                (a.removeChild(this.div), (this.div = null));
            for (
              var b =
                  'mousedown mouseenter mouseleave mousemove mouseup wheel'.split(
                    ' ',
                  ),
                c = 0;
              c < b.length;

            ) {
              var d = b[c];
              ++c;
              a.removeEventListener(d, m(this, this.handleMouseEvent), !0);
            }
            a.removeEventListener(
              'contextmenu',
              m(this, this.handleContextMenuEvent),
              !0,
            );
            a.removeEventListener(
              'dragstart',
              m(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener(
              'dragover',
              m(this, this.handleDragEvent),
              !0,
            );
            a.removeEventListener('drop', m(this, this.handleDragEvent), !0);
            a.removeEventListener(
              'touchstart',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchmove',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchend',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'touchcancel',
              m(this, this.handleTouchEvent),
              !0,
            );
            a.removeEventListener(
              'gamepadconnected',
              m(this, this.handleGamepadEvent),
              !0,
            );
            a.removeEventListener(
              'gamepaddisconnected',
              m(this, this.handleGamepadEvent),
              !0,
            );
          }
          this.parent.application.__removeWindow(this.parent);
        },
        createContext: function () {
          var a = new wk(),
            b = this.parent.__attributes.context;
          a.window = this.parent;
          a.attributes = b;
          if (null != this.div)
            ((a.dom = this.div), (a.type = 'dom'), (a.version = ''));
          else if (null != this.canvas) {
            var c = null,
              d = 'canvas' == this.renderType,
              f =
                'opengl' == this.renderType ||
                'opengles' == this.renderType ||
                'webgl' == this.renderType,
              g =
                !Object.prototype.hasOwnProperty.call(b, 'version') ||
                '1' != b.version,
              k = !1;
            if (
              f ||
              (!d &&
                (!Object.prototype.hasOwnProperty.call(b, 'hardware') ||
                  b.hardware))
            ) {
              d =
                Object.prototype.hasOwnProperty.call(b, 'background') &&
                null == b.background;
              f = Object.prototype.hasOwnProperty.call(b, 'colorDepth')
                ? b.colorDepth
                : 16;
              var q =
                  Object.prototype.hasOwnProperty.call(b, 'antialiasing') &&
                  0 < b.antialiasing,
                p = Object.prototype.hasOwnProperty.call(b, 'depth')
                  ? b.depth
                  : !0,
                l =
                  Object.prototype.hasOwnProperty.call(b, 'stencil') &&
                  b.stencil;
              b =
                Object.prototype.hasOwnProperty.call(
                  b,
                  'preserveDrawingBuffer',
                ) && b.preserveDrawingBuffer;
              b = {
                alpha: d || 16 < f,
                antialias: q,
                depth: p,
                premultipliedAlpha: !0,
                stencil: l,
                preserveDrawingBuffer: b,
                failIfMajorPerformanceCaveat: !1,
              };
              d = ['webgl', 'experimental-webgl'];
              g && d.unshift('webgl2');
              for (
                g = 0;
                g < d.length &&
                ((f = d[g]),
                ++g,
                (c = this.canvas.getContext(f, b)),
                null != c && 'webgl2' == f && (k = !0),
                null == c);

              );
            }
            null == c
              ? ((a.canvas2D = this.canvas.getContext('2d')),
                (a.type = 'canvas'),
                (a.version = ''))
              : ((a.webgl = Nc.fromWebGL2RenderContext(c)),
                k && (a.webgl2 = c),
                null == gf.context &&
                  ((gf.context = c),
                  (gf.type = 'webgl'),
                  (gf.version = k ? 2 : 1)),
                (a.type = 'webgl'),
                (a.version = k ? '2' : '1'));
          }
          this.parent.context = a;
        },
        focusTextInput: function () {
          var a = this;
          this.__focusPending ||
            ((this.__focusPending = !0),
            cg.delay(function () {
              a.__focusPending = !1;
              a.textInputEnabled && Sa.textInput.focus();
            }, 20));
        },
        getFrameRate: function () {
          return null == this.parent.application
            ? 0
            : 0 > this.parent.application.__backend.framePeriod
              ? 60
              : 1e3 == this.parent.application.__backend.framePeriod
                ? 0
                : 1e3 / this.parent.application.__backend.framePeriod;
        },
        handleContextEvent: function (a) {
          switch (a.type) {
            case 'webglcontextlost':
              a.cancelable && a.preventDefault();
              this.parent.context = null;
              this.parent.onRenderContextLost.dispatch();
              break;
            case 'webglcontextrestored':
              (this.createContext(),
                this.parent.onRenderContextRestored.dispatch(
                  this.parent.context,
                ));
          }
        },
        handleContextMenuEvent: function (a) {
          (this.parent.onMouseUp.canceled ||
            this.parent.onMouseDown.canceled) &&
            a.cancelable &&
            a.preventDefault();
        },
        handleCutOrCopyEvent: function (a) {
          var b = zc.get_text();
          null == b && (b = '');
          a.clipboardData.setData('text/plain', b);
          a.cancelable && a.preventDefault();
        },
        handleDragEvent: function (a) {
          switch (a.type) {
            case 'dragover':
              return (a.preventDefault(), !1);
            case 'dragstart':
              if (
                'img' ==
                  xa.__cast(a.target, HTMLElement).nodeName.toLowerCase() &&
                a.cancelable
              )
                return (a.preventDefault(), !1);
              break;
            case 'drop':
              if (null != a.dataTransfer && 0 < a.dataTransfer.files.length)
                return (
                  this.parent.onDropFile.dispatch(a.dataTransfer.files),
                  a.preventDefault(),
                  !1
                );
          }
          return !0;
        },
        handleFocusEvent: function (a) {
          this.textInputEnabled &&
            (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) &&
            this.focusTextInput();
        },
        handleGamepadEvent: function (a) {
          switch (a.type) {
            case 'gamepadconnected':
              pc.__connect(a.gamepad.index);
              'standard' == a.gamepad.mapping && uc.__connect(a.gamepad.index);
              break;
            case 'gamepaddisconnected':
              (pc.__disconnect(a.gamepad.index),
                uc.__disconnect(a.gamepad.index));
          }
        },
        handleInputEvent: function (a) {
          this.imeCompositionActive ||
            Sa.textInput.value == Sa.dummyCharacter ||
            ((a = P.replace(Sa.textInput.value, Sa.dummyCharacter, '')),
            0 < a.length && this.parent.onTextInput.dispatch(a),
            (Sa.textInput.value = Sa.dummyCharacter));
        },
        handleMouseEvent: function (a) {
          if ('wheel' != a.type) {
            if (null != this.parent.element)
              if (null != this.canvas) {
                var b = this.canvas.getBoundingClientRect();
                var c = (this.parent.__width / b.width) * (a.clientX - b.left);
                b = (this.parent.__height / b.height) * (a.clientY - b.top);
              } else
                null != this.div
                  ? ((b = this.div.getBoundingClientRect()),
                    (c = a.clientX - b.left),
                    (b = a.clientY - b.top))
                  : ((b = this.parent.element.getBoundingClientRect()),
                    (c =
                      (this.parent.__width / b.width) * (a.clientX - b.left)),
                    (b =
                      (this.parent.__height / b.height) * (a.clientY - b.top)));
            else ((c = a.clientX), (b = a.clientY));
            switch (a.type) {
              case 'mousedown':
                a.currentTarget == this.parent.element &&
                  window.addEventListener(
                    'mouseup',
                    m(this, this.handleMouseEvent),
                  );
                this.parent.clickCount = a.detail;
                this.parent.onMouseDown.dispatch(c, b, a.button);
                this.parent.clickCount = 0;
                this.parent.onMouseDown.canceled &&
                  a.cancelable &&
                  a.preventDefault();
                break;
              case 'mouseenter':
                a.target == this.parent.element &&
                  (this.parent.onEnter.dispatch(),
                  this.parent.onEnter.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mouseleave':
                a.target == this.parent.element &&
                  (this.parent.onLeave.dispatch(),
                  this.parent.onLeave.canceled &&
                    a.cancelable &&
                    a.preventDefault());
                break;
              case 'mousemove':
                if (c != this.cacheMouseX || b != this.cacheMouseY)
                  (this.parent.onMouseMove.dispatch(c, b),
                    this.parent.onMouseMoveRelative.dispatch(
                      c - this.cacheMouseX,
                      b - this.cacheMouseY,
                    ),
                    (this.parent.onMouseMove.canceled ||
                      this.parent.onMouseMoveRelative.canceled) &&
                      a.cancelable &&
                      a.preventDefault());
                break;
              case 'mouseup':
                (window.removeEventListener(
                  'mouseup',
                  m(this, this.handleMouseEvent),
                ),
                  a.currentTarget == this.parent.element && a.stopPropagation(),
                  (this.parent.clickCount = a.detail),
                  this.parent.onMouseUp.dispatch(c, b, a.button),
                  (this.parent.clickCount = 0),
                  this.parent.onMouseUp.canceled &&
                    a.cancelable &&
                    a.preventDefault());
            }
            this.cacheMouseX = c;
            this.cacheMouseY = b;
          } else {
            switch (a.deltaMode) {
              case 0:
                c = Sd.PIXELS;
                break;
              case 1:
                c = Sd.LINES;
                break;
              case 2:
                c = Sd.PAGES;
                break;
              default:
                c = Sd.UNKNOWN;
            }
            this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
            this.parent.onMouseWheel.canceled &&
              a.cancelable &&
              a.preventDefault();
          }
        },
        handlePasteEvent: function (a) {
          if (-1 < a.clipboardData.types.indexOf('text/plain')) {
            var b = a.clipboardData.getData('text/plain');
            zc.set_text(b);
            this.textInputEnabled && this.parent.onTextInput.dispatch(b);
            a.cancelable && a.preventDefault();
          }
        },
        handleResizeEvent: function (a) {
          this.primaryTouch = null;
          this.updateSize();
        },
        handleTouchEvent: function (a) {
          a.cancelable && a.preventDefault();
          var b = null;
          null != this.parent.element &&
            (b =
              null != this.canvas
                ? this.canvas.getBoundingClientRect()
                : null != this.div
                  ? this.div.getBoundingClientRect()
                  : this.parent.element.getBoundingClientRect());
          var c = this.setWidth,
            d = this.setHeight;
          if (0 == c || 0 == d)
            null != b ? ((c = b.width), (d = b.height)) : (d = c = 1);
          for (var f, g, k, q, p, l = 0, h = a.changedTouches; l < h.length; ) {
            var n = h[l];
            ++l;
            null != b
              ? ((g = (c / b.width) * (n.clientX - b.left)),
                (k = (d / b.height) * (n.clientY - b.top)))
              : ((g = n.clientX), (k = n.clientY));
            if ('touchstart' == a.type)
              ((f = this.unusedTouchesPool.pop()),
                null == f
                  ? (f = new hc(
                      g / c,
                      k / d,
                      n.identifier,
                      0,
                      0,
                      n.force,
                      this.parent.id,
                    ))
                  : ((f.x = g / c),
                    (f.y = k / d),
                    (f.id = n.identifier),
                    (f.dx = 0),
                    (f.dy = 0),
                    (f.pressure = n.force),
                    (f.device = this.parent.id)),
                (this.currentTouches.h[n.identifier] = f),
                hc.onStart.dispatch(f),
                null == this.primaryTouch && (this.primaryTouch = f),
                f == this.primaryTouch &&
                  this.parent.onMouseDown.dispatch(g, k, 0));
            else if (((f = this.currentTouches.h[n.identifier]), null != f))
              switch (
                ((q = f.x),
                (p = f.y),
                (f.x = g / c),
                (f.y = k / d),
                (f.dx = f.x - q),
                (f.dy = f.y - p),
                (f.pressure = n.force),
                a.type)
              ) {
                case 'touchcancel':
                  hc.onCancel.dispatch(f);
                  this.currentTouches.remove(n.identifier);
                  this.unusedTouchesPool.add(f);
                  f == this.primaryTouch && (this.primaryTouch = null);
                  break;
                case 'touchend':
                  hc.onEnd.dispatch(f);
                  this.currentTouches.remove(n.identifier);
                  this.unusedTouchesPool.add(f);
                  f == this.primaryTouch &&
                    (this.parent.onMouseUp.dispatch(g, k, 0),
                    (this.primaryTouch = null));
                  break;
                case 'touchmove':
                  (hc.onMove.dispatch(f),
                    f == this.primaryTouch &&
                      this.parent.onMouseMove.dispatch(g, k));
              }
          }
        },
        isDescendent: function (a) {
          if (a == this.parent.element) return !0;
          for (; null != a; ) {
            if (a.parentNode == this.parent.element) return !0;
            a = a.parentNode;
          }
          return !1;
        },
        setClipboard: function (a) {
          null == Sa.textArea &&
            ((Sa.textArea = window.document.createElement('textarea')),
            (Sa.textArea.style.height = '0px'),
            (Sa.textArea.style.left = '-100px'),
            (Sa.textArea.style.opacity = '0'),
            (Sa.textArea.style.position = 'fixed'),
            (Sa.textArea.style.top = '-100px'),
            (Sa.textArea.style.width = '0px'),
            window.document.body.appendChild(Sa.textArea));
          Sa.textArea.value = a;
          Sa.textArea.focus();
          Sa.textArea.select();
          window.document.queryCommandEnabled('copy') &&
            window.document.execCommand('copy');
          this.textInputEnabled && this.focusTextInput();
        },
        setCursor: function (a) {
          if (this.cursor != a) {
            if (null == a) this.parent.element.style.cursor = 'none';
            else {
              switch (a._hx_index) {
                case 0:
                  var b = 'default';
                  break;
                case 1:
                  b = 'crosshair';
                  break;
                case 3:
                  b = 'move';
                  break;
                case 4:
                  b = 'pointer';
                  break;
                case 5:
                  b = 'nesw-resize';
                  break;
                case 6:
                  b = 'ns-resize';
                  break;
                case 7:
                  b = 'nwse-resize';
                  break;
                case 8:
                  b = 'ew-resize';
                  break;
                case 9:
                  b = 'text';
                  break;
                case 10:
                  b = 'wait';
                  break;
                case 11:
                  b = 'wait';
                  break;
                default:
                  b = 'auto';
              }
              this.parent.element.style.cursor = b;
            }
            this.cursor = a;
          }
          return this.cursor;
        },
        setTextInputEnabled: function (a) {
          if (a) {
            if (null == Sa.textInput) {
              Sa.textInput = window.document.createElement('input');
              var b =
                0 <= z.navigator.userAgent.indexOf('Android')
                  ? 'password'
                  : 'text';
              Sa.textInput.type = b;
              Sa.textInput.style.position = 'absolute';
              Sa.textInput.style.opacity = '0';
              Sa.textInput.style.color = 'transparent';
              Sa.textInput.value = Sa.dummyCharacter;
              Sa.textInput.autocapitalize = 'off';
              Sa.textInput.autocorrect = 'off';
              Sa.textInput.autocomplete = 'off';
              Sa.textInput.style.left = '0px';
              Sa.textInput.style.top = '50%';
              new Ba('(iPad|iPhone|iPod).*OS 8_', 'gi').match(
                window.navigator.userAgent,
              )
                ? ((Sa.textInput.style.fontSize = '0px'),
                  (Sa.textInput.style.width = '0px'),
                  (Sa.textInput.style.height = '0px'))
                : ((Sa.textInput.style.width = '1px'),
                  (Sa.textInput.style.height = '1px'));
              Sa.textInput.style.pointerEvents = 'none';
              Sa.textInput.style.zIndex = '-10000000';
            }
            null == Sa.textInput.parentNode &&
              this.parent.element.appendChild(Sa.textInput);
            this.textInputEnabled ||
              (Sa.textInput.addEventListener(
                'input',
                m(this, this.handleInputEvent),
                !0,
              ),
              Sa.textInput.addEventListener(
                'blur',
                m(this, this.handleFocusEvent),
                !0,
              ),
              Sa.textInput.addEventListener(
                'cut',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Sa.textInput.addEventListener(
                'copy',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Sa.textInput.addEventListener(
                'paste',
                m(this, this.handlePasteEvent),
                !0,
              ),
              Sa.textInput.addEventListener(
                'compositionstart',
                m(this, this.handleCompositionstartEvent),
                !0,
              ),
              Sa.textInput.addEventListener(
                'compositionend',
                m(this, this.handleCompositionendEvent),
                !0,
              ));
            Sa.textInput.focus();
            Sa.textInput.select();
          } else
            null != Sa.textInput &&
              (Sa.textInput.blur(),
              Sa.textInput.removeEventListener(
                'input',
                m(this, this.handleInputEvent),
                !0,
              ),
              Sa.textInput.removeEventListener(
                'blur',
                m(this, this.handleFocusEvent),
                !0,
              ),
              Sa.textInput.removeEventListener(
                'cut',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Sa.textInput.removeEventListener(
                'copy',
                m(this, this.handleCutOrCopyEvent),
                !0,
              ),
              Sa.textInput.removeEventListener(
                'paste',
                m(this, this.handlePasteEvent),
                !0,
              ),
              Sa.textInput.removeEventListener(
                'compositionstart',
                m(this, this.handleCompositionstartEvent),
                !0,
              ),
              Sa.textInput.removeEventListener(
                'compositionend',
                m(this, this.handleCompositionendEvent),
                !0,
              ));
          return (this.textInputEnabled = a);
        },
        setTextInputRect: function (a) {
          return (this.textInputRect = a);
        },
        handleCompositionstartEvent: function (a) {
          this.imeCompositionActive = !0;
        },
        handleCompositionendEvent: function (a) {
          this.imeCompositionActive = !1;
          this.handleInputEvent(a);
        },
        updateSize: function () {
          if (this.parent.__resizable) {
            if (null != this.parent.element) {
              var a = this.parent.element.clientWidth;
              var b = this.parent.element.clientHeight;
            } else ((a = window.innerWidth), (b = window.innerHeight));
            if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
              this.cacheElementWidth = a;
              this.cacheElementHeight = b;
              var c =
                this.resizeElement ||
                (0 == this.setWidth && 0 == this.setHeight);
              if (
                null != this.parent.element &&
                (null == this.div || (null != this.div && c))
              )
                if (c) {
                  if (this.parent.__width != a || this.parent.__height != b)
                    ((this.parent.__width = a),
                      (this.parent.__height = b),
                      null != this.canvas
                        ? this.parent.element != this.canvas &&
                          ((this.canvas.width = Math.round(a * this.scale)),
                          (this.canvas.height = Math.round(b * this.scale)),
                          (this.canvas.style.width = a + 'px'),
                          (this.canvas.style.height = b + 'px'))
                        : ((this.div.style.width = a + 'px'),
                          (this.div.style.height = b + 'px')),
                      this.parent.onResize.dispatch(a, b));
                } else {
                  c = 0 != this.setWidth ? a / this.setWidth : 1;
                  var d = 0 != this.setHeight ? b / this.setHeight : 1,
                    f = a,
                    g = b,
                    k = 0,
                    q = 0;
                  c < d
                    ? ((g = Math.floor(this.setHeight * c)),
                      (q = Math.floor((b - g) / 2)))
                    : ((f = Math.floor(this.setWidth * d)),
                      (k = Math.floor((a - f) / 2)));
                  null != this.canvas
                    ? this.parent.element != this.canvas &&
                      ((this.canvas.style.width = f + 'px'),
                      (this.canvas.style.height = g + 'px'),
                      (this.canvas.style.marginLeft = k + 'px'),
                      (this.canvas.style.marginTop = q + 'px'))
                    : ((this.div.style.width = f + 'px'),
                      (this.div.style.height = g + 'px'),
                      (this.div.style.marginLeft = k + 'px'),
                      (this.div.style.marginTop = q + 'px'));
                }
            }
          }
        },
        __class__: Sa,
      };
      var gl = function () {};
      h['lime._internal.format.BMP'] = gl;
      gl.__name__ = 'lime._internal.format.BMP';
      gl.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        null == b && (b = we.RGB);
        var c = 14,
          d = 40,
          f = a.width * a.height * 4;
        if (null != b)
          switch (b._hx_index) {
            case 0:
              f = (3 * a.width + ((3 * a.width) % 4)) * a.height;
              break;
            case 1:
              d = 108;
              break;
            case 2:
              ((c = 0), (f += a.width * a.height));
          }
        var g = new xb(new ArrayBuffer(c + d + f)),
          k = 0;
        0 < c &&
          ((g.b[k++] = 66),
          (g.b[k++] = 77),
          g.setInt32(k, g.length),
          (k += 4),
          g.setUInt16(k, 0),
          (k += 2),
          g.setUInt16(k, 0),
          (k += 2),
          g.setInt32(k, c + d),
          (k += 4));
        g.setInt32(k, d);
        k += 4;
        g.setInt32(k, a.width);
        k += 4;
        g.setInt32(k, b == we.ICO ? 2 * a.height : a.height);
        k += 4;
        g.setUInt16(k, 1);
        k += 2;
        g.setUInt16(k, b == we.RGB ? 24 : 32);
        k += 2;
        g.setInt32(k, b == we.BITFIELD ? 3 : 0);
        k += 4;
        g.setInt32(k, f);
        k += 4;
        g.setInt32(k, 11824);
        k += 4;
        g.setInt32(k, 11824);
        k += 4;
        g.setInt32(k, 0);
        k += 4;
        g.setInt32(k, 0);
        k += 4;
        if (b == we.BITFIELD)
          for (
            g.setInt32(k, 16711680),
              k += 4,
              g.setInt32(k, 65280),
              k += 4,
              g.setInt32(k, 255),
              k += 4,
              g.setInt32(k, -16777216),
              k += 4,
              g.b[k++] = 32,
              g.b[k++] = 110,
              g.b[k++] = 105,
              g.b[k++] = 87,
              c = 0;
            48 > c;

          )
            (c++, (g.b[k++] = 0));
        d = a.getPixels(new Gd(0, 0, a.width, a.height), 1);
        if (null != b)
          switch (b._hx_index) {
            case 0:
              c = 0;
              for (b = a.height; c < b; ) {
                var q = c++;
                q = 4 * (a.height - 1 - q) * a.width;
                for (var p = 0, l = a.width; p < l; ) {
                  p++;
                  q++;
                  var h = d.b[q++];
                  var n = d.b[q++];
                  var t = d.b[q++];
                  g.b[k++] = t & 255;
                  g.b[k++] = n & 255;
                  g.b[k++] = h & 255;
                }
                f = 0;
                for (var w = (3 * a.width) % 4; f < w; ) (f++, (g.b[k++] = 0));
              }
              break;
            case 1:
              c = 0;
              for (b = a.height; c < b; )
                for (
                  q = c++,
                    q = 4 * (a.height - 1 - q) * a.width,
                    p = 0,
                    l = a.width;
                  p < l;

                ) {
                  p++;
                  var r = d.b[q++];
                  h = d.b[q++];
                  n = d.b[q++];
                  t = d.b[q++];
                  g.b[k++] = t & 255;
                  g.b[k++] = n & 255;
                  g.b[k++] = h & 255;
                  g.b[k++] = r & 255;
                }
              break;
            case 2:
              f = new xb(new ArrayBuffer(a.width * a.height));
              c = w = 0;
              for (b = a.height; c < b; )
                for (
                  q = c++,
                    q = 4 * (a.height - 1 - q) * a.width,
                    p = 0,
                    l = a.width;
                  p < l;

                )
                  (p++,
                    (r = d.b[q++]),
                    (h = d.b[q++]),
                    (n = d.b[q++]),
                    (t = d.b[q++]),
                    (g.b[k++] = t & 255),
                    (g.b[k++] = n & 255),
                    (g.b[k++] = h & 255),
                    (g.b[k++] = r & 255),
                    (f.b[w++] = 0));
              g.blit(k, f, 0, a.width * a.height);
          }
        return g;
      };
      var we = (L['lime._internal.format.BMPType'] = {
        __ename__: 'lime._internal.format.BMPType',
        __constructs__: null,
        RGB: {
          _hx_name: 'RGB',
          _hx_index: 0,
          __enum__: 'lime._internal.format.BMPType',
          toString: r,
        },
        BITFIELD: {
          _hx_name: 'BITFIELD',
          _hx_index: 1,
          __enum__: 'lime._internal.format.BMPType',
          toString: r,
        },
        ICO: {
          _hx_name: 'ICO',
          _hx_index: 2,
          __enum__: 'lime._internal.format.BMPType',
          toString: r,
        },
      });
      we.__constructs__ = [we.RGB, we.BITFIELD, we.ICO];
      we.__empty_constructs__ = [we.RGB, we.BITFIELD, we.ICO];
      var Ie = function () {};
      h['lime._internal.format.Base64'] = Ie;
      Ie.__name__ = 'lime._internal.format.Base64';
      Ie.encode = function (a) {
        var b = [],
          c = Ie.DICTIONARY,
          d = Ie.EXTENDED_DICTIONARY,
          f = a.length,
          g = Math.floor(f / 3),
          k = 2 * g;
        b.length = 2 * Math.ceil(f / 3);
        for (var q = 0, p = 0, l; p < k; )
          ((l = (a.b[q] << 16) | (a.b[q + 1] << 8) | a.b[q + 2]),
            (b[p] = d[(l >> 12) & 4095]),
            (b[p + 1] = d[l & 4095]),
            (q += 3),
            (p += 2));
        switch (f - 3 * g) {
          case 1:
            l = a.b[q] << 16;
            b[p] = d[(l >> 12) & 4095];
            b[p + 1] = '==';
            break;
          case 2:
            ((l = (a.b[q] << 16) | (a.b[q + 1] << 8)),
              (b[p] = d[(l >> 12) & 4095]),
              (b[p + 1] = c[(l >> 6) & 63] + '='));
        }
        return b.join('');
      };
      var ml = function () {};
      h['lime._internal.format.Deflate'] = ml;
      ml.__name__ = 'lime._internal.format.Deflate';
      ml.decompress = function (a) {
        a = pako.inflateRaw(a.b.bufferValue);
        return xb.ofData(a);
      };
      var nl = function () {};
      h['lime._internal.format.GZip'] = nl;
      nl.__name__ = 'lime._internal.format.GZip';
      nl.decompress = function (a) {
        a = pako.ungzip(a.b.bufferValue);
        return xb.ofData(a);
      };
      var hl = function () {};
      h['lime._internal.format.JPEG'] = hl;
      hl.__name__ = 'lime._internal.format.JPEG';
      hl.encode = function (a, b) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Na.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/jpeg', b / 100);
          a = window.atob(a.split(';base64,')[1]);
          b = new xb(new ArrayBuffer(a.length));
          for (var c = 0, d = a.length; c < d; ) {
            var f = c++;
            b.b[f] = R.cca(a, f) & 255;
          }
          return b;
        }
        return null;
      };
      var ol = function () {};
      h['lime._internal.format.LZMA'] = ol;
      ol.__name__ = 'lime._internal.format.LZMA';
      ol.decompress = function (a) {
        var b = LZMA.decompress;
        a = a.b.bufferValue;
        a = null != a ? new Uint8Array(a, 0) : null;
        b = b(a);
        return 'string' == typeof b ? xb.ofString(b) : xb.ofData(b);
      };
      var kk = function () {};
      h['lime._internal.format.PNG'] = kk;
      kk.__name__ = 'lime._internal.format.PNG';
      kk.encode = function (a) {
        if (a.get_premultiplied() || 0 != a.get_format())
          ((a = a.clone()), a.set_premultiplied(!1), a.set_format(0));
        Na.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL('image/png');
          a = window.atob(a.split(';base64,')[1]);
          for (
            var b = new xb(new ArrayBuffer(a.length)), c = 0, d = a.length;
            c < d;

          ) {
            var f = c++;
            b.b[f] = R.cca(a, f) & 255;
          }
          return b;
        }
        return null;
      };
      var pl = function () {};
      h['lime._internal.format.Zlib'] = pl;
      pl.__name__ = 'lime._internal.format.Zlib';
      pl.decompress = function (a) {
        a = pako.inflate(a.b.bufferValue);
        return xb.ofData(a);
      };
      var fc = function () {};
      h['lime._internal.graphics.ImageDataUtil'] = fc;
      fc.__name__ = 'lime._internal.graphics.ImageDataUtil';
      fc.colorTransform = function (a, b, c) {
        var d = a.buffer.data;
        if (null != d) {
          var f = a.buffer.format,
            g = a.buffer.premultiplied;
          b = new Oe(a, b);
          var k = Rc.getAlphaTable(c),
            q = Rc.getRedTable(c),
            p = Rc.getGreenTable(c);
          c = Rc.getBlueTable(c);
          for (var l, h, n = 0, t = 0, w = b.height; t < w; ) {
            l = t++;
            l = b.byteOffset + b.stride * l;
            for (var r = 0, x = b.width; r < x; ) {
              h = r++;
              h = l + 4 * h;
              var C = f,
                m = g;
              null == m && (m = !1);
              null == C && (C = 0);
              switch (C) {
                case 0:
                  n =
                    ((d[h] & 255) << 24) |
                    ((d[h + 1] & 255) << 16) |
                    ((d[h + 2] & 255) << 8) |
                    (d[h + 3] & 255);
                  break;
                case 1:
                  n =
                    ((d[h + 1] & 255) << 24) |
                    ((d[h + 2] & 255) << 16) |
                    ((d[h + 3] & 255) << 8) |
                    (d[h] & 255);
                  break;
                case 2:
                  n =
                    ((d[h + 2] & 255) << 24) |
                    ((d[h + 1] & 255) << 16) |
                    ((d[h] & 255) << 8) |
                    (d[h + 3] & 255);
              }
              m &&
                0 != (n & 255) &&
                255 != (n & 255) &&
                ((Q.unmult = 255 / (n & 255)),
                (n =
                  ((Q.__clamp[Math.round(((n >>> 24) & 255) * Q.unmult)] &
                    255) <<
                    24) |
                  ((Q.__clamp[Math.round(((n >>> 16) & 255) * Q.unmult)] &
                    255) <<
                    16) |
                  ((Q.__clamp[Math.round(((n >>> 8) & 255) * Q.unmult)] &
                    255) <<
                    8) |
                  (n & 255)));
              n =
                ((q[(n >>> 24) & 255] & 255) << 24) |
                ((p[(n >>> 16) & 255] & 255) << 16) |
                ((c[(n >>> 8) & 255] & 255) << 8) |
                (k[n & 255] & 255);
              C = f;
              m = g;
              null == m && (m = !1);
              null == C && (C = 0);
              m &&
                (0 == (n & 255)
                  ? 0 != n && (n = 0)
                  : 255 != (n & 255) &&
                    ((Q.a16 = Q.__alpha16[n & 255]),
                    (n =
                      ((((((n >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                      ((((((n >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                      ((((((n >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                      (n & 255))));
              switch (C) {
                case 0:
                  d[h] = (n >>> 24) & 255;
                  d[h + 1] = (n >>> 16) & 255;
                  d[h + 2] = (n >>> 8) & 255;
                  d[h + 3] = n & 255;
                  break;
                case 1:
                  d[h] = n & 255;
                  d[h + 1] = (n >>> 24) & 255;
                  d[h + 2] = (n >>> 16) & 255;
                  d[h + 3] = (n >>> 8) & 255;
                  break;
                case 2:
                  ((d[h] = (n >>> 8) & 255),
                    (d[h + 1] = (n >>> 16) & 255),
                    (d[h + 2] = (n >>> 24) & 255),
                    (d[h + 3] = n & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      fc.copyChannel = function (a, b, c, d, f, g) {
        switch (g._hx_index) {
          case 0:
            var k = 0;
            break;
          case 1:
            k = 1;
            break;
          case 2:
            k = 2;
            break;
          case 3:
            k = 3;
        }
        switch (f._hx_index) {
          case 0:
            var q = 0;
            break;
          case 1:
            q = 1;
            break;
          case 2:
            q = 2;
            break;
          case 3:
            q = 3;
        }
        f = b.buffer.data;
        g = a.buffer.data;
        if (null != f && null != g) {
          c = new Oe(b, c);
          d = new Oe(a, new Gd(d.x, d.y, c.width, c.height));
          var p = b.buffer.format,
            l = a.buffer.format;
          b = b.buffer.premultiplied;
          for (
            var h = a.buffer.premultiplied,
              n,
              t,
              w = 0,
              r = 0,
              x = 0,
              C = 0,
              m = d.height;
            C < m;

          ) {
            t = C++;
            n = c.byteOffset + c.stride * t;
            t = d.byteOffset + d.stride * t;
            for (var G = 0, y = d.width; G < y; ) {
              G++;
              var A = p,
                B = b;
              null == B && (B = !1);
              null == A && (A = 0);
              switch (A) {
                case 0:
                  w =
                    ((f[n] & 255) << 24) |
                    ((f[n + 1] & 255) << 16) |
                    ((f[n + 2] & 255) << 8) |
                    (f[n + 3] & 255);
                  break;
                case 1:
                  w =
                    ((f[n + 1] & 255) << 24) |
                    ((f[n + 2] & 255) << 16) |
                    ((f[n + 3] & 255) << 8) |
                    (f[n] & 255);
                  break;
                case 2:
                  w =
                    ((f[n + 2] & 255) << 24) |
                    ((f[n + 1] & 255) << 16) |
                    ((f[n] & 255) << 8) |
                    (f[n + 3] & 255);
              }
              B &&
                0 != (w & 255) &&
                255 != (w & 255) &&
                ((Q.unmult = 255 / (w & 255)),
                (w =
                  ((Q.__clamp[Math.round(((w >>> 24) & 255) * Q.unmult)] &
                    255) <<
                    24) |
                  ((Q.__clamp[Math.round(((w >>> 16) & 255) * Q.unmult)] &
                    255) <<
                    16) |
                  ((Q.__clamp[Math.round(((w >>> 8) & 255) * Q.unmult)] &
                    255) <<
                    8) |
                  (w & 255)));
              A = l;
              B = h;
              null == B && (B = !1);
              null == A && (A = 0);
              switch (A) {
                case 0:
                  r =
                    ((g[t] & 255) << 24) |
                    ((g[t + 1] & 255) << 16) |
                    ((g[t + 2] & 255) << 8) |
                    (g[t + 3] & 255);
                  break;
                case 1:
                  r =
                    ((g[t + 1] & 255) << 24) |
                    ((g[t + 2] & 255) << 16) |
                    ((g[t + 3] & 255) << 8) |
                    (g[t] & 255);
                  break;
                case 2:
                  r =
                    ((g[t + 2] & 255) << 24) |
                    ((g[t + 1] & 255) << 16) |
                    ((g[t] & 255) << 8) |
                    (g[t + 3] & 255);
              }
              B &&
                0 != (r & 255) &&
                255 != (r & 255) &&
                ((Q.unmult = 255 / (r & 255)),
                (r =
                  ((Q.__clamp[Math.round(((r >>> 24) & 255) * Q.unmult)] &
                    255) <<
                    24) |
                  ((Q.__clamp[Math.round(((r >>> 16) & 255) * Q.unmult)] &
                    255) <<
                    16) |
                  ((Q.__clamp[Math.round(((r >>> 8) & 255) * Q.unmult)] &
                    255) <<
                    8) |
                  (r & 255)));
              switch (q) {
                case 0:
                  x = (w >>> 24) & 255;
                  break;
                case 1:
                  x = (w >>> 16) & 255;
                  break;
                case 2:
                  x = (w >>> 8) & 255;
                  break;
                case 3:
                  x = w & 255;
              }
              switch (k) {
                case 0:
                  r =
                    ((x & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (r & 255);
                  break;
                case 1:
                  r =
                    (((r >>> 24) & 255) << 24) |
                    ((x & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (r & 255);
                  break;
                case 2:
                  r =
                    (((r >>> 24) & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    ((x & 255) << 8) |
                    (r & 255);
                  break;
                case 3:
                  r =
                    (((r >>> 24) & 255) << 24) |
                    (((r >>> 16) & 255) << 16) |
                    (((r >>> 8) & 255) << 8) |
                    (x & 255);
              }
              A = l;
              B = h;
              null == B && (B = !1);
              null == A && (A = 0);
              B &&
                (0 == (r & 255)
                  ? 0 != r && (r = 0)
                  : 255 != (r & 255) &&
                    ((Q.a16 = Q.__alpha16[r & 255]),
                    (r =
                      ((((((r >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                      ((((((r >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                      ((((((r >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                      (r & 255))));
              switch (A) {
                case 0:
                  g[t] = (r >>> 24) & 255;
                  g[t + 1] = (r >>> 16) & 255;
                  g[t + 2] = (r >>> 8) & 255;
                  g[t + 3] = r & 255;
                  break;
                case 1:
                  g[t] = r & 255;
                  g[t + 1] = (r >>> 24) & 255;
                  g[t + 2] = (r >>> 16) & 255;
                  g[t + 3] = (r >>> 8) & 255;
                  break;
                case 2:
                  ((g[t] = (r >>> 8) & 255),
                    (g[t + 1] = (r >>> 16) & 255),
                    (g[t + 2] = (r >>> 24) & 255),
                    (g[t + 3] = r & 255));
              }
              n += 4;
              t += 4;
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      fc.copyPixels = function (a, b, c, d, f, g, k) {
        null == k && (k = !1);
        if (
          a.width == b.width &&
          a.height == b.height &&
          c.width == b.width &&
          c.height == b.height &&
          0 == c.x &&
          0 == c.y &&
          0 == d.x &&
          0 == d.y &&
          null == f &&
          null == g &&
          0 == k &&
          a.get_format() == b.get_format()
        )
          a.buffer.data.set(b.buffer.data);
        else {
          var q = b.buffer.data,
            p = a.buffer.data;
          if (null == q || null == p) return;
          c = new Oe(b, c);
          var l = new Gd(d.x, d.y, c.width, c.height);
          l = new Oe(a, l);
          var h = b.buffer.format,
            n = a.buffer.format,
            t = 0,
            w = 0,
            r = b.buffer.premultiplied,
            x = a.buffer.premultiplied,
            C = (b.buffer.bitsPerPixel / 8) | 0,
            m = (a.buffer.bitsPerPixel / 8) | 0,
            G = null != f && f.get_transparent(),
            y =
              k ||
              (G && !a.get_transparent()) ||
              (!k && !a.get_transparent() && b.get_transparent());
          if (G)
            if (
              ((m = f.buffer.data),
              (b = f.buffer.format),
              (k = 0),
              (f = new Oe(
                f,
                new Gd(
                  c.x + (null == g ? 0 : g.x),
                  c.y + (null == g ? 0 : g.y),
                  c.width,
                  c.height,
                ),
              )),
              l.clip(d.x | 0, d.y | 0, f.width, f.height),
              y)
            )
              for (y = 0, C = l.height; y < C; )
                for (
                  G = y++,
                    d = c.byteOffset + c.stride * G,
                    g = l.byteOffset + l.stride * G,
                    G = f.byteOffset + f.stride * G,
                    u = 0,
                    v = l.width;
                  u < v;

                ) {
                  u++;
                  var A = h;
                  var B = r;
                  null == B && (B = !1);
                  null == A && (A = 0);
                  switch (A) {
                    case 0:
                      t =
                        ((q[d] & 255) << 24) |
                        ((q[d + 1] & 255) << 16) |
                        ((q[d + 2] & 255) << 8) |
                        (q[d + 3] & 255);
                      break;
                    case 1:
                      t =
                        ((q[d + 1] & 255) << 24) |
                        ((q[d + 2] & 255) << 16) |
                        ((q[d + 3] & 255) << 8) |
                        (q[d] & 255);
                      break;
                    case 2:
                      t =
                        ((q[d + 2] & 255) << 24) |
                        ((q[d + 1] & 255) << 16) |
                        ((q[d] & 255) << 8) |
                        (q[d + 3] & 255);
                  }
                  B &&
                    0 != (t & 255) &&
                    255 != (t & 255) &&
                    ((Q.unmult = 255 / (t & 255)),
                    (t =
                      ((Q.__clamp[Math.round(((t >>> 24) & 255) * Q.unmult)] &
                        255) <<
                        24) |
                      ((Q.__clamp[Math.round(((t >>> 16) & 255) * Q.unmult)] &
                        255) <<
                        16) |
                      ((Q.__clamp[Math.round(((t >>> 8) & 255) * Q.unmult)] &
                        255) <<
                        8) |
                      (t & 255)));
                  A = n;
                  B = x;
                  null == B && (B = !1);
                  null == A && (A = 0);
                  switch (A) {
                    case 0:
                      w =
                        ((p[g] & 255) << 24) |
                        ((p[g + 1] & 255) << 16) |
                        ((p[g + 2] & 255) << 8) |
                        (p[g + 3] & 255);
                      break;
                    case 1:
                      w =
                        ((p[g + 1] & 255) << 24) |
                        ((p[g + 2] & 255) << 16) |
                        ((p[g + 3] & 255) << 8) |
                        (p[g] & 255);
                      break;
                    case 2:
                      w =
                        ((p[g + 2] & 255) << 24) |
                        ((p[g + 1] & 255) << 16) |
                        ((p[g] & 255) << 8) |
                        (p[g + 3] & 255);
                  }
                  B &&
                    0 != (w & 255) &&
                    255 != (w & 255) &&
                    ((Q.unmult = 255 / (w & 255)),
                    (w =
                      ((Q.__clamp[Math.round(((w >>> 24) & 255) * Q.unmult)] &
                        255) <<
                        24) |
                      ((Q.__clamp[Math.round(((w >>> 16) & 255) * Q.unmult)] &
                        255) <<
                        16) |
                      ((Q.__clamp[Math.round(((w >>> 8) & 255) * Q.unmult)] &
                        255) <<
                        8) |
                      (w & 255)));
                  A = b;
                  B = !1;
                  null == B && (B = !1);
                  null == A && (A = 0);
                  switch (A) {
                    case 0:
                      k =
                        ((m[G] & 255) << 24) |
                        ((m[G + 1] & 255) << 16) |
                        ((m[G + 2] & 255) << 8) |
                        (m[G + 3] & 255);
                      break;
                    case 1:
                      k =
                        ((m[G + 1] & 255) << 24) |
                        ((m[G + 2] & 255) << 16) |
                        ((m[G + 3] & 255) << 8) |
                        (m[G] & 255);
                      break;
                    case 2:
                      k =
                        ((m[G + 2] & 255) << 24) |
                        ((m[G + 1] & 255) << 16) |
                        ((m[G] & 255) << 8) |
                        (m[G + 3] & 255);
                  }
                  B &&
                    0 != (k & 255) &&
                    255 != (k & 255) &&
                    ((Q.unmult = 255 / (k & 255)),
                    (k =
                      ((Q.__clamp[Math.round(((k >>> 24) & 255) * Q.unmult)] &
                        255) <<
                        24) |
                      ((Q.__clamp[Math.round(((k >>> 16) & 255) * Q.unmult)] &
                        255) <<
                        16) |
                      ((Q.__clamp[Math.round(((k >>> 8) & 255) * Q.unmult)] &
                        255) <<
                        8) |
                      (k & 255)));
                  B = ((k & 255) / 255) * ((t & 255) / 255);
                  if (0 < B) {
                    var N = (w & 255) / 255;
                    var L = 1 - B;
                    A = B + N * L;
                    E =
                      Q.__clamp[
                        Math.round(
                          (((t >>> 24) & 255) * B +
                            ((w >>> 24) & 255) * N * L) /
                            A,
                        )
                      ];
                    w =
                      ((E & 255) << 24) |
                      (((w >>> 16) & 255) << 16) |
                      (((w >>> 8) & 255) << 8) |
                      (w & 255);
                    E =
                      Q.__clamp[
                        Math.round(
                          (((t >>> 16) & 255) * B +
                            ((w >>> 16) & 255) * N * L) /
                            A,
                        )
                      ];
                    w =
                      (((w >>> 24) & 255) << 24) |
                      ((E & 255) << 16) |
                      (((w >>> 8) & 255) << 8) |
                      (w & 255);
                    B =
                      Q.__clamp[
                        Math.round(
                          (((t >>> 8) & 255) * B + ((w >>> 8) & 255) * N * L) /
                            A,
                        )
                      ];
                    w =
                      (((w >>> 24) & 255) << 24) |
                      (((w >>> 16) & 255) << 16) |
                      ((B & 255) << 8) |
                      (w & 255);
                    A = Q.__clamp[Math.round(255 * A)];
                    w =
                      (((w >>> 24) & 255) << 24) |
                      (((w >>> 16) & 255) << 16) |
                      (((w >>> 8) & 255) << 8) |
                      (A & 255);
                    A = n;
                    B = x;
                    null == B && (B = !1);
                    null == A && (A = 0);
                    B &&
                      (0 == (w & 255)
                        ? 0 != w && (w = 0)
                        : 255 != (w & 255) &&
                          ((Q.a16 = Q.__alpha16[w & 255]),
                          (w =
                            ((((((w >>> 24) & 255) * Q.a16) >> 16) & 255) <<
                              24) |
                            ((((((w >>> 16) & 255) * Q.a16) >> 16) & 255) <<
                              16) |
                            ((((((w >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                            (w & 255))));
                    switch (A) {
                      case 0:
                        p[g] = (w >>> 24) & 255;
                        p[g + 1] = (w >>> 16) & 255;
                        p[g + 2] = (w >>> 8) & 255;
                        p[g + 3] = w & 255;
                        break;
                      case 1:
                        p[g] = w & 255;
                        p[g + 1] = (w >>> 24) & 255;
                        p[g + 2] = (w >>> 16) & 255;
                        p[g + 3] = (w >>> 8) & 255;
                        break;
                      case 2:
                        ((p[g] = (w >>> 8) & 255),
                          (p[g + 1] = (w >>> 16) & 255),
                          (p[g + 2] = (w >>> 24) & 255),
                          (p[g + 3] = w & 255));
                    }
                  }
                  d += 4;
                  g += 4;
                  G += 4;
                }
            else
              for (y = 0, C = l.height; y < C; )
                for (
                  G = y++,
                    d = c.byteOffset + c.stride * G,
                    g = l.byteOffset + l.stride * G,
                    G = f.byteOffset + f.stride * G,
                    u = 0,
                    v = l.width;
                  u < v;

                ) {
                  u++;
                  A = h;
                  B = r;
                  null == B && (B = !1);
                  null == A && (A = 0);
                  switch (A) {
                    case 0:
                      t =
                        ((q[d] & 255) << 24) |
                        ((q[d + 1] & 255) << 16) |
                        ((q[d + 2] & 255) << 8) |
                        (q[d + 3] & 255);
                      break;
                    case 1:
                      t =
                        ((q[d + 1] & 255) << 24) |
                        ((q[d + 2] & 255) << 16) |
                        ((q[d + 3] & 255) << 8) |
                        (q[d] & 255);
                      break;
                    case 2:
                      t =
                        ((q[d + 2] & 255) << 24) |
                        ((q[d + 1] & 255) << 16) |
                        ((q[d] & 255) << 8) |
                        (q[d + 3] & 255);
                  }
                  B &&
                    0 != (t & 255) &&
                    255 != (t & 255) &&
                    ((Q.unmult = 255 / (t & 255)),
                    (t =
                      ((Q.__clamp[Math.round(((t >>> 24) & 255) * Q.unmult)] &
                        255) <<
                        24) |
                      ((Q.__clamp[Math.round(((t >>> 16) & 255) * Q.unmult)] &
                        255) <<
                        16) |
                      ((Q.__clamp[Math.round(((t >>> 8) & 255) * Q.unmult)] &
                        255) <<
                        8) |
                      (t & 255)));
                  A = b;
                  B = !1;
                  null == B && (B = !1);
                  null == A && (A = 0);
                  switch (A) {
                    case 0:
                      k =
                        ((m[G] & 255) << 24) |
                        ((m[G + 1] & 255) << 16) |
                        ((m[G + 2] & 255) << 8) |
                        (m[G + 3] & 255);
                      break;
                    case 1:
                      k =
                        ((m[G + 1] & 255) << 24) |
                        ((m[G + 2] & 255) << 16) |
                        ((m[G + 3] & 255) << 8) |
                        (m[G] & 255);
                      break;
                    case 2:
                      k =
                        ((m[G + 2] & 255) << 24) |
                        ((m[G + 1] & 255) << 16) |
                        ((m[G] & 255) << 8) |
                        (m[G + 3] & 255);
                  }
                  B &&
                    0 != (k & 255) &&
                    255 != (k & 255) &&
                    ((Q.unmult = 255 / (k & 255)),
                    (k =
                      ((Q.__clamp[Math.round(((k >>> 24) & 255) * Q.unmult)] &
                        255) <<
                        24) |
                      ((Q.__clamp[Math.round(((k >>> 16) & 255) * Q.unmult)] &
                        255) <<
                        16) |
                      ((Q.__clamp[Math.round(((k >>> 8) & 255) * Q.unmult)] &
                        255) <<
                        8) |
                      (k & 255)));
                  E = Math.round(((k & 255) / 255) * (t & 255));
                  t =
                    (((t >>> 24) & 255) << 24) |
                    (((t >>> 16) & 255) << 16) |
                    (((t >>> 8) & 255) << 8) |
                    (E & 255);
                  A = n;
                  B = x;
                  null == B && (B = !1);
                  null == A && (A = 0);
                  B &&
                    (0 == (t & 255)
                      ? 0 != t && (t = 0)
                      : 255 != (t & 255) &&
                        ((Q.a16 = Q.__alpha16[t & 255]),
                        (t =
                          ((((((t >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                          ((((((t >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                          ((((((t >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                          (t & 255))));
                  switch (A) {
                    case 0:
                      p[g] = (t >>> 24) & 255;
                      p[g + 1] = (t >>> 16) & 255;
                      p[g + 2] = (t >>> 8) & 255;
                      p[g + 3] = t & 255;
                      break;
                    case 1:
                      p[g] = t & 255;
                      p[g + 1] = (t >>> 24) & 255;
                      p[g + 2] = (t >>> 16) & 255;
                      p[g + 3] = (t >>> 8) & 255;
                      break;
                    case 2:
                      ((p[g] = (t >>> 8) & 255),
                        (p[g + 1] = (t >>> 16) & 255),
                        (p[g + 2] = (t >>> 24) & 255),
                        (p[g + 3] = t & 255));
                  }
                  d += 4;
                  g += 4;
                  G += 4;
                }
          else if (y)
            for (y = 0, C = l.height; y < C; ) {
              G = y++;
              d = c.byteOffset + c.stride * G;
              g = l.byteOffset + l.stride * G;
              for (var u = 0, v = l.width; u < v; ) {
                u++;
                A = h;
                B = r;
                null == B && (B = !1);
                null == A && (A = 0);
                switch (A) {
                  case 0:
                    t =
                      ((q[d] & 255) << 24) |
                      ((q[d + 1] & 255) << 16) |
                      ((q[d + 2] & 255) << 8) |
                      (q[d + 3] & 255);
                    break;
                  case 1:
                    t =
                      ((q[d + 1] & 255) << 24) |
                      ((q[d + 2] & 255) << 16) |
                      ((q[d + 3] & 255) << 8) |
                      (q[d] & 255);
                    break;
                  case 2:
                    t =
                      ((q[d + 2] & 255) << 24) |
                      ((q[d + 1] & 255) << 16) |
                      ((q[d] & 255) << 8) |
                      (q[d + 3] & 255);
                }
                B &&
                  0 != (t & 255) &&
                  255 != (t & 255) &&
                  ((Q.unmult = 255 / (t & 255)),
                  (t =
                    ((Q.__clamp[Math.round(((t >>> 24) & 255) * Q.unmult)] &
                      255) <<
                      24) |
                    ((Q.__clamp[Math.round(((t >>> 16) & 255) * Q.unmult)] &
                      255) <<
                      16) |
                    ((Q.__clamp[Math.round(((t >>> 8) & 255) * Q.unmult)] &
                      255) <<
                      8) |
                    (t & 255)));
                A = n;
                B = x;
                null == B && (B = !1);
                null == A && (A = 0);
                switch (A) {
                  case 0:
                    w =
                      ((p[g] & 255) << 24) |
                      ((p[g + 1] & 255) << 16) |
                      ((p[g + 2] & 255) << 8) |
                      (p[g + 3] & 255);
                    break;
                  case 1:
                    w =
                      ((p[g + 1] & 255) << 24) |
                      ((p[g + 2] & 255) << 16) |
                      ((p[g + 3] & 255) << 8) |
                      (p[g] & 255);
                    break;
                  case 2:
                    w =
                      ((p[g + 2] & 255) << 24) |
                      ((p[g + 1] & 255) << 16) |
                      ((p[g] & 255) << 8) |
                      (p[g + 3] & 255);
                }
                B &&
                  0 != (w & 255) &&
                  255 != (w & 255) &&
                  ((Q.unmult = 255 / (w & 255)),
                  (w =
                    ((Q.__clamp[Math.round(((w >>> 24) & 255) * Q.unmult)] &
                      255) <<
                      24) |
                    ((Q.__clamp[Math.round(((w >>> 16) & 255) * Q.unmult)] &
                      255) <<
                      16) |
                    ((Q.__clamp[Math.round(((w >>> 8) & 255) * Q.unmult)] &
                      255) <<
                      8) |
                    (w & 255)));
                B = (t & 255) / 255;
                N = (w & 255) / 255;
                L = 1 - B;
                A = B + N * L;
                if (0 == A) w = 0;
                else {
                  var E =
                    Q.__clamp[
                      Math.round(
                        (((t >>> 24) & 255) * B + ((w >>> 24) & 255) * N * L) /
                          A,
                      )
                    ];
                  w =
                    ((E & 255) << 24) |
                    (((w >>> 16) & 255) << 16) |
                    (((w >>> 8) & 255) << 8) |
                    (w & 255);
                  E =
                    Q.__clamp[
                      Math.round(
                        (((t >>> 16) & 255) * B + ((w >>> 16) & 255) * N * L) /
                          A,
                      )
                    ];
                  w =
                    (((w >>> 24) & 255) << 24) |
                    ((E & 255) << 16) |
                    (((w >>> 8) & 255) << 8) |
                    (w & 255);
                  B =
                    Q.__clamp[
                      Math.round(
                        (((t >>> 8) & 255) * B + ((w >>> 8) & 255) * N * L) / A,
                      )
                    ];
                  w =
                    (((w >>> 24) & 255) << 24) |
                    (((w >>> 16) & 255) << 16) |
                    ((B & 255) << 8) |
                    (w & 255);
                  A = Q.__clamp[Math.round(255 * A)];
                  w =
                    (((w >>> 24) & 255) << 24) |
                    (((w >>> 16) & 255) << 16) |
                    (((w >>> 8) & 255) << 8) |
                    (A & 255);
                }
                A = n;
                B = x;
                null == B && (B = !1);
                null == A && (A = 0);
                B &&
                  (0 == (w & 255)
                    ? 0 != w && (w = 0)
                    : 255 != (w & 255) &&
                      ((Q.a16 = Q.__alpha16[w & 255]),
                      (w =
                        ((((((w >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                        ((((((w >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                        ((((((w >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                        (w & 255))));
                switch (A) {
                  case 0:
                    p[g] = (w >>> 24) & 255;
                    p[g + 1] = (w >>> 16) & 255;
                    p[g + 2] = (w >>> 8) & 255;
                    p[g + 3] = w & 255;
                    break;
                  case 1:
                    p[g] = w & 255;
                    p[g + 1] = (w >>> 24) & 255;
                    p[g + 2] = (w >>> 16) & 255;
                    p[g + 3] = (w >>> 8) & 255;
                    break;
                  case 2:
                    ((p[g] = (w >>> 8) & 255),
                      (p[g + 1] = (w >>> 16) & 255),
                      (p[g + 2] = (w >>> 24) & 255),
                      (p[g + 3] = w & 255));
                }
                d += 4;
                g += 4;
              }
            }
          else if (h == n && r == x && C == m)
            for (y = 0, C = l.height; y < C; )
              ((G = y++),
                (d = c.byteOffset + c.stride * G),
                (g = l.byteOffset + l.stride * G),
                p.set(q.subarray(d, d + l.width * m), g));
          else
            for (y = 0, C = l.height; y < C; )
              for (
                G = y++,
                  d = c.byteOffset + c.stride * G,
                  g = l.byteOffset + l.stride * G,
                  u = 0,
                  v = l.width;
                u < v;

              ) {
                u++;
                A = h;
                B = r;
                null == B && (B = !1);
                null == A && (A = 0);
                switch (A) {
                  case 0:
                    t =
                      ((q[d] & 255) << 24) |
                      ((q[d + 1] & 255) << 16) |
                      ((q[d + 2] & 255) << 8) |
                      (q[d + 3] & 255);
                    break;
                  case 1:
                    t =
                      ((q[d + 1] & 255) << 24) |
                      ((q[d + 2] & 255) << 16) |
                      ((q[d + 3] & 255) << 8) |
                      (q[d] & 255);
                    break;
                  case 2:
                    t =
                      ((q[d + 2] & 255) << 24) |
                      ((q[d + 1] & 255) << 16) |
                      ((q[d] & 255) << 8) |
                      (q[d + 3] & 255);
                }
                B &&
                  0 != (t & 255) &&
                  255 != (t & 255) &&
                  ((Q.unmult = 255 / (t & 255)),
                  (t =
                    ((Q.__clamp[Math.round(((t >>> 24) & 255) * Q.unmult)] &
                      255) <<
                      24) |
                    ((Q.__clamp[Math.round(((t >>> 16) & 255) * Q.unmult)] &
                      255) <<
                      16) |
                    ((Q.__clamp[Math.round(((t >>> 8) & 255) * Q.unmult)] &
                      255) <<
                      8) |
                    (t & 255)));
                A = n;
                B = x;
                null == B && (B = !1);
                null == A && (A = 0);
                B &&
                  (0 == (t & 255)
                    ? 0 != t && (t = 0)
                    : 255 != (t & 255) &&
                      ((Q.a16 = Q.__alpha16[t & 255]),
                      (t =
                        ((((((t >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                        ((((((t >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                        ((((((t >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                        (t & 255))));
                switch (A) {
                  case 0:
                    p[g] = (t >>> 24) & 255;
                    p[g + 1] = (t >>> 16) & 255;
                    p[g + 2] = (t >>> 8) & 255;
                    p[g + 3] = t & 255;
                    break;
                  case 1:
                    p[g] = t & 255;
                    p[g + 1] = (t >>> 24) & 255;
                    p[g + 2] = (t >>> 16) & 255;
                    p[g + 3] = (t >>> 8) & 255;
                    break;
                  case 2:
                    ((p[g] = (t >>> 8) & 255),
                      (p[g + 1] = (t >>> 16) & 255),
                      (p[g + 2] = (t >>> 24) & 255),
                      (p[g + 3] = t & 255));
                }
                d += 4;
                g += 4;
              }
        }
        a.dirty = !0;
        a.version++;
      };
      fc.fillRect = function (a, b, c, d) {
        switch (d) {
          case 1:
            c =
              (((c >>> 16) & 255) << 24) |
              (((c >>> 8) & 255) << 16) |
              ((c & 255) << 8) |
              ((c >>> 24) & 255);
            break;
          case 2:
            c =
              (((c >>> 8) & 255) << 24) |
              (((c >>> 16) & 255) << 16) |
              (((c >>> 24) & 255) << 8) |
              (c & 255);
        }
        a.get_transparent() ||
          (c =
            (((c >>> 24) & 255) << 24) |
            (((c >>> 16) & 255) << 16) |
            (((c >>> 8) & 255) << 8) |
            255);
        var f = a.buffer.data;
        if (null != f) {
          d = a.buffer.format;
          var g = a.buffer.premultiplied;
          g &&
            (0 == (c & 255)
              ? 0 != c && (c = 0)
              : 255 != (c & 255) &&
                ((Q.a16 = Q.__alpha16[c & 255]),
                (c =
                  ((((((c >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                  ((((((c >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                  ((((((c >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                  (c & 255))));
          b = new Oe(a, b);
          for (var k, q = 0, p = b.height; q < p; ) {
            g = q++;
            k = b.byteOffset + b.stride * g;
            for (var l = 0, h = b.width; l < h; ) {
              g = l++;
              var n = k + 4 * g,
                t = d;
              g = !1;
              null == g && (g = !1);
              null == t && (t = 0);
              g &&
                (0 == (c & 255)
                  ? 0 != c && (c = 0)
                  : 255 != (c & 255) &&
                    ((Q.a16 = Q.__alpha16[c & 255]),
                    (c =
                      ((((((c >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                      ((((((c >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                      ((((((c >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                      (c & 255))));
              switch (t) {
                case 0:
                  f[n] = (c >>> 24) & 255;
                  f[n + 1] = (c >>> 16) & 255;
                  f[n + 2] = (c >>> 8) & 255;
                  f[n + 3] = c & 255;
                  break;
                case 1:
                  f[n] = c & 255;
                  f[n + 1] = (c >>> 24) & 255;
                  f[n + 2] = (c >>> 16) & 255;
                  f[n + 3] = (c >>> 8) & 255;
                  break;
                case 2:
                  ((f[n] = (c >>> 8) & 255),
                    (f[n + 1] = (c >>> 16) & 255),
                    (f[n + 2] = (c >>> 24) & 255),
                    (f[n + 3] = c & 255));
              }
            }
          }
          a.dirty = !0;
          a.version++;
        }
      };
      fc.gaussianBlur = function (a, b, c, d, f, g, k, q, p) {
        null == k && (k = 1);
        null == g && (g = 4);
        null == f && (f = 4);
        (q = a.get_premultiplied()) && a.set_premultiplied(!1);
        Bd.blur(a, b, c, d, f, g, k);
        a.dirty = !0;
        a.version++;
        q && a.set_premultiplied(!0);
        return a;
      };
      fc.getPixel = function (a, b, c, d) {
        var f = 0,
          g = a.buffer.data;
        b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        c = a.buffer.format;
        a = a.buffer.premultiplied;
        null == a && (a = !1);
        null == c && (c = 0);
        switch (c) {
          case 0:
            f =
              ((g[b] & 255) << 24) |
              ((g[b + 1] & 255) << 16) |
              ((g[b + 2] & 255) << 8) |
              (g[b + 3] & 255);
            break;
          case 1:
            f =
              ((g[b + 1] & 255) << 24) |
              ((g[b + 2] & 255) << 16) |
              ((g[b + 3] & 255) << 8) |
              (g[b] & 255);
            break;
          case 2:
            f =
              ((g[b + 2] & 255) << 24) |
              ((g[b + 1] & 255) << 16) |
              ((g[b] & 255) << 8) |
              (g[b + 3] & 255);
        }
        a &&
          0 != (f & 255) &&
          255 != (f & 255) &&
          ((Q.unmult = 255 / (f & 255)),
          (f =
            ((Q.__clamp[Math.round(((f >>> 24) & 255) * Q.unmult)] & 255) <<
              24) |
            ((Q.__clamp[Math.round(((f >>> 16) & 255) * Q.unmult)] & 255) <<
              16) |
            ((Q.__clamp[Math.round(((f >>> 8) & 255) * Q.unmult)] & 255) << 8) |
            (f & 255)));
        f =
          (((f >>> 24) & 255) << 24) |
          (((f >>> 16) & 255) << 16) |
          (((f >>> 8) & 255) << 8) |
          0;
        switch (d) {
          case 1:
            return (
              ((f & 255) << 24) |
              (((f >>> 24) & 255) << 16) |
              (((f >>> 16) & 255) << 8) |
              ((f >>> 8) & 255)
            );
          case 2:
            return (
              (((f >>> 8) & 255) << 24) |
              (((f >>> 16) & 255) << 16) |
              (((f >>> 24) & 255) << 8) |
              (f & 255)
            );
          default:
            return f;
        }
      };
      fc.getPixels = function (a, b, c) {
        if (null == a.buffer.data) return null;
        var d = new xb(new ArrayBuffer(4 * ((b.width * b.height) | 0))),
          f = a.buffer.data,
          g = a.buffer.format,
          k = a.buffer.premultiplied;
        a = new Oe(a, b);
        for (var q, p, l = (b = p = 0), h = a.height; l < h; ) {
          q = l++;
          q = a.byteOffset + a.stride * q;
          for (var n = 0, t = a.width; n < t; ) {
            n++;
            var w = g,
              r = k;
            null == r && (r = !1);
            null == w && (w = 0);
            switch (w) {
              case 0:
                p =
                  ((f[q] & 255) << 24) |
                  ((f[q + 1] & 255) << 16) |
                  ((f[q + 2] & 255) << 8) |
                  (f[q + 3] & 255);
                break;
              case 1:
                p =
                  ((f[q + 1] & 255) << 24) |
                  ((f[q + 2] & 255) << 16) |
                  ((f[q + 3] & 255) << 8) |
                  (f[q] & 255);
                break;
              case 2:
                p =
                  ((f[q + 2] & 255) << 24) |
                  ((f[q + 1] & 255) << 16) |
                  ((f[q] & 255) << 8) |
                  (f[q + 3] & 255);
            }
            r &&
              0 != (p & 255) &&
              255 != (p & 255) &&
              ((Q.unmult = 255 / (p & 255)),
              (p =
                ((Q.__clamp[Math.round(((p >>> 24) & 255) * Q.unmult)] & 255) <<
                  24) |
                ((Q.__clamp[Math.round(((p >>> 16) & 255) * Q.unmult)] & 255) <<
                  16) |
                ((Q.__clamp[Math.round(((p >>> 8) & 255) * Q.unmult)] & 255) <<
                  8) |
                (p & 255)));
            switch (c) {
              case 1:
                p =
                  ((p & 255) << 24) |
                  (((p >>> 24) & 255) << 16) |
                  (((p >>> 16) & 255) << 8) |
                  ((p >>> 8) & 255);
                break;
              case 2:
                p =
                  (((p >>> 8) & 255) << 24) |
                  (((p >>> 16) & 255) << 16) |
                  (((p >>> 24) & 255) << 8) |
                  (p & 255);
            }
            d.b[b++] = (p >>> 24) & 255;
            d.b[b++] = (p >>> 16) & 255;
            d.b[b++] = (p >>> 8) & 255;
            d.b[b++] = p & 255;
            q += 4;
          }
        }
        return d;
      };
      fc.multiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b && a.buffer.transparent) {
          for (
            var c = a.buffer.format, d = 0, f = 0, g = (b.length / 4) | 0;
            f < g;

          ) {
            var k = f++,
              q = 4 * k,
              p = c,
              l = !1;
            null == l && (l = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                d =
                  ((b[q] & 255) << 24) |
                  ((b[q + 1] & 255) << 16) |
                  ((b[q + 2] & 255) << 8) |
                  (b[q + 3] & 255);
                break;
              case 1:
                d =
                  ((b[q + 1] & 255) << 24) |
                  ((b[q + 2] & 255) << 16) |
                  ((b[q + 3] & 255) << 8) |
                  (b[q] & 255);
                break;
              case 2:
                d =
                  ((b[q + 2] & 255) << 24) |
                  ((b[q + 1] & 255) << 16) |
                  ((b[q] & 255) << 8) |
                  (b[q + 3] & 255);
            }
            l &&
              0 != (d & 255) &&
              255 != (d & 255) &&
              ((Q.unmult = 255 / (d & 255)),
              (d =
                ((Q.__clamp[Math.round(((d >>> 24) & 255) * Q.unmult)] & 255) <<
                  24) |
                ((Q.__clamp[Math.round(((d >>> 16) & 255) * Q.unmult)] & 255) <<
                  16) |
                ((Q.__clamp[Math.round(((d >>> 8) & 255) * Q.unmult)] & 255) <<
                  8) |
                (d & 255)));
            k *= 4;
            q = c;
            p = !0;
            null == p && (p = !1);
            null == q && (q = 0);
            p &&
              (0 == (d & 255)
                ? 0 != d && (d = 0)
                : 255 != (d & 255) &&
                  ((Q.a16 = Q.__alpha16[d & 255]),
                  (d =
                    ((((((d >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                    ((((((d >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                    ((((((d >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                    (d & 255))));
            switch (q) {
              case 0:
                b[k] = (d >>> 24) & 255;
                b[k + 1] = (d >>> 16) & 255;
                b[k + 2] = (d >>> 8) & 255;
                b[k + 3] = d & 255;
                break;
              case 1:
                b[k] = d & 255;
                b[k + 1] = (d >>> 24) & 255;
                b[k + 2] = (d >>> 16) & 255;
                b[k + 3] = (d >>> 8) & 255;
                break;
              case 2:
                ((b[k] = (d >>> 8) & 255),
                  (b[k + 1] = (d >>> 16) & 255),
                  (b[k + 2] = (d >>> 24) & 255),
                  (b[k + 3] = d & 255));
            }
          }
          a.buffer.premultiplied = !0;
          a.dirty = !0;
          a.version++;
        }
      };
      fc.setFormat = function (a, b) {
        var c = a.buffer.data;
        if (null != c) {
          var d = (c.length / 4) | 0;
          switch (a.get_format()) {
            case 0:
              var f = 0;
              var g = 1;
              var k = 2;
              var q = 3;
              break;
            case 1:
              f = 1;
              g = 2;
              k = 3;
              q = 0;
              break;
            case 2:
              ((f = 2), (g = 1), (k = 0), (q = 3));
          }
          switch (b) {
            case 0:
              var p = 0;
              var l = 1;
              var h = 2;
              var n = 3;
              break;
            case 1:
              p = 1;
              l = 2;
              h = 3;
              n = 0;
              break;
            case 2:
              ((p = 2), (l = 1), (h = 0), (n = 3));
          }
          for (var t = 0; t < d; ) {
            var w = 4 * t++;
            var r = c[w + f];
            var x = c[w + g];
            var m = c[w + k];
            var C = c[w + q];
            c[w + p] = r;
            c[w + l] = x;
            c[w + h] = m;
            c[w + n] = C;
          }
          a.buffer.format = b;
          a.dirty = !0;
          a.version++;
        }
      };
      fc.setPixel = function (a, b, c, d, f) {
        switch (f) {
          case 1:
            d =
              (((d >>> 16) & 255) << 24) |
              (((d >>> 8) & 255) << 16) |
              ((d & 255) << 8) |
              ((d >>> 24) & 255);
            break;
          case 2:
            d =
              (((d >>> 8) & 255) << 24) |
              (((d >>> 16) & 255) << 16) |
              (((d >>> 24) & 255) << 8) |
              (d & 255);
        }
        var g = 0,
          k = a.buffer.data,
          q = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        f = a.buffer.format;
        var p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == f && (f = 0);
        switch (f) {
          case 0:
            g =
              ((k[q] & 255) << 24) |
              ((k[q + 1] & 255) << 16) |
              ((k[q + 2] & 255) << 8) |
              (k[q + 3] & 255);
            break;
          case 1:
            g =
              ((k[q + 1] & 255) << 24) |
              ((k[q + 2] & 255) << 16) |
              ((k[q + 3] & 255) << 8) |
              (k[q] & 255);
            break;
          case 2:
            g =
              ((k[q + 2] & 255) << 24) |
              ((k[q + 1] & 255) << 16) |
              ((k[q] & 255) << 8) |
              (k[q + 3] & 255);
        }
        p &&
          0 != (g & 255) &&
          255 != (g & 255) &&
          ((Q.unmult = 255 / (g & 255)),
          (g =
            ((Q.__clamp[Math.round(((g >>> 24) & 255) * Q.unmult)] & 255) <<
              24) |
            ((Q.__clamp[Math.round(((g >>> 16) & 255) * Q.unmult)] & 255) <<
              16) |
            ((Q.__clamp[Math.round(((g >>> 8) & 255) * Q.unmult)] & 255) << 8) |
            (g & 255)));
        d =
          (((d >>> 24) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 8) & 255) << 8) |
          (g & 255);
        k = a.buffer.data;
        q = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        f = a.buffer.format;
        p = a.buffer.premultiplied;
        null == p && (p = !1);
        null == f && (f = 0);
        p &&
          (0 == (d & 255)
            ? 0 != d && (d = 0)
            : 255 != (d & 255) &&
              ((Q.a16 = Q.__alpha16[d & 255]),
              (d =
                ((((((d >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                ((((((d >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                ((((((d >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                (d & 255))));
        switch (f) {
          case 0:
            k[q] = (d >>> 24) & 255;
            k[q + 1] = (d >>> 16) & 255;
            k[q + 2] = (d >>> 8) & 255;
            k[q + 3] = d & 255;
            break;
          case 1:
            k[q] = d & 255;
            k[q + 1] = (d >>> 24) & 255;
            k[q + 2] = (d >>> 16) & 255;
            k[q + 3] = (d >>> 8) & 255;
            break;
          case 2:
            ((k[q] = (d >>> 8) & 255),
              (k[q + 1] = (d >>> 16) & 255),
              (k[q + 2] = (d >>> 24) & 255),
              (k[q + 3] = d & 255));
        }
        a.dirty = !0;
        a.version++;
      };
      fc.unmultiplyAlpha = function (a) {
        var b = a.buffer.data;
        if (null != b) {
          for (
            var c = a.buffer.format, d = 0, f = 0, g = (b.length / 4) | 0;
            f < g;

          ) {
            var k = f++,
              q = 4 * k,
              p = c,
              l = !0;
            null == l && (l = !1);
            null == p && (p = 0);
            switch (p) {
              case 0:
                d =
                  ((b[q] & 255) << 24) |
                  ((b[q + 1] & 255) << 16) |
                  ((b[q + 2] & 255) << 8) |
                  (b[q + 3] & 255);
                break;
              case 1:
                d =
                  ((b[q + 1] & 255) << 24) |
                  ((b[q + 2] & 255) << 16) |
                  ((b[q + 3] & 255) << 8) |
                  (b[q] & 255);
                break;
              case 2:
                d =
                  ((b[q + 2] & 255) << 24) |
                  ((b[q + 1] & 255) << 16) |
                  ((b[q] & 255) << 8) |
                  (b[q + 3] & 255);
            }
            l &&
              0 != (d & 255) &&
              255 != (d & 255) &&
              ((Q.unmult = 255 / (d & 255)),
              (d =
                ((Q.__clamp[Math.round(((d >>> 24) & 255) * Q.unmult)] & 255) <<
                  24) |
                ((Q.__clamp[Math.round(((d >>> 16) & 255) * Q.unmult)] & 255) <<
                  16) |
                ((Q.__clamp[Math.round(((d >>> 8) & 255) * Q.unmult)] & 255) <<
                  8) |
                (d & 255)));
            k *= 4;
            q = c;
            p = !1;
            null == p && (p = !1);
            null == q && (q = 0);
            p &&
              (0 == (d & 255)
                ? 0 != d && (d = 0)
                : 255 != (d & 255) &&
                  ((Q.a16 = Q.__alpha16[d & 255]),
                  (d =
                    ((((((d >>> 24) & 255) * Q.a16) >> 16) & 255) << 24) |
                    ((((((d >>> 16) & 255) * Q.a16) >> 16) & 255) << 16) |
                    ((((((d >>> 8) & 255) * Q.a16) >> 16) & 255) << 8) |
                    (d & 255))));
            switch (q) {
              case 0:
                b[k] = (d >>> 24) & 255;
                b[k + 1] = (d >>> 16) & 255;
                b[k + 2] = (d >>> 8) & 255;
                b[k + 3] = d & 255;
                break;
              case 1:
                b[k] = d & 255;
                b[k + 1] = (d >>> 24) & 255;
                b[k + 2] = (d >>> 16) & 255;
                b[k + 3] = (d >>> 8) & 255;
                break;
              case 2:
                ((b[k] = (d >>> 8) & 255),
                  (b[k + 1] = (d >>> 16) & 255),
                  (b[k + 2] = (d >>> 24) & 255),
                  (b[k + 3] = d & 255));
            }
          }
          a.buffer.premultiplied = !1;
          a.dirty = !0;
          a.version++;
        }
      };
      var Oe = function (a, b) {
        this.image = a;
        null == b
          ? (this.rect = a.get_rect())
          : (0 > b.x && (b.x = 0),
            0 > b.y && (b.y = 0),
            b.x + b.width > a.width && (b.width = a.width - b.x),
            b.y + b.height > a.height && (b.height = a.height - b.y),
            0 > b.width && (b.width = 0),
            0 > b.height && (b.height = 0),
            (this.rect = b));
        this.stride = a.buffer.get_stride();
        this.__update();
      };
      h['lime._internal.graphics._ImageDataUtil.ImageDataView'] = Oe;
      Oe.__name__ = 'lime._internal.graphics._ImageDataUtil.ImageDataView';
      Oe.prototype = {
        clip: function (a, b, c, d) {
          null == this.tempRect && (this.tempRect = new Gd());
          this.tempRect.setTo(a, b, c, d);
          this.rect.intersection(this.tempRect, this.rect);
          this.__update();
        },
        __update: function () {
          this.x = Math.ceil(this.rect.x);
          this.y = Math.ceil(this.rect.y);
          this.width = Math.floor(this.rect.width);
          this.height = Math.floor(this.rect.height);
          this.byteOffset =
            this.stride * (this.y + this.image.offsetY) +
            4 * (this.x + this.image.offsetX);
        },
        __class__: Oe,
      };
      var Bd = function () {};
      h['lime._internal.graphics.StackBlur'] = Bd;
      Bd.__name__ = 'lime._internal.graphics.StackBlur';
      Bd.blur = function (a, b, c, d, f, g, k) {
        a.copyPixels(b, c, d);
        Bd.__stackBlurCanvasRGBA(a, c.width | 0, c.height | 0, f, g, k);
      };
      Bd.__stackBlurCanvasRGBA = function (a, b, c, d, f, g) {
        d = Math.round(d) >> 1;
        f = Math.round(f) >> 1;
        if (
          null != Bd.MUL_TABLE &&
          (d >= Bd.MUL_TABLE.length && (d = Bd.MUL_TABLE.length - 1),
          f >= Bd.MUL_TABLE.length && (f = Bd.MUL_TABLE.length - 1),
          !(0 > d || 0 > f))
        ) {
          1 > g && (g = 1);
          3 < g && (g = 3);
          a = a.get_data();
          var k,
            q = d + d + 1;
          var p = f + f + 1;
          var l = b - 1,
            h = c - 1,
            n = d + 1,
            t = f + 1,
            w = new Ig(),
            r = w;
          var x = 1;
          for (var m = q; x < m; ) (x++, (r = r.n = new Ig()));
          r.n = w;
          var C = (q = new Ig());
          x = 1;
          for (m = p; x < m; ) (x++, (C = C.n = new Ig()));
          C.n = q;
          for (
            var G = Bd.MUL_TABLE[d],
              y = Bd.SHG_TABLE[d],
              A = Bd.MUL_TABLE[f],
              B = Bd.SHG_TABLE[f];
            0 < g;

          ) {
            --g;
            var N = (k = 0);
            var u = G,
              L = y;
            var v = c;
            do {
              var E = a[k];
              p = n * E;
              var D = a[k + 1];
              var wa = n * D;
              var J = a[k + 2];
              var P = n * J;
              x = a[k + 3];
              var I = n * x;
              r = w;
              C = n;
              do ((r.r = E), (r.g = D), (r.b = J), (r.a = x), (r = r.n));
              while (-1 < --C);
              x = 1;
              for (m = n; x < m; )
                ((C = x++),
                  (C = k + ((l < C ? l : C) << 2)),
                  (p += r.r = a[C]),
                  (wa += r.g = a[C + 1]),
                  (P += r.b = a[C + 2]),
                  (I += r.a = a[C + 3]),
                  (r = r.n));
              m = w;
              r = 0;
              for (x = b; r < x; )
                ((C = r++),
                  (a[k++] = (p * u) >>> L),
                  (a[k++] = (wa * u) >>> L),
                  (a[k++] = (P * u) >>> L),
                  (a[k++] = (I * u) >>> L),
                  (C = C + d + 1),
                  (C = (N + (C < l ? C : l)) << 2),
                  (p -= m.r - (m.r = a[C])),
                  (wa -= m.g - (m.g = a[C + 1])),
                  (P -= m.b - (m.b = a[C + 2])),
                  (I -= m.a - (m.a = a[C + 3])),
                  (m = m.n));
              N += b;
            } while (0 < --v);
            u = A;
            L = B;
            v = 0;
            for (N = b; v < N; ) {
              r = v++;
              k = r << 2;
              E = a[k];
              p = t * E;
              D = a[k + 1];
              wa = t * D;
              J = a[k + 2];
              P = t * J;
              x = a[k + 3];
              I = t * x;
              C = q;
              k = 0;
              for (m = t; k < m; )
                (k++, (C.r = E), (C.g = D), (C.b = J), (C.a = x), (C = C.n));
              x = b;
              m = 1;
              for (E = f + 1; m < E; )
                ((D = m++),
                  (k = (x + r) << 2),
                  (p += C.r = a[k]),
                  (wa += C.g = a[k + 1]),
                  (P += C.b = a[k + 2]),
                  (I += C.a = a[k + 3]),
                  (C = C.n),
                  D < h && (x += b));
              k = r;
              m = q;
              if (0 < g)
                for (E = 0, D = c; E < D; )
                  ((J = E++),
                    (C = k << 2),
                    (x = (I * u) >>> L),
                    (a[C + 3] = x),
                    0 < x
                      ? ((a[C] = (p * u) >>> L),
                        (a[C + 1] = (wa * u) >>> L),
                        (a[C + 2] = (P * u) >>> L))
                      : (a[C] = a[C + 1] = a[C + 2] = 0),
                    (C = J + t),
                    (C = (r + (C < h ? C : h) * b) << 2),
                    (p -= m.r - (m.r = a[C])),
                    (wa -= m.g - (m.g = a[C + 1])),
                    (P -= m.b - (m.b = a[C + 2])),
                    (I -= m.a - (m.a = a[C + 3])),
                    (m = m.n),
                    (k += b));
              else
                for (var Ta = 0, M = c; Ta < M; ) {
                  var ab = Ta++;
                  C = k << 2;
                  x = (I * u) >>> L;
                  a[C + 3] = x;
                  0 < x
                    ? ((x = 255 / x),
                      (E = (((p * u) >>> L) * x) | 0),
                      (D = (((wa * u) >>> L) * x) | 0),
                      (J = (((P * u) >>> L) * x) | 0),
                      (a[C] = 255 < E ? 255 : E),
                      (a[C + 1] = 255 < D ? 255 : D),
                      (a[C + 2] = 255 < J ? 255 : J))
                    : (a[C] = a[C + 1] = a[C + 2] = 0);
                  C = ab + t;
                  C = (r + (C < h ? C : h) * b) << 2;
                  p -= m.r - (m.r = a[C]);
                  wa -= m.g - (m.g = a[C + 1]);
                  P -= m.b - (m.b = a[C + 2]);
                  I -= m.a - (m.a = a[C + 3]);
                  m = m.n;
                  k += b;
                }
            }
          }
        }
      };
      var Ig = function () {
        this.a = this.b = this.g = this.r = 0;
        this.n = null;
      };
      h['lime._internal.graphics.BlurStack'] = Ig;
      Ig.__name__ = 'lime._internal.graphics.BlurStack';
      Ig.prototype = { __class__: Ig };
      var qc = function (a, b) {
        if (null != a)
          try {
            ((this.value = a()), (this.isComplete = !0));
          } catch (c) {
            ((Ua.lastError = c),
              (this.error = aa.caught(c).unwrap()),
              (this.isError = !0));
          }
      };
      h['lime.app.Future'] = qc;
      qc.__name__ = 'lime.app.Future';
      qc.withValue = function (a) {
        var b = new qc();
        b.isComplete = !0;
        b.value = a;
        return b;
      };
      qc.prototype = {
        onComplete: function (a) {
          null != a &&
            (this.isComplete
              ? a(this.value)
              : this.isError ||
                (null == this.__completeListeners &&
                  (this.__completeListeners = []),
                this.__completeListeners.push(a)));
          return this;
        },
        onError: function (a) {
          null != a &&
            (this.isError
              ? a(this.error)
              : this.isComplete ||
                (null == this.__errorListeners && (this.__errorListeners = []),
                this.__errorListeners.push(a)));
          return this;
        },
        onProgress: function (a) {
          null != a &&
            (null == this.__progressListeners &&
              (this.__progressListeners = []),
            this.__progressListeners.push(a));
          return this;
        },
        then: function (a) {
          if (this.isComplete) return a(this.value);
          if (this.isError) {
            var b = new qc();
            b.isError = !0;
            b.error = this.error;
            return b;
          }
          var c = new Ed();
          this.onError(m(c, c.error));
          this.onProgress(m(c, c.progress));
          this.onComplete(function (b) {
            b = a(b);
            b.onError(m(c, c.error));
            b.onComplete(m(c, c.complete));
          });
          return c.future;
        },
        __class__: qc,
      };
      var Ed = function () {
        this.future = new qc();
      };
      h['lime.app.Promise'] = Ed;
      Ed.__name__ = 'lime.app.Promise';
      Ed.prototype = {
        complete: function (a) {
          if (
            !this.future.isError &&
            ((this.future.isComplete = !0),
            (this.future.value = a),
            null != this.future.__completeListeners)
          ) {
            for (
              var b = 0, c = this.future.__completeListeners;
              b < c.length;

            ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__completeListeners = null;
          }
          return this;
        },
        completeWith: function (a) {
          a.onComplete(m(this, this.complete));
          a.onError(m(this, this.error));
          a.onProgress(m(this, this.progress));
          return this;
        },
        error: function (a) {
          if (
            !this.future.isComplete &&
            ((this.future.isError = !0),
            (this.future.error = a),
            null != this.future.__errorListeners)
          ) {
            for (var b = 0, c = this.future.__errorListeners; b < c.length; ) {
              var d = c[b];
              ++b;
              d(a);
            }
            this.future.__errorListeners = null;
          }
          return this;
        },
        progress: function (a, b) {
          if (
            !this.future.isError &&
            !this.future.isComplete &&
            null != this.future.__progressListeners
          )
            for (
              var c = 0, d = this.future.__progressListeners;
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              f(a, b);
            }
          return this;
        },
        __class__: Ed,
      };
      var xk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_Float_Void'] = xk;
      xk.__name__ = 'lime.app._Event_Float_Float_Float_Void';
      xk.prototype = {
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b, c), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: xk,
      };
      var yk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_Int_Void'] = yk;
      yk.__name__ = 'lime.app._Event_Float_Float_Int_Void';
      yk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b, c), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: yk,
      };
      var zh = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_Void'] = zh;
      zh.__name__ = 'lime.app._Event_Float_Float_Void';
      zh.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: zh,
      };
      var zk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_lime_ui_MouseButton_Void'] = zk;
      zk.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseButton_Void';
      zk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b, c), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: zk,
      };
      var Ak = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void'] = Ak;
      Ak.__name__ = 'lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void';
      Ak.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b, c) {
          this.canceled = !1;
          for (
            var d = this.__listeners, f = this.__repeat, g = 0;
            g < d.length &&
            (d[g](a, b, c), f[g] ? ++g : this.remove(d[g]), !this.canceled);

          );
        },
        __class__: Ak,
      };
      var Bk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_Float_Void'] = Bk;
      Bk.__name__ = 'lime.app._Event_Int_Float_Void';
      Bk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: Bk,
      };
      var Vi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_Int_Void'] = Vi;
      Vi.__name__ = 'lime.app._Event_Int_Int_Void';
      Vi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: Vi,
      };
      var Qf = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_Void'] = Qf;
      Qf.__name__ = 'lime.app._Event_Int_Void';
      Qf.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Qf,
      };
      var Ck = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Int_lime_ui_JoystickHatPosition_Void'] = Ck;
      Ck.__name__ = 'lime.app._Event_Int_lime_ui_JoystickHatPosition_Void';
      Ck.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: Ck,
      };
      var Dk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_String_Int_Int_Void'] = Dk;
      Dk.__name__ = 'lime.app._Event_String_Int_Int_Void';
      Dk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        __class__: Dk,
      };
      var Wi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_String_Void'] = Wi;
      Wi.__name__ = 'lime.app._Event_String_Void';
      Wi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        has: function (a) {
          for (var b = 0, c = this.__listeners; b < c.length; ) {
            var d = c[b];
            ++b;
            if (d == a) return !0;
          }
          return !1;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Wi,
      };
      var Cc = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_Void_Void'] = Cc;
      Cc.__name__ = 'lime.app._Event_Void_Void';
      Cc.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function () {
          this.canceled = !1;
          for (
            var a = this.__listeners, b = this.__repeat, c = 0;
            c < a.length &&
            (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled);

          );
        },
        __class__: Cc,
      };
      var Xi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_graphics_RenderContext_Void'] = Xi;
      Xi.__name__ = 'lime.app._Event_lime_graphics_RenderContext_Void';
      Xi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Xi,
      };
      var Ek = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_GamepadAxis_Float_Void'] = Ek;
      Ek.__name__ = 'lime.app._Event_lime_ui_GamepadAxis_Float_Void';
      Ek.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: Ek,
      };
      var Yi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_GamepadButton_Void'] = Yi;
      Yi.__name__ = 'lime.app._Event_lime_ui_GamepadButton_Void';
      Yi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Yi,
      };
      var Fk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Gamepad_Void'] = Fk;
      Fk.__name__ = 'lime.app._Event_lime_ui_Gamepad_Void';
      Fk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Fk,
      };
      var Gk = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Joystick_Void'] = Gk;
      Gk.__name__ = 'lime.app._Event_lime_ui_Joystick_Void';
      Gk.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Gk,
      };
      var Zi = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void'] = Zi;
      Zi.__name__ = 'lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void';
      Zi.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        cancel: function () {
          this.canceled = !0;
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a, b) {
          this.canceled = !1;
          for (
            var c = this.__listeners, d = this.__repeat, f = 0;
            f < c.length &&
            (c[f](a, b), d[f] ? ++f : this.remove(c[f]), !this.canceled);

          );
        },
        __class__: Zi,
      };
      var Jg = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Touch_Void'] = Jg;
      Jg.__name__ = 'lime.app._Event_lime_ui_Touch_Void';
      Jg.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Jg,
      };
      var Yj = function () {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = [];
      };
      h['lime.app._Event_lime_ui_Window_Void'] = Yj;
      Yj.__name__ = 'lime.app._Event_lime_ui_Window_Void';
      Yj.prototype = {
        add: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, f = this.__priorities.length; d < f; ) {
            var g = d++;
            if (c > this.__priorities[g]) {
              this.__listeners.splice(g, 0, a);
              this.__priorities.splice(g, 0, c);
              this.__repeat.splice(g, 0, !b);
              return;
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b);
        },
        remove: function (a) {
          for (var b = this.__listeners.length; 0 <= --b; )
            this.__listeners[b] == a &&
              (this.__listeners.splice(b, 1),
              this.__priorities.splice(b, 1),
              this.__repeat.splice(b, 1));
        },
        dispatch: function (a) {
          this.canceled = !1;
          for (
            var b = this.__listeners, c = this.__repeat, d = 0;
            d < b.length &&
            (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

          );
        },
        __class__: Yj,
      };
      var ke = (L['lime.graphics.ImageChannel'] = {
        __ename__: 'lime.graphics.ImageChannel',
        __constructs__: null,
        RED: {
          _hx_name: 'RED',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
        GREEN: {
          _hx_name: 'GREEN',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
        BLUE: {
          _hx_name: 'BLUE',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
        ALPHA: {
          _hx_name: 'ALPHA',
          _hx_index: 3,
          __enum__: 'lime.graphics.ImageChannel',
          toString: r,
        },
      });
      ke.__constructs__ = [ke.RED, ke.GREEN, ke.BLUE, ke.ALPHA];
      ke.__empty_constructs__ = [ke.RED, ke.GREEN, ke.BLUE, ke.ALPHA];
      var wf = (L['lime.graphics.ImageFileFormat'] = {
        __ename__: 'lime.graphics.ImageFileFormat',
        __constructs__: null,
        BMP: {
          _hx_name: 'BMP',
          _hx_index: 0,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: r,
        },
        JPEG: {
          _hx_name: 'JPEG',
          _hx_index: 1,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: r,
        },
        PNG: {
          _hx_name: 'PNG',
          _hx_index: 2,
          __enum__: 'lime.graphics.ImageFileFormat',
          toString: r,
        },
      });
      wf.__constructs__ = [wf.BMP, wf.JPEG, wf.PNG];
      wf.__empty_constructs__ = [wf.BMP, wf.JPEG, wf.PNG];
      var wk = function () {};
      h['lime.graphics.RenderContext'] = wk;
      wk.__name__ = 'lime.graphics.RenderContext';
      wk.prototype = { __class__: wk };
      var Ql = {
          uniform2fv: function (a, b, c, d, f) {
            null != d ? a.uniform2fv(b, c, d, f) : a.uniform2fv(b, c);
          },
        },
        Nc = {
          bufferData: function (a, b, c, d) {
            a.bufferData(b, c, d);
          },
          texImage2D: function (a, b, c, d, f, g, k, q, p, l) {
            null != q
              ? a.texImage2D(b, c, d, f, g, k, q, p, l)
              : a.texImage2D(b, c, d, f, g, k);
          },
          uniformMatrix2fv: function (a, b, c, d) {
            a.uniformMatrix2fv(b, c, d);
          },
          uniformMatrix3fv: function (a, b, c, d) {
            a.uniformMatrix3fv(b, c, d);
          },
          uniformMatrix4fv: function (a, b, c, d) {
            a.uniformMatrix4fv(b, c, d);
          },
          fromWebGL2RenderContext: function (a) {
            return a;
          },
        },
        ql = function (a) {};
      h['lime.graphics.cairo.Cairo'] = ql;
      ql.__name__ = 'lime.graphics.cairo.Cairo';
      ql.prototype = {
        clip: function () {},
        identityMatrix: function () {},
        newPath: function () {},
        paint: function () {},
        rectangle: function (a, b, c, d) {},
        restore: function () {},
        save: function () {},
        setOperator: function (a) {
          return a;
        },
        setSourceRGB: function (a, b, c) {},
        set_matrix: function (a) {
          return a;
        },
        __class__: ql,
        __properties__: { set_matrix: 'set_matrix' },
      };
      var Kl = { flush: function (a) {} },
        gf = function () {};
      h['lime.graphics.opengl.GL'] = gf;
      gf.__name__ = 'lime.graphics.opengl.GL';
      var rl = function () {
        this.STACK_UNDERFLOW = 1284;
        this.STACK_OVERFLOW = 1283;
        this.CONTEXT_FLAG_DEBUG_BIT = 2;
        this.DEBUG_OUTPUT = 37600;
        this.DEBUG_SEVERITY_LOW = 37192;
        this.DEBUG_SEVERITY_MEDIUM = 37191;
        this.DEBUG_SEVERITY_HIGH = 37190;
        this.DEBUG_LOGGED_MESSAGES = 37189;
        this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
        this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
        this.MAX_LABEL_LENGTH = 33512;
        this.SAMPLER = 33510;
        this.QUERY = 33507;
        this.PROGRAM = 33506;
        this.SHADER = 33505;
        this.BUFFER = 33504;
        this.DEBUG_GROUP_STACK_DEPTH = 33389;
        this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
        this.DEBUG_SEVERITY_NOTIFICATION = 33387;
        this.DEBUG_TYPE_POP_GROUP = 33386;
        this.DEBUG_TYPE_PUSH_GROUP = 33385;
        this.DEBUG_TYPE_MARKER = 33384;
        this.DEBUG_TYPE_OTHER = 33361;
        this.DEBUG_TYPE_PERFORMANCE = 33360;
        this.DEBUG_TYPE_PORTABILITY = 33359;
        this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
        this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
        this.DEBUG_TYPE_ERROR = 33356;
        this.DEBUG_SOURCE_OTHER = 33355;
        this.DEBUG_SOURCE_APPLICATION = 33354;
        this.DEBUG_SOURCE_THIRD_PARTY = 33353;
        this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
        this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
        this.DEBUG_SOURCE_API = 33350;
        this.DEBUG_CALLBACK_USER_PARAM = 33349;
        this.DEBUG_CALLBACK_FUNCTION = 33348;
        this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
        this.DEBUG_OUTPUT_SYNCHRONOUS = 33346;
      };
      h['lime.graphics.opengl.ext.KHR_debug'] = rl;
      rl.__name__ = 'lime.graphics.opengl.ext.KHR_debug';
      rl.prototype = { __class__: rl };
      var Rc = {
          getAlphaTable: function (a) {
            null == Rc.__alphaTable && (Rc.__alphaTable = new Uint8Array(256));
            Rc.__alphaTable[0] = 0;
            for (var b = 1; 256 > b; ) {
              var c = b++;
              var d = Math.floor(c * a[18] + 255 * a[19]);
              255 < d && (d = 255);
              0 > d && (d = 0);
              Rc.__alphaTable[c] = d;
            }
            return Rc.__alphaTable;
          },
          getBlueTable: function (a) {
            null == Rc.__blueTable && (Rc.__blueTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[12] + 255 * a[14]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Rc.__blueTable[d] = b;
            }
            return Rc.__blueTable;
          },
          getGreenTable: function (a) {
            null == Rc.__greenTable && (Rc.__greenTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[6] + 255 * a[9]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Rc.__greenTable[d] = b;
            }
            return Rc.__greenTable;
          },
          getRedTable: function (a) {
            null == Rc.__redTable && (Rc.__redTable = new Uint8Array(256));
            for (var b, c = 0; 256 > c; ) {
              var d = c++;
              b = Math.floor(d * a[0] + 255 * a[4]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Rc.__redTable[d] = b;
            }
            return Rc.__redTable;
          },
          __toFlashColorTransform: function (a) {
            return null;
          },
        },
        mb = {
          _new: function (a) {
            if (null == a || 16 != a.length)
              ((a = mb.__identity),
                (a = null != a ? new Float32Array(a) : null));
            return a;
          },
          append: function (a, b) {
            var c = a[0],
              d = a[4],
              f = a[8],
              g = a[12],
              k = a[1],
              q = a[5],
              p = a[9],
              l = a[13],
              h = a[2],
              n = a[6],
              t = a[10],
              w = a[14],
              r = a[3],
              x = a[7],
              C = a[11],
              m = a[15],
              G = mb.get(b, 0),
              y = mb.get(b, 4),
              A = mb.get(b, 8),
              B = mb.get(b, 12),
              N = mb.get(b, 1),
              u = mb.get(b, 5),
              L = mb.get(b, 9),
              v = mb.get(b, 13),
              E = mb.get(b, 2),
              D = mb.get(b, 6),
              wa = mb.get(b, 10),
              J = mb.get(b, 14),
              P = mb.get(b, 3),
              I = mb.get(b, 7),
              Ta = mb.get(b, 11);
            b = mb.get(b, 15);
            a[0] = c * G + k * y + h * A + r * B;
            a[1] = c * N + k * u + h * L + r * v;
            a[2] = c * E + k * D + h * wa + r * J;
            a[3] = c * P + k * I + h * Ta + r * b;
            a[4] = d * G + q * y + n * A + x * B;
            a[5] = d * N + q * u + n * L + x * v;
            a[6] = d * E + q * D + n * wa + x * J;
            a[7] = d * P + q * I + n * Ta + x * b;
            a[8] = f * G + p * y + t * A + C * B;
            a[9] = f * N + p * u + t * L + C * v;
            a[10] = f * E + p * D + t * wa + C * J;
            a[11] = f * P + p * I + t * Ta + C * b;
            a[12] = g * G + l * y + w * A + m * B;
            a[13] = g * N + l * u + w * L + m * v;
            a[14] = g * E + l * D + w * wa + m * J;
            a[15] = g * P + l * I + w * Ta + m * b;
          },
          createOrtho: function (a, b, c, d, f, g, k) {
            var q = 1 / (c - b),
              p = 1 / (f - d),
              l = 1 / (k - g);
            a[0] = 2 * q;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 2 * p;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = -2 * l;
            a[11] = 0;
            a[12] = -(b + c) * q;
            a[13] = -(d + f) * p;
            a[14] = -(g + k) * l;
            a[15] = 1;
          },
          identity: function (a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 1;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = 0;
            a[13] = 0;
            a[14] = 0;
            a[15] = 1;
          },
          get: function (a, b) {
            return a[b];
          },
          set: function (a, b, c) {
            return (a[b] = c);
          },
        },
        Q = {},
        uk = function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.w = d;
          this.x = a;
          this.y = b;
          this.z = c;
        };
      h['lime.math.Vector4'] = uk;
      uk.__name__ = 'lime.math.Vector4';
      uk.prototype = { __class__: uk };
      var Dc = function () {};
      h['lime.media.AudioBuffer'] = Dc;
      Dc.__name__ = 'lime.media.AudioBuffer';
      Dc.fromBytes = function (a) {
        if (null == a) return null;
        var b = new Dc();
        b.set_src(
          new Howl({
            src: ['data:' + Dc.__getCodec(a) + ';base64,' + Ie.encode(a)],
            html5: !0,
            preload: !1,
          }),
        );
        return b;
      };
      Dc.fromFile = function (a) {
        if (null == a) return null;
        var b = new Dc();
        b.__srcHowl = new Howl({ src: [a], preload: !1 });
        return b;
      };
      Dc.fromFiles = function (a) {
        var b = new Dc();
        b.__srcHowl = new Howl({ src: a, preload: !1 });
        return b;
      };
      Dc.loadFromFile = function (a) {
        var b = new Ed(),
          c = Dc.fromFile(a);
        null != c
          ? null != c &&
            (c.__srcHowl.on('load', function () {
              b.complete(c);
            }),
            c.__srcHowl.on('loaderror', function (a, c) {
              b.error(c);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      Dc.loadFromFiles = function (a) {
        var b = new Ed(),
          c = Dc.fromFiles(a);
        null != c
          ? (c.__srcHowl.on('load', function () {
              b.complete(c);
            }),
            c.__srcHowl.on('loaderror', function () {
              b.error(null);
            }),
            c.__srcHowl.load())
          : b.error(null);
        return b.future;
      };
      Dc.__getCodec = function (a) {
        switch (a.getString(0, 4)) {
          case 'OggS':
            return 'audio/ogg';
          case 'RIFF':
            if ('WAVE' == a.getString(8, 4)) return 'audio/wav';
            var b = a.b[1],
              c = a.b[2];
            switch (a.b[0]) {
              case 73:
                if (68 == b && 51 == c) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
            break;
          case 'fLaC':
            return 'audio/flac';
          default:
            switch (((b = a.b[1]), (c = a.b[2]), a.b[0])) {
              case 73:
                if (68 == b && 51 == c) return 'audio/mp3';
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return 'audio/mp3';
                }
            }
        }
        La.error('Unsupported sound format', {
          fileName: 'lime/media/AudioBuffer.hx',
          lineNumber: 440,
          className: 'lime.media.AudioBuffer',
          methodName: '__getCodec',
        });
        return null;
      };
      Dc.prototype = {
        set_src: function (a) {
          return (this.__srcHowl = a);
        },
        __class__: Dc,
        __properties__: { set_src: 'set_src' },
      };
      var Ik = function (a) {
        if ('custom' != a) {
          if (null == a || 'web' == a)
            try {
              ((window.AudioContext =
                window.AudioContext || window.webkitAudioContext),
                (this.web = new window.AudioContext()),
                (this.type = 'web'));
            } catch (b) {
              Ua.lastError = b;
            }
          null == this.web &&
            'web' != a &&
            ((this.html5 = new Hk()), (this.type = 'html5'));
        } else this.type = 'custom';
      };
      h['lime.media.AudioContext'] = Ik;
      Ik.__name__ = 'lime.media.AudioContext';
      Ik.prototype = { __class__: Ik };
      var Re = function () {};
      h['lime.media.AudioManager'] = Re;
      Re.__name__ = 'lime.media.AudioManager';
      Re.init = function (a) {
        if (null == Re.context) {
          if (
            null == a &&
            ((Re.context = new Ik()), (a = Re.context), 'openal' == a.type)
          ) {
            var b = a.openal,
              c = b.openDevice();
            c = b.createContext(c);
            b.makeContextCurrent(c);
            b.processContext(c);
          }
          Re.context = a;
        }
      };
      var sl = function (a, b, c, d) {
        null == d && (d = 0);
        null == b && (b = 0);
        this.onComplete = new Cc();
        this.buffer = a;
        this.offset = b;
        this.__backend = new vk(this);
        null != c && 0 != c && this.set_length(c);
        this.set_loops(d);
        null != a && this.init();
      };
      h['lime.media.AudioSource'] = sl;
      sl.__name__ = 'lime.media.AudioSource';
      sl.prototype = {
        dispose: function () {
          this.__backend.dispose();
        },
        init: function () {
          this.__backend.init();
        },
        play: function () {
          this.__backend.play();
        },
        stop: function () {
          this.__backend.stop();
        },
        get_currentTime: function () {
          return this.__backend.getCurrentTime();
        },
        set_currentTime: function (a) {
          return this.__backend.setCurrentTime(a);
        },
        get_gain: function () {
          return this.__backend.getGain();
        },
        set_gain: function (a) {
          return this.__backend.setGain(a);
        },
        set_length: function (a) {
          return this.__backend.setLength(a);
        },
        set_loops: function (a) {
          return this.__backend.setLoops(a);
        },
        get_position: function () {
          return this.__backend.getPosition();
        },
        set_position: function (a) {
          return this.__backend.setPosition(a);
        },
        __class__: sl,
        __properties__: {
          set_loops: 'set_loops',
          set_length: 'set_length',
          set_position: 'set_position',
          get_position: 'get_position',
          set_gain: 'set_gain',
          get_gain: 'get_gain',
          set_currentTime: 'set_currentTime',
          get_currentTime: 'get_currentTime',
        },
      };
      var Hk = function () {};
      h['lime.media.HTML5AudioContext'] = Hk;
      Hk.__name__ = 'lime.media.HTML5AudioContext';
      Hk.prototype = { __class__: Hk };
      var tl = function () {};
      h['lime.media.OpenALAudioContext'] = tl;
      tl.__name__ = 'lime.media.OpenALAudioContext';
      tl.prototype = {
        createContext: function (a, b) {
          return Hf.createContext(a, b);
        },
        makeContextCurrent: function (a) {
          return Hf.makeContextCurrent(a);
        },
        openDevice: function (a) {
          return Hf.openDevice(a);
        },
        processContext: function (a) {
          Hf.processContext(a);
        },
        __class__: tl,
      };
      var Hf = function () {};
      h['lime.media.openal.ALC'] = Hf;
      Hf.__name__ = 'lime.media.openal.ALC';
      Hf.createContext = function (a, b) {
        return null;
      };
      Hf.makeContextCurrent = function (a) {
        return !1;
      };
      Hf.openDevice = function (a) {
        return null;
      };
      Hf.processContext = function (a) {};
      var $i = function () {};
      h['lime.net._IHTTPRequest'] = $i;
      $i.__name__ = 'lime.net._IHTTPRequest';
      $i.__isInterface__ = !0;
      $i.prototype = { __class__: $i };
      var xe = function (a) {
        this.uri = a;
        this.contentType = 'application/x-www-form-urlencoded';
        this.followRedirects = !0;
        this.enableResponseHeaders = !1;
        this.formData = new Ja();
        this.headers = [];
        this.method = 'GET';
        this.timeout = 3e4;
        this.withCredentials = !1;
        this.manageCookies = !0;
        this.__backend = new Ga();
        this.__backend.init(this);
      };
      h['lime.net._HTTPRequest.AbstractHTTPRequest'] = xe;
      xe.__name__ = 'lime.net._HTTPRequest.AbstractHTTPRequest';
      xe.__interfaces__ = [$i];
      xe.prototype = { __class__: xe };
      var If = function (a) {
        xe.call(this, a);
      };
      h['lime.net._HTTPRequest_Bytes'] = If;
      If.__name__ = 'lime.net._HTTPRequest_Bytes';
      If.__super__ = xe;
      If.prototype = u(xe.prototype, {
        fromBytes: function (a) {
          return a;
        },
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new Ed();
          a = this.__backend.loadData(this.uri);
          a.onProgress(m(c, c.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            c.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = b.fromBytes(a);
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: If,
      });
      var Kg = function (a) {
        xe.call(this, a);
      };
      h['lime.net._HTTPRequest_String'] = Kg;
      Kg.__name__ = 'lime.net._HTTPRequest_String';
      Kg.__super__ = xe;
      Kg.prototype = u(xe.prototype, {
        load: function (a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new Ed();
          a = this.__backend.loadText(this.uri);
          a.onProgress(m(c, c.progress));
          a.onError(function (a) {
            b.responseData = a.responseData;
            c.error(a.error);
          });
          a.onComplete(function (a) {
            b.responseData = a;
            c.complete(b.responseData);
          });
          return c.future;
        },
        __class__: Kg,
      });
      var Hg = function (a, b) {
        this.error = a;
        this.responseData = b;
      };
      h['lime.net._HTTPRequestErrorResponse'] = Hg;
      Hg.__name__ = 'lime.net._HTTPRequestErrorResponse';
      Hg.prototype = { __class__: Hg };
      var Ui = function (a, b) {
        null == b && (b = '');
        this.name = a;
        this.value = b;
      };
      h['lime.net.HTTPRequestHeader'] = Ui;
      Ui.__name__ = 'lime.net.HTTPRequestHeader';
      Ui.prototype = { __class__: Ui };
      var aj = function (a) {
        xe.call(this, a);
      };
      h['lime.net._HTTPRequest_lime_utils_Bytes'] = aj;
      aj.__name__ = 'lime.net._HTTPRequest_lime_utils_Bytes';
      aj.__super__ = If;
      aj.prototype = u(If.prototype, {
        fromBytes: function (a) {
          return dg.fromBytes(a);
        },
        __class__: aj,
      });
      var bj = function (a) {
        xe.call(this, a);
      };
      h['lime.net._HTTPRequest_openfl_utils_ByteArray'] = bj;
      bj.__name__ = 'lime.net._HTTPRequest_openfl_utils_ByteArray';
      bj.__super__ = If;
      bj.prototype = u(If.prototype, {
        fromBytes: function (a) {
          return Nd.fromBytes(a);
        },
        __class__: bj,
      });
      var zc = function () {};
      h['lime.system.Clipboard'] = zc;
      zc.__name__ = 'lime.system.Clipboard';
      zc.__properties__ = { set_text: 'set_text', get_text: 'get_text' };
      zc.__update = function () {
        var a = zc._text;
        zc._text = a;
        zc.__updated = !0;
        zc._text != a && zc.onUpdate.dispatch();
      };
      zc.get_text = function () {
        zc.__update();
        return zc._text;
      };
      zc.set_text = function (a) {
        var b = zc._text;
        zc._text = a;
        var c = F.current.__window;
        null != c && c.__backend.setClipboard(a);
        zc._text != b && zc.onUpdate.dispatch();
        return a;
      };
      var eg = (L['lime.system.Endian'] = {
        __ename__: 'lime.system.Endian',
        __constructs__: null,
        LITTLE_ENDIAN: {
          _hx_name: 'LITTLE_ENDIAN',
          _hx_index: 0,
          __enum__: 'lime.system.Endian',
          toString: r,
        },
        BIG_ENDIAN: {
          _hx_name: 'BIG_ENDIAN',
          _hx_index: 1,
          __enum__: 'lime.system.Endian',
          toString: r,
        },
      });
      eg.__constructs__ = [eg.LITTLE_ENDIAN, eg.BIG_ENDIAN];
      eg.__empty_constructs__ = [eg.LITTLE_ENDIAN, eg.BIG_ENDIAN];
      var Se = function (a, b) {
        this.onUpdate = new xk();
        this.type = a;
        this.id = b;
      };
      h['lime.system.Sensor'] = Se;
      Se.__name__ = 'lime.system.Sensor';
      Se.registerSensor = function (a, b) {
        a = new Se(a, b);
        Se.sensors.push(a);
        return (Se.sensorByID.h[b] = a);
      };
      Se.prototype = { __class__: Se };
      var Wj = (L['lime.system.SensorType'] = {
        __ename__: 'lime.system.SensorType',
        __constructs__: null,
        ACCELEROMETER: {
          _hx_name: 'ACCELEROMETER',
          _hx_index: 0,
          __enum__: 'lime.system.SensorType',
          toString: r,
        },
      });
      Wj.__constructs__ = [Wj.ACCELEROMETER];
      Wj.__empty_constructs__ = [Wj.ACCELEROMETER];
      var Ec = function () {};
      h['lime.system.System'] = Ec;
      Ec.__name__ = 'lime.system.System';
      Ec.__properties__ = { get_endianness: 'get_endianness' };
      Ec.embed = v.lime.embed = function (a, b, c, d, f) {
        if (
          null != Ec.__applicationEntryPoint &&
          Object.prototype.hasOwnProperty.call(Ec.__applicationEntryPoint.h, a)
        ) {
          var g =
            'string' == typeof b
              ? window.document.getElementById(b)
              : null == b
                ? window.document.createElement('div')
                : b;
          null == g
            ? window.console.log(
                '[lime.embed] ERROR: Cannot find target element: ' +
                  I.string(b),
              )
            : (null == c && (c = 0),
              null == d && (d = 0),
              null == f && (f = {}),
              Object.prototype.hasOwnProperty.call(f, 'background') &&
                'string' == typeof f.background &&
                ((b = P.replace(I.string(f.background), '#', '')),
                -1 < b.indexOf('0x')
                  ? (f.background = I.parseInt(b))
                  : (f.background = I.parseInt('0x' + b))),
              (f.element = g),
              (f.width = c),
              (f.height = d),
              Ec.__applicationEntryPoint.h[a](f));
        }
      };
      Ec.exit = function (a) {
        var b = F.current;
        if (null != b && (b.onExit.dispatch(a), b.onExit.canceled)) return;
        null != b && null != b.__window && b.__window.close();
      };
      Ec.getTimer = function () {
        return window.performance.now() | 0;
      };
      Ec.openURL = function (a, b) {
        null == b && (b = '_blank');
        null != a && window.open(a, b);
      };
      Ec.__registerEntryPoint = function (a, b) {
        null == Ec.__applicationEntryPoint &&
          (Ec.__applicationEntryPoint = new Ja());
        Ec.__applicationEntryPoint.h[a] = b;
      };
      Ec.get_endianness = function () {
        if (null == Ec.__endianness) {
          var a = new ArrayBuffer(2),
            b = null,
            c = null,
            d = null,
            f = null,
            g = null,
            k = (b =
              null != b
                ? new Uint8Array(b)
                : null != c
                  ? new Uint8Array(c)
                  : null != d
                    ? new Uint8Array(d.__array)
                    : null != f
                      ? new Uint8Array(f)
                      : null != a
                        ? null == g
                          ? new Uint8Array(a, 0)
                          : new Uint8Array(a, 0, g)
                        : null);
          g = f = d = c = b = null;
          b =
            null != b
              ? new Uint16Array(b)
              : null != c
                ? new Uint16Array(c)
                : null != d
                  ? new Uint16Array(d.__array)
                  : null != f
                    ? new Uint16Array(f)
                    : null != a
                      ? null == g
                        ? new Uint16Array(a, 0)
                        : new Uint16Array(a, 0, g)
                      : null;
          k[0] = 170;
          k[1] = 187;
          Ec.__endianness = 43707 == b[0] ? eg.BIG_ENDIAN : eg.LITTLE_ENDIAN;
        }
        return Ec.__endianness;
      };
      var uc = function (a) {
        this.onDisconnect = new Cc();
        this.onButtonUp = new Yi();
        this.onButtonDown = new Yi();
        this.onAxisMove = new Ek();
        this.id = a;
        this.connected = !0;
      };
      h['lime.ui.Gamepad'] = uc;
      uc.__name__ = 'lime.ui.Gamepad';
      uc.__connect = function (a) {
        if (!uc.devices.h.hasOwnProperty(a)) {
          var b = new uc(a);
          uc.devices.h[a] = b;
          uc.onConnect.dispatch(b);
        }
      };
      uc.__disconnect = function (a) {
        var b = uc.devices.h[a];
        null != b && (b.connected = !1);
        uc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      uc.prototype = { __class__: uc };
      var pc = function (a) {
        this.onHatMove = new Ck();
        this.onDisconnect = new Cc();
        this.onButtonUp = new Qf();
        this.onButtonDown = new Qf();
        this.onAxisMove = new Bk();
        this.id = a;
        this.connected = !0;
      };
      h['lime.ui.Joystick'] = pc;
      pc.__name__ = 'lime.ui.Joystick';
      pc.__connect = function (a) {
        if (!pc.devices.h.hasOwnProperty(a)) {
          var b = new pc(a);
          pc.devices.h[a] = b;
          pc.onConnect.dispatch(b);
        }
      };
      pc.__disconnect = function (a) {
        var b = pc.devices.h[a];
        null != b && (b.connected = !1);
        pc.devices.remove(a);
        null != b && b.onDisconnect.dispatch();
      };
      pc.__getDeviceData = function () {
        var a = null;
        try {
          a = navigator.getGamepads
            ? navigator.getGamepads()
            : navigator.webkitGetGamepads
              ? navigator.webkitGetGamepads()
              : null;
        } catch (b) {
          Ua.lastError = b;
        }
        return a;
      };
      pc.prototype = { __class__: pc };
      var fb = {
          __properties__: {
            get_shiftKey: 'get_shiftKey',
            get_metaKey: 'get_metaKey',
            get_ctrlKey: 'get_ctrlKey',
            get_altKey: 'get_altKey',
          },
          get_altKey: function (a) {
            return 0 >= (a & 256) ? 0 < (a & 512) : !0;
          },
          get_ctrlKey: function (a) {
            return 0 >= (a & 64) ? 0 < (a & 128) : !0;
          },
          get_metaKey: function (a) {
            return 0 >= (a & 1024) ? 0 < (a & 2048) : !0;
          },
          get_shiftKey: function (a) {
            return 0 >= (a & 1) ? 0 < (a & 2) : !0;
          },
        },
        tb = (L['lime.ui.MouseCursor'] = {
          __ename__: 'lime.ui.MouseCursor',
          __constructs__: null,
          ARROW: {
            _hx_name: 'ARROW',
            _hx_index: 0,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          CROSSHAIR: {
            _hx_name: 'CROSSHAIR',
            _hx_index: 1,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          DEFAULT: {
            _hx_name: 'DEFAULT',
            _hx_index: 2,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          MOVE: {
            _hx_name: 'MOVE',
            _hx_index: 3,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          POINTER: {
            _hx_name: 'POINTER',
            _hx_index: 4,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_NESW: {
            _hx_name: 'RESIZE_NESW',
            _hx_index: 5,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_NS: {
            _hx_name: 'RESIZE_NS',
            _hx_index: 6,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_NWSE: {
            _hx_name: 'RESIZE_NWSE',
            _hx_index: 7,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          RESIZE_WE: {
            _hx_name: 'RESIZE_WE',
            _hx_index: 8,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          TEXT: {
            _hx_name: 'TEXT',
            _hx_index: 9,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          WAIT: {
            _hx_name: 'WAIT',
            _hx_index: 10,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          WAIT_ARROW: {
            _hx_name: 'WAIT_ARROW',
            _hx_index: 11,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
          CUSTOM: {
            _hx_name: 'CUSTOM',
            _hx_index: 12,
            __enum__: 'lime.ui.MouseCursor',
            toString: r,
          },
        });
      tb.__constructs__ = [
        tb.ARROW,
        tb.CROSSHAIR,
        tb.DEFAULT,
        tb.MOVE,
        tb.POINTER,
        tb.RESIZE_NESW,
        tb.RESIZE_NS,
        tb.RESIZE_NWSE,
        tb.RESIZE_WE,
        tb.TEXT,
        tb.WAIT,
        tb.WAIT_ARROW,
        tb.CUSTOM,
      ];
      tb.__empty_constructs__ = [
        tb.ARROW,
        tb.CROSSHAIR,
        tb.DEFAULT,
        tb.MOVE,
        tb.POINTER,
        tb.RESIZE_NESW,
        tb.RESIZE_NS,
        tb.RESIZE_NWSE,
        tb.RESIZE_WE,
        tb.TEXT,
        tb.WAIT,
        tb.WAIT_ARROW,
        tb.CUSTOM,
      ];
      var Sd = (L['lime.ui.MouseWheelMode'] = {
        __ename__: 'lime.ui.MouseWheelMode',
        __constructs__: null,
        PIXELS: {
          _hx_name: 'PIXELS',
          _hx_index: 0,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
        LINES: {
          _hx_name: 'LINES',
          _hx_index: 1,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
        PAGES: {
          _hx_name: 'PAGES',
          _hx_index: 2,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 3,
          __enum__: 'lime.ui.MouseWheelMode',
          toString: r,
        },
      });
      Sd.__constructs__ = [Sd.PIXELS, Sd.LINES, Sd.PAGES, Sd.UNKNOWN];
      Sd.__empty_constructs__ = [Sd.PIXELS, Sd.LINES, Sd.PAGES, Sd.UNKNOWN];
      var hc = function (a, b, c, d, f, g, k) {
        this.x = a;
        this.y = b;
        this.id = c;
        this.dx = d;
        this.dy = f;
        this.pressure = g;
        this.device = k;
      };
      h['lime.ui.Touch'] = hc;
      hc.__name__ = 'lime.ui.Touch';
      hc.prototype = { __class__: hc };
      var Lg = function (a, b) {
        this.clickCount = 0;
        this.onTextInput = new Wi();
        this.onTextEdit = new Dk();
        this.onRestore = new Cc();
        this.onResize = new Vi();
        this.onRenderContextRestored = new Xi();
        this.onRenderContextLost = new Cc();
        this.onRender = new Xi();
        this.onMove = new zh();
        this.onMouseWheel = new Ak();
        this.onMouseUp = new yk();
        this.onMouseMoveRelative = new zh();
        this.onMouseMove = new zh();
        this.onMouseDown = new zk();
        this.onMinimize = new Cc();
        this.onLeave = new Cc();
        this.onKeyUp = new Zi();
        this.onKeyDown = new Zi();
        this.onFullscreen = new Cc();
        this.onFocusOut = new Cc();
        this.onFocusIn = new Cc();
        this.onExpose = new Cc();
        this.onEnter = new Cc();
        this.onDropFile = new Wi();
        this.onDeactivate = new Cc();
        this.onClose = new Cc();
        this.onActivate = new Cc();
        this.application = a;
        this.__attributes = null != b ? b : {};
        Object.prototype.hasOwnProperty.call(this.__attributes, 'parameters') &&
          (this.parameters = this.__attributes.parameters);
        this.__height = this.__width = 0;
        this.__fullscreen = !1;
        this.__scale = 1;
        this.__y = this.__x = 0;
        this.__title = Object.prototype.hasOwnProperty.call(
          this.__attributes,
          'title',
        )
          ? this.__attributes.title
          : '';
        this.id = -1;
        this.__backend = new Sa(this);
      };
      h['lime.ui.Window'] = Lg;
      Lg.__name__ = 'lime.ui.Window';
      Lg.prototype = {
        close: function () {
          this.__backend.close();
        },
        set_cursor: function (a) {
          return this.__backend.setCursor(a);
        },
        setTextInputRect: function (a) {
          return this.__backend.setTextInputRect(a);
        },
        __class__: Lg,
        __properties__: { set_cursor: 'set_cursor' },
      };
      var ye = function () {
        this.data = new Ja();
        this.paths = [];
      };
      h['lime.utils.AssetBundle'] = ye;
      ye.__name__ = 'lime.utils.AssetBundle';
      ye.fromBytes = function (a) {
        a = new Si(a);
        return ye.__extractBundle(a);
      };
      ye.loadFromBytes = function (a) {
        return qc.withValue(ye.fromBytes(a));
      };
      ye.loadFromFile = function (a) {
        return dg.loadFromFile(a).then(ye.loadFromBytes);
      };
      ye.__extractBundle = function (a) {
        var b = yh.readZip(a);
        a = new ye();
        for (b = b.h; null != b; ) {
          var c = b.item;
          b = b.next;
          if (c.compressed) {
            var d = a.data,
              f = c.fileName,
              g = dg.decompress(c.data, hf.DEFLATE);
            d.h[f] = g;
          } else a.data.h[c.fileName] = c.data;
          a.paths.push(c.fileName);
        }
        return a;
      };
      ye.prototype = { __class__: ye };
      var Jk = function () {
        this.enabled = !0;
        this.audio = new Ja();
        this.font = new Ja();
        this.image = new Ja();
        this.version = 800389;
      };
      h['lime.utils.AssetCache'] = Jk;
      Jk.__name__ = 'lime.utils.AssetCache';
      Jk.prototype = {
        exists: function (a, b) {
          return (('IMAGE' == b || null == b) &&
            Object.prototype.hasOwnProperty.call(this.image.h, a)) ||
            (('FONT' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.font.h, a)) ||
            (('SOUND' == b || 'MUSIC' == b || null == b) &&
              Object.prototype.hasOwnProperty.call(this.audio.h, a))
            ? !0
            : !1;
        },
        set: function (a, b, c) {
          switch (b) {
            case 'FONT':
              this.font.h[a] = c;
              break;
            case 'IMAGE':
              if (!(c instanceof Ub))
                throw aa.thrown(
                  'Cannot cache non-Image asset: ' + I.string(c) + ' as Image',
                );
              this.image.h[a] = c;
              break;
            case 'MUSIC':
            case 'SOUND':
              if (!(c instanceof Dc))
                throw aa.thrown(
                  'Cannot cache non-AudioBuffer asset: ' +
                    I.string(c) +
                    ' as AudioBuffer',
                );
              this.audio.h[a] = c;
              break;
            default:
              throw aa.thrown(b + ' assets are not cachable');
          }
        },
        clear: function (a) {
          if (null == a)
            ((this.audio = new Ja()),
              (this.font = new Ja()),
              (this.image = new Ja()));
          else {
            var b = this.audio.h;
            b = Object.keys(b);
            for (var c = b.length, d = 0; d < c; ) {
              var f = b[d++];
              if (P.startsWith(f, a)) {
                var g = this.audio;
                Object.prototype.hasOwnProperty.call(g.h, f) && delete g.h[f];
              }
            }
            b = this.font.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c; )
              ((f = b[d++]),
                P.startsWith(f, a) &&
                  ((g = this.font),
                  Object.prototype.hasOwnProperty.call(g.h, f) &&
                    delete g.h[f]));
            b = this.image.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c; )
              ((f = b[d++]),
                P.startsWith(f, a) &&
                  ((g = this.image),
                  Object.prototype.hasOwnProperty.call(g.h, f) &&
                    delete g.h[f]));
          }
        },
        __class__: Jk,
      };
      var Qb = function () {
        this.types = new Ja();
        this.sizes = new Ja();
        this.preload = new Ja();
        this.paths = new Ja();
        this.pathGroups = new Ja();
        this.classTypes = new Ja();
        this.cachedText = new Ja();
        this.cachedImages = new Ja();
        this.cachedFonts = new Ja();
        this.cachedBytes = new Ja();
        this.cachedAudioBuffers = new Ja();
        this.onChange = new Cc();
        this.bytesTotal = this.bytesLoaded = 0;
      };
      h['lime.utils.AssetLibrary'] = Qb;
      Qb.__name__ = 'lime.utils.AssetLibrary';
      Qb.fromBundle = function (a) {
        if (Object.prototype.hasOwnProperty.call(a.data.h, 'library.json')) {
          var b = wd.fromBytes(a.data.h['library.json']);
          if (null != b) {
            if (null == b.libraryType) var c = new Qb();
            else if (((c = h[b.libraryType]), null != c))
              c = y.createInstance(c, b.libraryArgs);
            else
              return (
                La.warn('Could not find library type: ' + b.libraryType, {
                  fileName: 'lime/utils/AssetLibrary.hx',
                  lineNumber: 122,
                  className: 'lime.utils.AssetLibrary',
                  methodName: 'fromBundle',
                }),
                null
              );
            c.__fromBundle(a, b);
            return c;
          }
        } else return ((c = new Qb()), c.__fromBundle(a), c);
        return null;
      };
      Qb.fromManifest = function (a) {
        if (null == a) return null;
        if (null == a.libraryType) var b = new Qb();
        else if (((b = h[a.libraryType]), null != b))
          b = y.createInstance(b, a.libraryArgs);
        else
          return (
            La.warn('Could not find library type: ' + a.libraryType, {
              fileName: 'lime/utils/AssetLibrary.hx',
              lineNumber: 160,
              className: 'lime.utils.AssetLibrary',
              methodName: 'fromManifest',
            }),
            null
          );
        b.__fromManifest(a);
        return b;
      };
      Qb.prototype = {
        exists: function (a, b) {
          b = null != b ? xa.__cast(b, String) : null;
          a = this.types.h[a];
          return null == a ||
            (a != b &&
              (('SOUND' != b && 'MUSIC' != b) ||
                ('MUSIC' != a && 'SOUND' != a)) &&
              'BINARY' != b &&
              null != b &&
              ('BINARY' != a || 'TEXT' != b))
            ? !1
            : !0;
        },
        getAsset: function (a, b) {
          switch (b) {
            case 'BINARY':
              return this.getBytes(a);
            case 'FONT':
              return this.getFont(a);
            case 'IMAGE':
              return this.getImage(a);
            case 'MUSIC':
            case 'SOUND':
              return this.getAudioBuffer(a);
            case 'TEMPLATE':
              throw aa.thrown('Not sure how to get template: ' + a);
            case 'TEXT':
              return this.getText(a);
            default:
              throw aa.thrown('Unknown asset type: ' + b);
          }
        },
        getAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? this.cachedAudioBuffers.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? Dc.fromBytes(
                  xa.__cast(y.createInstance(this.classTypes.h[a], []), xb),
                )
              : Dc.fromFile(this.getPath(a));
        },
        getBytes: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a))
            return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = dg.ofString(this.cachedText.h[a]);
            return (this.cachedBytes.h[a] = b);
          }
          return Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
            ? xa.__cast(y.createInstance(this.classTypes.h[a], []), xb)
            : dg.fromFile(this.getPath(a));
        },
        getFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? this.cachedFonts.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? xa.__cast(y.createInstance(this.classTypes.h[a], []), cb)
              : cb.fromFile(this.getPath(a));
        },
        getImage: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? this.cachedImages.h[a]
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? xa.__cast(y.createInstance(this.classTypes.h[a], []), Ub)
              : Ub.fromFile(this.getPath(a));
        },
        getPath: function (a) {
          return Object.prototype.hasOwnProperty.call(this.paths.h, a)
            ? this.paths.h[a]
            : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
              ? this.pathGroups.h[a][0]
              : null;
        },
        getText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return this.cachedText.h[a];
          a = this.getBytes(a);
          return null == a ? null : a.getString(0, a.length);
        },
        isLocal: function (a, b) {
          if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a))
            return !0;
          b = xa.__cast(b, String);
          if (null == b)
            return Object.prototype.hasOwnProperty.call(
              this.cachedBytes.h,
              a,
            ) ||
              Object.prototype.hasOwnProperty.call(this.cachedText.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ||
              Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a)
              ? !0
              : Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
          switch (b) {
            case 'FONT':
              return Object.prototype.hasOwnProperty.call(
                this.cachedFonts.h,
                a,
              );
            case 'IMAGE':
              return Object.prototype.hasOwnProperty.call(
                this.cachedImages.h,
                a,
              );
            case 'MUSIC':
            case 'SOUND':
              return Object.prototype.hasOwnProperty.call(
                this.cachedAudioBuffers.h,
                a,
              );
            default:
              return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? !0
                : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
          }
        },
        load: function () {
          if (this.loaded) return qc.withValue(this);
          if (null == this.promise) {
            this.promise = new Ed();
            this.bytesLoadedCache = new Ja();
            this.assetsLoaded = 0;
            this.assetsTotal = 1;
            for (
              var a = Object.keys(this.preload.h), b = a.length, c = 0;
              c < b;

            ) {
              var d = a[c++];
              if (this.preload.h[d]) {
                La.verbose(
                  'Preloading asset: ' + d + ' [' + this.types.h[d] + ']',
                  {
                    fileName: 'lime/utils/AssetLibrary.hx',
                    lineNumber: 408,
                    className: 'lime.utils.AssetLibrary',
                    methodName: 'load',
                  },
                );
                var f = this.types.h[d];
                if (null != f)
                  switch (f) {
                    case 'BINARY':
                      this.assetsTotal++;
                      f = this.loadBytes(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadBytes_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'FONT':
                      this.assetsTotal++;
                      f = this.loadFont(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadFont_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'IMAGE':
                      this.assetsTotal++;
                      f = this.loadImage(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].load_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadImage_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'MUSIC':
                    case 'SOUND':
                      this.assetsTotal++;
                      f = this.loadAudioBuffer(d);
                      f.onProgress(
                        (function (a, b) {
                          return function (c, d) {
                            b[0].load_onProgress(a[0], c, d);
                          };
                        })([d], [this]),
                      );
                      f.onError(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadAudioBuffer_onError(a[0], c);
                          };
                        })([d], [this]),
                      );
                      f.onComplete(
                        (function (a, b) {
                          return function (c) {
                            b[0].loadAudioBuffer_onComplete(a[0], c);
                          };
                        })([d], [this]),
                      );
                      break;
                    case 'TEXT':
                      (this.assetsTotal++,
                        (f = this.loadText(d)),
                        f.onProgress(
                          (function (a, b) {
                            return function (c, d) {
                              b[0].load_onProgress(a[0], c, d);
                            };
                          })([d], [this]),
                        ),
                        f.onError(
                          (function (a, b) {
                            return function (c) {
                              b[0].load_onError(a[0], c);
                            };
                          })([d], [this]),
                        ),
                        f.onComplete(
                          (function (a, b) {
                            return function (c) {
                              b[0].loadText_onComplete(a[0], c);
                            };
                          })([d], [this]),
                        ));
                  }
              }
            }
            this.__assetLoaded(null);
          }
          return this.promise.future;
        },
        loadAudioBuffer: function (a) {
          return Object.prototype.hasOwnProperty.call(
            this.cachedAudioBuffers.h,
            a,
          )
            ? qc.withValue(this.cachedAudioBuffers.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? qc.withValue(
                  Dc.fromBytes(
                    xa.__cast(y.createInstance(this.classTypes.h[a], []), xb),
                  ),
                )
              : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a)
                ? Dc.loadFromFiles(this.pathGroups.h[a])
                : Dc.loadFromFile(this.paths.h[a]);
        },
        loadBytes: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
            ? qc.withValue(this.cachedBytes.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? qc.withValue(y.createInstance(this.classTypes.h[a], []))
              : dg.loadFromFile(this.getPath(a));
        },
        loadFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a)
            ? qc.withValue(this.cachedFonts.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? ((a = y.createInstance(this.classTypes.h[a], [])),
                a.__loadFromName(a.name))
              : cb.loadFromName(this.getPath(a));
        },
        loadImage: function (a) {
          var b = this;
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)
            ? qc.withValue(this.cachedImages.h[a])
            : Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
              ? qc.withValue(y.createInstance(this.classTypes.h[a], []))
              : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)
                ? Ub.loadFromBytes(this.cachedBytes.h[a]).then(function (c) {
                    var d = b.cachedBytes;
                    Object.prototype.hasOwnProperty.call(d.h, a) &&
                      delete d.h[a];
                    b.cachedImages.h[a] = c;
                    return qc.withValue(c);
                  })
                : Ub.loadFromFile(this.getPath(a));
        },
        loadText: function (a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a))
            return qc.withValue(this.cachedText.h[a]);
          if (
            Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ||
            Object.prototype.hasOwnProperty.call(this.classTypes.h, a)
          ) {
            var b = this.getBytes(a);
            if (null == b) return qc.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return qc.withValue(b);
          }
          return new Kg().load(this.getPath(a));
        },
        unload: function () {
          this.cachedBytes.h = Object.create(null);
          this.cachedFonts.h = Object.create(null);
          this.cachedImages.h = Object.create(null);
          this.cachedAudioBuffers.h = Object.create(null);
          this.cachedText.h = Object.create(null);
        },
        __assetLoaded: function (a) {
          this.assetsLoaded++;
          null != a &&
            La.verbose(
              'Loaded asset: ' +
                a +
                ' [' +
                this.types.h[a] +
                '] (' +
                (this.assetsLoaded - 1) +
                '/' +
                (this.assetsTotal - 1) +
                ')',
              {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 637,
                className: 'lime.utils.AssetLibrary',
                methodName: '__assetLoaded',
              },
            );
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a)
              ? this.sizes.h[a]
              : 0;
            if (
              Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
            ) {
              var c = this.bytesLoadedCache.h[a];
              c < b && (this.bytesLoaded += b - c);
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b;
          }
          this.assetsLoaded < this.assetsTotal
            ? this.promise.progress(this.bytesLoaded, this.bytesTotal)
            : ((this.loaded = !0),
              this.promise.progress(this.bytesTotal, this.bytesTotal),
              this.promise.complete(this));
        },
        __cacheBreak: function (a) {
          return Ka.__cacheBreak(a);
        },
        __fromBundle: function (a, b) {
          if (null != b) {
            var c = 0;
            for (b = b.assets; c < b.length; ) {
              var d = b[c];
              ++c;
              var f = Object.prototype.hasOwnProperty.call(d, 'id')
                ? d.id
                : d.path;
              var g = a.data.h[d.path];
              if (Object.prototype.hasOwnProperty.call(d, 'type')) {
                var k = d.type;
                'TEXT' == k
                  ? (this.cachedText.h[f] = null != g ? I.string(g) : null)
                  : (this.cachedBytes.h[f] = g);
                this.types.h[f] = d.type;
              } else
                ((this.cachedBytes.h[f] = g), (this.types.h[f] = 'BINARY'));
            }
          } else
            for (c = 0, b = a.paths; c < b.length; )
              ((f = b[c]),
                ++c,
                (this.cachedBytes.h[f] = a.data.h[f]),
                (this.types.h[f] = 'BINARY'));
        },
        __fromManifest: function (a) {
          var b = 2 <= a.version,
            c = a.rootPath;
          null == c && (c = '');
          '' != c && (c += '/');
          for (var d = 0, f = a.assets; d < f.length; ) {
            var g = f[d];
            ++d;
            var k =
              b && Object.prototype.hasOwnProperty.call(g, 'size')
                ? g.size
                : 100;
            var q = Object.prototype.hasOwnProperty.call(g, 'id')
              ? g.id
              : g.path;
            if (Object.prototype.hasOwnProperty.call(g, 'path')) {
              var p = this.paths;
              var l = this.__cacheBreak(
                this.__resolvePath(c + I.string(ya.field(g, 'path'))),
              );
              p.h[q] = l;
            }
            if (Object.prototype.hasOwnProperty.call(g, 'pathGroup')) {
              p = ya.field(g, 'pathGroup');
              l = 0;
              for (var t = p.length; l < t; ) {
                var n = l++;
                p[n] = this.__cacheBreak(this.__resolvePath(c + p[n]));
              }
              this.pathGroups.h[q] = p;
            }
            this.sizes.h[q] = k;
            this.types.h[q] = g.type;
            Object.prototype.hasOwnProperty.call(g, 'preload') &&
              (this.preload.h[q] = ya.field(g, 'preload'));
            Object.prototype.hasOwnProperty.call(g, 'className') &&
              ((k = ya.field(g, 'className')),
              (k = h[k]),
              (this.classTypes.h[q] = k));
          }
          d = this.bytesTotal = 0;
          for (f = a.assets; d < f.length; )
            ((g = f[d]),
              ++d,
              (q = Object.prototype.hasOwnProperty.call(g, 'id')
                ? g.id
                : g.path),
              Object.prototype.hasOwnProperty.call(this.preload.h, q) &&
                this.preload.h[q] &&
                Object.prototype.hasOwnProperty.call(this.sizes.h, q) &&
                (this.bytesTotal += this.sizes.h[q]));
        },
        __resolvePath: function (a) {
          a = P.replace(a, '\\', '/');
          var b = a.indexOf(':');
          P.startsWith(a, 'http') && 0 < b
            ? ((b += 3),
              (a =
                R.substr(a, 0, b) + P.replace(R.substr(a, b, null), '//', '/')))
            : (a = P.replace(a, '//', '/'));
          if (-1 < a.indexOf('./')) {
            a = a.split('/');
            b = [];
            for (var c = 0, d = a.length; c < d; ) {
              var f = c++;
              '..' == a[f]
                ? 0 == f || '..' == b[f - 1]
                  ? b.push('..')
                  : b.pop()
                : '.' == a[f]
                  ? 0 == f && b.push('.')
                  : b.push(a[f]);
            }
            a = b.join('/');
          }
          return a;
        },
        loadAudioBuffer_onComplete: function (a, b) {
          this.cachedAudioBuffers.h[a] = b;
          if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
            for (
              var c = this.pathGroups.h[a],
                d = Object.keys(this.pathGroups.h),
                f = d.length,
                g = 0;
              g < f;

            ) {
              var k = d[g++];
              if (k != a)
                for (var q = 0; q < c.length; ) {
                  var p = c[q];
                  ++q;
                  if (-1 < this.pathGroups.h[k].indexOf(p)) {
                    this.cachedAudioBuffers.h[k] = b;
                    break;
                  }
                }
            }
          this.__assetLoaded(a);
        },
        loadAudioBuffer_onError: function (a, b) {
          null != b && '' != b
            ? La.warn('Could not load "' + a + '": ' + I.string(b), {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 883,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              })
            : La.warn('Could not load "' + a + '"', {
                fileName: 'lime/utils/AssetLibrary.hx',
                lineNumber: 887,
                className: 'lime.utils.AssetLibrary',
                methodName: 'loadAudioBuffer_onError',
              });
          this.loadAudioBuffer_onComplete(a, new Dc());
        },
        loadBytes_onComplete: function (a, b) {
          this.cachedBytes.h[a] = b;
          this.__assetLoaded(a);
        },
        loadFont_onComplete: function (a, b) {
          this.cachedFonts.h[a] = b;
          this.__assetLoaded(a);
        },
        loadImage_onComplete: function (a, b) {
          this.cachedImages.h[a] = b;
          this.__assetLoaded(a);
        },
        loadText_onComplete: function (a, b) {
          this.cachedText.h[a] = b;
          this.__assetLoaded(a);
        },
        load_onError: function (a, b) {
          null != b && '' != b
            ? this.promise.error(
                'Error loading asset "' + a + '": ' + I.string(b),
              )
            : this.promise.error('Error loading asset "' + a + '"');
        },
        load_onProgress: function (a, b, c) {
          if (0 < b) {
            var d = this.sizes.h[a];
            0 < c
              ? ((b /= c), 1 < b && (b = 1), (b = Math.floor(b * d)))
              : b > d && (b = d);
            Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)
              ? ((d = this.bytesLoadedCache.h[a]),
                b != d && (this.bytesLoaded += b - d))
              : (this.bytesLoaded += b);
            this.bytesLoadedCache.h[a] = b;
            this.promise.progress(this.bytesLoaded, this.bytesTotal);
          }
        },
        __class__: Qb,
      };
      var wd = function () {
        this.assets = [];
        this.libraryArgs = [];
        this.version = 2;
      };
      h['lime.utils.AssetManifest'] = wd;
      wd.__name__ = 'lime.utils.AssetManifest';
      wd.fromBytes = function (a, b) {
        return null != a ? wd.parse(a.getString(0, a.length), b) : null;
      };
      wd.loadFromFile = function (a, b) {
        a = wd.__resolvePath(a);
        b = wd.__resolveRootPath(b, a);
        return null == a
          ? null
          : dg.loadFromFile(a).then(function (a) {
              return qc.withValue(wd.fromBytes(a, b));
            });
      };
      wd.parse = function (a, b) {
        if (null == a || '' == a) return null;
        a = JSON.parse(a);
        var c = new wd();
        Object.prototype.hasOwnProperty.call(a, 'name') && (c.name = a.name);
        Object.prototype.hasOwnProperty.call(a, 'libraryType') &&
          (c.libraryType = a.libraryType);
        Object.prototype.hasOwnProperty.call(a, 'libraryArgs') &&
          (c.libraryArgs = a.libraryArgs);
        if (Object.prototype.hasOwnProperty.call(a, 'assets')) {
          var d = a.assets;
          Object.prototype.hasOwnProperty.call(a, 'version') && 2 >= a.version
            ? (c.assets = rd.run(d))
            : (c.assets = d);
        }
        Object.prototype.hasOwnProperty.call(a, 'rootPath') &&
          (c.rootPath = a.rootPath);
        null != b &&
          '' != b &&
          (c.rootPath =
            null == c.rootPath || '' == c.rootPath ? b : b + '/' + c.rootPath);
        return c;
      };
      wd.__resolvePath = function (a) {
        if (null == a) return null;
        var b = a.indexOf('?');
        var c = -1 < b ? R.substr(a, 0, b) : a;
        for (c = P.replace(c, '\\', '/'); P.endsWith(c, '/'); )
          c = R.substr(c, 0, c.length - 1);
        return P.endsWith(c, '.bundle')
          ? -1 < b
            ? c + '/library.json' + R.substr(a, b, null)
            : c + '/library.json'
          : a;
      };
      wd.__resolveRootPath = function (a, b) {
        if (null != a) return a;
        a = b.indexOf('?');
        a = -1 < a ? R.substr(b, 0, a) : b;
        for (a = P.replace(a, '\\', '/'); P.endsWith(a, '/'); ) {
          if ('/' == a) return a;
          a = R.substr(a, 0, a.length - 1);
        }
        return P.endsWith(a, '.bundle') ? a : Rd.directory(a);
      };
      wd.prototype = { __class__: wd };
      var Ka = function () {};
      h['lime.utils.Assets'] = Ka;
      Ka.__name__ = 'lime.utils.Assets';
      Ka.exists = function (a, b) {
        null == b && (b = 'BINARY');
        var c = a.indexOf(':'),
          d = a.substring(0, c);
        a = a.substring(c + 1);
        d = Ka.getLibrary(d);
        return null != d ? d.exists(a, b) : !1;
      };
      Ka.getAsset = function (a, b, c) {
        if (c && Ka.cache.enabled)
          switch (b) {
            case 'FONT':
              var d = Ka.cache.font.h[a];
              if (null != d) return d;
              break;
            case 'IMAGE':
              d = Ka.cache.image.h[a];
              if (Ka.isValidImage(d)) return d;
              break;
            case 'MUSIC':
            case 'SOUND':
              d = Ka.cache.audio.h[a];
              if (Ka.isValidAudio(d)) return d;
              break;
            case 'TEMPLATE':
              throw aa.thrown('Not sure how to get template: ' + a);
            case 'BINARY':
            case 'TEXT':
              c = !1;
              break;
            default:
              return null;
          }
        var f = a.indexOf(':');
        d = a.substring(0, f);
        f = a.substring(f + 1);
        var g = Ka.getLibrary(d);
        if (null != g)
          if (g.exists(f, b)) {
            if (g.isLocal(f, b))
              return (
                (d = g.getAsset(f, b)),
                c && Ka.cache.enabled && Ka.cache.set(a, b, d),
                d
              );
            La.error(b + ' asset "' + a + '" exists, but only asynchronously', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 133,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
          } else
            La.error('There is no ' + b + ' asset with an ID of "' + a + '"', {
              fileName: 'lime/utils/Assets.hx',
              lineNumber: 138,
              className: 'lime.utils.Assets',
              methodName: 'getAsset',
            });
        else
          La.error(Ka.__libraryNotFound(d), {
            fileName: 'lime/utils/Assets.hx',
            lineNumber: 143,
            className: 'lime.utils.Assets',
            methodName: 'getAsset',
          });
        return null;
      };
      Ka.getBytes = function (a) {
        return Ka.getAsset(a, 'BINARY', !1);
      };
      Ka.getFont = function (a, b) {
        null == b && (b = !0);
        return Ka.getAsset(a, 'FONT', b);
      };
      Ka.getLibrary = function (a) {
        if (null == a || '' == a) a = 'default';
        return Ka.libraries.h[a];
      };
      Ka.getText = function (a) {
        return Ka.getAsset(a, 'TEXT', !1);
      };
      Ka.isLocal = function (a, b, c) {
        null == c && (c = !0);
        if (c && Ka.cache.enabled && Ka.cache.exists(a, b)) return !0;
        var d = a.indexOf(':');
        c = a.substring(0, d);
        a = a.substring(d + 1);
        c = Ka.getLibrary(c);
        return null != c ? c.isLocal(a, b) : !1;
      };
      Ka.isValidAudio = function (a) {
        return null != a;
      };
      Ka.isValidImage = function (a) {
        return null != a ? null != a.buffer : !1;
      };
      Ka.loadLibrary = function (a) {
        var b = new Ed(),
          c = Ka.getLibrary(a);
        if (null != c) return c.load();
        c = a;
        var d = null;
        if (Object.prototype.hasOwnProperty.call(Ka.bundlePaths.h, a))
          ye.loadFromFile(Ka.bundlePaths.h[a])
            .onComplete(function (c) {
              null == c
                ? b.error('Cannot load bundle for library "' + a + '"')
                : ((c = Qb.fromBundle(c)),
                  null == c
                    ? b.error('Cannot open library "' + a + '"')
                    : ((Ka.libraries.h[a] = c),
                      c.onChange.add(((E = Ka.onChange), m(E, E.dispatch))),
                      b.completeWith(c.load())));
            })
            .onError(function (c) {
              b.error('There is no asset library with an ID of "' + a + '"');
            });
        else
          (Object.prototype.hasOwnProperty.call(Ka.libraryPaths.h, a)
            ? ((c = Ka.libraryPaths.h[a]), (d = Rd.directory(c)))
            : (P.endsWith(c, '.bundle')
                ? ((d = c), (c += '/library.json'))
                : (d = Rd.directory(c)),
              (c = Ka.__cacheBreak(c))),
            wd
              .loadFromFile(c, d)
              .onComplete(function (c) {
                null == c
                  ? b.error(
                      'Cannot parse asset manifest for library "' + a + '"',
                    )
                  : ((c = Qb.fromManifest(c)),
                    null == c
                      ? b.error('Cannot open library "' + a + '"')
                      : ((Ka.libraries.h[a] = c),
                        c.onChange.add(((E = Ka.onChange), m(E, E.dispatch))),
                        b.completeWith(c.load())));
              })
              .onError(function (c) {
                b.error('There is no asset library with an ID of "' + a + '"');
              }));
        return b.future;
      };
      Ka.registerLibrary = function (a, b) {
        if (null == a || '' == a) a = 'default';
        if (Object.prototype.hasOwnProperty.call(Ka.libraries.h, a)) {
          if (Ka.libraries.h[a] == b) return;
          Ka.unloadLibrary(a);
        }
        null != b && b.onChange.add(Ka.library_onChange);
        Ka.libraries.h[a] = b;
      };
      Ka.unloadLibrary = function (a) {
        Ka.removeLibrary(a, !0);
      };
      Ka.removeLibrary = function (a, b) {
        null == b && (b = !0);
        if (null == a || '' == a) a = 'default';
        var c = Ka.libraries.h[a];
        null != c &&
          (Ka.cache.clear(a + ':'),
          c.onChange.remove(Ka.library_onChange),
          b && c.unload());
        b = Ka.libraries;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
      };
      Ka.__cacheBreak = function (a) {
        0 < Ka.cache.version &&
          (a =
            -1 < a.indexOf('?')
              ? a + ('&' + Ka.cache.version)
              : a + ('?' + Ka.cache.version));
        return a;
      };
      Ka.__libraryNotFound = function (a) {
        if (null == a || '' == a) a = 'default';
        return null == F.current ||
          null == F.current.__preloader ||
          F.current.__preloader.complete
          ? 'There is no asset library named "' + a + '"'
          : 'There is no asset library named "' +
              a +
              '", or it is not yet preloaded';
      };
      Ka.library_onChange = function () {
        Ka.cache.clear();
        Ka.onChange.dispatch();
      };
      var Kk = function (a, b) {
        this.bytes = a;
        this.offset = b;
      };
      h['lime.utils.BytePointerData'] = Kk;
      Kk.__name__ = 'lime.utils.BytePointerData';
      Kk.prototype = { __class__: Kk };
      var dg = {
          _new: function (a, b) {
            return new xb(b);
          },
          decompress: function (a, b) {
            switch (b._hx_index) {
              case 0:
                return ml.decompress(a);
              case 1:
                return nl.decompress(a);
              case 2:
                return ol.decompress(a);
              case 3:
                return pl.decompress(a);
            }
          },
          fromBytes: function (a) {
            return null == a ? null : dg._new(a.length, a.b.bufferValue);
          },
          fromFile: function (a) {
            return null;
          },
          loadFromFile: function (a) {
            return new aj().load(a);
          },
          ofString: function (a) {
            a = xb.ofString(a);
            return dg._new(a.length, a.b.bufferValue);
          },
        },
        hf = (L['lime.utils.CompressionAlgorithm'] = {
          __ename__: 'lime.utils.CompressionAlgorithm',
          __constructs__: null,
          DEFLATE: {
            _hx_name: 'DEFLATE',
            _hx_index: 0,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
          GZIP: {
            _hx_name: 'GZIP',
            _hx_index: 1,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
          LZMA: {
            _hx_name: 'LZMA',
            _hx_index: 2,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
          ZLIB: {
            _hx_name: 'ZLIB',
            _hx_index: 3,
            __enum__: 'lime.utils.CompressionAlgorithm',
            toString: r,
          },
        });
      hf.__constructs__ = [hf.DEFLATE, hf.GZIP, hf.LZMA, hf.ZLIB];
      hf.__empty_constructs__ = [hf.DEFLATE, hf.GZIP, hf.LZMA, hf.ZLIB];
      var ih = {
          toArrayBufferView: function (a) {
            return a;
          },
        },
        La = function () {};
      h['lime.utils.Log'] = La;
      La.__name__ = 'lime.utils.Log';
      La.debug = function (a, b) {
        4 <= La.level && console.debug('[' + b.className + '] ' + I.string(a));
      };
      La.error = function (a, b) {
        if (1 <= La.level) {
          a = '[' + b.className + '] ERROR: ' + I.string(a);
          if (La.throwErrors) throw aa.thrown(a);
          console.error(a);
        }
      };
      La.info = function (a, b) {
        3 <= La.level && console.info('[' + b.className + '] ' + I.string(a));
      };
      La.verbose = function (a, b) {
        5 <= La.level &&
          ((a = '[' + b.className + '] ' + I.string(a)), console.log(a));
      };
      La.warn = function (a, b) {
        2 <= La.level &&
          console.warn('[' + b.className + '] WARNING: ' + I.string(a));
      };
      var Zj = function () {
        this.bytesTotalCache = new Ja();
        this.bytesLoadedCache2 = new Ja();
        this.bytesLoadedCache = new va();
        this.onProgress = new Vi();
        this.onComplete = new Cc();
        this.bytesTotal = this.bytesLoaded = 0;
        this.libraries = [];
        this.libraryNames = [];
        this.onProgress.add(m(this, this.update));
      };
      h['lime.utils.Preloader'] = Zj;
      Zj.__name__ = 'lime.utils.Preloader';
      Zj.prototype = {
        addLibrary: function (a) {
          this.libraries.push(a);
        },
        addLibraryName: function (a) {
          -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a);
        },
        load: function () {
          for (var a = this, b = 0, c = this.libraries; b < c.length; ) {
            var d = c[b];
            ++b;
            this.bytesTotal += d.bytesTotal;
          }
          this.loadedLibraries = -1;
          this.preloadStarted = !1;
          b = 0;
          for (c = this.libraries; b < c.length; )
            ((d = [c[b]]),
              ++b,
              La.verbose('Preloading asset library', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 134,
                className: 'lime.utils.Preloader',
                methodName: 'load',
              }),
              d[0]
                .load()
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + c
                          : a.bytesLoaded +
                            (c - a.bytesLoadedCache.h[b[0].__id__]);
                      a.bytesLoadedCache.set(b[0], c);
                      a.simulateProgress ||
                        a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                    };
                  })(d),
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      a.bytesLoaded =
                        null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                          ? a.bytesLoaded + b[0].bytesTotal
                          : a.bytesLoaded +
                            ((b[0].bytesTotal | 0) -
                              a.bytesLoadedCache.h[b[0].__id__]);
                      a.loadedAssetLibrary();
                    };
                  })(d),
                )
                .onError(
                  (function () {
                    return function (a) {
                      La.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 170,
                        className: 'lime.utils.Preloader',
                        methodName: 'load',
                      });
                    };
                  })(),
                ));
          b = 0;
          for (c = this.libraryNames; b < c.length; )
            (++b, (this.bytesTotal += 200));
          this.loadedLibraries++;
          this.preloadStarted = !0;
          this.updateProgress();
        },
        loadedAssetLibrary: function (a) {
          this.loadedLibraries++;
          var b = this.loadedLibraries;
          this.preloadStarted || ++b;
          var c = this.libraries.length + this.libraryNames.length;
          null != a
            ? La.verbose(
                'Loaded asset library: ' + a + ' [' + b + '/' + c + ']',
                {
                  fileName: 'lime/utils/Preloader.hx',
                  lineNumber: 197,
                  className: 'lime.utils.Preloader',
                  methodName: 'loadedAssetLibrary',
                },
              )
            : La.verbose('Loaded asset library [' + b + '/' + c + ']', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 201,
                className: 'lime.utils.Preloader',
                methodName: 'loadedAssetLibrary',
              });
          this.updateProgress();
        },
        start: function () {
          this.complete ||
            this.simulateProgress ||
            !this.preloadComplete ||
            ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {},
        updateProgress: function () {
          var a = this;
          this.simulateProgress ||
            this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
          if (
            this.loadedLibraries == this.libraries.length &&
            !this.initLibraryNames
          ) {
            this.initLibraryNames = !0;
            for (var b = 0, c = this.libraryNames; b < c.length; ) {
              var d = [c[b]];
              ++b;
              La.verbose('Preloading asset library: ' + d[0], {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 239,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              });
              Ka.loadLibrary(d[0])
                .onProgress(
                  (function (b) {
                    return function (c, d) {
                      0 < d &&
                        (Object.prototype.hasOwnProperty.call(
                          a.bytesTotalCache.h,
                          b[0],
                        ) ||
                          ((a.bytesTotalCache.h[b[0]] = d),
                          (a.bytesTotal += d - 200)),
                        c > d && (c = d),
                        Object.prototype.hasOwnProperty.call(
                          a.bytesLoadedCache2.h,
                          b[0],
                        )
                          ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                          : (a.bytesLoaded += c),
                        (a.bytesLoadedCache2.h[b[0]] = c),
                        a.simulateProgress ||
                          a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal));
                    };
                  })(d),
                )
                .onComplete(
                  (function (b) {
                    return function (c) {
                      c = 200;
                      Object.prototype.hasOwnProperty.call(
                        a.bytesTotalCache.h,
                        b[0],
                      ) && (c = a.bytesTotalCache.h[b[0]]);
                      Object.prototype.hasOwnProperty.call(
                        a.bytesLoadedCache2.h,
                        b[0],
                      )
                        ? (a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]])
                        : (a.bytesLoaded += c);
                      a.loadedAssetLibrary(b[0]);
                    };
                  })(d),
                )
                .onError(
                  (function () {
                    return function (a) {
                      La.error(a, {
                        fileName: 'lime/utils/Preloader.hx',
                        lineNumber: 293,
                        className: 'lime.utils.Preloader',
                        methodName: 'updateProgress',
                      });
                    };
                  })(),
                );
            }
          }
          this.simulateProgress ||
            this.loadedLibraries !=
              this.libraries.length + this.libraryNames.length ||
            (this.preloadComplete ||
              ((this.preloadComplete = !0),
              La.verbose('Preload complete', {
                fileName: 'lime/utils/Preloader.hx',
                lineNumber: 306,
                className: 'lime.utils.Preloader',
                methodName: 'updateProgress',
              })),
            this.start());
        },
        __class__: Zj,
      };
      var he = function () {
        ve.call(this);
      };
      h['msignal.Signal0'] = he;
      he.__name__ = 'msignal.Signal0';
      he.__super__ = ve;
      he.prototype = u(ve.prototype, {
        dispatch: function () {
          for (var a = this.slots; a.nonEmpty; )
            (a.head.execute(), (a = a.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new cj(this, a, b, c);
        },
        __class__: he,
      });
      var sg = function (a, b) {
        ve.call(this, [a, b]);
      };
      h['msignal.Signal2'] = sg;
      sg.__name__ = 'msignal.Signal2';
      sg.__super__ = ve;
      sg.prototype = u(ve.prototype, {
        dispatch: function (a, b) {
          for (var c = this.slots; c.nonEmpty; )
            (c.head.execute(a, b), (c = c.tail));
        },
        createSlot: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          return new dj(this, a, b, c);
        },
        __class__: sg,
      });
      var ze = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        this.signal = a;
        this.set_listener(b);
        this.once = c;
        this.priority = d;
        this.enabled = !0;
      };
      h['msignal.Slot'] = ze;
      ze.__name__ = 'msignal.Slot';
      ze.prototype = {
        remove: function () {
          this.signal.remove(this.listener);
        },
        set_listener: function (a) {
          return (this.listener = a);
        },
        __class__: ze,
        __properties__: { set_listener: 'set_listener' },
      };
      var cj = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        ze.call(this, a, b, c, d);
      };
      h['msignal.Slot0'] = cj;
      cj.__name__ = 'msignal.Slot0';
      cj.__super__ = ze;
      cj.prototype = u(ze.prototype, {
        execute: function () {
          this.enabled && (this.once && this.remove(), this.listener());
        },
        __class__: cj,
      });
      var Ki = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        ze.call(this, a, b, c, d);
      };
      h['msignal.Slot1'] = Ki;
      Ki.__name__ = 'msignal.Slot1';
      Ki.__super__ = ze;
      Ki.prototype = u(ze.prototype, {
        execute: function (a) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param && (a = this.param),
            this.listener(a));
        },
        __class__: Ki,
      });
      var dj = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = !1);
        ze.call(this, a, b, c, d);
      };
      h['msignal.Slot2'] = dj;
      dj.__name__ = 'msignal.Slot2';
      dj.__super__ = ze;
      dj.prototype = u(ze.prototype, {
        execute: function (a, b) {
          this.enabled &&
            (this.once && this.remove(),
            null != this.param1 && (a = this.param1),
            null != this.param2 && (b = this.param2),
            this.listener(a, b));
        },
        __class__: dj,
      });
      var Ra = function () {};
      h['openfl.Lib'] = Ra;
      Ra.__name__ = 'openfl.Lib';
      Ra.__properties__ = { get_current: 'get_current' };
      Ra.getTimer = function () {
        return Ec.getTimer();
      };
      Ra.getURL = function (a, b) {
        Ra.navigateToURL(a, b);
      };
      Ra.navigateToURL = function (a, b) {
        null == b && (b = '_blank');
        var c = a.url;
        if (y.typeof(a.data) == N.TObject) {
          for (var d = '', f = ya.fields(a.data), g = 0; g < f.length; ) {
            var k = f[g];
            ++g;
            0 < d.length && (d += '&');
            var q = encodeURIComponent(k) + '=';
            k = I.string(ya.field(a.data, k));
            d += q + encodeURIComponent(k);
          }
          c = -1 < c.indexOf('?') ? c + ('&' + d) : c + ('?' + d);
        }
        Ec.openURL(c, b);
      };
      Ra.setTimeout = function (a, b, c) {
        var d = ++Ra.__lastTimerID,
          f = Ra.__timers;
        b = cg.delay(function () {
          Ra.__timers.remove(d);
          if (
            null != Ra.get_current() &&
            null != Ra.get_current().stage &&
            Ra.get_current().stage.__uncaughtErrorEvents.__enabled
          )
            try {
              a.apply(a, null == c ? [] : c);
            } catch (k) {
              Ua.lastError = k;
              var b = aa.caught(k).unwrap();
              Ra.get_current().stage.__handleError(b);
            }
          else a.apply(a, null == c ? [] : c);
        }, b);
        f.h[d] = b;
        return d;
      };
      Ra.get_current = function () {
        null == Fc.current && (Fc.current = new Rf());
        return Fc.current;
      };
      var jf = function () {};
      h['openfl._Vector.IVector'] = jf;
      jf.__name__ = 'openfl._Vector.IVector';
      jf.__isInterface__ = !0;
      jf.prototype = { __class__: jf };
      var ej = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.BoolVector'] = ej;
      ej.__name__ = 'openfl._Vector.BoolVector';
      ej.__interfaces__ = [jf];
      ej.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = !1;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: ej,
        __properties__: { set_length: 'set_length' },
      };
      var Te = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var f = c.length; d < f; ) {
              var g = d++;
              this.__array[g] = c[g];
            }
          }
        } else (null == c && (c = []), (this.__array = c));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.FloatVector'] = Te;
      Te.__name__ = 'openfl._Vector.FloatVector';
      Te.__interfaces__ = [jf];
      Te.prototype = {
        concat: function (a) {
          return null == a
            ? new Te(0, !1, this.__array.slice())
            : 0 < a.__array.length
              ? new Te(0, !1, this.__array.concat(a.__array))
              : new Te(0, !1, this.__array.slice());
        },
        copy: function () {
          return new Te(0, this.fixed, this.__array.slice());
        },
        get: function (a) {
          return this.__array[a];
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (a != this.__array.length && !this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: Te,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var fj = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.FunctionVector'] = fj;
      fj.__name__ = 'openfl._Vector.FunctionVector';
      fj.__interfaces__ = [jf];
      fj.prototype = {
        toJSON: function () {
          return this.__array;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = null;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: fj,
        __properties__: { set_length: 'set_length' },
      };
      var ch = function (a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.IntVector'] = ch;
      ch.__name__ = 'openfl._Vector.IntVector';
      ch.__interfaces__ = [jf];
      ch.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        iterator: function () {
          return new Pf(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        toJSON: function () {
          return this.__array;
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a; ) {
                var c = b++;
                this.__array[c] = 0;
              }
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: ch,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var rg = function (a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (((this.__array = []), null != c)) {
            d = 0;
            for (var f = c.length; d < f; ) {
              var g = d++;
              this.__array[g] = c[g];
            }
          }
        } else (null == c && (c = []), (this.__array = c));
        0 < a && this.set_length(a);
        this.fixed = b;
      };
      h['openfl._Vector.ObjectVector'] = rg;
      rg.__name__ = 'openfl._Vector.ObjectVector';
      rg.__interfaces__ = [jf];
      rg.prototype = {
        get: function (a) {
          return this.__array[a];
        },
        indexOf: function (a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c; ) {
            var d = b++;
            if (this.__array[d] == a) return d;
          }
          return -1;
        },
        insertAt: function (a, b) {
          (!this.fixed || a < this.__array.length) &&
            this.__array.splice(a, 0, b);
        },
        iterator: function () {
          return new Pf(this.__array);
        },
        push: function (a) {
          return this.fixed ? this.__array.length : this.__array.push(a);
        },
        removeAt: function (a) {
          return !this.fixed || a < this.__array.length
            ? this.__array.splice(a, 1)[0]
            : null;
        },
        set: function (a, b) {
          return !this.fixed || a < this.__array.length
            ? (this.__array[a] = b)
            : b;
        },
        splice: function (a, b) {
          return new rg(0, !1, this.__array.splice(a, b));
        },
        toJSON: function () {
          return this.__array;
        },
        unshift: function (a) {
          this.fixed || this.__array.unshift(a);
        },
        get_length: function () {
          return this.__array.length;
        },
        set_length: function (a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b) for (; b < a; ) (b++, this.__array.push(null));
            else for (; this.__array.length > a; ) this.__array.pop();
          }
          return this.__array.length;
        },
        __class__: rg,
        __properties__: { set_length: 'set_length', get_length: 'get_length' },
      };
      var Ne = function () {};
      h['openfl.desktop.Clipboard'] = Ne;
      Ne.__name__ = 'openfl.desktop.Clipboard';
      Ne.__properties__ = { get_generalClipboard: 'get_generalClipboard' };
      Ne.get_generalClipboard = function () {
        null == Ne.__generalClipboard &&
          ((Ne.__generalClipboard = new Ne()),
          (Ne.__generalClipboard.__systemClipboard = !0));
        return Ne.__generalClipboard;
      };
      Ne.prototype = {
        setData: function (a, b, c) {
          if (this.__systemClipboard)
            switch (a) {
              case 0:
              case 1:
              case 2:
                return (
                  (a = b),
                  zc.set_text(null == a ? null : I.string(a)),
                  !0
                );
              default:
                return !1;
            }
          switch (a) {
            case 0:
              return (
                (a = b),
                (this.__htmlText = null == a ? null : I.string(a)),
                !0
              );
            case 1:
              return (
                (a = b),
                (this.__richText = null == a ? null : I.string(a)),
                !0
              );
            case 2:
              return (
                (a = b),
                (this.__text = null == a ? null : I.string(a)),
                !0
              );
            default:
              return !1;
          }
        },
        __class__: Ne,
      };
      var $g = function () {
        F.call(this);
        null == Fc.application && (Fc.application = this);
        null == Fc.current && (Fc.current = new Rf());
        Fc.current.__loaderInfo = Ae.create(null);
        Fc.current.__loaderInfo.content = Fc.current;
      };
      h['openfl.display.Application'] = $g;
      $g.__name__ = 'openfl.display.Application';
      $g.__super__ = F;
      $g.prototype = u(F.prototype, {
        createWindow: function (a) {
          var b = new Ah(this, a);
          this.__windows.push(b);
          this.__windowByID.h[b.id] = b;
          var c = this;
          b.onClose.add(
            function () {
              c.__onWindowClose(b);
            },
            !1,
            -1e4,
          );
          null == this.__window &&
            ((this.__window = b),
            b.onActivate.add(m(this, this.onWindowActivate)),
            b.onRenderContextLost.add(m(this, this.onRenderContextLost)),
            b.onRenderContextRestored.add(
              m(this, this.onRenderContextRestored),
            ),
            b.onDeactivate.add(m(this, this.onWindowDeactivate)),
            b.onDropFile.add(m(this, this.onWindowDropFile)),
            b.onEnter.add(m(this, this.onWindowEnter)),
            b.onExpose.add(m(this, this.onWindowExpose)),
            b.onFocusIn.add(m(this, this.onWindowFocusIn)),
            b.onFocusOut.add(m(this, this.onWindowFocusOut)),
            b.onFullscreen.add(m(this, this.onWindowFullscreen)),
            b.onKeyDown.add(m(this, this.onKeyDown)),
            b.onKeyUp.add(m(this, this.onKeyUp)),
            b.onLeave.add(m(this, this.onWindowLeave)),
            b.onMinimize.add(m(this, this.onWindowMinimize)),
            b.onMouseDown.add(m(this, this.onMouseDown)),
            b.onMouseMove.add(m(this, this.onMouseMove)),
            b.onMouseMoveRelative.add(m(this, this.onMouseMoveRelative)),
            b.onMouseUp.add(m(this, this.onMouseUp)),
            b.onMouseWheel.add(m(this, this.onMouseWheel)),
            b.onMove.add(m(this, this.onWindowMove)),
            b.onRender.add(m(this, this.render)),
            b.onResize.add(m(this, this.onWindowResize)),
            b.onRestore.add(m(this, this.onWindowRestore)),
            b.onTextEdit.add(m(this, this.onTextEdit)),
            b.onTextInput.add(m(this, this.onTextInput)),
            this.onWindowCreate());
          this.onCreateWindow.dispatch(b);
          return b;
        },
        exec: function () {
          return F.prototype.exec.call(this);
        },
        __checkForAllWindowsClosed: function () {
          0 < this.__windows.length ||
            F.prototype.__checkForAllWindowsClosed.call(this);
        },
        __onModuleExit: function (a) {
          this.onExit.canceled ||
            (Fc.application == this && (Fc.application = null),
            F.prototype.__onModuleExit.call(this, a));
        },
        __class__: $g,
      });
      var sd = function () {
        sa.call(this);
        this.__allowSmoothing = !0;
        this.__pixelRatio = 1;
        this.__tempColorTransform = new Lb();
        this.__worldAlpha = 1;
      };
      h['openfl.display.DisplayObjectRenderer'] = sd;
      sd.__name__ = 'openfl.display.DisplayObjectRenderer';
      sd.__super__ = sa;
      sd.prototype = u(sa.prototype, {
        __clear: function () {},
        __getAlpha: function (a) {
          return a * this.__worldAlpha;
        },
        __popMaskObject: function (a, b) {},
        __pushMaskObject: function (a, b) {},
        __render: function (a) {},
        __renderEvent: function (a) {
          if (null != a.__customRenderEvent && a.__renderable) {
            a.__customRenderEvent.allowSmoothing = this.__allowSmoothing;
            a.__customRenderEvent.objectMatrix.copyFrom(a.__renderTransform);
            a.__customRenderEvent.objectColorTransform.__copyFrom(
              a.__worldColorTransform,
            );
            a.__customRenderEvent.renderer = this;
            switch (this.__type) {
              case 'cairo':
                a.__customRenderEvent.type = 'renderCairo';
                break;
              case 'canvas':
                a.__customRenderEvent.type = 'renderCanvas';
                break;
              case 'dom':
                a.__customRenderEvent.type =
                  null != a.stage && a.__worldVisible
                    ? 'renderDOM'
                    : 'clearDOM';
                break;
              case 'opengl':
                this.__cleared || this.__clear();
                this.setShader(a.__worldShader);
                this.__context3D.__flushGL();
                a.__customRenderEvent.type = 'renderOpenGL';
                break;
              default:
                return;
            }
            this.__setBlendMode(a.__worldBlendMode);
            this.__pushMaskObject(a);
            a.dispatchEvent(a.__customRenderEvent);
            this.__popMaskObject(a);
            'opengl' == this.__type && this.setViewport();
          }
        },
        __resize: function (a, b) {},
        __setBlendMode: function (a) {},
        __shouldCacheHardware: function (a, b) {
          if (null == a) return null;
          switch (a.__drawableType) {
            case 4:
            case 5:
              if (1 == b) return !0;
              b = this.__shouldCacheHardware_DisplayObject(a, b);
              if (1 == b) return !0;
              if (null != a.__children) {
                var c = 0;
                for (a = a.__children; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b = this.__shouldCacheHardware_DisplayObject(d, b);
                  if (1 == b) return !0;
                }
              }
              return b;
            case 7:
              return 1 == b ? !0 : !1;
            case 9:
              return !0;
            default:
              return this.__shouldCacheHardware_DisplayObject(a, b);
          }
        },
        __shouldCacheHardware_DisplayObject: function (a, b) {
          return 1 == b || null != a.__filters
            ? !0
            : 0 == b || (null != a.__graphics && !Sb.isCompatible(a.__graphics))
              ? !1
              : null;
        },
        __updateCacheBitmap: function (a, b) {
          if (null == a) return !1;
          switch (a.__drawableType) {
            case 2:
              var c = a;
              if (
                null == c.__bitmapData ||
                (null == c.__filters &&
                  'opengl' == this.__type &&
                  null == c.__cacheBitmap)
              )
                return !1;
              b =
                null != c.__bitmapData.image &&
                c.__bitmapData.image.version != c.__imageVersion;
              break;
            case 7:
              var d = a;
              if (
                null == d.__filters &&
                'opengl' == this.__type &&
                null == d.__cacheBitmap &&
                !d.__domRender
              )
                return !1;
              b && (d.__renderDirty = !0);
              b = b || d.__dirty;
              break;
            case 9:
              if (
                null == a.__filters &&
                'opengl' == this.__type &&
                null == a.__cacheBitmap
              )
                return !1;
          }
          if (a.__isCacheBitmapRender) return !1;
          d = Lb.__pool.get();
          d.__copyFrom(a.__worldColorTransform);
          null != this.__worldColorTransform &&
            d.__combine(this.__worldColorTransform);
          var f = !1;
          if (
            a.get_cacheAsBitmap() ||
            ('opengl' != this.__type && !d.__isDefault(!0))
          ) {
            f = null;
            var g =
                (b =
                  null == a.__cacheBitmap ||
                  (a.__renderDirty &&
                    (b || (null != a.__children && 0 < a.__children.length))) ||
                  a.opaqueBackground != a.__cacheBitmapBackground) ||
                (null != a.__graphics && a.__graphics.__softwareDirty) ||
                !a.__cacheBitmapColorTransform.__equals(d, !0),
              k = b || (null != a.__graphics && a.__graphics.__hardwareDirty),
              q = this.__type;
            if (g || k)
              ('opengl' == q &&
                0 == this.__shouldCacheHardware(a, null) &&
                (q = 'canvas'),
                !g || ('canvas' != q && 'cairo' != q) || (b = !0),
                k && 'opengl' == q && (b = !0));
            g =
              b || !a.__cacheBitmap.__worldTransform.equals(a.__worldTransform);
            c = null != a.__filters;
            if ('dom' == this.__type && !c) return !1;
            if (c && !b)
              for (var p = 0, l = a.__filters; p < l.length; ) {
                var h = l[p];
                ++p;
                if (h.__renderDirty) {
                  b = !0;
                  break;
                }
              }
            null == a.__cacheBitmapMatrix && (a.__cacheBitmapMatrix = new ua());
            p =
              null != a.__cacheAsBitmapMatrix
                ? a.__cacheAsBitmapMatrix
                : a.__renderTransform;
            b ||
              (p.a == a.__cacheBitmapMatrix.a &&
                p.b == a.__cacheBitmapMatrix.b &&
                p.c == a.__cacheBitmapMatrix.c &&
                p.d == a.__cacheBitmapMatrix.d) ||
              (b = !0);
            !b &&
              'opengl' != this.__type &&
              null != a.__cacheBitmapData &&
              null != a.__cacheBitmapData.image &&
              a.__cacheBitmapData.image.version <
                a.__cacheBitmapData.__textureVersion &&
              (b = !0);
            if (!b)
              for (k = a; null != k; ) {
                if (null != k.get_scrollRect()) {
                  g = !0;
                  break;
                }
                k = k.parent;
              }
            a.__cacheBitmapMatrix.copyFrom(p);
            a.__cacheBitmapMatrix.tx = 0;
            var n = (k = a.__cacheBitmapMatrix.ty = 0),
              t = 0,
              w = 0,
              r = (h = 0);
            l = this.__pixelRatio;
            if (g || b)
              ((f = na.__pool.get()),
                a.__getFilterBounds(f, a.__cacheBitmapMatrix),
                (t = 0 < f.width ? Math.ceil((f.width + 1) * l) : 0),
                (w = 0 < f.height ? Math.ceil((f.height + 1) * l) : 0),
                (h = 0 < f.x ? Math.ceil(f.x) : Math.floor(f.x)),
                (r = 0 < f.y ? Math.ceil(f.y) : Math.floor(f.y)),
                null != a.__cacheBitmapData
                  ? t > a.__cacheBitmapData.width ||
                    w > a.__cacheBitmapData.height
                    ? ((k = Math.ceil(
                        Math.max(1.25 * t, a.__cacheBitmapData.width),
                      )),
                      (n = Math.ceil(
                        Math.max(1.25 * w, a.__cacheBitmapData.height),
                      )),
                      (b = !0))
                    : ((k = a.__cacheBitmapData.width),
                      (n = a.__cacheBitmapData.height))
                  : ((k = t), (n = w)));
            if (b)
              if (
                ((g = !0),
                (a.__cacheBitmapBackground = a.opaqueBackground),
                0.5 <= t && 0.5 <= w)
              ) {
                var x = null != a.opaqueBackground && (k != t || n != w),
                  C =
                    null != a.opaqueBackground
                      ? -16777216 | a.opaqueBackground
                      : 0,
                  m = x ? 0 : C,
                  G = 'opengl' == this.__type;
                null == a.__cacheBitmapData ||
                k > a.__cacheBitmapData.width ||
                n > a.__cacheBitmapData.height
                  ? ((a.__cacheBitmapData = new $b(k, n, !0, m)),
                    null == a.__cacheBitmap && (a.__cacheBitmap = new Ee()),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null))
                  : a.__cacheBitmapData.__fillRect(
                      a.__cacheBitmapData.rect,
                      m,
                      G,
                    );
                x &&
                  (f.setTo(0, 0, t, w),
                  a.__cacheBitmapData.__fillRect(f, C, G));
              } else
                return (
                  Lb.__pool.release(d),
                  (a.__cacheBitmap = null),
                  (a.__cacheBitmapData = null),
                  (a.__cacheBitmapData2 = null),
                  (a.__cacheBitmapData3 = null),
                  (a.__cacheBitmapRenderer = null),
                  7 == a.__drawableType &&
                    ((d = a),
                    null != d.__cacheBitmap &&
                      ((d.__cacheBitmap.__renderTransform.tx -=
                        d.__offsetX * l),
                      (d.__cacheBitmap.__renderTransform.ty -=
                        d.__offsetY * l))),
                  !0
                );
            else
              ((a.__cacheBitmapData = a.__cacheBitmap.get_bitmapData()),
                (a.__cacheBitmapData2 = null),
                (a.__cacheBitmapData3 = null));
            if (g || b)
              (a.__cacheBitmap.__worldTransform.copyFrom(a.__worldTransform),
                p == a.__renderTransform
                  ? (a.__cacheBitmap.__renderTransform.identity(),
                    a.__cacheBitmap.__renderTransform.scale(1 / l, 1 / l),
                    (a.__cacheBitmap.__renderTransform.tx =
                      a.__renderTransform.tx + h),
                    (a.__cacheBitmap.__renderTransform.ty =
                      a.__renderTransform.ty + r))
                  : (a.__cacheBitmap.__renderTransform.copyFrom(
                      a.__cacheBitmapMatrix,
                    ),
                    a.__cacheBitmap.__renderTransform.invert(),
                    a.__cacheBitmap.__renderTransform.concat(
                      a.__renderTransform,
                    ),
                    (a.__cacheBitmap.__renderTransform.a *= 1 / l),
                    (a.__cacheBitmap.__renderTransform.d *= 1 / l),
                    (a.__cacheBitmap.__renderTransform.tx += h),
                    (a.__cacheBitmap.__renderTransform.ty += r)));
            a.__cacheBitmap.smoothing = this.__allowSmoothing;
            a.__cacheBitmap.__renderable = a.__renderable;
            a.__cacheBitmap.__worldAlpha = a.__worldAlpha;
            a.__cacheBitmap.__worldBlendMode = a.__worldBlendMode;
            a.__cacheBitmap.__worldShader = a.__worldShader;
            a.__cacheBitmap.set_mask(a.__mask);
            if (b) {
              if (
                null == a.__cacheBitmapRenderer ||
                q != a.__cacheBitmapRenderer.__type
              )
                ('opengl' == q
                  ? (a.__cacheBitmapRenderer = new eb(
                      xa.__cast(this, eb).__context3D,
                      a.__cacheBitmapData,
                    ))
                  : (null == a.__cacheBitmapData.image &&
                      ((a.__cacheBitmapData = new $b(
                        k,
                        n,
                        !0,
                        null != a.opaqueBackground
                          ? -16777216 | a.opaqueBackground
                          : 0,
                      )),
                      (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData)),
                    Na.convertToCanvas(a.__cacheBitmapData.image),
                    (a.__cacheBitmapRenderer = new Ze(
                      a.__cacheBitmapData.image.buffer.__srcContext,
                    ))),
                  (a.__cacheBitmapRenderer.__worldTransform = new ua()),
                  (a.__cacheBitmapRenderer.__worldColorTransform = new Lb()));
              null == a.__cacheBitmapColorTransform &&
                (a.__cacheBitmapColorTransform = new Lb());
              a.__cacheBitmapRenderer.__stage = a.stage;
              a.__cacheBitmapRenderer.__allowSmoothing = this.__allowSmoothing;
              a.__cacheBitmapRenderer.__setBlendMode(10);
              a.__cacheBitmapRenderer.__worldAlpha = 1 / a.__worldAlpha;
              a.__cacheBitmapRenderer.__worldTransform.copyFrom(
                a.__renderTransform,
              );
              a.__cacheBitmapRenderer.__worldTransform.invert();
              a.__cacheBitmapRenderer.__worldTransform.concat(
                a.__cacheBitmapMatrix,
              );
              a.__cacheBitmapRenderer.__worldTransform.tx -= h;
              a.__cacheBitmapRenderer.__worldTransform.ty -= r;
              a.__cacheBitmapRenderer.__worldTransform.scale(l, l);
              a.__cacheBitmapRenderer.__pixelRatio = l;
              a.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(d);
              a.__cacheBitmapRenderer.__worldColorTransform.__invert();
              a.__isCacheBitmapRender = !0;
              if ('opengl' == a.__cacheBitmapRenderer.__type) {
                x = a.__cacheBitmapRenderer;
                C = x.__context3D;
                m = C.__state.renderToTexture;
                G = C.__state.renderToTextureDepthStencil;
                var y = C.__state.renderToTextureAntiAlias,
                  A = C.__state.renderToTextureSurfaceSelector,
                  N = this.__blendMode;
                this.__suspendClipAndMask();
                x.__copyShader(this);
                a.__cacheBitmapData.__setUVRect(C, 0, 0, t, w);
                x.__setRenderTarget(a.__cacheBitmapData);
                null != a.__cacheBitmapData.image &&
                  (a.__cacheBitmapData.__textureVersion =
                    a.__cacheBitmapData.image.version + 1);
                a.__cacheBitmapData.__drawGL(a, x);
                if (c) {
                  var u = !1;
                  p = 0;
                  for (l = a.__filters; p < l.length; )
                    ((h = l[p]), ++p, h.__preserveObject && (u = !0));
                  c = a.__cacheBitmapData;
                  r = null;
                  null == a.__cacheBitmapData2 ||
                  k > a.__cacheBitmapData2.width ||
                  n > a.__cacheBitmapData2.height
                    ? (a.__cacheBitmapData2 = new $b(k, n, !0, 0))
                    : (a.__cacheBitmapData2.fillRect(
                        a.__cacheBitmapData2.rect,
                        0,
                      ),
                      null != a.__cacheBitmapData2.image &&
                        (a.__cacheBitmapData2.__textureVersion =
                          a.__cacheBitmapData2.image.version + 1));
                  a.__cacheBitmapData2.__setUVRect(C, 0, 0, t, w);
                  q = a.__cacheBitmapData2;
                  u &&
                    (null == a.__cacheBitmapData3 ||
                    k > a.__cacheBitmapData3.width ||
                    n > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new $b(k, n, !0, 0))
                      : (a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                        null != a.__cacheBitmapData3.image &&
                          (a.__cacheBitmapData3.__textureVersion =
                            a.__cacheBitmapData3.image.version + 1)),
                    a.__cacheBitmapData3.__setUVRect(C, 0, 0, t, w),
                    (r = a.__cacheBitmapData3));
                  x.__setBlendMode(10);
                  x.__worldAlpha = 1;
                  x.__worldTransform.identity();
                  x.__worldColorTransform.__identity();
                  p = 0;
                  for (l = a.__filters; p < l.length; ) {
                    h = l[p];
                    ++p;
                    h.__preserveObject &&
                      (x.__setRenderTarget(r),
                      x.__renderFilterPass(
                        c,
                        x.__defaultDisplayShader,
                        h.__smooth,
                      ));
                    n = 0;
                    for (t = h.__numShaderPasses; n < t; )
                      ((k = n++),
                        (k = h.__initShader(
                          x,
                          k,
                          h.__preserveObject ? r : null,
                        )),
                        x.__setBlendMode(h.__shaderBlendMode),
                        x.__setRenderTarget(q),
                        x.__renderFilterPass(c, k, h.__smooth),
                        (k = c),
                        (c = q),
                        (q = k));
                    h.__renderDirty = !1;
                  }
                  a.__cacheBitmap.__bitmapData = c;
                }
                this.__blendMode = 10;
                this.__setBlendMode(N);
                this.__copyShader(x);
                null != m
                  ? C.setRenderToTexture(m, G, y, A)
                  : C.setRenderToBackBuffer();
                this.__resumeClipAndMask(x);
                this.setViewport();
                a.__cacheBitmapColorTransform.__copyFrom(d);
              } else {
                a.__cacheBitmapData.__drawCanvas(a, a.__cacheBitmapRenderer);
                if (c) {
                  u = t = !1;
                  p = 0;
                  for (l = a.__filters; p < l.length; )
                    ((h = l[p]),
                      ++p,
                      h.__needSecondBitmapData && (t = !0),
                      h.__preserveObject && (u = !0));
                  c = a.__cacheBitmapData;
                  r = null;
                  t
                    ? (null == a.__cacheBitmapData2 ||
                      null == a.__cacheBitmapData2.image ||
                      k > a.__cacheBitmapData2.width ||
                      n > a.__cacheBitmapData2.height
                        ? (a.__cacheBitmapData2 = new $b(k, n, !0, 0))
                        : a.__cacheBitmapData2.fillRect(
                            a.__cacheBitmapData2.rect,
                            0,
                          ),
                      (q = a.__cacheBitmapData2))
                    : (q = c);
                  u &&
                    (null == a.__cacheBitmapData3 ||
                    null == a.__cacheBitmapData3.image ||
                    k > a.__cacheBitmapData3.width ||
                    n > a.__cacheBitmapData3.height
                      ? (a.__cacheBitmapData3 = new $b(k, n, !0, 0))
                      : a.__cacheBitmapData3.fillRect(
                          a.__cacheBitmapData3.rect,
                          0,
                        ),
                    (r = a.__cacheBitmapData3));
                  null == a.__tempPoint && (a.__tempPoint = new B());
                  n = a.__tempPoint;
                  p = 0;
                  for (l = a.__filters; p < l.length; )
                    ((h = l[p]),
                      ++p,
                      h.__preserveObject && r.copyPixels(c, c.rect, n),
                      (k = h.__applyFilter(q, c, c.rect, n)),
                      h.__preserveObject &&
                        k.draw(
                          r,
                          null,
                          null != a.__objectTransform
                            ? a.__objectTransform.__colorTransform
                            : null,
                        ),
                      (h.__renderDirty = !1),
                      t && k == q && ((k = c), (c = q), (q = k)));
                  a.__cacheBitmapData != c &&
                    ((k = a.__cacheBitmapData),
                    (a.__cacheBitmapData = c),
                    (a.__cacheBitmapData2 = k),
                    (a.__cacheBitmap.__bitmapData = a.__cacheBitmapData),
                    (a.__cacheBitmapRenderer = null));
                  a.__cacheBitmap.__imageVersion =
                    a.__cacheBitmapData.__textureVersion;
                }
                a.__cacheBitmapColorTransform.__copyFrom(d);
                a.__cacheBitmapColorTransform.__isDefault(!0) ||
                  ((a.__cacheBitmapColorTransform.alphaMultiplier = 1),
                  a.__cacheBitmapData.colorTransform(
                    a.__cacheBitmapData.rect,
                    a.__cacheBitmapColorTransform,
                  ));
              }
              a.__isCacheBitmapRender = !1;
            }
            (g || b) && na.__pool.release(f);
            f = g;
          } else
            null != a.__cacheBitmap &&
              ('dom' == this.__type &&
                this.__renderDrawableClear(a.__cacheBitmap),
              (a.__cacheBitmap = null),
              (a.__cacheBitmapData = null),
              (a.__cacheBitmapData2 = null),
              (a.__cacheBitmapData3 = null),
              (a.__cacheBitmapColorTransform = null),
              (a.__cacheBitmapRenderer = null),
              (f = !0));
          Lb.__pool.release(d);
          f &&
            7 == a.__drawableType &&
            ((d = a),
            null != d.__cacheBitmap &&
              ((d.__cacheBitmap.__renderTransform.tx -= d.__offsetX),
              (d.__cacheBitmap.__renderTransform.ty -= d.__offsetY)));
          return f;
        },
        __class__: sd,
      });
      var gj = function (a) {
        sd.call(this);
      };
      h['openfl.display.CairoRenderer'] = gj;
      gj.__name__ = 'openfl.display.CairoRenderer';
      gj.__super__ = sd;
      gj.prototype = u(sd.prototype, {
        applyMatrix: function (a, b) {
          null == b && (b = this.cairo);
          this.__matrix.copyFrom(a);
          this.cairo == b &&
            null != this.__worldTransform &&
            this.__matrix.concat(this.__worldTransform);
          this.__matrix3[0] = this.__matrix.a;
          this.__matrix3[1] = this.__matrix.b;
          this.__matrix3[3] = this.__matrix.c;
          this.__matrix3[4] = this.__matrix.d;
          this.__roundPixels
            ? ((this.__matrix3[6] = Math.round(this.__matrix.tx)),
              (this.__matrix3[7] = Math.round(this.__matrix.ty)))
            : ((this.__matrix3[6] = this.__matrix.tx),
              (this.__matrix3[7] = this.__matrix.ty));
          b.set_matrix(this.__matrix3);
        },
        __clear: function () {
          if (
            null != this.cairo &&
            (this.cairo.identityMatrix(),
            null != this.__stage && this.__stage.__clearBeforeRender)
          ) {
            var a = this.__blendMode;
            this.__setBlendMode(10);
            this.cairo.setSourceRGB(
              this.__stage.__colorSplit[0],
              this.__stage.__colorSplit[1],
              this.__stage.__colorSplit[2],
            );
            this.cairo.paint();
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.cairo.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.cairo.restore();
        },
        __pushMask: function (a) {
          this.cairo.save();
          this.applyMatrix(a.__renderTransform, this.cairo);
          this.cairo.newPath();
          this.__renderDrawableMask(a);
          this.cairo.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.cairo.save();
          this.applyMatrix(b, this.cairo);
          this.cairo.newPath();
          this.cairo.rectangle(a.x, a.y, a.width, a.height);
          this.cairo.clip();
        },
        __render: function (a) {
          null != this.cairo && this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 6:
                !a.__renderable ||
                  0 >= a.__worldAlpha ||
                  null == a.__currentState ||
                  (this.__pushMaskObject(a),
                  this.__renderDrawable(a.__currentState),
                  this.__popMaskObject(a),
                  this.__renderEvent(a));
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                this.cairo.rectangle(0, 0, a.get_width(), a.get_height());
                break;
              case 6:
                this.__renderDrawableMask(a.__currentState);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a), this.__setBlendModeCairo(this.cairo, a));
        },
        __setBlendModeCairo: function (a, b) {
          switch (b) {
            case 0:
              a.setOperator(12);
              break;
            case 2:
              a.setOperator(17);
              break;
            case 3:
              a.setOperator(23);
              break;
            case 5:
              a.setOperator(21);
              break;
            case 7:
              a.setOperator(2);
              break;
            case 8:
              a.setOperator(18);
              break;
            case 9:
              a.setOperator(14);
              break;
            case 11:
              a.setOperator(16);
              break;
            case 12:
              a.setOperator(15);
              break;
            default:
              a.setOperator(2);
          }
        },
        __class__: gj,
      });
      var Ze = function (a) {
        sd.call(this);
        this.context = a;
        this.__tempMatrix = new ua();
        this.__type = 'canvas';
      };
      h['openfl.display.CanvasRenderer'] = Ze;
      Ze.__name__ = 'openfl.display.CanvasRenderer';
      Ze.__super__ = sd;
      Ze.prototype = u(sd.prototype, {
        applySmoothing: function (a, b) {
          a.imageSmoothingEnabled = b;
        },
        setTransform: function (a, b) {
          null == b
            ? (b = this.context)
            : this.context == b &&
              null != this.__worldTransform &&
              (this.__tempMatrix.copyFrom(a),
              this.__tempMatrix.concat(this.__worldTransform),
              (a = this.__tempMatrix));
          this.__roundPixels
            ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0)
            : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
        },
        __clear: function () {
          if (null != this.__stage) {
            var a = this.__blendMode;
            this.__blendMode = null;
            this.__setBlendMode(10);
            this.context.setTransform(1, 0, 0, 1, 0, 0);
            this.context.globalAlpha = 1;
            !this.__stage.__transparent && this.__stage.__clearBeforeRender
              ? ((this.context.fillStyle = this.__stage.__colorString),
                this.context.fillRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                ))
              : this.__stage.__transparent &&
                this.__stage.__clearBeforeRender &&
                this.context.clearRect(
                  0,
                  0,
                  this.__stage.stageWidth * this.__stage.window.__scale,
                  this.__stage.stageHeight * this.__stage.window.__scale,
                );
            this.__setBlendMode(a);
          }
        },
        __popMask: function () {
          this.context.restore();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          this.context.restore();
        },
        __pushMask: function (a) {
          this.context.save();
          this.setTransform(a.__renderTransform, this.context);
          this.context.beginPath();
          this.__renderDrawableMask(a);
          this.context.closePath();
          this.context.clip();
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask ||
            this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.context.save();
          this.setTransform(b, this.context);
          this.context.beginPath();
          this.context.rect(a.x, a.y, a.width, a.height);
          this.context.clip();
        },
        __render: function (a) {
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                hj.renderDrawable(a, this);
                break;
              case 2:
                Bh.renderDrawable(a, this);
                break;
              case 3:
                fg.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                ij.renderDrawable(a, this);
                break;
              case 6:
                jj.renderDrawable(a, this);
                break;
              case 7:
                ba.renderDrawable(a, this);
                break;
              case 8:
                gg.renderDrawable(a, this);
                break;
              case 9:
                kf.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                hj.renderDrawableMask(a, this);
                break;
              case 2:
                Bh.renderDrawableMask(a, this);
                break;
              case 3:
                fg.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                ij.renderDrawableMask(a, this);
                break;
              case 6:
                jj.renderDrawableMask(a, this);
                break;
              case 7:
                ba.renderDrawableMask(a, this);
                break;
              case 8:
                gg.renderDrawableMask(a, this);
                break;
              case 9:
                kf.renderDrawableMask(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a &&
            ((this.__blendMode = a),
            this.__setBlendModeContext(this.context, a));
        },
        __setBlendModeContext: function (a, b) {
          switch (b) {
            case 0:
              a.globalCompositeOperation = 'lighter';
              break;
            case 2:
              a.globalCompositeOperation = 'darken';
              break;
            case 3:
              a.globalCompositeOperation = 'difference';
              break;
            case 5:
              a.globalCompositeOperation = 'hard-light';
              break;
            case 8:
              a.globalCompositeOperation = 'lighten';
              break;
            case 9:
              a.globalCompositeOperation = 'multiply';
              break;
            case 11:
              a.globalCompositeOperation = 'overlay';
              break;
            case 12:
              a.globalCompositeOperation = 'screen';
              break;
            default:
              a.globalCompositeOperation = 'source-over';
          }
        },
        __class__: Ze,
      });
      var Rl = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'none';
              case 1:
                return 'round';
              case 2:
                return 'square';
              default:
                return null;
            }
          },
        },
        kj = function (a) {
          ca.call(this);
          this.__drawableType = 10;
          this.__element = a;
        };
      h['openfl.display.DOMElement'] = kj;
      kj.__name__ = 'openfl.display.DOMElement';
      kj.__super__ = ca;
      kj.prototype = u(ca.prototype, { __class__: kj });
      var Ch = function (a) {
        sd.call(this);
        this.element = a;
        ca.__supportDOM = !0;
        a = window.getComputedStyle(document.documentElement, '');
        a = (Array.prototype.slice
          .call(a)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === a.OLink && ['', 'o']))[1];
        'WebKit|Moz|MS|O'.match(new RegExp('(' + a + ')', 'i'));
        a[0].toUpperCase();
        a.substr(1);
        this.__vendorPrefix = a;
        this.__transformProperty =
          'webkit' == a ? '-webkit-transform' : 'transform';
        this.__transformOriginProperty =
          'webkit' == a ? '-webkit-transform-origin' : 'transform-origin';
        this.__clipRects = [];
        this.__z = this.__numClipRects = 0;
        this.__type = 'dom';
        this.__canvasRenderer = new Ze(null);
        this.__canvasRenderer.__isDOM = !0;
      };
      h['openfl.display.DOMRenderer'] = Ch;
      Ch.__name__ = 'openfl.display.DOMRenderer';
      Ch.__super__ = sd;
      Ch.prototype = u(sd.prototype, {
        __applyStyle: function (a, b, c, d) {
          var f = a.__style;
          if (b && a.__renderTransformChanged) {
            b = a.__renderTransform;
            var g = this.__roundPixels;
            null == g && (g = !1);
            f.setProperty(
              this.__transformProperty,
              g
                ? 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    (b.tx | 0) +
                    ', ' +
                    (b.ty | 0) +
                    ', 0, 1)'
                : 'matrix3d(' +
                    b.a +
                    ', ' +
                    b.b +
                    ', 0, 0, ' +
                    b.c +
                    ', ' +
                    b.d +
                    ', 0, 0, 0, 0, 1, 0, ' +
                    b.tx +
                    ', ' +
                    b.ty +
                    ', 0, 1)',
              null,
            );
          }
          a.__worldZ != ++this.__z &&
            ((a.__worldZ = this.__z),
            f.setProperty(
              'z-index',
              null == a.__worldZ ? 'null' : '' + a.__worldZ,
              null,
            ));
          c &&
            a.__worldAlphaChanged &&
            (1 > a.__worldAlpha
              ? f.setProperty(
                  'opacity',
                  null == a.__worldAlpha ? 'null' : '' + a.__worldAlpha,
                  null,
                )
              : f.removeProperty('opacity'));
          d &&
            a.__worldClipChanged &&
            (null == a.__worldClip
              ? f.removeProperty('clip')
              : ((a = a.__worldClip),
                f.setProperty(
                  'clip',
                  'rect(' +
                    a.y +
                    'px, ' +
                    a.get_right() +
                    'px, ' +
                    a.get_bottom() +
                    'px, ' +
                    a.x +
                    'px)',
                  null,
                )));
        },
        __initializeElement: function (a, b) {
          var c = (a.__style = b.style);
          c.setProperty('position', 'absolute', null);
          c.setProperty('top', '0', null);
          c.setProperty('left', '0', null);
          c.setProperty(this.__transformOriginProperty, '0 0 0', null);
          this.element.appendChild(b);
          a.__worldAlphaChanged = !0;
          a.__renderTransformChanged = !0;
          a.__worldVisibleChanged = !0;
          a.__worldClipChanged = !0;
          a.__worldClip = null;
          a.__worldZ = -1;
        },
        __popMask: function () {
          this.__popMaskRect();
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect();
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            (this.__currentClipRect =
              0 < this.__numClipRects
                ? this.__clipRects[this.__numClipRects - 1]
                : null));
        },
        __pushMask: function (a) {
          this.__pushMaskRect(a.getBounds(a), a.__renderTransform);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new na());
          var c = this.__clipRects[this.__numClipRects];
          a.__transform(c, b);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            c.__contract(a.x, a.y, a.width, a.height));
          0 > c.height && (c.height = 0);
          0 > c.width && (c.width = 0);
          this.__currentClipRect = c;
          this.__numClipRects++;
        },
        __render: function (a) {
          this.element.style.background = this.__stage.__transparent
            ? 'none'
            : this.__stage.__colorString;
          this.__z = 1;
          this.__renderDrawable(a);
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Xb.renderDrawable(a, this);
                break;
              case 3:
                td.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                lj.renderDrawable(a, this);
                break;
              case 6:
                mj.renderDrawable(a, this);
                break;
              case 7:
                Jf.renderDrawable(a, this);
                break;
              case 8:
                lf.renderDrawable(a, this);
                break;
              case 9:
                Kf.renderDrawable(a, this);
                break;
              case 10:
                (null != a.stage && a.__worldVisible && a.__renderable
                  ? (a.__active ||
                      (this.__initializeElement(a, a.__element),
                      (a.__active = !0)),
                    this.__updateClip(a),
                    this.__applyStyle(a, !0, !0, !0))
                  : a.__active &&
                    (this.element.removeChild(a.__element), (a.__active = !1)),
                  td.renderDrawable(a, this));
            }
        },
        __renderDrawableClear: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 2:
                Xb.renderDrawableClear(a, this);
                break;
              case 3:
                td.renderDrawableClear(a, this);
                break;
              case 4:
              case 5:
                lj.renderDrawableClear(a, this);
                break;
              case 6:
                mj.renderDrawableClear(a, this);
                break;
              case 7:
                Jf.renderDrawableClear(a, this);
                break;
              case 8:
                lf.renderDrawableClear(a, this);
                break;
              case 9:
                Kf.renderDrawableClear(a, this);
            }
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a);
        },
        __updateClip: function (a) {
          if (null == this.__currentClipRect)
            ((a.__worldClipChanged = null != a.__worldClip),
              (a.__worldClip = null));
          else {
            null == a.__worldClip && (a.__worldClip = new na());
            var b = na.__pool.get(),
              c = ua.__pool.get();
            c.copyFrom(a.__renderTransform);
            c.invert();
            this.__currentClipRect.__transform(b, c);
            b.equals(a.__worldClip)
              ? (a.__worldClipChanged = !1)
              : (a.__worldClip.copyFrom(b), (a.__worldClipChanged = !0));
            na.__pool.release(b);
            ua.__pool.release(c);
          }
        },
        __class__: Ch,
      });
      var Cd = function (a) {
        this.byteCode = a;
        this.precisionHint = 1;
        this.__glSourceDirty = !0;
        this.__numPasses = 1;
        this.__data = Fl._new(a);
      };
      h['openfl.display.Shader'] = Cd;
      Cd.__name__ = 'openfl.display.Shader';
      Cd.prototype = {
        __clearUseArray: function () {
          for (var a = 0, b = this.__paramBool; a < b.length; ) {
            var c = b[a];
            ++a;
            c.__useArray = !1;
          }
          a = 0;
          for (b = this.__paramFloat; a < b.length; )
            ((c = b[a]), ++a, (c.__useArray = !1));
          a = 0;
          for (b = this.__paramInt; a < b.length; )
            ((c = b[a]), ++a, (c.__useArray = !1));
        },
        __createGLShader: function (a, b) {
          var c = this.__context.gl,
            d = c.createShader(b);
          c.shaderSource(d, a);
          c.compileShader(d);
          var f = c.getShaderInfoLog(d),
            g = null != f && '' != P.trim(f),
            k = c.getShaderParameter(d, c.COMPILE_STATUS);
          if (g || 0 == k)
            ((b =
              (0 == k ? 'Error' : 'Info') +
              (b == c.VERTEX_SHADER
                ? ' compiling vertex shader'
                : ' compiling fragment shader')),
              (b = b + ('\n' + f) + ('\n' + a)),
              0 == k
                ? La.error(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 337,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  })
                : g &&
                  La.debug(b, {
                    fileName: 'openfl/display/Shader.hx',
                    lineNumber: 338,
                    className: 'openfl.display.Shader',
                    methodName: '__createGLShader',
                  }));
          return d;
        },
        __createGLProgram: function (a, b) {
          var c = this.__context.gl;
          a = this.__createGLShader(a, c.VERTEX_SHADER);
          var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
          b = c.createProgram();
          for (var f = 0, g = this.__paramFloat; f < g.length; ) {
            var k = g[f];
            ++f;
            if (
              -1 < k.name.indexOf('Position') &&
              P.startsWith(k.name, 'openfl_')
            ) {
              c.bindAttribLocation(b, 0, k.name);
              break;
            }
          }
          c.attachShader(b, a);
          c.attachShader(b, d);
          c.linkProgram(b);
          0 == c.getProgramParameter(b, c.LINK_STATUS) &&
            ((c =
              'Unable to initialize the shader program\n' +
              c.getProgramInfoLog(b)),
            La.error(c, {
              fileName: 'openfl/display/Shader.hx',
              lineNumber: 371,
              className: 'openfl.display.Shader',
              methodName: '__createGLProgram',
            }));
          return b;
        },
        __disable: function () {
          null != this.program && this.__disableGL();
        },
        __disableGL: function () {
          for (
            var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            f.__disableGL(this.__context, b);
            ++b;
            if (b == a.MAX_TEXTURE_IMAGE_UNITS) break;
          }
          c = 0;
          for (d = this.__paramBool; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          c = 0;
          for (d = this.__paramFloat; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          c = 0;
          for (d = this.__paramInt; c < d.length; )
            ((b = d[c]), ++c, b.__disableGL(this.__context));
          this.__context.__bindGLArrayBuffer(null);
          'opengl' == this.__context.__context.type && a.disable(a.TEXTURE_2D);
        },
        __enable: function () {
          this.__init();
          null != this.program && this.__enableGL();
        },
        __enableGL: function () {
          for (
            var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData;
            c < d.length;

          ) {
            var f = d[c];
            ++c;
            b.uniform1i(f.index, a);
            ++a;
          }
          'opengl' == this.__context.__context.type &&
            0 < a &&
            b.enable(b.TEXTURE_2D);
        },
        __init: function () {
          null == this.__data && (this.__data = Fl._new(null));
          null == this.__glFragmentSource ||
            null == this.__glVertexSource ||
            (null != this.program && !this.__glSourceDirty) ||
            this.__initGL();
        },
        __initGL: function () {
          if (this.__glSourceDirty || null == this.__paramBool)
            ((this.__glSourceDirty = !1),
              (this.program = null),
              (this.__inputBitmapData = []),
              (this.__paramBool = []),
              (this.__paramFloat = []),
              (this.__paramInt = []),
              this.__processGLData(this.get_glVertexSource(), 'attribute'),
              this.__processGLData(this.get_glVertexSource(), 'uniform'),
              this.__processGLData(this.get_glFragmentSource(), 'uniform'));
          if (null != this.__context && null == this.program) {
            var a = this.__context.gl,
              b =
                1 == this.precisionHint
                  ? 'precision mediump float;\n'
                  : 'precision lowp float;\n',
              c = b + this.get_glVertexSource();
            b += this.get_glFragmentSource();
            var d = c + b;
            Object.prototype.hasOwnProperty.call(this.__context.__programs.h, d)
              ? (this.program = this.__context.__programs.h[d])
              : ((this.program = this.__context.createProgram(1)),
                (this.program.__glProgram = this.__createGLProgram(c, b)),
                (this.__context.__programs.h[d] = this.program));
            if (null != this.program) {
              this.glProgram = this.program.__glProgram;
              c = 0;
              for (b = this.__inputBitmapData; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramBool; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramFloat; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
              c = 0;
              for (b = this.__paramInt; c < b.length; )
                ((d = b[c]),
                  ++c,
                  (d.index = d.__isUniform
                    ? a.getUniformLocation(this.glProgram, d.name)
                    : a.getAttribLocation(this.glProgram, d.name)));
            }
          }
        },
        __processGLData: function (a, b) {
          var c = 0,
            d;
          for (
            d =
              'uniform' == b
                ? new Ba('uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '')
                : new Ba('attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)', '');
            d.matchSub(a, c);

          ) {
            var f = d.matched(1);
            var g = d.matched(2);
            if (!P.startsWith(g, 'gl_')) {
              c = 'uniform' == b;
              if (P.startsWith(f, 'sampler')) {
                f = new nj();
                f.name = g;
                f.__isUniform = c;
                this.__inputBitmapData.push(f);
                switch (g) {
                  case 'bitmap':
                    this.__bitmap = f;
                    break;
                  case 'openfl_Texture':
                    this.__texture = f;
                }
                this.__data[g] = f;
                this.__isGenerated && (this[g] = f);
              } else if (
                !Object.prototype.hasOwnProperty.call(this.__data, g) ||
                null == ya.field(this.__data, g)
              ) {
                switch (f) {
                  case 'bool':
                    var k = 0;
                    break;
                  case 'bvec2':
                    k = 1;
                    break;
                  case 'bvec3':
                    k = 2;
                    break;
                  case 'bvec4':
                    k = 3;
                    break;
                  case 'dvec2':
                  case 'vec2':
                    k = 5;
                    break;
                  case 'dvec3':
                  case 'vec3':
                    k = 6;
                    break;
                  case 'dvec4':
                  case 'vec4':
                    k = 7;
                    break;
                  case 'double':
                  case 'float':
                    k = 4;
                    break;
                  case 'mat2':
                  case 'mat2x2':
                    k = 12;
                    break;
                  case 'mat2x3':
                    k = 13;
                    break;
                  case 'mat2x4':
                    k = 14;
                    break;
                  case 'mat3x2':
                    k = 15;
                    break;
                  case 'mat3':
                  case 'mat3x3':
                    k = 16;
                    break;
                  case 'mat3x4':
                    k = 17;
                    break;
                  case 'mat4x2':
                    k = 18;
                    break;
                  case 'mat4x3':
                    k = 19;
                    break;
                  case 'mat4':
                  case 'mat4x4':
                    k = 20;
                    break;
                  case 'int':
                  case 'uint':
                    k = 8;
                    break;
                  case 'ivec2':
                  case 'uvec2':
                    k = 9;
                    break;
                  case 'ivec3':
                  case 'uvec3':
                    k = 10;
                    break;
                  case 'ivec4':
                  case 'uvec4':
                    k = 11;
                    break;
                  default:
                    k = null;
                }
                switch (k) {
                  case 1:
                  case 5:
                  case 9:
                    f = 2;
                    break;
                  case 2:
                  case 6:
                  case 10:
                    f = 3;
                    break;
                  case 3:
                  case 7:
                  case 11:
                  case 12:
                    f = 4;
                    break;
                  case 16:
                    f = 9;
                    break;
                  case 20:
                    f = 16;
                    break;
                  default:
                    f = 1;
                }
                switch (k) {
                  case 12:
                    var q = 2;
                    break;
                  case 16:
                    q = 3;
                    break;
                  case 20:
                    q = 4;
                    break;
                  default:
                    q = 1;
                }
                switch (k) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                    var p = new Mg();
                    p.set_name(g);
                    p.type = k;
                    p.__arrayLength = q;
                    p.__isBool = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramBool.push(p);
                    'openfl_HasColorTransform' == g &&
                      (this.__hasColorTransform = p);
                    this.__data[g] = p;
                    this.__isGenerated && (this[g] = p);
                    break;
                  case 8:
                  case 9:
                  case 10:
                  case 11:
                    p = new Mg();
                    p.set_name(g);
                    p.type = k;
                    p.__arrayLength = q;
                    p.__isInt = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramInt.push(p);
                    this.__data[g] = p;
                    this.__isGenerated && (this[g] = p);
                    break;
                  default:
                    p = new Mg();
                    p.set_name(g);
                    p.type = k;
                    p.__arrayLength = q;
                    0 < q &&
                      ((k = q * q),
                      (k = null != k ? new Float32Array(k) : null),
                      (p.__uniformMatrix = k));
                    p.__isFloat = !0;
                    p.__isUniform = c;
                    p.__length = f;
                    this.__paramFloat.push(p);
                    if (P.startsWith(g, 'openfl_'))
                      switch (g) {
                        case 'openfl_Alpha':
                          this.__alpha = p;
                          break;
                        case 'openfl_ColorMultiplier':
                          this.__colorMultiplier = p;
                          break;
                        case 'openfl_ColorOffset':
                          this.__colorOffset = p;
                          break;
                        case 'openfl_Matrix':
                          this.__matrix = p;
                          break;
                        case 'openfl_Position':
                          this.__position = p;
                          break;
                        case 'openfl_TextureCoord':
                          this.__textureCoord = p;
                          break;
                        case 'openfl_TextureSize':
                          this.__textureSize = p;
                      }
                    this.__data[g] = p;
                    this.__isGenerated && (this[g] = p);
                }
              }
              g = d.matchedPos();
              c = g.pos + g.len;
            }
          }
        },
        __update: function () {
          null != this.program && this.__updateGL();
        },
        __updateFromBuffer: function (a, b) {
          null != this.program && this.__updateGLFromBuffer(a, b);
        },
        __updateGL: function () {
          for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__updateGL(this.__context, a);
            ++a;
          }
          b = 0;
          for (c = this.__paramBool; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (c = this.__paramFloat; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
          b = 0;
          for (c = this.__paramInt; b < c.length; )
            ((a = c[b]), ++b, a.__updateGL(this.__context));
        },
        __updateGLFromBuffer: function (a, b) {
          for (var c = 0, d, f, g, k, q, p = 0, l = a.inputCount; p < l; )
            ((q = p++),
              (d = a.inputRefs[q]),
              (f = a.inputs[q]),
              (g = a.inputFilter[q]),
              (k = a.inputMipFilter[q]),
              (q = a.inputWrap[q]),
              null != f && (d.__updateGL(this.__context, c, f, g, k, q), ++c));
          p = this.__context.gl;
          0 < a.paramDataLength
            ? (null == a.paramDataBuffer &&
                (a.paramDataBuffer = p.createBuffer()),
              this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
              Nc.bufferData(p, p.ARRAY_BUFFER, a.paramData, p.DYNAMIC_DRAW))
            : this.__context.__bindGLArrayBuffer(null);
          f = d = c = 0;
          g = a.paramBoolCount;
          k = a.paramFloatCount;
          var h = a.paramData,
            n = null,
            t = null,
            w = null;
          p = 0;
          for (l = a.paramCount; p < l; ) {
            q = p++;
            var r = !1;
            if (q < g) {
              var x = a.paramRefs_Bool[c];
              for (var C = 0, m = a.overrideBoolCount; C < m; ) {
                var G = C++;
                if (x.name == a.overrideBoolNames[G]) {
                  n = a.overrideBoolValues[G];
                  r = !0;
                  break;
                }
              }
              r
                ? x.__updateGL(this.__context, n)
                : x.__updateGLFromBuffer(
                    this.__context,
                    h,
                    a.paramPositions[q],
                    a.paramLengths[q],
                    b,
                  );
              ++c;
            } else if (q < g + k) {
              x = a.paramRefs_Float[d];
              C = 0;
              for (m = a.overrideFloatCount; C < m; )
                if (((G = C++), x.name == a.overrideFloatNames[G])) {
                  t = a.overrideFloatValues[G];
                  r = !0;
                  break;
                }
              r
                ? x.__updateGL(this.__context, t)
                : x.__updateGLFromBuffer(
                    this.__context,
                    h,
                    a.paramPositions[q],
                    a.paramLengths[q],
                    b,
                  );
              ++d;
            } else {
              x = a.paramRefs_Int[f];
              C = 0;
              for (m = a.overrideIntCount; C < m; )
                if (((G = C++), x.name == a.overrideIntNames[G])) {
                  w = a.overrideIntValues[G];
                  r = !0;
                  break;
                }
              r
                ? x.__updateGL(this.__context, w)
                : x.__updateGLFromBuffer(
                    this.__context,
                    h,
                    a.paramPositions[q],
                    a.paramLengths[q],
                    b,
                  );
              ++f;
            }
          }
        },
        get_glFragmentSource: function () {
          return this.__glFragmentSource;
        },
        get_glVertexSource: function () {
          return this.__glVertexSource;
        },
        __class__: Cd,
        __properties__: {
          get_glVertexSource: 'get_glVertexSource',
          get_glFragmentSource: 'get_glFragmentSource',
        },
      };
      var oj = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Cd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.display.DisplayObjectShader'] = oj;
      oj.__name__ = 'openfl.display.DisplayObjectShader';
      oj.__super__ = Cd;
      oj.prototype = u(Cd.prototype, { __class__: oj });
      var Lk = function (a, b) {
        sa.call(this);
        this.name = a;
        this.frame = b;
      };
      h['openfl.display.FrameLabel'] = Lk;
      Lk.__name__ = 'openfl.display.FrameLabel';
      Lk.__super__ = sa;
      Lk.prototype = u(sa.prototype, { __class__: Lk });
      var Dd = function (a) {
        this.__dirty = !0;
        this.__owner = a;
        this.__commands = new ud();
        this.__positionY = this.__positionX = this.__strokePadding = 0;
        this.__renderTransform = new ua();
        this.__usedShaderBuffers = new Xa();
        this.__worldTransform = new ua();
        this.__height = this.__width = 0;
        this.__bitmapScale = 1;
        this.__shaderBufferPool = new ub(function () {
          return new pj();
        });
        this.moveTo(0, 0);
      };
      h['openfl.display.Graphics'] = Dd;
      Dd.__name__ = 'openfl.display.Graphics';
      Dd.prototype = {
        beginBitmapFill: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          this.__commands.beginBitmapFill(
            a,
            null != b ? b.clone() : null,
            c,
            d,
          );
          this.__visible = !0;
        },
        beginFill: function (a, b) {
          null == b && (b = 1);
          null == a && (a = 0);
          this.__commands.beginFill(a & 16777215, b);
          0 < b && (this.__visible = !0);
        },
        beginGradientFill: function (a, b, c, d, f, g, k, q) {
          null == q && (q = 0);
          null == k && (k = 1);
          null == g && (g = 0);
          if (null != b && 0 != b.length) {
            if (null == c) {
              c = [];
              for (var p = 0, l = b.length; p < l; ) (p++, c.push(1));
            }
            if (null == d)
              for (d = [], p = 0, l = b.length; p < l; ) {
                var h = p++;
                d.push(Math.ceil((h / (b.length - 1)) * 255));
              }
            if (!(c.length < b.length || d.length < b.length))
              for (
                this.__commands.beginGradientFill(a, b, c, d, f, g, k, q),
                  p = 0;
                p < c.length;

              )
                if (((a = c[p]), ++p, 0 < a)) {
                  this.__visible = !0;
                  break;
                }
          }
        },
        beginShaderFill: function (a, b) {
          null != a &&
            ((b = this.__shaderBufferPool.get()),
            this.__usedShaderBuffers.add(b),
            b.update(a),
            this.__commands.beginShaderFill(b));
        },
        clear: function () {
          for (var a = this.__usedShaderBuffers.h; null != a; ) {
            var b = a.item;
            a = a.next;
            this.__shaderBufferPool.release(b);
          }
          this.__usedShaderBuffers.clear();
          this.__commands.clear();
          this.__strokePadding = 0;
          null != this.__bounds &&
            (this.set___dirty(!0),
            (this.__transformDirty = !0),
            (this.__bounds = null));
          this.__visible = !1;
          this.__positionY = this.__positionX = 0;
          this.moveTo(0, 0);
        },
        cubicCurveTo: function (a, b, c, d, f, g) {
          var k = this.__findExtrema(this.__positionX, a, c, f),
            q = this.__findExtrema(this.__positionY, b, d, g);
          this.__inflateBounds(
            k.min - this.__strokePadding,
            q.min - this.__strokePadding,
          );
          this.__inflateBounds(
            k.max + this.__strokePadding,
            q.max + this.__strokePadding,
          );
          this.__positionX = f;
          this.__positionY = g;
          this.__commands.cubicCurveTo(a, b, c, d, f, g);
          this.set___dirty(!0);
        },
        curveTo: function (a, b, c, d) {
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          var f =
            (a < c && a > this.__positionX) || (a > c && a < this.__positionX)
              ? c
              : this.__calculateBezierQuadPoint(
                  (this.__positionX - a) / (this.__positionX - 2 * a + c),
                  this.__positionX,
                  a,
                  c,
                );
          var g =
            (b < d && b > this.__positionY) || (b > d && b < this.__positionY)
              ? d
              : this.__calculateBezierQuadPoint(
                  (this.__positionY - b) / (this.__positionY - 2 * b + d),
                  this.__positionY,
                  b,
                  d,
                );
          this.__inflateBounds(
            f - this.__strokePadding,
            g - this.__strokePadding,
          );
          this.__inflateBounds(
            f + this.__strokePadding,
            g + this.__strokePadding,
          );
          this.__positionX = c;
          this.__positionY = d;
          this.__inflateBounds(
            this.__positionX - this.__strokePadding,
            this.__positionY - this.__strokePadding,
          );
          this.__inflateBounds(
            this.__positionX + this.__strokePadding,
            this.__positionY + this.__strokePadding,
          );
          this.__commands.curveTo(a, b, c, d);
          this.set___dirty(!0);
        },
        drawCircle: function (a, b, c) {
          0 >= c ||
            (this.__inflateBounds(
              a - c - this.__strokePadding,
              b - c - this.__strokePadding,
            ),
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + c + this.__strokePadding,
            ),
            this.__commands.drawCircle(a, b, c),
            this.set___dirty(!0));
        },
        drawGraphicsData: function (a) {
          for (a = a.iterator(); a.hasNext(); ) {
            var b = a.next();
            switch (b.__graphicsDataType) {
              case 0:
                if (null != b.fill) {
                  var c = b.thickness;
                  isNaN(c) && (c = null);
                  switch (b.fill.__graphicsFillType) {
                    case 0:
                      var d = b.fill;
                      this.lineStyle(
                        c,
                        d.color,
                        d.alpha,
                        b.pixelHinting,
                        b.scaleMode,
                        b.caps,
                        b.joints,
                        b.miterLimit,
                      );
                      break;
                    case 1:
                      d = b.fill;
                      this.lineStyle(
                        c,
                        0,
                        1,
                        b.pixelHinting,
                        b.scaleMode,
                        b.caps,
                        b.joints,
                        b.miterLimit,
                      );
                      this.lineGradientStyle(
                        d.type,
                        d.colors,
                        d.alphas,
                        d.ratios,
                        d.matrix,
                        d.spreadMethod,
                        d.interpolationMethod,
                        d.focalPointRatio,
                      );
                      break;
                    case 2:
                      ((d = b.fill),
                        this.lineStyle(
                          c,
                          0,
                          1,
                          b.pixelHinting,
                          b.scaleMode,
                          b.caps,
                          b.joints,
                          b.miterLimit,
                        ),
                        this.lineBitmapStyle(
                          d.bitmapData,
                          d.matrix,
                          d.repeat,
                          d.smooth,
                        ));
                  }
                } else this.lineStyle();
                break;
              case 1:
                d = b;
                this.beginFill(d.color, d.alpha);
                break;
              case 2:
                d = b;
                this.beginGradientFill(
                  d.type,
                  d.colors,
                  d.alphas,
                  d.ratios,
                  d.matrix,
                  d.spreadMethod,
                  d.interpolationMethod,
                  d.focalPointRatio,
                );
                break;
              case 3:
                this.drawPath(b.commands, b.data, b.winding);
                break;
              case 4:
                d = b;
                this.beginBitmapFill(
                  d.bitmapData,
                  d.matrix,
                  d.repeat,
                  d.smooth,
                );
                break;
              case 5:
                this.endFill();
                break;
              case 6:
                this.drawQuads(b.rects, b.indices, b.transforms);
                break;
              case 7:
                this.drawTriangles(b.vertices, b.indices, b.uvtData, b.culling);
                break;
              case 8:
                this.beginShaderFill(b.shader, b.matrix);
            }
          }
        },
        drawPath: function (a, b, c) {
          null == c && (c = 0);
          var d = 0;
          1 == c && this.__commands.windingNonZero();
          a = a.iterator();
          a: for (; a.hasNext(); )
            switch (a.next()) {
              case 1:
                this.moveTo(b.get(d), b.get(d + 1));
                d += 2;
                break;
              case 2:
                this.lineTo(b.get(d), b.get(d + 1));
                d += 2;
                break;
              case 3:
                this.curveTo(
                  b.get(d),
                  b.get(d + 1),
                  b.get(d + 2),
                  b.get(d + 3),
                );
                d += 4;
                break;
              case 4:
                this.moveTo(b.get(d + 2), b.get(d + 3));
                break a;
              case 5:
                this.lineTo(b.get(d + 2), b.get(d + 3));
                break a;
              case 6:
                (this.cubicCurveTo(
                  b.get(d),
                  b.get(d + 1),
                  b.get(d + 2),
                  b.get(d + 3),
                  b.get(d + 4),
                  b.get(d + 5),
                ),
                  (d += 6));
            }
        },
        drawQuads: function (a, b, c) {
          if (null != a) {
            var d = null != b,
              f = !1,
              g = !1,
              k = d ? b.get_length() : Math.floor(a.get_length() / 4);
            if (0 != k) {
              null != c &&
                (c.get_length() >= 6 * k
                  ? (g = f = !0)
                  : c.get_length() >= 4 * k
                    ? (f = !0)
                    : c.get_length() >= 2 * k && (g = !0));
              for (
                var q = na.__pool.get(),
                  p = ua.__pool.get(),
                  l = Infinity,
                  h = Infinity,
                  n = -Infinity,
                  t = -Infinity,
                  w,
                  r = 0;
                r < k;

              ) {
                var x = r++;
                w = d ? 4 * b.get(x) : 4 * x;
                0 > w ||
                  (q.setTo(0, 0, a.get(w + 2), a.get(w + 3)),
                  0 >= q.width ||
                    0 >= q.height ||
                    (f && g
                      ? ((w = 6 * x),
                        p.setTo(
                          c.get(w),
                          c.get(w + 1),
                          c.get(w + 2),
                          c.get(w + 3),
                          c.get(w + 4),
                          c.get(w + 5),
                        ))
                      : f
                        ? ((w = 4 * x),
                          p.setTo(
                            c.get(w),
                            c.get(w + 1),
                            c.get(w + 2),
                            c.get(w + 3),
                            q.x,
                            q.y,
                          ))
                        : g
                          ? ((w = 2 * x),
                            (p.tx = c.get(w)),
                            (p.ty = c.get(w + 1)))
                          : ((p.tx = q.x), (p.ty = q.y)),
                    q.__transform(q, p),
                    l > q.x && (l = q.x),
                    h > q.y && (h = q.y),
                    n < q.get_right() && (n = q.get_right()),
                    t < q.get_bottom() && (t = q.get_bottom())));
              }
              this.__inflateBounds(l, h);
              this.__inflateBounds(n, t);
              this.__commands.drawQuads(a, b, c);
              this.set___dirty(!0);
              this.__visible = !0;
              na.__pool.release(q);
              ua.__pool.release(p);
            }
          }
        },
        drawRect: function (a, b, c, d) {
          if (0 != c || 0 != d) {
            var f = 0 > c ? -1 : 1,
              g = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * f,
              b - this.__strokePadding * g,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * f,
              b + d + this.__strokePadding * g,
            );
            this.__commands.drawRect(a, b, c, d);
            this.set___dirty(!0);
          }
        },
        drawRoundRect: function (a, b, c, d, f, g) {
          if (0 != c || 0 != d) {
            var k = 0 > c ? -1 : 1,
              q = 0 > d ? -1 : 1;
            this.__inflateBounds(
              a - this.__strokePadding * k,
              b - this.__strokePadding * q,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding * k,
              b + d + this.__strokePadding * q,
            );
            this.__commands.drawRoundRect(a, b, c, d, f, g);
            this.set___dirty(!0);
          }
        },
        drawRoundRectComplex: function (a, b, c, d, f, g, k, q) {
          if (!(0 >= c || 0 >= d)) {
            this.__inflateBounds(
              a - this.__strokePadding,
              b - this.__strokePadding,
            );
            this.__inflateBounds(
              a + c + this.__strokePadding,
              b + d + this.__strokePadding,
            );
            var p = a + c,
              l = b + d;
            c = c < d ? 2 * c : 2 * d;
            f < c || (f = c);
            g < c || (g = c);
            k < c || (k = c);
            q < c || (q = c);
            c = 1 - Math.sin((Math.PI / 180) * 45);
            d = 1 - Math.tan((Math.PI / 180) * 22.5);
            var h = q * c,
              n = q * d;
            this.moveTo(p, l - q);
            this.curveTo(p, l - n, p - h, l - h);
            this.curveTo(p - n, l, p - q, l);
            h = k * c;
            n = k * d;
            this.lineTo(a + k, l);
            this.curveTo(a + n, l, a + h, l - h);
            this.curveTo(a, l - n, a, l - k);
            h = f * c;
            n = f * d;
            this.lineTo(a, b + f);
            this.curveTo(a, b + n, a + h, b + h);
            this.curveTo(a + n, b, a + f, b);
            h = g * c;
            n = g * d;
            this.lineTo(p - g, b);
            this.curveTo(p - n, b, p - h, b + h);
            this.curveTo(p, b + n, p, b + g);
            this.lineTo(p, l - q);
            this.set___dirty(!0);
          }
        },
        drawTriangles: function (a, b, c, d) {
          null == d && (d = 1);
          if (null != a && 0 != a.get_length()) {
            var f = (a.get_length() / 2) | 0;
            if (null == b) {
              if (0 != f % 3)
                throw new Uf('Not enough vertices to close a triangle.');
              b = ra.toIntVector(null);
              for (var g = 0, k = f; g < k; ) {
                var q = g++;
                b.push(q);
              }
            }
            null == d && (d = 1);
            var p = Infinity,
              l = Infinity,
              h = -Infinity,
              n = -Infinity;
            g = 0;
            for (k = f; g < k; )
              ((q = g++),
                (f = a.get(2 * q)),
                (q = a.get(2 * q + 1)),
                p > f && (p = f),
                l > q && (l = q),
                h < f && (h = f),
                n < q && (n = q));
            this.__inflateBounds(p, l);
            this.__inflateBounds(h, n);
            this.__commands.drawTriangles(a, b, c, d);
            this.set___dirty(!0);
            this.__visible = !0;
          }
        },
        endFill: function () {
          this.__commands.endFill();
        },
        lineBitmapStyle: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          this.__commands.lineBitmapStyle(
            a,
            null != b ? b.clone() : null,
            c,
            d,
          );
        },
        lineGradientStyle: function (a, b, c, d, f, g, k, q) {
          null == q && (q = 0);
          null == k && (k = 1);
          null == g && (g = 0);
          if (null == c) {
            c = [];
            for (var p = 0, l = b.length; p < l; ) (p++, c.push(1));
          }
          if (null == d)
            for (d = [], p = 0, l = b.length; p < l; ) {
              var h = p++;
              d.push(Math.ceil((h / (b.length - 1)) * 255));
            }
          this.__commands.lineGradientStyle(a, b, c, d, f, g, k, q);
        },
        lineStyle: function (a, b, c, d, f, g, k, q) {
          null == q && (q = 3);
          null == f && (f = 2);
          null == d && (d = !1);
          null == c && (c = 1);
          null == b && (b = 0);
          null == g && (g = 1);
          null == k && (k = 2);
          null != a &&
            (1 == k
              ? a > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a))
              : a / 2 > this.__strokePadding &&
                (this.__strokePadding = Math.ceil(a / 2)));
          this.__commands.lineStyle(a, b, c, d, f, g, k, q);
          null != a && (this.__visible = !0);
        },
        lineTo: function (a, b) {
          isFinite(a) &&
            isFinite(b) &&
            (this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            (this.__positionX = a),
            (this.__positionY = b),
            this.__inflateBounds(
              this.__positionX - this.__strokePadding,
              this.__positionY - this.__strokePadding,
            ),
            this.__inflateBounds(
              this.__positionX + 2 * this.__strokePadding,
              this.__positionY + this.__strokePadding,
            ),
            this.__commands.lineTo(a, b),
            this.set___dirty(!0));
        },
        moveTo: function (a, b) {
          this.__positionX = a;
          this.__positionY = b;
          this.__commands.moveTo(a, b);
        },
        readGraphicsData: function (a) {
          null == a && (a = !0);
          var b = ra.toObjectVector(null);
          this.__owner.__readGraphicsData(b, a);
          return b;
        },
        __calculateBezierCubicPoint: function (a, b, c, d, f) {
          var g = 1 - a;
          return (
            b * g * g * g +
            3 * c * a * g * g +
            3 * d * g * a * a +
            f * a * a * a
          );
        },
        __calculateBezierQuadPoint: function (a, b, c, d) {
          var f = 1 - a;
          return f * f * b + 2 * f * a * c + a * a * d;
        },
        __cleanup: function () {
          null != this.__bounds &&
            null != this.__canvas &&
            (this.set___dirty(!0), (this.__transformDirty = !0));
          this.__context = this.__canvas = this.__bitmap = null;
        },
        __getBounds: function (a, b) {
          if (null != this.__bounds) {
            var c = na.__pool.get();
            this.__bounds.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            na.__pool.release(c);
          }
        },
        __hitTest: function (a, b, c, d) {
          if (null == this.__bounds) return !1;
          var f = d.a * d.d - d.b * d.c,
            g =
              0 == f ? -d.tx : (1 / f) * (d.c * (d.ty - b) + d.d * (a - d.tx));
          f = d.a * d.d - d.b * d.c;
          a = 0 == f ? -d.ty : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a));
          return g > this.__bounds.x &&
            a > this.__bounds.y &&
            this.__bounds.contains(g, a)
            ? c
              ? A.hitTest(this, g, a)
              : !0
            : !1;
        },
        __findExtrema: function (a, b, c, d) {
          var f = [];
          if (
            !((b < d && b > a) || (b > d && b < a)) ||
            !((c < d && c > a) || (c > d && c < a))
          ) {
            var g = -a + 3 * b + d - 3 * c,
              k = 2 * a - 4 * b + 2 * c,
              q = b - a,
              p = k * k - 4 * g * q;
            0 == g
              ? ((g = -q / k),
                0 < g &&
                  1 > g &&
                  f.push(this.__calculateBezierCubicPoint(g, a, b, c, d)))
              : 0 <= p &&
                ((q = (-k + Math.sqrt(p)) / (2 * g)),
                (g = (-k - Math.sqrt(p)) / (2 * g)),
                0 < q &&
                  1 > q &&
                  f.push(this.__calculateBezierCubicPoint(q, a, b, c, d)),
                0 < g &&
                  1 > g &&
                  f.push(this.__calculateBezierCubicPoint(g, a, b, c, d)));
          }
          b = a;
          f.push(d);
          for (d = 0; d < f.length; )
            ((c = f[d]), ++d, c < b && (b = c), c > a && (a = c));
          return { min: b, max: a };
        },
        __inflateBounds: function (a, b) {
          null == this.__bounds
            ? ((this.__bounds = new na(a, b, 0, 0)),
              (this.__transformDirty = !0))
            : (a < this.__bounds.x &&
                ((this.__bounds.width += this.__bounds.x - a),
                (this.__bounds.x = a),
                (this.__transformDirty = !0)),
              b < this.__bounds.y &&
                ((this.__bounds.height += this.__bounds.y - b),
                (this.__bounds.y = b),
                (this.__transformDirty = !0)),
              a > this.__bounds.x + this.__bounds.width &&
                (this.__bounds.width = a - this.__bounds.x),
              b > this.__bounds.y + this.__bounds.height &&
                (this.__bounds.height = b - this.__bounds.y));
        },
        __readGraphicsData: function (a) {
          for (
            var b = new Be(this.__commands),
              c = null,
              d,
              f = 0,
              g = this.__commands.types;
            f < g.length;

          ) {
            d = g[f];
            ++f;
            switch (d._hx_index) {
              case 4:
              case 5:
              case 6:
              case 7:
              case 9:
              case 10:
              case 17:
              case 18:
                null == c && (c = new qj());
                break;
              default:
                null != c && (a.push(c), (c = null));
            }
            switch (d._hx_index) {
              case 0:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.BEGIN_BITMAP_FILL;
                d = b;
                a.push(
                  new rj(
                    d.buffer.o[d.oPos],
                    d.buffer.o[d.oPos + 1],
                    d.buffer.b[d.bPos],
                    d.buffer.b[d.bPos + 1],
                  ),
                );
                break;
              case 1:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.BEGIN_FILL;
                d = b;
                a.push(new Dh(d.buffer.i[d.iPos], d.buffer.f[d.fPos]));
                break;
              case 2:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.BEGIN_GRADIENT_FILL;
                d = b;
                a.push(
                  new sj(
                    d.buffer.o[d.oPos],
                    d.buffer.ii[d.iiPos],
                    d.buffer.ff[d.ffPos],
                    d.buffer.ii[d.iiPos + 1],
                    d.buffer.o[d.oPos + 1],
                    d.buffer.o[d.oPos + 2],
                    d.buffer.o[d.oPos + 3],
                    d.buffer.f[d.fPos],
                  ),
                );
                break;
              case 3:
                break;
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.CUBIC_CURVE_TO;
                d = b;
                c.cubicCurveTo(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.f[d.fPos + 5],
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.CURVE_TO;
                d = b;
                c.curveTo(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_CIRCLE;
                d = b;
                c.__drawCircle(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_ELLIPSE;
                d = b;
                c.__drawEllipse(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_RECT;
                d = b;
                c.__drawRect(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_ROUND_RECT;
                d = b;
                c.__drawRoundRect(
                  d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1],
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  null != d.buffer.o[d.oPos]
                    ? d.buffer.o[d.oPos]
                    : d.buffer.f[d.fPos + 4],
                );
                break;
              case 13:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.END_FILL;
                a.push(new tj());
                break;
              case 14:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.LINE_BITMAP_STYLE;
                c = null;
                break;
              case 15:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.LINE_GRADIENT_STYLE;
                break;
              case 16:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.LINE_STYLE;
                var k = b;
                d = new uj(
                  k.buffer.o[k.oPos],
                  k.buffer.b[k.bPos],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.o[k.oPos + 2],
                  k.buffer.o[k.oPos + 3],
                  k.buffer.f[k.fPos + 1],
                );
                d.fill = new Dh(k.buffer.i[k.iPos], k.buffer.f[k.fPos]);
                a.push(d);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.LINE_TO;
                d = b;
                c.lineTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.MOVE_TO;
                d = b;
                c.moveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          null != c && a.push(c);
        },
        __update: function (a, b) {
          if (
            !(
              null == this.__bounds ||
              0 >= this.__bounds.width ||
              0 >= this.__bounds.height
            )
          ) {
            var c = this.__owner.__renderTransform;
            if (null != c) {
              var d = b,
                f = b;
              null == this.__owner.__worldScale9Grid &&
                ((d =
                  0 == c.b ? Math.abs(c.a) : Math.sqrt(c.a * c.a + c.b * c.b)),
                (f =
                  0 == c.c ? Math.abs(c.d) : Math.sqrt(c.c * c.c + c.d * c.d)),
                null != a &&
                  ((d =
                    0 == a.b ? d * a.a : d * Math.sqrt(a.a * a.a + a.b * a.b)),
                  (f =
                    0 == a.c
                      ? f * a.d
                      : f * Math.sqrt(a.c * a.c + a.d * a.d))));
              a = this.__bounds.width * d;
              f *= this.__bounds.height;
              if (1 > a || 1 > f)
                ((1 <= this.__width || 1 <= this.__height) &&
                  this.set___dirty(!0),
                  (this.__height = this.__width = 0));
              else {
                null != Dd.maxTextureWidth &&
                  a > Dd.maxTextureWidth &&
                  (a = Dd.maxTextureWidth);
                null != Dd.maxTextureWidth &&
                  f > Dd.maxTextureHeight &&
                  (f = Dd.maxTextureHeight);
                if (null != this.__owner.__worldScale9Grid) {
                  this.__renderTransform.a = b;
                  this.__renderTransform.d = b;
                  d = 1 / b;
                  var g = 1 / b;
                } else
                  ((this.__renderTransform.a = a / this.__bounds.width),
                    (this.__renderTransform.d = f / this.__bounds.height),
                    (d = 1 / this.__renderTransform.a),
                    (g = 1 / this.__renderTransform.d));
                this.__worldTransform.a = d * c.a;
                this.__worldTransform.b = d * c.b;
                this.__worldTransform.c = g * c.c;
                this.__worldTransform.d = g * c.d;
                g = this.__bounds.x;
                var k = this.__bounds.y;
                d = g * c.a + k * c.c + c.tx;
                c = g * c.b + k * c.d + c.ty;
                1 < b
                  ? ((b = 1 / b),
                    (this.__worldTransform.tx = Math.round(d / b) * b),
                    (this.__worldTransform.ty = Math.round(c / b) * b))
                  : ((this.__worldTransform.tx = Math.round(d)),
                    (this.__worldTransform.ty = Math.round(c)));
                b = this.__worldTransform;
                g = b.a * b.d - b.b * b.c;
                this.__renderTransform.tx =
                  0 == g
                    ? -b.tx
                    : (1 / g) * (b.c * (b.ty - c) + b.d * (d - b.tx));
                b = this.__worldTransform;
                g = b.a * b.d - b.b * b.c;
                this.__renderTransform.ty =
                  0 == g
                    ? -b.ty
                    : (1 / g) * (b.a * (c - b.ty) + b.b * (b.tx - d));
                a = Math.ceil(a + 1);
                f = Math.ceil(f + 1);
                (a == this.__width && f == this.__height) ||
                  this.set___dirty(!0);
                this.__width = a;
                this.__height = f;
              }
            }
          }
        },
        set___dirty: function (a) {
          if (a && null != this.__owner) {
            var b = this.__owner;
            b.__renderDirty ||
              ((b.__renderDirty = !0), b.__setParentRenderDirty());
          }
          a && (this.__hardwareDirty = this.__softwareDirty = !0);
          return (this.__dirty = a);
        },
        __class__: Dd,
        __properties__: { set___dirty: 'set___dirty' },
      };
      var Lf = function () {};
      h['openfl.display.IGraphicsFill'] = Lf;
      Lf.__name__ = 'openfl.display.IGraphicsFill';
      Lf.__isInterface__ = !0;
      Lf.prototype = { __class__: Lf };
      var fe = function () {};
      h['openfl.display.IGraphicsData'] = fe;
      fe.__name__ = 'openfl.display.IGraphicsData';
      fe.__isInterface__ = !0;
      fe.prototype = { __class__: fe };
      var rj = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !0);
        this.bitmapData = a;
        this.matrix = b;
        this.repeat = c;
        this.smooth = d;
        this.__graphicsDataType = 4;
        this.__graphicsFillType = 2;
      };
      h['openfl.display.GraphicsBitmapFill'] = rj;
      rj.__name__ = 'openfl.display.GraphicsBitmapFill';
      rj.__interfaces__ = [Lf, fe];
      rj.prototype = { __class__: rj };
      var tj = function () {
        this.__graphicsDataType = 5;
        this.__graphicsFillType = 3;
      };
      h['openfl.display.GraphicsEndFill'] = tj;
      tj.__name__ = 'openfl.display.GraphicsEndFill';
      tj.__interfaces__ = [Lf, fe];
      tj.prototype = { __class__: tj };
      var sj = function (a, b, c, d, f, g, k, q) {
        null == q && (q = 0);
        null == a && (a = 0);
        null == g && (g = 0);
        null == k && (k = 1);
        this.type = a;
        this.colors = b;
        this.alphas = c;
        this.ratios = d;
        this.matrix = f;
        this.spreadMethod = g;
        this.interpolationMethod = k;
        this.focalPointRatio = q;
        this.__graphicsDataType = 2;
        this.__graphicsFillType = 1;
      };
      h['openfl.display.GraphicsGradientFill'] = sj;
      sj.__name__ = 'openfl.display.GraphicsGradientFill';
      sj.__interfaces__ = [Lf, fe];
      sj.prototype = { __class__: sj };
      var vj = function () {};
      h['openfl.display.IGraphicsPath'] = vj;
      vj.__name__ = 'openfl.display.IGraphicsPath';
      vj.__isInterface__ = !0;
      var qj = function (a, b, c) {
        null == c && (c = 0);
        this.commands = a;
        this.data = b;
        this.winding = c;
        this.__graphicsDataType = 3;
      };
      h['openfl.display.GraphicsPath'] = qj;
      qj.__name__ = 'openfl.display.GraphicsPath';
      qj.__interfaces__ = [vj, fe];
      qj.prototype = {
        cubicCurveTo: function (a, b, c, d, f, g) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(6);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
          this.data.push(f);
          this.data.push(g);
        },
        curveTo: function (a, b, c, d) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(3);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
        },
        lineTo: function (a, b) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(2);
          this.data.push(a);
          this.data.push(b);
        },
        moveTo: function (a, b) {
          null == this.commands && (this.commands = ra.toIntVector(null));
          null == this.data && (this.data = ra.toFloatVector(null));
          this.commands.push(1);
          this.data.push(a);
          this.data.push(b);
        },
        __drawCircle: function (a, b, c) {
          this.__drawRoundRect(a - c, b - c, 2 * c, 2 * c, 2 * c, 2 * c);
        },
        __drawEllipse: function (a, b, c, d) {
          this.__drawRoundRect(a, b, c, d, c, d);
        },
        __drawRect: function (a, b, c, d) {
          this.moveTo(a, b);
          this.lineTo(a + c, b);
          this.lineTo(a + c, b + d);
          this.lineTo(a, b + d);
          this.lineTo(a, b);
        },
        __drawRoundRect: function (a, b, c, d, f, g) {
          f *= 0.5;
          g *= 0.5;
          f > c / 2 && (f = c / 2);
          g > d / 2 && (g = d / 2);
          c = a + c;
          d = b + d;
          var k = -f + 0.7071067811865476 * f,
            q = -f + 0.41421356237309503 * f,
            p = -g + 0.7071067811865476 * g,
            l = -g + 0.41421356237309503 * g;
          this.moveTo(c, d - g);
          this.curveTo(c, d + l, c + k, d + p);
          this.curveTo(c + q, d, c - f, d);
          this.lineTo(a + f, d);
          this.curveTo(a - q, d, a - k, d + p);
          this.curveTo(a, d + l, a, d - g);
          this.lineTo(a, b + g);
          this.curveTo(a, b - l, a - k, b - p);
          this.curveTo(a - q, b, a + f, b);
          this.lineTo(c - f, b);
          this.curveTo(c + q, b, c + k, b - p);
          this.curveTo(c, b - l, c, b + g);
          this.lineTo(c, d - g);
        },
        __class__: qj,
      };
      var Mk = function (a, b, c) {
        this.rects = a;
        this.indices = b;
        this.transforms = c;
        this.__graphicsDataType = 6;
      };
      h['openfl.display.GraphicsQuadPath'] = Mk;
      Mk.__name__ = 'openfl.display.GraphicsQuadPath';
      Mk.__interfaces__ = [vj, fe];
      Mk.prototype = { __class__: Mk };
      var wj = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Cd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.display.GraphicsShader'] = wj;
      wj.__name__ = 'openfl.display.GraphicsShader';
      wj.__super__ = Cd;
      wj.prototype = u(Cd.prototype, { __class__: wj });
      var Nk = function (a, b) {
        this.shader = a;
        this.matrix = b;
        this.__graphicsDataType = 8;
        this.__graphicsFillType = 4;
      };
      h['openfl.display.GraphicsShaderFill'] = Nk;
      Nk.__name__ = 'openfl.display.GraphicsShaderFill';
      Nk.__interfaces__ = [Lf, fe];
      Nk.prototype = { __class__: Nk };
      var Dh = function (a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.alpha = b;
        this.color = a;
        this.__graphicsDataType = 1;
        this.__graphicsFillType = 0;
      };
      h['openfl.display.GraphicsSolidFill'] = Dh;
      Dh.__name__ = 'openfl.display.GraphicsSolidFill';
      Dh.__interfaces__ = [Lf, fe];
      Dh.prototype = { __class__: Dh };
      var ul = function () {};
      h['openfl.display.IGraphicsStroke'] = ul;
      ul.__name__ = 'openfl.display.IGraphicsStroke';
      ul.__isInterface__ = !0;
      var uj = function (a, b, c, d, f, g, k) {
        null == g && (g = 3);
        null == f && (f = 2);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = !1);
        null == a && (a = NaN);
        this.caps = d;
        this.fill = k;
        this.joints = f;
        this.miterLimit = g;
        this.pixelHinting = b;
        this.scaleMode = c;
        this.thickness = a;
        this.__graphicsDataType = 0;
      };
      h['openfl.display.GraphicsStroke'] = uj;
      uj.__name__ = 'openfl.display.GraphicsStroke';
      uj.__interfaces__ = [ul, fe];
      uj.prototype = { __class__: uj };
      var Ok = function (a, b, c, d) {
        null == d && (d = 1);
        this.vertices = a;
        this.indices = b;
        this.uvtData = c;
        this.culling = d;
        this.__graphicsDataType = 7;
      };
      h['openfl.display.GraphicsTrianglePath'] = Ok;
      Ok.__name__ = 'openfl.display.GraphicsTrianglePath';
      Ok.__interfaces__ = [vj, fe];
      Ok.prototype = { __class__: Ok };
      var Pk = function () {};
      h['openfl.display.ITileContainer'] = Pk;
      Pk.__name__ = 'openfl.display.ITileContainer';
      Pk.__isInterface__ = !0;
      var ki = function (a) {
        null == a && (a = 80);
        this.quality = a;
      };
      h['openfl.display.JPEGEncoderOptions'] = ki;
      ki.__name__ = 'openfl.display.JPEGEncoderOptions';
      ki.prototype = { __class__: ki };
      var Sl = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bevel';
              case 1:
                return 'miter';
              case 2:
                return 'round';
              default:
                return null;
            }
          },
        },
        Qk = function () {
          jb.call(this);
          this.__drawableType = 4;
          this.contentLoaderInfo = Ae.create(this);
          this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
          this.__unloaded = !0;
        };
      h['openfl.display.Loader'] = Qk;
      Qk.__name__ = 'openfl.display.Loader';
      Qk.__super__ = jb;
      Qk.prototype = u(jb.prototype, {
        addChild: function (a) {
          throw new gc(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        addChildAt: function (a, b) {
          throw new gc(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChild: function (a) {
          if (a == this.content)
            return jb.prototype.removeChild.call(this, this.content);
          throw new gc(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        removeChildAt: function (a) {
          throw new gc(
            'Error #2069: The Loader class does not implement this method.',
            2069,
          );
        },
        __class__: Qk,
      });
      var Ae = function () {
        sa.call(this);
        this.applicationDomain = Ng.currentDomain;
        this.bytesTotal = this.bytesLoaded = 0;
        this.childAllowsParent = !0;
        this.parameters = {};
      };
      h['openfl.display.LoaderInfo'] = Ae;
      Ae.__name__ = 'openfl.display.LoaderInfo';
      Ae.create = function (a) {
        var b = new Ae();
        b.uncaughtErrorEvents = new xj();
        null != a ? (b.loader = a) : (b.url = Ae.__rootURL);
        return b;
      };
      Ae.__super__ = sa;
      Ae.prototype = u(sa.prototype, {
        __complete: function () {
          this.__completed ||
            (this.bytesLoaded < this.bytesTotal &&
              (this.bytesLoaded = this.bytesTotal),
            this.__update(this.bytesLoaded, this.bytesTotal),
            (this.__completed = !0),
            this.dispatchEvent(new za('complete')));
        },
        __update: function (a, b) {
          this.bytesLoaded = a;
          this.bytesTotal = b;
          this.dispatchEvent(new hg('progress', !1, !1, a, b));
        },
        __class__: Ae,
      });
      var Rf = function () {
        T.call(this);
        this.__enabled = !0;
      };
      h['openfl.display.MovieClip'] = Rf;
      Rf.__name__ = 'openfl.display.MovieClip';
      Rf.__super__ = T;
      Rf.prototype = u(T.prototype, {
        gotoAndStop: function (a, b) {
          null != this.__timeline && this.__timeline.__gotoAndStop(a, b);
        },
        __enterFrame: function (a) {
          null != this.__timeline && this.__timeline.__enterFrame(a);
          for (var b = 0, c = this.__children; b < c.length; ) {
            var d = c[b];
            ++b;
            d.__enterFrame(a);
          }
        },
        __tabTest: function (a) {
          this.__enabled && T.prototype.__tabTest.call(this, a);
        },
        __onMouseDown: function (a) {
          this.__enabled && this.__hasDown && this.gotoAndStop('_down');
          this.__mouseIsDown = !0;
          null != this.stage &&
            this.stage.addEventListener(
              'mouseUp',
              m(this, this.__onMouseUp),
              !0,
            );
        },
        __onMouseUp: function (a) {
          this.__mouseIsDown = !1;
          null != this.stage &&
            this.stage.removeEventListener(
              'mouseUp',
              m(this, this.__onMouseUp),
            );
          this.__buttonMode &&
            (ge.__eq(a.target, this) && this.__enabled && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__enabled && this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOut: function (a) {
          this.__enabled &&
            (this.__mouseIsDown && this.__hasOver
              ? this.gotoAndStop('_over')
              : this.__hasUp && this.gotoAndStop('_up'));
        },
        __onRollOver: function (a) {
          this.__enabled && this.__hasOver && this.gotoAndStop('_over');
        },
        set_buttonMode: function (a) {
          if (this.__buttonMode != a) {
            if (a) {
              this.__hasUp = this.__hasOver = this.__hasDown = !1;
              for (var b = 0, c = this.get_currentLabels(); b < c.length; ) {
                var d = c[b];
                ++b;
                switch (d.name) {
                  case '_down':
                    this.__hasDown = !0;
                    break;
                  case '_over':
                    this.__hasOver = !0;
                    break;
                  case '_up':
                    this.__hasUp = !0;
                }
              }
              if (this.__hasDown || this.__hasOver || this.__hasUp)
                (this.addEventListener('rollOver', m(this, this.__onRollOver)),
                  this.addEventListener('rollOut', m(this, this.__onRollOut)),
                  this.addEventListener(
                    'mouseDown',
                    m(this, this.__onMouseDown),
                  ));
            } else
              (this.removeEventListener('rollOver', m(this, this.__onRollOver)),
                this.removeEventListener('rollOut', m(this, this.__onRollOut)),
                this.removeEventListener(
                  'mouseDown',
                  m(this, this.__onMouseDown),
                ));
            this.__buttonMode = a;
          }
          return a;
        },
        get_currentLabels: function () {
          return null != this.__timeline
            ? this.__timeline.__currentLabels.slice()
            : [];
        },
        __class__: Rf,
        __properties__: u(T.prototype.__properties__, {
          get_currentLabels: 'get_currentLabels',
        }),
      });
      var eb = function (a, b) {
        sd.call(this);
        this.__context3D = a;
        this.__context = a.__context;
        this.__gl = this.gl = a.__context.webgl;
        this.__defaultRenderTarget = b;
        this.__flipped = null == this.__defaultRenderTarget;
        null == Dd.maxTextureWidth &&
          (Dd.maxTextureWidth = Dd.maxTextureHeight =
            this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
        this.__matrix = mb._new();
        this.__values = [];
        this.__softwareRenderer = new Ze(null);
        this.__type = 'opengl';
        this.__setBlendMode(10);
        this.__context3D.__setGLBlend(!0);
        this.__clipRects = [];
        this.__maskObjects = [];
        this.__numClipRects = 0;
        this.__projection = mb._new();
        this.__projectionFlipped = mb._new();
        this.__stencilReference = 0;
        this.__tempRect = new na();
        this.__defaultDisplayShader = new oj();
        this.__defaultGraphicsShader = new wj();
        this.__defaultShader = this.__defaultDisplayShader;
        this.__initShader(this.__defaultShader);
        this.__scrollRectMasks = new ub(function () {
          return new sf();
        });
        this.__maskShader = new ig();
      };
      h['openfl.display.OpenGLRenderer'] = eb;
      eb.__name__ = 'openfl.display.OpenGLRenderer';
      eb.__super__ = sd;
      eb.prototype = u(sd.prototype, {
        applyAlpha: function (a) {
          eb.__alphaValue[0] = a * this.__worldAlpha;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride(
                'openfl_Alpha',
                eb.__alphaValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__alpha &&
              (this.__currentShader.__alpha.value = eb.__alphaValue);
        },
        applyBitmapData: function (a, b, c) {
          null == c && (c = !1);
          null != this.__currentShaderBuffer
            ? null != a &&
              ((eb.__textureSizeValue[0] = a.__textureWidth),
              (eb.__textureSizeValue[1] = a.__textureHeight),
              this.__currentShaderBuffer.addFloatOverride(
                'openfl_TextureSize',
                eb.__textureSizeValue,
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__bitmap &&
                ((this.__currentShader.__bitmap.input = a),
                (this.__currentShader.__bitmap.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__bitmap.mipFilter = 2),
                (this.__currentShader.__bitmap.wrap = c ? 2 : 0)),
              null != this.__currentShader.__texture &&
                ((this.__currentShader.__texture.input = a),
                (this.__currentShader.__texture.filter =
                  b && this.__allowSmoothing ? 4 : 5),
                (this.__currentShader.__texture.mipFilter = 2),
                (this.__currentShader.__texture.wrap = c ? 2 : 0)),
              null != this.__currentShader.__textureSize &&
                (null != a
                  ? ((eb.__textureSizeValue[0] = a.__textureWidth),
                    (eb.__textureSizeValue[1] = a.__textureHeight),
                    (this.__currentShader.__textureSize.value =
                      eb.__textureSizeValue))
                  : (this.__currentShader.__textureSize.value = null)));
        },
        applyColorTransform: function (a) {
          var b = null != a && !a.__isDefault(!0);
          this.applyHasColorTransform(b);
          b
            ? (a.__setArrays(
                eb.__colorMultipliersValue,
                eb.__colorOffsetsValue,
              ),
              null != this.__currentShaderBuffer
                ? (this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorMultiplier',
                    eb.__colorMultipliersValue,
                  ),
                  this.__currentShaderBuffer.addFloatOverride(
                    'openfl_ColorOffset',
                    eb.__colorOffsetsValue,
                  ))
                : null != this.__currentShader &&
                  (null != this.__currentShader.__colorMultiplier &&
                    (this.__currentShader.__colorMultiplier.value =
                      eb.__colorMultipliersValue),
                  null != this.__currentShader.__colorOffset &&
                    (this.__currentShader.__colorOffset.value =
                      eb.__colorOffsetsValue)))
            : null != this.__currentShaderBuffer
              ? (this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorMultiplier',
                  eb.__emptyColorValue,
                ),
                this.__currentShaderBuffer.addFloatOverride(
                  'openfl_ColorOffset',
                  eb.__emptyColorValue,
                ))
              : null != this.__currentShader &&
                (null != this.__currentShader.__colorMultiplier &&
                  (this.__currentShader.__colorMultiplier.value =
                    eb.__emptyColorValue),
                null != this.__currentShader.__colorOffset &&
                  (this.__currentShader.__colorOffset.value =
                    eb.__emptyColorValue));
        },
        applyHasColorTransform: function (a) {
          eb.__hasColorTransformValue[0] = a;
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addBoolOverride(
                'openfl_HasColorTransform',
                eb.__hasColorTransformValue,
              )
            : null != this.__currentShader &&
              null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value =
                eb.__hasColorTransformValue);
        },
        applyMatrix: function (a) {
          null != this.__currentShaderBuffer
            ? this.__currentShaderBuffer.addFloatOverride('openfl_Matrix', a)
            : null != this.__currentShader &&
              null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = a);
        },
        setShader: function (a) {
          this.__currentShaderBuffer = null;
          this.__currentShader != a &&
            (null == a
              ? ((this.__currentShader = null),
                this.__context3D.setProgram(null))
              : ((this.__currentShader = a),
                this.__initShader(a),
                this.__context3D.setProgram(a.program),
                this.__context3D.__flushGLProgram(),
                this.__currentShader.__enable(),
                (this.__context3D.__state.shader = a)));
        },
        setViewport: function () {
          this.__gl.viewport(
            this.__offsetX,
            this.__offsetY,
            this.__displayWidth,
            this.__displayHeight,
          );
        },
        updateShader: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__position &&
              (this.__currentShader.__position.__useArray = !0),
            null != this.__currentShader.__textureCoord &&
              (this.__currentShader.__textureCoord.__useArray = !0),
            this.__context3D.setProgram(this.__currentShader.program),
            this.__context3D.__flushGLProgram(),
            this.__context3D.__flushGLTextures(),
            this.__currentShader.__update());
        },
        useAlphaArray: function () {
          null != this.__currentShader &&
            null != this.__currentShader.__alpha &&
            (this.__currentShader.__alpha.__useArray = !0);
        },
        useColorTransformArray: function () {
          null != this.__currentShader &&
            (null != this.__currentShader.__colorMultiplier &&
              (this.__currentShader.__colorMultiplier.__useArray = !0),
            null != this.__currentShader.__colorOffset &&
              (this.__currentShader.__colorOffset.__useArray = !0));
        },
        __clear: function () {
          null == this.__stage || this.__stage.__transparent
            ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1)
            : this.__context3D.clear(
                this.__stage.__colorSplit[0],
                this.__stage.__colorSplit[1],
                this.__stage.__colorSplit[2],
                1,
                0,
                0,
                1,
              );
          this.__cleared = !0;
        },
        __clearShader: function () {
          null != this.__currentShader &&
            (null == this.__currentShaderBuffer
              ? null != this.__currentShader.__bitmap &&
                (this.__currentShader.__bitmap.input = null)
              : this.__currentShaderBuffer.clearOverride(),
            null != this.__currentShader.__texture &&
              (this.__currentShader.__texture.input = null),
            null != this.__currentShader.__textureSize &&
              (this.__currentShader.__textureSize.value = null),
            null != this.__currentShader.__hasColorTransform &&
              (this.__currentShader.__hasColorTransform.value = null),
            null != this.__currentShader.__position &&
              (this.__currentShader.__position.value = null),
            null != this.__currentShader.__matrix &&
              (this.__currentShader.__matrix.value = null),
            this.__currentShader.__clearUseArray());
        },
        __copyShader: function (a) {
          this.__currentShader = a.__currentShader;
          this.__currentShaderBuffer = a.__currentShaderBuffer;
          this.__currentDisplayShader = a.__currentDisplayShader;
          this.__currentGraphicsShader = a.__currentGraphicsShader;
        },
        __getMatrix: function (a, b) {
          var c = ua.__pool.get();
          c.copyFrom(a);
          c.concat(this.__worldTransform);
          if (
            0 == b ||
            (1 == b &&
              0 == c.b &&
              0 == c.c &&
              1.001 > c.a &&
              0.999 < c.a &&
              1.001 > c.d &&
              0.999 < c.d)
          )
            ((c.tx = Math.round(c.tx)), (c.ty = Math.round(c.ty)));
          mb.identity(this.__matrix);
          mb.set(this.__matrix, 0, c.a);
          mb.set(this.__matrix, 1, c.b);
          mb.set(this.__matrix, 4, c.c);
          mb.set(this.__matrix, 5, c.d);
          mb.set(this.__matrix, 12, c.tx);
          mb.set(this.__matrix, 13, c.ty);
          mb.append(
            this.__matrix,
            this.__flipped ? this.__projectionFlipped : this.__projection,
          );
          this.__values[0] = mb.get(this.__matrix, 0);
          this.__values[1] = mb.get(this.__matrix, 1);
          this.__values[2] = mb.get(this.__matrix, 2);
          this.__values[3] = mb.get(this.__matrix, 3);
          this.__values[4] = mb.get(this.__matrix, 4);
          this.__values[5] = mb.get(this.__matrix, 5);
          this.__values[6] = mb.get(this.__matrix, 6);
          this.__values[7] = mb.get(this.__matrix, 7);
          this.__values[8] = mb.get(this.__matrix, 8);
          this.__values[9] = mb.get(this.__matrix, 9);
          this.__values[10] = mb.get(this.__matrix, 10);
          this.__values[11] = mb.get(this.__matrix, 11);
          this.__values[12] = mb.get(this.__matrix, 12);
          this.__values[13] = mb.get(this.__matrix, 13);
          this.__values[14] = mb.get(this.__matrix, 14);
          this.__values[15] = mb.get(this.__matrix, 15);
          ua.__pool.release(c);
          return this.__values;
        },
        __initShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultShader;
        },
        __initDisplayShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultDisplayShader;
        },
        __initGraphicsShader: function (a) {
          return null != a
            ? (null == a.__context &&
                ((a.__context = this.__context3D), a.__init()),
              a)
            : this.__defaultGraphicsShader;
        },
        __initShaderBuffer: function (a) {
          return null != a
            ? this.__initGraphicsShader(a.shader)
            : this.__defaultGraphicsShader;
        },
        __popMask: function () {
          if (0 != this.__stencilReference) {
            var a = this.__maskObjects.pop();
            1 < this.__stencilReference
              ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  255,
                ),
                this.__context3D.setColorMask(!1, !1, !1, !1),
                this.__renderDrawableMask(a),
                this.__stencilReference--,
                this.__context3D.setStencilActions(2, 1, 5, 5, 5),
                this.__context3D.setStencilReferenceValue(
                  this.__stencilReference,
                  255,
                  0,
                ),
                this.__context3D.setColorMask(!0, !0, !0, !0))
              : ((this.__stencilReference = 0),
                this.__context3D.setStencilActions(),
                this.__context3D.setStencilReferenceValue(0, 0, 0));
          }
        },
        __popMaskObject: function (a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? (this.__scrollRectMasks.release(
                  this.__maskObjects[this.__maskObjects.length - 1],
                ),
                this.__popMask())
              : this.__popMaskRect());
        },
        __popMaskRect: function () {
          0 < this.__numClipRects &&
            (this.__numClipRects--,
            0 < this.__numClipRects
              ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
              : this.__scissorRect());
        },
        __pushMask: function (a) {
          0 == this.__stencilReference &&
            (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4),
            (this.__updatedStencil = !0));
          this.__context3D.setStencilActions(2, 1, 2, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            255,
          );
          this.__context3D.setColorMask(!1, !1, !1, !1);
          this.__renderDrawableMask(a);
          this.__maskObjects.push(a);
          this.__stencilReference++;
          this.__context3D.setStencilActions(2, 1, 5, 5, 5);
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            0,
          );
          this.__context3D.setColorMask(!0, !0, !0, !0);
        },
        __pushMaskObject: function (a, b) {
          null == b && (b = !0);
          b &&
            null != a.__scrollRect &&
            (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
              ? ((b = this.__scrollRectMasks.get()),
                b.get_graphics().clear(),
                b.get_graphics().beginFill(65280),
                b
                  .get_graphics()
                  .drawRect(
                    a.__scrollRect.x,
                    a.__scrollRect.y,
                    a.__scrollRect.width,
                    a.__scrollRect.height,
                  ),
                b.__renderTransform.copyFrom(a.__renderTransform),
                this.__pushMask(b))
              : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
          null != a.__mask && this.__pushMask(a.__mask);
        },
        __pushMaskRect: function (a, b) {
          this.__numClipRects == this.__clipRects.length &&
            (this.__clipRects[this.__numClipRects] = new na());
          var c = ua.__pool.get();
          c.copyFrom(b);
          c.concat(this.__worldTransform);
          b = this.__clipRects[this.__numClipRects];
          a.__transform(b, c);
          0 < this.__numClipRects &&
            ((a = this.__clipRects[this.__numClipRects - 1]),
            b.__contract(a.x, a.y, a.width, a.height));
          0 > b.height && (b.height = 0);
          0 > b.width && (b.width = 0);
          ua.__pool.release(c);
          this.__scissorRect(b);
          this.__numClipRects++;
        },
        __render: function (a) {
          this.__context3D.setColorMask(!0, !0, !0, !0);
          this.__context3D.setCulling(3);
          this.__context3D.setDepthTest(!1, 0);
          this.__context3D.setStencilActions();
          this.__context3D.setStencilReferenceValue(0, 0, 0);
          this.__context3D.setScissorRectangle(null);
          this.__blendMode = null;
          this.__setBlendMode(10);
          if (null == this.__defaultRenderTarget) {
            if (
              (this.__context3D.__backBufferWantsBestResolution
                ? eb.__scissorRectangle.setTo(
                    this.__offsetX / this.__pixelRatio,
                    this.__offsetY / this.__pixelRatio,
                    this.__displayWidth / this.__pixelRatio,
                    this.__displayHeight / this.__pixelRatio,
                  )
                : eb.__scissorRectangle.setTo(
                    this.__offsetX,
                    this.__offsetY,
                    this.__displayWidth,
                    this.__displayHeight,
                  ),
              this.__context3D.setScissorRectangle(eb.__scissorRectangle),
              (this.__upscaled =
                1 != this.__worldTransform.a || 1 != this.__worldTransform.d),
              this.__renderDrawable(a),
              0 < this.__offsetX || 0 < this.__offsetY)
            )
              (0 < this.__offsetX &&
                (eb.__scissorRectangle.setTo(
                  0,
                  0,
                  this.__offsetX,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(eb.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                eb.__scissorRectangle.setTo(
                  this.__offsetX + this.__displayWidth,
                  0,
                  this.__width,
                  this.__height,
                ),
                this.__context3D.setScissorRectangle(eb.__scissorRectangle),
                this.__context3D.__flushGL(),
                this.__gl.clearColor(0, 0, 0, 1),
                this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                0 < this.__offsetY &&
                  (eb.__scissorRectangle.setTo(
                    0,
                    0,
                    this.__width,
                    this.__offsetY,
                  ),
                  this.__context3D.setScissorRectangle(eb.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
                  eb.__scissorRectangle.setTo(
                    0,
                    this.__offsetY + this.__displayHeight,
                    this.__width,
                    this.__height,
                  ),
                  this.__context3D.setScissorRectangle(eb.__scissorRectangle),
                  this.__context3D.__flushGL(),
                  this.__gl.clearColor(0, 0, 0, 1),
                  this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
                this.__context3D.setScissorRectangle(null));
          } else {
            this.__context3D.__backBufferWantsBestResolution
              ? eb.__scissorRectangle.setTo(
                  this.__offsetX / this.__pixelRatio,
                  this.__offsetY / this.__pixelRatio,
                  this.__displayWidth / this.__pixelRatio,
                  this.__displayHeight / this.__pixelRatio,
                )
              : eb.__scissorRectangle.setTo(
                  this.__offsetX,
                  this.__offsetY,
                  this.__displayWidth,
                  this.__displayHeight,
                );
            this.__context3D.setScissorRectangle(eb.__scissorRectangle);
            var b = a.__mask,
              c = a.__scrollRect;
            a.__mask = null;
            a.__scrollRect = null;
            this.__renderDrawable(a);
            a.__mask = b;
            a.__scrollRect = c;
          }
          this.__context3D.present();
        },
        __renderDrawable: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                yj.renderDrawable(a, this);
                break;
              case 2:
                Td.renderDrawable(a, this);
                break;
              case 3:
                jg.renderDrawable(a, this);
                break;
              case 4:
              case 5:
                zj.renderDrawable(a, this);
                break;
              case 6:
                Aj.renderDrawable(a, this);
                break;
              case 7:
                mf.renderDrawable(a, this);
                break;
              case 8:
                Ud.renderDrawable(a, this);
                break;
              case 9:
                X.renderDrawable(a, this);
            }
        },
        __renderDrawableMask: function (a) {
          if (null != a)
            switch (a.__drawableType) {
              case 0:
                yj.renderDrawableMask(a, this);
                break;
              case 2:
                Td.renderDrawableMask(a, this);
                break;
              case 3:
                jg.renderDrawableMask(a, this);
                break;
              case 4:
              case 5:
                zj.renderDrawableMask(a, this);
                break;
              case 6:
                Aj.renderDrawableMask(a, this);
                break;
              case 7:
                mf.renderDrawableMask(a, this);
                break;
              case 8:
                Ud.renderDrawableMask(a, this);
                break;
              case 9:
                X.renderDrawableMask(a, this);
            }
        },
        __renderFilterPass: function (a, b, c, d) {
          null == d && (d = !0);
          if (null != a && null != b && null != this.__defaultRenderTarget) {
            var f = this.__context3D.__state.renderToTexture,
              g = this.__context3D.__state.renderToTextureDepthStencil,
              k = this.__context3D.__state.renderToTextureAntiAlias,
              q = this.__context3D.__state.renderToTextureSurfaceSelector;
            this.__context3D.setRenderToTexture(
              this.__defaultRenderTarget.getTexture(this.__context3D),
              !1,
            );
            d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
            b = this.__initShader(b);
            this.setShader(b);
            this.applyAlpha(1);
            this.applyBitmapData(a, c);
            this.applyColorTransform(null);
            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
            this.updateShader();
            c = a.getVertexBuffer(this.__context3D);
            null != b.__position &&
              this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
            null != b.__textureCoord &&
              this.__context3D.setVertexBufferAt(
                b.__textureCoord.index,
                c,
                3,
                2,
              );
            a = a.getIndexBuffer(this.__context3D);
            this.__context3D.drawTriangles(a);
            null != f
              ? this.__context3D.setRenderToTexture(f, g, k, q)
              : this.__context3D.setRenderToBackBuffer();
            this.__clearShader();
          }
        },
        __resize: function (a, b) {
          this.__width = a;
          this.__height = b;
          a =
            null == this.__defaultRenderTarget
              ? this.__stage.stageWidth
              : this.__defaultRenderTarget.width;
          b =
            null == this.__defaultRenderTarget
              ? this.__stage.stageHeight
              : this.__defaultRenderTarget.height;
          if (null == this.__defaultRenderTarget) {
            var c = this.__worldTransform;
            c = Math.round(0 * c.a + 0 * c.c + c.tx);
          } else c = 0;
          this.__offsetX = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + 0 * c.d + c.ty)))
            : (c = 0);
          this.__offsetY = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(a * c.a + 0 * c.c + c.tx - this.__offsetX)))
            : (c = a);
          this.__displayWidth = c;
          null == this.__defaultRenderTarget
            ? ((c = this.__worldTransform),
              (c = Math.round(0 * c.b + b * c.d + c.ty - this.__offsetY)))
            : (c = b);
          this.__displayHeight = c;
          mb.createOrtho(
            this.__projection,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            0,
            this.__displayHeight + 2 * this.__offsetY,
            -1e3,
            1e3,
          );
          mb.createOrtho(
            this.__projectionFlipped,
            0,
            this.__displayWidth + 2 * this.__offsetX,
            this.__displayHeight + 2 * this.__offsetY,
            0,
            -1e3,
            1e3,
          );
        },
        __resumeClipAndMask: function (a) {
          0 < this.__stencilReference
            ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5),
              this.__context3D.setStencilReferenceValue(
                this.__stencilReference,
                255,
                0,
              ))
            : (this.__context3D.setStencilActions(),
              this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects
            ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
            : this.__scissorRect();
        },
        __scissorRect: function (a) {
          if (null != a) {
            var b = Math.floor(a.x),
              c = Math.floor(a.y),
              d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0,
              f = 0 < a.height ? Math.ceil(a.get_bottom()) - c : 0;
            this.__context3D.__backBufferWantsBestResolution &&
              ((f = 1.5 / this.__pixelRatio),
              (b = a.x / this.__pixelRatio),
              (c = a.y / this.__pixelRatio),
              (d = 0 < a.width ? a.get_right() / this.__pixelRatio - b + f : 0),
              (f =
                0 < a.height ? a.get_bottom() / this.__pixelRatio - c + f : 0));
            0 > d && (d = 0);
            0 > f && (f = 0);
            eb.__scissorRectangle.setTo(b, c, d, f);
            this.__context3D.setScissorRectangle(eb.__scissorRectangle);
          } else this.__context3D.setScissorRectangle(null);
        },
        __setBlendMode: function (a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          if (this.__blendMode != a)
            switch (((this.__blendMode = a), a)) {
              case 0:
                this.__context3D.setBlendFactors(2, 2);
                break;
              case 9:
                this.__context3D.setBlendFactors(1, 5);
                break;
              case 12:
                this.__context3D.setBlendFactors(2, 6);
                break;
              case 14:
                this.__context3D.setBlendFactors(2, 2);
                this.__context3D.__setGLBlendEquation(
                  this.__gl.FUNC_REVERSE_SUBTRACT,
                );
                break;
              default:
                this.__context3D.setBlendFactors(2, 5);
            }
        },
        __setRenderTarget: function (a) {
          this.__defaultRenderTarget = a;
          this.__flipped = null == a;
          null != a && this.__resize(a.width, a.height);
        },
        __setShaderBuffer: function (a) {
          this.setShader(a.shader);
          this.__currentShaderBuffer = a;
        },
        __suspendClipAndMask: function () {
          0 < this.__stencilReference &&
            (this.__context3D.setStencilActions(),
            this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && this.__scissorRect();
        },
        __updateShaderBuffer: function (a) {
          null != this.__currentShader &&
            null != this.__currentShaderBuffer &&
            this.__currentShader.__updateFromBuffer(
              this.__currentShaderBuffer,
              a,
            );
        },
        __class__: eb,
      });
      var ji = function (a) {
        null == a && (a = !1);
        this.fastCompression = a;
      };
      h['openfl.display.PNGEncoderOptions'] = ji;
      ji.__name__ = 'openfl.display.PNGEncoderOptions';
      ji.prototype = { __class__: ji };
      var Ph = function (a) {
        this.onComplete = new Cc();
        this.display = a;
        null != a &&
          (a.addEventListener('unload', m(this, this.display_onUnload)),
          Ra.get_current().addChild(a));
      };
      h['openfl.display.Preloader'] = Ph;
      Ph.__name__ = 'openfl.display.Preloader';
      Ph.prototype = {
        start: function () {
          this.ready = !0;
          Ra.get_current().get_loaderInfo().__complete();
          if (null != this.display) {
            var a = new za('complete', !0, !0);
            this.display.dispatchEvent(a);
            a.isDefaultPrevented() ||
              this.display.dispatchEvent(new za('unload'));
          } else
            this.complete || ((this.complete = !0), this.onComplete.dispatch());
        },
        update: function (a, b) {
          Ra.get_current().get_loaderInfo().__update(a, b);
          null != this.display &&
            this.display.dispatchEvent(new hg('progress', !0, !0, a, b));
        },
        display_onUnload: function (a) {
          null != this.display &&
            (this.display.removeEventListener(
              'unload',
              m(this, this.display_onUnload),
            ),
            this.display.parent == Ra.get_current() &&
              Ra.get_current().removeChild(this.display),
            Ra.get_current().stage.set_focus(null),
            (this.display = null));
          this.ready &&
            !this.complete &&
            ((this.complete = !0), this.onComplete.dispatch());
        },
        __class__: Ph,
      };
      var ah = function () {
        T.call(this);
        var a = this.getBackgroundColor(),
          b = 0;
        70 >
          0.299 * ((a >> 16) & 255) +
            0.587 * ((a >> 8) & 255) +
            0.114 * (a & 255) && (b = 16777215);
        a = this.getHeight() / 2 - 3.5;
        var c = this.getWidth() - 60;
        this.outline = new sf();
        this.outline.get_graphics().beginFill(b, 0.07);
        this.outline.get_graphics().drawRect(0, 0, c, 7);
        this.outline.set_x(30);
        this.outline.set_y(a);
        this.outline.set_alpha(0);
        this.addChild(this.outline);
        this.progress = new sf();
        this.progress.get_graphics().beginFill(b, 0.35);
        this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
        this.progress.set_x(32);
        this.progress.set_y(a + 2);
        this.progress.set_scaleX(0);
        this.progress.set_alpha(0);
        this.addChild(this.progress);
        this.startAnimation = Ra.getTimer() + 100;
        this.endAnimation = this.startAnimation + 1e3;
        this.addEventListener(
          'addedToStage',
          m(this, this.this_onAddedToStage),
        );
      };
      h['openfl.display.DefaultPreloader'] = ah;
      ah.__name__ = 'openfl.display.DefaultPreloader';
      ah.__super__ = T;
      ah.prototype = u(T.prototype, {
        getBackgroundColor: function () {
          var a = Ra.get_current().stage.window.context.attributes;
          return Object.prototype.hasOwnProperty.call(a, 'background') &&
            null != a.background
            ? a.background
            : 0;
        },
        getHeight: function () {
          var a = Ra.get_current().stage.window.__height;
          return 0 < a ? a : Ra.get_current().stage.stageHeight;
        },
        getWidth: function () {
          var a = Ra.get_current().stage.window.__width;
          return 0 < a ? a : Ra.get_current().stage.stageWidth;
        },
        onInit: function () {
          this.addEventListener('enterFrame', m(this, this.this_onEnterFrame));
        },
        onLoaded: function () {
          this.removeEventListener(
            'enterFrame',
            m(this, this.this_onEnterFrame),
          );
          this.dispatchEvent(new za('unload'));
        },
        onUpdate: function (a, b) {
          var c = 0;
          0 < b && ((c = a / b), 1 < c && (c = 1));
          this.progress.set_scaleX(c);
        },
        this_onAddedToStage: function (a) {
          this.removeEventListener(
            'addedToStage',
            m(this, this.this_onAddedToStage),
          );
          this.onInit();
          this.onUpdate(
            this.get_loaderInfo().bytesLoaded,
            this.get_loaderInfo().bytesTotal,
          );
          this.addEventListener('progress', m(this, this.this_onProgress));
          this.addEventListener('complete', m(this, this.this_onComplete));
        },
        this_onComplete: function (a) {
          a.preventDefault();
          this.removeEventListener('progress', m(this, this.this_onProgress));
          this.removeEventListener('complete', m(this, this.this_onComplete));
          this.onLoaded();
        },
        this_onEnterFrame: function (a) {
          a =
            (Ra.getTimer() - this.startAnimation) /
            (this.endAnimation - this.startAnimation);
          0 > a && (a = 0);
          1 < a && (a = 1);
          this.outline.set_alpha(this.progress.set_alpha(a));
        },
        this_onProgress: function (a) {
          this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
        },
        __class__: ah,
      });
      var Fl = {
          _new: function (a) {
            return {};
          },
        },
        nj = function () {
          this.channels = 0;
          this.filter = 5;
          this.index = this.height = 0;
          this.mipFilter = 2;
          this.wrap = this.width = 0;
        };
      h['openfl.display.ShaderInput'] = nj;
      nj.__name__ = 'openfl.display.ShaderInput';
      nj.prototype = {
        __disableGL: function (a, b) {
          0 > b || a.setTextureAt(b, null);
        },
        __updateGL: function (a, b, c, d, f, g) {
          c = null != c ? c : this.input;
          d = null != d ? d : this.filter;
          f = null != f ? f : this.mipFilter;
          g = null != g ? g : this.wrap;
          null != c
            ? (a.setTextureAt(b, c.getTexture(a)),
              a.setSamplerStateAt(b, g, d, f))
            : a.setTextureAt(b, null);
        },
        __class__: nj,
      };
      var Mg = function () {
        this.index = 0;
      };
      h['openfl.display.ShaderParameter'] = Mg;
      Mg.__name__ = 'openfl.display.ShaderParameter';
      Mg.prototype = {
        __disableGL: function (a) {
          if (!(0 > this.index || ((a = a.gl), this.__isUniform)))
            for (var b = 0, c = this.__arrayLength; b < c; ) {
              var d = b++;
              a.disableVertexAttribArray(this.index + d);
            }
        },
        __updateGL: function (a, b) {
          if (!(0 > this.index)) {
            a = a.gl;
            b = null != b ? b : this.value;
            var c = this.__isBool ? b : null,
              d = this.__isFloat ? b : null,
              f = this.__isInt ? b : null;
            if (this.__isUniform)
              if (null != b && b.length >= this.__length)
                switch (this.type) {
                  case 0:
                    a.uniform1i(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.uniform2i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.uniform3i(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.uniform4i(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                      c[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.uniform1f(this.index, d[0]);
                    break;
                  case 5:
                    a.uniform2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.uniform1i(this.index, f[0]);
                    break;
                  case 9:
                    a.uniform2i(this.index, f[0], f[1]);
                    break;
                  case 10:
                    a.uniform3i(this.index, f[0], f[1], f[2]);
                    break;
                  case 11:
                    a.uniform4i(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = d[0];
                    this.__uniformMatrix[1] = d[1];
                    this.__uniformMatrix[2] = d[2];
                    this.__uniformMatrix[3] = d[3];
                    Nc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = d[0];
                    this.__uniformMatrix[1] = d[1];
                    this.__uniformMatrix[2] = d[2];
                    this.__uniformMatrix[3] = d[3];
                    this.__uniformMatrix[4] = d[4];
                    this.__uniformMatrix[5] = d[5];
                    this.__uniformMatrix[6] = d[6];
                    this.__uniformMatrix[7] = d[7];
                    this.__uniformMatrix[8] = d[8];
                    Nc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = d[0]),
                      (this.__uniformMatrix[1] = d[1]),
                      (this.__uniformMatrix[2] = d[2]),
                      (this.__uniformMatrix[3] = d[3]),
                      (this.__uniformMatrix[4] = d[4]),
                      (this.__uniformMatrix[5] = d[5]),
                      (this.__uniformMatrix[6] = d[6]),
                      (this.__uniformMatrix[7] = d[7]),
                      (this.__uniformMatrix[8] = d[8]),
                      (this.__uniformMatrix[9] = d[9]),
                      (this.__uniformMatrix[10] = d[10]),
                      (this.__uniformMatrix[11] = d[11]),
                      (this.__uniformMatrix[12] = d[12]),
                      (this.__uniformMatrix[13] = d[13]),
                      (this.__uniformMatrix[14] = d[14]),
                      (this.__uniformMatrix[15] = d[15]),
                      Nc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
              else
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, 0);
                    break;
                  case 5:
                    a.uniform2f(this.index, 0, 0);
                    break;
                  case 6:
                    a.uniform3f(this.index, 0, 0, 0);
                    break;
                  case 7:
                    a.uniform4f(this.index, 0, 0, 0, 0);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, 0, 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    Nc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = 0;
                    this.__uniformMatrix[1] = 0;
                    this.__uniformMatrix[2] = 0;
                    this.__uniformMatrix[3] = 0;
                    this.__uniformMatrix[4] = 0;
                    this.__uniformMatrix[5] = 0;
                    this.__uniformMatrix[6] = 0;
                    this.__uniformMatrix[7] = 0;
                    this.__uniformMatrix[8] = 0;
                    Nc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = 0),
                      (this.__uniformMatrix[1] = 0),
                      (this.__uniformMatrix[2] = 0),
                      (this.__uniformMatrix[3] = 0),
                      (this.__uniformMatrix[4] = 0),
                      (this.__uniformMatrix[5] = 0),
                      (this.__uniformMatrix[6] = 0),
                      (this.__uniformMatrix[7] = 0),
                      (this.__uniformMatrix[8] = 0),
                      (this.__uniformMatrix[9] = 0),
                      (this.__uniformMatrix[10] = 0),
                      (this.__uniformMatrix[11] = 0),
                      (this.__uniformMatrix[12] = 0),
                      (this.__uniformMatrix[13] = 0),
                      (this.__uniformMatrix[14] = 0),
                      (this.__uniformMatrix[15] = 0),
                      Nc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            else if (
              this.__useArray ||
              (null != b && b.length != this.__length)
            )
              for (g = 0, k = this.__arrayLength; g < k; )
                ((q = g++), a.enableVertexAttribArray(this.index + q));
            else {
              for (var g = 0, k = this.__arrayLength; g < k; ) {
                var q = g++;
                a.disableVertexAttribArray(this.index + q);
              }
              if (null != b)
                switch (this.type) {
                  case 0:
                    a.vertexAttrib1f(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.vertexAttrib2f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.vertexAttrib3f(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                    );
                    break;
                  case 3:
                    a.vertexAttrib4f(
                      this.index,
                      c[0] ? 1 : 0,
                      c[1] ? 1 : 0,
                      c[2] ? 1 : 0,
                      c[3] ? 1 : 0,
                    );
                    break;
                  case 4:
                    a.vertexAttrib1f(this.index, d[0]);
                    break;
                  case 5:
                    a.vertexAttrib2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.vertexAttrib3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.vertexAttrib4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.vertexAttrib1f(this.index, f[0]);
                    break;
                  case 9:
                    a.vertexAttrib2f(this.index, f[0], f[1]);
                    break;
                  case 10:
                    a.vertexAttrib3f(this.index, f[0], f[1], f[2]);
                    break;
                  case 11:
                    a.vertexAttrib4f(this.index, f[0], f[1], f[2], f[3]);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, d[0], d[1]);
                    a.vertexAttrib2f(this.index + 1, d[2], d[3]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, d[0], d[1], d[2]);
                    a.vertexAttrib3f(this.index + 1, d[3], d[4], d[5]);
                    a.vertexAttrib3f(this.index + 2, d[6], d[7], d[8]);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, d[0], d[1], d[2], d[3]),
                      a.vertexAttrib4f(this.index + 1, d[4], d[5], d[6], d[7]),
                      a.vertexAttrib4f(
                        this.index + 2,
                        d[8],
                        d[9],
                        d[10],
                        d[11],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        d[12],
                        d[13],
                        d[14],
                        d[15],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
          }
        },
        __updateGLFromBuffer: function (a, b, c, d, f) {
          if (!(0 > this.index))
            if (((a = a.gl), this.__isUniform)) {
              if (d >= this.__length)
                switch (this.type) {
                  case 4:
                    a.uniform1f(this.index, b[c]);
                    break;
                  case 5:
                    a.uniform2f(this.index, b[c], b[c + 1]);
                    break;
                  case 6:
                    a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
                    break;
                  case 7:
                    a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                    break;
                  case 0:
                  case 8:
                    a.uniform1i(this.index, b[c] | 0);
                    break;
                  case 1:
                  case 9:
                    a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
                    break;
                  case 2:
                  case 10:
                    a.uniform3i(
                      this.index,
                      b[c] | 0,
                      b[c + 1] | 0,
                      b[c + 2] | 0,
                    );
                    break;
                  case 3:
                  case 11:
                    a.uniform4i(
                      this.index,
                      b[c] | 0,
                      b[c + 1] | 0,
                      b[c + 2] | 0,
                      b[c + 3] | 0,
                    );
                    break;
                  case 12:
                    this.__uniformMatrix[0] = b[c];
                    this.__uniformMatrix[1] = b[c + 1];
                    this.__uniformMatrix[2] = b[c + 2];
                    this.__uniformMatrix[3] = b[c + 3];
                    Nc.uniformMatrix2fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 16:
                    this.__uniformMatrix[0] = b[c];
                    this.__uniformMatrix[1] = b[c + 1];
                    this.__uniformMatrix[2] = b[c + 2];
                    this.__uniformMatrix[3] = b[c + 3];
                    this.__uniformMatrix[4] = b[c + 4];
                    this.__uniformMatrix[5] = b[c + 5];
                    this.__uniformMatrix[6] = b[c + 6];
                    this.__uniformMatrix[7] = b[c + 7];
                    this.__uniformMatrix[8] = b[c + 8];
                    Nc.uniformMatrix3fv(
                      a,
                      this.index,
                      !1,
                      this.__uniformMatrix,
                    );
                    break;
                  case 20:
                    ((this.__uniformMatrix[0] = b[c]),
                      (this.__uniformMatrix[1] = b[c + 1]),
                      (this.__uniformMatrix[2] = b[c + 2]),
                      (this.__uniformMatrix[3] = b[c + 3]),
                      (this.__uniformMatrix[4] = b[c + 4]),
                      (this.__uniformMatrix[5] = b[c + 5]),
                      (this.__uniformMatrix[6] = b[c + 6]),
                      (this.__uniformMatrix[7] = b[c + 7]),
                      (this.__uniformMatrix[8] = b[c + 8]),
                      (this.__uniformMatrix[9] = b[c + 9]),
                      (this.__uniformMatrix[10] = b[c + 10]),
                      (this.__uniformMatrix[11] = b[c + 11]),
                      (this.__uniformMatrix[12] = b[c + 12]),
                      (this.__uniformMatrix[13] = b[c + 13]),
                      (this.__uniformMatrix[14] = b[c + 14]),
                      (this.__uniformMatrix[15] = b[c + 15]),
                      Nc.uniformMatrix4fv(
                        a,
                        this.index,
                        !1,
                        this.__uniformMatrix,
                      ));
                }
            } else if (this.__internal || (0 != d && d != this.__length)) {
              b = a.FLOAT;
              this.__isBool ? (b = a.INT) : this.__isInt && (b = a.INT);
              g = 0;
              for (k = this.__arrayLength; g < k; )
                ((q = g++), a.enableVertexAttribArray(this.index + q));
              if (0 < d)
                for (g = 0, k = this.__arrayLength; g < k; )
                  ((q = g++),
                    a.vertexAttribPointer(
                      this.index + q,
                      this.__length,
                      b,
                      !1,
                      4 * this.__length,
                      4 * (c + f * this.__length + q * this.__arrayLength),
                    ));
            } else {
              for (var g = 0, k = this.__arrayLength; g < k; ) {
                var q = g++;
                a.disableVertexAttribArray(this.index + q);
              }
              if (0 < d)
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, b[c]);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(
                      this.index,
                      b[c],
                      b[c + 1],
                      b[c + 2],
                      b[c + 3],
                    );
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, b[c], b[c + 1]);
                    a.vertexAttrib2f(this.index + 1, b[c + 2], b[c + 2 + 1]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, b[c], b[c + 1], b[c + 2]);
                    a.vertexAttrib3f(
                      this.index + 1,
                      b[c + 3],
                      b[c + 3 + 1],
                      b[c + 3 + 2],
                    );
                    a.vertexAttrib3f(
                      this.index + 2,
                      b[c + 6],
                      b[c + 6 + 1],
                      b[c + 6 + 2],
                    );
                    break;
                  case 20:
                    (a.vertexAttrib4f(
                      this.index + 0,
                      b[c],
                      b[c + 1],
                      b[c + 2],
                      b[c + 3],
                    ),
                      a.vertexAttrib4f(
                        this.index + 1,
                        b[c + 4],
                        b[c + 4 + 1],
                        b[c + 4 + 2],
                        b[c + 4 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 2,
                        b[c + 8],
                        b[c + 8 + 1],
                        b[c + 8 + 2],
                        b[c + 8 + 3],
                      ),
                      a.vertexAttrib4f(
                        this.index + 3,
                        b[c + 12],
                        b[c + 12 + 1],
                        b[c + 12 + 2],
                        b[c + 12 + 3],
                      ));
                }
              else
                switch (this.type) {
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index, 0, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    (a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0),
                      a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0));
                }
            }
        },
        set_name: function (a) {
          this.__internal = P.startsWith(a, 'openfl_');
          return (this.name = a);
        },
        __class__: Mg,
        __properties__: { set_name: 'set_name' },
      };
      var sf = function () {
        ca.call(this);
        this.__drawableType = 3;
      };
      h['openfl.display.Shape'] = sf;
      sf.__name__ = 'openfl.display.Shape';
      sf.__super__ = ca;
      sf.prototype = u(ca.prototype, {
        get_graphics: function () {
          null == this.__graphics && (this.__graphics = new Dd(this));
          return this.__graphics;
        },
        __class__: sf,
        __properties__: u(ca.prototype.__properties__, {
          get_graphics: 'get_graphics',
        }),
      });
      var Og = function (a, b, c, d) {
        Aa.call(this);
        this.__drawableType = 6;
        this.enabled = !0;
        this.trackAsMenu = !1;
        this.useHandCursor = !0;
        this.__upState = null != a ? a : new ca();
        this.__overState = b;
        this.__downState = c;
        this.set_hitTestState(null != d ? d : new ca());
        this.addEventListener('mouseDown', m(this, this.__this_onMouseDown));
        this.addEventListener('mouseOut', m(this, this.__this_onMouseOut));
        this.addEventListener('mouseOver', m(this, this.__this_onMouseOver));
        this.addEventListener('mouseUp', m(this, this.__this_onMouseUp));
        this.__tabEnabled = !0;
        this.set___currentState(this.__upState);
        null != Og.__constructor &&
          ((a = Og.__constructor), (Og.__constructor = null), a(this));
      };
      h['openfl.display.SimpleButton'] = Og;
      Og.__name__ = 'openfl.display.SimpleButton';
      Og.__super__ = Aa;
      Og.prototype = u(Aa.prototype, {
        __getBounds: function (a, b) {
          Aa.prototype.__getBounds.call(this, a, b);
          var c = ua.__pool.get(),
            d = this.__currentState.__transform;
          c.a = d.a * b.a + d.b * b.c;
          c.b = d.a * b.b + d.b * b.d;
          c.c = d.c * b.a + d.d * b.c;
          c.d = d.c * b.b + d.d * b.d;
          c.tx = d.tx * b.a + d.ty * b.c + b.tx;
          c.ty = d.tx * b.b + d.ty * b.d + b.ty;
          this.__currentState.__getBounds(a, c);
          ua.__pool.release(c);
        },
        __getRenderBounds: function (a, b) {
          if (null != this.__scrollRect)
            Aa.prototype.__getRenderBounds.call(this, a, b);
          else {
            Aa.prototype.__getBounds.call(this, a, b);
            var c = ua.__pool.get(),
              d = this.__currentState.__transform;
            c.a = d.a * b.a + d.b * b.c;
            c.b = d.a * b.b + d.b * b.d;
            c.c = d.c * b.a + d.d * b.c;
            c.d = d.c * b.b + d.d * b.d;
            c.tx = d.tx * b.a + d.ty * b.c + b.tx;
            c.ty = d.tx * b.b + d.ty * b.d + b.ty;
            this.__currentState.__getRenderBounds(a, c);
            ua.__pool.release(c);
          }
        },
        __getCursor: function () {
          return this.useHandCursor && !this.__ignoreEvent && this.enabled
            ? 'button'
            : null;
        },
        __hitTest: function (a, b, c, d, f, g) {
          var k = !1;
          null != this.get_hitTestState()
            ? this.get_hitTestState().__hitTest(a, b, c, d, f, g) &&
              (null != d &&
                (0 == d.length ? (d[0] = g) : (d[d.length - 1] = g)),
              (k = !f || this.mouseEnabled))
            : null != this.__currentState &&
              (!g.get_visible() ||
              this.__isMask ||
              (f && !this.mouseEnabled) ||
              (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
                ? (k = !1)
                : this.__currentState.__hitTest(a, b, c, d, f, g) && (k = f));
          if (null != d)
            for (; 1 < d.length && d[d.length - 1] == d[d.length - 2]; )
              d.pop();
          return k;
        },
        __hitTestMask: function (a, b) {
          var c = !1;
          this.__currentState.__hitTestMask(a, b) && (c = !0);
          return c;
        },
        __setStageReference: function (a) {
          Aa.prototype.__setStageReference.call(this, a);
          null != this.__currentState &&
            this.__currentState.__setStageReference(a);
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setStageReference(a);
        },
        __setTransformDirty: function () {
          Aa.prototype.__setTransformDirty.call(this);
          null != this.__currentState &&
            this.__currentState.__setTransformDirty();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__setTransformDirty();
        },
        __update: function (a, b) {
          Aa.prototype.__update.call(this, a, b);
          b &&
            (null != this.__currentState && this.__currentState.__update(a, !0),
            null != this.get_hitTestState() &&
              this.get_hitTestState() != this.__currentState &&
              this.get_hitTestState().__update(a, !0));
        },
        __updateTransforms: function (a) {
          Aa.prototype.__updateTransforms.call(this, a);
          null != this.__currentState &&
            this.__currentState.__updateTransforms();
          null != this.get_hitTestState() &&
            this.get_hitTestState() != this.__currentState &&
            this.get_hitTestState().__updateTransforms();
        },
        get_downState: function () {
          return this.__downState;
        },
        get_hitTestState: function () {
          return this.__hitTestState;
        },
        set_hitTestState: function (a) {
          null != this.__hitTestState &&
            this.__hitTestState != a &&
            this.__hitTestState != this.get_downState() &&
            this.__hitTestState != this.get_upState() &&
            this.__hitTestState != this.get_overState() &&
            (this.__hitTestState.__renderParent = null);
          null != a &&
            ((a.__renderParent = this),
            a.__renderDirty ||
              ((a.__renderDirty = !0), a.__setParentRenderDirty()));
          return (this.__hitTestState = a);
        },
        get_overState: function () {
          return this.__overState;
        },
        get_upState: function () {
          return this.__upState;
        },
        set___currentState: function (a) {
          null != this.__currentState &&
            this.__currentState != this.get_hitTestState() &&
            (this.__currentState.__renderParent = null);
          null != a && null != a.parent && a.parent.removeChild(a);
          ca.__supportDOM &&
            null == this.__previousStates &&
            (this.__previousStates = ra.toObjectVector(null));
          if (a != this.__currentState) {
            if (ca.__supportDOM) {
              null != this.__currentState &&
                (this.__currentState.__setStageReference(null),
                this.__previousStates.push(this.__currentState));
              var b = this.__previousStates.indexOf(a, 0);
              if (-1 < b) {
                var c = this.__previousStates;
                c.__tempIndex = b;
                b = 0;
                for (var d = []; b < d.length; ) {
                  var f = d[b++];
                  c.insertAt(c.__tempIndex, f);
                  c.__tempIndex++;
                }
                c.splice(c.__tempIndex, 1);
              }
            }
            null != a &&
              ((a.__renderParent = this),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty()));
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
          return (this.__currentState = a);
        },
        __this_onMouseDown: function (a) {
          this.enabled && this.set___currentState(this.get_downState());
        },
        __this_onMouseOut: function (a) {
          this.__ignoreEvent = !1;
          this.get_upState() != this.__currentState &&
            this.set___currentState(this.get_upState());
        },
        __this_onMouseOver: function (a) {
          a.buttonDown && (this.__ignoreEvent = !0);
          this.get_overState() != this.__currentState &&
            null != this.get_overState() &&
            !this.__ignoreEvent &&
            this.enabled &&
            this.set___currentState(this.get_overState());
        },
        __this_onMouseUp: function (a) {
          this.__ignoreEvent = !1;
          this.enabled && null != this.get_overState()
            ? this.set___currentState(this.get_overState())
            : this.set___currentState(this.get_upState());
        },
        __class__: Og,
        __properties__: u(Aa.prototype.__properties__, {
          set___currentState: 'set___currentState',
          get_upState: 'get_upState',
          get_overState: 'get_overState',
          set_hitTestState: 'set_hitTestState',
          get_hitTestState: 'get_hitTestState',
          get_downState: 'get_downState',
        }),
      });
      var Pg = function (a, b) {
        jb.call(this);
        this.__drawableType = 5;
        this.set_name(null);
        this.__color = -1;
        this.__colorSplit = [255, 255, 255];
        this.__colorString = '#FFFFFF';
        this.__contentsScaleFactor = 1;
        this.__deltaTime = this.__currentTabOrderIndex = 0;
        this.__displayState = 2;
        this.__logicalHeight =
          this.__logicalWidth =
          this.__lastClickTime =
          this.__mouseY =
          this.__mouseX =
            0;
        this.__displayMatrix = new ua();
        this.__displayRect = new na();
        this.__renderDirty = !0;
        this.stage3Ds = ra.toObjectVector(null);
        this.stage3Ds.push(new kg(this));
        this.stage3Ds.push(new kg(this));
        this.stage3Ds.push(new kg(this));
        this.stage3Ds.push(new kg(this));
        this.stage = this;
        this.align = 6;
        this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
        this.__quality = 1;
        this.__scaleMode = 2;
        this.showDefaultContextMenu = !0;
        this.softKeyboardRect = new na();
        this.stageFocusRect = !0;
        this.__macKeyboard =
          (/AppleWebKit/.test(navigator.userAgent) &&
            /Mobile\/\w+/.test(navigator.userAgent)) ||
          /Mac/.test(navigator.platform);
        this.__clearBeforeRender = !0;
        this.__forceRender = !1;
        this.__stack = [];
        this.__rollOutStack = [];
        this.__mouseOutStack = [];
        this.__touchData = new tc();
        null == Ra.get_current().__loaderInfo &&
          ((Ra.get_current().__loaderInfo = Ae.create(null)),
          (Ra.get_current().__loaderInfo.content = Ra.get_current()));
        this.__uncaughtErrorEvents =
          Ra.get_current().__loaderInfo.uncaughtErrorEvents;
        this.application = a.application;
        this.window = a;
        this.set_color(b);
        this.__contentsScaleFactor = a.__scale;
        this.__wasFullscreen = a.__fullscreen;
        this.__resize();
        null == Ra.get_current().stage && this.stage.addChild(Ra.get_current());
      };
      h['openfl.display.Stage'] = Pg;
      Pg.__name__ = 'openfl.display.Stage';
      Pg.__interfaces__ = [Ya];
      Pg.__super__ = jb;
      Pg.prototype = u(jb.prototype, {
        localToGlobal: function (a) {
          return a.clone();
        },
        __broadcastEvent: function (a) {
          if (
            Object.prototype.hasOwnProperty.call(ca.__broadcastEvents.h, a.type)
          )
            for (
              var b = ca.__broadcastEvents.h[a.type], c = 0;
              c < b.length;

            ) {
              var d = b[c];
              ++c;
              if (d.stage == this || null == d.stage)
                if (this.__uncaughtErrorEvents.__enabled)
                  try {
                    d.__dispatch(a);
                  } catch (f) {
                    ((Ua.lastError = f),
                      (d = aa.caught(f).unwrap()),
                      this.__handleError(d));
                  }
                else d.__dispatch(a);
            }
        },
        __createRenderer: function () {
          var a = (this.window.__width * this.window.__scale) | 0,
            b = (this.window.__height * this.window.__scale) | 0;
          switch (this.window.context.type) {
            case 'canvas':
              this.__renderer = new Ze(this.window.context.canvas2D);
              break;
            case 'dom':
              this.__renderer = new Ch(this.window.context.dom);
              break;
            case 'opengl':
            case 'opengles':
            case 'webgl':
              ((this.context3D = new rb(this)),
                this.context3D.configureBackBuffer(
                  this.stageWidth,
                  this.stageHeight,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                this.context3D.present(),
                (this.__renderer = new eb(this.context3D)));
          }
          if (null != this.__renderer) {
            var c = this.get_quality();
            this.__renderer.__allowSmoothing = 2 != c;
            this.__renderer.__pixelRatio = this.window.__scale;
            this.__renderer.__worldTransform = this.__displayMatrix;
            this.__renderer.__stage = this;
            this.__renderer.__resize(a, b);
          }
        },
        __dispatchEvent: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var b = jb.prototype.__dispatchEvent.call(this, a);
            } catch (c) {
              ((Ua.lastError = c),
                (a = aa.caught(c).unwrap()),
                this.__handleError(a),
                (b = !1));
            }
          else b = jb.prototype.__dispatchEvent.call(this, a);
          return b;
        },
        __dispatchPendingMouseEvent: function () {
          this.__pendingMouseEvent &&
            (this.__onMouse(
              'mouseMove',
              this.__pendingMouseX,
              this.__pendingMouseY,
              0,
            ),
            (this.__pendingMouseEvent = !1));
        },
        __dispatchStack: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              var c = b.length;
              if (0 == c) {
                a.eventPhase = 2;
                var d = a.target;
                d.__dispatch(a);
              } else {
                a.eventPhase = 1;
                a.target = b[b.length - 1];
                for (var f = 0, g = c - 1; f < g; ) {
                  var k = f++;
                  b[k].__dispatch(a);
                  if (a.__isCanceled) return;
                }
                a.eventPhase = 2;
                d = a.target;
                d.__dispatch(a);
                if (!a.__isCanceled && a.bubbles)
                  for (a.eventPhase = 3, k = c - 2; 0 <= k; ) {
                    b[k].__dispatch(a);
                    if (a.__isCanceled) break;
                    --k;
                  }
              }
            } catch (q) {
              ((Ua.lastError = q),
                (a = aa.caught(q).unwrap()),
                this.__handleError(a));
            }
          else if (((c = b.length), 0 == c))
            ((a.eventPhase = 2), (d = a.target), d.__dispatch(a));
          else {
            a.eventPhase = 1;
            a.target = b[b.length - 1];
            f = 0;
            for (g = c - 1; f < g; )
              if (((k = f++), b[k].__dispatch(a), a.__isCanceled)) return;
            a.eventPhase = 2;
            d = a.target;
            d.__dispatch(a);
            if (!a.__isCanceled && a.bubbles)
              for (a.eventPhase = 3, k = c - 2; 0 <= k; ) {
                b[k].__dispatch(a);
                if (a.__isCanceled) break;
                --k;
              }
          }
        },
        __dispatchTarget: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              return a.__dispatchEvent(b);
            } catch (c) {
              return (
                (Ua.lastError = c),
                (a = aa.caught(c).unwrap()),
                this.__handleError(a),
                !1
              );
            }
          else return a.__dispatchEvent(b);
        },
        __drag: function (a) {
          var b = this.__dragObject.parent;
          if (null != b) {
            b = b.__getWorldTransform();
            var c = b.a * b.d - b.b * b.c;
            if (0 == c) ((a.x = -b.tx), (a.y = -b.ty));
            else {
              var d = (1 / c) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
              a.y = (1 / c) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
              a.x = d;
            }
          }
          b = a.x + this.__dragOffsetX;
          a = a.y + this.__dragOffsetY;
          null != this.__dragBounds &&
            (b < this.__dragBounds.x
              ? (b = this.__dragBounds.x)
              : b > this.__dragBounds.get_right() &&
                (b = this.__dragBounds.get_right()),
            a < this.__dragBounds.y
              ? (a = this.__dragBounds.y)
              : a > this.__dragBounds.get_bottom() &&
                (a = this.__dragBounds.get_bottom()));
          this.__dragObject.set_x(b);
          this.__dragObject.set_y(a);
        },
        __getInteractive: function (a) {
          null != a && a.push(this);
          return !0;
        },
        __globalToLocal: function (a, b) {
          a != b && b.copyFrom(a);
          return b;
        },
        __handleError: function (a) {
          var b = new qg('uncaughtError', !0, !0, a);
          Ra.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b);
          if (!b.__preventDefault) {
            b = Ef.toString(Ef.exceptionStack());
            console.log(b);
            b = I.string(a);
            console.log(b);
            try {
              if (
                null != a &&
                Object.prototype.hasOwnProperty.call(a, 'stack') &&
                null != a.stack &&
                '' != a.stack
              )
                (console.log(a.stack), (a.stack = a.stack));
              else {
                var c = Ef.toString(Ef.callStack());
                console.log(c);
              }
            } catch (d) {
              Ua.lastError = d;
            }
            throw a;
          }
        },
        __onKey: function (a, b, c) {
          this.__dispatchPendingMouseEvent();
          Fb.__altKey = fb.get_altKey(c);
          Fb.__commandKey = fb.get_metaKey(c);
          Fb.__controlKey = fb.get_ctrlKey(c) && !fb.get_metaKey(c);
          Fb.__ctrlKey = fb.get_ctrlKey(c);
          Fb.__shiftKey = fb.get_shiftKey(c);
          var d = [];
          null == this.__focus
            ? this.__getInteractive(d)
            : this.__focus.__getInteractive(d);
          if (0 < d.length) {
            switch (b) {
              case 1073741908:
              case 1073741909:
              case 1073741910:
              case 1073741911:
              case 1073741912:
              case 1073741913:
              case 1073741914:
              case 1073741915:
              case 1073741916:
              case 1073741917:
              case 1073741918:
              case 1073741919:
              case 1073741920:
              case 1073741921:
              case 1073741922:
              case 1073741923:
              case 1073742044:
                var f = 3;
                break;
              case 1073742048:
              case 1073742049:
              case 1073742050:
              case 1073742051:
                f = 1;
                break;
              case 1073742052:
              case 1073742053:
              case 1073742054:
              case 1073742055:
                f = 2;
                break;
              default:
                f = 0;
            }
            switch (b) {
              case 8:
                b = 8;
                break;
              case 9:
                b = 9;
                break;
              case 13:
                b = 13;
                break;
              case 27:
                b = 27;
                break;
              case 32:
                b = 32;
                break;
              case 33:
                b = 49;
                break;
              case 34:
                b = 222;
                break;
              case 35:
                b = 51;
                break;
              case 36:
                b = 52;
                break;
              case 37:
                b = 53;
                break;
              case 38:
                b = 55;
                break;
              case 39:
                b = 222;
                break;
              case 40:
                b = 57;
                break;
              case 41:
                b = 48;
                break;
              case 42:
                b = 56;
                break;
              case 44:
                b = 188;
                break;
              case 45:
                b = 189;
                break;
              case 46:
                b = 190;
                break;
              case 47:
                b = 191;
                break;
              case 48:
                b = 48;
                break;
              case 49:
                b = 49;
                break;
              case 50:
                b = 50;
                break;
              case 51:
                b = 51;
                break;
              case 52:
                b = 52;
                break;
              case 53:
                b = 53;
                break;
              case 54:
                b = 54;
                break;
              case 55:
                b = 55;
                break;
              case 56:
                b = 56;
                break;
              case 57:
                b = 57;
                break;
              case 58:
                b = 186;
                break;
              case 59:
                b = 186;
                break;
              case 60:
                b = 60;
                break;
              case 61:
                b = 187;
                break;
              case 62:
                b = 190;
                break;
              case 63:
                b = 191;
                break;
              case 64:
                b = 50;
                break;
              case 91:
                b = 219;
                break;
              case 92:
                b = 220;
                break;
              case 93:
                b = 221;
                break;
              case 94:
                b = 54;
                break;
              case 95:
                b = 189;
                break;
              case 96:
                b = 192;
                break;
              case 97:
                b = 65;
                break;
              case 98:
                b = 66;
                break;
              case 99:
                b = 67;
                break;
              case 100:
                b = 68;
                break;
              case 101:
                b = 69;
                break;
              case 102:
                b = 70;
                break;
              case 103:
                b = 71;
                break;
              case 104:
                b = 72;
                break;
              case 105:
                b = 73;
                break;
              case 106:
                b = 74;
                break;
              case 107:
                b = 75;
                break;
              case 108:
                b = 76;
                break;
              case 109:
                b = 77;
                break;
              case 110:
                b = 78;
                break;
              case 111:
                b = 79;
                break;
              case 112:
                b = 80;
                break;
              case 113:
                b = 81;
                break;
              case 114:
                b = 82;
                break;
              case 115:
                b = 83;
                break;
              case 116:
                b = 84;
                break;
              case 117:
                b = 85;
                break;
              case 118:
                b = 86;
                break;
              case 119:
                b = 87;
                break;
              case 120:
                b = 88;
                break;
              case 121:
                b = 89;
                break;
              case 122:
                b = 90;
                break;
              case 127:
                b = 46;
                break;
              case 1073741881:
                b = 20;
                break;
              case 1073741882:
                b = 112;
                break;
              case 1073741883:
                b = 113;
                break;
              case 1073741884:
                b = 114;
                break;
              case 1073741885:
                b = 115;
                break;
              case 1073741886:
                b = 116;
                break;
              case 1073741887:
                b = 117;
                break;
              case 1073741888:
                b = 118;
                break;
              case 1073741889:
                b = 119;
                break;
              case 1073741890:
                b = 120;
                break;
              case 1073741891:
                b = 121;
                break;
              case 1073741892:
                b = 122;
                break;
              case 1073741893:
                b = 123;
                break;
              case 1073741894:
                b = 301;
                break;
              case 1073741895:
                b = 145;
                break;
              case 1073741896:
                b = 19;
                break;
              case 1073741897:
                b = 45;
                break;
              case 1073741898:
                b = 36;
                break;
              case 1073741899:
                b = 33;
                break;
              case 1073741901:
                b = 35;
                break;
              case 1073741902:
                b = 34;
                break;
              case 1073741903:
                b = 39;
                break;
              case 1073741904:
                b = 37;
                break;
              case 1073741905:
                b = 40;
                break;
              case 1073741906:
                b = 38;
                break;
              case 1073741907:
                b = 144;
                break;
              case 1073741908:
                b = 111;
                break;
              case 1073741909:
                b = 106;
                break;
              case 1073741910:
                b = 109;
                break;
              case 1073741911:
                b = 107;
                break;
              case 1073741912:
                b = 13;
                break;
              case 1073741913:
                b = 97;
                break;
              case 1073741914:
                b = 98;
                break;
              case 1073741915:
                b = 99;
                break;
              case 1073741916:
                b = 100;
                break;
              case 1073741917:
                b = 101;
                break;
              case 1073741918:
                b = 102;
                break;
              case 1073741919:
                b = 103;
                break;
              case 1073741920:
                b = 104;
                break;
              case 1073741921:
                b = 105;
                break;
              case 1073741922:
                b = 96;
                break;
              case 1073741923:
                b = 110;
                break;
              case 1073741925:
                b = 302;
                break;
              case 1073741928:
                b = 124;
                break;
              case 1073741929:
                b = 125;
                break;
              case 1073741930:
                b = 126;
                break;
              case 1073741982:
                b = 13;
                break;
              case 1073742044:
                b = 110;
                break;
              case 1073742048:
                b = 17;
                break;
              case 1073742049:
                b = 16;
                break;
              case 1073742050:
                b = 18;
                break;
              case 1073742051:
                b = 15;
                break;
              case 1073742052:
                b = 17;
                break;
              case 1073742053:
                b = 16;
                break;
              case 1073742054:
                b = 18;
                break;
              case 1073742055:
                b = 15;
            }
            var g = vl.__getCharCode(b, fb.get_shiftKey(c));
            if (
              'keyUp' == a &&
              (32 == b || 13 == b) &&
              this.__focus instanceof T
            ) {
              var k = xa.__cast(this.__focus, T);
              if (k.get_buttonMode() && 1 == k.focusRect) {
                var q = B.__pool.get(),
                  p = B.__pool.get();
                p.x = this.__mouseX;
                p.y = this.__mouseY;
                k = Fb.__create(
                  'click',
                  0,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  k.__globalToLocal(p, q),
                  k,
                );
                this.__dispatchStack(k, d);
                k.__updateAfterEventFlag && this.__renderAfterEvent();
                B.__pool.release(p);
                B.__pool.release(q);
              }
            }
            f = new Bj(
              a,
              !0,
              !0,
              g,
              b,
              f,
              this.__macKeyboard
                ? fb.get_ctrlKey(c) || fb.get_metaKey(c)
                : fb.get_ctrlKey(c),
              fb.get_altKey(c),
              fb.get_shiftKey(c),
              fb.get_ctrlKey(c),
              fb.get_metaKey(c),
            );
            d.reverse();
            this.__dispatchStack(f, d);
            if (f.__preventDefault)
              'keyDown' == a
                ? this.window.onKeyDown.cancel()
                : this.window.onKeyUp.cancel();
            else if ('keyDown' == a && 9 == b) {
              d = [];
              this.__tabTest(d);
              g = -1;
              a = null;
              b = fb.get_shiftKey(c) ? -1 : 1;
              if (1 < d.length) {
                Lc.sort(d, function (a, b) {
                  return a.get_tabIndex() - b.get_tabIndex();
                });
                if (-1 != d[d.length - 1].get_tabIndex())
                  for (p = 0; p < d.length; ) {
                    if (-1 < d[p].get_tabIndex()) {
                      0 < p && d.splice(0, p);
                      break;
                    }
                    ++p;
                  }
                if (null != this.get_focus()) {
                  p = this.get_focus();
                  for (q = d.indexOf(p); -1 == q && null != p; ) {
                    g = p.parent;
                    if (null != g && g.get_tabChildren()) {
                      p = g.getChildIndex(p);
                      if (-1 == p) {
                        p = g;
                        continue;
                      }
                      for (
                        p += b;
                        fb.get_shiftKey(c) ? 0 <= p : p < g.get_numChildren();

                      ) {
                        k = g.getChildAt(p);
                        if (
                          k instanceof Aa &&
                          ((q = xa.__cast(k, Aa)), (q = d.indexOf(q)), -1 != q)
                        ) {
                          b = 0;
                          break;
                        }
                        p += b;
                      }
                    } else
                      fb.get_shiftKey(c) &&
                        ((q = d.indexOf(g)), -1 != q && (b = 0));
                    p = g;
                  }
                  g = 0 > q ? 0 : q + b;
                } else g = this.__currentTabOrderIndex;
              } else
                1 == d.length &&
                  ((a = d[0]), this.get_focus() == a && (a = null));
              q = 0 <= g && g < d.length;
              1 == d.length || (0 == d.length && null != this.get_focus())
                ? (g = 0)
                : 1 < d.length &&
                  (0 > g && (g += d.length),
                  (g %= d.length),
                  (a = d[g]),
                  a == this.get_focus() &&
                    ((g += b),
                    0 > g && (g += d.length),
                    (g %= d.length),
                    (a = d[g])));
              b = null;
              null != this.get_focus() &&
                ((b = new lg(
                  'keyFocusChange',
                  !0,
                  !0,
                  a,
                  fb.get_shiftKey(c),
                  0,
                )),
                (d = []),
                this.get_focus().__getInteractive(d),
                d.reverse(),
                this.__dispatchStack(b, d),
                b.isDefaultPrevented() && this.window.onKeyDown.cancel());
              (null != b && b.isDefaultPrevented()) ||
                ((this.__currentTabOrderIndex = g),
                null != a && this.set_focus(a),
                q && this.window.onKeyDown.cancel());
            } else if (
              'keyDown' == a &&
              null != this.get_focus() &&
              !(this.get_focus() instanceof Qc) &&
              (this.__macKeyboard
                ? fb.get_ctrlKey(c) || fb.get_metaKey(c)
                : fb.get_ctrlKey(c)) &&
              !fb.get_altKey(c) &&
              !fb.get_shiftKey(c)
            )
              switch (b) {
                case 65:
                  c = new za('selectAll', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 67:
                  c = new za('copy', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 86:
                  c = new za('paste', !0, !0);
                  this.get_focus().dispatchEvent(c);
                  break;
                case 88:
                  ((c = new za('cut', !0, !0)),
                    this.get_focus().dispatchEvent(c));
              }
            f.__updateAfterEventFlag && this.__renderAfterEvent();
          }
        },
        __onLimeCreateWindow: function (a) {
          if (this.window == a) {
            var b = this;
            a.onActivate.add(function () {
              b.__onLimeWindowActivate(a);
            });
            var c = this;
            a.onClose.add(
              function () {
                c.__onLimeWindowClose(a);
              },
              !1,
              -9e3,
            );
            var d = this;
            a.onDeactivate.add(function () {
              d.__onLimeWindowDeactivate(a);
            });
            var f = this;
            var g = function (b) {
              f.__onLimeWindowDropFile(a, b);
            };
            a.onDropFile.add(g);
            var k = this;
            a.onEnter.add(function () {
              k.__onLimeWindowEnter(a);
            });
            var q = this;
            a.onExpose.add(function () {
              q.__onLimeWindowExpose(a);
            });
            var p = this;
            a.onFocusIn.add(function () {
              p.__onLimeWindowFocusIn(a);
            });
            var l = this;
            a.onFocusOut.add(function () {
              l.__onLimeWindowFocusOut(a);
            });
            var h = this;
            a.onFullscreen.add(function () {
              h.__onLimeWindowFullscreen(a);
            });
            var n = this;
            g = function (b, c) {
              n.__onLimeKeyDown(a, b, c);
            };
            a.onKeyDown.add(g);
            var t = this;
            g = function (b, c) {
              t.__onLimeKeyUp(a, b, c);
            };
            a.onKeyUp.add(g);
            var w = this;
            a.onLeave.add(function () {
              w.__onLimeWindowLeave(a);
            });
            var r = this;
            a.onMinimize.add(function () {
              r.__onLimeWindowMinimize(a);
            });
            var x = this;
            g = function (b, c, d) {
              x.__onLimeMouseDown(a, b, c, d);
            };
            a.onMouseDown.add(g);
            var C = this;
            g = function (b, c) {
              C.__onLimeMouseMove(a, b, c);
            };
            a.onMouseMove.add(g);
            var G = this;
            g = function (b, c) {
              G.__onLimeMouseMoveRelative(a, b, c);
            };
            a.onMouseMoveRelative.add(g);
            var y = this;
            g = function (b, c, d) {
              y.__onLimeMouseUp(a, b, c, d);
            };
            a.onMouseUp.add(g);
            var A = this;
            g = function (b, c, d) {
              A.__onLimeMouseWheel(a, b, c, d);
            };
            a.onMouseWheel.add(g);
            var B = this;
            g = function (b, c) {
              B.__onLimeWindowMove(a, b, c);
            };
            a.onMove.add(g);
            a.onRender.add(m(this, this.__onLimeRender));
            a.onRenderContextLost.add(m(this, this.__onLimeRenderContextLost));
            a.onRenderContextRestored.add(
              m(this, this.__onLimeRenderContextRestored),
            );
            var N = this;
            g = function (b, c) {
              N.__onLimeWindowResize(a, b, c);
            };
            a.onResize.add(g);
            var u = this;
            a.onRestore.add(function () {
              u.__onLimeWindowRestore(a);
            });
            var L = this;
            g = function (b, c, d) {
              L.__onLimeTextEdit(a, b, c, d);
            };
            a.onTextEdit.add(g);
            var v = this;
            g = function (b) {
              v.__onLimeTextInput(a, b);
            };
            a.onTextInput.add(g);
            this.__onLimeWindowCreate(a);
          }
        },
        __onLimeGamepadAxisMove: function (a, b, c) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Va.__onGamepadAxisMove(a, b, c);
            } catch (d) {
              ((Ua.lastError = d),
                (a = aa.caught(d).unwrap()),
                this.__handleError(a));
            }
          else Va.__onGamepadAxisMove(a, b, c);
        },
        __onLimeGamepadButtonDown: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Va.__onGamepadButtonDown(a, b);
            } catch (c) {
              ((Ua.lastError = c),
                (a = aa.caught(c).unwrap()),
                this.__handleError(a));
            }
          else Va.__onGamepadButtonDown(a, b);
        },
        __onLimeGamepadButtonUp: function (a, b) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Va.__onGamepadButtonUp(a, b);
            } catch (c) {
              ((Ua.lastError = c),
                (a = aa.caught(c).unwrap()),
                this.__handleError(a));
            }
          else Va.__onGamepadButtonUp(a, b);
        },
        __onLimeGamepadConnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Va.__onGamepadConnect(a);
            } catch (k) {
              Ua.lastError = k;
              var b = aa.caught(k).unwrap();
              this.__handleError(b);
            }
          else Va.__onGamepadConnect(a);
          var c = this;
          b = function (b, d) {
            c.__onLimeGamepadAxisMove(a, b, d);
          };
          a.onAxisMove.add(b);
          var d = this;
          b = function (b) {
            d.__onLimeGamepadButtonDown(a, b);
          };
          a.onButtonDown.add(b);
          var f = this;
          b = function (b) {
            f.__onLimeGamepadButtonUp(a, b);
          };
          a.onButtonUp.add(b);
          var g = this;
          a.onDisconnect.add(function () {
            g.__onLimeGamepadDisconnect(a);
          });
        },
        __onLimeGamepadDisconnect: function (a) {
          if (this.__uncaughtErrorEvents.__enabled)
            try {
              Va.__onGamepadDisconnect(a);
            } catch (b) {
              ((Ua.lastError = b),
                (a = aa.caught(b).unwrap()),
                this.__handleError(a));
            }
          else Va.__onGamepadDisconnect(a);
        },
        __onLimeKeyDown: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyDown', b, c);
        },
        __onLimeKeyUp: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            this.__onKey('keyUp', b, c);
        },
        __onLimeModuleExit: function (a) {
          null != this.window &&
            ((a = new za('deactivate')), this.__broadcastEvent(a));
        },
        __onLimeMouseDown: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var f = 'middleMouseDown';
                break;
              case 2:
                f = 'rightMouseDown';
                break;
              default:
                f = 'mouseDown';
            }
            this.__onMouse(f, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel();
          }
        },
        __onLimeMouseMove: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            ((this.__pendingMouseEvent = !0),
            (this.__pendingMouseX = (b * a.__scale) | 0),
            (this.__pendingMouseY = (c * a.__scale) | 0));
        },
        __onLimeMouseMoveRelative: function (a, b, c) {},
        __onLimeMouseUp: function (a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var f = 'middleMouseUp';
                break;
              case 2:
                f = 'rightMouseUp';
                break;
              default:
                f = 'mouseUp';
            }
            this.__onMouse(f, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel();
          }
        },
        __onLimeMouseWheel: function (a, b, c, d) {
          null != this.window &&
            this.window == a &&
            (this.__dispatchPendingMouseEvent(),
            d == Sd.PIXELS
              ? this.__onMouseWheel((b * a.__scale) | 0, (c * a.__scale) | 0, d)
              : this.__onMouseWheel(b | 0, c | 0, d));
        },
        __renderAfterEvent: function () {
          this.__render(this.window.context);
        },
        __render: function (a) {
          a = !1;
          var b =
            null != this.__renderer &&
            (this.__renderDirty || this.__forceRender);
          if (this.__invalidated && b) {
            this.__invalidated = !1;
            var c = new za('render');
            this.__broadcastEvent(c);
          }
          this.__update(!1, !0);
          if (null != this.__renderer) {
            if (null != this.context3D) {
              for (c = this.stage3Ds.iterator(); c.hasNext(); ) {
                var d = c.next();
                this.context3D.__renderStage3D(d);
              }
              this.context3D.__present && (b = !0);
            }
            b
              ? (null == this.context3D && this.__renderer.__clear(),
                this.__renderer.__render(this))
              : null == this.context3D && (a = !0);
            null != this.context3D &&
              (this.context3D.__present
                ? (this.__renderer.__cleared || this.__renderer.__clear(),
                  (this.context3D.__present = !1),
                  (this.context3D.__cleared = !1))
                : (a = !0));
            this.__renderer.__cleared = !1;
          }
          return a;
        },
        __onLimeRender: function (a) {
          this.__rendering ||
            ((this.__rendering = !0),
            this.__broadcastEvent(new za('enterFrame')),
            this.__broadcastEvent(new za('frameConstructed')),
            this.__broadcastEvent(new za('exitFrame')),
            (this.__renderable = !0),
            this.__enterFrame(this.__deltaTime),
            (this.__deltaTime = 0),
            this.__render(a) && this.window.onRender.cancel(),
            (this.__rendering = !1));
        },
        __onLimeRenderContextLost: function () {
          this.context3D = this.__renderer = null;
          for (var a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__lostContext();
        },
        __onLimeRenderContextRestored: function (a) {
          this.__createRenderer();
          for (a = this.stage3Ds.iterator(); a.hasNext(); )
            a.next().__restoreContext();
        },
        __onLimeTextEdit: function (a, b, c, d) {},
        __onLimeTextInput: function (a, b) {
          if (null != this.window && this.window == a) {
            var c = [];
            null == this.__focus
              ? this.__getInteractive(c)
              : this.__focus.__getInteractive(c);
            b = new Pe('textInput', !0, !0, b);
            0 < c.length
              ? (c.reverse(), this.__dispatchStack(b, c))
              : this.__dispatchEvent(b);
            b.isDefaultPrevented() && a.onTextInput.cancel();
          }
        },
        __onLimeTouchCancel: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchMove: function (a) {
          this.__onTouch('touchMove', a, this.__primaryTouch == a);
        },
        __onLimeTouchEnd: function (a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch('touchEnd', a, b);
        },
        __onLimeTouchStart: function (a) {
          null == this.__primaryTouch && (this.__primaryTouch = a);
          this.__onTouch('touchBegin', a, this.__primaryTouch == a);
        },
        __onLimeUpdate: function (a) {
          this.__deltaTime = a;
          this.__dispatchPendingMouseEvent();
        },
        __onLimeWindowActivate: function (a) {},
        __onLimeWindowClose: function (a) {
          this.window == a && (this.window = null);
          this.__primaryTouch = null;
          a = new za('deactivate');
          this.__broadcastEvent(a);
        },
        __onLimeWindowCreate: function (a) {
          null != this.window &&
            this.window == a &&
            null != a.context &&
            this.__createRenderer();
        },
        __onLimeWindowDeactivate: function (a) {},
        __onLimeWindowDropFile: function (a, b) {},
        __onLimeWindowEnter: function (a) {},
        __onLimeWindowExpose: function (a) {
          null != this.window && this.window == a && (this.__renderDirty = !0);
        },
        __onLimeWindowFocusIn: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__renderDirty = !0),
            (a = new za('activate')),
            this.__broadcastEvent(a),
            this.set_focus(this.__cacheFocus));
        },
        __onLimeWindowFocusOut: function (a) {
          null != this.window &&
            this.window == a &&
            ((this.__primaryTouch = null),
            (a = new za('deactivate')),
            this.__broadcastEvent(a),
            (a = this.get_focus()),
            this.set_focus(null),
            (this.__cacheFocus = a),
            (Fb.__altKey = !1),
            (Fb.__commandKey = !1),
            (Fb.__ctrlKey = !1),
            (Fb.__shiftKey = !1));
        },
        __onLimeWindowFullscreen: function (a) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen ||
              ((this.__wasFullscreen = !0),
              2 == this.__displayState && (this.__displayState = 1),
              this.__dispatchEvent(new of('fullScreen', !1, !1, !0, !0))));
        },
        __onLimeWindowLeave: function (a) {
          null == this.window ||
            this.window != a ||
            Fb.__buttonDown ||
            (this.__dispatchPendingMouseEvent(),
            (a = new za('mouseLeave')),
            this.__dispatchEvent(a));
        },
        __onLimeWindowMinimize: function (a) {},
        __onLimeWindowMove: function (a, b, c) {},
        __onLimeWindowResize: function (a, b, c) {
          null != this.window &&
            this.window == a &&
            (this.__resize(),
            this.__wasFullscreen &&
              !a.__fullscreen &&
              ((this.__wasFullscreen = !1),
              (this.__displayState = 2),
              this.__dispatchEvent(new of('fullScreen', !1, !1, !1, !0))));
        },
        __onLimeWindowRestore: function (a) {
          null != this.window &&
            this.window == a &&
            this.__wasFullscreen &&
            !a.__fullscreen &&
            ((this.__wasFullscreen = !1),
            (this.__displayState = 2),
            this.__dispatchEvent(new of('fullScreen', !1, !1, !1, !0)));
        },
        __onMouse: function (a, b, c, d) {
          if (!(2 < d)) {
            var f = B.__pool.get();
            f.setTo(b, c);
            b = this.__displayMatrix;
            c = b.a * b.d - b.b * b.c;
            if (0 == c) ((f.x = -b.tx), (f.y = -b.ty));
            else {
              var g = (1 / c) * (b.c * (b.ty - f.y) + b.d * (f.x - b.tx));
              f.y = (1 / c) * (b.a * (f.y - b.ty) + b.b * (b.tx - f.x));
              f.x = g;
            }
            this.__mouseX = f.x;
            this.__mouseY = f.y;
            b = [];
            this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this)
              ? (g = b[b.length - 1])
              : ((g = this), (b = [this]));
            null == g && (g = this);
            var k = null,
              q = !1;
            switch (a) {
              case 'middleMouseDown':
                this.__mouseDownMiddle = g;
                q = !0;
                break;
              case 'middleMouseUp':
                this.__mouseDownMiddle == g && (k = 'middleClick');
                this.__mouseDownMiddle = null;
                q = !0;
                break;
              case 'mouseDown':
                null != this.get_focus()
                  ? this.get_focus() != g &&
                    ((c = new lg('mouseFocusChange', !0, !0, g, !1, 0)),
                    this.get_focus().dispatchEvent(c),
                    c.isDefaultPrevented() ||
                      (g.__allowMouseFocus()
                        ? this.set_focus(g)
                        : this.set_focus(null)))
                  : g.__allowMouseFocus()
                    ? this.set_focus(g)
                    : this.set_focus(null);
                this.__mouseDownLeft = g;
                this.__lastClickTarget != g &&
                  ((this.__lastClickTarget = null), (this.__lastClickTime = 0));
                q = Fb.__buttonDown = !0;
                break;
              case 'mouseUp':
                null != this.__mouseDownLeft &&
                  ((Fb.__buttonDown = !1),
                  this.__mouseDownLeft == g
                    ? (k = 'click')
                    : ((q = Fb.__create(
                        'releaseOutside',
                        1,
                        0,
                        this.__mouseX,
                        this.__mouseY,
                        new B(this.__mouseX, this.__mouseY),
                        this,
                      )),
                      this.__mouseDownLeft.dispatchEvent(q)),
                  (this.__mouseDownLeft = null));
                q = !0;
                break;
              case 'rightMouseDown':
                this.__mouseDownRight = g;
                q = !0;
                break;
              case 'rightMouseUp':
                (this.__mouseDownRight == g && (k = 'rightClick'),
                  (this.__mouseDownRight = null),
                  (q = !0));
            }
            c = B.__pool.get();
            q = Fb.__create(
              a,
              d,
              q ? this.window.clickCount : 0,
              this.__mouseX,
              this.__mouseY,
              g.__globalToLocal(f, c),
              g,
            );
            this.__dispatchStack(q, b);
            q.__updateAfterEventFlag && this.__renderAfterEvent();
            null != k &&
              ((q = Fb.__create(
                k,
                d,
                0,
                this.__mouseX,
                this.__mouseY,
                g.__globalToLocal(f, c),
                g,
              )),
              this.__dispatchStack(q, b),
              q.__updateAfterEventFlag && this.__renderAfterEvent(),
              'mouseUp' == a &&
                (g.doubleClickEnabled
                  ? ((a = Ra.getTimer()),
                    500 > a - this.__lastClickTime &&
                    g == this.__lastClickTarget
                      ? ((q = Fb.__create(
                          'doubleClick',
                          d,
                          0,
                          this.__mouseX,
                          this.__mouseY,
                          g.__globalToLocal(f, c),
                          g,
                        )),
                        this.__dispatchStack(q, b),
                        q.__updateAfterEventFlag && this.__renderAfterEvent(),
                        (this.__lastClickTime = 0),
                        (this.__lastClickTarget = null))
                      : ((this.__lastClickTarget = g),
                        (this.__lastClickTime = a)))
                  : ((this.__lastClickTarget = null),
                    (this.__lastClickTime = 0))));
            if ('auto' == Rk.__cursor && !Rk.__hidden) {
              q = null;
              if (null != this.__mouseDownLeft)
                q = this.__mouseDownLeft.__getCursor();
              else
                for (a = 0; a < b.length; )
                  if (
                    ((q = b[a]),
                    ++a,
                    (q = q.__getCursor()),
                    null != q && null != this.window)
                  ) {
                    this.window.set_cursor(Tl.toLimeCursor(q));
                    break;
                  }
              null == q &&
                null != this.window &&
                this.window.set_cursor(tb.ARROW);
            }
            g != this.__mouseOverTarget &&
              null != this.__mouseOverTarget &&
              ((q = Fb.__create(
                'mouseOut',
                d,
                0,
                this.__mouseX,
                this.__mouseY,
                this.__mouseOverTarget.__globalToLocal(f, c),
                this.__mouseOverTarget,
              )),
              this.__dispatchStack(q, this.__mouseOutStack),
              q.__updateAfterEventFlag && this.__renderAfterEvent());
            for (a = 0; a < this.__rollOutStack.length; )
              ((k = this.__rollOutStack[a]),
                -1 == b.indexOf(k)
                  ? (R.remove(this.__rollOutStack, k),
                    (q = Fb.__create(
                      'rollOut',
                      d,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(f, c),
                      k,
                    )),
                    (q.bubbles = !1),
                    this.__dispatchTarget(k, q),
                    q.__updateAfterEventFlag && this.__renderAfterEvent())
                  : ++a);
            for (a = 0; a < b.length; )
              ((k = b[a]),
                ++a,
                -1 == this.__rollOutStack.indexOf(k) &&
                  null != this.__mouseOverTarget &&
                  (k.hasEventListener('rollOver') &&
                    ((q = Fb.__create(
                      'rollOver',
                      d,
                      0,
                      this.__mouseX,
                      this.__mouseY,
                      this.__mouseOverTarget.__globalToLocal(f, c),
                      k,
                    )),
                    (q.bubbles = !1),
                    this.__dispatchTarget(k, q),
                    q.__updateAfterEventFlag && this.__renderAfterEvent()),
                  (k.hasEventListener('rollOut') ||
                    k.hasEventListener('rollOver')) &&
                    this.__rollOutStack.push(k)));
            g != this.__mouseOverTarget &&
              (null != g &&
                ((q = Fb.__create(
                  'mouseOver',
                  d,
                  0,
                  this.__mouseX,
                  this.__mouseY,
                  g.__globalToLocal(f, c),
                  g,
                )),
                this.__dispatchStack(q, b),
                q.__updateAfterEventFlag && this.__renderAfterEvent()),
              (this.__mouseOverTarget = g),
              (this.__mouseOutStack = b));
            null != this.__dragObject &&
              (this.__drag(f),
              (d = null),
              this.__mouseOverTarget == this.__dragObject
                ? ((g = this.__dragObject.mouseEnabled),
                  (a = this.__dragObject.mouseChildren),
                  (this.__dragObject.mouseEnabled = !1),
                  (this.__dragObject.mouseChildren = !1),
                  (b = []),
                  this.__hitTest(
                    this.__mouseX,
                    this.__mouseY,
                    !0,
                    b,
                    !0,
                    this,
                  ) && (d = b[b.length - 1]),
                  (this.__dragObject.mouseEnabled = g),
                  (this.__dragObject.mouseChildren = a))
                : this.__mouseOverTarget != this &&
                  (d = this.__mouseOverTarget),
              (this.__dragObject.dropTarget = d));
            B.__pool.release(f);
            B.__pool.release(c);
          }
        },
        __onMouseWheel: function (a, b, c) {
          var d = this.__mouseX,
            f = this.__mouseY;
          a = [];
          if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this))
            var g = a[a.length - 1];
          else ((g = this), (a = [this]));
          null == g && (g = this);
          c = B.__pool.get();
          c.setTo(d, f);
          d = this.__displayMatrix;
          f = d.a * d.d - d.b * d.c;
          if (0 == f) ((c.x = -d.tx), (c.y = -d.ty));
          else {
            var k = (1 / f) * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
            c.y = (1 / f) * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
            c.x = k;
          }
          b |= 0;
          b = Fb.__create(
            'mouseWheel',
            0,
            0,
            this.__mouseX,
            this.__mouseY,
            g.__globalToLocal(c, c),
            g,
            b,
          );
          b.cancelable = !0;
          this.__dispatchStack(b, a);
          b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
          b.__updateAfterEventFlag && this.__renderAfterEvent();
          B.__pool.release(c);
        },
        __onTouch: function (a, b, c) {
          var d = B.__pool.get();
          d.setTo(
            Math.round(b.x * this.window.__width * this.window.__scale),
            Math.round(b.y * this.window.__height * this.window.__scale),
          );
          var f = this.__displayMatrix,
            g = f.a * f.d - f.b * f.c;
          if (0 == g) ((d.x = -f.tx), (d.y = -f.ty));
          else {
            var k = (1 / g) * (f.c * (f.ty - d.y) + f.d * (d.x - f.tx));
            d.y = (1 / g) * (f.a * (d.y - f.ty) + f.b * (f.tx - d.x));
            d.x = k;
          }
          f = d.x;
          g = d.y;
          k = [];
          if (this.__hitTest(f, g, !1, k, !0, this)) var q = k[k.length - 1];
          else ((q = this), (k = [this]));
          null == q && (q = this);
          var p = b.id;
          if (this.__touchData.h.hasOwnProperty(p))
            var l = this.__touchData.h[p];
          else
            ((l = mg.__pool.get()),
              l.reset(),
              (l.touch = b),
              (this.__touchData.h[p] = l));
          var h = null,
            n = !1;
          switch (a) {
            case 'touchBegin':
              l.touchDownTarget = q;
              break;
            case 'touchEnd':
              (l.touchDownTarget == q && (h = 'touchTap'),
                (l.touchDownTarget = null),
                (n = !0));
          }
          var t = B.__pool.get();
          a = Yd.__create(a, null, f, g, q.__globalToLocal(d, t), q);
          a.touchPointID = p;
          a.isPrimaryTouchPoint = c;
          a.pressure = b.pressure;
          this.__dispatchStack(a, k);
          a.__updateAfterEventFlag && this.__renderAfterEvent();
          null != h &&
            ((a = Yd.__create(h, null, f, g, q.__globalToLocal(d, t), q)),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchStack(a, k),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          h = l.touchOverTarget;
          q != h &&
            null != h &&
            ((a = Yd.__create(
              'touchOut',
              null,
              f,
              g,
              h.__globalToLocal(d, t),
              h,
            )),
            (a.touchPointID = p),
            (a.isPrimaryTouchPoint = c),
            (a.pressure = b.pressure),
            this.__dispatchTarget(h, a),
            a.__updateAfterEventFlag && this.__renderAfterEvent());
          for (var w = l.rollOutStack, r, x = 0; x < w.length; )
            ((r = w[x]),
              -1 == k.indexOf(r)
                ? (R.remove(w, r),
                  (a = Yd.__create(
                    'touchRollOut',
                    null,
                    f,
                    g,
                    h.__globalToLocal(d, t),
                    h,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(r, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent())
                : ++x);
          for (x = 0; x < k.length; )
            ((r = k[x]),
              ++x,
              -1 == w.indexOf(r) &&
                (r.hasEventListener('touchRollOver') &&
                  ((a = Yd.__create(
                    'touchRollOver',
                    null,
                    f,
                    g,
                    h.__globalToLocal(d, t),
                    r,
                  )),
                  (a.touchPointID = p),
                  (a.isPrimaryTouchPoint = c),
                  (a.bubbles = !1),
                  (a.pressure = b.pressure),
                  this.__dispatchTarget(r, a),
                  a.__updateAfterEventFlag && this.__renderAfterEvent()),
                r.hasEventListener('touchRollOut') && w.push(r)));
          q != h &&
            (null != q &&
              ((a = Yd.__create(
                'touchOver',
                null,
                f,
                g,
                q.__globalToLocal(d, t),
                q,
              )),
              (a.touchPointID = p),
              (a.isPrimaryTouchPoint = c),
              (a.bubbles = !0),
              (a.pressure = b.pressure),
              this.__dispatchTarget(q, a),
              a.__updateAfterEventFlag && this.__renderAfterEvent()),
            (l.touchOverTarget = q));
          B.__pool.release(d);
          B.__pool.release(t);
          n && (this.__touchData.remove(p), l.reset(), mg.__pool.release(l));
        },
        __registerLimeModule: function (a) {
          a.onCreateWindow.add(m(this, this.__onLimeCreateWindow));
          a.onUpdate.add(m(this, this.__onLimeUpdate));
          a.onExit.add(m(this, this.__onLimeModuleExit), !1, 0);
          for (a = uc.devices.iterator(); a.hasNext(); ) {
            var b = a.next();
            this.__onLimeGamepadConnect(b);
          }
          uc.onConnect.add(m(this, this.__onLimeGamepadConnect));
          hc.onStart.add(m(this, this.__onLimeTouchStart));
          hc.onMove.add(m(this, this.__onLimeTouchMove));
          hc.onEnd.add(m(this, this.__onLimeTouchEnd));
          hc.onCancel.add(m(this, this.__onLimeTouchCancel));
        },
        __resize: function () {
          var a = this.stageWidth,
            b = this.stageHeight,
            c = (this.window.__width * this.window.__scale) | 0,
            d = (this.window.__height * this.window.__scale) | 0;
          this.__displayMatrix.identity();
          if (
            null != this.get_fullScreenSourceRect() &&
            this.window.__fullscreen
          ) {
            this.stageWidth = this.get_fullScreenSourceRect().width | 0;
            this.stageHeight = this.get_fullScreenSourceRect().height | 0;
            var f = c / this.stageWidth,
              g = d / this.stageHeight;
            this.__displayMatrix.translate(
              -this.get_fullScreenSourceRect().x,
              -this.get_fullScreenSourceRect().y,
            );
            this.__displayMatrix.scale(f, g);
            this.__displayRect.setTo(
              this.get_fullScreenSourceRect().get_left(),
              this.get_fullScreenSourceRect().get_right(),
              this.get_fullScreenSourceRect().get_top(),
              this.get_fullScreenSourceRect().get_bottom(),
            );
          } else if (
            0 == this.__logicalWidth ||
            0 == this.__logicalHeight ||
            2 == this.get_scaleMode() ||
            0 == c ||
            0 == d
          )
            ((this.stageWidth = Math.round(c / this.window.__scale)),
              (this.stageHeight = Math.round(d / this.window.__scale)),
              this.__displayMatrix.scale(
                this.window.__scale,
                this.window.__scale,
              ),
              this.__displayRect.setTo(
                0,
                0,
                this.stageWidth,
                this.stageHeight,
              ));
          else
            switch (
              ((this.stageWidth = this.__logicalWidth),
              (this.stageHeight = this.__logicalHeight),
              this.get_scaleMode())
            ) {
              case 0:
                f = c / this.stageWidth;
                g = d / this.stageHeight;
                this.__displayMatrix.scale(f, g);
                this.__displayRect.setTo(
                  0,
                  0,
                  this.stageWidth,
                  this.stageHeight,
                );
                break;
              case 1:
                f = c / this.stageWidth;
                g = d / this.stageHeight;
                f = Math.max(f, g);
                g = this.stageWidth * f;
                var k = this.stageHeight * f;
                g = this.stageWidth - Math.round((g - c) / f);
                k = this.stageHeight - Math.round((k - d) / f);
                var q = Math.round((this.stageWidth - g) / 2),
                  p = Math.round((this.stageHeight - k) / 2);
                this.__displayMatrix.translate(-q, -p);
                this.__displayMatrix.scale(f, f);
                this.__displayRect.setTo(q, p, g, k);
                break;
              default:
                ((f = c / this.stageWidth),
                  (g = d / this.stageHeight),
                  (f = Math.min(f, g)),
                  (g = this.stageWidth * f),
                  (k = this.stageHeight * f),
                  (g = this.stageWidth - Math.round((g - c) / f)),
                  (k = this.stageHeight - Math.round((k - d) / f)),
                  (q = Math.round((this.stageWidth - g) / 2)),
                  (p = Math.round((this.stageHeight - k) / 2)),
                  this.__displayMatrix.translate(-q, -p),
                  this.__displayMatrix.scale(f, f),
                  this.__displayRect.setTo(q, p, g, k));
            }
          null != this.context3D &&
            this.context3D.configureBackBuffer(
              this.stageWidth,
              this.stageHeight,
              0,
              !0,
              !0,
              !0,
            );
          for (f = this.stage3Ds.iterator(); f.hasNext(); )
            f.next().__resize(c, d);
          null != this.__renderer && this.__renderer.__resize(c, d);
          this.__renderDirty = !0;
          if (this.stageWidth != a || this.stageHeight != b)
            (this.__setTransformDirty(),
              (a = new za('resize')),
              this.__dispatchEvent(a));
        },
        __setLogicalSize: function (a, b) {
          this.__logicalWidth = a;
          this.__logicalHeight = b;
          this.__resize();
        },
        __stopDrag: function (a) {
          this.__dragObject = this.__dragBounds = null;
        },
        __unregisterLimeModule: function (a) {
          a.onCreateWindow.remove(m(this, this.__onLimeCreateWindow));
          a.onUpdate.remove(m(this, this.__onLimeUpdate));
          a.onExit.remove(m(this, this.__onLimeModuleExit));
          uc.onConnect.remove(m(this, this.__onLimeGamepadConnect));
          hc.onStart.remove(m(this, this.__onLimeTouchStart));
          hc.onMove.remove(m(this, this.__onLimeTouchMove));
          hc.onEnd.remove(m(this, this.__onLimeTouchEnd));
          hc.onCancel.remove(m(this, this.__onLimeTouchCancel));
        },
        __update: function (a, b) {
          a
            ? this.__transformDirty &&
              (jb.prototype.__update.call(this, !0, b),
              b && (this.__transformDirty = !1))
            : this.__transformDirty || this.__renderDirty
              ? (jb.prototype.__update.call(this, !1, b),
                b && ca.__supportDOM && (this.__wasDirty = !0))
              : !this.__renderDirty &&
                this.__wasDirty &&
                (jb.prototype.__update.call(this, !1, b),
                b && (this.__wasDirty = !1));
        },
        set_color: function (a) {
          null == a
            ? ((this.__transparent = !0), (a = 0))
            : (this.__transparent = !1);
          this.__color != a &&
            ((this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255),
            (this.__colorSplit[1] = ((a & 65280) >>> 8) / 255),
            (this.__colorSplit[2] = (a & 255) / 255),
            (this.__colorString = '#' + P.hex(a & 16777215, 6)),
            (this.__renderDirty = !0),
            (this.__color = -16777216 | (a & 16777215)));
          return a;
        },
        get_focus: function () {
          return this.__focus;
        },
        set_focus: function (a) {
          if (a != this.__focus || (null == a && null != this.__cacheFocus)) {
            var b = this.__focus;
            this.__cacheFocus = this.__focus = a;
            if (null != b) {
              var c = new lg('focusOut', !0, !1, a, !1, 0),
                d = [];
              b.__getInteractive(d);
              d.reverse();
              this.__dispatchStack(c, d);
            }
            null != a &&
              ((c = new lg('focusIn', !0, !1, b, !1, 0)),
              (d = []),
              a.__getInteractive(d),
              d.reverse(),
              this.__dispatchStack(c, d));
          }
          return a;
        },
        get_frameRate: function () {
          return null != this.window ? this.window.__backend.getFrameRate() : 0;
        },
        get_fullScreenSourceRect: function () {
          return null == this.__fullScreenSourceRect
            ? null
            : this.__fullScreenSourceRect.clone();
        },
        set_height: function (a) {
          return this.get_height();
        },
        get_mouseX: function () {
          return this.__mouseX;
        },
        get_mouseY: function () {
          return this.__mouseY;
        },
        get_quality: function () {
          return this.__quality;
        },
        set_rotation: function (a) {
          return 0;
        },
        get_scaleMode: function () {
          return this.__scaleMode;
        },
        set_scaleMode: function (a) {
          a != this.__scaleMode && ((this.__scaleMode = a), this.__resize());
          return a;
        },
        set_scaleX: function (a) {
          return 0;
        },
        set_scaleY: function (a) {
          return 0;
        },
        get_tabEnabled: function () {
          return !1;
        },
        get_tabIndex: function () {
          return -1;
        },
        set_transform: function (a) {
          return this.get_transform();
        },
        set_width: function (a) {
          return this.get_width();
        },
        set_x: function (a) {
          return 0;
        },
        set_y: function (a) {
          return 0;
        },
        __class__: Pg,
        __properties__: u(jb.prototype.__properties__, {
          set_color: 'set_color',
          set_scaleMode: 'set_scaleMode',
          get_scaleMode: 'get_scaleMode',
          get_quality: 'get_quality',
          get_fullScreenSourceRect: 'get_fullScreenSourceRect',
          get_frameRate: 'get_frameRate',
          set_focus: 'set_focus',
          get_focus: 'get_focus',
        }),
      });
      var kg = function (a) {
        sa.call(this);
        this.__stage = a;
        this.__height = 0;
        this.__projectionTransform = new Cj();
        this.__renderTransform = new Cj();
        this.__y = this.__x = this.__width = 0;
        this.visible = !0;
        0 < a.stageWidth &&
          0 < a.stageHeight &&
          this.__resize(a.stageWidth, a.stageHeight);
      };
      h['openfl.display.Stage3D'] = kg;
      kg.__name__ = 'openfl.display.Stage3D';
      kg.__super__ = sa;
      kg.prototype = u(sa.prototype, {
        __createContext: function () {
          var a = this.__stage,
            b = a.__renderer;
          if ('cairo' == b.__type || 'canvas' == b.__type)
            this.__dispatchError();
          else if ('opengl' == b.__type)
            ((this.context3D = new rb(a, a.context3D.__contextState, this)),
              this.__dispatchCreate());
          else if ('dom' == b.__type)
            if (null == a.context3D) {
              this.__canvas = window.document.createElement('canvas');
              this.__canvas.width = a.stageWidth;
              this.__canvas.height = a.stageHeight;
              var c = a.window.context.attributes,
                d =
                  Object.prototype.hasOwnProperty.call(c, 'background') &&
                  null == c.background,
                f = Object.prototype.hasOwnProperty.call(c, 'colorDepth')
                  ? c.colorDepth
                  : 32;
              c =
                Object.prototype.hasOwnProperty.call(c, 'antialiasing') &&
                0 < c.antialiasing;
              this.__webgl = ll.getContextWebGL(this.__canvas, {
                alpha: d || 16 < f,
                antialias: c,
                depth: !0,
                premultipliedAlpha: !0,
                stencil: !0,
                preserveDrawingBuffer: !1,
              });
              null != this.__webgl &&
                (null == gf.context &&
                  ((gf.context = this.__webgl),
                  (gf.type = 'webgl'),
                  (gf.version = 1)),
                (a.context3D = new rb(a)),
                a.context3D.configureBackBuffer(
                  a.window.__width,
                  a.window.__height,
                  0,
                  !0,
                  !0,
                  !0,
                ),
                a.context3D.present(),
                b.element.appendChild(this.__canvas),
                (this.__style = this.__canvas.style),
                this.__style.setProperty('position', 'absolute', null),
                this.__style.setProperty('top', '0', null),
                this.__style.setProperty('left', '0', null),
                this.__style.setProperty(
                  b.__transformOriginProperty,
                  '0 0 0',
                  null,
                ),
                this.__style.setProperty('z-index', '-1', null));
              null != a.context3D &&
                (this.context3D = new rb(a, a.context3D.__contextState, this));
              this.__dispatchCreate();
            } else this.__dispatchError();
        },
        __dispatchError: function () {
          this.__contextRequested = !1;
          this.dispatchEvent(
            new Vd('error', !1, !1, 'Context3D not available'),
          );
        },
        __dispatchCreate: function () {
          this.__contextRequested &&
            ((this.__contextRequested = !1),
            this.dispatchEvent(new za('context3DCreate')));
        },
        __lostContext: function () {
          this.__contextLost = !0;
          null != this.context3D &&
            (this.context3D.__dispose(), (this.__contextRequested = !0));
        },
        __resize: function (a, b) {
          if (a != this.__width || b != this.__height)
            (null != this.__canvas &&
              ((this.__canvas.width = a), (this.__canvas.height = b)),
              this.__projectionTransform.copyRawDataFrom(
                ra.toFloatVector(null, null, null, [
                  2 / (0 < a ? a : 1),
                  0,
                  0,
                  0,
                  0,
                  -2 / (0 < b ? b : 1),
                  0,
                  0,
                  0,
                  0,
                  -0.001,
                  0,
                  -1,
                  1,
                  0,
                  1,
                ]),
              ),
              this.__renderTransform.identity(),
              this.__renderTransform.appendTranslation(this.__x, this.__y, 0),
              this.__renderTransform.append(this.__projectionTransform),
              (this.__width = a),
              (this.__height = b));
        },
        __restoreContext: function () {
          this.__contextLost = !1;
          this.__createContext();
        },
        get_x: function () {
          return this.__x;
        },
        get_y: function () {
          return this.__y;
        },
        __class__: kg,
        __properties__: { get_y: 'get_y', get_x: 'get_x' },
      });
      var Eh = function (a, b, c, d, f, g, k, q) {
        null == q && (q = 0);
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = 1);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.__id = a;
        this.__matrix = new ua();
        0 != b && this.set_x(b);
        0 != c && this.set_y(c);
        1 != d && this.set_scaleX(d);
        1 != f && this.set_scaleY(f);
        0 != g && this.set_rotation(g);
        this.__dirty = !0;
        this.__length = 0;
        this.__originX = k;
        this.__originY = q;
        this.__alpha = 1;
        this.__blendMode = null;
        this.__visible = !0;
      };
      h['openfl.display.Tile'] = Eh;
      Eh.__name__ = 'openfl.display.Tile';
      Eh.prototype = {
        getBounds: function (a) {
          var b = new na();
          this.__findTileRect(b);
          var c = ua.__pool.get();
          if (null != a && a != this) {
            c.copyFrom(this.__getWorldTransform());
            var d = ua.__pool.get();
            d.copyFrom(a.__getWorldTransform());
            d.invert();
            c.concat(d);
            ua.__pool.release(d);
          } else c.identity();
          this.__getBounds(b, c);
          ua.__pool.release(c);
          return b;
        },
        __getBounds: function (a, b) {
          a.__transform(a, b);
        },
        __findTileRect: function (a) {
          if (null == this.get_tileset())
            if (null != this.parent) {
              var b = this.parent.__findTileset();
              null == b
                ? a.setTo(0, 0, 0, 0)
                : ((b = b.getRect(this.get_id())),
                  null == b ? a.setTo(0, 0, 0, 0) : a.copyFrom(b));
            } else a.setTo(0, 0, 0, 0);
          else a.copyFrom(this.get_tileset().getRect(this.get_id()));
          a.x = 0;
          a.y = 0;
        },
        __findTileset: function () {
          return null != this.get_tileset()
            ? this.get_tileset()
            : this.parent instanceof Fh
              ? this.parent.get_tileset()
              : null == this.parent
                ? null
                : this.parent.__findTileset();
        },
        __getWorldTransform: function () {
          var a = this.get_matrix().clone();
          null != this.parent && a.concat(this.parent.__getWorldTransform());
          return a;
        },
        __setRenderDirty: function () {
          this.__dirty ||
            ((this.__dirty = !0),
            null != this.parent && this.parent.__setRenderDirty());
        },
        get_alpha: function () {
          return this.__alpha;
        },
        set_alpha: function (a) {
          a != this.__alpha && ((this.__alpha = a), this.__setRenderDirty());
          return a;
        },
        get_colorTransform: function () {
          return this.__colorTransform;
        },
        get_height: function () {
          var a = na.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.height;
          na.__pool.release(a);
          return b;
        },
        set_height: function (a) {
          var b = na.__pool.get();
          this.__findTileRect(b);
          0 != b.height && this.set_scaleY(a / b.height);
          na.__pool.release(b);
          return a;
        },
        get_id: function () {
          return this.__id;
        },
        get_matrix: function () {
          return this.__matrix;
        },
        get_originX: function () {
          return this.__originX;
        },
        set_originX: function (a) {
          a != this.__originX &&
            ((this.__originX = a), this.__setRenderDirty());
          return a;
        },
        get_originY: function () {
          return this.__originY;
        },
        set_originY: function (a) {
          a != this.__originY &&
            ((this.__originY = a), this.__setRenderDirty());
          return a;
        },
        get_rotation: function () {
          if (null == this.__rotation)
            if (0 == this.__matrix.b && 0 == this.__matrix.c)
              ((this.__rotationSine = this.__rotation = 0),
                (this.__rotationCosine = 1));
            else {
              var a =
                Math.atan2(this.__matrix.d, this.__matrix.c) - Math.PI / 2;
              this.__rotation = (180 / Math.PI) * a;
              this.__rotationSine = Math.sin(a);
              this.__rotationCosine = Math.cos(a);
            }
          return this.__rotation;
        },
        set_rotation: function (a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = (Math.PI / 180) * a;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            b = this.get_scaleX();
            var c = this.get_scaleY();
            this.__matrix.a = this.__rotationCosine * b;
            this.__matrix.b = this.__rotationSine * b;
            this.__matrix.c = -this.__rotationSine * c;
            this.__matrix.d = this.__rotationCosine * c;
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleX: function () {
          null == this.__scaleX &&
            (0 == this.get_matrix().b
              ? (this.__scaleX = this.__matrix.a)
              : (this.__scaleX = Math.sqrt(
                  this.__matrix.a * this.__matrix.a +
                    this.__matrix.b * this.__matrix.b,
                )));
          return this.__scaleX;
        },
        set_scaleX: function (a) {
          if (a != this.__scaleX) {
            this.__scaleX = a;
            if (0 == this.__matrix.b) this.__matrix.a = a;
            else {
              this.get_rotation();
              var b = this.__rotationSine * a;
              this.__matrix.a = this.__rotationCosine * a;
              this.__matrix.b = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_scaleY: function () {
          null == this.__scaleY &&
            (this.__scaleY =
              0 == this.__matrix.c
                ? this.get_matrix().d
                : Math.sqrt(
                    this.__matrix.c * this.__matrix.c +
                      this.__matrix.d * this.__matrix.d,
                  ));
          return this.__scaleY;
        },
        set_scaleY: function (a) {
          if (a != this.__scaleY) {
            this.__scaleY = a;
            if (0 == this.__matrix.c) this.__matrix.d = a;
            else {
              this.get_rotation();
              var b = this.__rotationCosine * a;
              this.__matrix.c = -this.__rotationSine * a;
              this.__matrix.d = b;
            }
            this.__setRenderDirty();
          }
          return a;
        },
        get_shader: function () {
          return this.__shader;
        },
        get_tileset: function () {
          return this.__tileset;
        },
        set_tileset: function (a) {
          a != this.__tileset &&
            ((this.__tileset = a), this.__setRenderDirty());
          return a;
        },
        get_visible: function () {
          return this.__visible;
        },
        get_width: function () {
          var a = na.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.width;
          na.__pool.release(a);
          return b;
        },
        set_width: function (a) {
          var b = na.__pool.get();
          this.__findTileRect(b);
          0 != b.width && this.set_scaleX(a / b.width);
          na.__pool.release(b);
          return a;
        },
        get_x: function () {
          return this.__matrix.tx;
        },
        set_x: function (a) {
          a != this.__matrix.tx &&
            ((this.__matrix.tx = a), this.__setRenderDirty());
          return a;
        },
        get_y: function () {
          return this.__matrix.ty;
        },
        set_y: function (a) {
          a != this.__matrix.ty &&
            ((this.__matrix.ty = a), this.__setRenderDirty());
          return a;
        },
        __class__: Eh,
        __properties__: {
          set_y: 'set_y',
          get_y: 'get_y',
          set_x: 'set_x',
          get_x: 'get_x',
          set_width: 'set_width',
          get_width: 'get_width',
          get_visible: 'get_visible',
          set_tileset: 'set_tileset',
          get_tileset: 'get_tileset',
          get_shader: 'get_shader',
          set_scaleY: 'set_scaleY',
          get_scaleY: 'get_scaleY',
          set_scaleX: 'set_scaleX',
          get_scaleX: 'get_scaleX',
          set_rotation: 'set_rotation',
          get_rotation: 'get_rotation',
          set_originY: 'set_originY',
          get_originY: 'get_originY',
          set_originX: 'set_originX',
          get_originX: 'get_originX',
          get_matrix: 'get_matrix',
          get_id: 'get_id',
          set_height: 'set_height',
          get_height: 'get_height',
          get_colorTransform: 'get_colorTransform',
          set_alpha: 'set_alpha',
          get_alpha: 'get_alpha',
        },
      };
      var Gh = function (a, b, c, d, f, g, k) {
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 0);
        null == a && (a = 0);
        Eh.call(this, -1, a, b, c, d, f, g, k);
        this.__tiles = [];
        this.__length = 0;
      };
      h['openfl.display.TileContainer'] = Gh;
      Gh.__name__ = 'openfl.display.TileContainer';
      Gh.__interfaces__ = [Pk];
      Gh.__super__ = Eh;
      Gh.prototype = u(Eh.prototype, {
        getBounds: function (a) {
          for (var b = new na(), c, d = 0, f = this.__tiles; d < f.length; )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(a)),
              b.__expand(c.x, c.y, c.width, c.height));
          return b;
        },
        get_height: function () {
          for (
            var a = na.__pool.get(), b, c = 0, d = this.__tiles;
            c < d.length;

          )
            ((b = d[c]),
              ++c,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          c = a.height;
          na.__pool.release(a);
          return c;
        },
        set_height: function (a) {
          for (
            var b = na.__pool.get(), c, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(this)),
              b.__expand(c.x, c.y, c.width, c.height));
          0 != b.height && this.set_scaleY(a / b.height);
          na.__pool.release(b);
          return a;
        },
        get_width: function () {
          for (
            var a = na.__pool.get(), b, c = 0, d = this.__tiles;
            c < d.length;

          )
            ((b = d[c]),
              ++c,
              (b = b.getBounds(this)),
              a.__expand(b.x, b.y, b.width, b.height));
          this.__getBounds(a, this.get_matrix());
          c = a.width;
          na.__pool.release(a);
          return c;
        },
        set_width: function (a) {
          for (
            var b = na.__pool.get(), c, d = 0, f = this.__tiles;
            d < f.length;

          )
            ((c = f[d]),
              ++d,
              (c = c.getBounds(this)),
              b.__expand(c.x, c.y, c.width, c.height));
          0 != b.width && this.set_scaleX(a / b.width);
          na.__pool.release(b);
          return a;
        },
        __class__: Gh,
      });
      var Fh = function (a, b, c, d) {
        null == d && (d = !0);
        ca.call(this);
        this.__drawableType = 9;
        this.__tileset = c;
        this.smoothing = d;
        this.tileColorTransformEnabled =
          this.tileBlendModeEnabled =
          this.tileAlphaEnabled =
            !0;
        this.__group = new Gh();
        this.__group.set_tileset(c);
        this.__width = a;
        this.__height = b;
      };
      h['openfl.display.Tilemap'] = Fh;
      Fh.__name__ = 'openfl.display.Tilemap';
      Fh.__interfaces__ = [Pk];
      Fh.__super__ = ca;
      Fh.prototype = u(ca.prototype, {
        __enterFrame: function (a) {
          this.__group.__dirty &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (
            !g.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            q = k.a * k.d - k.b * k.c;
          c = 0 == q ? -k.tx : (1 / q) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          q = k.a * k.d - k.b * k.c;
          a = 0 == q ? -k.ty : (1 / q) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height
            ? (null == d || f || d.push(g), !0)
            : !1;
        },
        get_height: function () {
          return this.__height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          this.__height = a | 0;
          return this.__height * Math.abs(this.get_scaleY());
        },
        get_width: function () {
          return this.__width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          this.__width = a | 0;
          return this.__width * Math.abs(this.__scaleX);
        },
        __class__: Fh,
      });
      var wl = function (a, b) {
        this.__bitmapData = a;
        this.rectData = ra.toFloatVector(null);
        this.__data = [];
        if (null != b)
          for (a = 0; a < b.length; ) {
            var c = b[a];
            ++a;
            this.addRect(c);
          }
      };
      h['openfl.display.Tileset'] = wl;
      wl.__name__ = 'openfl.display.Tileset';
      wl.prototype = {
        addRect: function (a) {
          if (null == a) return -1;
          this.rectData.push(a.x);
          this.rectData.push(a.y);
          this.rectData.push(a.width);
          this.rectData.push(a.height);
          a = new Dj(a);
          a.__update(this.__bitmapData);
          this.__data.push(a);
          return this.__data.length - 1;
        },
        getRect: function (a) {
          return a < this.__data.length && 0 <= a
            ? new na(
                this.__data[a].x,
                this.__data[a].y,
                this.__data[a].width,
                this.__data[a].height,
              )
            : null;
        },
        __class__: wl,
      };
      var Dj = function (a) {
        null != a &&
          ((this.x = a.x | 0),
          (this.y = a.y | 0),
          (this.width = a.width | 0),
          (this.height = a.height | 0));
      };
      h['openfl.display.TileData'] = Dj;
      Dj.__name__ = 'openfl.display.TileData';
      Dj.prototype = {
        __update: function (a) {
          if (null != a) {
            var b = a.width;
            a = a.height;
            this.__uvX = this.x / b;
            this.__uvY = this.y / a;
            this.__uvWidth = (this.x + this.width) / b;
            this.__uvHeight = (this.y + this.height) / a;
          }
        },
        __class__: Dj,
      };
      var xl = function () {
        this.__totalFrames = this.__framesLoaded = 1;
        this.__currentLabels = [];
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1;
      };
      h['openfl.display.Timeline'] = xl;
      xl.__name__ = 'openfl.display.Timeline';
      xl.prototype = {
        enterFrame: function (a) {},
        __enterFrame: function (a) {
          if (this.__isPlaying) {
            a = this.__getNextFrame(a);
            if (this.__lastFrameScriptEval == a) return;
            if (null != this.__frameScripts) {
              if (a < this.__currentFrame) {
                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                this.__currentFrame = 1;
              }
              if (!this.__evaluateFrameScripts(a)) return;
            } else this.__currentFrame = a;
          }
          this.__updateSymbol(this.__currentFrame);
        },
        __evaluateFrameScripts: function (a) {
          if (null == this.__frameScripts) return !0;
          var b = this.__currentFrame;
          for (a += 1; b < a; ) {
            var c = b++;
            if (
              c != this.__lastFrameScriptEval &&
              ((this.__currentFrame = this.__lastFrameScriptEval = c),
              (this.__frameScripts.h.hasOwnProperty(c) &&
                (this.__updateSymbol(c),
                (0, this.__frameScripts.h[c])(this.__scope),
                this.__currentFrame != c)) ||
                !this.__isPlaying)
            )
              return !1;
          }
          return !0;
        },
        __getNextFrame: function (a) {
          null != this.frameRate
            ? ((this.__timeElapsed += a),
              (a =
                this.__currentFrame +
                Math.floor(this.__timeElapsed / this.__frameTime)),
              1 > a && (a = 1),
              a > this.__totalFrames &&
                (a = Math.floor((a - 1) % this.__totalFrames) + 1),
              (this.__timeElapsed %= this.__frameTime))
            : ((a = this.__currentFrame + 1),
              a > this.__totalFrames && (a = 1));
          return a;
        },
        __goto: function (a) {
          1 > a ? (a = 1) : a > this.__totalFrames && (a = this.__totalFrames);
          this.__lastFrameScriptEval = -1;
          this.__currentFrame = a;
          this.__updateSymbol(this.__currentFrame);
          this.__evaluateFrameScripts(this.__currentFrame);
        },
        __gotoAndStop: function (a, b) {
          this.__stop();
          this.__goto(this.__resolveFrameReference(a));
        },
        __stop: function () {
          this.__isPlaying = !1;
        },
        __resolveFrameReference: function (a) {
          if ('number' == typeof a && (a | 0) === a) return a;
          if ('string' == typeof a) {
            for (var b = 0, c = this.__currentLabels; b < c.length; ) {
              var d = c[b];
              ++b;
              if (d.name == a) return d.frame;
            }
            throw new Uf(
              'Error #2109: Frame label ' + a + ' not found in scene.',
            );
          }
          throw aa.thrown('Invalid type for frame ' + a.__name__);
        },
        __updateFrameLabel: function () {
          this.__currentFrameLabel = this.__currentLabel = null;
          for (var a = 0, b = this.__currentLabels; a < b.length; ) {
            var c = b[a];
            ++a;
            if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
            else if (c.frame == this.__currentFrame)
              this.__currentFrameLabel = this.__currentLabel = c.name;
            else break;
          }
        },
        __updateSymbol: function (a) {
          this.__currentFrame != this.__lastFrameUpdate &&
            (this.__updateFrameLabel(),
            this.enterFrame(a),
            (this.__lastFrameUpdate = this.__currentFrame));
        },
        __class__: xl,
      };
      var Ah = function (a, b) {
        Lg.call(this, a, b);
        this.stage = new Pg(
          this,
          Object.prototype.hasOwnProperty.call(b.context, 'background')
            ? b.context.background
            : 16777215,
        );
        if (Object.prototype.hasOwnProperty.call(b, 'parameters'))
          try {
            this.stage.get_loaderInfo().parameters = b.parameters;
          } catch (c) {
            Ua.lastError = c;
          }
        this.stage.__setLogicalSize(b.width, b.height);
        Object.prototype.hasOwnProperty.call(b, 'resizable') &&
          !b.resizable &&
          this.stage.set_scaleMode(3);
        a.addModule(this.stage);
      };
      h['openfl.display.Window'] = Ah;
      Ah.__name__ = 'openfl.display.Window';
      Ah.__super__ = Lg;
      Ah.prototype = u(Lg.prototype, {
        close: function () {
          Lg.prototype.close.call(this);
          this.onClose.canceled ||
            null == this.stage ||
            (this.application.removeModule(this.stage), (this.stage = null));
        },
        __class__: Ah,
      });
      var Bh = function () {};
      h['openfl.display._internal.CanvasBitmap'] = Bh;
      Bh.__name__ = 'openfl.display._internal.CanvasBitmap';
      Bh.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((C = b.__getAlpha(a.__worldAlpha)), 0 >= C)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              m = b.context;
              b.setTransform(a.__renderTransform, m);
              var c = a.opaqueBackground;
              m.fillStyle =
                'rgb(' +
                ((c >>> 16) & 255) +
                ',' +
                ((c >>> 8) & 255) +
                ',' +
                (c & 255) +
                ')';
              m.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((C = b.__getAlpha(a.__worldAlpha)), !(0 >= C))
            ) {
              var d = a.__graphics;
              if (null != d) {
                A.render(d, b);
                var f = d.__width,
                  g = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= f && 1 <= g) {
                  var k = d.__worldTransform;
                  m = b.context;
                  G = a.__scrollRect;
                  var q = a.__worldScale9Grid;
                  if (null == G || (0 < G.width && 0 < G.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    m.globalAlpha = C;
                    if (null != q && 0 == k.b && 0 == k.c) {
                      var p = b.__pixelRatio;
                      C = ua.__pool.get();
                      C.translate(k.tx, k.ty);
                      b.setTransform(C, m);
                      ua.__pool.release(C);
                      C = d.__bounds;
                      var l = d.__renderTransform.a / d.__bitmapScale,
                        h = d.__renderTransform.d / d.__bitmapScale,
                        n = l * k.a,
                        t = h * k.d;
                      k = Math.max(1, Math.round(q.x * l));
                      d = Math.round(q.y * h);
                      G = Math.max(
                        1,
                        Math.round((C.get_right() - q.get_right()) * l),
                      );
                      var w = Math.round((C.get_bottom() - q.get_bottom()) * h);
                      l = Math.round(q.width * l);
                      q = Math.round(q.height * h);
                      h = Math.round(k / p);
                      var r = Math.round(d / p),
                        x = Math.round(G / p);
                      p = Math.round(w / p);
                      n = C.width * n - h - x;
                      C = C.height * t - r - p;
                      b.applySmoothing(m, !1);
                      0 != l && 0 != q
                        ? (m.drawImage(c, 0, 0, k, d, 0, 0, h, r),
                          m.drawImage(c, k, 0, l, d, h, 0, n, r),
                          m.drawImage(c, k + l, 0, G, d, h + n, 0, x, r),
                          m.drawImage(c, 0, d, k, q, 0, r, h, C),
                          m.drawImage(c, k, d, l, q, h, r, n, C),
                          m.drawImage(c, k + l, d, G, q, h + n, r, x, C),
                          m.drawImage(c, 0, d + q, k, w, 0, r + C, h, p),
                          m.drawImage(c, k, d + q, l, w, h, r + C, n, p),
                          m.drawImage(
                            c,
                            k + l,
                            d + q,
                            G,
                            w,
                            h + n,
                            r + C,
                            x,
                            p,
                          ))
                        : 0 == l && 0 != q
                          ? ((g = h + n + x),
                            m.drawImage(c, 0, 0, f, d, 0, 0, g, r),
                            m.drawImage(c, 0, d, f, q, 0, r, g, C),
                            m.drawImage(c, 0, d + q, f, w, 0, r + C, g, p))
                          : 0 == q &&
                            0 != l &&
                            ((f = r + C + p),
                            m.drawImage(c, 0, 0, k, g, 0, 0, h, f),
                            m.drawImage(c, k, 0, l, g, h, 0, n, f),
                            m.drawImage(c, k + l, 0, G, g, h + n, 0, x, f));
                    } else (b.setTransform(k, m), m.drawImage(c, 0, 0, f, g));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            ((C = b.__getAlpha(a.__worldAlpha)),
            0 < C &&
              null != a.__bitmapData &&
              a.__bitmapData.__isValid &&
              a.__bitmapData.readable &&
              ((m = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a, !1),
              Na.convertToCanvas(a.__bitmapData.image),
              (m.globalAlpha = C),
              (G = a.__scrollRect),
              b.setTransform(a.__renderTransform, m),
              (b.__allowSmoothing && a.smoothing) ||
                (m.imageSmoothingEnabled = !1),
              null == G
                ? m.drawImage(
                    a.__bitmapData.image.get_src(),
                    0,
                    0,
                    a.__bitmapData.image.width,
                    a.__bitmapData.image.height,
                  )
                : m.drawImage(
                    a.__bitmapData.image.get_src(),
                    G.x,
                    G.y,
                    G.width,
                    G.height,
                    G.x,
                    G.y,
                    G.width,
                    G.height,
                  ),
              (b.__allowSmoothing && a.smoothing) ||
                (m.imageSmoothingEnabled = !0),
              b.__popMaskObject(a, !1)));
        } else if (((c = a.__cacheBitmap), c.__renderable)) {
          var C = b.__getAlpha(c.__worldAlpha);
          if (
            0 < C &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
          ) {
            var m = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            Na.convertToCanvas(c.__bitmapData.image);
            m.globalAlpha = C;
            var G = c.__scrollRect;
            b.setTransform(c.__renderTransform, m);
            (b.__allowSmoothing && c.smoothing) ||
              (m.imageSmoothingEnabled = !1);
            null == G
              ? m.drawImage(
                  c.__bitmapData.image.get_src(),
                  0,
                  0,
                  c.__bitmapData.image.width,
                  c.__bitmapData.image.height,
                )
              : m.drawImage(
                  c.__bitmapData.image.get_src(),
                  G.x,
                  G.y,
                  G.width,
                  G.height,
                  G.x,
                  G.y,
                  G.width,
                  G.height,
                );
            (b.__allowSmoothing && c.smoothing) ||
              (m.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1);
          }
        }
        b.__renderEvent(a);
      };
      Bh.renderDrawableMask = function (a, b) {
        b.context.rect(0, 0, a.get_width(), a.get_height());
      };
      var hj = function () {};
      h['openfl.display._internal.CanvasBitmapData'] = hj;
      hj.__name__ = 'openfl.display._internal.CanvasBitmapData';
      hj.renderDrawable = function (a, b) {
        if (a.readable) {
          var c = a.image;
          c.type == wc.DATA && Na.convertToCanvas(c);
          var d = b.context;
          d.globalAlpha = 1;
          b.setTransform(a.__renderTransform, d);
          d.drawImage(c.get_src(), 0, 0, c.width, c.height);
        }
      };
      hj.renderDrawableMask = function (a, b) {};
      var fg = function () {};
      h['openfl.display._internal.CanvasDisplayObject'] = fg;
      fg.__name__ = 'openfl.display._internal.CanvasDisplayObject';
      fg.renderDrawable = function (a, b) {
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, !1),
            null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          ) {
            var c = a.__cacheBitmap;
            if (c.__renderable) {
              var d = b.__getAlpha(c.__worldAlpha);
              if (
                0 < d &&
                null != c.__bitmapData &&
                c.__bitmapData.__isValid &&
                c.__bitmapData.readable
              ) {
                var f = b.context;
                b.__setBlendMode(c.__worldBlendMode);
                b.__pushMaskObject(c, !1);
                Na.convertToCanvas(c.__bitmapData.image);
                f.globalAlpha = d;
                var g = c.__scrollRect;
                b.setTransform(c.__renderTransform, f);
                (b.__allowSmoothing && c.smoothing) ||
                  (f.imageSmoothingEnabled = !1);
                null == g
                  ? f.drawImage(
                      c.__bitmapData.image.get_src(),
                      0,
                      0,
                      c.__bitmapData.image.width,
                      c.__bitmapData.image.height,
                    )
                  : f.drawImage(
                      c.__bitmapData.image.get_src(),
                      g.x,
                      g.y,
                      g.width,
                      g.height,
                      g.x,
                      g.y,
                      g.width,
                      g.height,
                    );
                (b.__allowSmoothing && c.smoothing) ||
                  (f.imageSmoothingEnabled = !0);
                b.__popMaskObject(c, !1);
              }
            }
          } else if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((d = b.__getAlpha(a.__worldAlpha)),
              0 >= d ||
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (f = b.context),
                  b.setTransform(a.__renderTransform, f),
                  (c = a.opaqueBackground),
                  (f.fillStyle =
                    'rgb(' +
                    ((c >>> 16) & 255) +
                    ',' +
                    ((c >>> 8) & 255) +
                    ',' +
                    (c & 255) +
                    ')'),
                  f.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null == a.__graphics ||
                  !a.__renderable ||
                  ((d = b.__getAlpha(a.__worldAlpha)), 0 >= d)))
            )
          ) {
            var k = a.__graphics;
            if (null != k) {
              A.render(k, b);
              var q = k.__width,
                p = k.__height;
              c = k.__canvas;
              if (null != c && k.__visible && 1 <= q && 1 <= p) {
                var l = k.__worldTransform;
                f = b.context;
                g = a.__scrollRect;
                var h = a.__worldScale9Grid;
                if (null == g || (0 < g.width && 0 < g.height)) {
                  b.__setBlendMode(a.__worldBlendMode);
                  b.__pushMaskObject(a);
                  f.globalAlpha = d;
                  if (null != h && 0 == l.b && 0 == l.c) {
                    var n = b.__pixelRatio;
                    d = ua.__pool.get();
                    d.translate(l.tx, l.ty);
                    b.setTransform(d, f);
                    ua.__pool.release(d);
                    d = k.__bounds;
                    var t = k.__renderTransform.a / k.__bitmapScale,
                      w = k.__renderTransform.d / k.__bitmapScale,
                      r = t * l.a,
                      x = w * l.d;
                    l = Math.max(1, Math.round(h.x * t));
                    k = Math.round(h.y * w);
                    g = Math.max(
                      1,
                      Math.round((d.get_right() - h.get_right()) * t),
                    );
                    var C = Math.round((d.get_bottom() - h.get_bottom()) * w);
                    t = Math.round(h.width * t);
                    h = Math.round(h.height * w);
                    w = Math.round(l / n);
                    var m = Math.round(k / n),
                      G = Math.round(g / n);
                    n = Math.round(C / n);
                    r = d.width * r - w - G;
                    d = d.height * x - m - n;
                    b.applySmoothing(f, !1);
                    0 != t && 0 != h
                      ? (f.drawImage(c, 0, 0, l, k, 0, 0, w, m),
                        f.drawImage(c, l, 0, t, k, w, 0, r, m),
                        f.drawImage(c, l + t, 0, g, k, w + r, 0, G, m),
                        f.drawImage(c, 0, k, l, h, 0, m, w, d),
                        f.drawImage(c, l, k, t, h, w, m, r, d),
                        f.drawImage(c, l + t, k, g, h, w + r, m, G, d),
                        f.drawImage(c, 0, k + h, l, C, 0, m + d, w, n),
                        f.drawImage(c, l, k + h, t, C, w, m + d, r, n),
                        f.drawImage(c, l + t, k + h, g, C, w + r, m + d, G, n))
                      : 0 == t && 0 != h
                        ? ((p = w + r + G),
                          f.drawImage(c, 0, 0, q, k, 0, 0, p, m),
                          f.drawImage(c, 0, k, q, h, 0, m, p, d),
                          f.drawImage(c, 0, k + h, q, C, 0, m + d, p, n))
                        : 0 == h &&
                          0 != t &&
                          ((q = m + d + n),
                          f.drawImage(c, 0, 0, l, p, 0, 0, w, q),
                          f.drawImage(c, l, 0, t, p, w, 0, r, q),
                          f.drawImage(c, l + t, 0, g, p, w + r, 0, G, q));
                  } else (b.setTransform(l, f), f.drawImage(c, 0, 0, q, p));
                  b.__popMaskObject(a);
                }
              }
            }
          }
        b.__renderEvent(a);
      };
      fg.renderDrawableMask = function (a, b) {
        null != a.__graphics && A.renderMask(a.__graphics, b);
      };
      var ij = function () {};
      h['openfl.display._internal.CanvasDisplayObjectContainer'] = ij;
      ij.__name__ = 'openfl.display._internal.CanvasDisplayObjectContainer';
      ij.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          !(
            !a.__renderable ||
            0 >= a.__worldAlpha ||
            (null != a.get_mask() &&
              (0 >= a.get_mask().get_width() || 0 >= a.get_mask().get_height()))
          ) &&
          (fg.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length; ) {
              var f = d[c];
              ++c;
              b.__renderDrawable(f);
              f.__renderDirty = !1;
            }
            a.__renderDirty = !1;
          } else
            for (c = 0, d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f));
          b.__popMaskObject(a);
        }
      };
      ij.renderDrawableMask = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && A.renderMask(a.__graphics, b);
        c = 0;
        for (a = a.__children; c < a.length; )
          ((d = a[c]), ++c, b.__renderDrawableMask(d));
      };
      var ud = function () {
        null == ud.empty
          ? ((this.types = []),
            (this.b = []),
            (this.i = []),
            (this.f = []),
            (this.o = []),
            (this.ff = []),
            (this.ii = []),
            (this.copyOnWrite = !0))
          : this.clear();
      };
      h['openfl.display._internal.DrawCommandBuffer'] = ud;
      ud.__name__ = 'openfl.display._internal.DrawCommandBuffer';
      ud.prototype = {
        beginBitmapFill: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(Y.BEGIN_BITMAP_FILL);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        beginFill: function (a, b) {
          this.prepareWrite();
          this.types.push(Y.BEGIN_FILL);
          this.i.push(a);
          this.f.push(b);
        },
        beginGradientFill: function (a, b, c, d, f, g, k, q) {
          this.prepareWrite();
          this.types.push(Y.BEGIN_GRADIENT_FILL);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(f);
          this.o.push(g);
          this.o.push(k);
          this.f.push(q);
        },
        beginShaderFill: function (a) {
          this.prepareWrite();
          this.types.push(Y.BEGIN_SHADER_FILL);
          this.o.push(a);
        },
        clear: function () {
          this.types = ud.empty.types;
          this.b = ud.empty.b;
          this.i = ud.empty.i;
          this.f = ud.empty.f;
          this.o = ud.empty.o;
          this.ff = ud.empty.ff;
          this.ii = ud.empty.ii;
          this.copyOnWrite = !0;
        },
        cubicCurveTo: function (a, b, c, d, f, g) {
          this.prepareWrite();
          this.types.push(Y.CUBIC_CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(f);
          this.f.push(g);
        },
        curveTo: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(Y.CURVE_TO);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawCircle: function (a, b, c) {
          this.prepareWrite();
          this.types.push(Y.DRAW_CIRCLE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
        },
        drawEllipse: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(Y.DRAW_ELLIPSE);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawQuads: function (a, b, c) {
          this.prepareWrite();
          this.types.push(Y.DRAW_QUADS);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
        },
        drawRect: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(Y.DRAW_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
        },
        drawRoundRect: function (a, b, c, d, f, g) {
          this.prepareWrite();
          this.types.push(Y.DRAW_ROUND_RECT);
          this.f.push(a);
          this.f.push(b);
          this.f.push(c);
          this.f.push(d);
          this.f.push(f);
          this.o.push(g);
        },
        drawTriangles: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(Y.DRAW_TRIANGLES);
          this.o.push(a);
          this.o.push(b);
          this.o.push(c);
          this.o.push(d);
        },
        endFill: function () {
          this.prepareWrite();
          this.types.push(Y.END_FILL);
        },
        lineBitmapStyle: function (a, b, c, d) {
          this.prepareWrite();
          this.types.push(Y.LINE_BITMAP_STYLE);
          this.o.push(a);
          this.o.push(b);
          this.b.push(c);
          this.b.push(d);
        },
        lineGradientStyle: function (a, b, c, d, f, g, k, q) {
          this.prepareWrite();
          this.types.push(Y.LINE_GRADIENT_STYLE);
          this.o.push(a);
          this.ii.push(b);
          this.ff.push(c);
          this.ii.push(d);
          this.o.push(f);
          this.o.push(g);
          this.o.push(k);
          this.f.push(q);
        },
        lineStyle: function (a, b, c, d, f, g, k, q) {
          this.prepareWrite();
          this.types.push(Y.LINE_STYLE);
          this.o.push(a);
          this.i.push(b);
          this.f.push(c);
          this.b.push(d);
          this.o.push(f);
          this.o.push(g);
          this.o.push(k);
          this.f.push(q);
        },
        lineTo: function (a, b) {
          this.prepareWrite();
          this.types.push(Y.LINE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        moveTo: function (a, b) {
          this.prepareWrite();
          this.types.push(Y.MOVE_TO);
          this.f.push(a);
          this.f.push(b);
        },
        prepareWrite: function () {
          this.copyOnWrite &&
            ((this.types = this.types.slice()),
            (this.b = this.b.slice()),
            (this.i = this.i.slice()),
            (this.f = this.f.slice()),
            (this.o = this.o.slice()),
            (this.ff = this.ff.slice()),
            (this.ii = this.ii.slice()),
            (this.copyOnWrite = !1));
        },
        windingEvenOdd: function () {
          this.prepareWrite();
          this.types.push(Y.WINDING_EVEN_ODD);
        },
        windingNonZero: function () {
          this.prepareWrite();
          this.types.push(Y.WINDING_NON_ZERO);
        },
        get_length: function () {
          return this.types.length;
        },
        __class__: ud,
        __properties__: { get_length: 'get_length' },
      };
      var A = function () {};
      h['openfl.display._internal.CanvasGraphics'] = A;
      A.__name__ = 'openfl.display._internal.CanvasGraphics';
      A.closePath = function (a) {
        null == a && (a = !1);
        null != A.context.strokeStyle &&
          (a || A.context.closePath(),
          A.context.stroke(),
          a && A.context.closePath(),
          A.context.beginPath());
      };
      A.createBitmapFill = function (a, b, c) {
        Na.convertToCanvas(a.image);
        A.setSmoothing(c);
        return A.context.createPattern(
          a.image.get_src(),
          b ? 'repeat' : 'no-repeat',
        );
      };
      A.createGradientPattern = function (a, b, c, d, f, g, k, q) {
        k = !1;
        null == f && ((f = ua.__pool.get()), f.identity(), (k = !0));
        switch (a) {
          case 0:
            if (0 == g) {
              a = A.context.createLinearGradient(-819.2, 0, 819.2, 0);
              A.pendingMatrix = f.clone();
              A.inversePendingMatrix = f.clone();
              A.inversePendingMatrix.invert();
              for (var p = 0, l = b.length; p < l; ) {
                var h = p++;
                g = d[h] / 255;
                0 > g ? (g = 0) : 1 < g && (g = 1);
                a.addColorStop(g, A.getRGBA(b[h], c[h]));
              }
              k && ua.__pool.release(f);
              return a;
            }
            a = 819.2 * ((0 == g ? 1 : 25) - 1);
            k = window.document.createElement('canvas');
            q = k.getContext('2d');
            var n = A.getDimensions(f);
            k.width = A.context.canvas.width;
            k.height = A.context.canvas.height;
            a = A.context.createLinearGradient(-819.2 - a, 0, 819.2 + a, 0);
            if (1 == g)
              for (var t = 0, w = 0.04; 1 > t; ) {
                p = 0;
                for (l = b.length; p < l; )
                  ((h = p++),
                    (g = d[h] / 255),
                    (g = t + g * w),
                    0 > g ? (g = 0) : 1 < g && (g = 1),
                    a.addColorStop(g, A.getRGBA(b[h], c[h])));
                t += w;
                for (p = b.length - 1; 0 <= p; )
                  ((g = d[p] / 255),
                    (g = t + (1 - g) * w),
                    0 > g ? (g = 0) : 1 < g && (g = 1),
                    a.addColorStop(g, A.getRGBA(b[p], c[p])),
                    --p);
                t += w;
              }
            else if (2 == g)
              for (t = 0, w = 0.04; 1 > t; ) {
                p = 0;
                for (l = b.length; p < l; )
                  ((h = p++),
                    (g = d[h] / 255),
                    (g = t + g * w),
                    0 > g ? (g = 0) : 1 < g && (g = 0.999),
                    a.addColorStop(g, A.getRGBA(b[h], c[h])));
                g = t + 0.001;
                0 > g ? (g = 0) : 1 < g && (g = 1);
                a.addColorStop(
                  g - 0.001,
                  A.getRGBA(b[b.length - 1], c[c.length - 1]),
                );
                a.addColorStop(g, A.getRGBA(b[0], c[0]));
                t += w;
              }
            A.pendingMatrix = new ua();
            A.pendingMatrix.tx = f.tx - n.width / 2;
            A.pendingMatrix.ty = f.ty - n.height / 2;
            A.inversePendingMatrix = A.pendingMatrix.clone();
            A.inversePendingMatrix.invert();
            b = new Path2D();
            b.rect(0, 0, k.width, k.height);
            b.closePath();
            f = new DOMMatrix([f.a, f.b, f.c, f.d, f.tx, f.ty]);
            c = f.inverse();
            d = new Path2D();
            d.addPath(b, c);
            q.fillStyle = a;
            q.setTransform(f);
            q.fill(d);
            return A.context.createPattern(k, 'no-repeat');
          case 1:
            1 < q ? (q = 1) : -1 > q && (q = -1);
            a = A.context.createRadialGradient(819.2 * q, 0, 0, 0, 0, 819.2);
            A.pendingMatrix = f.clone();
            A.inversePendingMatrix = f.clone();
            A.inversePendingMatrix.invert();
            p = 0;
            for (l = b.length; p < l; )
              ((h = p++),
                (g = d[h] / 255),
                0 > g ? (g = 0) : 1 < g && (g = 1),
                a.addColorStop(g, A.getRGBA(b[h], c[h])));
            k && ua.__pool.release(f);
            return a;
        }
      };
      A.getRGBA = function (a, b) {
        var c = (a & 16711680) >>> 16,
          d = (a & 65280) >>> 8;
        a &= 255;
        return (
          'rgba(' +
          (null == c ? 'null' : I.string(db.toFloat(c))) +
          ', ' +
          (null == d ? 'null' : I.string(db.toFloat(d))) +
          ', ' +
          (null == a ? 'null' : I.string(db.toFloat(a))) +
          ', ' +
          b +
          ')'
        );
      };
      A.getDimensions = function (a) {
        var b = Math.cos(Math.atan2(a.c, a.a)),
          c = (a.a / b) * 1638.4;
        a = (a.d / b) * 1638.4;
        0 == c && 0 == a && (c = a = 819.2);
        return { width: c, height: a };
      };
      A.createTempPatternCanvas = function (a, b, c, d) {
        var f = window.document.createElement('canvas'),
          g = f.getContext('2d');
        f.width = c;
        f.height = d;
        a = a.image.get_src();
        g.fillStyle = g.createPattern(a, b ? 'repeat' : 'no-repeat');
        g.beginPath();
        g.moveTo(0, 0);
        g.lineTo(0, d);
        g.lineTo(c, d);
        g.lineTo(c, 0);
        g.lineTo(0, 0);
        g.closePath();
        A.hitTesting || g.fill(A.windingRule);
        return f;
      };
      A.drawRoundRect = function (a, b, c, d, f, g) {
        null == g && (g = f);
        f *= 0.5;
        g *= 0.5;
        f > c / 2 && (f = c / 2);
        g > d / 2 && (g = d / 2);
        c = a + c;
        d = b + d;
        var k = -f + 0.7071067811865476 * f,
          q = -f + 0.41421356237309503 * f,
          p = -g + 0.7071067811865476 * g,
          l = -g + 0.41421356237309503 * g;
        A.context.moveTo(c, d - g);
        A.context.quadraticCurveTo(c, d + l, c + k, d + p);
        A.context.quadraticCurveTo(c + q, d, c - f, d);
        A.context.lineTo(a + f, d);
        A.context.quadraticCurveTo(a - q, d, a - k, d + p);
        A.context.quadraticCurveTo(a, d + l, a, d - g);
        A.context.lineTo(a, b + g);
        A.context.quadraticCurveTo(a, b - l, a - k, b - p);
        A.context.quadraticCurveTo(a - q, b, a + f, b);
        A.context.lineTo(c - f, b);
        A.context.quadraticCurveTo(c + q, b, c + k, b - p);
        A.context.quadraticCurveTo(c, b - l, c, b + g);
        A.context.lineTo(c, d - g);
      };
      A.endFill = function () {
        A.context.beginPath();
        A.playCommands(A.fillCommands, !1);
        A.fillCommands.clear();
      };
      A.endStroke = function () {
        A.context.beginPath();
        A.playCommands(A.strokeCommands, !0);
        A.context.closePath();
        A.strokeCommands.clear();
      };
      A.hitTest = function (a, b, c) {
        A.bounds = a.__bounds;
        A.graphics = a;
        if (
          0 == a.__commands.get_length() ||
          null == A.bounds ||
          0 >= A.bounds.width ||
          0 >= A.bounds.height
        )
          return ((A.graphics = null), !1);
        A.hitTesting = !0;
        var d = a.__renderTransform,
          f = b * d.b + c * d.d + d.ty;
        b =
          b * d.a +
          c * d.c +
          d.tx -
          (A.bounds.x * d.a + A.bounds.y * d.c + d.tx);
        c = f - (A.bounds.x * d.b + A.bounds.y * d.d + d.ty);
        f = a.__canvas;
        var g = a.__context;
        a.__canvas = A.hitTestCanvas;
        a.__context = A.hitTestContext;
        A.context = a.__context;
        A.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
        A.fillCommands.clear();
        A.strokeCommands.clear();
        A.hasFill = !1;
        A.hasStroke = !1;
        A.bitmapFill = null;
        A.bitmapRepeat = !1;
        A.windingRule = 'evenodd';
        d = new Be(a.__commands);
        for (var k = 0, q = a.__commands.types; k < q.length; ) {
          var p = q[k];
          ++k;
          switch (p._hx_index) {
            case 0:
            case 1:
            case 2:
            case 3:
              A.endFill();
              if (A.hasFill && A.context.isPointInPath(b, c, A.windingRule))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = g),
                  (A.graphics = null),
                  !0
                );
              A.endStroke();
              if (A.hasStroke && A.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = g),
                  (A.graphics = null),
                  !0
                );
              if (p == Y.BEGIN_BITMAP_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = Y.BEGIN_BITMAP_FILL;
                p = d;
                A.fillCommands.beginBitmapFill(
                  p.buffer.o[p.oPos],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.b[p.bPos],
                  p.buffer.b[p.bPos + 1],
                );
                A.strokeCommands.beginBitmapFill(
                  p.buffer.o[p.oPos],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.b[p.bPos],
                  p.buffer.b[p.bPos + 1],
                );
              } else if (p == Y.BEGIN_GRADIENT_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = Y.BEGIN_GRADIENT_FILL;
                p = d;
                A.fillCommands.beginGradientFill(
                  p.buffer.o[p.oPos],
                  p.buffer.ii[p.iiPos],
                  p.buffer.ff[p.ffPos],
                  p.buffer.ii[p.iiPos + 1],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.o[p.oPos + 2],
                  p.buffer.o[p.oPos + 3],
                  p.buffer.f[p.fPos],
                );
                A.strokeCommands.beginGradientFill(
                  p.buffer.o[p.oPos],
                  p.buffer.ii[p.iiPos],
                  p.buffer.ff[p.ffPos],
                  p.buffer.ii[p.iiPos + 1],
                  p.buffer.o[p.oPos + 1],
                  p.buffer.o[p.oPos + 2],
                  p.buffer.o[p.oPos + 3],
                  p.buffer.f[p.fPos],
                );
              } else if (p == Y.BEGIN_SHADER_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = Y.BEGIN_SHADER_FILL;
                p = d;
                A.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                A.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
              } else {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1;
                }
                d.prev = Y.BEGIN_FILL;
                p = d;
                A.fillCommands.beginFill(p.buffer.i[p.iPos], 1);
                A.strokeCommands.beginFill(p.buffer.i[p.iPos], 1);
              }
              break;
            case 4:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.CUBIC_CURVE_TO;
              p = d;
              A.fillCommands.cubicCurveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.f[p.fPos + 5],
              );
              A.strokeCommands.cubicCurveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.f[p.fPos + 5],
              );
              break;
            case 5:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.CURVE_TO;
              p = d;
              A.fillCommands.curveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              A.strokeCommands.curveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 6:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.DRAW_CIRCLE;
              p = d;
              A.fillCommands.drawCircle(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
              );
              A.strokeCommands.drawCircle(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
              );
              break;
            case 7:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.DRAW_ELLIPSE;
              p = d;
              A.fillCommands.drawEllipse(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              A.strokeCommands.drawEllipse(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 9:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.DRAW_RECT;
              p = d;
              A.fillCommands.drawRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              A.strokeCommands.drawRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
              );
              break;
            case 10:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.DRAW_ROUND_RECT;
              p = d;
              A.fillCommands.drawRoundRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.o[p.oPos],
              );
              A.strokeCommands.drawRoundRect(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
                p.buffer.f[p.fPos + 2],
                p.buffer.f[p.fPos + 3],
                p.buffer.f[p.fPos + 4],
                p.buffer.o[p.oPos],
              );
              break;
            case 13:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.END_FILL;
              A.endFill();
              if (A.hasFill && A.context.isPointInPath(b, c, A.windingRule))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = g),
                  (A.graphics = null),
                  !0
                );
              A.endStroke();
              if (A.hasStroke && A.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = g),
                  (A.graphics = null),
                  !0
                );
              A.hasFill = !1;
              A.bitmapFill = null;
              break;
            case 14:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.LINE_BITMAP_STYLE;
              p = d;
              A.strokeCommands.lineBitmapStyle(
                p.buffer.o[p.oPos],
                p.buffer.o[p.oPos + 1],
                p.buffer.b[p.bPos],
                p.buffer.b[p.bPos + 1],
              );
              break;
            case 15:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.LINE_GRADIENT_STYLE;
              p = d;
              A.strokeCommands.lineGradientStyle(
                p.buffer.o[p.oPos],
                p.buffer.ii[p.iiPos],
                p.buffer.ff[p.ffPos],
                p.buffer.ii[p.iiPos + 1],
                p.buffer.o[p.oPos + 1],
                p.buffer.o[p.oPos + 2],
                p.buffer.o[p.oPos + 3],
                p.buffer.f[p.fPos],
              );
              break;
            case 16:
              A.endStroke();
              if (A.hasStroke && A.context.isPointInStroke(b, c))
                return (
                  d.destroy(),
                  (a.__canvas = f),
                  (a.__context = g),
                  (A.graphics = null),
                  !0
                );
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.LINE_STYLE;
              p = d;
              A.strokeCommands.lineStyle(
                p.buffer.o[p.oPos],
                p.buffer.i[p.iPos],
                1,
                p.buffer.b[p.bPos],
                p.buffer.o[p.oPos + 1],
                p.buffer.o[p.oPos + 2],
                p.buffer.o[p.oPos + 3],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 17:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.LINE_TO;
              p = d;
              A.fillCommands.lineTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1]);
              A.strokeCommands.lineTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 18:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = Y.MOVE_TO;
              p = d;
              A.fillCommands.moveTo(p.buffer.f[p.fPos], p.buffer.f[p.fPos + 1]);
              A.strokeCommands.moveTo(
                p.buffer.f[p.fPos],
                p.buffer.f[p.fPos + 1],
              );
              break;
            case 21:
              A.windingRule = 'evenodd';
              break;
            case 22:
              A.windingRule = 'nonzero';
              break;
            default:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1;
              }
              d.prev = p;
          }
        }
        k = !1;
        0 < A.fillCommands.get_length() && A.endFill();
        A.hasFill && A.context.isPointInPath(b, c, A.windingRule) && (k = !0);
        0 < A.strokeCommands.get_length() && A.endStroke();
        A.hasStroke && A.context.isPointInStroke(b, c) && (k = !0);
        d.destroy();
        a.__canvas = f;
        a.__context = g;
        A.graphics = null;
        return k;
      };
      A.normalizeUVT = function (a, b) {
        null == b && (b = !1);
        for (
          var c = -Infinity, d, f = a.get_length(), g = 1, k = f + 1;
          g < k;

        )
          ((d = g++),
            (b && 0 == d % 3) || ((d = a.get(d - 1)), c < d && (c = d)));
        if (!b) return { max: c, uvt: a };
        var q = ra.toFloatVector(null);
        g = 1;
        for (k = f + 1; g < k; )
          ((d = g++), (b && 0 == d % 3) || q.push(a.get(d - 1)));
        return { max: c, uvt: q };
      };
      A.playCommands = function (a, b) {
        null == b && (b = !1);
        A.bounds = A.graphics.__bounds;
        var c = A.bounds.x,
          d = A.bounds.y,
          f = 0,
          g = 0,
          k = !1,
          q = 0,
          p = 0,
          l = !1;
        A.windingRule = 'evenodd';
        A.setSmoothing(!0);
        var h = !1,
          n = new Be(a),
          t,
          w,
          r,
          x = null,
          C = null,
          m = 0,
          G = a.types;
        a: for (; m < G.length; ) {
          var y = G[m];
          ++m;
          switch (y._hx_index) {
            case 0:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.BEGIN_BITMAP_FILL;
              var N = n;
              A.bitmapFill = N.buffer.o[N.oPos];
              if (N.buffer.o[N.oPos].readable)
                A.context.fillStyle = A.createBitmapFill(
                  N.buffer.o[N.oPos],
                  N.buffer.b[N.bPos],
                  N.buffer.b[N.bPos + 1],
                );
              else {
                var u = P.hex(0, 6);
                A.context.fillStyle = '#' + u;
              }
              A.hasFill = !0;
              null != N.buffer.o[N.oPos + 1]
                ? ((A.pendingMatrix = N.buffer.o[N.oPos + 1]),
                  (A.inversePendingMatrix = N.buffer.o[N.oPos + 1].clone()),
                  A.inversePendingMatrix.invert())
                : ((A.pendingMatrix = null), (A.inversePendingMatrix = null));
              break;
            case 1:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.BEGIN_FILL;
              var L = n;
              if (0.005 > L.buffer.f[L.fPos]) A.hasFill = !1;
              else {
                if (1 == L.buffer.f[L.fPos]) {
                  var v = P.hex(L.buffer.i[L.iPos] & 16777215, 6);
                  A.context.fillStyle = '#' + v;
                } else {
                  var E = (L.buffer.i[L.iPos] & 16711680) >>> 16;
                  var D = (L.buffer.i[L.iPos] & 65280) >>> 8;
                  var wa = L.buffer.i[L.iPos] & 255;
                  A.context.fillStyle =
                    'rgba(' +
                    E +
                    ', ' +
                    D +
                    ', ' +
                    wa +
                    ', ' +
                    L.buffer.f[L.fPos] +
                    ')';
                }
                A.bitmapFill = null;
                A.setSmoothing(!0);
                A.hasFill = !0;
              }
              break;
            case 2:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.BEGIN_GRADIENT_FILL;
              var J = n;
              A.context.fillStyle = A.createGradientPattern(
                J.buffer.o[J.oPos],
                J.buffer.ii[J.iiPos],
                J.buffer.ff[J.ffPos],
                J.buffer.ii[J.iiPos + 1],
                J.buffer.o[J.oPos + 1],
                J.buffer.o[J.oPos + 2],
                J.buffer.o[J.oPos + 3],
                J.buffer.f[J.fPos],
              );
              A.bitmapFill = null;
              A.setSmoothing(!0);
              A.hasFill = !0;
              break;
            case 3:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.BEGIN_SHADER_FILL;
              var I = n,
                Ta = I.buffer.o[I.oPos];
              if (0 < Ta.inputCount) {
                A.bitmapFill = Ta.inputs[0];
                if (A.bitmapFill.readable)
                  A.context.fillStyle = A.createBitmapFill(
                    A.bitmapFill,
                    0 != Ta.inputWrap[0],
                    5 != Ta.inputFilter[0],
                  );
                else {
                  var M = P.hex(0, 6);
                  A.context.fillStyle = '#' + M;
                }
                A.hasFill = !0;
                A.pendingMatrix = null;
                A.inversePendingMatrix = null;
              }
              break;
            case 4:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.CUBIC_CURVE_TO;
              var ab = n;
              h = !0;
              A.context.bezierCurveTo(
                ab.buffer.f[ab.fPos] - c,
                ab.buffer.f[ab.fPos + 1] - d,
                ab.buffer.f[ab.fPos + 2] - c,
                ab.buffer.f[ab.fPos + 3] - d,
                ab.buffer.f[ab.fPos + 4] - c,
                ab.buffer.f[ab.fPos + 5] - d,
              );
              f = ab.buffer.f[ab.fPos + 4];
              g = ab.buffer.f[ab.fPos + 5];
              break;
            case 5:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.CURVE_TO;
              var z = n;
              h = !0;
              A.context.quadraticCurveTo(
                z.buffer.f[z.fPos] - c,
                z.buffer.f[z.fPos + 1] - d,
                z.buffer.f[z.fPos + 2] - c,
                z.buffer.f[z.fPos + 3] - d,
              );
              f = z.buffer.f[z.fPos + 2];
              g = z.buffer.f[z.fPos + 3];
              break;
            case 6:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.DRAW_CIRCLE;
              var qa = n;
              h = !0;
              A.context.moveTo(
                qa.buffer.f[qa.fPos] - c + qa.buffer.f[qa.fPos + 2],
                qa.buffer.f[qa.fPos + 1] - d,
              );
              A.context.arc(
                qa.buffer.f[qa.fPos] - c,
                qa.buffer.f[qa.fPos + 1] - d,
                qa.buffer.f[qa.fPos + 2],
                0,
                2 * Math.PI,
                !0,
              );
              break;
            case 7:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.DRAW_ELLIPSE;
              var oa = n;
              h = !0;
              var ia = oa.buffer.f[oa.fPos];
              var F = oa.buffer.f[oa.fPos + 1];
              var Ya = oa.buffer.f[oa.fPos + 2];
              var db = oa.buffer.f[oa.fPos + 3];
              ia -= c;
              F -= d;
              var K = (Ya / 2) * 0.5522848;
              var H = (db / 2) * 0.5522848;
              var R = ia + Ya;
              var V = F + db;
              var Gb = ia + Ya / 2;
              var Q = F + db / 2;
              A.context.moveTo(ia, Q);
              A.context.bezierCurveTo(ia, Q - H, Gb - K, F, Gb, F);
              A.context.bezierCurveTo(Gb + K, F, R, Q - H, R, Q);
              A.context.bezierCurveTo(R, Q + H, Gb + K, V, Gb, V);
              A.context.bezierCurveTo(Gb - K, V, ia, Q + H, ia, Q);
              break;
            case 8:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.DRAW_QUADS;
              var ha = n,
                ca = ha.buffer.o[ha.oPos],
                X = ha.buffer.o[ha.oPos + 1],
                hb = ha.buffer.o[ha.oPos + 2],
                W = null != X,
                aa = !1,
                ba = !1,
                T = W ? X.get_length() : Math.floor(ca.get_length() / 4);
              if (0 == T) return;
              null != hb &&
                (hb.get_length() >= 6 * T
                  ? (ba = aa = !0)
                  : hb.get_length() >= 4 * T
                    ? (aa = !0)
                    : hb.get_length() >= 2 * T && (ba = !0));
              var U = na.__pool.get(),
                Z = ua.__pool.get(),
                O = A.graphics.__renderTransform;
              A.context.save();
              for (var Aa = 0, eh = T; Aa < eh; ) {
                var Pc = Aa++;
                var De = W ? 4 * X.get(Pc) : 4 * Pc;
                if (
                  !(
                    0 > De ||
                    (U.setTo(
                      ca.get(De),
                      ca.get(De + 1),
                      ca.get(De + 2),
                      ca.get(De + 3),
                    ),
                    0 >= U.width || 0 >= U.height)
                  )
                ) {
                  if (aa && ba) {
                    var nc = 6 * Pc;
                    Z.setTo(
                      hb.get(nc),
                      hb.get(nc + 1),
                      hb.get(nc + 2),
                      hb.get(nc + 3),
                      hb.get(nc + 4),
                      hb.get(nc + 5),
                    );
                  } else
                    aa
                      ? ((nc = 4 * Pc),
                        Z.setTo(
                          hb.get(nc),
                          hb.get(nc + 1),
                          hb.get(nc + 2),
                          hb.get(nc + 3),
                          U.x,
                          U.y,
                        ))
                      : ba
                        ? ((nc = 2 * Pc),
                          (Z.tx = hb.get(nc)),
                          (Z.ty = hb.get(nc + 1)))
                        : ((Z.tx = U.x), (Z.ty = U.y));
                  Z.tx += f - c;
                  Z.ty += g - d;
                  Z.concat(O);
                  A.context.setTransform(Z.a, Z.b, Z.c, Z.d, Z.tx, Z.ty);
                  null != A.bitmapFill && A.bitmapFill.readable
                    ? A.context.drawImage(
                        A.bitmapFill.image.get_src(),
                        U.x,
                        U.y,
                        U.width,
                        U.height,
                        0,
                        0,
                        U.width,
                        U.height,
                      )
                    : A.context.fillRect(0, 0, U.width, U.height);
                }
              }
              na.__pool.release(U);
              ua.__pool.release(Z);
              A.context.restore();
              break;
            case 9:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.DRAW_RECT;
              var S = n;
              var da = !1;
              if (
                null != A.bitmapFill &&
                A.bitmapFill.readable &&
                !A.hitTesting
              ) {
                var Xa = (r = w = t = 0);
                var va = !0;
                if (null != A.pendingMatrix)
                  if (0 != A.pendingMatrix.b || 0 != A.pendingMatrix.c) va = !1;
                  else {
                    null == x && (x = B.__pool.get());
                    null == C && (C = B.__pool.get());
                    x.setTo(S.buffer.f[S.fPos], S.buffer.f[S.fPos + 1]);
                    var ea = A.inversePendingMatrix,
                      Hb = x.x,
                      ja = x.y;
                    x.x = Hb * ea.a + ja * ea.c + ea.tx;
                    x.y = Hb * ea.b + ja * ea.d + ea.ty;
                    C.setTo(
                      S.buffer.f[S.fPos] + S.buffer.f[S.fPos + 2],
                      S.buffer.f[S.fPos + 1] + S.buffer.f[S.fPos + 3],
                    );
                    var fa = A.inversePendingMatrix,
                      ka = C.x,
                      sa = C.y;
                    C.x = ka * fa.a + sa * fa.c + fa.tx;
                    C.y = ka * fa.b + sa * fa.d + fa.ty;
                    t = x.y;
                    Xa = x.x;
                    r = C.y;
                    w = C.x;
                  }
                else
                  ((t = S.buffer.f[S.fPos + 1]),
                    (Xa = S.buffer.f[S.fPos]),
                    (r = S.buffer.f[S.fPos + 1] + S.buffer.f[S.fPos + 3]),
                    (w = S.buffer.f[S.fPos] + S.buffer.f[S.fPos + 2]));
                va &&
                  0 <= t &&
                  0 <= Xa &&
                  w <= A.bitmapFill.width &&
                  r <= A.bitmapFill.height &&
                  ((da = !0),
                  A.hitTesting ||
                    A.context.drawImage(
                      A.bitmapFill.image.get_src(),
                      Xa,
                      t,
                      w - Xa,
                      r - t,
                      S.buffer.f[S.fPos] - c,
                      S.buffer.f[S.fPos + 1] - d,
                      S.buffer.f[S.fPos + 2],
                      S.buffer.f[S.fPos + 3],
                    ));
              }
              da ||
                ((h = !0),
                A.context.rect(
                  S.buffer.f[S.fPos] - c,
                  S.buffer.f[S.fPos + 1] - d,
                  S.buffer.f[S.fPos + 2],
                  S.buffer.f[S.fPos + 3],
                ));
              break;
            case 10:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.DRAW_ROUND_RECT;
              var la = n;
              h = !0;
              A.drawRoundRect(
                la.buffer.f[la.fPos] - c,
                la.buffer.f[la.fPos + 1] - d,
                la.buffer.f[la.fPos + 2],
                la.buffer.f[la.fPos + 3],
                la.buffer.f[la.fPos + 4],
                la.buffer.o[la.oPos],
              );
              break;
            case 12:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.DRAW_TRIANGLES;
              var ma = n,
                Bc = ma.buffer.o[ma.oPos],
                Hc = ma.buffer.o[ma.oPos + 1],
                Ic = ma.buffer.o[ma.oPos + 2],
                ta = null,
                Zb = null == A.bitmapFill;
              if (Zb && null != Ic) break a;
              if (!Zb) {
                if (null == Ic) {
                  Ic = ra.toFloatVector(null);
                  for (var xa = 0, za = (Bc.get_length() / 2) | 0; xa < za; ) {
                    var Ca = xa++;
                    Ic.push(Bc.get(2 * Ca) - c / A.bitmapFill.width);
                    Ic.push(Bc.get(2 * Ca + 1) - d / A.bitmapFill.height);
                  }
                }
                var Ba = Ic.get_length() != Bc.get_length(),
                  Da = A.normalizeUVT(Ic, Ba),
                  Ea = Da.max;
                Ic = Da.uvt;
                ta =
                  1 < Ea
                    ? A.createTempPatternCanvas(
                        A.bitmapFill,
                        A.bitmapRepeat,
                        A.bounds.width | 0,
                        A.bounds.height | 0,
                      )
                    : A.createTempPatternCanvas(
                        A.bitmapFill,
                        A.bitmapRepeat,
                        A.bitmapFill.width,
                        A.bitmapFill.height,
                      );
              }
              for (
                var $a = 0,
                  ya = Hc.get_length(),
                  Ga,
                  gb,
                  jb,
                  Ia,
                  Ka,
                  Ma,
                  qb,
                  Na,
                  Oa,
                  pa,
                  Ha,
                  Ja,
                  La,
                  Fa,
                  Kb,
                  Sa,
                  ib,
                  kb,
                  Pa,
                  Qa,
                  Ra,
                  Ua,
                  Wa,
                  We,
                  Jc,
                  Tb,
                  bb,
                  eb;
                $a < ya;

              ) {
                Ga = $a;
                gb = $a + 1;
                jb = $a + 2;
                Ia = 2 * Hc.get(Ga);
                Ka = 2 * Hc.get(Ga) + 1;
                Ma = 2 * Hc.get(gb);
                qb = 2 * Hc.get(gb) + 1;
                Na = 2 * Hc.get(jb);
                Oa = 2 * Hc.get(jb) + 1;
                pa = Bc.get(Ia) - c;
                Ha = Bc.get(Ka) - d;
                Ja = Bc.get(Ma) - c;
                La = Bc.get(qb) - d;
                Fa = Bc.get(Na) - c;
                Kb = Bc.get(Oa) - d;
                switch (ma.buffer.o[ma.oPos + 3]) {
                  case 0:
                    if (0 > (Ja - pa) * (Kb - Ha) - (La - Ha) * (Fa - pa)) {
                      $a += 3;
                      continue;
                    }
                    break;
                  case 2:
                    if (!(0 > (Ja - pa) * (Kb - Ha) - (La - Ha) * (Fa - pa))) {
                      $a += 3;
                      continue;
                    }
                }
                Zb
                  ? (A.context.beginPath(),
                    A.context.moveTo(pa, Ha),
                    A.context.lineTo(Ja, La),
                    A.context.lineTo(Fa, Kb),
                    A.context.closePath(),
                    A.hitTesting || A.context.fill(A.windingRule),
                    ($a += 3))
                  : ((Sa = Ic.get(Ia) * ta.width),
                    (kb = Ic.get(Ma) * ta.width),
                    (Qa = Ic.get(Na) * ta.width),
                    (ib = Ic.get(Ka) * ta.height),
                    (Pa = Ic.get(qb) * ta.height),
                    (Ra = Ic.get(Oa) * ta.height),
                    (Ua = Sa * (Ra - Pa) - kb * Ra + Qa * Pa + (kb - Qa) * ib),
                    0 == Ua
                      ? (($a += 3), A.context.restore())
                      : (A.context.save(),
                        A.context.beginPath(),
                        A.context.moveTo(pa, Ha),
                        A.context.lineTo(Ja, La),
                        A.context.lineTo(Fa, Kb),
                        A.context.closePath(),
                        A.context.clip(),
                        (Wa =
                          -(
                            ib * (Fa - Ja) -
                            Pa * Fa +
                            Ra * Ja +
                            (Pa - Ra) * pa
                          ) / Ua),
                        (We =
                          (Pa * Kb +
                            ib * (La - Kb) -
                            Ra * La +
                            (Ra - Pa) * Ha) /
                          Ua),
                        (Jc =
                          (Sa * (Fa - Ja) -
                            kb * Fa +
                            Qa * Ja +
                            (kb - Qa) * pa) /
                          Ua),
                        (Tb =
                          -(
                            kb * Kb +
                            Sa * (La - Kb) -
                            Qa * La +
                            (Qa - kb) * Ha
                          ) / Ua),
                        (bb =
                          (Sa * (Ra * Ja - Pa * Fa) +
                            ib * (kb * Fa - Qa * Ja) +
                            (Qa * Pa - kb * Ra) * pa) /
                          Ua),
                        (eb =
                          (Sa * (Ra * La - Pa * Kb) +
                            ib * (kb * Kb - Qa * La) +
                            (Qa * Pa - kb * Ra) * Ha) /
                          Ua),
                        A.context.transform(Wa, We, Jc, Tb, bb, eb),
                        A.context.drawImage(ta, 0, 0, ta.width, ta.height),
                        A.context.restore(),
                        ($a += 3)));
              }
              break;
            case 14:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.LINE_BITMAP_STYLE;
              var Za = n;
              b && A.hasStroke && A.closePath(!0);
              A.context.moveTo(f - c, g - d);
              if (Za.buffer.o[Za.oPos].readable)
                A.context.strokeStyle = A.createBitmapFill(
                  Za.buffer.o[Za.oPos],
                  Za.buffer.b[Za.bPos],
                  Za.buffer.b[Za.bPos + 1],
                );
              else {
                var yb = P.hex(0, 6);
                A.context.strokeStyle = '#' + yb;
              }
              A.hasStroke = !0;
              break;
            case 15:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.LINE_GRADIENT_STYLE;
              var cb = n;
              b && A.hasStroke && A.closePath(!0);
              A.context.moveTo(f - c, g - d);
              A.context.strokeStyle = A.createGradientPattern(
                cb.buffer.o[cb.oPos],
                cb.buffer.ii[cb.iiPos],
                cb.buffer.ff[cb.ffPos],
                cb.buffer.ii[cb.iiPos + 1],
                cb.buffer.o[cb.oPos + 1],
                cb.buffer.o[cb.oPos + 2],
                cb.buffer.o[cb.oPos + 3],
                cb.buffer.f[cb.fPos],
              );
              A.setSmoothing(!0);
              A.hasStroke = !0;
              break;
            case 16:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.LINE_STYLE;
              var nb = n;
              b && A.hasStroke && A.closePath(!0);
              A.context.moveTo(f - c, g - d);
              if (null == nb.buffer.o[nb.oPos]) A.hasStroke = !1;
              else {
                A.context.lineWidth =
                  0 < nb.buffer.o[nb.oPos] ? nb.buffer.o[nb.oPos] : 1;
                var ub =
                  null == nb.buffer.o[nb.oPos + 3]
                    ? 'round'
                    : (null == nb.buffer.o[nb.oPos + 3]
                        ? 'null'
                        : Sl.toString(nb.buffer.o[nb.oPos + 3])
                      ).toLowerCase();
                A.context.lineJoin = ub;
                var lb =
                  null == nb.buffer.o[nb.oPos + 2]
                    ? 'round'
                    : 0 == nb.buffer.o[nb.oPos + 2]
                      ? 'butt'
                      : (null == nb.buffer.o[nb.oPos + 2]
                          ? 'null'
                          : Rl.toString(nb.buffer.o[nb.oPos + 2])
                        ).toLowerCase();
                A.context.lineCap = lb;
                A.context.miterLimit = nb.buffer.f[nb.fPos + 1];
                if (1 == nb.buffer.f[nb.fPos]) {
                  var mb = P.hex(nb.buffer.i[nb.iPos] & 16777215, 6);
                  A.context.strokeStyle = '#' + mb;
                } else
                  ((E = (nb.buffer.i[nb.iPos] & 16711680) >>> 16),
                    (D = (nb.buffer.i[nb.iPos] & 65280) >>> 8),
                    (wa = nb.buffer.i[nb.iPos] & 255),
                    (A.context.strokeStyle =
                      'rgba(' +
                      E +
                      ', ' +
                      D +
                      ', ' +
                      wa +
                      ', ' +
                      nb.buffer.f[nb.fPos] +
                      ')'));
                A.setSmoothing(!0);
                A.hasStroke = !0;
              }
              break;
            case 17:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.LINE_TO;
              var fb = n;
              h = !0;
              A.context.lineTo(
                fb.buffer.f[fb.fPos] - c,
                fb.buffer.f[fb.fPos + 1] - d,
              );
              f = fb.buffer.f[fb.fPos];
              g = fb.buffer.f[fb.fPos + 1];
              f == q && g == p && (k = !0);
              break;
            case 18:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = Y.MOVE_TO;
              var Va = n;
              A.context.moveTo(
                Va.buffer.f[Va.fPos] - c,
                Va.buffer.f[Va.fPos + 1] - d,
              );
              f = Va.buffer.f[Va.fPos];
              g = Va.buffer.f[Va.fPos + 1];
              l &&
                Va.buffer.f[Va.fPos] != q &&
                Va.buffer.f[Va.fPos + 1] != p &&
                (k = !0);
              q = Va.buffer.f[Va.fPos];
              p = Va.buffer.f[Va.fPos + 1];
              l = !0;
              break;
            case 21:
              A.windingRule = 'evenodd';
              break;
            case 22:
              A.windingRule = 'nonzero';
              break;
            default:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1;
              }
              n.prev = y;
          }
        }
        null != x && B.__pool.release(x);
        null != C && B.__pool.release(C);
        n.destroy();
        if (h) {
          if (b && A.hasStroke) {
            if (A.hasFill) {
              if (f != q || g != p) (A.context.lineTo(q - c, p - d), (k = !0));
              k && A.closePath(!0);
            } else k && f == q && g == p && A.closePath(!0);
            A.hitTesting || A.context.stroke();
          }
          b ||
            (!A.hasFill && null == A.bitmapFill) ||
            (A.context.translate(-A.bounds.x, -A.bounds.y),
            null != A.pendingMatrix
              ? (A.context.transform(
                  A.pendingMatrix.a,
                  A.pendingMatrix.b,
                  A.pendingMatrix.c,
                  A.pendingMatrix.d,
                  A.pendingMatrix.tx,
                  A.pendingMatrix.ty,
                ),
                A.hitTesting || A.context.fill(A.windingRule),
                A.context.transform(
                  A.inversePendingMatrix.a,
                  A.inversePendingMatrix.b,
                  A.inversePendingMatrix.c,
                  A.inversePendingMatrix.d,
                  A.inversePendingMatrix.tx,
                  A.inversePendingMatrix.ty,
                ))
              : A.hitTesting || A.context.fill(A.windingRule),
            A.context.translate(A.bounds.x, A.bounds.y),
            A.context.closePath());
        }
      };
      A.render = function (a, b) {
        a.__update(b.__worldTransform, b.__pixelRatio);
        if (a.__softwareDirty) {
          A.hitTesting = !1;
          A.graphics = a;
          A.allowSmoothing = b.__allowSmoothing;
          A.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
          A.bounds = a.__bounds;
          var c = a.__width,
            d = a.__height;
          if (
            !a.__visible ||
            0 == a.__commands.get_length() ||
            null == A.bounds ||
            1 > c ||
            1 > d
          )
            ((a.__canvas = null), (a.__context = null), (a.__bitmap = null));
          else {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')));
            A.context = a.__context;
            var f = a.__renderTransform,
              g = a.__canvas,
              k = b.__pixelRatio,
              q = (c * k) | 0,
              p = (d * k) | 0;
            b.__setBlendModeContext(A.context, 10);
            b.__isDOM
              ? (g.width == q && g.height == p
                  ? A.context.clearRect(0, 0, q, p)
                  : ((g.width = q),
                    (g.height = p),
                    (g.style.width = c + 'px'),
                    (g.style.height = d + 'px')),
                (c = a.__renderTransform),
                A.context.setTransform(
                  c.a * k,
                  c.b * k,
                  c.c * k,
                  c.d * k,
                  c.tx * k,
                  c.ty * k,
                ))
              : (g.width == q && g.height == p
                  ? (A.context.closePath(),
                    A.context.setTransform(1, 0, 0, 1, 0, 0),
                    A.context.clearRect(0, 0, q, p))
                  : ((g.width = c), (g.height = d)),
                A.context.setTransform(f.a, f.b, f.c, f.d, f.tx, f.ty));
            A.fillCommands.clear();
            A.strokeCommands.clear();
            A.hasFill = !1;
            A.hasStroke = !1;
            A.bitmapFill = null;
            k = A.bitmapRepeat = !1;
            d = c = 0;
            A.windingRule = 'evenodd';
            f = new Be(a.__commands);
            g = 0;
            for (q = a.__commands.types; g < q.length; )
              switch (((p = q[g]), ++g, p._hx_index)) {
                case 0:
                case 1:
                case 2:
                case 3:
                  A.endFill();
                  A.endStroke();
                  if (p == Y.BEGIN_BITMAP_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = Y.BEGIN_BITMAP_FILL;
                    p = f;
                    A.fillCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                    A.strokeCommands.beginBitmapFill(
                      p.buffer.o[p.oPos],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.b[p.bPos],
                      p.buffer.b[p.bPos + 1],
                    );
                  } else if (p == Y.BEGIN_GRADIENT_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = Y.BEGIN_GRADIENT_FILL;
                    p = f;
                    A.fillCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                    A.strokeCommands.beginGradientFill(
                      p.buffer.o[p.oPos],
                      p.buffer.ii[p.iiPos],
                      p.buffer.ff[p.ffPos],
                      p.buffer.ii[p.iiPos + 1],
                      p.buffer.o[p.oPos + 1],
                      p.buffer.o[p.oPos + 2],
                      p.buffer.o[p.oPos + 3],
                      p.buffer.f[p.fPos],
                    );
                  } else if (p == Y.BEGIN_SHADER_FILL) {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = Y.BEGIN_SHADER_FILL;
                    p = f;
                    A.fillCommands.beginShaderFill(p.buffer.o[p.oPos]);
                    A.strokeCommands.beginShaderFill(p.buffer.o[p.oPos]);
                  } else {
                    switch (f.prev._hx_index) {
                      case 0:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 1:
                        f.iPos += 1;
                        f.fPos += 1;
                        break;
                      case 2:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 3:
                        f.oPos += 1;
                        break;
                      case 4:
                        f.fPos += 6;
                        break;
                      case 5:
                        f.fPos += 4;
                        break;
                      case 6:
                        f.fPos += 3;
                        break;
                      case 7:
                        f.fPos += 4;
                        break;
                      case 8:
                        f.oPos += 3;
                        break;
                      case 9:
                        f.fPos += 4;
                        break;
                      case 10:
                        f.fPos += 5;
                        f.oPos += 1;
                        break;
                      case 12:
                        f.oPos += 4;
                        break;
                      case 14:
                        f.oPos += 2;
                        f.bPos += 2;
                        break;
                      case 15:
                        f.oPos += 4;
                        f.iiPos += 2;
                        f.ffPos += 1;
                        f.fPos += 1;
                        break;
                      case 16:
                        f.oPos += 4;
                        f.iPos += 1;
                        f.fPos += 2;
                        f.bPos += 1;
                        break;
                      case 17:
                        f.fPos += 2;
                        break;
                      case 18:
                        f.fPos += 2;
                        break;
                      case 19:
                        f.oPos += 1;
                        break;
                      case 20:
                        f.oPos += 1;
                    }
                    f.prev = Y.BEGIN_FILL;
                    p = f;
                    A.fillCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                    A.strokeCommands.beginFill(
                      p.buffer.i[p.iPos],
                      p.buffer.f[p.fPos],
                    );
                  }
                  break;
                case 4:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.CUBIC_CURVE_TO;
                  p = f;
                  A.fillCommands.cubicCurveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.f[p.fPos + 5],
                  );
                  k
                    ? A.strokeCommands.cubicCurveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                        p.buffer.f[p.fPos + 4],
                        p.buffer.f[p.fPos + 5],
                      )
                    : ((c = p.buffer.f[p.fPos + 4]),
                      (d = p.buffer.f[p.fPos + 5]));
                  break;
                case 5:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.CURVE_TO;
                  p = f;
                  A.fillCommands.curveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k
                    ? A.strokeCommands.curveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                        p.buffer.f[p.fPos + 2],
                        p.buffer.f[p.fPos + 3],
                      )
                    : ((c = p.buffer.f[p.fPos + 2]),
                      (d = p.buffer.f[p.fPos + 3]));
                  break;
                case 6:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.DRAW_CIRCLE;
                  p = f;
                  A.fillCommands.drawCircle(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                  );
                  k &&
                    A.strokeCommands.drawCircle(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                    );
                  break;
                case 7:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.DRAW_ELLIPSE;
                  p = f;
                  A.fillCommands.drawEllipse(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k &&
                    A.strokeCommands.drawEllipse(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 8:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.DRAW_QUADS;
                  p = f;
                  A.fillCommands.drawQuads(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                  );
                  break;
                case 9:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.DRAW_RECT;
                  p = f;
                  A.fillCommands.drawRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                  );
                  k &&
                    A.strokeCommands.drawRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                    );
                  break;
                case 10:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.DRAW_ROUND_RECT;
                  p = f;
                  A.fillCommands.drawRoundRect(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                    p.buffer.f[p.fPos + 2],
                    p.buffer.f[p.fPos + 3],
                    p.buffer.f[p.fPos + 4],
                    p.buffer.o[p.oPos],
                  );
                  k &&
                    A.strokeCommands.drawRoundRect(
                      p.buffer.f[p.fPos],
                      p.buffer.f[p.fPos + 1],
                      p.buffer.f[p.fPos + 2],
                      p.buffer.f[p.fPos + 3],
                      p.buffer.f[p.fPos + 4],
                      p.buffer.o[p.oPos],
                    );
                  break;
                case 12:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.DRAW_TRIANGLES;
                  p = f;
                  A.fillCommands.drawTriangles(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                  );
                  break;
                case 13:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.END_FILL;
                  A.endFill();
                  A.endStroke();
                  k = A.hasFill = !1;
                  A.bitmapFill = null;
                  d = c = 0;
                  break;
                case 14:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.LINE_BITMAP_STYLE;
                  p = f;
                  k ||
                    (0 == c && 0 == d) ||
                    (A.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = !0;
                  A.strokeCommands.lineBitmapStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.b[p.bPos],
                    p.buffer.b[p.bPos + 1],
                  );
                  break;
                case 15:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.LINE_GRADIENT_STYLE;
                  p = f;
                  k ||
                    (0 == c && 0 == d) ||
                    (A.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = !0;
                  A.strokeCommands.lineGradientStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.ii[p.iiPos],
                    p.buffer.ff[p.ffPos],
                    p.buffer.ii[p.iiPos + 1],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos],
                  );
                  break;
                case 16:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.LINE_STYLE;
                  p = f;
                  k ||
                    null == p.buffer.o[p.oPos] ||
                    (0 == c && 0 == d) ||
                    (A.strokeCommands.moveTo(c, d), (d = c = 0));
                  k = null != p.buffer.o[p.oPos];
                  A.strokeCommands.lineStyle(
                    p.buffer.o[p.oPos],
                    p.buffer.i[p.iPos],
                    p.buffer.f[p.fPos],
                    p.buffer.b[p.bPos],
                    p.buffer.o[p.oPos + 1],
                    p.buffer.o[p.oPos + 2],
                    p.buffer.o[p.oPos + 3],
                    p.buffer.f[p.fPos + 1],
                  );
                  break;
                case 17:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.LINE_TO;
                  p = f;
                  A.fillCommands.lineTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  k
                    ? A.strokeCommands.lineTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((c = p.buffer.f[p.fPos]), (d = p.buffer.f[p.fPos + 1]));
                  break;
                case 18:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.MOVE_TO;
                  p = f;
                  A.fillCommands.moveTo(
                    p.buffer.f[p.fPos],
                    p.buffer.f[p.fPos + 1],
                  );
                  k
                    ? A.strokeCommands.moveTo(
                        p.buffer.f[p.fPos],
                        p.buffer.f[p.fPos + 1],
                      )
                    : ((c = p.buffer.f[p.fPos]), (d = p.buffer.f[p.fPos + 1]));
                  break;
                case 19:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.OVERRIDE_BLEND_MODE;
                  p = f;
                  b.__setBlendModeContext(A.context, p.buffer.o[p.oPos]);
                  break;
                case 21:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.WINDING_EVEN_ODD;
                  A.fillCommands.windingEvenOdd();
                  A.windingRule = 'evenodd';
                  break;
                case 22:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = Y.WINDING_NON_ZERO;
                  A.fillCommands.windingNonZero();
                  A.windingRule = 'nonzero';
                  break;
                default:
                  switch (f.prev._hx_index) {
                    case 0:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 1:
                      f.iPos += 1;
                      f.fPos += 1;
                      break;
                    case 2:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 3:
                      f.oPos += 1;
                      break;
                    case 4:
                      f.fPos += 6;
                      break;
                    case 5:
                      f.fPos += 4;
                      break;
                    case 6:
                      f.fPos += 3;
                      break;
                    case 7:
                      f.fPos += 4;
                      break;
                    case 8:
                      f.oPos += 3;
                      break;
                    case 9:
                      f.fPos += 4;
                      break;
                    case 10:
                      f.fPos += 5;
                      f.oPos += 1;
                      break;
                    case 12:
                      f.oPos += 4;
                      break;
                    case 14:
                      f.oPos += 2;
                      f.bPos += 2;
                      break;
                    case 15:
                      f.oPos += 4;
                      f.iiPos += 2;
                      f.ffPos += 1;
                      f.fPos += 1;
                      break;
                    case 16:
                      f.oPos += 4;
                      f.iPos += 1;
                      f.fPos += 2;
                      f.bPos += 1;
                      break;
                    case 17:
                      f.fPos += 2;
                      break;
                    case 18:
                      f.fPos += 2;
                      break;
                    case 19:
                      f.oPos += 1;
                      break;
                    case 20:
                      f.oPos += 1;
                  }
                  f.prev = p;
              }
            0 < A.fillCommands.get_length() && A.endFill();
            0 < A.strokeCommands.get_length() && A.endStroke();
            f.destroy();
            a.__bitmap = $b.fromCanvas(a.__canvas);
          }
          a.__softwareDirty = !1;
          a.set___dirty(!1);
          A.graphics = null;
        }
      };
      A.renderMask = function (a, b) {
        if (0 != a.__commands.get_length()) {
          A.context = b.context;
          b = new Be(a.__commands);
          var c = 0;
          for (a = a.__commands.types; c < a.length; ) {
            var d = a[c];
            ++c;
            switch (d._hx_index) {
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.CUBIC_CURVE_TO;
                d = b;
                A.context.bezierCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                  d.buffer.f[d.fPos + 4] - 0,
                  d.buffer.f[d.fPos + 5] - 0,
                );
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.CURVE_TO;
                d = b;
                A.context.quadraticCurveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2] - 0,
                  d.buffer.f[d.fPos + 3] - 0,
                );
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_CIRCLE;
                d = b;
                A.context.arc(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  0,
                  2 * Math.PI,
                  !0,
                );
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_ELLIPSE;
                var f = b;
                d = f.buffer.f[f.fPos];
                var g = f.buffer.f[f.fPos + 1];
                var k = f.buffer.f[f.fPos + 2];
                var q = f.buffer.f[f.fPos + 3];
                d -= 0;
                g -= 0;
                f = (k / 2) * 0.5522848;
                var p = (q / 2) * 0.5522848;
                var l = d + k;
                var h = g + q;
                k = d + k / 2;
                q = g + q / 2;
                A.context.moveTo(d, q);
                A.context.bezierCurveTo(d, q - p, k - f, g, k, g);
                A.context.bezierCurveTo(k + f, g, l, q - p, l, q);
                A.context.bezierCurveTo(l, q + p, k + f, h, k, h);
                A.context.bezierCurveTo(k - f, h, d, q + p, d, q);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_RECT;
                d = b;
                A.context.beginPath();
                A.context.rect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                );
                A.context.closePath();
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.DRAW_ROUND_RECT;
                d = b;
                A.drawRoundRect(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                  d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3],
                  d.buffer.f[d.fPos + 4],
                  d.buffer.o[d.oPos],
                );
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.LINE_TO;
                d = b;
                A.context.lineTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                );
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = Y.MOVE_TO;
                d = b;
                A.context.moveTo(
                  d.buffer.f[d.fPos] - 0,
                  d.buffer.f[d.fPos + 1] - 0,
                );
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = d;
            }
          }
          b.destroy();
        }
      };
      A.setSmoothing = function (a) {
        A.allowSmoothing || (a = !1);
        A.context.imageSmoothingEnabled != a &&
          (A.context.imageSmoothingEnabled = a);
      };
      var jj = function () {};
      h['openfl.display._internal.CanvasSimpleButton'] = jj;
      jj.__name__ = 'openfl.display._internal.CanvasSimpleButton';
      jj.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      jj.renderDrawableMask = function (a, b) {
        b.__renderDrawableMask(a.__currentState);
      };
      var ba = function () {};
      h['openfl.display._internal.CanvasTextField'] = ba;
      ba.__name__ = 'openfl.display._internal.CanvasTextField';
      ba.renderDrawable = function (a, b) {
        b.__isDOM &&
          !a.__renderedOnCanvasWhileOnDOM &&
          ((a.__renderedOnCanvasWhileOnDOM = !0),
          1 == a.get_type() && a.replaceText(0, a.__text.length, a.__text),
          a.__isHTML &&
            a.__updateText(
              Oa.parse(
                a.__text,
                a.get_multiline(),
                a.__styleSheet,
                a.__textFormat,
                a.__textEngine.textFormatRanges,
              ),
            ),
          (a.__dirty = !0),
          (a.__layoutDirty = !0),
          a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty()));
        if (
          null == a.get_mask() ||
          (0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
        )
          if (
            (b.__updateCacheBitmap(a, a.__dirty),
            null == a.__cacheBitmap || a.__isCacheBitmapRender)
          ) {
            var c = a.__textEngine,
              d = !(c.background || c.border),
              f = d ? c.textBounds : c.bounds,
              g = a.__graphics,
              k = 0;
            if (a.__dirty) {
              a.__updateLayout();
              null == g.__bounds && (g.__bounds = new na());
              if (0 == a.get_text().length) {
                var q = c.bounds.width - 4,
                  p = a.get_defaultTextFormat().align;
                k = 3 == p ? 0 : 4 == p ? q : q / 2;
                switch (p) {
                  case 0:
                    k += a.get_defaultTextFormat().leftMargin / 2;
                    k -= a.get_defaultTextFormat().rightMargin / 2;
                    k += a.get_defaultTextFormat().indent / 2;
                    k += a.get_defaultTextFormat().blockIndent / 2;
                    break;
                  case 2:
                    k += a.get_defaultTextFormat().leftMargin;
                    k += a.get_defaultTextFormat().indent;
                    k += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 3:
                    k += a.get_defaultTextFormat().leftMargin;
                    k += a.get_defaultTextFormat().indent;
                    k += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 4:
                    k -= a.get_defaultTextFormat().rightMargin;
                }
                d && ((f.y = c.bounds.y), (f.x = k));
              }
              g.__bounds.copyFrom(f);
            }
            p = b.__pixelRatio;
            g.__update(b.__worldTransform, p);
            if (a.__dirty || g.__softwareDirty) {
              q = Math.round(g.__width * p);
              var l = Math.round(g.__height * p);
              if (
                !(
                  (null != c.text && '' != c.text) ||
                  c.background ||
                  c.border ||
                  c.__hasFocus ||
                  (1 == c.type && c.selectable)
                ) ||
                ((0 >= c.width || 0 >= c.height) && 2 != c.autoSize)
              )
                ((a.__graphics.__canvas = null),
                  (a.__graphics.__context = null),
                  (a.__graphics.__bitmap = null),
                  (a.__graphics.__softwareDirty = !1),
                  a.__graphics.set___dirty(!1),
                  (a.__dirty = !1));
              else {
                null == a.__graphics.__canvas &&
                  ((a.__graphics.__canvas =
                    window.document.createElement('canvas')),
                  (a.__graphics.__context =
                    a.__graphics.__canvas.getContext('2d')));
                ba.context = g.__context;
                g.__canvas.width = q;
                g.__canvas.height = l;
                b.__isDOM &&
                  ((g.__canvas.style.width = Math.round(q / p) + 'px'),
                  (g.__canvas.style.height = Math.round(l / p) + 'px'));
                var h = ua.__pool.get();
                h.scale(p, p);
                h.concat(g.__renderTransform);
                ba.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
                ua.__pool.release(h);
                null == ba.clearRect &&
                  (ba.clearRect =
                    'undefined' !== typeof navigator &&
                    'undefined' !== typeof navigator.isCocoonJS);
                ba.clearRect &&
                  ba.context.clearRect(
                    0,
                    0,
                    g.__canvas.width,
                    g.__canvas.height,
                  );
                if ((null != c.text && '' != c.text) || c.__hasFocus) {
                  q = c.text;
                  g.__context.imageSmoothingEnabled =
                    !b.__allowSmoothing ||
                    (0 == c.antiAliasType && 400 == c.sharpness)
                      ? !1
                      : !0;
                  if (c.border || c.background) {
                    ba.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                    if (c.background) {
                      var n = P.hex(c.backgroundColor & 16777215, 6);
                      ba.context.fillStyle = '#' + n;
                      ba.context.fill();
                    }
                    c.border &&
                      ((ba.context.lineWidth = 1),
                      (n = P.hex(c.borderColor & 16777215, 6)),
                      (ba.context.strokeStyle = '#' + n),
                      ba.context.stroke());
                  }
                  ba.context.textBaseline = 'alphabetic';
                  ba.context.textAlign = 'start';
                  l = -a.get_scrollH();
                  var t = (d = 0);
                  for (n = a.get_scrollV() - 1; t < n; ) {
                    var w = t++;
                    d -= c.lineHeights.get(w);
                  }
                  var r;
                  for (k = c.layoutGroups.iterator(); k.hasNext(); ) {
                    var x = k.next();
                    if (!(x.lineIndex < a.get_scrollV() - 1)) {
                      if (x.lineIndex > c.get_bottomScrollV() - 1) break;
                      h = '#' + P.hex(x.format.color & 16777215, 6);
                      ba.context.font = Eb.getFont(x.format);
                      ba.context.fillStyle = h;
                      ba.context.fillText(
                        q.substring(x.startIndex, x.endIndex),
                        x.offsetX + l - f.x,
                        x.offsetY + x.ascent + d - f.y,
                      );
                      if (-1 < a.__caretIndex && c.selectable)
                        if (a.__selectionIndex == a.__caretIndex) {
                          if (
                            a.__showCursor &&
                            x.startIndex <= a.__caretIndex &&
                            x.endIndex >= a.__caretIndex
                          ) {
                            t = r = 0;
                            for (n = a.__caretIndex - x.startIndex; t < n; ) {
                              w = t++;
                              if (x.positions.length <= w) break;
                              r += x.positions[w];
                            }
                            t = 0;
                            n = a.get_scrollV();
                            for (w = x.lineIndex + 1; n < w; ) {
                              var C = n++;
                              t += c.lineHeights.get(C - 1);
                            }
                            ba.context.beginPath();
                            n = P.hex(x.format.color & 16777215, 6);
                            ba.context.strokeStyle = '#' + n;
                            ba.context.moveTo(
                              x.offsetX + r - a.get_scrollH() - f.x,
                              t + 2 - f.y,
                            );
                            ba.context.lineWidth = 1;
                            ba.context.lineTo(
                              x.offsetX + r - a.get_scrollH() - f.x,
                              t +
                                Eb.getFormatHeight(a.get_defaultTextFormat()) -
                                1 -
                                f.y,
                            );
                            ba.context.stroke();
                            ba.context.closePath();
                          }
                        } else if (
                          (x.startIndex <= a.__caretIndex &&
                            x.endIndex >= a.__caretIndex) ||
                          (x.startIndex <= a.__selectionIndex &&
                            x.endIndex >= a.__selectionIndex) ||
                          (x.startIndex > a.__caretIndex &&
                            x.endIndex < a.__selectionIndex) ||
                          (x.startIndex > a.__selectionIndex &&
                            x.endIndex < a.__caretIndex)
                        )
                          ((r =
                            Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                            (t =
                              Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                            x.startIndex > r && (r = x.startIndex),
                            x.endIndex < t && (t = x.endIndex),
                            (w = a.getCharBoundaries(r)),
                            t >= x.endIndex
                              ? ((n = a.getCharBoundaries(x.endIndex - 1)),
                                null != n && (n.x += n.width + 2))
                              : (n = a.getCharBoundaries(t)),
                            null != w &&
                              null != n &&
                              ((ba.context.fillStyle = '#000000'),
                              ba.context.fillRect(
                                w.x + l - f.x,
                                w.y + d,
                                n.x - w.x,
                                x.height,
                              ),
                              (ba.context.fillStyle = '#FFFFFF'),
                              ba.context.fillText(
                                q.substring(r, t),
                                l + w.x - f.x,
                                x.offsetY + x.ascent + d,
                              )));
                      x.format.underline &&
                        (ba.context.beginPath(),
                        (ba.context.strokeStyle = h),
                        (ba.context.lineWidth = 1),
                        (h = x.offsetX + l - f.x),
                        (r =
                          Math.ceil(x.offsetY + d + x.ascent - f.y) +
                          Math.floor(0.185 * x.ascent) +
                          0.5),
                        ba.context.moveTo(h, r),
                        ba.context.lineTo(h + x.width, r),
                        ba.context.stroke(),
                        ba.context.closePath());
                    }
                  }
                } else {
                  if (c.border || c.background)
                    (c.border
                      ? ba.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                      : ba.context.rect(0, 0, f.width, f.height),
                      c.background &&
                        ((n = P.hex(c.backgroundColor & 16777215, 6)),
                        (ba.context.fillStyle = '#' + n),
                        ba.context.fill()),
                      c.border &&
                        ((ba.context.lineWidth = 1),
                        (ba.context.lineCap = 'square'),
                        (n = P.hex(c.borderColor & 16777215, 6)),
                        (ba.context.strokeStyle = '#' + n),
                        ba.context.stroke()));
                  if (-1 < a.__caretIndex && c.selectable && a.__showCursor) {
                    l = -a.get_scrollH() + (d ? 0 : k);
                    t = d = 0;
                    for (n = a.get_scrollV() - 1; t < n; )
                      ((w = t++), (d += c.lineHeights.get(w)));
                    ba.context.beginPath();
                    n = P.hex(a.get_defaultTextFormat().color & 16777215, 6);
                    ba.context.strokeStyle = '#' + n;
                    ba.context.moveTo(l + 2.5, d + 2.5);
                    ba.context.lineWidth = 1;
                    ba.context.lineTo(
                      l + 2.5,
                      d + Eb.getFormatHeight(a.get_defaultTextFormat()) - 1,
                    );
                    ba.context.stroke();
                    ba.context.closePath();
                  }
                }
                g.__bitmap = $b.fromCanvas(a.__graphics.__canvas);
                g.__bitmapScale = p;
                g.__visible = !0;
                a.__dirty = !1;
                g.__softwareDirty = !1;
                g.set___dirty(!1);
              }
            }
            d = !1;
            0 == a.__textEngine.antiAliasType &&
              1 == a.__textEngine.gridFitType &&
              (d = b.context.imageSmoothingEnabled) &&
              (b.context.imageSmoothingEnabled = !1);
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable &&
              ((f = b.__getAlpha(a.__worldAlpha)),
              !(0 >= f) &&
                (null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height() &&
                  (b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a),
                  (c = b.context),
                  b.setTransform(a.__renderTransform, c),
                  (h = a.opaqueBackground),
                  (c.fillStyle =
                    'rgb(' +
                    ((h >>> 16) & 255) +
                    ',' +
                    ((h >>> 8) & 255) +
                    ',' +
                    (h & 255) +
                    ')'),
                  c.fillRect(0, 0, a.get_width(), a.get_height()),
                  b.__popMaskObject(a)),
                null != a.__graphics &&
                  a.__renderable &&
                  ((f = b.__getAlpha(a.__worldAlpha)),
                  !(0 >= f) &&
                    ((g = a.__graphics),
                    null != g &&
                      (A.render(g, b),
                      (q = g.__width),
                      (l = g.__height),
                      (k = g.__canvas),
                      null != k &&
                        g.__visible &&
                        1 <= q &&
                        1 <= l &&
                        ((x = g.__worldTransform),
                        (c = b.context),
                        (p = a.__scrollRect),
                        (C = a.__worldScale9Grid),
                        null == p || (0 < p.width && 0 < p.height)))))))
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              c.globalAlpha = f;
              if (null != C && 0 == x.b && 0 == x.c) {
                p = b.__pixelRatio;
                h = ua.__pool.get();
                h.translate(x.tx, x.ty);
                b.setTransform(h, c);
                ua.__pool.release(h);
                f = g.__bounds;
                t = g.__renderTransform.a / g.__bitmapScale;
                var m = g.__renderTransform.d / g.__bitmapScale;
                n = t * x.a;
                w = m * x.d;
                g = Math.max(1, Math.round(C.x * t));
                x = Math.round(C.y * m);
                h = Math.max(
                  1,
                  Math.round((f.get_right() - C.get_right()) * t),
                );
                r = Math.round((f.get_bottom() - C.get_bottom()) * m);
                t = Math.round(C.width * t);
                C = Math.round(C.height * m);
                m = Math.round(g / p);
                var G = Math.round(x / p),
                  y = Math.round(h / p);
                p = Math.round(r / p);
                n = f.width * n - m - y;
                f = f.height * w - G - p;
                b.applySmoothing(c, !1);
                0 != t && 0 != C
                  ? (c.drawImage(k, 0, 0, g, x, 0, 0, m, G),
                    c.drawImage(k, g, 0, t, x, m, 0, n, G),
                    c.drawImage(k, g + t, 0, h, x, m + n, 0, y, G),
                    c.drawImage(k, 0, x, g, C, 0, G, m, f),
                    c.drawImage(k, g, x, t, C, m, G, n, f),
                    c.drawImage(k, g + t, x, h, C, m + n, G, y, f),
                    c.drawImage(k, 0, x + C, g, r, 0, G + f, m, p),
                    c.drawImage(k, g, x + C, t, r, m, G + f, n, p),
                    c.drawImage(k, g + t, x + C, h, r, m + n, G + f, y, p))
                  : 0 == t && 0 != C
                    ? ((g = m + n + y),
                      c.drawImage(k, 0, 0, q, x, 0, 0, g, G),
                      c.drawImage(k, 0, x, q, C, 0, G, g, f),
                      c.drawImage(k, 0, x + C, q, r, 0, G + f, g, p))
                    : 0 == C &&
                      0 != t &&
                      ((f = G + f + p),
                      c.drawImage(k, 0, 0, g, l, 0, 0, m, f),
                      c.drawImage(k, g, 0, t, l, m, 0, n, f),
                      c.drawImage(k, g + t, 0, h, l, m + n, 0, y, f));
              } else (b.setTransform(x, c), c.drawImage(k, 0, 0, q, l));
              b.__popMaskObject(a);
            }
            d && (b.context.imageSmoothingEnabled = !0);
          } else
            ((a = a.__cacheBitmap),
              a.__renderable &&
                ((f = b.__getAlpha(a.__worldAlpha)),
                0 < f &&
                  null != a.__bitmapData &&
                  a.__bitmapData.__isValid &&
                  a.__bitmapData.readable &&
                  ((c = b.context),
                  b.__setBlendMode(a.__worldBlendMode),
                  b.__pushMaskObject(a, !1),
                  Na.convertToCanvas(a.__bitmapData.image),
                  (c.globalAlpha = f),
                  (p = a.__scrollRect),
                  b.setTransform(a.__renderTransform, c),
                  (b.__allowSmoothing && a.smoothing) ||
                    (c.imageSmoothingEnabled = !1),
                  null == p
                    ? c.drawImage(
                        a.__bitmapData.image.get_src(),
                        0,
                        0,
                        a.__bitmapData.image.width,
                        a.__bitmapData.image.height,
                      )
                    : c.drawImage(
                        a.__bitmapData.image.get_src(),
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                        p.x,
                        p.y,
                        p.width,
                        p.height,
                      ),
                  (b.__allowSmoothing && a.smoothing) ||
                    (c.imageSmoothingEnabled = !0),
                  b.__popMaskObject(a, !1))));
      };
      ba.renderDrawableMask = function (a, b) {
        fg.renderDrawableMask(a, b);
      };
      var kf = function () {};
      h['openfl.display._internal.CanvasTilemap'] = kf;
      kf.__name__ = 'openfl.display._internal.CanvasTilemap';
      kf.renderTileContainer = function (a, b, c, d, f, g, k, q, p, l, h, n) {
        var t = b.context,
          w = b.__roundPixels,
          r = ua.__pool.get(),
          x = a.__tiles,
          C,
          m = null,
          G = 0;
        for (a = a.__length; G < a; ) {
          var y = G++;
          var A = x[y];
          r.setTo(1, 0, 0, 1, -A.get_originX(), -A.get_originY());
          r.concat(A.get_matrix());
          r.concat(c);
          w && ((r.tx = Math.round(r.tx)), (r.ty = Math.round(r.ty)));
          var B = null != A.get_tileset() ? A.get_tileset() : d;
          y = A.get_alpha() * k;
          if ((C = A.get_visible()) && !(0 >= y))
            if (
              (g || (y = 1),
              q && (m = null != A.__blendMode ? A.__blendMode : p),
              0 < A.__length)
            )
              kf.renderTileContainer(A, b, r, B, f, g, y, q, m, l, h, n);
            else if (null != B) {
              C = A.get_id();
              if (-1 == C) {
                if (
                  ((A = A.__rect), null == A || 0 >= A.width || 0 >= A.height)
                )
                  continue;
              } else {
                A = B.__data[C];
                if (null == A) continue;
                n.setTo(A.x, A.y, A.width, A.height);
                A = n;
              }
              B = B.__bitmapData;
              null != B &&
                null != B.image &&
                (B != l &&
                  (null == B.image.buffer.__srcImage &&
                    Na.convertToCanvas(B.image),
                  (h = B.image.get_src()),
                  (l = B)),
                (t.globalAlpha = y),
                q && b.__setBlendMode(m),
                b.setTransform(r, t),
                t.drawImage(
                  h,
                  A.x,
                  A.y,
                  A.width,
                  A.height,
                  0,
                  0,
                  A.width,
                  A.height,
                ));
            }
        }
        ua.__pool.release(r);
      };
      kf.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              ((C = b.__getAlpha(a.__worldAlpha)), 0 >= C)
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              m = b.context;
              b.setTransform(a.__renderTransform, m);
              var c = a.opaqueBackground;
              m.fillStyle =
                'rgb(' +
                ((c >>> 16) & 255) +
                ',' +
                ((c >>> 8) & 255) +
                ',' +
                (c & 255) +
                ')';
              m.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a);
            }
            if (
              null != a.__graphics &&
              a.__renderable &&
              ((C = b.__getAlpha(a.__worldAlpha)), !(0 >= C))
            ) {
              var d = a.__graphics;
              if (null != d) {
                A.render(d, b);
                var f = d.__width,
                  g = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= f && 1 <= g) {
                  var k = d.__worldTransform;
                  m = b.context;
                  G = a.__scrollRect;
                  var q = a.__worldScale9Grid;
                  if (null == G || (0 < G.width && 0 < G.height)) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    m.globalAlpha = C;
                    if (null != q && 0 == k.b && 0 == k.c) {
                      var p = b.__pixelRatio;
                      C = ua.__pool.get();
                      C.translate(k.tx, k.ty);
                      b.setTransform(C, m);
                      ua.__pool.release(C);
                      C = d.__bounds;
                      var l = d.__renderTransform.a / d.__bitmapScale,
                        h = d.__renderTransform.d / d.__bitmapScale,
                        n = l * k.a,
                        t = h * k.d;
                      k = Math.max(1, Math.round(q.x * l));
                      d = Math.round(q.y * h);
                      G = Math.max(
                        1,
                        Math.round((C.get_right() - q.get_right()) * l),
                      );
                      var w = Math.round((C.get_bottom() - q.get_bottom()) * h);
                      l = Math.round(q.width * l);
                      q = Math.round(q.height * h);
                      h = Math.round(k / p);
                      var r = Math.round(d / p),
                        x = Math.round(G / p);
                      p = Math.round(w / p);
                      n = C.width * n - h - x;
                      C = C.height * t - r - p;
                      b.applySmoothing(m, !1);
                      0 != l && 0 != q
                        ? (m.drawImage(c, 0, 0, k, d, 0, 0, h, r),
                          m.drawImage(c, k, 0, l, d, h, 0, n, r),
                          m.drawImage(c, k + l, 0, G, d, h + n, 0, x, r),
                          m.drawImage(c, 0, d, k, q, 0, r, h, C),
                          m.drawImage(c, k, d, l, q, h, r, n, C),
                          m.drawImage(c, k + l, d, G, q, h + n, r, x, C),
                          m.drawImage(c, 0, d + q, k, w, 0, r + C, h, p),
                          m.drawImage(c, k, d + q, l, w, h, r + C, n, p),
                          m.drawImage(
                            c,
                            k + l,
                            d + q,
                            G,
                            w,
                            h + n,
                            r + C,
                            x,
                            p,
                          ))
                        : 0 == l && 0 != q
                          ? ((g = h + n + x),
                            m.drawImage(c, 0, 0, f, d, 0, 0, g, r),
                            m.drawImage(c, 0, d, f, q, 0, r, g, C),
                            m.drawImage(c, 0, d + q, f, w, 0, r + C, g, p))
                          : 0 == q &&
                            0 != l &&
                            ((f = r + C + p),
                            m.drawImage(c, 0, 0, k, g, 0, 0, h, f),
                            m.drawImage(c, k, 0, l, g, h, 0, n, f),
                            m.drawImage(c, k + l, 0, G, g, h + n, 0, x, f));
                    } else (b.setTransform(k, m), m.drawImage(c, 0, 0, f, g));
                    b.__popMaskObject(a);
                  }
                }
              }
            }
          }
          a.__renderable &&
            0 != a.__group.__tiles.length &&
            ((C = b.__getAlpha(a.__worldAlpha)),
            0 >= C ||
              ((m = b.context),
              b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a),
              (c = na.__pool.get()),
              c.setTo(0, 0, a.__width, a.__height),
              b.__pushMaskRect(c, a.__renderTransform),
              (b.__allowSmoothing && a.smoothing) ||
                (m.imageSmoothingEnabled = !1),
              kf.renderTileContainer(
                a.__group,
                b,
                a.__renderTransform,
                a.__tileset,
                b.__allowSmoothing && a.smoothing,
                a.tileAlphaEnabled,
                C,
                a.tileBlendModeEnabled,
                a.__worldBlendMode,
                null,
                null,
                c,
              ),
              (b.__allowSmoothing && a.smoothing) ||
                (m.imageSmoothingEnabled = !0),
              b.__popMaskRect(),
              b.__popMaskObject(a),
              na.__pool.release(c)));
        } else if (((c = a.__cacheBitmap), c.__renderable)) {
          var C = b.__getAlpha(c.__worldAlpha);
          if (
            0 < C &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
          ) {
            var m = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            Na.convertToCanvas(c.__bitmapData.image);
            m.globalAlpha = C;
            var G = c.__scrollRect;
            b.setTransform(c.__renderTransform, m);
            (b.__allowSmoothing && c.smoothing) ||
              (m.imageSmoothingEnabled = !1);
            null == G
              ? m.drawImage(
                  c.__bitmapData.image.get_src(),
                  0,
                  0,
                  c.__bitmapData.image.width,
                  c.__bitmapData.image.height,
                )
              : m.drawImage(
                  c.__bitmapData.image.get_src(),
                  G.x,
                  G.y,
                  G.width,
                  G.height,
                  G.x,
                  G.y,
                  G.width,
                  G.height,
                );
            (b.__allowSmoothing && c.smoothing) ||
              (m.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1);
          }
        }
        b.__renderEvent(a);
      };
      kf.renderDrawableMask = function (a, b) {};
      var gg = function () {};
      h['openfl.display._internal.CanvasVideo'] = gg;
      gg.__name__ = 'openfl.display._internal.CanvasVideo';
      gg.render = function (a, b) {
        if (a.__renderable && null != a.__stream) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            var d = b.context;
            if (null != a.__stream.__video) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              d.globalAlpha = c;
              c = a.__scrollRect;
              var f = a.smoothing;
              b.setTransform(a.__worldTransform, d);
              f || (d.imageSmoothingEnabled = !1);
              null == c
                ? d.drawImage(
                    a.__stream.__video,
                    0,
                    0,
                    a.get_width(),
                    a.get_height(),
                  )
                : d.drawImage(
                    a.__stream.__video,
                    c.x,
                    c.y,
                    c.width,
                    c.height,
                    c.x,
                    c.y,
                    c.width,
                    c.height,
                  );
              f || (d.imageSmoothingEnabled = !0);
              b.__popMaskObject(a);
            }
          }
        }
      };
      gg.renderDrawable = function (a, b) {
        gg.render(a, b);
        b.__renderEvent(a);
      };
      gg.renderDrawableMask = function (a, b) {};
      var Td = function () {};
      h['openfl.display._internal.Context3DBitmap'] = Td;
      Td.__name__ = 'openfl.display._internal.Context3DBitmap';
      Td.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid
        ) {
          var c = b.__context3D;
          b.__setBlendMode(a.__worldBlendMode);
          b.__pushMaskObject(a);
          var d = b.__initDisplayShader(a.__worldShader);
          b.setShader(d);
          b.applyBitmapData(
            a.__bitmapData,
            b.__allowSmoothing && (a.smoothing || b.__upscaled),
          );
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var f = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          d = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(d);
          b.__clearShader();
          b.__popMaskObject(a);
        }
      };
      Td.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData &&
          null != a.__bitmapData.image &&
          (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = na.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              na.__pool.release(d);
            }
            null != a.__graphics && Qe.render(a, b);
          }
          Td.render(a, b);
        } else Td.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      Td.renderDrawableMask = function (a, b) {
        Td.renderMask(a, b);
      };
      Td.renderMask = function (a, b) {
        if (null != a.__bitmapData && a.__bitmapData.__isValid) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(ig.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.updateShader();
          var f = a.__bitmapData.getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          a = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var yj = function () {};
      h['openfl.display._internal.Context3DBitmapData'] = yj;
      yj.__name__ = 'openfl.display._internal.Context3DBitmapData';
      yj.renderDrawable = function (a, b) {
        var c = b.__context3D;
        b.__setBlendMode(10);
        var d = b.__defaultDisplayShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.applyAlpha(a.__worldAlpha);
        b.applyColorTransform(a.__worldColorTransform);
        b.updateShader();
        var f = a.getVertexBuffer(c);
        null != d.__position &&
          c.setVertexBufferAt(d.__position.index, f, 0, 3);
        null != d.__textureCoord &&
          c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader();
      };
      yj.renderDrawableMask = function (a, b) {
        var c = b.__context3D,
          d = b.__maskShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.updateShader();
        var f = a.getVertexBuffer(c);
        null != d.__position &&
          c.setVertexBufferAt(d.__position.index, f, 0, 3);
        null != d.__textureCoord &&
          c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader();
      };
      var Hh = function (a, b, c, d) {
        this.context3D = a;
        this.elementType = b;
        this.dataPerVertex = d;
        this.vertexCount = this.indexCount = 0;
        this.resize(c);
      };
      h['openfl.display._internal.Context3DBuffer'] = Hh;
      Hh.__name__ = 'openfl.display._internal.Context3DBuffer';
      Hh.prototype = {
        flushVertexBufferData: function () {
          this.vertexBufferData.length > this.vertexCount &&
            ((this.vertexCount = this.vertexBufferData.length),
            (this.vertexBuffer = this.context3D.createVertexBuffer(
              this.vertexCount,
              this.dataPerVertex,
              0,
            )));
          this.vertexBuffer.uploadFromTypedArray(
            ih.toArrayBufferView(this.vertexBufferData),
          );
        },
        resize: function (a, b) {
          null == b && (b = -1);
          this.elementCount = a;
          -1 == b && (b = this.dataPerVertex);
          b != this.dataPerVertex &&
            ((this.vertexBuffer = null),
            (this.vertexCount = 0),
            (this.dataPerVertex = b));
          var c = 0;
          switch (this.elementType._hx_index) {
            case 0:
              c = 4 * a;
              break;
            case 1:
              c = 3 * a;
              break;
            case 2:
              c = 3 * a;
          }
          b *= c;
          if (null == this.vertexBufferData) {
            var d = (c = null),
              f = null,
              g = null,
              k = null;
            this.vertexBufferData = b =
              null != b
                ? new Float32Array(b)
                : null != c
                  ? new Float32Array(c)
                  : null != d
                    ? new Float32Array(d.__array)
                    : null != f
                      ? new Float32Array(f)
                      : null != g
                        ? null == k
                          ? new Float32Array(g, 0)
                          : new Float32Array(g, 0, k)
                        : null;
          } else
            b > this.vertexBufferData.length &&
              ((a = this.vertexBufferData),
              (k = g = f = d = c = null),
              (this.vertexBufferData = b =
                null != b
                  ? new Float32Array(b)
                  : null != c
                    ? new Float32Array(c)
                    : null != d
                      ? new Float32Array(d.__array)
                      : null != f
                        ? new Float32Array(f)
                        : null != g
                          ? null == k
                            ? new Float32Array(g, 0)
                            : new Float32Array(g, 0, k)
                          : null),
              this.vertexBufferData.set(a));
        },
        __class__: Hh,
      };
      var Mf = (L['openfl.display._internal.Context3DElementType'] = {
        __ename__: 'openfl.display._internal.Context3DElementType',
        __constructs__: null,
        QUADS: {
          _hx_name: 'QUADS',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: r,
        },
        TRIANGLES: {
          _hx_name: 'TRIANGLES',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: r,
        },
        TRIANGLE_INDICES: {
          _hx_name: 'TRIANGLE_INDICES',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.Context3DElementType',
          toString: r,
        },
      });
      Mf.__constructs__ = [Mf.QUADS, Mf.TRIANGLES, Mf.TRIANGLE_INDICES];
      Mf.__empty_constructs__ = [Mf.QUADS, Mf.TRIANGLES, Mf.TRIANGLE_INDICES];
      var jg = function () {};
      h['openfl.display._internal.Context3DDisplayObject'] = jg;
      jg.__name__ = 'openfl.display._internal.Context3DDisplayObject';
      jg.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null != a.__cacheBitmap && !a.__isCacheBitmapRender)
          Td.render(a.__cacheBitmap, b);
        else if (
          !(
            (null == a.opaqueBackground && null == a.__graphics) ||
            !a.__renderable ||
            0 >= a.__worldAlpha
          )
        ) {
          if (
            null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            0 < a.get_height()
          ) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var c = b.__context3D,
              d = na.__pool.get();
            d.setTo(0, 0, a.get_width(), a.get_height());
            b.__pushMaskRect(d, a.__renderTransform);
            var f = a.opaqueBackground;
            c.clear(
              ((f >>> 16) & 255) / 255,
              ((f >>> 8) & 255) / 255,
              (f & 255) / 255,
              1,
              0,
              0,
              1,
            );
            b.__popMaskRect();
            b.__popMaskObject(a);
            na.__pool.release(d);
          }
          null != a.__graphics && Qe.render(a, b);
        }
        b.__renderEvent(a);
      };
      jg.renderDrawableMask = function (a, b) {
        null != a.__graphics && Qe.renderMask(a, b);
      };
      var zj = function () {};
      h['openfl.display._internal.Context3DDisplayObjectContainer'] = zj;
      zj.__name__ = 'openfl.display._internal.Context3DDisplayObjectContainer';
      zj.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          (jg.renderDrawable(a, b),
          null == a.__cacheBitmap || a.__isCacheBitmapRender)
        ) {
          if (0 < a.__children.length)
            if ((b.__pushMaskObject(a), null != b.__stage)) {
              c = 0;
              for (d = a.__children; c < d.length; ) {
                var f = d[c];
                ++c;
                b.__renderDrawable(f);
                f.__renderDirty = !1;
              }
              a.__renderDirty = !1;
            } else
              for (c = 0, d = a.__children; c < d.length; )
                ((f = d[c]), ++c, b.__renderDrawable(f));
          0 < a.__children.length && b.__popMaskObject(a);
        }
      };
      zj.renderDrawableMask = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && d.__cleanup();
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics && Qe.renderMask(a, b);
        c = 0;
        for (a = a.__children; c < a.length; )
          ((d = a[c]), ++c, b.__renderDrawableMask(d));
      };
      var Sb = function () {};
      h['openfl.display._internal.Context3DGraphics'] = Sb;
      Sb.__name__ = 'openfl.display._internal.Context3DGraphics';
      Sb.buildBuffer = function (a, b) {
        var c,
          d = (c = 0),
          f = 0,
          g = new Be(a.__commands);
        b = b.__context3D;
        for (
          var k = na.__pool.get(),
            q = ua.__pool.get(),
            p = null,
            l = 0,
            h = a.__commands.types;
          l < h.length;

        ) {
          var n = h[l];
          ++l;
          switch (n._hx_index) {
            case 0:
              switch (g.prev._hx_index) {
                case 0:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 1:
                  g.iPos += 1;
                  g.fPos += 1;
                  break;
                case 2:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 3:
                  g.oPos += 1;
                  break;
                case 4:
                  g.fPos += 6;
                  break;
                case 5:
                  g.fPos += 4;
                  break;
                case 6:
                  g.fPos += 3;
                  break;
                case 7:
                  g.fPos += 4;
                  break;
                case 8:
                  g.oPos += 3;
                  break;
                case 9:
                  g.fPos += 4;
                  break;
                case 10:
                  g.fPos += 5;
                  g.oPos += 1;
                  break;
                case 12:
                  g.oPos += 4;
                  break;
                case 14:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 15:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 16:
                  g.oPos += 4;
                  g.iPos += 1;
                  g.fPos += 2;
                  g.bPos += 1;
                  break;
                case 17:
                  g.fPos += 2;
                  break;
                case 18:
                  g.fPos += 2;
                  break;
                case 19:
                  g.oPos += 1;
                  break;
                case 20:
                  g.oPos += 1;
              }
              g.prev = Y.BEGIN_BITMAP_FILL;
              p = g;
              p = p.buffer.o[p.oPos];
              break;
            case 1:
              p = null;
              switch (g.prev._hx_index) {
                case 0:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 1:
                  g.iPos += 1;
                  g.fPos += 1;
                  break;
                case 2:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 3:
                  g.oPos += 1;
                  break;
                case 4:
                  g.fPos += 6;
                  break;
                case 5:
                  g.fPos += 4;
                  break;
                case 6:
                  g.fPos += 3;
                  break;
                case 7:
                  g.fPos += 4;
                  break;
                case 8:
                  g.oPos += 3;
                  break;
                case 9:
                  g.fPos += 4;
                  break;
                case 10:
                  g.fPos += 5;
                  g.oPos += 1;
                  break;
                case 12:
                  g.oPos += 4;
                  break;
                case 14:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 15:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 16:
                  g.oPos += 4;
                  g.iPos += 1;
                  g.fPos += 2;
                  g.bPos += 1;
                  break;
                case 17:
                  g.fPos += 2;
                  break;
                case 18:
                  g.fPos += 2;
                  break;
                case 19:
                  g.oPos += 1;
                  break;
                case 20:
                  g.oPos += 1;
              }
              g.prev = n;
              break;
            case 3:
              switch (g.prev._hx_index) {
                case 0:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 1:
                  g.iPos += 1;
                  g.fPos += 1;
                  break;
                case 2:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 3:
                  g.oPos += 1;
                  break;
                case 4:
                  g.fPos += 6;
                  break;
                case 5:
                  g.fPos += 4;
                  break;
                case 6:
                  g.fPos += 3;
                  break;
                case 7:
                  g.fPos += 4;
                  break;
                case 8:
                  g.oPos += 3;
                  break;
                case 9:
                  g.fPos += 4;
                  break;
                case 10:
                  g.fPos += 5;
                  g.oPos += 1;
                  break;
                case 12:
                  g.oPos += 4;
                  break;
                case 14:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 15:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 16:
                  g.oPos += 4;
                  g.iPos += 1;
                  g.fPos += 2;
                  g.bPos += 1;
                  break;
                case 17:
                  g.fPos += 2;
                  break;
                case 18:
                  g.fPos += 2;
                  break;
                case 19:
                  g.oPos += 1;
                  break;
                case 20:
                  g.oPos += 1;
              }
              g.prev = Y.BEGIN_SHADER_FILL;
              p = g;
              n = p.buffer.o[p.oPos];
              p = null;
              if (null != n)
                for (var t = 0, w = n.inputCount; t < w; ) {
                  var r = t++;
                  if ('bitmap' == n.inputRefs[r].name) {
                    p = n.inputs[r];
                    break;
                  }
                }
              break;
            case 8:
              if (null != p) {
                switch (g.prev._hx_index) {
                  case 0:
                    g.oPos += 2;
                    g.bPos += 2;
                    break;
                  case 1:
                    g.iPos += 1;
                    g.fPos += 1;
                    break;
                  case 2:
                    g.oPos += 4;
                    g.iiPos += 2;
                    g.ffPos += 1;
                    g.fPos += 1;
                    break;
                  case 3:
                    g.oPos += 1;
                    break;
                  case 4:
                    g.fPos += 6;
                    break;
                  case 5:
                    g.fPos += 4;
                    break;
                  case 6:
                    g.fPos += 3;
                    break;
                  case 7:
                    g.fPos += 4;
                    break;
                  case 8:
                    g.oPos += 3;
                    break;
                  case 9:
                    g.fPos += 4;
                    break;
                  case 10:
                    g.fPos += 5;
                    g.oPos += 1;
                    break;
                  case 12:
                    g.oPos += 4;
                    break;
                  case 14:
                    g.oPos += 2;
                    g.bPos += 2;
                    break;
                  case 15:
                    g.oPos += 4;
                    g.iiPos += 2;
                    g.ffPos += 1;
                    g.fPos += 1;
                    break;
                  case 16:
                    g.oPos += 4;
                    g.iPos += 1;
                    g.fPos += 2;
                    g.bPos += 1;
                    break;
                  case 17:
                    g.fPos += 2;
                    break;
                  case 18:
                    g.fPos += 2;
                    break;
                  case 19:
                    g.oPos += 1;
                    break;
                  case 20:
                    g.oPos += 1;
                }
                g.prev = Y.DRAW_QUADS;
                w = g;
                n = w.buffer.o[w.oPos];
                t = w.buffer.o[w.oPos + 1];
                w = w.buffer.o[w.oPos + 2];
                r = null != t;
                var x = !1,
                  C = !1,
                  m = r ? t.get_length() : Math.floor(n.get_length() / 4);
                if (0 == m) return;
                null != w &&
                  (w.get_length() >= 6 * m
                    ? (C = x = !0)
                    : w.get_length() >= 4 * m
                      ? (x = !0)
                      : w.get_length() >= 2 * m && (C = !0));
                null == a.__quadBuffer
                  ? (a.__quadBuffer = new Hh(b, Mf.QUADS, m, 4))
                  : a.__quadBuffer.resize(c + m, 4);
                for (
                  var G,
                    A,
                    y,
                    B,
                    N,
                    L,
                    u,
                    v,
                    E,
                    D,
                    wa,
                    J,
                    P,
                    I,
                    Ta = a.__quadBuffer.vertexBufferData,
                    ab = p.width,
                    z = p.height,
                    M = 0,
                    qa = m;
                  M < qa;

                )
                  ((B = M++),
                    (G = 16 * (c + B)),
                    (A = r ? 4 * t.get(B) : 4 * B),
                    0 > A ||
                      (k.setTo(
                        n.get(A),
                        n.get(A + 1),
                        n.get(A + 2),
                        n.get(A + 3),
                      ),
                      (A = k.width),
                      (y = k.height),
                      0 >= A ||
                        0 >= y ||
                        (x && C
                          ? ((B *= 6),
                            q.setTo(
                              w.get(B),
                              w.get(B + 1),
                              w.get(B + 2),
                              w.get(B + 3),
                              w.get(B + 4),
                              w.get(B + 5),
                            ))
                          : x
                            ? ((B *= 4),
                              q.setTo(
                                w.get(B),
                                w.get(B + 1),
                                w.get(B + 2),
                                w.get(B + 3),
                                k.x,
                                k.y,
                              ))
                            : C
                              ? ((B *= 2),
                                (q.tx = w.get(B)),
                                (q.ty = w.get(B + 1)))
                              : ((q.tx = k.x), (q.ty = k.y)),
                        (B = k.x / ab),
                        (N = k.y / z),
                        (L = k.get_right() / ab),
                        (u = k.get_bottom() / z),
                        (v = 0 * q.a + 0 * q.c + q.tx),
                        (E = 0 * q.b + 0 * q.d + q.ty),
                        (D = A * q.a + 0 * q.c + q.tx),
                        (wa = A * q.b + 0 * q.d + q.ty),
                        (J = 0 * q.a + y * q.c + q.tx),
                        (P = 0 * q.b + y * q.d + q.ty),
                        (I = A * q.a + y * q.c + q.tx),
                        (A = A * q.b + y * q.d + q.ty),
                        (Ta[G] = v),
                        (Ta[G + 1] = E),
                        (Ta[G + 2] = B),
                        (Ta[G + 3] = N),
                        (Ta[G + 4] = D),
                        (Ta[G + 4 + 1] = wa),
                        (Ta[G + 4 + 2] = L),
                        (Ta[G + 4 + 3] = N),
                        (Ta[G + 8] = J),
                        (Ta[G + 8 + 1] = P),
                        (Ta[G + 8 + 2] = B),
                        (Ta[G + 8 + 3] = u),
                        (Ta[G + 12] = I),
                        (Ta[G + 12 + 1] = A),
                        (Ta[G + 12 + 2] = L),
                        (Ta[G + 12 + 3] = u))));
                c += m;
              }
              break;
            case 12:
              switch (g.prev._hx_index) {
                case 0:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 1:
                  g.iPos += 1;
                  g.fPos += 1;
                  break;
                case 2:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 3:
                  g.oPos += 1;
                  break;
                case 4:
                  g.fPos += 6;
                  break;
                case 5:
                  g.fPos += 4;
                  break;
                case 6:
                  g.fPos += 3;
                  break;
                case 7:
                  g.fPos += 4;
                  break;
                case 8:
                  g.oPos += 3;
                  break;
                case 9:
                  g.fPos += 4;
                  break;
                case 10:
                  g.fPos += 5;
                  g.oPos += 1;
                  break;
                case 12:
                  g.oPos += 4;
                  break;
                case 14:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 15:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 16:
                  g.oPos += 4;
                  g.iPos += 1;
                  g.fPos += 2;
                  g.bPos += 1;
                  break;
                case 17:
                  g.fPos += 2;
                  break;
                case 18:
                  g.fPos += 2;
                  break;
                case 19:
                  g.oPos += 1;
                  break;
                case 20:
                  g.oPos += 1;
              }
              g.prev = Y.DRAW_TRIANGLES;
              w = g;
              n = w.buffer.o[w.oPos];
              t = w.buffer.o[w.oPos + 1];
              w = w.buffer.o[w.oPos + 2];
              r = null != t;
              m = Math.floor(n.get_length() / 2);
              x = r ? t.get_length() : m;
              G = (m = (C = null != w) && w.get_length() >= 3 * m) ? 4 : 2;
              Ta = m ? 3 : 2;
              ab = G + 2;
              z = m ? f : d;
              Sb.resizeVertexBuffer(a, m, z + x * ab);
              M = m ? a.__vertexBufferDataUVT : a.__vertexBufferData;
              y = 0;
              for (B = x; y < B; )
                ((N = y++),
                  (qa = z + N * ab),
                  (A = r ? 2 * t.get(N) : 2 * N),
                  (N = r ? t.get(N) * Ta : N * Ta),
                  m
                    ? ((L = w.get(N + 2)),
                      (M[qa] = n.get(A) / L),
                      (M[qa + 1] = n.get(A + 1) / L),
                      (M[qa + 2] = 0),
                      (M[qa + 3] = 1 / L))
                    : ((M[qa] = n.get(A)), (M[qa + 1] = n.get(A + 1))),
                  (M[qa + G] = C ? w.get(N) : 0),
                  (M[qa + G + 1] = C ? w.get(N + 1) : 0));
              m ? (f += x * ab) : (d += x * ab);
              break;
            case 13:
              p = null;
              break;
            default:
              switch (g.prev._hx_index) {
                case 0:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 1:
                  g.iPos += 1;
                  g.fPos += 1;
                  break;
                case 2:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 3:
                  g.oPos += 1;
                  break;
                case 4:
                  g.fPos += 6;
                  break;
                case 5:
                  g.fPos += 4;
                  break;
                case 6:
                  g.fPos += 3;
                  break;
                case 7:
                  g.fPos += 4;
                  break;
                case 8:
                  g.oPos += 3;
                  break;
                case 9:
                  g.fPos += 4;
                  break;
                case 10:
                  g.fPos += 5;
                  g.oPos += 1;
                  break;
                case 12:
                  g.oPos += 4;
                  break;
                case 14:
                  g.oPos += 2;
                  g.bPos += 2;
                  break;
                case 15:
                  g.oPos += 4;
                  g.iiPos += 2;
                  g.ffPos += 1;
                  g.fPos += 1;
                  break;
                case 16:
                  g.oPos += 4;
                  g.iPos += 1;
                  g.fPos += 2;
                  g.bPos += 1;
                  break;
                case 17:
                  g.fPos += 2;
                  break;
                case 18:
                  g.fPos += 2;
                  break;
                case 19:
                  g.oPos += 1;
                  break;
                case 20:
                  g.oPos += 1;
              }
              g.prev = n;
          }
        }
        0 < c && a.__quadBuffer.flushVertexBufferData();
        if (0 < d) {
          c = a.__vertexBuffer;
          if (null == c || d > a.__vertexBufferCount)
            ((c = b.createVertexBuffer(d, 4, 0)),
              (a.__vertexBuffer = c),
              (a.__vertexBufferCount = d));
          c.uploadFromTypedArray(ih.toArrayBufferView(a.__vertexBufferData));
        }
        if (0 < f) {
          c = a.__vertexBufferUVT;
          if (null == c || f > a.__vertexBufferCountUVT)
            ((c = b.createVertexBuffer(f, 6, 0)),
              (a.__vertexBufferUVT = c),
              (a.__vertexBufferCountUVT = f));
          c.uploadFromTypedArray(ih.toArrayBufferView(a.__vertexBufferDataUVT));
        }
        na.__pool.release(k);
        ua.__pool.release(q);
      };
      Sb.isCompatible = function (a) {
        if (null != a.__owner.__worldScale9Grid) return !1;
        var b = new Be(a.__commands),
          c = !1,
          d = !1,
          f = !1,
          g = 0;
        for (a = a.__commands.types; g < a.length; ) {
          var k = a[g];
          ++g;
          switch (k._hx_index) {
            case 0:
              d = !0;
              f = c = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 1:
              d = !1;
              c = !0;
              f = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 3:
              c = d = !1;
              f = !0;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 8:
              if (d || f) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 9:
              if (c) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 12:
              if (d || f) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1;
                }
                b.prev = k;
              } else return (b.destroy(), !1);
              break;
            case 13:
              f = c = d = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 18:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            case 19:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1;
              }
              b.prev = k;
              break;
            default:
              return (b.destroy(), !1);
          }
        }
        b.destroy();
        return !0;
      };
      Sb.render = function (a, b) {
        if (a.__visible && 0 != a.__commands.get_length())
          if ((null != a.__bitmap && !a.__dirty) || !Sb.isCompatible(a)) {
            b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
            var c = b.__softwareRenderer.__worldTransform;
            b.__softwareRenderer.__worldTransform =
              7 == a.__owner.__drawableType
                ? ua.__identity
                : b.__worldTransform;
            A.render(a, b.__softwareRenderer);
            b.__softwareRenderer.__worldTransform = c;
          } else {
            a.__bitmap = null;
            a.__update(b.__worldTransform, b.__pixelRatio);
            var d = a.__width,
              f = a.__height;
            if (null != a.__bounds && 1 <= d && 1 <= f) {
              (a.__hardwareDirty ||
                (null == a.__quadBuffer &&
                  null == a.__vertexBuffer &&
                  null == a.__vertexBufferUVT)) &&
                Sb.buildBuffer(a, b);
              c = new Be(a.__commands);
              for (
                var g = b.__context3D,
                  k = ua.__pool.get(),
                  l = null,
                  p = null,
                  h = !1,
                  t = !1,
                  n = null,
                  w = 0,
                  r = 0,
                  x = 0,
                  C = 0,
                  m = 0,
                  G = a.__commands.types;
                m < G.length;

              )
                switch (((d = G[m]), ++m, d._hx_index)) {
                  case 0:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = Y.BEGIN_BITMAP_FILL;
                    t = c;
                    p = t.buffer.o[t.oPos];
                    h = t.buffer.b[t.bPos];
                    t = t.buffer.b[t.bPos + 1];
                    n = l = null;
                    break;
                  case 1:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = Y.BEGIN_FILL;
                    p = c;
                    n =
                      ((p.buffer.i[p.iPos] | 0) & 16777215) |
                      (((255 * p.buffer.f[p.fPos]) | 0) << 24);
                    p = l = null;
                    break;
                  case 3:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = Y.BEGIN_SHADER_FILL;
                    r = c;
                    l = r.buffer.o[r.oPos];
                    r = 0;
                    p =
                      null == l || null == l.shader || null == l.shader.__bitmap
                        ? null
                        : l.shader.__bitmap.input;
                    n = null;
                    break;
                  case 8:
                    if (null != p) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = Y.DRAW_QUADS;
                      var y = c;
                      d = y.buffer.o[y.oPos];
                      y = y.buffer.o[y.oPos + 1];
                      d =
                        null != y
                          ? y.get_length()
                          : Math.floor(d.get_length() / 4);
                      var B = b.__getMatrix(a.__owner.__renderTransform, 1);
                      null == l || Sb.maskRender
                        ? ((y = Sb.maskRender
                            ? b.__maskShader
                            : b.__initGraphicsShader(null)),
                          b.setShader(y),
                          b.applyMatrix(B),
                          b.applyBitmapData(p, t, h),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ),
                          b.updateShader())
                        : ((y = b.__initShaderBuffer(l)),
                          b.__setShaderBuffer(l),
                          b.applyMatrix(B),
                          b.applyBitmapData(p, !1, h),
                          b.applyAlpha(a.__owner.__worldAlpha),
                          b.applyColorTransform(
                            a.__owner.__worldColorTransform,
                          ));
                      for (B = w + d; w < B; ) {
                        d = Math.min(B - w, g.__quadIndexBufferElements) | 0;
                        if (0 >= d) break;
                        null == l || Sb.maskRender || b.__updateShaderBuffer(r);
                        null != y.__position &&
                          g.setVertexBufferAt(
                            y.__position.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * w,
                            2,
                          );
                        null != y.__textureCoord &&
                          g.setVertexBufferAt(
                            y.__textureCoord.index,
                            a.__quadBuffer.vertexBuffer,
                            16 * w + 2,
                            2,
                          );
                        g.drawTriangles(g.__quadIndexBuffer, 0, 2 * d);
                        r += 4 * d;
                        w += d;
                      }
                      b.__clearShader();
                    }
                    break;
                  case 9:
                    if (null != n) {
                      switch (c.prev._hx_index) {
                        case 0:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 1:
                          c.iPos += 1;
                          c.fPos += 1;
                          break;
                        case 2:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 3:
                          c.oPos += 1;
                          break;
                        case 4:
                          c.fPos += 6;
                          break;
                        case 5:
                          c.fPos += 4;
                          break;
                        case 6:
                          c.fPos += 3;
                          break;
                        case 7:
                          c.fPos += 4;
                          break;
                        case 8:
                          c.oPos += 3;
                          break;
                        case 9:
                          c.fPos += 4;
                          break;
                        case 10:
                          c.fPos += 5;
                          c.oPos += 1;
                          break;
                        case 12:
                          c.oPos += 4;
                          break;
                        case 14:
                          c.oPos += 2;
                          c.bPos += 2;
                          break;
                        case 15:
                          c.oPos += 4;
                          c.iiPos += 2;
                          c.ffPos += 1;
                          c.fPos += 1;
                          break;
                        case 16:
                          c.oPos += 4;
                          c.iPos += 1;
                          c.fPos += 2;
                          c.bPos += 1;
                          break;
                        case 17:
                          c.fPos += 2;
                          break;
                        case 18:
                          c.fPos += 2;
                          break;
                        case 19:
                          c.oPos += 1;
                          break;
                        case 20:
                          c.oPos += 1;
                      }
                      c.prev = Y.DRAW_RECT;
                      var N = c;
                      y = N.buffer.f[N.fPos];
                      B = N.buffer.f[N.fPos + 1];
                      d = N.buffer.f[N.fPos + 2];
                      f = N.buffer.f[N.fPos + 3];
                      N = n;
                      Sb.tempColorTransform.redOffset = (N >>> 16) & 255;
                      Sb.tempColorTransform.greenOffset = (N >>> 8) & 255;
                      Sb.tempColorTransform.blueOffset = N & 255;
                      Sb.tempColorTransform.__combine(
                        a.__owner.__worldColorTransform,
                      );
                      k.identity();
                      k.scale(d, f);
                      k.tx = y;
                      k.ty = B;
                      k.concat(a.__owner.__renderTransform);
                      d = Sb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(d);
                      b.applyMatrix(b.__getMatrix(k, 1));
                      b.applyBitmapData(Sb.blankBitmapData, !0, h);
                      b.applyAlpha(
                        (((N >>> 24) & 255) / 255) * a.__owner.__worldAlpha,
                      );
                      b.applyColorTransform(Sb.tempColorTransform);
                      b.updateShader();
                      y = Sb.blankBitmapData.getVertexBuffer(g);
                      null != d.__position &&
                        g.setVertexBufferAt(d.__position.index, y, 0, 3);
                      null != d.__textureCoord &&
                        g.setVertexBufferAt(d.__textureCoord.index, y, 3, 2);
                      d = Sb.blankBitmapData.getIndexBuffer(g);
                      g.drawTriangles(d);
                      r += 4;
                      b.__clearShader();
                    }
                    break;
                  case 12:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = Y.DRAW_TRIANGLES;
                    f = c;
                    y = f.buffer.o[f.oPos + 1];
                    B = f.buffer.o[f.oPos + 2];
                    d = f.buffer.o[f.oPos + 3];
                    N = null != y;
                    f = Math.floor(f.buffer.o[f.oPos].get_length() / 2);
                    y = N ? y.get_length() : f;
                    N = (B = null != B && B.get_length() >= 3 * f) ? 4 : 2;
                    f = N + 2;
                    var L = B ? a.__vertexBufferUVT : a.__vertexBuffer,
                      u = B ? C : x,
                      v = b.__getMatrix(a.__owner.__renderTransform, 1);
                    if (null == l || Sb.maskRender) {
                      var E = Sb.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null);
                      b.setShader(E);
                      b.applyMatrix(v);
                      b.applyBitmapData(p, t, h);
                      b.applyAlpha(a.__owner.__worldAlpha);
                      b.applyColorTransform(a.__owner.__worldColorTransform);
                      b.updateShader();
                    } else
                      ((E = b.__initShaderBuffer(l)),
                        b.__setShaderBuffer(l),
                        b.applyMatrix(v),
                        b.applyBitmapData(p, !1, h),
                        b.applyAlpha(1),
                        b.applyColorTransform(null),
                        b.__updateShaderBuffer(r));
                    null != E.__position &&
                      g.setVertexBufferAt(E.__position.index, L, u, B ? 4 : 2);
                    null != E.__textureCoord &&
                      g.setVertexBufferAt(E.__textureCoord.index, L, u + N, 2);
                    switch (d) {
                      case 0:
                        g.setCulling(0);
                        break;
                      case 1:
                        g.setCulling(3);
                        break;
                      case 2:
                        g.setCulling(1);
                    }
                    g.__drawTriangles(0, y);
                    r += y;
                    B ? (C += f * y) : (x += f * y);
                    switch (d) {
                      case 1:
                      case 2:
                        g.setCulling(0);
                    }
                    b.__clearShader();
                    break;
                  case 13:
                    l = n = p = null;
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                    g.setCulling(3);
                    break;
                  case 18:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = Y.MOVE_TO;
                    break;
                  case 19:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = Y.OVERRIDE_BLEND_MODE;
                    d = c;
                    b.__setBlendMode(d.buffer.o[d.oPos]);
                    break;
                  default:
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1;
                    }
                    c.prev = d;
                }
              ua.__pool.release(k);
            }
            a.__hardwareDirty = !1;
            a.set___dirty(!1);
          }
      };
      Sb.renderMask = function (a, b) {
        Sb.maskRender = !0;
        Sb.render(a, b);
        Sb.maskRender = !1;
      };
      Sb.resizeVertexBuffer = function (a, b, c) {
        var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
          f = null;
        if (null == d) {
          var g = (f = null),
            k = null,
            l = null,
            p = null;
          f = c =
            null != c
              ? new Float32Array(c)
              : null != f
                ? new Float32Array(f)
                : null != g
                  ? new Float32Array(g.__array)
                  : null != k
                    ? new Float32Array(k)
                    : null != l
                      ? null == p
                        ? new Float32Array(l, 0)
                        : new Float32Array(l, 0, p)
                      : null;
        } else
          c > d.length &&
            ((p = l = k = g = f = null),
            (f = c =
              null != c
                ? new Float32Array(c)
                : null != f
                  ? new Float32Array(f)
                  : null != g
                    ? new Float32Array(g.__array)
                    : null != k
                      ? new Float32Array(k)
                      : null != l
                        ? null == p
                          ? new Float32Array(l, 0)
                          : new Float32Array(l, 0, p)
                        : null),
            f.set(d));
        null != f &&
          (b ? (a.__vertexBufferDataUVT = f) : (a.__vertexBufferData = f));
      };
      var ig = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Cd.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.display._internal.Context3DMaskShader'] = ig;
      ig.__name__ = 'openfl.display._internal.Context3DMaskShader';
      ig.__super__ = Cd;
      ig.prototype = u(Cd.prototype, { __class__: ig });
      var Qe = function () {};
      h['openfl.display._internal.Context3DShape'] = Qe;
      Qe.__name__ = 'openfl.display._internal.Context3DShape';
      Qe.render = function (a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha)) {
          var c = a.__graphics;
          if (null != c) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            Sb.render(c, b);
            if (null != c.__bitmap && c.__visible) {
              var d = b.__context3D,
                f = b.__initDisplayShader(a.__worldShader);
              b.setShader(f);
              b.applyBitmapData(c.__bitmap, !0);
              var g = ua.__pool.get();
              g.scale(1 / c.__bitmapScale, 1 / c.__bitmapScale);
              g.concat(c.__worldTransform);
              b.applyMatrix(b.__getMatrix(g, 1));
              ua.__pool.release(g);
              b.applyAlpha(a.__worldAlpha);
              b.applyColorTransform(a.__worldColorTransform);
              b.updateShader();
              g = c.__bitmap.getVertexBuffer(d);
              null != f.__position &&
                d.setVertexBufferAt(f.__position.index, g, 0, 3);
              null != f.__textureCoord &&
                d.setVertexBufferAt(f.__textureCoord.index, g, 3, 2);
              c = c.__bitmap.getIndexBuffer(d);
              d.drawTriangles(c);
              b.__clearShader();
            }
            b.__popMaskObject(a);
          }
        }
      };
      Qe.renderMask = function (a, b) {
        var c = a.__graphics;
        if (null != c && (Sb.renderMask(c, b), null != c.__bitmap)) {
          a = b.__context3D;
          var d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(c.__bitmap, !0);
          b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
          b.updateShader();
          var f = c.__bitmap.getVertexBuffer(a);
          null != d.__position &&
            a.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            a.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          c = c.__bitmap.getIndexBuffer(a);
          a.drawTriangles(c);
          b.__clearShader();
        }
      };
      var Aj = function () {};
      h['openfl.display._internal.Context3DSimpleButton'] = Aj;
      Aj.__name__ = 'openfl.display._internal.Context3DSimpleButton';
      Aj.renderDrawable = function (a, b) {
        !a.__renderable ||
          0 >= a.__worldAlpha ||
          null == a.__currentState ||
          (b.__pushMaskObject(a),
          b.__renderDrawable(a.__currentState),
          b.__popMaskObject(a),
          b.__renderEvent(a));
      };
      Aj.renderDrawableMask = function (a, b) {
        null != a.__currentState && b.__renderDrawableMask(a.__currentState);
      };
      var mf = function () {};
      h['openfl.display._internal.Context3DTextField'] = mf;
      mf.__name__ = 'openfl.display._internal.Context3DTextField';
      mf.render = function (a, b) {
        b.__softwareRenderer.__pixelRatio = b.__pixelRatio;
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          f = d ? b.textBounds : b.bounds,
          g = a.__graphics,
          k = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == g.__bounds && (g.__bounds = new na());
          if (0 == a.get_text().length) {
            k = b.bounds.width - 4;
            var l = a.get_defaultTextFormat().align;
            k = 3 == l ? 0 : 4 == l ? k : k / 2;
            switch (l) {
              case 0:
                k += a.get_defaultTextFormat().leftMargin / 2;
                k -= a.get_defaultTextFormat().rightMargin / 2;
                k += a.get_defaultTextFormat().indent / 2;
                k += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                k -= a.get_defaultTextFormat().rightMargin;
            }
            d && ((f.y = b.bounds.y), (f.x = k));
          }
          g.__bounds.copyFrom(f);
        }
        l = c.__pixelRatio;
        g.__update(c.__worldTransform, l);
        if (a.__dirty || g.__softwareDirty) {
          var p = Math.round(g.__width * l),
            h = Math.round(g.__height * l);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            ba.context = g.__context;
            g.__canvas.width = p;
            g.__canvas.height = h;
            c.__isDOM &&
              ((g.__canvas.style.width = Math.round(p / l) + 'px'),
              (g.__canvas.style.height = Math.round(h / l) + 'px'));
            p = ua.__pool.get();
            p.scale(l, l);
            p.concat(g.__renderTransform);
            ba.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            ua.__pool.release(p);
            null == ba.clearRect &&
              (ba.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            ba.clearRect &&
              ba.context.clearRect(0, 0, g.__canvas.width, g.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              d = b.text;
              g.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                ba.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                if (b.background) {
                  var t = P.hex(b.backgroundColor & 16777215, 6);
                  ba.context.fillStyle = '#' + t;
                  ba.context.fill();
                }
                b.border &&
                  ((ba.context.lineWidth = 1),
                  (t = P.hex(b.borderColor & 16777215, 6)),
                  (ba.context.strokeStyle = '#' + t),
                  ba.context.stroke());
              }
              ba.context.textBaseline = 'alphabetic';
              ba.context.textAlign = 'start';
              c = -a.get_scrollH();
              var n = (k = 0);
              for (t = a.get_scrollV() - 1; n < t; ) {
                var w = n++;
                k -= b.lineHeights.get(w);
              }
              var r;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((h = p.next()), !(h.lineIndex < a.get_scrollV() - 1))) {
                  if (h.lineIndex > b.get_bottomScrollV() - 1) break;
                  var x = '#' + P.hex(h.format.color & 16777215, 6);
                  ba.context.font = Eb.getFont(h.format);
                  ba.context.fillStyle = x;
                  ba.context.fillText(
                    d.substring(h.startIndex, h.endIndex),
                    h.offsetX + c - f.x,
                    h.offsetY + h.ascent + k - f.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex
                      ) {
                        n = r = 0;
                        for (t = a.__caretIndex - h.startIndex; n < t; ) {
                          w = n++;
                          if (h.positions.length <= w) break;
                          r += h.positions[w];
                        }
                        n = 0;
                        t = a.get_scrollV();
                        for (w = h.lineIndex + 1; t < w; ) {
                          var C = t++;
                          n += b.lineHeights.get(C - 1);
                        }
                        ba.context.beginPath();
                        t = P.hex(h.format.color & 16777215, 6);
                        ba.context.strokeStyle = '#' + t;
                        ba.context.moveTo(
                          h.offsetX + r - a.get_scrollH() - f.x,
                          n + 2 - f.y,
                        );
                        ba.context.lineWidth = 1;
                        ba.context.lineTo(
                          h.offsetX + r - a.get_scrollH() - f.x,
                          n +
                            Eb.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            f.y,
                        );
                        ba.context.stroke();
                        ba.context.closePath();
                      }
                    } else if (
                      (h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex) ||
                      (h.startIndex <= a.__selectionIndex &&
                        h.endIndex >= a.__selectionIndex) ||
                      (h.startIndex > a.__caretIndex &&
                        h.endIndex < a.__selectionIndex) ||
                      (h.startIndex > a.__selectionIndex &&
                        h.endIndex < a.__caretIndex)
                    )
                      ((r = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (n = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        h.startIndex > r && (r = h.startIndex),
                        h.endIndex < n && (n = h.endIndex),
                        (w = a.getCharBoundaries(r)),
                        n >= h.endIndex
                          ? ((t = a.getCharBoundaries(h.endIndex - 1)),
                            null != t && (t.x += t.width + 2))
                          : (t = a.getCharBoundaries(n)),
                        null != w &&
                          null != t &&
                          ((ba.context.fillStyle = '#000000'),
                          ba.context.fillRect(
                            w.x + c - f.x,
                            w.y + k,
                            t.x - w.x,
                            h.height,
                          ),
                          (ba.context.fillStyle = '#FFFFFF'),
                          ba.context.fillText(
                            d.substring(r, n),
                            c + w.x - f.x,
                            h.offsetY + h.ascent + k,
                          )));
                  h.format.underline &&
                    (ba.context.beginPath(),
                    (ba.context.strokeStyle = x),
                    (ba.context.lineWidth = 1),
                    (x = h.offsetX + c - f.x),
                    (r =
                      Math.ceil(h.offsetY + k + h.ascent - f.y) +
                      Math.floor(0.185 * h.ascent) +
                      0.5),
                    ba.context.moveTo(x, r),
                    ba.context.lineTo(x + h.width, r),
                    ba.context.stroke(),
                    ba.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? ba.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                  : ba.context.rect(0, 0, f.width, f.height),
                  b.background &&
                    ((t = P.hex(b.backgroundColor & 16777215, 6)),
                    (ba.context.fillStyle = '#' + t),
                    ba.context.fill()),
                  b.border &&
                    ((ba.context.lineWidth = 1),
                    (ba.context.lineCap = 'square'),
                    (t = P.hex(b.borderColor & 16777215, 6)),
                    (ba.context.strokeStyle = '#' + t),
                    ba.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : k);
                n = k = 0;
                for (t = a.get_scrollV() - 1; n < t; )
                  ((w = n++), (k += b.lineHeights.get(w)));
                ba.context.beginPath();
                t = P.hex(a.get_defaultTextFormat().color & 16777215, 6);
                ba.context.strokeStyle = '#' + t;
                ba.context.moveTo(c + 2.5, k + 2.5);
                ba.context.lineWidth = 1;
                ba.context.lineTo(
                  c + 2.5,
                  k + Eb.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                ba.context.stroke();
                ba.context.closePath();
              }
            }
            g.__bitmap = $b.fromCanvas(a.__graphics.__canvas);
            g.__bitmapScale = l;
            g.__visible = !0;
            a.__dirty = !1;
            g.__softwareDirty = !1;
            g.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      mf.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            (mf.render(a, b),
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            ))
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = na.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              na.__pool.release(d);
            }
            null != a.__graphics && Qe.render(a, b);
          }
        } else Td.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      mf.renderDrawableMask = function (a, b) {
        mf.renderMask(a, b);
        jg.renderDrawableMask(a, b);
      };
      mf.renderMask = function (a, b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          f = d ? b.textBounds : b.bounds,
          g = a.__graphics,
          k = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == g.__bounds && (g.__bounds = new na());
          if (0 == a.get_text().length) {
            k = b.bounds.width - 4;
            var l = a.get_defaultTextFormat().align;
            k = 3 == l ? 0 : 4 == l ? k : k / 2;
            switch (l) {
              case 0:
                k += a.get_defaultTextFormat().leftMargin / 2;
                k -= a.get_defaultTextFormat().rightMargin / 2;
                k += a.get_defaultTextFormat().indent / 2;
                k += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                k += a.get_defaultTextFormat().leftMargin;
                k += a.get_defaultTextFormat().indent;
                k += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                k -= a.get_defaultTextFormat().rightMargin;
            }
            d && ((f.y = b.bounds.y), (f.x = k));
          }
          g.__bounds.copyFrom(f);
        }
        l = c.__pixelRatio;
        g.__update(c.__worldTransform, l);
        if (a.__dirty || g.__softwareDirty) {
          var p = Math.round(g.__width * l),
            h = Math.round(g.__height * l);
          if (
            !(
              (null != b.text && '' != b.text) ||
              b.background ||
              b.border ||
              b.__hasFocus ||
              (1 == b.type && b.selectable)
            ) ||
            ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
          )
            ((a.__graphics.__canvas = null),
              (a.__graphics.__context = null),
              (a.__graphics.__bitmap = null),
              (a.__graphics.__softwareDirty = !1),
              a.__graphics.set___dirty(!1),
              (a.__dirty = !1));
          else {
            null == a.__graphics.__canvas &&
              ((a.__graphics.__canvas =
                window.document.createElement('canvas')),
              (a.__graphics.__context =
                a.__graphics.__canvas.getContext('2d')));
            ba.context = g.__context;
            g.__canvas.width = p;
            g.__canvas.height = h;
            c.__isDOM &&
              ((g.__canvas.style.width = Math.round(p / l) + 'px'),
              (g.__canvas.style.height = Math.round(h / l) + 'px'));
            p = ua.__pool.get();
            p.scale(l, l);
            p.concat(g.__renderTransform);
            ba.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
            ua.__pool.release(p);
            null == ba.clearRect &&
              (ba.clearRect =
                'undefined' !== typeof navigator &&
                'undefined' !== typeof navigator.isCocoonJS);
            ba.clearRect &&
              ba.context.clearRect(0, 0, g.__canvas.width, g.__canvas.height);
            if ((null != b.text && '' != b.text) || b.__hasFocus) {
              d = b.text;
              g.__context.imageSmoothingEnabled =
                !c.__allowSmoothing ||
                (0 == b.antiAliasType && 400 == b.sharpness)
                  ? !1
                  : !0;
              if (b.border || b.background) {
                ba.context.rect(0.5, 0.5, f.width - 1, f.height - 1);
                if (b.background) {
                  var t = P.hex(b.backgroundColor & 16777215, 6);
                  ba.context.fillStyle = '#' + t;
                  ba.context.fill();
                }
                b.border &&
                  ((ba.context.lineWidth = 1),
                  (t = P.hex(b.borderColor & 16777215, 6)),
                  (ba.context.strokeStyle = '#' + t),
                  ba.context.stroke());
              }
              ba.context.textBaseline = 'alphabetic';
              ba.context.textAlign = 'start';
              c = -a.get_scrollH();
              var n = (k = 0);
              for (t = a.get_scrollV() - 1; n < t; ) {
                var w = n++;
                k -= b.lineHeights.get(w);
              }
              var r;
              for (p = b.layoutGroups.iterator(); p.hasNext(); )
                if (((h = p.next()), !(h.lineIndex < a.get_scrollV() - 1))) {
                  if (h.lineIndex > b.get_bottomScrollV() - 1) break;
                  var x = '#' + P.hex(h.format.color & 16777215, 6);
                  ba.context.font = Eb.getFont(h.format);
                  ba.context.fillStyle = x;
                  ba.context.fillText(
                    d.substring(h.startIndex, h.endIndex),
                    h.offsetX + c - f.x,
                    h.offsetY + h.ascent + k - f.y,
                  );
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (
                        a.__showCursor &&
                        h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex
                      ) {
                        n = r = 0;
                        for (t = a.__caretIndex - h.startIndex; n < t; ) {
                          w = n++;
                          if (h.positions.length <= w) break;
                          r += h.positions[w];
                        }
                        n = 0;
                        t = a.get_scrollV();
                        for (w = h.lineIndex + 1; t < w; ) {
                          var C = t++;
                          n += b.lineHeights.get(C - 1);
                        }
                        ba.context.beginPath();
                        t = P.hex(h.format.color & 16777215, 6);
                        ba.context.strokeStyle = '#' + t;
                        ba.context.moveTo(
                          h.offsetX + r - a.get_scrollH() - f.x,
                          n + 2 - f.y,
                        );
                        ba.context.lineWidth = 1;
                        ba.context.lineTo(
                          h.offsetX + r - a.get_scrollH() - f.x,
                          n +
                            Eb.getFormatHeight(a.get_defaultTextFormat()) -
                            1 -
                            f.y,
                        );
                        ba.context.stroke();
                        ba.context.closePath();
                      }
                    } else if (
                      (h.startIndex <= a.__caretIndex &&
                        h.endIndex >= a.__caretIndex) ||
                      (h.startIndex <= a.__selectionIndex &&
                        h.endIndex >= a.__selectionIndex) ||
                      (h.startIndex > a.__caretIndex &&
                        h.endIndex < a.__selectionIndex) ||
                      (h.startIndex > a.__selectionIndex &&
                        h.endIndex < a.__caretIndex)
                    )
                      ((r = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                        (n = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                        h.startIndex > r && (r = h.startIndex),
                        h.endIndex < n && (n = h.endIndex),
                        (w = a.getCharBoundaries(r)),
                        n >= h.endIndex
                          ? ((t = a.getCharBoundaries(h.endIndex - 1)),
                            null != t && (t.x += t.width + 2))
                          : (t = a.getCharBoundaries(n)),
                        null != w &&
                          null != t &&
                          ((ba.context.fillStyle = '#000000'),
                          ba.context.fillRect(
                            w.x + c - f.x,
                            w.y + k,
                            t.x - w.x,
                            h.height,
                          ),
                          (ba.context.fillStyle = '#FFFFFF'),
                          ba.context.fillText(
                            d.substring(r, n),
                            c + w.x - f.x,
                            h.offsetY + h.ascent + k,
                          )));
                  h.format.underline &&
                    (ba.context.beginPath(),
                    (ba.context.strokeStyle = x),
                    (ba.context.lineWidth = 1),
                    (x = h.offsetX + c - f.x),
                    (r =
                      Math.ceil(h.offsetY + k + h.ascent - f.y) +
                      Math.floor(0.185 * h.ascent) +
                      0.5),
                    ba.context.moveTo(x, r),
                    ba.context.lineTo(x + h.width, r),
                    ba.context.stroke(),
                    ba.context.closePath());
                }
            } else {
              if (b.border || b.background)
                (b.border
                  ? ba.context.rect(0.5, 0.5, f.width - 1, f.height - 1)
                  : ba.context.rect(0, 0, f.width, f.height),
                  b.background &&
                    ((t = P.hex(b.backgroundColor & 16777215, 6)),
                    (ba.context.fillStyle = '#' + t),
                    ba.context.fill()),
                  b.border &&
                    ((ba.context.lineWidth = 1),
                    (ba.context.lineCap = 'square'),
                    (t = P.hex(b.borderColor & 16777215, 6)),
                    (ba.context.strokeStyle = '#' + t),
                    ba.context.stroke()));
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : k);
                n = k = 0;
                for (t = a.get_scrollV() - 1; n < t; )
                  ((w = n++), (k += b.lineHeights.get(w)));
                ba.context.beginPath();
                t = P.hex(a.get_defaultTextFormat().color & 16777215, 6);
                ba.context.strokeStyle = '#' + t;
                ba.context.moveTo(c + 2.5, k + 2.5);
                ba.context.lineWidth = 1;
                ba.context.lineTo(
                  c + 2.5,
                  k + Eb.getFormatHeight(a.get_defaultTextFormat()) - 1,
                );
                ba.context.stroke();
                ba.context.closePath();
              }
            }
            g.__bitmap = $b.fromCanvas(a.__graphics.__canvas);
            g.__bitmapScale = l;
            g.__visible = !0;
            a.__dirty = !1;
            g.__softwareDirty = !1;
            g.set___dirty(!1);
          }
        }
        a.__graphics.__hardwareDirty = !1;
      };
      var X = function () {};
      h['openfl.display._internal.Context3DTilemap'] = X;
      X.__name__ = 'openfl.display._internal.Context3DTilemap';
      X.buildBuffer = function (a, b) {
        if (
          !a.__renderable ||
          0 == a.__group.__tiles.length ||
          0 >= a.__worldAlpha
        )
          a.__group.__dirty = !1;
        else {
          X.numTiles = 0;
          X.vertexBufferData =
            null != a.__buffer ? a.__buffer.vertexBufferData : null;
          X.vertexDataPosition = 0;
          var c = na.__pool.get(),
            d = ua.__pool.get(),
            f = ua.__pool.get();
          X.dataPerVertex = 4;
          a.tileAlphaEnabled && X.dataPerVertex++;
          a.tileColorTransformEnabled && (X.dataPerVertex += 8);
          X.buildBufferTileContainer(
            a,
            a.__group,
            b,
            f,
            a.__tileset,
            a.tileAlphaEnabled,
            a.__worldAlpha,
            a.tileColorTransformEnabled,
            a.__worldColorTransform,
            null,
            c,
            d,
          );
          a.__buffer.flushVertexBufferData();
          na.__pool.release(c);
          ua.__pool.release(d);
          ua.__pool.release(f);
        }
      };
      X.buildBufferTileContainer = function (
        a,
        b,
        c,
        d,
        f,
        g,
        k,
        l,
        p,
        h,
        t,
        n,
        w,
      ) {
        null == w && (w = !0);
        var q = ua.__pool.get(),
          r = c.__roundPixels,
          x = b.__tiles;
        w && X.resizeBuffer(a, X.numTiles + X.getRecursiveLength(b));
        w = null;
        for (
          var C, m, G, y, A, B, N, L, u, v, E, D = g ? 5 : 4, wa = 0;
          wa < x.length;

        ) {
          y = x[wa];
          ++wa;
          q.setTo(1, 0, 0, 1, -y.get_originX(), -y.get_originY());
          q.concat(y.get_matrix());
          q.concat(d);
          r && ((q.tx = Math.round(q.tx)), (q.ty = Math.round(q.ty)));
          var J = null != y.get_tileset() ? y.get_tileset() : f;
          var P = y.get_alpha() * k;
          var Ta = y.get_visible();
          y.__dirty = !1;
          if (Ta && !(0 >= P))
            if (
              (l &&
                (null != y.get_colorTransform()
                  ? null == p
                    ? (w = y.get_colorTransform())
                    : (null == X.cacheColorTransform &&
                        (X.cacheColorTransform = new Lb()),
                      (w = X.cacheColorTransform),
                      (w.redMultiplier =
                        p.redMultiplier * y.get_colorTransform().redMultiplier),
                      (w.greenMultiplier =
                        p.greenMultiplier *
                        y.get_colorTransform().greenMultiplier),
                      (w.blueMultiplier =
                        p.blueMultiplier *
                        y.get_colorTransform().blueMultiplier),
                      (w.alphaMultiplier =
                        p.alphaMultiplier *
                        y.get_colorTransform().alphaMultiplier),
                      (w.redOffset =
                        p.redOffset + y.get_colorTransform().redOffset),
                      (w.greenOffset =
                        p.greenOffset + y.get_colorTransform().greenOffset),
                      (w.blueOffset =
                        p.blueOffset + y.get_colorTransform().blueOffset),
                      (w.alphaOffset =
                        p.alphaOffset + y.get_colorTransform().alphaOffset))
                  : (w = p)),
              g || (P = 1),
              0 < y.__length)
            )
              X.buildBufferTileContainer(
                a,
                y,
                c,
                q,
                J,
                g,
                P,
                l,
                w,
                h,
                t,
                n,
                !1,
              );
            else if (
              null != J &&
              ((Ta = y.get_id()), (C = J.__bitmapData), null != C)
            ) {
              if (-1 == Ta) {
                m = y.__rect;
                if (null == m || 0 >= m.width || 0 >= m.height) continue;
                J = m.x / C.width;
                y = m.y / C.height;
                Ta = m.get_right() / C.width;
                A = m.get_bottom() / C.height;
              } else {
                C = J.__data[Ta];
                if (null == C) continue;
                t.setTo(C.x, C.y, C.width, C.height);
                m = t;
                J = C.__uvX;
                y = C.__uvY;
                Ta = C.__uvWidth;
                A = C.__uvHeight;
              }
              C = m.width;
              G = m.height;
              m = 0 * q.a + 0 * q.c + q.tx;
              B = 0 * q.b + 0 * q.d + q.ty;
              N = C * q.a + 0 * q.c + q.tx;
              L = C * q.b + 0 * q.d + q.ty;
              u = 0 * q.a + G * q.c + q.tx;
              v = 0 * q.b + G * q.d + q.ty;
              E = C * q.a + G * q.c + q.tx;
              G = C * q.b + G * q.d + q.ty;
              C = X.vertexDataPosition;
              X.vertexBufferData[C] = m;
              X.vertexBufferData[C + 1] = B;
              X.vertexBufferData[C + 2] = J;
              X.vertexBufferData[C + 3] = y;
              X.vertexBufferData[C + X.dataPerVertex] = N;
              X.vertexBufferData[C + X.dataPerVertex + 1] = L;
              X.vertexBufferData[C + X.dataPerVertex + 2] = Ta;
              X.vertexBufferData[C + X.dataPerVertex + 3] = y;
              X.vertexBufferData[C + 2 * X.dataPerVertex] = u;
              X.vertexBufferData[C + 2 * X.dataPerVertex + 1] = v;
              X.vertexBufferData[C + 2 * X.dataPerVertex + 2] = J;
              X.vertexBufferData[C + 2 * X.dataPerVertex + 3] = A;
              X.vertexBufferData[C + 3 * X.dataPerVertex] = E;
              X.vertexBufferData[C + 3 * X.dataPerVertex + 1] = G;
              X.vertexBufferData[C + 3 * X.dataPerVertex + 2] = Ta;
              X.vertexBufferData[C + 3 * X.dataPerVertex + 3] = A;
              g &&
                ((X.vertexBufferData[C + 0 * X.dataPerVertex + 4] = P),
                (X.vertexBufferData[C + X.dataPerVertex + 4] = P),
                (X.vertexBufferData[C + 2 * X.dataPerVertex + 4] = P),
                (X.vertexBufferData[C + 3 * X.dataPerVertex + 4] = P));
              if (l)
                if (null != w)
                  for (P = 0; 4 > P; )
                    ((J = P++),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D] =
                        w.redMultiplier),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 1] =
                        w.greenMultiplier),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 2] =
                        w.blueMultiplier),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 3] =
                        w.alphaMultiplier),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 4] =
                        w.redOffset),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 5] =
                        w.greenOffset),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 6] =
                        w.blueOffset),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 7] =
                        w.alphaOffset));
                else
                  for (P = 0; 4 > P; )
                    ((J = P++),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D] = 1),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 1] = 1),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 2] = 1),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 3] = 1),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 4] = 0),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 5] = 0),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 6] = 0),
                      (X.vertexBufferData[C + X.dataPerVertex * J + D + 7] =
                        0));
              X.vertexDataPosition += 4 * X.dataPerVertex;
            }
        }
        b.__dirty = !1;
        ua.__pool.release(q);
      };
      X.flush = function (a, b, c) {
        null == X.currentShader && (X.currentShader = b.__defaultDisplayShader);
        if (
          X.bufferPosition > X.lastFlushedPosition &&
          null != X.currentBitmapData &&
          null != X.currentShader
        ) {
          var d = b.__initDisplayShader(X.currentShader);
          b.setShader(d);
          b.applyBitmapData(X.currentBitmapData, a.smoothing);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          a.tileAlphaEnabled ? b.useAlphaArray() : b.applyAlpha(a.__worldAlpha);
          a.tileBlendModeEnabled && b.__setBlendMode(c);
          a.tileColorTransformEnabled
            ? (b.applyHasColorTransform(!0), b.useColorTransformArray())
            : b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          c = a.__buffer.vertexBuffer;
          for (
            var f = X.lastFlushedPosition * X.dataPerVertex * 4, g;
            X.lastFlushedPosition < X.bufferPosition;

          ) {
            g =
              Math.min(
                X.bufferPosition - X.lastFlushedPosition,
                X.context.__quadIndexBufferElements,
              ) | 0;
            if (0 >= g) break;
            null != d.__position &&
              X.context.setVertexBufferAt(d.__position.index, c, f, 2);
            null != d.__textureCoord &&
              X.context.setVertexBufferAt(d.__textureCoord.index, c, f + 2, 2);
            a.tileAlphaEnabled &&
              null != d.__alpha &&
              X.context.setVertexBufferAt(d.__alpha.index, c, f + 4, 1);
            if (a.tileColorTransformEnabled) {
              var k = a.tileAlphaEnabled ? 5 : 4;
              null != d.__colorMultiplier &&
                X.context.setVertexBufferAt(
                  d.__colorMultiplier.index,
                  c,
                  f + k,
                  4,
                );
              null != d.__colorOffset &&
                X.context.setVertexBufferAt(
                  d.__colorOffset.index,
                  c,
                  f + k + 4,
                  4,
                );
            }
            X.context.drawTriangles(X.context.__quadIndexBuffer, 0, 2 * g);
            X.lastFlushedPosition += g;
          }
          b.__clearShader();
        }
        X.lastUsedBitmapData = X.currentBitmapData;
        X.lastUsedShader = X.currentShader;
      };
      X.getRecursiveLength = function (a) {
        a = a.__tiles;
        for (var b = 0, c = 0; c < a.length; ) {
          var d = a[c];
          ++c;
          0 < d.__length ? (b += X.getRecursiveLength(d)) : ++b;
        }
        return b;
      };
      X.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          ((X.context = b.__context3D), X.buildBuffer(a, b), 0 != X.numTiles)
        ) {
          X.bufferPosition = 0;
          X.lastFlushedPosition = 0;
          X.lastUsedBitmapData = null;
          X.lastUsedShader = null;
          X.currentBitmapData = null;
          X.currentShader = null;
          X.currentBlendMode = a.__worldBlendMode;
          a.tileBlendModeEnabled || b.__setBlendMode(X.currentBlendMode);
          b.__pushMaskObject(a);
          var c = na.__pool.get();
          c.setTo(0, 0, a.__width, a.__height);
          b.__pushMaskRect(c, a.__renderTransform);
          X.renderTileContainer(
            a,
            b,
            a.__group,
            a.__worldShader,
            a.__tileset,
            a.__worldAlpha,
            a.tileBlendModeEnabled,
            X.currentBlendMode,
            null,
          );
          X.flush(a, b, X.currentBlendMode);
          b.__popMaskRect();
          b.__popMaskObject(a);
          na.__pool.release(c);
        }
      };
      X.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (
            !(
              (null == a.opaqueBackground && null == a.__graphics) ||
              !a.__renderable ||
              0 >= a.__worldAlpha
            )
          ) {
            if (
              null != a.opaqueBackground &&
              !a.__isCacheBitmapRender &&
              0 < a.get_width() &&
              0 < a.get_height()
            ) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = na.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var f = a.opaqueBackground;
              c.clear(
                ((f >>> 16) & 255) / 255,
                ((f >>> 8) & 255) / 255,
                (f & 255) / 255,
                1,
                0,
                0,
                1,
              );
              b.__popMaskRect();
              b.__popMaskObject(a);
              na.__pool.release(d);
            }
            null != a.__graphics && Qe.render(a, b);
          }
          X.render(a, b);
        } else Td.render(a.__cacheBitmap, b);
        b.__renderEvent(a);
      };
      X.renderDrawableMask = function (a, b) {
        if (null != a.opaqueBackground || null != a.__graphics)
          (null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height(),
            null != a.__graphics && Qe.renderMask(a, b));
        X.renderMask(a, b);
      };
      X.renderTileContainer = function (a, b, c, d, f, g, k, l, p) {
        c = c.__tiles;
        for (var h, q, n, t = null, w, r = 0; r < c.length; ) {
          var C = c[r];
          ++r;
          h = null != C.get_tileset() ? C.get_tileset() : f;
          q = C.get_alpha() * g;
          if ((n = C.get_visible()) && !(0 >= q))
            if (
              ((n = null != C.get_shader() ? C.get_shader() : d),
              k && (t = null != C.__blendMode ? C.__blendMode : l),
              0 < C.__length)
            )
              X.renderTileContainer(a, b, C, n, h, q, k, t, p);
            else if (
              null != h &&
              ((w = C.get_id()), (q = h.__bitmapData), null != q)
            ) {
              if (-1 == w) {
                if (
                  ((h = C.__rect), null == h || 0 >= h.width || 0 >= h.height)
                )
                  continue;
              } else if (((h = h.__data[w]), null == h)) continue;
              (n != X.currentShader ||
                (q != X.currentBitmapData && null != X.currentBitmapData) ||
                X.currentBlendMode != t) &&
                X.flush(a, b, X.currentBlendMode);
              X.currentBitmapData = q;
              X.currentShader = n;
              X.currentBlendMode = t;
              X.bufferPosition++;
            }
        }
      };
      X.renderMask = function (a, b) {};
      X.resizeBuffer = function (a, b) {
        X.numTiles = b;
        null == a.__buffer
          ? (a.__buffer = new Hh(
              X.context,
              Mf.QUADS,
              X.numTiles,
              X.dataPerVertex,
            ))
          : a.__buffer.resize(X.numTiles, X.dataPerVertex);
        X.vertexBufferData = a.__buffer.vertexBufferData;
      };
      var Ud = function () {};
      h['openfl.display._internal.Context3DVideo'] = Ud;
      Ud.__name__ = 'openfl.display._internal.Context3DVideo';
      Ud.render = function (a, b) {
        if (
          a.__renderable &&
          !(0 >= a.__worldAlpha) &&
          null != a.__stream &&
          null != a.__stream.__video
        ) {
          var c = b.__context3D,
            d = c.gl;
          if (null != a.__getTexture(c)) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var f = b.__initDisplayShader(a.__worldShader);
            b.setShader(f);
            b.applyBitmapData(null, !0, !1);
            b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
            b.applyAlpha(a.__worldAlpha);
            b.applyColorTransform(a.__worldColorTransform);
            null != f.__textureSize &&
              ((Ud.__textureSizeValue[0] =
                null != a.__stream ? a.__stream.__video.videoWidth : 0),
              (Ud.__textureSizeValue[1] =
                null != a.__stream ? a.__stream.__video.videoHeight : 0),
              (f.__textureSize.value = Ud.__textureSizeValue));
            b.updateShader();
            c.setTextureAt(0, a.__getTexture(c));
            c.__flushGLTextures();
            d.uniform1i(f.__texture.index, 0);
            a.smoothing
              ? (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.LINEAR),
                d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.LINEAR))
              : (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST),
                d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST));
            d = a.__getVertexBuffer(c);
            null != f.__position &&
              c.setVertexBufferAt(f.__position.index, d, 0, 3);
            null != f.__textureCoord &&
              c.setVertexBufferAt(f.__textureCoord.index, d, 3, 2);
            f = a.__getIndexBuffer(c);
            c.drawTriangles(f);
            b.__clearShader();
            b.__popMaskObject(a);
          }
        }
      };
      Ud.renderDrawable = function (a, b) {
        Ud.render(a, b);
        b.__renderEvent(a);
      };
      Ud.renderDrawableMask = function (a, b) {
        Ud.renderMask(a, b);
      };
      Ud.renderMask = function (a, b) {
        if (null != a.__stream && null != a.__stream.__video) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(ig.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          b.updateShader();
          var f = a.__getVertexBuffer(c);
          null != d.__position &&
            c.setVertexBufferAt(d.__position.index, f, 0, 3);
          null != d.__textureCoord &&
            c.setVertexBufferAt(d.__textureCoord.index, f, 3, 2);
          a = a.__getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader();
        }
      };
      var Xb = function () {};
      h['openfl.display._internal.DOMBitmap'] = Xb;
      Xb.__name__ = 'openfl.display._internal.DOMBitmap';
      Xb.clear = function (a, b) {
        td.clear(a, b);
        null != a.__image &&
          (b.element.removeChild(a.__image),
          (a.__image = null),
          (a.__style = null));
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Xb.renderCanvas = function (a, b) {
        null != a.__image &&
          (b.element.removeChild(a.__image), (a.__image = null));
        null == a.__canvas &&
          ((a.__canvas = window.document.createElement('canvas')),
          (a.__context = a.__canvas.getContext('2d')),
          (a.__imageVersion = -1),
          (b.__allowSmoothing && a.smoothing) ||
            (a.__context.imageSmoothingEnabled = !1),
          b.__initializeElement(a, a.__canvas));
        a.__imageVersion != a.__bitmapData.image.version &&
          (Na.convertToCanvas(a.__bitmapData.image),
          (a.__canvas.width = a.__bitmapData.width + 1),
          (a.__canvas.width = a.__bitmapData.width),
          (a.__canvas.height = a.__bitmapData.height),
          a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0),
          (a.__imageVersion = a.__bitmapData.image.version));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      Xb.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var c = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != c
          ) {
            A.render(c, b.__canvasRenderer);
            if (
              c.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != c.__canvas
            )
              null != c.__canvas
                ? a.__canvas != c.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = c.__canvas),
                  (a.__context = c.__context),
                  b.__initializeElement(a, a.__canvas))
                : Nf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty &&
                ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a);
            }
          } else Nf.clear(a, b);
          null != a.stage &&
          a.__worldVisible &&
          a.__renderable &&
          null != a.__bitmapData &&
          a.__bitmapData.__isValid &&
          a.__bitmapData.readable
            ? (b.__pushMaskObject(a),
              null != a.__bitmapData.image.buffer.__srcImage
                ? ((d = a.__bitmapData.image.buffer.__srcImage.src),
                  P.startsWith(d, 'data:') || P.startsWith(d, 'blob:')
                    ? Xb.renderCanvas(a, b)
                    : Xb.renderImage(a, b))
                : Xb.renderCanvas(a, b),
              b.__popMaskObject(a))
            : Xb.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    P.startsWith(d, 'data:') || P.startsWith(d, 'blob:')
                      ? Xb.renderCanvas(c, b)
                      : Xb.renderImage(c, b))
                  : Xb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Xb.clear(c, b));
        b.__renderEvent(a);
      };
      Xb.renderDrawableClear = function (a, b) {
        Xb.clear(a, b);
      };
      Xb.renderImage = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas), (a.__canvas = null));
        null == a.__image &&
          ((a.__image = window.document.createElement('img')),
          (a.__image.crossOrigin = 'Anonymous'),
          (a.__image.src = a.__bitmapData.image.buffer.__srcImage.src),
          b.__initializeElement(a, a.__image));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
      };
      var td = function () {};
      h['openfl.display._internal.DOMDisplayObject'] = td;
      td.__name__ = 'openfl.display._internal.DOMDisplayObject';
      td.clear = function (a, b) {
        null != a.__cacheBitmap && Xb.clear(a.__cacheBitmap, b);
        Nf.clear(a, b);
      };
      td.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground &&
            !a.__isCacheBitmapRender &&
            0 < a.get_width() &&
            a.get_height();
          var c = a.__graphics;
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            null != c
          ) {
            A.render(c, b.__canvasRenderer);
            if (
              c.__softwareDirty ||
              a.__worldAlphaChanged ||
              a.__canvas != c.__canvas
            )
              null != c.__canvas
                ? a.__canvas != c.__canvas &&
                  (null != a.__canvas && b.element.removeChild(a.__canvas),
                  (a.__canvas = c.__canvas),
                  (a.__context = c.__context),
                  b.__initializeElement(a, a.__canvas))
                : Nf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty &&
                ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a);
            }
          } else Nf.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    P.startsWith(d, 'data:') || P.startsWith(d, 'blob:')
                      ? Xb.renderCanvas(c, b)
                      : Xb.renderImage(c, b))
                  : Xb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Xb.clear(c, b));
        b.__renderEvent(a);
      };
      td.renderDrawableClear = function (a, b) {
        td.clear(a, b);
      };
      var lj = function () {};
      h['openfl.display._internal.DOMDisplayObjectContainer'] = lj;
      lj.__name__ = 'openfl.display._internal.DOMDisplayObjectContainer';
      lj.renderDrawable = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && b.__renderDrawable(d);
        }
        for (c = a.__removedChildren.iterator(); c.hasNext(); )
          ((d = c.next()), null == d.stage && d.__cleanup());
        a.__removedChildren.set_length(0);
        td.renderDrawable(a, b);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f), (f.__renderDirty = !1));
            a.__renderDirty = !1;
          } else
            for (c = 0, d = a.__children; c < d.length; )
              ((f = d[c]), ++c, b.__renderDrawable(f));
          b.__popMaskObject(a);
        } else {
          c = 0;
          for (d = a.__children; c < d.length; ) {
            var f = d[c];
            ++c;
            b.__renderDrawableClear(f);
          }
          Nf.clear(a, b);
          a.__cacheBitmap.stage = a.stage;
        }
      };
      lj.renderDrawableClear = function (a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext(); ) {
          var d = c.next();
          null == d.stage && b.__renderDrawableClear(d);
        }
        for (c = a.__removedChildren.iterator(); c.hasNext(); )
          ((d = c.next()), null == d.stage && d.__cleanup());
        a.__removedChildren.set_length(0);
        c = 0;
        for (d = a.__children; c < d.length; ) {
          var f = d[c];
          ++c;
          b.__renderDrawableClear(f);
        }
        td.clear(a, b);
      };
      var Nf = function () {};
      h['openfl.display._internal.DOMShape'] = Nf;
      Nf.__name__ = 'openfl.display._internal.DOMShape';
      Nf.clear = function (a, b) {
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      var mj = function () {};
      h['openfl.display._internal.DOMSimpleButton'] = mj;
      mj.__name__ = 'openfl.display._internal.DOMSimpleButton';
      mj.renderDrawable = function (a, b) {
        b.__pushMaskObject(a);
        for (var c = a.__previousStates.iterator(); c.hasNext(); ) {
          var d = c.next();
          b.__renderDrawable(d);
        }
        a.__previousStates.set_length(0);
        null != a.__currentState &&
          (a.__currentState.stage != a.stage &&
            a.__currentState.__setStageReference(a.stage),
          b.__renderDrawable(a.__currentState));
        b.__popMaskObject(a);
        b.__renderEvent(a);
      };
      mj.renderDrawableClear = function (a, b) {
        td.renderDrawableClear(a, b);
      };
      var Jf = function () {};
      h['openfl.display._internal.DOMTextField'] = Jf;
      Jf.__name__ = 'openfl.display._internal.DOMTextField';
      Jf.clear = function (a, b) {
        td.clear(a, b);
        null != a.__div &&
          (b.element.removeChild(a.__div),
          (a.__div = null),
          (a.__style = null));
      };
      Jf.renderDrawable = function (a, b) {
        a.__domRender = !0;
        b.__updateCacheBitmap(a, a.__forceCachedBitmapUpdate);
        a.__forceCachedBitmapUpdate = !1;
        a.__domRender = !1;
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          a.__renderedOnCanvasWhileOnDOM &&
            ((a.__renderedOnCanvasWhileOnDOM = !1),
            a.__isHTML &&
              null != a.__htmlText &&
              (a.__updateText(a.__htmlText),
              (a.__dirty = !0),
              (a.__layoutDirty = !0),
              a.__renderDirty ||
                ((a.__renderDirty = !0), a.__setParentRenderDirty())));
          var c = a.__textEngine;
          if (null != a.stage && a.__worldVisible && a.__renderable) {
            if (a.__dirty || a.__renderTransformChanged || null == a.__div)
              if ('' != c.text || c.background || c.border || 1 == c.type) {
                a.__updateLayout();
                null == a.__div &&
                  ((a.__div = window.document.createElement('div')),
                  b.__initializeElement(a, a.__div),
                  a.__style.setProperty('outline', 'none', null),
                  a.__div.addEventListener(
                    'input',
                    function (b) {
                      b.preventDefault();
                      a.get_htmlText() != a.__div.innerHTML &&
                        (a.set_htmlText(a.__div.innerHTML),
                        (a.__dirty = !1),
                        a.dispatchEvent(
                          new Pe('textInput', !1, !1, a.get_htmlText()),
                        ));
                    },
                    !0,
                  ));
                c.wordWrap
                  ? a.__style.setProperty('word-wrap', 'break-word', null)
                  : a.__style.setProperty('white-space', 'nowrap', null);
                a.__style.setProperty('overflow', 'hidden', null);
                c.selectable
                  ? (a.__style.setProperty('cursor', 'text', null),
                    a.__style.setProperty('-webkit-user-select', 'text', null),
                    a.__style.setProperty('-moz-user-select', 'text', null),
                    a.__style.setProperty('-ms-user-select', 'text', null),
                    a.__style.setProperty('-o-user-select', 'text', null))
                  : a.__style.setProperty('cursor', 'inherit', null);
                a.__div.contentEditable = 1 == c.type;
                var d = a.__style;
                c.background
                  ? d.setProperty(
                      'background-color',
                      '#' + P.hex(c.backgroundColor & 16777215, 6),
                      null,
                    )
                  : d.removeProperty('background-color');
                var f = c.width,
                  g = c.height,
                  k = '';
                a.__isHTML &&
                  a.__updateText(
                    Oa.parse(
                      a.__text,
                      a.get_multiline(),
                      a.__styleSheet,
                      a.__textFormat,
                      a.__textEngine.textFormatRanges,
                    ),
                  );
                for (
                  var l = -a.get_scrollH(), p = c.layoutGroups.iterator();
                  p.hasNext();

                ) {
                  var h = p.next();
                  if (!(h.lineIndex < a.get_scrollV() - 1)) {
                    if (h.lineIndex > c.get_bottomScrollV() - 1) break;
                    k += '<div style="';
                    null != h.format.font &&
                      (k += 'font: ' + Eb.getFont(h.format) + '; ');
                    null != h.format.color &&
                      (k +=
                        'color: #' +
                        P.hex(h.format.color & 16777215, 6) +
                        '; ');
                    1 == h.format.underline &&
                      (k += 'text-decoration: underline; ');
                    if (null != h.format.align)
                      switch (h.format.align) {
                        case 0:
                          k += 'text-align: center; ';
                          break;
                        case 2:
                          k += 'text-align: justify; ';
                          break;
                        case 4:
                          k += 'text-align: right; ';
                          break;
                        default:
                          k += 'text-align: left; ';
                      }
                    null != h.format.leftMargin &&
                      (k +=
                        'padding-left: ' + 1 * h.format.leftMargin + 'px; ');
                    null != h.format.rightMargin &&
                      (k +=
                        'padding-right: ' + 1 * h.format.rightMargin + 'px; ');
                    null != h.format.indent &&
                      (k += 'text-indent: ' + 1 * h.format.indent + 'px; ');
                    k +=
                      'left: ' +
                      (h.offsetX + l) +
                      'px; top: ' +
                      (h.offsetY + 0 + 3) +
                      'px; vertical-align: top; position: absolute;">';
                    if (null != h.format.url && '' != h.format.url) {
                      var t = 'text-decoration: underline; ';
                      null != h.format.color &&
                        (t +=
                          'color: #' +
                          P.hex(h.format.color & 16777215, 6) +
                          '; ');
                      k +=
                        "<a style='" +
                        t +
                        "' href='" +
                        h.format.url +
                        "' target='" +
                        h.format.target +
                        "'>";
                    }
                    k = a.__isHTML
                      ? k +
                        P.replace(
                          c.text.substring(h.startIndex, h.endIndex),
                          ' ',
                          '&nbsp;',
                        )
                      : k +
                        P.replace(
                          P.htmlEscape(
                            c.text.substring(h.startIndex, h.endIndex),
                          ),
                          ' ',
                          '&nbsp;',
                        );
                    null != h.format.url && '' != h.format.url && (k += '</a>');
                    k += '</div>';
                  }
                }
                c.border
                  ? (d.setProperty(
                      'border',
                      'solid 1px #' + P.hex(c.borderColor & 16777215, 6),
                      null,
                    ),
                    a.__renderTransform.translate(-1, -1),
                    (a.__renderTransformChanged = !0),
                    (a.__transformDirty = !0))
                  : '' != d.border &&
                    (d.removeProperty('border'),
                    (a.__renderTransformChanged = !0));
                d.setProperty('width', f + 'px', null);
                d.setProperty('height', g + 'px', null);
                a.__div.innerHTML = k;
                a.__dirty = !1;
              } else
                null != a.__div &&
                  (b.element.removeChild(a.__div), (a.__div = null));
            null != a.__div &&
              ((c = b.__roundPixels),
              (b.__roundPixels = !0),
              b.__updateClip(a),
              b.__applyStyle(a, !0, !0, !0),
              (b.__roundPixels = c));
          } else Jf.clear(a, b);
        } else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    P.startsWith(d, 'data:') || P.startsWith(d, 'blob:')
                      ? Xb.renderCanvas(c, b)
                      : Xb.renderImage(c, b))
                  : Xb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Xb.clear(c, b));
        b.__renderEvent(a);
      };
      Jf.renderDrawableClear = function (a, b) {
        Jf.clear(a, b);
      };
      var Kf = function () {};
      h['openfl.display._internal.DOMTilemap'] = Kf;
      Kf.__name__ = 'openfl.display._internal.DOMTilemap';
      Kf.clear = function (a, b) {
        td.clear(a, b);
        null != a.__canvas &&
          (b.element.removeChild(a.__canvas),
          (a.__canvas = null),
          (a.__style = null));
      };
      Kf.renderDrawable = function (a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender)
          if (
            null != a.stage &&
            a.__worldVisible &&
            a.__renderable &&
            0 < a.__group.__tiles.length
          ) {
            null == a.__canvas &&
              ((a.__canvas = window.document.createElement('canvas')),
              (a.__context = a.__canvas.getContext('2d')),
              b.__initializeElement(a, a.__canvas));
            a.__canvas.width = a.__width;
            a.__canvas.height = a.__height;
            b.__canvasRenderer.context = a.__context;
            var c = a.__renderTransform;
            a.__renderTransform = ua.__identity;
            var d = b.__canvasRenderer;
            if (
              (null != a.opaqueBackground || null != a.__graphics) &&
              a.__renderable
            ) {
              var f = d.__getAlpha(a.__worldAlpha);
              if (!(0 >= f)) {
                if (
                  null != a.opaqueBackground &&
                  !a.__isCacheBitmapRender &&
                  0 < a.get_width() &&
                  0 < a.get_height()
                ) {
                  d.__setBlendMode(a.__worldBlendMode);
                  d.__pushMaskObject(a);
                  var g = d.context;
                  d.setTransform(a.__renderTransform, g);
                  var k = a.opaqueBackground;
                  g.fillStyle =
                    'rgb(' +
                    ((k >>> 16) & 255) +
                    ',' +
                    ((k >>> 8) & 255) +
                    ',' +
                    (k & 255) +
                    ')';
                  g.fillRect(0, 0, a.get_width(), a.get_height());
                  d.__popMaskObject(a);
                }
                if (
                  null != a.__graphics &&
                  a.__renderable &&
                  ((f = d.__getAlpha(a.__worldAlpha)), !(0 >= f))
                ) {
                  var l = a.__graphics;
                  if (null != l) {
                    A.render(l, d);
                    var h = l.__width,
                      t = l.__height;
                    k = l.__canvas;
                    if (null != k && l.__visible && 1 <= h && 1 <= t) {
                      var w = l.__worldTransform;
                      g = d.context;
                      var n = a.__scrollRect,
                        r = a.__worldScale9Grid;
                      if (null == n || (0 < n.width && 0 < n.height)) {
                        d.__setBlendMode(a.__worldBlendMode);
                        d.__pushMaskObject(a);
                        g.globalAlpha = f;
                        if (null != r && 0 == w.b && 0 == w.c) {
                          var C = d.__pixelRatio;
                          f = ua.__pool.get();
                          f.translate(w.tx, w.ty);
                          d.setTransform(f, g);
                          ua.__pool.release(f);
                          f = l.__bounds;
                          var x = l.__renderTransform.a / l.__bitmapScale,
                            m = l.__renderTransform.d / l.__bitmapScale,
                            G = x * w.a,
                            y = m * w.d;
                          w = Math.max(1, Math.round(r.x * x));
                          l = Math.round(r.y * m);
                          n = Math.max(
                            1,
                            Math.round((f.get_right() - r.get_right()) * x),
                          );
                          var B = Math.round(
                            (f.get_bottom() - r.get_bottom()) * m,
                          );
                          x = Math.round(r.width * x);
                          r = Math.round(r.height * m);
                          m = Math.round(w / C);
                          var N = Math.round(l / C),
                            L = Math.round(n / C);
                          C = Math.round(B / C);
                          G = f.width * G - m - L;
                          f = f.height * y - N - C;
                          d.applySmoothing(g, !1);
                          0 != x && 0 != r
                            ? (g.drawImage(k, 0, 0, w, l, 0, 0, m, N),
                              g.drawImage(k, w, 0, x, l, m, 0, G, N),
                              g.drawImage(k, w + x, 0, n, l, m + G, 0, L, N),
                              g.drawImage(k, 0, l, w, r, 0, N, m, f),
                              g.drawImage(k, w, l, x, r, m, N, G, f),
                              g.drawImage(k, w + x, l, n, r, m + G, N, L, f),
                              g.drawImage(k, 0, l + r, w, B, 0, N + f, m, C),
                              g.drawImage(k, w, l + r, x, B, m, N + f, G, C),
                              g.drawImage(
                                k,
                                w + x,
                                l + r,
                                n,
                                B,
                                m + G,
                                N + f,
                                L,
                                C,
                              ))
                            : 0 == x && 0 != r
                              ? ((t = m + G + L),
                                g.drawImage(k, 0, 0, h, l, 0, 0, t, N),
                                g.drawImage(k, 0, l, h, r, 0, N, t, f),
                                g.drawImage(k, 0, l + r, h, B, 0, N + f, t, C))
                              : 0 == r &&
                                0 != x &&
                                ((h = N + f + C),
                                g.drawImage(k, 0, 0, w, t, 0, 0, m, h),
                                g.drawImage(k, w, 0, x, t, m, 0, G, h),
                                g.drawImage(k, w + x, 0, n, t, m + G, 0, L, h));
                        } else
                          (d.setTransform(w, g), g.drawImage(k, 0, 0, h, t));
                        d.__popMaskObject(a);
                      }
                    }
                  }
                }
              }
            }
            d = b.__canvasRenderer;
            a.__renderable &&
              0 != a.__group.__tiles.length &&
              ((f = d.__getAlpha(a.__worldAlpha)),
              0 >= f ||
                ((g = d.context),
                d.__setBlendMode(a.__worldBlendMode),
                d.__pushMaskObject(a),
                (k = na.__pool.get()),
                k.setTo(0, 0, a.__width, a.__height),
                d.__pushMaskRect(k, a.__renderTransform),
                (d.__allowSmoothing && a.smoothing) ||
                  (g.imageSmoothingEnabled = !1),
                kf.renderTileContainer(
                  a.__group,
                  d,
                  a.__renderTransform,
                  a.__tileset,
                  d.__allowSmoothing && a.smoothing,
                  a.tileAlphaEnabled,
                  f,
                  a.tileBlendModeEnabled,
                  a.__worldBlendMode,
                  null,
                  null,
                  k,
                ),
                (d.__allowSmoothing && a.smoothing) ||
                  (g.imageSmoothingEnabled = !0),
                d.__popMaskRect(),
                d.__popMaskObject(a),
                na.__pool.release(k)));
            a.__renderTransform = c;
            b.__canvasRenderer.context = null;
            b.__updateClip(a);
            b.__applyStyle(a, !0, !1, !0);
          } else Kf.clear(a, b);
        else
          (b.__renderDrawableClear(a),
            (a.__cacheBitmap.stage = a.stage),
            (c = a.__cacheBitmap),
            null != c.stage &&
            c.__worldVisible &&
            c.__renderable &&
            null != c.__bitmapData &&
            c.__bitmapData.__isValid &&
            c.__bitmapData.readable
              ? (b.__pushMaskObject(c),
                null != c.__bitmapData.image.buffer.__srcImage
                  ? ((d = c.__bitmapData.image.buffer.__srcImage.src),
                    P.startsWith(d, 'data:') || P.startsWith(d, 'blob:')
                      ? Xb.renderCanvas(c, b)
                      : Xb.renderImage(c, b))
                  : Xb.renderCanvas(c, b),
                b.__popMaskObject(c))
              : Xb.clear(c, b));
        b.__renderEvent(a);
      };
      Kf.renderDrawableClear = function (a, b) {
        Kf.clear(a, b);
      };
      var lf = function () {};
      h['openfl.display._internal.DOMVideo'] = lf;
      lf.__name__ = 'openfl.display._internal.DOMVideo';
      lf.clear = function (a, b) {
        td.clear(a, b);
        a.__active &&
          (b.element.removeChild(a.__stream.__video), (a.__active = !1));
      };
      lf.render = function (a, b) {
        null != a.stage &&
        null != a.__stream &&
        a.__worldVisible &&
        a.__renderable
          ? (a.__active ||
              (b.__initializeElement(a, a.__stream.__video),
              (a.__active = !0),
              (a.__dirty = !0)),
            a.__dirty &&
              ((a.__stream.__video.width = a.__width | 0),
              (a.__stream.__video.height = a.__height | 0),
              (a.__dirty = !1)),
            b.__updateClip(a),
            b.__applyStyle(a, !0, !0, !0))
          : lf.clear(a, b);
      };
      lf.renderDrawable = function (a, b) {
        lf.render(a, b);
        b.__renderEvent(a);
      };
      lf.renderDrawableClear = function (a, b) {
        td.renderDrawableClear(a, b);
      };
      var Be = function (a) {
        this.buffer = a;
        this.bPos =
          this.iPos =
          this.fPos =
          this.oPos =
          this.ffPos =
          this.iiPos =
          this.tsPos =
            0;
        this.prev = Y.UNKNOWN;
      };
      h['openfl.display._internal.DrawCommandReader'] = Be;
      Be.__name__ = 'openfl.display._internal.DrawCommandReader';
      Be.prototype = {
        destroy: function () {
          this.buffer = null;
          this.reset();
        },
        reset: function () {
          this.bPos =
            this.iPos =
            this.fPos =
            this.oPos =
            this.ffPos =
            this.iiPos =
            this.tsPos =
              0;
        },
        __class__: Be,
      };
      var Y = (L['openfl.display._internal.DrawCommandType'] = {
        __ename__: 'openfl.display._internal.DrawCommandType',
        __constructs__: null,
        BEGIN_BITMAP_FILL: {
          _hx_name: 'BEGIN_BITMAP_FILL',
          _hx_index: 0,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        BEGIN_FILL: {
          _hx_name: 'BEGIN_FILL',
          _hx_index: 1,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        BEGIN_GRADIENT_FILL: {
          _hx_name: 'BEGIN_GRADIENT_FILL',
          _hx_index: 2,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        BEGIN_SHADER_FILL: {
          _hx_name: 'BEGIN_SHADER_FILL',
          _hx_index: 3,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        CUBIC_CURVE_TO: {
          _hx_name: 'CUBIC_CURVE_TO',
          _hx_index: 4,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        CURVE_TO: {
          _hx_name: 'CURVE_TO',
          _hx_index: 5,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_CIRCLE: {
          _hx_name: 'DRAW_CIRCLE',
          _hx_index: 6,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_ELLIPSE: {
          _hx_name: 'DRAW_ELLIPSE',
          _hx_index: 7,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_QUADS: {
          _hx_name: 'DRAW_QUADS',
          _hx_index: 8,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_RECT: {
          _hx_name: 'DRAW_RECT',
          _hx_index: 9,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_ROUND_RECT: {
          _hx_name: 'DRAW_ROUND_RECT',
          _hx_index: 10,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_TILES: {
          _hx_name: 'DRAW_TILES',
          _hx_index: 11,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        DRAW_TRIANGLES: {
          _hx_name: 'DRAW_TRIANGLES',
          _hx_index: 12,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        END_FILL: {
          _hx_name: 'END_FILL',
          _hx_index: 13,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_BITMAP_STYLE: {
          _hx_name: 'LINE_BITMAP_STYLE',
          _hx_index: 14,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_GRADIENT_STYLE: {
          _hx_name: 'LINE_GRADIENT_STYLE',
          _hx_index: 15,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_STYLE: {
          _hx_name: 'LINE_STYLE',
          _hx_index: 16,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        LINE_TO: {
          _hx_name: 'LINE_TO',
          _hx_index: 17,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        MOVE_TO: {
          _hx_name: 'MOVE_TO',
          _hx_index: 18,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        OVERRIDE_BLEND_MODE: {
          _hx_name: 'OVERRIDE_BLEND_MODE',
          _hx_index: 19,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        OVERRIDE_MATRIX: {
          _hx_name: 'OVERRIDE_MATRIX',
          _hx_index: 20,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        WINDING_EVEN_ODD: {
          _hx_name: 'WINDING_EVEN_ODD',
          _hx_index: 21,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        WINDING_NON_ZERO: {
          _hx_name: 'WINDING_NON_ZERO',
          _hx_index: 22,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
        UNKNOWN: {
          _hx_name: 'UNKNOWN',
          _hx_index: 23,
          __enum__: 'openfl.display._internal.DrawCommandType',
          toString: r,
        },
      });
      Y.__constructs__ = [
        Y.BEGIN_BITMAP_FILL,
        Y.BEGIN_FILL,
        Y.BEGIN_GRADIENT_FILL,
        Y.BEGIN_SHADER_FILL,
        Y.CUBIC_CURVE_TO,
        Y.CURVE_TO,
        Y.DRAW_CIRCLE,
        Y.DRAW_ELLIPSE,
        Y.DRAW_QUADS,
        Y.DRAW_RECT,
        Y.DRAW_ROUND_RECT,
        Y.DRAW_TILES,
        Y.DRAW_TRIANGLES,
        Y.END_FILL,
        Y.LINE_BITMAP_STYLE,
        Y.LINE_GRADIENT_STYLE,
        Y.LINE_STYLE,
        Y.LINE_TO,
        Y.MOVE_TO,
        Y.OVERRIDE_BLEND_MODE,
        Y.OVERRIDE_MATRIX,
        Y.WINDING_EVEN_ODD,
        Y.WINDING_NON_ZERO,
        Y.UNKNOWN,
      ];
      Y.__empty_constructs__ = [
        Y.BEGIN_BITMAP_FILL,
        Y.BEGIN_FILL,
        Y.BEGIN_GRADIENT_FILL,
        Y.BEGIN_SHADER_FILL,
        Y.CUBIC_CURVE_TO,
        Y.CURVE_TO,
        Y.DRAW_CIRCLE,
        Y.DRAW_ELLIPSE,
        Y.DRAW_QUADS,
        Y.DRAW_RECT,
        Y.DRAW_ROUND_RECT,
        Y.DRAW_TILES,
        Y.DRAW_TRIANGLES,
        Y.END_FILL,
        Y.LINE_BITMAP_STYLE,
        Y.LINE_GRADIENT_STYLE,
        Y.LINE_STYLE,
        Y.LINE_TO,
        Y.MOVE_TO,
        Y.OVERRIDE_BLEND_MODE,
        Y.OVERRIDE_MATRIX,
        Y.WINDING_EVEN_ODD,
        Y.WINDING_NON_ZERO,
        Y.UNKNOWN,
      ];
      var ng = function (a, b, c, d, f, g, k) {
        null == k && (k = !1);
        null == g && (g = !1);
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = 5);
        null == a && (a = 0);
        this.wrap = a;
        this.filter = b;
        this.mipfilter = c;
        this.lodBias = d;
        this.ignoreSampler = f;
        this.centroid = g;
        this.textureAlpha = k;
      };
      h['openfl.display._internal.SamplerState'] = ng;
      ng.__name__ = 'openfl.display._internal.SamplerState';
      ng.prototype = {
        clone: function () {
          var a = new ng(
            this.wrap,
            this.filter,
            this.mipfilter,
            this.lodBias,
            this.ignoreSampler,
            this.centroid,
            this.textureAlpha,
          );
          a.mipmapGenerated = this.mipmapGenerated;
          return a;
        },
        copyFrom: function (a) {
          null == a ||
            a.ignoreSampler ||
            ((this.wrap = a.wrap),
            (this.filter = a.filter),
            (this.mipfilter = a.mipfilter),
            (this.lodBias = a.lodBias),
            (this.centroid = a.centroid),
            (this.textureAlpha = a.textureAlpha));
        },
        equals: function (a) {
          return null == a
            ? !1
            : this.wrap == a.wrap &&
                this.filter == a.filter &&
                this.mipfilter == a.mipfilter &&
                this.lodBias == a.lodBias
              ? this.textureAlpha == a.textureAlpha
              : !1;
        },
        __class__: ng,
      };
      var pj = function () {
        this.inputRefs = [];
        this.inputFilter = [];
        this.inputMipFilter = [];
        this.inputs = [];
        this.inputWrap = [];
        this.overrideIntNames = [];
        this.overrideIntValues = [];
        this.overrideFloatNames = [];
        this.overrideFloatValues = [];
        this.overrideBoolNames = [];
        this.overrideBoolValues = [];
        this.paramLengths = [];
        this.paramPositions = [];
        this.paramRefs_Bool = [];
        this.paramRefs_Float = [];
        this.paramRefs_Int = [];
        this.paramTypes = [];
      };
      h['openfl.display._internal.ShaderBuffer'] = pj;
      pj.__name__ = 'openfl.display._internal.ShaderBuffer';
      pj.prototype = {
        addBoolOverride: function (a, b) {
          this.overrideBoolNames[this.overrideBoolCount] = a;
          this.overrideBoolValues[this.overrideBoolCount] = b;
          this.overrideBoolCount++;
        },
        addFloatOverride: function (a, b) {
          this.overrideFloatNames[this.overrideFloatCount] = a;
          this.overrideFloatValues[this.overrideFloatCount] = b;
          this.overrideFloatCount++;
        },
        clearOverride: function () {
          this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
              0;
        },
        update: function (a) {
          this.paramIntCount =
            this.paramFloatCount =
            this.paramDataLength =
            this.paramCount =
            this.paramBoolCount =
            this.overrideBoolCount =
            this.overrideFloatCount =
            this.overrideIntCount =
            this.inputCount =
              0;
          this.shader = null;
          if (null != a) {
            a.__init();
            this.inputCount = a.__inputBitmapData.length;
            for (var b, c = 0, d = this.inputCount; c < d; ) {
              var f = c++;
              b = a.__inputBitmapData[f];
              this.inputs[f] = b.input;
              this.inputFilter[f] = b.filter;
              this.inputMipFilter[f] = b.mipFilter;
              this.inputRefs[f] = b;
              this.inputWrap[f] = b.wrap;
            }
            b = a.__paramBool.length;
            var g = a.__paramFloat.length,
              k = a.__paramInt.length;
            this.paramCount = b + g + k;
            this.paramBoolCount = b;
            this.paramFloatCount = g;
            this.paramIntCount = k;
            var l = 0;
            c = 0;
            for (d = b; c < d; ) {
              f = c++;
              var h = a.__paramBool[f];
              this.paramPositions[l] = this.paramDataLength;
              var t = null != h.value ? h.value.length : 0;
              this.paramLengths[l] = t;
              this.paramDataLength += t;
              this.paramTypes[l] = 0;
              this.paramRefs_Bool[f] = h;
              ++l;
            }
            c = 0;
            for (d = g; c < d; )
              ((f = c++),
                (h = a.__paramFloat[f]),
                (this.paramPositions[l] = this.paramDataLength),
                (t = null != h.value ? h.value.length : 0),
                (this.paramLengths[l] = t),
                (this.paramDataLength += t),
                (this.paramTypes[l] = 1),
                (this.paramRefs_Float[f] = h),
                ++l);
            c = 0;
            for (d = k; c < d; )
              ((f = c++),
                (h = a.__paramInt[f]),
                (this.paramPositions[l] = this.paramDataLength),
                (t = null != h.value ? h.value.length : 0),
                (this.paramLengths[l] = t),
                (this.paramDataLength += t),
                (this.paramTypes[l] = 2),
                (this.paramRefs_Int[f] = h),
                ++l);
            if (0 < this.paramDataLength)
              if (null == this.paramData) {
                c = this.paramDataLength;
                var w = (h = l = k = d = null);
                this.paramData = c =
                  null != c
                    ? new Float32Array(c)
                    : null != d
                      ? new Float32Array(d)
                      : null != k
                        ? new Float32Array(k.__array)
                        : null != l
                          ? new Float32Array(l)
                          : null != h
                            ? null == w
                              ? new Float32Array(h, 0)
                              : new Float32Array(h, 0, w)
                            : null;
              } else
                this.paramDataLength > this.paramData.length &&
                  ((c = this.paramDataLength),
                  (w = h = l = k = d = null),
                  (c =
                    null != c
                      ? new Float32Array(c)
                      : null != d
                        ? new Float32Array(d)
                        : null != k
                          ? new Float32Array(k.__array)
                          : null != l
                            ? new Float32Array(l)
                            : null != h
                              ? null == w
                                ? new Float32Array(h, 0)
                                : new Float32Array(h, 0, w)
                              : null),
                  c.set(this.paramData),
                  (this.paramData = c));
            c = w = h = l = k = 0;
            for (d = this.paramCount; c < d; )
              if (((f = c++), (t = this.paramLengths[f]), f < b)) {
                f = this.paramRefs_Bool[k];
                ++k;
                for (var n = 0; n < t; ) {
                  var r = n++;
                  this.paramData[w] = f.value[r] ? 1 : 0;
                  ++w;
                }
              } else if (f < b + g)
                for (f = this.paramRefs_Float[l], ++l, n = 0; n < t; )
                  ((r = n++), (this.paramData[w] = f.value[r]), ++w);
              else
                for (f = this.paramRefs_Int[h], ++h, n = 0; n < t; )
                  ((r = n++), (this.paramData[w] = f.value[r]), ++w);
            this.shader = a;
          }
        },
        __class__: pj,
      };
      var rb = function (a, b, c) {
        this.driverInfo = 'OpenGL (Direct blitting)';
        this.backBufferHeight = this.backBufferWidth = 0;
        sa.call(this);
        this.__stage = a;
        this.__contextState = b;
        this.__stage3D = c;
        this.__context = a.window.context;
        this.gl = this.__context.webgl;
        null == this.__contextState && (this.__contextState = new Ih());
        this.__state = new Ih();
        var d;
        this.__vertexConstants = new Float32Array(512);
        this.__fragmentConstants = new Float32Array(512);
        var f = null;
        a = [1, 1, 1, 1];
        var g = (d = c = b = null);
        this.__positionScale = a =
          null != f
            ? new Float32Array(f)
            : null != a
              ? new Float32Array(a)
              : null != b
                ? new Float32Array(b.__array)
                : null != c
                  ? new Float32Array(c)
                  : null != d
                    ? null == g
                      ? new Float32Array(d, 0)
                      : new Float32Array(d, 0, g)
                    : null;
        this.__programs = new Ja();
        -1 == rb.__glMaxViewportDims &&
          (rb.__glMaxViewportDims = this.gl.getParameter(
            this.gl.MAX_VIEWPORT_DIMS,
          ));
        this.maxBackBufferHeight = this.maxBackBufferWidth =
          rb.__glMaxViewportDims;
        -1 == rb.__glMaxTextureMaxAnisotropy &&
          ((a = this.gl.getExtension('EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic')),
          (null != a &&
            Object.prototype.hasOwnProperty.call(
              a,
              'MAX_TEXTURE_MAX_ANISOTROPY_EXT',
            )) ||
            (a = this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')),
          null != a
            ? ((rb.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT),
              (rb.__glMaxTextureMaxAnisotropy = this.gl.getParameter(
                a.MAX_TEXTURE_MAX_ANISOTROPY_EXT,
              )))
            : ((rb.__glTextureMaxAnisotropy = 0),
              (rb.__glMaxTextureMaxAnisotropy = 0)));
        -1 == rb.__glDepthStencil &&
          (rb.__glDepthStencil = this.gl.DEPTH_STENCIL);
        -1 == rb.__glMemoryTotalAvailable &&
          ((a = this.gl.getExtension('NVX_gpu_memory_info')),
          null != a &&
            ((rb.__glMemoryTotalAvailable =
              a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX),
            (rb.__glMemoryCurrentAvailable =
              a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)));
        null == rb.__driverInfo &&
          ((a = this.gl.getParameter(this.gl.VENDOR)),
          (b = this.gl.getParameter(this.gl.VERSION)),
          (c = this.gl.getParameter(this.gl.RENDERER)),
          (d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION)),
          (rb.__driverInfo =
            'OpenGL Vendor=' +
            a +
            ' Version=' +
            b +
            ' Renderer=' +
            c +
            ' GLSL=' +
            d));
        this.driverInfo = rb.__driverInfo;
        this.__quadIndexBufferElements = 16383;
        f = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
        g = d = c = b = a = null;
        a =
          null != f
            ? new Uint16Array(f)
            : null != a
              ? new Uint16Array(a)
              : null != b
                ? new Uint16Array(b.__array)
                : null != c
                  ? new Uint16Array(c)
                  : null != d
                    ? null == g
                      ? new Uint16Array(d, 0)
                      : new Uint16Array(d, 0, g)
                    : null;
        d = c = b = 0;
        for (g = this.__quadIndexBufferElements; d < g; )
          (d++,
            (a[b] = c),
            (a[b + 1] = c + 1),
            (a[b + 2] = c + 2),
            (a[b + 3] = c + 2),
            (a[b + 4] = c + 1),
            (a[b + 5] = c + 3),
            (b += 6),
            (c += 4));
        this.__quadIndexBuffer = this.createIndexBuffer(
          this.__quadIndexBufferCount,
        );
        this.__quadIndexBuffer.uploadFromTypedArray(a);
      };
      h['openfl.display3D.Context3D'] = rb;
      rb.__name__ = 'openfl.display3D.Context3D';
      rb.__super__ = sa;
      rb.prototype = u(sa.prototype, {
        clear: function (a, b, c, d, f, g, k) {
          null == k && (k = 7);
          null == g && (g = 0);
          null == f && (f = 1);
          null == d && (d = 1);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          var l = 0;
          if (0 != (k & 1)) {
            null == this.__state.renderToTexture &&
              (this.__stage.context3D != this ||
                this.__stage.__renderer.__cleared ||
                (this.__stage.__renderer.__cleared = !0),
              (this.__cleared = !0));
            l |= this.gl.COLOR_BUFFER_BIT;
            if (
              1 != this.__contextState.colorMaskRed ||
              1 != this.__contextState.colorMaskGreen ||
              1 != this.__contextState.colorMaskBlue ||
              1 != this.__contextState.colorMaskAlpha
            )
              (this.gl.colorMask(!0, !0, !0, !0),
                (this.__contextState.colorMaskRed = !0),
                (this.__contextState.colorMaskGreen = !0),
                (this.__contextState.colorMaskBlue = !0),
                (this.__contextState.colorMaskAlpha = !0));
            this.gl.clearColor(a, b, c, d);
          }
          0 != (k & 2) &&
            ((l |= this.gl.DEPTH_BUFFER_BIT),
            1 != this.__contextState.depthMask &&
              (this.gl.depthMask(!0), (this.__contextState.depthMask = !0)),
            this.gl.clearDepth(f));
          0 != (k & 4) &&
            ((l |= this.gl.STENCIL_BUFFER_BIT),
            255 != this.__contextState.stencilWriteMask &&
              (this.gl.stencilMask(255),
              (this.__contextState.stencilWriteMask = 255)),
            this.gl.clearStencil(g),
            (this.__contextState.stencilWriteMask = 255));
          0 != l && (this.__setGLScissorTest(!1), this.gl.clear(l));
        },
        configureBackBuffer: function (a, b, c, d, f, g) {
          null == g && (g = !1);
          null == f && (f = !1);
          null == d && (d = !0);
          f &&
            ((a = (a * this.__stage.window.__scale) | 0),
            (b = (b * this.__stage.window.__scale) | 0));
          if (null == this.__stage3D)
            ((this.backBufferWidth = a),
              (this.backBufferHeight = b),
              (this.__backBufferAntiAlias = c),
              (this.__state.backBufferEnableDepthAndStencil = d),
              (this.__backBufferWantsBestResolution = f),
              (this.__backBufferWantsBestResolutionOnBrowserZoom = g));
          else {
            if (
              null == this.__backBufferTexture ||
              this.backBufferWidth != a ||
              this.backBufferHeight != b
            ) {
              null != this.__backBufferTexture &&
                this.__backBufferTexture.dispose();
              null != this.__frontBufferTexture &&
                this.__frontBufferTexture.dispose();
              this.__backBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              this.__frontBufferTexture = this.createRectangleTexture(
                a,
                b,
                1,
                !0,
              );
              null == this.__stage3D.__vertexBuffer &&
                (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
              var k = f ? a : (a * this.__stage.window.__scale) | 0,
                l = f ? b : (b * this.__stage.window.__scale) | 0;
              k = ra.toFloatVector(null, null, null, [
                k,
                l,
                0,
                1,
                1,
                0,
                l,
                0,
                0,
                1,
                k,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
              ]);
              this.__stage3D.__vertexBuffer.uploadFromVector(k, 0, 20);
              null == this.__stage3D.__indexBuffer &&
                ((this.__stage3D.__indexBuffer = this.createIndexBuffer(6)),
                (k = ra.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3])),
                this.__stage3D.__indexBuffer.uploadFromVector(k, 0, 6));
            }
            this.backBufferWidth = a;
            this.backBufferHeight = b;
            this.__backBufferAntiAlias = c;
            this.__state.backBufferEnableDepthAndStencil = d;
            this.__backBufferWantsBestResolution = f;
            this.__backBufferWantsBestResolutionOnBrowserZoom = g;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
            this.__frontBufferTexture.__getGLFramebuffer(d, c, 0);
          }
        },
        createIndexBuffer: function (a, b) {
          null == b && (b = 1);
          return new Sk(this, a, b);
        },
        createProgram: function (a) {
          null == a && (a = 0);
          return new Tk(this, a);
        },
        createRectangleTexture: function (a, b, c, d) {
          return new Jh(this, a, b, Ul.toString(c), d);
        },
        createVertexBuffer: function (a, b, c) {
          null == c && (c = 1);
          return new Uk(this, a, b, Gl.toString(c));
        },
        drawTriangles: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          c = -1 == c ? a.__numIndices : 3 * c;
          this.__bindGLElementArrayBuffer(a.__id);
          this.gl.drawElements(
            this.gl.TRIANGLES,
            c,
            this.gl.UNSIGNED_SHORT,
            2 * b,
          );
        },
        present: function () {
          this.setRenderToBackBuffer();
          if (null != this.__stage3D && null != this.__backBufferTexture) {
            this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
            var a = this.__backBufferTexture;
            this.__backBufferTexture = this.__frontBufferTexture;
            this.__frontBufferTexture = a;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(
                this.__state.backBufferEnableDepthAndStencil,
                this.__backBufferAntiAlias,
                0,
              );
            this.__cleared = !1;
          }
          this.__present = !0;
        },
        setBlendFactors: function (a, b) {
          this.setBlendFactorsSeparate(a, b, a, b);
        },
        setBlendFactorsSeparate: function (a, b, c, d) {
          this.__state.blendSourceRGBFactor = a;
          this.__state.blendDestinationRGBFactor = b;
          this.__state.blendSourceAlphaFactor = c;
          this.__state.blendDestinationAlphaFactor = d;
          this.__setGLBlendEquation(this.gl.FUNC_ADD);
        },
        setColorMask: function (a, b, c, d) {
          this.__state.colorMaskRed = a;
          this.__state.colorMaskGreen = b;
          this.__state.colorMaskBlue = c;
          this.__state.colorMaskAlpha = d;
        },
        setCulling: function (a) {
          this.__state.culling = a;
        },
        setDepthTest: function (a, b) {
          this.__state.depthMask = a;
          this.__state.depthCompareMode = b;
        },
        setProgram: function (a) {
          this.__state.program = a;
          this.__state.shader = null;
          if (null != a)
            for (var b = 0, c = a.__samplerStates.length; b < c; ) {
              var d = b++;
              null == this.__state.samplerStates[d]
                ? (this.__state.samplerStates[d] = a.__samplerStates[d].clone())
                : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d]);
            }
        },
        setProgramConstantsFromMatrix: function (a, b, c, d) {
          null == d && (d = !1);
          if (
            null != this.__state.program &&
            1 == this.__state.program.__format
          )
            (this.__flushGLProgram(),
              (a = new Float32Array(16)),
              (a[0] = c.rawData.get(0)),
              (a[1] = c.rawData.get(1)),
              (a[2] = c.rawData.get(2)),
              (a[3] = c.rawData.get(3)),
              (a[4] = c.rawData.get(4)),
              (a[5] = c.rawData.get(5)),
              (a[6] = c.rawData.get(6)),
              (a[7] = c.rawData.get(7)),
              (a[8] = c.rawData.get(8)),
              (a[9] = c.rawData.get(9)),
              (a[10] = c.rawData.get(10)),
              (a[11] = c.rawData.get(11)),
              (a[12] = c.rawData.get(12)),
              (a[13] = c.rawData.get(13)),
              (a[14] = c.rawData.get(14)),
              (a[15] = c.rawData.get(15)),
              Nc.uniformMatrix4fv(this.gl, b, d, a));
          else {
            var f = (a = 1 == a)
              ? this.__vertexConstants
              : this.__fragmentConstants;
            c = c.rawData;
            var g = 4 * b;
            d
              ? ((f[g++] = c.get(0)),
                (f[g++] = c.get(4)),
                (f[g++] = c.get(8)),
                (f[g++] = c.get(12)),
                (f[g++] = c.get(1)),
                (f[g++] = c.get(5)),
                (f[g++] = c.get(9)),
                (f[g++] = c.get(13)),
                (f[g++] = c.get(2)),
                (f[g++] = c.get(6)),
                (f[g++] = c.get(10)),
                (f[g++] = c.get(14)),
                (f[g++] = c.get(3)),
                (f[g++] = c.get(7)),
                (f[g++] = c.get(11)))
              : ((f[g++] = c.get(0)),
                (f[g++] = c.get(1)),
                (f[g++] = c.get(2)),
                (f[g++] = c.get(3)),
                (f[g++] = c.get(4)),
                (f[g++] = c.get(5)),
                (f[g++] = c.get(6)),
                (f[g++] = c.get(7)),
                (f[g++] = c.get(8)),
                (f[g++] = c.get(9)),
                (f[g++] = c.get(10)),
                (f[g++] = c.get(11)),
                (f[g++] = c.get(12)),
                (f[g++] = c.get(13)),
                (f[g++] = c.get(14)));
            f[g++] = c.get(15);
            null != this.__state.program &&
              this.__state.program.__markDirty(a, b, 4);
          }
        },
        setRenderToBackBuffer: function () {
          this.__state.renderToTexture = null;
        },
        setRenderToTexture: function (a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          this.__state.renderToTexture = a;
          this.__state.renderToTextureDepthStencil = b;
          this.__state.renderToTextureAntiAlias = c;
          this.__state.renderToTextureSurfaceSelector = d;
        },
        setSamplerStateAt: function (a, b, c, d) {
          null == this.__state.samplerStates[a] &&
            (this.__state.samplerStates[a] = new ng());
          a = this.__state.samplerStates[a];
          a.wrap = b;
          a.filter = c;
          a.mipfilter = d;
        },
        setScissorRectangle: function (a) {
          null != a
            ? ((this.__state.scissorEnabled = !0),
              this.__state.scissorRectangle.copyFrom(a))
            : (this.__state.scissorEnabled = !1);
        },
        setStencilActions: function (a, b, c, d, f) {
          null == f && (f = 5);
          null == d && (d = 5);
          null == c && (c = 5);
          null == b && (b = 0);
          null == a && (a = 2);
          this.__state.stencilTriangleFace = a;
          this.__state.stencilCompareMode = b;
          this.__state.stencilPass = c;
          this.__state.stencilDepthFail = d;
          this.__state.stencilFail = f;
        },
        setStencilReferenceValue: function (a, b, c) {
          null == c && (c = 255);
          null == b && (b = 255);
          this.__state.stencilReferenceValue = a;
          this.__state.stencilReadMask = b;
          this.__state.stencilWriteMask = c;
        },
        setTextureAt: function (a, b) {
          this.__state.textures[a] = b;
        },
        setVertexBufferAt: function (a, b, c, d) {
          null == d && (d = 4);
          null == c && (c = 0);
          if (!(0 > a))
            if (null == b)
              (this.gl.disableVertexAttribArray(a),
                this.__bindGLArrayBuffer(null));
            else
              switch (
                (this.__bindGLArrayBuffer(b.__id),
                this.gl.enableVertexAttribArray(a),
                (c *= 4),
                d)
              ) {
                case 0:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.UNSIGNED_BYTE,
                    !0,
                    b.__stride,
                    c,
                  );
                  break;
                case 1:
                  this.gl.vertexAttribPointer(
                    a,
                    1,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 2:
                  this.gl.vertexAttribPointer(
                    a,
                    2,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 3:
                  this.gl.vertexAttribPointer(
                    a,
                    3,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                case 4:
                  this.gl.vertexAttribPointer(
                    a,
                    4,
                    this.gl.FLOAT,
                    !1,
                    b.__stride,
                    c,
                  );
                  break;
                default:
                  throw new $c();
              }
        },
        __bindGLArrayBuffer: function (a) {
          this.__contextState.__currentGLArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a),
            (this.__contextState.__currentGLArrayBuffer = a));
        },
        __bindGLElementArrayBuffer: function (a) {
          this.__contextState.__currentGLElementArrayBuffer != a &&
            (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a),
            (this.__contextState.__currentGLElementArrayBuffer = a));
        },
        __bindGLFramebuffer: function (a) {
          this.__contextState.__currentGLFramebuffer != a &&
            (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a),
            (this.__contextState.__currentGLFramebuffer = a));
        },
        __bindGLTexture2D: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_2D, a);
          this.__contextState.__currentGLTexture2D = a;
        },
        __bindGLTextureCubeMap: function (a) {
          this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
          this.__contextState.__currentGLTextureCubeMap = a;
        },
        __dispose: function () {
          this.driverInfo += ' (Disposed)';
          null != this.__stage3D &&
            ((this.__stage3D.__indexBuffer = null),
            (this.__stage3D.__vertexBuffer = null),
            (this.__stage3D = this.__stage3D.context3D = null));
          this.__positionScale =
            this.__frontBufferTexture =
            this.__fragmentConstants =
            this.__renderStage3DProgram =
            this.__context =
            this.__backBufferTexture =
              null;
          this.__present = !1;
          this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null;
        },
        __drawTriangles: function (a, b) {
          null == a && (a = 0);
          null == this.__state.renderToTexture &&
            (this.__stage.context3D != this || this.__stage.__renderer.__cleared
              ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
              : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          this.gl.drawArrays(this.gl.TRIANGLES, a, b);
        },
        __flushGL: function () {
          this.__flushGLProgram();
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          this.__flushGLBlend();
          if (
            this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
            this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
            this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
            this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
          )
            (this.gl.colorMask(
              this.__state.colorMaskRed,
              this.__state.colorMaskGreen,
              this.__state.colorMaskBlue,
              this.__state.colorMaskAlpha,
            ),
              (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
              (this.__contextState.colorMaskGreen =
                this.__state.colorMaskGreen),
              (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
              (this.__contextState.colorMaskAlpha =
                this.__state.colorMaskAlpha));
          this.__flushGLCulling();
          this.__flushGLDepth();
          this.__flushGLScissor();
          this.__flushGLStencil();
          this.__flushGLTextures();
        },
        __flushGLBlend: function () {
          if (
            this.__contextState.blendDestinationRGBFactor !=
              this.__state.blendDestinationRGBFactor ||
            this.__contextState.blendSourceRGBFactor !=
              this.__state.blendSourceRGBFactor ||
            this.__contextState.blendDestinationAlphaFactor !=
              this.__state.blendDestinationAlphaFactor ||
            this.__contextState.blendSourceAlphaFactor !=
              this.__state.blendSourceAlphaFactor
          )
            (this.__setGLBlend(!0),
              this.__state.blendDestinationRGBFactor ==
                this.__state.blendDestinationAlphaFactor &&
              this.__state.blendSourceRGBFactor ==
                this.__state.blendSourceAlphaFactor
                ? this.gl.blendFunc(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                  )
                : this.gl.blendFuncSeparate(
                    this.__getGLBlend(this.__state.blendSourceRGBFactor),
                    this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                    this.__getGLBlend(this.__state.blendSourceAlphaFactor),
                    this.__getGLBlend(this.__state.blendDestinationAlphaFactor),
                  ),
              (this.__contextState.blendDestinationRGBFactor =
                this.__state.blendDestinationRGBFactor),
              (this.__contextState.blendSourceRGBFactor =
                this.__state.blendSourceRGBFactor),
              (this.__contextState.blendDestinationAlphaFactor =
                this.__state.blendDestinationAlphaFactor),
              (this.__contextState.blendSourceAlphaFactor =
                this.__state.blendSourceAlphaFactor));
        },
        __flushGLCulling: function () {
          if (this.__contextState.culling != this.__state.culling) {
            if (3 == this.__state.culling) this.__setGLCullFace(!1);
            else
              switch ((this.__setGLCullFace(!0), this.__state.culling)) {
                case 0:
                  this.gl.cullFace(this.gl.BACK);
                  break;
                case 1:
                  this.gl.cullFace(this.gl.FRONT);
                  break;
                case 2:
                  this.gl.cullFace(this.gl.FRONT_AND_BACK);
                  break;
                case 3:
                  break;
                default:
                  throw new $c();
              }
            this.__contextState.culling = this.__state.culling;
          }
        },
        __flushGLDepth: function () {
          var a =
            this.__state.depthMask &&
            (null != this.__state.renderToTexture
              ? this.__state.renderToTextureDepthStencil
              : this.__state.backBufferEnableDepthAndStencil);
          this.__contextState.depthMask != a &&
            (this.gl.depthMask(a), (this.__contextState.depthMask = a));
          if (
            this.__contextState.depthCompareMode !=
            this.__state.depthCompareMode
          ) {
            switch (this.__state.depthCompareMode) {
              case 0:
                this.gl.depthFunc(this.gl.ALWAYS);
                break;
              case 1:
                this.gl.depthFunc(this.gl.EQUAL);
                break;
              case 2:
                this.gl.depthFunc(this.gl.GREATER);
                break;
              case 3:
                this.gl.depthFunc(this.gl.GEQUAL);
                break;
              case 4:
                this.gl.depthFunc(this.gl.LESS);
                break;
              case 5:
                this.gl.depthFunc(this.gl.LEQUAL);
                break;
              case 6:
                this.gl.depthFunc(this.gl.NEVER);
                break;
              case 7:
                this.gl.depthFunc(this.gl.NOTEQUAL);
                break;
              default:
                throw new $c();
            }
            this.__contextState.depthCompareMode =
              this.__state.depthCompareMode;
          }
        },
        __flushGLFramebuffer: function () {
          if (null != this.__state.renderToTexture) {
            if (
              this.__contextState.renderToTexture !=
                this.__state.renderToTexture ||
              this.__contextState.renderToTextureSurfaceSelector !=
                this.__state.renderToTextureSurfaceSelector
            ) {
              var a = this.__state.renderToTexture.__getGLFramebuffer(
                this.__state.renderToTextureDepthStencil,
                this.__state.renderToTextureAntiAlias,
                this.__state.renderToTextureSurfaceSelector,
              );
              this.__bindGLFramebuffer(a);
              this.__contextState.renderToTexture =
                this.__state.renderToTexture;
              this.__contextState.renderToTextureAntiAlias =
                this.__state.renderToTextureAntiAlias;
              this.__contextState.renderToTextureDepthStencil =
                this.__state.renderToTextureDepthStencil;
              this.__contextState.renderToTextureSurfaceSelector =
                this.__state.renderToTextureSurfaceSelector;
            }
            this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
            this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
            this.__setGLFrontFace(!0);
          } else {
            if (
              null == this.__stage &&
              0 == this.backBufferWidth &&
              0 == this.backBufferHeight
            )
              throw new gc('Context3D backbuffer has not been configured');
            if (
              null != this.__contextState.renderToTexture ||
              this.__contextState.__currentGLFramebuffer !=
                this.__state.__primaryGLFramebuffer ||
              this.__contextState.backBufferEnableDepthAndStencil !=
                this.__state.backBufferEnableDepthAndStencil
            )
              (this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer),
                (this.__contextState.renderToTexture = null),
                (this.__contextState.backBufferEnableDepthAndStencil =
                  this.__state.backBufferEnableDepthAndStencil));
            this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLStencilTest(
              this.__state.backBufferEnableDepthAndStencil,
            );
            this.__setGLFrontFace(this.__stage.context3D != this);
          }
        },
        __flushGLProgram: function () {
          var a = this.__state.shader,
            b = this.__state.program;
          this.__contextState.shader != a &&
            (null != this.__contextState.shader &&
              this.__contextState.shader.__disable(),
            null != a && a.__enable(),
            (this.__contextState.shader = a));
          this.__contextState.program != b &&
            (null != this.__contextState.program &&
              this.__contextState.program.__disable(),
            null != b && b.__enable(),
            (this.__contextState.program = b));
          null != b &&
            0 == b.__format &&
            ((this.__positionScale[1] =
              this.__stage.context3D == this &&
              null == this.__state.renderToTexture
                ? 1
                : -1),
            b.__setPositionScale(this.__positionScale));
        },
        __flushGLScissor: function () {
          if (this.__state.scissorEnabled) {
            this.__setGLScissorTest(!0);
            this.__contextState.scissorEnabled = !0;
            var a = this.__state.scissorRectangle.x | 0,
              b = this.__state.scissorRectangle.y | 0,
              c = this.__state.scissorRectangle.width | 0,
              d = this.__state.scissorRectangle.height | 0;
            this.__backBufferWantsBestResolution &&
              ((a =
                (this.__state.scissorRectangle.x *
                  this.__stage.window.__scale) |
                0),
              (b =
                (this.__state.scissorRectangle.y *
                  this.__stage.window.__scale) |
                0),
              (c =
                (this.__state.scissorRectangle.width *
                  this.__stage.window.__scale) |
                0),
              (d =
                (this.__state.scissorRectangle.height *
                  this.__stage.window.__scale) |
                0));
            null == this.__state.renderToTexture &&
              null == this.__stage3D &&
              (b =
                ((this.__stage.window.__height * this.__stage.window.__scale) |
                  0) -
                d -
                b);
            if (
              this.__contextState.scissorRectangle.x != a ||
              this.__contextState.scissorRectangle.y != b ||
              this.__contextState.scissorRectangle.width != c ||
              this.__contextState.scissorRectangle.height != d
            )
              (this.gl.scissor(a, b, c, d),
                this.__contextState.scissorRectangle.setTo(a, b, c, d));
          } else
            this.__contextState.scissorEnabled != this.__state.scissorEnabled &&
              (this.__setGLScissorTest(!1),
              (this.__contextState.scissorEnabled = !1));
        },
        __flushGLStencil: function () {
          if (
            this.__contextState.stencilTriangleFace !=
              this.__state.stencilTriangleFace ||
            this.__contextState.stencilPass != this.__state.stencilPass ||
            this.__contextState.stencilDepthFail !=
              this.__state.stencilDepthFail ||
            this.__contextState.stencilFail != this.__state.stencilFail
          )
            (this.gl.stencilOpSeparate(
              this.__getGLTriangleFace(this.__state.stencilTriangleFace),
              this.__getGLStencilAction(this.__state.stencilFail),
              this.__getGLStencilAction(this.__state.stencilDepthFail),
              this.__getGLStencilAction(this.__state.stencilPass),
            ),
              (this.__contextState.stencilTriangleFace =
                this.__state.stencilTriangleFace),
              (this.__contextState.stencilPass = this.__state.stencilPass),
              (this.__contextState.stencilDepthFail =
                this.__state.stencilDepthFail),
              (this.__contextState.stencilFail = this.__state.stencilFail));
          this.__contextState.stencilWriteMask !=
            this.__state.stencilWriteMask &&
            (this.gl.stencilMask(this.__state.stencilWriteMask),
            (this.__contextState.stencilWriteMask =
              this.__state.stencilWriteMask));
          if (
            this.__contextState.stencilCompareMode !=
              this.__state.stencilCompareMode ||
            this.__contextState.stencilReferenceValue !=
              this.__state.stencilReferenceValue ||
            this.__contextState.stencilReadMask != this.__state.stencilReadMask
          )
            (this.gl.stencilFunc(
              this.__getGLCompareMode(this.__state.stencilCompareMode),
              this.__state.stencilReferenceValue,
              this.__state.stencilReadMask,
            ),
              (this.__contextState.stencilCompareMode =
                this.__state.stencilCompareMode),
              (this.__contextState.stencilReferenceValue =
                this.__state.stencilReferenceValue),
              (this.__contextState.stencilReadMask =
                this.__state.stencilReadMask));
        },
        __flushGLTextures: function () {
          for (
            var a = 0, b, c, d = 0, f = this.__state.textures.length;
            d < f;

          ) {
            var g = d++;
            b = this.__state.textures[g];
            c = this.__state.samplerStates[g];
            null == c &&
              ((this.__state.samplerStates[g] = new ng()),
              (c = this.__state.samplerStates[g]));
            this.gl.activeTexture(this.gl.TEXTURE0 + a);
            null != b
              ? (b.__textureTarget == this.gl.TEXTURE_2D
                  ? this.__bindGLTexture2D(b.__getTexture())
                  : this.__bindGLTextureCubeMap(b.__getTexture()),
                (this.__contextState.textures[g] = b),
                b.__setSamplerState(c))
              : this.__bindGLTexture2D(null);
            null != this.__state.program &&
              0 == this.__state.program.__format &&
              c.textureAlpha &&
              (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4),
              null != b && null != b.__alphaTexture
                ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D
                    ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture())
                    : this.__bindGLTextureCubeMap(
                        b.__alphaTexture.__getTexture(),
                      ),
                  b.__alphaTexture.__setSamplerState(c),
                  this.gl.uniform1i(
                    this.__state.program.__agalAlphaSamplerEnabled[a].location,
                    1,
                  ))
                : (this.__bindGLTexture2D(null),
                  null != this.__state.program.__agalAlphaSamplerEnabled[a] &&
                    this.gl.uniform1i(
                      this.__state.program.__agalAlphaSamplerEnabled[a]
                        .location,
                      0,
                    )));
            ++a;
          }
        },
        __flushGLViewport: function () {
          if (null == this.__state.renderToTexture)
            if (this.__stage.context3D == this) {
              var a = this.backBufferWidth,
                b = this.backBufferHeight;
              null != this.__stage3D ||
                this.__backBufferWantsBestResolution ||
                ((a = (this.backBufferWidth * this.__stage.window.__scale) | 0),
                (b =
                  (this.backBufferHeight * this.__stage.window.__scale) | 0));
              var c = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                d =
                  (this.__stage.window.__height * this.__stage.window.__scale -
                    b -
                    (null == this.__stage3D ? 0 : this.__stage3D.get_y())) |
                  0;
              this.gl.viewport(c, d, a, b);
            } else
              this.gl.viewport(
                0,
                0,
                this.backBufferWidth,
                this.backBufferHeight,
              );
          else
            ((b = a = 0),
              this.__state.renderToTexture instanceof Ej
                ? ((b = this.__state.renderToTexture),
                  (a = b.__width),
                  (b = b.__height))
                : this.__state.renderToTexture instanceof Jh
                  ? ((b = this.__state.renderToTexture),
                    (a = b.__width),
                    (b = b.__height))
                  : this.__state.renderToTexture instanceof Fj &&
                    ((b = this.__state.renderToTexture), (b = a = b.__size)),
              this.gl.viewport(0, 0, a, b));
        },
        __getGLBlend: function (a) {
          switch (a) {
            case 0:
              return this.gl.DST_ALPHA;
            case 1:
              return this.gl.DST_COLOR;
            case 2:
              return this.gl.ONE;
            case 3:
              return this.gl.ONE_MINUS_DST_ALPHA;
            case 4:
              return this.gl.ONE_MINUS_DST_COLOR;
            case 5:
              return this.gl.ONE_MINUS_SRC_ALPHA;
            case 6:
              return this.gl.ONE_MINUS_SRC_COLOR;
            case 7:
              return this.gl.SRC_ALPHA;
            case 8:
              return this.gl.SRC_COLOR;
            case 9:
              return this.gl.ZERO;
            default:
              throw new $c();
          }
        },
        __getGLCompareMode: function (a) {
          switch (a) {
            case 0:
              return this.gl.ALWAYS;
            case 1:
              return this.gl.EQUAL;
            case 2:
              return this.gl.GREATER;
            case 3:
              return this.gl.GEQUAL;
            case 4:
              return this.gl.LESS;
            case 5:
              return this.gl.LEQUAL;
            case 6:
              return this.gl.NEVER;
            case 7:
              return this.gl.NOTEQUAL;
            default:
              return this.gl.EQUAL;
          }
        },
        __getGLStencilAction: function (a) {
          switch (a) {
            case 0:
              return this.gl.DECR;
            case 1:
              return this.gl.DECR_WRAP;
            case 2:
              return this.gl.INCR;
            case 3:
              return this.gl.INCR_WRAP;
            case 4:
              return this.gl.INVERT;
            case 5:
              return this.gl.KEEP;
            case 6:
              return this.gl.REPLACE;
            case 7:
              return this.gl.ZERO;
            default:
              return this.gl.KEEP;
          }
        },
        __getGLTriangleFace: function (a) {
          switch (a) {
            case 0:
              return this.gl.BACK;
            case 1:
              return this.gl.FRONT;
            case 2:
              return this.gl.FRONT_AND_BACK;
            case 3:
              return this.gl.NONE;
            default:
              return this.gl.FRONT_AND_BACK;
          }
        },
        __renderStage3D: function (a) {
          var b = a.context3D;
          if (
            null != b &&
            b != this &&
            null != b.__frontBufferTexture &&
            a.visible &&
            0 < this.backBufferHeight &&
            0 < this.backBufferWidth
          ) {
            if (null == this.__renderStage3DProgram) {
              var c = new ma();
              c.assemble(Hl.toString(1), 'm44 op, va0, vc0\nmov v0, va1');
              var d = new ma();
              d.assemble(
                Hl.toString(0),
                'tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1',
              );
              this.__renderStage3DProgram = this.createProgram();
              this.__renderStage3DProgram.upload(c.agalcode, d.agalcode);
            }
            this.setProgram(this.__renderStage3DProgram);
            this.setBlendFactors(2, 9);
            this.setColorMask(!0, !0, !0, !0);
            this.setCulling(3);
            this.setDepthTest(!1, 0);
            this.setStencilActions();
            this.setStencilReferenceValue(0, 0, 0);
            this.setScissorRectangle(null);
            this.setTextureAt(0, b.__frontBufferTexture);
            this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
            this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
            this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
            this.drawTriangles(a.__indexBuffer);
            this.__present = !0;
          }
        },
        __setGLBlend: function (a) {
          this.__contextState.__enableGLBlend != a &&
            (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND),
            (this.__contextState.__enableGLBlend = a));
        },
        __setGLBlendEquation: function (a) {
          this.__contextState.__glBlendEquation != a &&
            (this.gl.blendEquation(a),
            (this.__contextState.__glBlendEquation = a));
        },
        __setGLCullFace: function (a) {
          this.__contextState.__enableGLCullFace != a &&
            (a
              ? this.gl.enable(this.gl.CULL_FACE)
              : this.gl.disable(this.gl.CULL_FACE),
            (this.__contextState.__enableGLCullFace = a));
        },
        __setGLDepthTest: function (a) {
          this.__contextState.__enableGLDepthTest != a &&
            (a
              ? this.gl.enable(this.gl.DEPTH_TEST)
              : this.gl.disable(this.gl.DEPTH_TEST),
            (this.__contextState.__enableGLDepthTest = a));
        },
        __setGLFrontFace: function (a) {
          this.__contextState.__frontFaceGLCCW != a &&
            (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW),
            (this.__contextState.__frontFaceGLCCW = a));
        },
        __setGLScissorTest: function (a) {
          this.__contextState.__enableGLScissorTest != a &&
            (a
              ? this.gl.enable(this.gl.SCISSOR_TEST)
              : this.gl.disable(this.gl.SCISSOR_TEST),
            (this.__contextState.__enableGLScissorTest = a));
        },
        __setGLStencilTest: function (a) {
          this.__contextState.__enableGLStencilTest != a &&
            (a
              ? this.gl.enable(this.gl.STENCIL_TEST)
              : this.gl.disable(this.gl.STENCIL_TEST),
            (this.__contextState.__enableGLStencilTest = a));
        },
        __class__: rb,
      });
      var Gl = {
          fromString: function (a) {
            switch (a) {
              case 'dynamicDraw':
                return 0;
              case 'staticDraw':
                return 1;
              default:
                return null;
            }
          },
          toString: function (a) {
            switch (a) {
              case 0:
                return 'dynamicDraw';
              case 1:
                return 'staticDraw';
              default:
                return null;
            }
          },
        },
        Hl = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'fragment';
              case 1:
                return 'vertex';
              default:
                return null;
            }
          },
        },
        Ul = {
          toString: function (a) {
            switch (a) {
              case 0:
                return 'bgrPacked565';
              case 1:
                return 'bgra';
              case 2:
                return 'bgraPacked4444';
              case 3:
                return 'compressed';
              case 4:
                return 'compressedAlpha';
              case 5:
                return 'rgbaHalfFloat';
              default:
                return null;
            }
          },
        },
        Sk = function (a, b, c) {
          this.__context = a;
          this.__numIndices = b;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
        };
      h['openfl.display3D.IndexBuffer3D'] = Sk;
      Sk.__name__ = 'openfl.display3D.IndexBuffer3D';
      Sk.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLElementArrayBuffer(this.__id),
            Nc.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            var d = b + c,
              f = this.__tempUInt16Array;
            if (
              null == this.__tempUInt16Array ||
              this.__tempUInt16Array.length < c
            )
              ((this.__tempUInt16Array = null != c ? new Uint16Array(c) : null),
                null != f && this.__tempUInt16Array.set(f));
            for (c = b; c < d; )
              ((f = c++), (this.__tempUInt16Array[f - b] = a.get(f)));
            this.uploadFromTypedArray(this.__tempUInt16Array);
          }
        },
        __class__: Sk,
      };
      var Tk = function (a, b) {
        this.__context = a;
        this.__format = b;
        0 == this.__format
          ? ((this.__agalSamplerUsageMask = 0),
            (this.__agalUniforms = new Xa()),
            (this.__agalSamplerUniforms = new Xa()),
            (this.__agalAlphaSamplerUniforms = new Xa()),
            (this.__agalAlphaSamplerEnabled = []))
          : ((this.__glslAttribNames = []),
            (this.__glslAttribTypes = []),
            (this.__glslSamplerNames = []),
            (this.__glslUniformLocations = []),
            (this.__glslUniformNames = []),
            (this.__glslUniformTypes = []));
        this.__samplerStates = [];
      };
      h['openfl.display3D.Program3D'] = Tk;
      Tk.__name__ = 'openfl.display3D.Program3D';
      Tk.prototype = {
        upload: function (a, b) {
          if (0 == this.__format) {
            var c = [];
            a = hd.convertToGLSL(a, null);
            b = hd.convertToGLSL(b, c);
            5 == La.level &&
              (La.info(a, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 399,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }),
              La.info(b, {
                fileName: 'openfl/display3D/Program3D.hx',
                lineNumber: 400,
                className: 'openfl.display3D.Program3D',
                methodName: 'upload',
              }));
            this.__deleteShaders();
            this.__uploadFromGLSL(a, b);
            this.__buildAGALUniformList();
            b = 0;
            for (a = c.length; b < a; ) {
              var d = b++;
              this.__samplerStates[d] = c[d];
            }
          }
        },
        __buildAGALUniformList: function () {
          if (1 != this.__format) {
            var a = this.__context.gl;
            this.__agalUniforms.clear();
            this.__agalSamplerUniforms.clear();
            this.__agalAlphaSamplerUniforms.clear();
            this.__agalAlphaSamplerEnabled = [];
            this.__agalSamplerUsageMask = 0;
            var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
            for (var c = new Xa(), d = new Xa(), f = 0; f < b; ) {
              var g = f++,
                k = a.getActiveUniform(this.__glProgram, g),
                l = k.name,
                h = k.size,
                t = k.type;
              k = new Gj(this.__context);
              k.name = l;
              k.size = h;
              k.type = t;
              k.location = a.getUniformLocation(this.__glProgram, k.name);
              l = k.name.indexOf('[');
              0 <= l && (k.name = k.name.substring(0, l));
              switch (k.type) {
                case 35674:
                  k.regCount = 2;
                  break;
                case 35675:
                  k.regCount = 3;
                  break;
                case 35676:
                  k.regCount = 4;
                  break;
                default:
                  k.regCount = 1;
              }
              k.regCount *= k.size;
              this.__agalUniforms.add(k);
              if ('vcPositionScale' == k.name) this.__agalPositionScale = k;
              else if (P.startsWith(k.name, 'vc'))
                ((k.regIndex = I.parseInt(k.name.substring(2))),
                  (k.regData = this.__context.__vertexConstants),
                  c.add(k));
              else if (P.startsWith(k.name, 'fc'))
                ((k.regIndex = I.parseInt(k.name.substring(2))),
                  (k.regData = this.__context.__fragmentConstants),
                  d.add(k));
              else if (
                P.startsWith(k.name, 'sampler') &&
                -1 == k.name.indexOf('alpha')
              )
                for (
                  k.regIndex = I.parseInt(k.name.substring(7)),
                    this.__agalSamplerUniforms.add(k),
                    l = 0,
                    h = k.regCount;
                  l < h;

                )
                  ((t = l++),
                    (this.__agalSamplerUsageMask |= 1 << (k.regIndex + t)));
              else
                P.startsWith(k.name, 'sampler') && P.endsWith(k.name, '_alpha')
                  ? ((l = k.name.indexOf('_') - 7),
                    (k.regIndex = I.parseInt(k.name.substring(7, 7 + l)) + 4),
                    this.__agalAlphaSamplerUniforms.add(k))
                  : P.startsWith(k.name, 'sampler') &&
                    P.endsWith(k.name, '_alphaEnabled') &&
                    ((k.regIndex = I.parseInt(k.name.substring(7))),
                    (this.__agalAlphaSamplerEnabled[k.regIndex] = k));
              5 == La.level &&
                La.verbose(
                  '' +
                    g +
                    ' name:' +
                    k.name +
                    ' type:' +
                    k.type +
                    ' size:' +
                    k.size +
                    ' location:' +
                    I.string(k.location),
                  {
                    fileName: 'openfl/display3D/Program3D.hx',
                    lineNumber: 577,
                    className: 'openfl.display3D.Program3D',
                    methodName: '__buildAGALUniformList',
                  },
                );
            }
            this.__agalVertexUniformMap = new Kh(D.array(c));
            this.__agalFragmentUniformMap = new Kh(D.array(d));
          }
        },
        __deleteShaders: function () {
          var a = this.__context.gl;
          null != this.__glProgram && (this.__glProgram = null);
          null != this.__glVertexShader &&
            (a.deleteShader(this.__glVertexShader),
            (this.__glVertexShader = null));
          null != this.__glFragmentShader &&
            (a.deleteShader(this.__glFragmentShader),
            (this.__glFragmentShader = null));
        },
        __disable: function () {},
        __enable: function () {
          var a = this.__context.gl;
          a.useProgram(this.__glProgram);
          if (0 == this.__format) {
            this.__agalVertexUniformMap.markAllDirty();
            this.__agalFragmentUniformMap.markAllDirty();
            for (var b = this.__agalSamplerUniforms.h; null != b; ) {
              var c = b.item;
              b = b.next;
              if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
              else throw new $c('!!! TODO: uniform location on webgl');
            }
            for (b = this.__agalAlphaSamplerUniforms.h; null != b; )
              if (((c = b.item), (b = b.next), 1 == c.regCount))
                a.uniform1i(c.location, c.regIndex);
              else throw new $c('!!! TODO: uniform location on webgl');
          }
        },
        __flush: function () {
          0 == this.__format &&
            (this.__agalVertexUniformMap.flush(),
            this.__agalFragmentUniformMap.flush());
        },
        __markDirty: function (a, b, c) {
          1 != this.__format &&
            (a
              ? this.__agalVertexUniformMap.markDirty(b, c)
              : this.__agalFragmentUniformMap.markDirty(b, c));
        },
        __setPositionScale: function (a) {
          1 != this.__format &&
            null != this.__agalPositionScale &&
            this.__context.gl.uniform4fv(this.__agalPositionScale.location, a);
        },
        __uploadFromGLSL: function (a, b) {
          var c = this.__context.gl;
          this.__glVertexSource = a;
          this.__glFragmentSource = b;
          this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
          c.shaderSource(this.__glVertexShader, a);
          c.compileShader(this.__glVertexShader);
          if (
            0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)
          ) {
            var d =
              'Error compiling vertex shader\n' +
              c.getShaderInfoLog(this.__glVertexShader);
            La.error(d + ('\n' + a), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 869,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            });
          }
          this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
          c.shaderSource(this.__glFragmentShader, b);
          c.compileShader(this.__glFragmentShader);
          0 ==
            c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) &&
            ((d =
              'Error compiling fragment shader\n' +
              c.getShaderInfoLog(this.__glFragmentShader)),
            La.error(d + ('\n' + b), {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 881,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
          this.__glProgram = c.createProgram();
          if (0 == this.__format)
            for (b = 0; 16 > b; ) {
              var f = b++;
              d = 'va' + f;
              -1 != a.indexOf(' ' + d) &&
                c.bindAttribLocation(this.__glProgram, f, d);
            }
          else
            for (b = 0, a = this.__glslAttribNames; b < a.length; )
              if (
                ((d = a[b]),
                ++b,
                -1 < d.indexOf('Position') && P.startsWith(d, 'openfl_'))
              ) {
                c.bindAttribLocation(this.__glProgram, 0, d);
                break;
              }
          c.attachShader(this.__glProgram, this.__glVertexShader);
          c.attachShader(this.__glProgram, this.__glFragmentShader);
          c.linkProgram(this.__glProgram);
          0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) &&
            ((d =
              'Unable to initialize the shader program\n' +
              c.getProgramInfoLog(this.__glProgram)),
            La.error(d, {
              fileName: 'openfl/display3D/Program3D.hx',
              lineNumber: 922,
              className: 'openfl.display3D.Program3D',
              methodName: '__uploadFromGLSL',
            }));
        },
        __class__: Tk,
      };
      var Gj = function (a) {
        this.context = a;
        this.isDirty = !0;
        this.regDataPointer = new Kk(null, 0);
      };
      h['openfl.display3D.Uniform'] = Gj;
      Gj.__name__ = 'openfl.display3D.Uniform';
      Gj.prototype = {
        flush: function () {
          var a = this.context.gl,
            b = 4 * this.regIndex;
          switch (this.type) {
            case 35664:
              Ql.uniform2fv(
                a,
                this.location,
                this.regData.subarray(b, b + 2 * this.regCount),
              );
              break;
            case 35665:
              var c = this.location;
              b = this.regData.subarray(b, b + 3 * this.regCount);
              var d = null;
              null != d ? a.uniform3fv(c, b, d, null) : a.uniform3fv(c, b);
              break;
            case 35666:
              c = this.location;
              b = this.regData.subarray(b, b + 4 * this.regCount);
              d = null;
              null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
              break;
            case 35674:
              Nc.uniformMatrix2fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 4 * this.size),
              );
              break;
            case 35675:
              Nc.uniformMatrix3fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 9 * this.size),
              );
              break;
            case 35676:
              Nc.uniformMatrix4fv(
                a,
                this.location,
                !1,
                this.regData.subarray(b, b + 16 * this.size),
              );
              break;
            default:
              ((c = this.location),
                (b = this.regData.subarray(b, b + 4 * this.regCount)),
                (d = null),
                null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b));
          }
        },
        __class__: Gj,
      };
      var Kh = function (a) {
        this.__uniforms = a;
        this.__uniforms.sort(function (a, b) {
          return ya.compare(a.regIndex, b.regIndex);
        });
        var b = 0;
        a = 0;
        for (var c = this.__uniforms; a < c.length; ) {
          var d = c[a];
          ++a;
          d.regIndex + d.regCount > b && (b = d.regIndex + d.regCount);
        }
        this.__registerLookup = ra.toObjectVector(null, b);
        a = 0;
        for (c = this.__uniforms; a < c.length; ) {
          d = c[a];
          ++a;
          b = 0;
          for (var f = d.regCount; b < f; ) {
            var g = b++;
            this.__registerLookup.set(d.regIndex + g, d);
          }
        }
        this.__anyDirty = this.__allDirty = !0;
      };
      h['openfl.display3D.UniformMap'] = Kh;
      Kh.__name__ = 'openfl.display3D.UniformMap';
      Kh.prototype = {
        flush: function () {
          if (this.__anyDirty) {
            for (var a = 0, b = this.__uniforms; a < b.length; ) {
              var c = b[a];
              ++a;
              if (this.__allDirty || c.isDirty) (c.flush(), (c.isDirty = !1));
            }
            this.__anyDirty = this.__allDirty = !1;
          }
        },
        markAllDirty: function () {
          this.__anyDirty = this.__allDirty = !0;
        },
        markDirty: function (a, b) {
          if (!this.__allDirty)
            for (
              b = a + b,
                b > this.__registerLookup.get_length() &&
                  (b = this.__registerLookup.get_length());
              a < b;

            ) {
              var c = this.__registerLookup.get(a);
              null != c
                ? ((this.__anyDirty = c.isDirty = !0),
                  (a = c.regIndex + c.regCount))
                : ++a;
            }
        },
        __class__: Kh,
      };
      var Uk = function (a, b, c, d) {
        this.__context = a;
        this.__numVertices = b;
        this.__vertexSize = c;
        a = this.__context.gl;
        this.__id = a.createBuffer();
        this.__stride = 4 * this.__vertexSize;
        this.__usage = 0 == Gl.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
      };
      h['openfl.display3D.VertexBuffer3D'] = Uk;
      Uk.__name__ = 'openfl.display3D.VertexBuffer3D';
      Uk.prototype = {
        uploadFromTypedArray: function (a, b) {
          null != a &&
            ((b = this.__context.gl),
            this.__context.__bindGLArrayBuffer(this.__id),
            Nc.bufferData(b, b.ARRAY_BUFFER, a, this.__usage));
        },
        uploadFromVector: function (a, b, c) {
          if (null != a) {
            b *= this.__vertexSize;
            var d = c * this.__vertexSize;
            c = b + d;
            var f = this.__tempFloat32Array;
            if (
              null == this.__tempFloat32Array ||
              this.__tempFloat32Array.length < d
            )
              ((this.__tempFloat32Array =
                null != d ? new Float32Array(d) : null),
                null != f && this.__tempFloat32Array.set(f));
            for (d = b; d < c; )
              ((f = d++), (this.__tempFloat32Array[f - b] = a.get(f)));
            this.uploadFromTypedArray(
              ih.toArrayBufferView(this.__tempFloat32Array),
            );
          }
        },
        __class__: Uk,
      };
      var hd = function () {};
      h['openfl.display3D._internal.AGALConverter'] = hd;
      hd.__name__ = 'openfl.display3D._internal.AGALConverter';
      hd.prefixFromType = function (a, b) {
        switch (a) {
          case 0:
            return 'va';
          case 1:
            return b == Wd.VERTEX ? 'vc' : 'fc';
          case 2:
            return b == Wd.VERTEX ? 'vt' : 'ft';
          case 3:
            return 'output_';
          case 4:
            return 'v';
          case 5:
            return 'sampler';
          default:
            throw new $c('Invalid data!');
        }
      };
      hd.readUInt64 = function (a) {
        var b = a.readInt();
        a = a.readInt();
        return new lb(a, b);
      };
      hd.convertToGLSL = function (a, b) {
        a.position = 0;
        a.__endian = 1;
        var c = a.readByte() & 255;
        if (176 == c) return a.readUTF();
        if (160 != c) throw new $c('Magic value must be 0xA0, may not be AGAL');
        var d = a.readInt();
        if (1 != d) throw new $c('Version must be 1');
        if (161 != (a.readByte() & 255))
          throw new $c('Shader type ID must be 0xA1');
        c = 0 == (a.readByte() & 255) ? Wd.VERTEX : Wd.FRAGMENT;
        for (var f = new Hj(), g = ''; ; ) {
          d = a.position;
          if (!db.gt(Nd.get_length(a), d)) break;
          var k = a.readInt();
          d = a.readUnsignedInt();
          var l = hd.readUInt64(a),
            h = hd.readUInt64(a);
          d = Qg.parse(d, c);
          l = og.parse(l, c, d.mask);
          var t = og.parse(h, c, d.mask);
          g += '\t';
          switch (k) {
            case 0:
              g += I.string(d.toGLSL() + ' = ' + l.toGLSL() + '; // mov');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 1:
              g += I.string(
                d.toGLSL() +
                  ' = ' +
                  l.toGLSL() +
                  ' + ' +
                  t.toGLSL() +
                  '; // add',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 2:
              g += I.string(
                d.toGLSL() +
                  ' = ' +
                  l.toGLSL() +
                  ' - ' +
                  t.toGLSL() +
                  '; // sub',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 3:
              g += I.string(
                d.toGLSL() +
                  ' = ' +
                  l.toGLSL() +
                  ' * ' +
                  t.toGLSL() +
                  '; // mul',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 4:
              g += I.string(
                d.toGLSL() +
                  ' = ' +
                  l.toGLSL() +
                  ' / ' +
                  t.toGLSL() +
                  '; // div',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 5:
              g =
                -1 < l.toGLSL().indexOf('.')
                  ? g +
                    I.string(d.toGLSL() + ' = 1.0 / ' + l.toGLSL() + '; // rcp')
                  : g +
                    I.string(
                      d.toGLSL() + ' = vec4(1) / ' + l.toGLSL() + '; // rcp',
                    );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 6:
              g += I.string(
                d.toGLSL() +
                  ' = min(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '); // min',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 7:
              g += I.string(
                d.toGLSL() +
                  ' = max(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '); // max',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 8:
              g += I.string(
                d.toGLSL() + ' = fract(' + l.toGLSL() + '); // frc',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 9:
              g += I.string(
                d.toGLSL() + ' = sqrt(' + l.toGLSL() + '); // sqrt',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 10:
              g += I.string(
                d.toGLSL() + ' = inversesqrt(' + l.toGLSL() + '); // rsq',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 11:
              g += I.string(
                d.toGLSL() +
                  ' = pow(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '); // pow',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 12:
              g += I.string(d.toGLSL() + ' = log2(' + l.toGLSL() + '); // log');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 13:
              g += I.string(d.toGLSL() + ' = exp2(' + l.toGLSL() + '); // exp');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 14:
              g += I.string(
                d.toGLSL() + ' = normalize(' + l.toGLSL() + '); // normalize',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 15:
              g += I.string(d.toGLSL() + ' = sin(' + l.toGLSL() + '); // sin');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 16:
              g += I.string(d.toGLSL() + ' = cos(' + l.toGLSL() + '); // cos');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 17:
              l.sourceMask = t.sourceMask = 7;
              g += I.string(
                d.toGLSL() +
                  ' = cross(vec3(' +
                  l.toGLSL() +
                  '), vec3(' +
                  t.toGLSL() +
                  ')); // crs',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 18:
              l.sourceMask = t.sourceMask = 7;
              g += I.string(
                d.toGLSL() +
                  ' = vec4(dot(vec3(' +
                  l.toGLSL() +
                  '), vec3(' +
                  t.toGLSL() +
                  ')))' +
                  d.getWriteMask() +
                  '; // dp3',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 19:
              l.sourceMask = t.sourceMask = 15;
              g += I.string(
                d.toGLSL() +
                  ' = vec4(dot(vec4(' +
                  l.toGLSL() +
                  '), vec4(' +
                  t.toGLSL() +
                  ')))' +
                  d.getWriteMask() +
                  '; // dp4',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 20:
              g += I.string(d.toGLSL() + ' = abs(' + l.toGLSL() + '); // abs');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 21:
              g += I.string(d.toGLSL() + ' = -' + l.toGLSL() + '; // neg');
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 22:
              g += I.string(
                d.toGLSL() +
                  ' = clamp(' +
                  l.toGLSL() +
                  ', 0.0, 1.0); // saturate',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              break;
            case 23:
              k = f.getRegisterUsage(t);
              k != ea.VECTOR_4 && k != ea.VECTOR_4_ARRAY
                ? ((g += I.string(
                    d.toGLSL() +
                      ' = ' +
                      l.toGLSL() +
                      ' * mat3(' +
                      t.toGLSL(!1) +
                      '); // m33',
                  )),
                  f.addDR(d, ea.VECTOR_4),
                  f.addSR(l, ea.VECTOR_4),
                  f.addSR(t, ea.MATRIX_4_4))
                : ((l.sourceMask = t.sourceMask = 7),
                  (g += I.string(
                    d.toGLSL() +
                      ' = vec3(dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 0) +
                      '), dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 1) +
                      '),dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 2) +
                      ')); // m33',
                  )),
                  f.addDR(d, ea.VECTOR_4),
                  f.addSR(l, ea.VECTOR_4),
                  f.addSR(t, ea.VECTOR_4, 0),
                  f.addSR(t, ea.VECTOR_4, 1),
                  f.addSR(t, ea.VECTOR_4, 2));
              break;
            case 24:
              k = f.getRegisterUsage(t);
              k != ea.VECTOR_4 && k != ea.VECTOR_4_ARRAY
                ? ((g += I.string(
                    d.toGLSL() +
                      ' = ' +
                      l.toGLSL() +
                      ' * ' +
                      t.toGLSL(!1) +
                      '; // m44',
                  )),
                  f.addDR(d, ea.VECTOR_4),
                  f.addSR(l, ea.VECTOR_4),
                  f.addSR(t, ea.MATRIX_4_4))
                : ((l.sourceMask = t.sourceMask = 15),
                  (g += I.string(
                    d.toGLSL() +
                      ' = vec4(dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 0) +
                      '), dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 1) +
                      '), dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 2) +
                      '), dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 3) +
                      ')); // m44',
                  )),
                  f.addDR(d, ea.VECTOR_4),
                  f.addSR(l, ea.VECTOR_4),
                  f.addSR(t, ea.VECTOR_4, 0),
                  f.addSR(t, ea.VECTOR_4, 1),
                  f.addSR(t, ea.VECTOR_4, 2),
                  f.addSR(t, ea.VECTOR_4, 3));
              break;
            case 25:
              d.mask &= 7;
              k = f.getRegisterUsage(t);
              k != ea.VECTOR_4 && k != ea.VECTOR_4_ARRAY
                ? ((g += I.string(
                    d.toGLSL() +
                      ' = ' +
                      l.toGLSL() +
                      ' * ' +
                      t.toGLSL(!1) +
                      '; // m34',
                  )),
                  f.addDR(d, ea.VECTOR_4),
                  f.addSR(l, ea.VECTOR_4),
                  f.addSR(t, ea.MATRIX_4_4))
                : ((l.sourceMask = t.sourceMask = 15),
                  (g += I.string(
                    d.toGLSL() +
                      ' = vec3(dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 0) +
                      '), dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 1) +
                      '),dot(' +
                      l.toGLSL(!0) +
                      ',' +
                      t.toGLSL(!0, 2) +
                      ')); // m34',
                  )),
                  f.addDR(d, ea.VECTOR_4),
                  f.addSR(l, ea.VECTOR_4),
                  f.addSR(t, ea.VECTOR_4, 0),
                  f.addSR(t, ea.VECTOR_4, 1),
                  f.addSR(t, ea.VECTOR_4, 2));
              break;
            case 39:
              l.sourceMask = 15;
              g += I.string(
                'if (any(lessThan(' + l.toGLSL() + ', vec4(0)))) discard;',
              );
              f.addSR(l, ea.VECTOR_4);
              break;
            case 40:
              t = Rg.parse(h, c);
              switch (t.d) {
                case 0:
                  2 == t.t
                    ? ((l.sourceMask = 3),
                      f.addSaR(t, ea.SAMPLER_2D_ALPHA),
                      (g += I.string(
                        'if (' + t.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (g += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = vec4(texture2D(' +
                          t.toGLSL() +
                          ', ' +
                          l.toGLSL() +
                          ').xyz, texture2D(' +
                          t.toGLSL() +
                          '_alpha, ' +
                          l.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (g += '\t} else {\n'),
                      (g += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = texture2D(' +
                          t.toGLSL() +
                          ', ' +
                          l.toGLSL() +
                          '); // tex\n',
                      )),
                      (g += '\t}'))
                    : ((l.sourceMask = 3),
                      f.addSaR(t, ea.SAMPLER_2D),
                      (g += I.string(
                        d.toGLSL() +
                          ' = texture2D(' +
                          t.toGLSL() +
                          ', ' +
                          l.toGLSL() +
                          '); // tex',
                      )));
                  break;
                case 1:
                  2 == t.t
                    ? ((l.sourceMask = 7),
                      f.addSaR(t, ea.SAMPLER_CUBE_ALPHA),
                      (g += I.string(
                        'if (' + t.toGLSL() + '_alphaEnabled) {\n',
                      )),
                      (g += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = vec4(textureCube(' +
                          t.toGLSL() +
                          ', ' +
                          l.toGLSL() +
                          ').xyz, textureCube(' +
                          t.toGLSL() +
                          '_alpha, ' +
                          l.toGLSL() +
                          ').x); // tex + alpha\n',
                      )),
                      (g += '\t} else {\n'),
                      (g += I.string(
                        '\t\t' +
                          d.toGLSL() +
                          ' = textureCube(' +
                          t.toGLSL() +
                          ', ' +
                          l.toGLSL() +
                          '); // tex',
                      )),
                      (g += '\t}'))
                    : ((l.sourceMask = 7),
                      (g += I.string(
                        d.toGLSL() +
                          ' = textureCube(' +
                          t.toGLSL() +
                          ', ' +
                          l.toGLSL() +
                          '); // tex',
                      )),
                      f.addSaR(t, ea.SAMPLER_CUBE));
              }
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              null != b && (b[t.n] = t.toSamplerState());
              break;
            case 41:
              l.sourceMask = t.sourceMask = 15;
              g += I.string(
                d.toGLSL() +
                  ' = vec4(greaterThanEqual(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // ste',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 42:
              l.sourceMask = t.sourceMask = 15;
              g += I.string(
                d.toGLSL() +
                  ' = vec4(lessThan(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // slt',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 44:
              l.sourceMask = t.sourceMask = 15;
              g += I.string(
                d.toGLSL() +
                  ' = vec4(equal(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // seq',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            case 45:
              l.sourceMask = t.sourceMask = 15;
              g += I.string(
                d.toGLSL() +
                  ' = vec4(notEqual(' +
                  l.toGLSL() +
                  ', ' +
                  t.toGLSL() +
                  '))' +
                  d.getWriteMask() +
                  '; // sne',
              );
              f.addDR(d, ea.VECTOR_4);
              f.addSR(l, ea.VECTOR_4);
              f.addSR(t, ea.VECTOR_4);
              break;
            default:
              throw new $c('Opcode ' + k);
          }
          g += '\n';
        }
        null == hd.limitedProfile &&
          ((d = gf.context.getParameter(7938)),
          (hd.limitedProfile =
            -1 < d.indexOf('OpenGL ES') || -1 < d.indexOf('WebGL')));
        a =
          '' +
          I.string(
            '// AGAL ' + (c == Wd.VERTEX ? 'vertex' : 'fragment') + ' shader\n',
          );
        a = hd.limitedProfile
          ? a +
            '#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n'
          : a + '#version 120\n';
        a += I.string(f.toGLSL(!1));
        c == Wd.VERTEX && (a += 'uniform vec4 vcPositionScale;\n');
        a = a + 'void main() {\n' + I.string(f.toGLSL(!0));
        a += I.string(g);
        c == Wd.VERTEX && (a += '\tgl_Position *= vcPositionScale;\n');
        return a + '}\n';
      };
      var Qg = function () {};
      h['openfl.display3D._internal._AGALConverter.DestRegister'] = Qg;
      Qg.__name__ = 'openfl.display3D._internal._AGALConverter.DestRegister';
      Qg.parse = function (a, b) {
        var c = new Qg();
        c.programType = b;
        c.type = (a >>> 24) & 15;
        c.mask = (a >>> 16) & 15;
        c.n = a & 65535;
        return c;
      };
      Qg.prototype = {
        getWriteMask: function () {
          var a = '.';
          0 != (this.mask & 1) && (a += 'x');
          0 != (this.mask & 2) && (a += 'y');
          0 != (this.mask & 4) && (a += 'z');
          0 != (this.mask & 8) && (a += 'w');
          return a;
        },
        toGLSL: function (a) {
          null == a && (a = !0);
          var b =
            3 == this.type
              ? this.programType == Wd.VERTEX
                ? 'gl_Position'
                : 'gl_FragColor'
              : hd.prefixFromType(this.type, this.programType) + this.n;
          a && 15 != this.mask && (b += this.getWriteMask());
          return b;
        },
        __class__: Qg,
      };
      var Wd = (L['openfl.display3D._internal._AGALConverter.ProgramType'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.ProgramType',
        __constructs__: null,
        VERTEX: {
          _hx_name: 'VERTEX',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: r,
        },
        FRAGMENT: {
          _hx_name: 'FRAGMENT',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.ProgramType',
          toString: r,
        },
      });
      Wd.__constructs__ = [Wd.VERTEX, Wd.FRAGMENT];
      Wd.__empty_constructs__ = [Wd.VERTEX, Wd.FRAGMENT];
      var Hj = function () {
        this.mEntries = [];
      };
      h['openfl.display3D._internal.RegisterMap'] = Hj;
      Hj.__name__ = 'openfl.display3D._internal.RegisterMap';
      Hj.prototype = {
        add: function (a, b, c, d) {
          for (var f = 0, g = this.mEntries; f < g.length; ) {
            var k = g[f];
            ++f;
            if (k.type == a && k.name == b && k.number == c) {
              if (k.usage != d)
                throw new $c(
                  'Cannot use register in multiple ways yet (mat4/vec4)',
                );
              return;
            }
          }
          k = new Vk();
          k.type = a;
          k.name = b;
          k.number = c;
          k.usage = d;
          this.mEntries.push(k);
        },
        addDR: function (a, b) {
          this.add(a.type, a.toGLSL(!1), a.n, b);
        },
        addSaR: function (a, b) {
          this.add(a.type, a.toGLSL(), a.n, b);
        },
        addSR: function (a, b, c) {
          null == c && (c = 0);
          0 != a.d
            ? (this.add(
                a.itype,
                hd.prefixFromType(a.itype, a.programType) + a.n,
                a.n,
                ea.VECTOR_4,
              ),
              this.add(
                a.type,
                hd.prefixFromType(a.type, a.programType) + a.o,
                a.o,
                ea.VECTOR_4_ARRAY,
              ))
            : this.add(a.type, a.toGLSL(!1, c), a.n + c, b);
        },
        getRegisterUsage: function (a) {
          return 0 != a.d
            ? ea.VECTOR_4_ARRAY
            : this.getUsage(a.type, a.toGLSL(!1), a.n);
        },
        getUsage: function (a, b, c) {
          for (var d = 0, f = this.mEntries; d < f.length; ) {
            var g = f[d];
            ++d;
            if (g.type == a && g.name == b && g.number == c) return g.usage;
          }
          return ea.UNUSED;
        },
        toGLSL: function (a) {
          this.mEntries.sort(function (a, b) {
            return a.number - b.number;
          });
          this.mEntries.sort(function (a, b) {
            return xa.__cast(a.type, Bl) - xa.__cast(b.type, Bl);
          });
          for (var b = '', c = 0, d = this.mEntries.length; c < d; ) {
            var f = c++;
            f = this.mEntries[f];
            if (!((a && 2 != f.type) || (!a && 2 == f.type)) && 3 != f.type) {
              switch (f.type) {
                case 0:
                  b += 'attribute ';
                  break;
                case 1:
                  b += 'uniform ';
                  break;
                case 2:
                  b += '\t';
                  break;
                case 3:
                  break;
                case 4:
                  b += 'varying ';
                  break;
                case 5:
                  b += 'uniform ';
                  break;
                default:
                  throw new $c();
              }
              switch (f.usage._hx_index) {
                case 0:
                  La.info('Missing switch patten: RegisterUsage.UNUSED', {
                    fileName: 'openfl/display3D/_internal/AGALConverter.hx',
                    lineNumber: 751,
                    className: 'openfl.display3D._internal.RegisterMap',
                    methodName: 'toGLSL',
                  });
                  break;
                case 1:
                  b += 'vec4 ';
                  break;
                case 2:
                  b += 'mat4 ';
                  break;
                case 3:
                  b += 'sampler2D ';
                  break;
                case 5:
                  b += 'samplerCube ';
                  break;
                case 7:
                  b += 'vec4 ';
              }
              f.usage == ea.SAMPLER_2D_ALPHA
                ? ((b += 'sampler2D '),
                  (b += I.string(f.name)),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'sampler2D '),
                  (b += I.string(f.name + '_alpha')),
                  (b += ';\n'),
                  (b += 'uniform '),
                  (b += 'bool '),
                  (b += I.string(f.name + '_alphaEnabled')))
                : f.usage == ea.SAMPLER_CUBE_ALPHA
                  ? ((b += 'samplerCube '),
                    (b += I.string(f.name)),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'samplerCube '),
                    (b += I.string(f.name + '_alpha')),
                    (b += ';\n'),
                    (b += 'uniform '),
                    (b += 'bool '),
                    (b += I.string(f.name + '_alphaEnabled')))
                  : (b =
                      f.usage == ea.VECTOR_4_ARRAY
                        ? b + I.string(f.name + '[128]')
                        : b + I.string(f.name));
              b += ';\n';
            }
          }
          return b;
        },
        __class__: Hj,
      };
      var Vk = function () {};
      h['openfl.display3D._internal._AGALConverter.RegisterMapEntry'] = Vk;
      Vk.__name__ =
        'openfl.display3D._internal._AGALConverter.RegisterMapEntry';
      Vk.prototype = { __class__: Vk };
      var ea = (L['openfl.display3D._internal._AGALConverter.RegisterUsage'] = {
        __ename__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
        __constructs__: null,
        UNUSED: {
          _hx_name: 'UNUSED',
          _hx_index: 0,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        VECTOR_4: {
          _hx_name: 'VECTOR_4',
          _hx_index: 1,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        MATRIX_4_4: {
          _hx_name: 'MATRIX_4_4',
          _hx_index: 2,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_2D: {
          _hx_name: 'SAMPLER_2D',
          _hx_index: 3,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_2D_ALPHA: {
          _hx_name: 'SAMPLER_2D_ALPHA',
          _hx_index: 4,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_CUBE: {
          _hx_name: 'SAMPLER_CUBE',
          _hx_index: 5,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        SAMPLER_CUBE_ALPHA: {
          _hx_name: 'SAMPLER_CUBE_ALPHA',
          _hx_index: 6,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
        VECTOR_4_ARRAY: {
          _hx_name: 'VECTOR_4_ARRAY',
          _hx_index: 7,
          __enum__: 'openfl.display3D._internal._AGALConverter.RegisterUsage',
          toString: r,
        },
      });
      ea.__constructs__ = [
        ea.UNUSED,
        ea.VECTOR_4,
        ea.MATRIX_4_4,
        ea.SAMPLER_2D,
        ea.SAMPLER_2D_ALPHA,
        ea.SAMPLER_CUBE,
        ea.SAMPLER_CUBE_ALPHA,
        ea.VECTOR_4_ARRAY,
      ];
      ea.__empty_constructs__ = [
        ea.UNUSED,
        ea.VECTOR_4,
        ea.MATRIX_4_4,
        ea.SAMPLER_2D,
        ea.SAMPLER_2D_ALPHA,
        ea.SAMPLER_CUBE,
        ea.SAMPLER_CUBE_ALPHA,
        ea.VECTOR_4_ARRAY,
      ];
      var Rg = function () {};
      h['openfl.display3D._internal._AGALConverter.SamplerRegister'] = Rg;
      Rg.__name__ = 'openfl.display3D._internal._AGALConverter.SamplerRegister';
      Rg.parse = function (a, b) {
        var c = new Rg();
        c.programType = b;
        b = 60;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.f = b;
        b = 56;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.m = b;
        b = 52;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.w = b;
        b = 48;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.s = b;
        b = 44;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.d = b;
        b = 40;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.t = b;
        b = 32;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        c.type = b;
        b = 16;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        c.b = b;
        b = a.low & 65535;
        c.n = b;
        return c;
      };
      Rg.prototype = {
        toGLSL: function () {
          return hd.prefixFromType(this.type, this.programType) + this.n;
        },
        toSamplerState: function () {
          switch (this.f) {
            case 0:
              var a = 5;
              break;
            case 1:
              a = 4;
              break;
            default:
              throw new $c();
          }
          switch (this.m) {
            case 0:
              var b = 2;
              break;
            case 1:
              b = 1;
              break;
            case 2:
              b = 0;
              break;
            default:
              throw new $c();
          }
          switch (this.w) {
            case 0:
              var c = 0;
              break;
            case 1:
              c = 2;
              break;
            default:
              throw new $c();
          }
          return new ng(
            c,
            a,
            b,
            ((this.b << 24) >> 24) / 8,
            4 == (this.s & 4),
            1 == (this.s & 1),
            2 == this.t,
          );
        },
        __class__: Rg,
      };
      var og = function () {};
      h['openfl.display3D._internal._AGALConverter.SourceRegister'] = og;
      og.__name__ = 'openfl.display3D._internal._AGALConverter.SourceRegister';
      og.parse = function (a, b, c) {
        var d = new og();
        d.programType = b;
        b = 63;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 1;
        d.d = b;
        b = 48;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 3;
        d.q = b;
        b = 40;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.itype = b;
        b = 32;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 15;
        d.type = b;
        b = 24;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.s = b;
        b = 16;
        b =
          0 == b
            ? new lb(a.high, a.low)
            : 32 > b
              ? new lb(a.high >> b, (a.high << (32 - b)) | (a.low >>> b))
              : new lb(a.high >> 31, a.high >> (b - 32));
        b = b.low & 255;
        d.o = b;
        b = a.low & 65535;
        d.n = b;
        d.sourceMask = c;
        return d;
      };
      og.prototype = {
        toGLSL: function (a, b) {
          null == b && (b = 0);
          null == a && (a = !0);
          if (3 == this.type)
            return this.programType == Wd.VERTEX
              ? 'gl_Position'
              : 'gl_FragColor';
          var c = 228 == this.s && 15 == this.sourceMask,
            d = '';
          if (5 != this.type && !c) {
            if (0 != (this.sourceMask & 1))
              switch (this.s & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 2))
              switch ((this.s >> 2) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 4))
              switch ((this.s >> 4) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
            if (0 != (this.sourceMask & 8))
              switch ((this.s >> 6) & 3) {
                case 0:
                  d += 'x';
                  break;
                case 1:
                  d += 'y';
                  break;
                case 2:
                  d += 'z';
                  break;
                case 3:
                  d += 'w';
              }
          }
          c = hd.prefixFromType(this.type, this.programType);
          if (0 == this.d) c += this.n + b;
          else {
            c += this.o;
            var f = '';
            switch (this.q) {
              case 0:
                f = 'x';
                break;
              case 1:
                f = 'y';
                break;
              case 2:
                f = 'z';
                break;
              case 3:
                f = 'w';
            }
            f =
              hd.prefixFromType(this.itype, this.programType) +
              this.n +
              '.' +
              f;
            c += '[ int(' + f + ') +' + b + ']';
          }
          a && '' != d && (c += '.' + d);
          return c;
        },
        __class__: og,
      };
      var Ih = function () {
        this.backBufferEnableDepthAndStencil = !1;
        this.blendDestinationAlphaFactor = 9;
        this.blendSourceAlphaFactor = 2;
        this.blendDestinationRGBFactor = 9;
        this.blendSourceRGBFactor = 2;
        this.colorMaskAlpha =
          this.colorMaskBlue =
          this.colorMaskGreen =
          this.colorMaskRed =
            !0;
        this.culling = 3;
        this.depthCompareMode = 4;
        this.depthMask = !0;
        this.samplerStates = [];
        this.scissorRectangle = new na();
        this.stencilCompareMode = 0;
        this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
        this.stencilReadMask = 255;
        this.stencilReferenceValue = 0;
        this.stencilTriangleFace = 2;
        this.stencilWriteMask = 255;
        this.textures = [];
        this.__frontFaceGLCCW = !0;
        this.__glBlendEquation = 32774;
      };
      h['openfl.display3D._internal.Context3DState'] = Ih;
      Ih.__name__ = 'openfl.display3D._internal.Context3DState';
      Ih.prototype = { __class__: Ih };
      var Bb = function (a) {
        sa.call(this);
        this.__context = a;
        var b = this.__context.gl;
        this.__textureID = b.createTexture();
        this.__textureContext = this.__context.__context;
        if (null == Bb.__supportsBGRA) {
          Bb.__textureInternalFormat = b.RGBA;
          Bb.__supportsBGRA = !1;
          Bb.__textureFormat = b.RGBA;
          Bb.__compressedFormats = new tc();
          Bb.__compressedFormatsAlpha = new tc();
          a = b.getExtension('WEBGL_compressed_texture_s3tc');
          var c = b.getExtension('WEBGL_compressed_texture_etc1');
          b = b.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
          if (null != a) {
            var d = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            Bb.__compressedFormats.h[0] = d;
            d = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            Bb.__compressedFormatsAlpha.h[0] = d;
          }
          null != c &&
            ((d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (Bb.__compressedFormats.h[2] = d),
            (d = c.COMPRESSED_RGB_ETC1_WEBGL),
            (Bb.__compressedFormatsAlpha.h[2] = d));
          null != b &&
            ((d = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG),
            (Bb.__compressedFormats.h[1] = d),
            (d = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG),
            (Bb.__compressedFormatsAlpha.h[1] = d));
        }
        this.__internalFormat = Bb.__textureInternalFormat;
        this.__format = Bb.__textureFormat;
      };
      h['openfl.display3D.textures.TextureBase'] = Bb;
      Bb.__name__ = 'openfl.display3D.textures.TextureBase';
      Bb.__super__ = sa;
      Bb.prototype = u(sa.prototype, {
        dispose: function () {
          var a = this.__context.gl;
          null != this.__alphaTexture &&
            (this.__alphaTexture.dispose(), (this.__alphaTexture = null));
          null != this.__textureID &&
            (a.deleteTexture(this.__textureID), (this.__textureID = null));
          null != this.__glFramebuffer &&
            (a.deleteFramebuffer(this.__glFramebuffer),
            (this.__glFramebuffer = null));
          null != this.__glDepthRenderbuffer &&
            (a.deleteRenderbuffer(this.__glDepthRenderbuffer),
            (this.__glDepthRenderbuffer = null));
          null != this.__glStencilRenderbuffer &&
            (a.deleteRenderbuffer(this.__glStencilRenderbuffer),
            (this.__glStencilRenderbuffer = null));
        },
        __getGLFramebuffer: function (a, b, c) {
          b = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = b.createFramebuffer()),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            b.framebufferTexture2D(
              b.FRAMEBUFFER,
              b.COLOR_ATTACHMENT0,
              b.TEXTURE_2D,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                La.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    c +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 201,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )));
          a &&
            null == this.__glDepthRenderbuffer &&
            (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            0 != rb.__glDepthStencil
              ? ((this.__glStencilRenderbuffer = this.__glDepthRenderbuffer =
                  b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  rb.__glDepthStencil,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ))
              : ((this.__glDepthRenderbuffer = b.createRenderbuffer()),
                (this.__glStencilRenderbuffer = b.createRenderbuffer()),
                b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.DEPTH_COMPONENT16,
                  this.__width,
                  this.__height,
                ),
                b.bindRenderbuffer(
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                ),
                b.renderbufferStorage(
                  b.RENDERBUFFER,
                  b.STENCIL_INDEX8,
                  this.__width,
                  this.__height,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.DEPTH_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glDepthRenderbuffer,
                ),
                b.framebufferRenderbuffer(
                  b.FRAMEBUFFER,
                  b.STENCIL_ATTACHMENT,
                  b.RENDERBUFFER,
                  this.__glStencilRenderbuffer,
                )),
            this.__context.__enableErrorChecking &&
              ((c = b.checkFramebufferStatus(b.FRAMEBUFFER)),
              c != b.FRAMEBUFFER_COMPLETE &&
                La.warn(
                  'Error: Context3D.setRenderToTexture status:' +
                    c +
                    ' width:' +
                    this.__width +
                    ' height:' +
                    this.__height,
                  {
                    fileName: 'openfl/display3D/textures/TextureBase.hx',
                    lineNumber: 239,
                    className: 'openfl.display3D.textures.TextureBase',
                    methodName: '__getGLFramebuffer',
                  },
                )),
            b.bindRenderbuffer(b.RENDERBUFFER, null));
          return this.__glFramebuffer;
        },
        __getTexture: function () {
          return this.__textureID;
        },
        __setSamplerState: function (a) {
          if (!a.equals(this.__samplerState)) {
            var b = this.__context.gl;
            this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP
              ? this.__context.__bindGLTextureCubeMap(this.__textureID)
              : this.__context.__bindGLTexture2D(this.__textureID);
            var c;
            switch (a.wrap) {
              case 0:
                var d = (c = b.CLAMP_TO_EDGE);
                break;
              case 1:
                c = b.CLAMP_TO_EDGE;
                d = b.REPEAT;
                break;
              case 2:
                d = c = b.REPEAT;
                break;
              case 3:
                c = b.REPEAT;
                d = b.CLAMP_TO_EDGE;
                break;
              default:
                throw new gc('wrap bad enum');
            }
            var f = 5 == a.filter ? b.NEAREST : b.LINEAR;
            switch (a.mipfilter) {
              case 0:
                var g =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_LINEAR
                    : b.LINEAR_MIPMAP_LINEAR;
                break;
              case 1:
                g =
                  5 == a.filter
                    ? b.NEAREST_MIPMAP_NEAREST
                    : b.LINEAR_MIPMAP_NEAREST;
                break;
              case 2:
                g = 5 == a.filter ? b.NEAREST : b.LINEAR;
                break;
              default:
                throw new gc('mipfiter bad enum');
            }
            b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, g);
            b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, f);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
            null == this.__samplerState && (this.__samplerState = a.clone());
            this.__samplerState.copyFrom(a);
            return !0;
          }
          return !1;
        },
        __uploadFromImage: function (a) {
          var b = this.__context.gl,
            c;
          if (this.__textureTarget == b.TEXTURE_2D) {
            if (1 == a.buffer.bitsPerPixel) var d = (c = b.ALPHA);
            else ((c = Bb.__textureInternalFormat), (d = Bb.__textureFormat));
            this.__context.__bindGLTexture2D(this.__textureID);
            a.type == wc.DATA || a.get_premultiplied()
              ? !a.get_premultiplied() &&
                a.get_transparent() &&
                b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1)
              : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
            a.type == wc.DATA
              ? Nc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  a.buffer.width,
                  a.buffer.height,
                  0,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_data(),
                )
              : Nc.texImage2D(
                  b,
                  b.TEXTURE_2D,
                  0,
                  c,
                  d,
                  b.UNSIGNED_BYTE,
                  a.get_src(),
                );
            this.__context.__bindGLTexture2D(null);
          }
        },
        __class__: Bb,
      });
      var Fj = function (a, b, c, d, f) {
        Bb.call(this, a);
        this.__width = this.__height = this.__size = b;
        this.__optimizeForRenderToTexture = d;
        this.__streamingLevels = f;
        this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
        this.__uploadedSides = 0;
      };
      h['openfl.display3D.textures.CubeTexture'] = Fj;
      Fj.__name__ = 'openfl.display3D.textures.CubeTexture';
      Fj.__super__ = Bb;
      Fj.prototype = u(Bb.prototype, {
        __getGLFramebuffer: function (a, b, c) {
          var d = this.__context.gl;
          null == this.__glFramebuffer &&
            ((this.__glFramebuffer = d.createFramebuffer()),
            (this.__framebufferSurface = -1));
          if (
            this.__framebufferSurface != c &&
            ((this.__framebufferSurface = c),
            this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            d.framebufferTexture2D(
              d.FRAMEBUFFER,
              d.COLOR_ATTACHMENT0,
              d.TEXTURE_CUBE_MAP_POSITIVE_X + c,
              this.__textureID,
              0,
            ),
            this.__context.__enableErrorChecking)
          ) {
            var f = d.checkFramebufferStatus(d.FRAMEBUFFER);
            f != d.FRAMEBUFFER_COMPLETE &&
              La.error(
                'Error: Context3D.setRenderToTexture status:' +
                  f +
                  ' width:' +
                  this.__width +
                  ' height:' +
                  this.__height,
                {
                  fileName: 'openfl/display3D/textures/CubeTexture.hx',
                  lineNumber: 279,
                  className: 'openfl.display3D.textures.CubeTexture',
                  methodName: '__getGLFramebuffer',
                },
              );
          }
          return Bb.prototype.__getGLFramebuffer.call(this, a, b, c);
        },
        __setSamplerState: function (a) {
          if (Bb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_CUBE_MAP),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != rb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > rb.__glMaxTextureMaxAnisotropy &&
                (a = rb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(
                b.TEXTURE_CUBE_MAP,
                rb.__glTextureMaxAnisotropy,
                a,
              );
            }
            return !0;
          }
          return !1;
        },
        __class__: Fj,
      });
      var Jh = function (a, b, c, d, f) {
        Bb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = f;
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
        this.uploadFromTypedArray(null);
        f && this.__getGLFramebuffer(!0, 0, 0);
      };
      h['openfl.display3D.textures.RectangleTexture'] = Jh;
      Jh.__name__ = 'openfl.display3D.textures.RectangleTexture';
      Jh.__super__ = Bb;
      Jh.prototype = u(Bb.prototype, {
        uploadFromTypedArray: function (a) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          Nc.texImage2D(
            b,
            this.__textureTarget,
            0,
            this.__internalFormat,
            this.__width,
            this.__height,
            0,
            this.__format,
            b.UNSIGNED_BYTE,
            a,
          );
          this.__context.__bindGLTexture2D(null);
        },
        __setSamplerState: function (a) {
          if (Bb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            if (0 != rb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > rb.__glMaxTextureMaxAnisotropy &&
                (a = rb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, rb.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: Jh,
      });
      var Ej = function (a, b, c, d, f, g) {
        Bb.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = f;
        this.__streamingLevels = g;
        a = this.__context.gl;
        this.__textureTarget = a.TEXTURE_2D;
        this.__context.__bindGLTexture2D(this.__textureID);
        Nc.texImage2D(
          a,
          this.__textureTarget,
          0,
          this.__internalFormat,
          this.__width,
          this.__height,
          0,
          this.__format,
          a.UNSIGNED_BYTE,
          null,
        );
        this.__context.__bindGLTexture2D(null);
        f && this.__getGLFramebuffer(!0, 0, 0);
      };
      h['openfl.display3D.textures.Texture'] = Ej;
      Ej.__name__ = 'openfl.display3D.textures.Texture';
      Ej.__super__ = Bb;
      Ej.prototype = u(Bb.prototype, {
        __setSamplerState: function (a) {
          if (Bb.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter ||
              this.__samplerState.mipmapGenerated ||
              (b.generateMipmap(b.TEXTURE_2D),
              (this.__samplerState.mipmapGenerated = !0));
            if (0 != rb.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1;
              }
              a > rb.__glMaxTextureMaxAnisotropy &&
                (a = rb.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, rb.__glTextureMaxAnisotropy, a);
            }
            return !0;
          }
          return !1;
        },
        __class__: Ej,
      });
      var Wk = function (a) {
        Bb.call(this, a);
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
      };
      h['openfl.display3D.textures.VideoTexture'] = Wk;
      Wk.__name__ = 'openfl.display3D.textures.VideoTexture';
      Wk.__super__ = Bb;
      Wk.prototype = u(Bb.prototype, {
        dispose: function () {
          null != this.__netStream &&
            null != this.__netStream.__video &&
            this.__netStream.__video.removeEventListener(
              'timeupdate',
              m(this, this.__onTimeUpdate),
            );
          Bb.prototype.dispose.call(this);
        },
        __onTimeUpdate: function (a) {
          null != this.__netStream &&
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState &&
            this.__textureReady();
        },
        __getTexture: function () {
          if (
            this.__netStream.__video.currentTime != this.__cacheTime &&
            2 <= this.__netStream.__video.readyState
          ) {
            var a = this.__context.gl;
            this.__context.__bindGLTexture2D(this.__textureID);
            Nc.texImage2D(
              a,
              a.TEXTURE_2D,
              0,
              a.RGBA,
              a.RGBA,
              a.UNSIGNED_BYTE,
              this.__netStream.__video,
            );
            this.__cacheTime = this.__netStream.__video.currentTime;
          }
          return this.__textureID;
        },
        __textureReady: function () {
          this.videoWidth = this.__netStream.__video.videoWidth;
          this.videoHeight = this.__netStream.__video.videoHeight;
          var a = new za('textureReady');
          this.dispatchEvent(a);
        },
        __class__: Wk,
      });
      var gc = function (a, b) {
        null == b && (b = 0);
        null == a && (a = '');
        aa.call(this, a);
        this.errorID = b;
        this.name = 'Error';
        this.__skipStack++;
      };
      h['openfl.errors.Error'] = gc;
      gc.__name__ = 'openfl.errors.Error';
      gc.__super__ = aa;
      gc.prototype = u(aa.prototype, {
        toString: function () {
          return null != this.get_message() ? this.get_message() : 'Error';
        },
        __class__: gc,
      });
      var Uf = function (a) {
        null == a && (a = '');
        gc.call(this, a);
        this.name = 'ArgumentError';
        this.__skipStack++;
      };
      h['openfl.errors.ArgumentError'] = Uf;
      Uf.__name__ = 'openfl.errors.ArgumentError';
      Uf.__super__ = gc;
      Uf.prototype = u(gc.prototype, { __class__: Uf });
      var Sg = function (a) {
        null == a && (a = '');
        gc.call(this, a);
        this.name = 'IOError';
        this.__skipStack++;
      };
      h['openfl.errors.IOError'] = Sg;
      Sg.__name__ = 'openfl.errors.IOError';
      Sg.__super__ = gc;
      Sg.prototype = u(gc.prototype, { __class__: Sg });
      var Lh = function (a, b) {
        Sg.call(this, 'End of file was encountered');
        this.name = 'EOFError';
        this.errorID = 2030;
        this.__skipStack++;
      };
      h['openfl.errors.EOFError'] = Lh;
      Lh.__name__ = 'openfl.errors.EOFError';
      Lh.__super__ = Sg;
      Lh.prototype = u(Sg.prototype, { __class__: Lh });
      var $c = function (a) {
        null == a && (a = '');
        gc.call(this, a, 0);
        this.name = 'IllegalOperationError';
        this.__skipStack++;
      };
      h['openfl.errors.IllegalOperationError'] = $c;
      $c.__name__ = 'openfl.errors.IllegalOperationError';
      $c.__super__ = gc;
      $c.prototype = u(gc.prototype, { __class__: $c });
      var dh = function (a) {
        null == a && (a = '');
        gc.call(this, a, 0);
        this.name = 'RangeError';
        this.__skipStack++;
      };
      h['openfl.errors.RangeError'] = dh;
      dh.__name__ = 'openfl.errors.RangeError';
      dh.__super__ = gc;
      dh.prototype = u(gc.prototype, { __class__: dh });
      var Tf = function (a) {
        null == a && (a = '');
        gc.call(this, a, 0);
        this.name = 'TypeError';
        this.__skipStack++;
      };
      h['openfl.errors.TypeError'] = Tf;
      Tf.__name__ = 'openfl.errors.TypeError';
      Tf.__super__ = gc;
      Tf.prototype = u(gc.prototype, { __class__: Tf });
      var za = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.eventPhase = 2;
      };
      h['openfl.events.Event'] = za;
      za.__name__ = 'openfl.events.Event';
      za.prototype = {
        isDefaultPrevented: function () {
          return this.__preventDefault;
        },
        preventDefault: function () {
          this.cancelable && (this.__preventDefault = !0);
        },
        stopImmediatePropagation: function () {
          this.__isCanceledNow = this.__isCanceled = !0;
        },
        stopPropagation: function () {
          this.__isCanceled = !0;
        },
        __class__: za,
      };
      var Tg = function (a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.activating = d;
      };
      h['openfl.events.ActivityEvent'] = Tg;
      Tg.__name__ = 'openfl.events.ActivityEvent';
      Tg.__super__ = za;
      Tg.prototype = u(za.prototype, { __class__: Tg });
      var Pe = function (a, b, c, d) {
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.text = d;
      };
      h['openfl.events.TextEvent'] = Pe;
      Pe.__name__ = 'openfl.events.TextEvent';
      Pe.__super__ = za;
      Pe.prototype = u(za.prototype, { __class__: Pe });
      var Vd = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        Pe.call(this, a, b, c, d);
        this.errorID = f;
      };
      h['openfl.events.ErrorEvent'] = Vd;
      Vd.__name__ = 'openfl.events.ErrorEvent';
      Vd.__super__ = Pe;
      Vd.prototype = u(Pe.prototype, { __class__: Vd });
      var bh = function (a) {
        this.active = !1;
        this.reset(a);
      };
      h['openfl.events._EventDispatcher.DispatchIterator'] = bh;
      bh.__name__ = 'openfl.events._EventDispatcher.DispatchIterator';
      bh.prototype = {
        copy: function () {
          this.isCopy || ((this.list = this.list.slice()), (this.isCopy = !0));
        },
        hasNext: function () {
          return this.index < this.list.length;
        },
        next: function () {
          return this.list[this.index++];
        },
        remove: function (a, b) {
          if (this.active)
            if (this.isCopy) {
              b = this.index;
              for (var c = this.list.length; b < c; ) {
                var d = b++;
                if (this.list[d] == a) {
                  this.list.splice(d, 1);
                  break;
                }
              }
            } else b < this.index && this.index--;
        },
        reset: function (a) {
          this.list = a;
          this.isCopy = !1;
          this.index = 0;
        },
        start: function () {
          this.active = !0;
        },
        stop: function () {
          this.active = !1;
        },
        __class__: bh,
      };
      var Sf = function (a, b, c, d) {
        d && Sf.supportsWeakReference
          ? (this.weakRefCallback = new WeakRef(a))
          : (this.callback = a);
        this.useCapture = b;
        this.priority = c;
        this.useWeakReference = d;
      };
      h['openfl.events._EventDispatcher.Listener'] = Sf;
      Sf.__name__ = 'openfl.events._EventDispatcher.Listener';
      Sf.prototype = {
        match: function (a, b) {
          var c = this.callback;
          return null != this.weakRefCallback &&
            ((c = this.weakRefCallback.deref()), null == c)
            ? !1
            : c == a
              ? this.useCapture == b
              : !1;
        },
        __class__: Sf,
      };
      var lg = function (a, b, c, d, f, g) {
        null == g && (g = 0);
        null == f && (f = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.keyCode = g;
        this.shiftKey = f;
        this.relatedObject = d;
      };
      h['openfl.events.FocusEvent'] = lg;
      lg.__name__ = 'openfl.events.FocusEvent';
      lg.__super__ = za;
      lg.prototype = u(za.prototype, { __class__: lg });
      var of = function (a, b, c, d, f) {
        null == f && (f = !1);
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        Tg.call(this, a, b, c);
        this.fullScreen = d;
        this.interactive = f;
      };
      h['openfl.events.FullScreenEvent'] = of;
      of.__name__ = 'openfl.events.FullScreenEvent';
      of.__super__ = Tg;
      of.prototype = u(Tg.prototype, { __class__: of });
      var Ug = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !0);
        za.call(this, a, b, c);
        this.device = d;
      };
      h['openfl.events.GameInputEvent'] = Ug;
      Ug.__name__ = 'openfl.events.GameInputEvent';
      Ug.__super__ = za;
      Ug.prototype = u(za.prototype, { __class__: Ug });
      var Mh = function (a, b, c, d, f) {
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        this.responseHeaders = [];
        this.status = d;
        this.redirected = f;
        za.call(this, a, b, c);
      };
      h['openfl.events.HTTPStatusEvent'] = Mh;
      Mh.__name__ = 'openfl.events.HTTPStatusEvent';
      Mh.__super__ = za;
      Mh.prototype = u(za.prototype, { __class__: Mh });
      var Vg = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !0);
        Vd.call(this, a, b, c, d, f);
      };
      h['openfl.events.IOErrorEvent'] = Vg;
      Vg.__name__ = 'openfl.events.IOErrorEvent';
      Vg.__super__ = Vd;
      Vg.prototype = u(Vd.prototype, { __class__: Vg });
      var Bj = function (a, b, c, d, f, g, k, l, h, t, w) {
        null == w && (w = !1);
        null == t && (t = !1);
        null == h && (h = !1);
        null == l && (l = !1);
        null == k && (k = !1);
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.charCode = d;
        this.keyCode = f;
        this.keyLocation = null != g ? g : 0;
        this.ctrlKey = k;
        this.altKey = l;
        this.shiftKey = h;
        this.controlKey = t;
        this.commandKey = w;
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.KeyboardEvent'] = Bj;
      Bj.__name__ = 'openfl.events.KeyboardEvent';
      Bj.__super__ = za;
      Bj.prototype = u(za.prototype, { __class__: Bj });
      var Fb = function (a, b, c, d, f, g, k, l, h, t, w, n, r, C) {
        null == C && (C = 0);
        null == r && (r = !1);
        null == n && (n = !1);
        null == w && (w = 0);
        null == t && (t = !1);
        null == h && (h = !1);
        null == l && (l = !1);
        null == k && (k = !1);
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        za.call(this, a, b, c);
        this.shiftKey = h;
        this.altKey = l;
        this.ctrlKey = k;
        this.bubbles = b;
        this.relatedObject = g;
        this.delta = w;
        this.localX = d;
        this.localY = f;
        this.buttonDown = t;
        this.commandKey = n;
        this.controlKey = r;
        this.clickCount = C;
        this.isRelatedObjectInaccessible = !1;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.MouseEvent'] = Fb;
      Fb.__name__ = 'openfl.events.MouseEvent';
      Fb.__create = function (a, b, c, d, f, g, k, l) {
        null == l && (l = 0);
        a = new Fb(
          a,
          !0,
          !1,
          g.x,
          g.y,
          null,
          Fb.__ctrlKey,
          Fb.__altKey,
          Fb.__shiftKey,
          Fb.__buttonDown,
          l,
          Fb.__commandKey,
          Fb.__controlKey,
          c,
        );
        a.stageX = d;
        a.stageY = f;
        a.target = k;
        return a;
      };
      Fb.__super__ = za;
      Fb.prototype = u(za.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: Fb,
      });
      var Ij = function (a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.info = d;
        za.call(this, a, b, c);
      };
      h['openfl.events.NetStatusEvent'] = Ij;
      Ij.__name__ = 'openfl.events.NetStatusEvent';
      Ij.__super__ = za;
      Ij.prototype = u(za.prototype, { __class__: Ij });
      var hg = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.bytesLoaded = d;
        this.bytesTotal = f;
      };
      h['openfl.events.ProgressEvent'] = hg;
      hg.__name__ = 'openfl.events.ProgressEvent';
      hg.__super__ = za;
      hg.prototype = u(za.prototype, { __class__: hg });
      var Rh = function (a, b, c, d, f, g) {
        null == g && (g = !0);
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.objectMatrix = d;
        this.objectColorTransform = f;
        this.allowSmoothing = g;
      };
      h['openfl.events.RenderEvent'] = Rh;
      Rh.__name__ = 'openfl.events.RenderEvent';
      Rh.__super__ = za;
      Rh.prototype = u(za.prototype, { __class__: Rh });
      var Jj = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.data = new Zc(0);
        this.data.__endian = 1;
        this.position = 0;
      };
      h['openfl.events.SampleDataEvent'] = Jj;
      Jj.__name__ = 'openfl.events.SampleDataEvent';
      Jj.__super__ = za;
      Jj.prototype = u(za.prototype, {
        getBufferSize: function () {
          var a =
            (db.toFloat(Nd.get_length(this.data)) / db.toFloat(4) / 2) | 0;
          if (0 < a) {
            if (0 != a && 0 == (a & (a - 1)) && 2048 <= a && 8192 >= a)
              return ((this.tempBuffer = new Float32Array(2 * a)), a);
            throw new gc(
              'To be consistent with flash the listener function registered to SampleDataEvent has to provide 2048, 4096 or 8192 samples if targeting HTML5.',
            );
          }
          return 0;
        },
        getSamples: function (a) {
          this.data.position = 0;
          this.tempBuffer = Pl.fromBytes(Nd.toBytes(this.data));
          this.leftChannel = a.outputBuffer.getChannelData(0);
          this.rightChannel = a.outputBuffer.getChannelData(1);
          for (
            var b = (a = 0),
              c = (db.toFloat(Nd.get_length(this.data)) / db.toFloat(2)) | 0;
            b < c;

          ) {
            var d = b++;
            this.leftChannel[d] = this.tempBuffer[a++];
            this.rightChannel[d] = this.tempBuffer[a++];
          }
        },
        __class__: Jj,
      });
      var Kj = function (a, b, c, d, f) {
        null == f && (f = 0);
        null == d && (d = '');
        null == c && (c = !1);
        null == b && (b = !1);
        Vd.call(this, a, b, c, d, f);
      };
      h['openfl.events.SecurityErrorEvent'] = Kj;
      Kj.__name__ = 'openfl.events.SecurityErrorEvent';
      Kj.__super__ = Vd;
      Kj.prototype = u(Vd.prototype, { __class__: Kj });
      var Wg = function (a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        za.call(this, a, b, c);
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.TimerEvent'] = Wg;
      Wg.__name__ = 'openfl.events.TimerEvent';
      Wg.__super__ = za;
      Wg.prototype = u(za.prototype, {
        updateAfterEvent: function () {
          this.__updateAfterEventFlag = !0;
        },
        __class__: Wg,
      });
      var Yd = function (
        a,
        b,
        c,
        d,
        f,
        g,
        k,
        l,
        h,
        t,
        w,
        n,
        r,
        C,
        x,
        m,
        G,
        y,
        A,
        B,
      ) {
        null == m && (m = !1);
        null == x && (x = !1);
        null == C && (C = !1);
        null == r && (r = !1);
        null == n && (n = !1);
        null == t && (t = 0);
        null == h && (h = 0);
        null == l && (l = 0);
        null == k && (k = 0);
        null == g && (g = 0);
        null == f && (f = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        za.call(this, a, b, c);
        this.touchPointID = d;
        this.isPrimaryTouchPoint = f;
        this.localX = g;
        this.localY = k;
        this.sizeX = l;
        this.sizeY = h;
        this.pressure = t;
        this.relatedObject = w;
        this.ctrlKey = n;
        this.altKey = r;
        this.shiftKey = C;
        this.commandKey = x;
        this.controlKey = m;
        this.stageY = this.stageX = NaN;
        this.__updateAfterEventFlag = !1;
      };
      h['openfl.events.TouchEvent'] = Yd;
      Yd.__name__ = 'openfl.events.TouchEvent';
      Yd.__create = function (a, b, c, d, f, g) {
        a = new Yd(a, !0, !1, 0, !0, f.x, f.y, 1, 1, 1);
        a.stageX = c;
        a.stageY = d;
        a.target = g;
        return a;
      };
      Yd.__super__ = za;
      Yd.prototype = u(za.prototype, { __class__: Yd });
      var qg = function (a, b, c, d) {
        null == c && (c = !0);
        null == b && (b = !0);
        Vd.call(this, a, b, c);
        this.error = d;
      };
      h['openfl.events.UncaughtErrorEvent'] = qg;
      qg.__name__ = 'openfl.events.UncaughtErrorEvent';
      qg.__super__ = Vd;
      qg.prototype = u(Vd.prototype, { __class__: qg });
      var xj = function () {
        this.__enabled = !0;
        sa.call(this);
      };
      h['openfl.events.UncaughtErrorEvents'] = xj;
      xj.__name__ = 'openfl.events.UncaughtErrorEvents';
      xj.__super__ = sa;
      xj.prototype = u(sa.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          sa.prototype.addEventListener.call(this, a, b, c, d, f);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) && (this.__enabled = !0);
        },
        removeEventListener: function (a, b, c) {
          null == c && (c = !1);
          sa.prototype.removeEventListener.call(this, a, b, c);
          Object.prototype.hasOwnProperty.call(
            this.__eventMap.h,
            'uncaughtError',
          ) || (this.__enabled = !1);
        },
        __class__: xj,
      });
      var Xg = function () {
        this.__leftExtension = this.__bottomExtension = 0;
        this.__needSecondBitmapData = !0;
        this.__numShaderPasses = 0;
        this.__preserveObject = !1;
        this.__rightExtension = 0;
        this.__shaderBlendMode = 10;
        this.__topExtension = 0;
        this.__smooth = !0;
      };
      h['openfl.filters.BitmapFilter'] = Xg;
      Xg.__name__ = 'openfl.filters.BitmapFilter';
      Xg.prototype = {
        clone: function () {
          return new Xg();
        },
        __applyFilter: function (a, b, c, d) {
          return b;
        },
        __initShader: function (a, b, c) {
          return null;
        },
        __class__: Xg,
      };
      var Oc = function (a) {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            'varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t}');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}');
        Cd.call(this, a);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters.BitmapFilterShader'] = Oc;
      Oc.__name__ = 'openfl.filters.BitmapFilterShader';
      Oc.__super__ = Cd;
      Oc.prototype = u(Cd.prototype, { __class__: Oc });
      var Lj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec4 uColor;\n\t\tuniform float uStrength;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void)\n\t\t{\n            vec4 texel = texture2D(openfl_Texture, vTexCoord);\n\n            vec3 contributions = vec3(0.00443, 0.05399, 0.24197);\n            vec3 top = vec3(\n                texture2D(openfl_Texture, vBlurCoords[0]).a,\n                texture2D(openfl_Texture, vBlurCoords[1]).a,\n                texture2D(openfl_Texture, vBlurCoords[2]).a\n            );\n            vec3 bottom = vec3(\n                texture2D(openfl_Texture, vBlurCoords[3]).a,\n                texture2D(openfl_Texture, vBlurCoords[4]).a,\n                texture2D(openfl_Texture, vBlurCoords[5]).a\n            );\n\n            float a = texel.a * 0.39894;\n\t\t\ta += dot(top, contributions.xyz);\n            a += dot(bottom, contributions.zyx);\n\n\t\t\tgl_FragColor = uColor * clamp(a * uStrength, 0.0, 1.0);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vTexCoord;\n\t\tvarying vec2 vBlurCoords[6];\n\n\t\tvoid main(void) {\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\n\t\t\tvec3 offset = vec3(0.5, 0.75, 1.0);\n\t\t\tvec2 r = uRadius / openfl_TextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * offset.z;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * offset.y;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * offset.x;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord + r * offset.x;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * offset.y;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * offset.z;\n\t\t}\n\t');
        Oc.call(this);
        this.uRadius.value = [0, 0];
        this.uColor.value = [0, 0, 0, 0];
        this.uStrength.value = [1];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.BlurAlphaShader'] = Lj;
      Lj.__name__ = 'openfl.filters._GlowFilter.BlurAlphaShader';
      Lj.__super__ = Oc;
      Lj.prototype = u(Oc.prototype, { __class__: Lj });
      var Mj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Oc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.CombineKnockoutShader'] = Mj;
      Mj.__name__ = 'openfl.filters._GlowFilter.CombineKnockoutShader';
      Mj.__super__ = Oc;
      Mj.prototype = u(Oc.prototype, { __class__: Mj });
      var Nj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = src + glow * (1.0 - src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Oc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.CombineShader'] = Nj;
      Nj.__name__ = 'openfl.filters._GlowFilter.CombineShader';
      Nj.__super__ = Oc;
      Nj.prototype = u(Oc.prototype, { __class__: Nj });
      var Oj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = glow * src.a;\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Oc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.InnerCombineKnockoutShader'] = Oj;
      Oj.__name__ = 'openfl.filters._GlowFilter.InnerCombineKnockoutShader';
      Oj.__super__ = Oc;
      Oj.prototype = u(Oc.prototype, { __class__: Oj });
      var Pj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform sampler2D sourceBitmap;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tvec4 src = texture2D(sourceBitmap, textureCoords.xy);\n\t\t\tvec4 glow = texture2D(openfl_Texture, textureCoords.zw);\n\n\t\t\tgl_FragColor = vec4((src.rgb * (1.0 - glow.a)) + (glow.rgb * src.a), src.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            'attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform vec2 offset;\n\t\tvarying vec4 textureCoords;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\ttextureCoords = vec4(openfl_TextureCoord, openfl_TextureCoord - offset / openfl_TextureSize);\n\t\t}\n\t');
        Oc.call(this);
        this.offset.value = [0, 0];
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.InnerCombineShader'] = Pj;
      Pj.__name__ = 'openfl.filters._GlowFilter.InnerCombineShader';
      Pj.__super__ = Oc;
      Pj.prototype = u(Oc.prototype, { __class__: Pj });
      var Qj = function () {
        null == this.__glFragmentSource &&
          (this.__glFragmentSource =
            '\n\t\tuniform sampler2D openfl_Texture;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tvec4 texel = texture2D(openfl_Texture, vTexCoord);\n\t\t\tgl_FragColor = vec4(texel.rgb, 1.0 - texel.a);\n\t\t}\n\t');
        null == this.__glVertexSource &&
          (this.__glVertexSource =
            '\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tuniform mat4 openfl_Matrix;\n\t\tvarying vec2 vTexCoord;\n\n\t\tvoid main(void) {\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\tvTexCoord = openfl_TextureCoord;\n\t\t}\n\t');
        Oc.call(this);
        this.__isGenerated = !0;
        this.__initGL();
      };
      h['openfl.filters._GlowFilter.InvertAlphaShader'] = Qj;
      Qj.__name__ = 'openfl.filters._GlowFilter.InvertAlphaShader';
      Qj.__super__ = Oc;
      Qj.prototype = u(Oc.prototype, { __class__: Qj });
      var dd = function (a, b, c, d, f, g, k, l) {
        null == l && (l = !1);
        null == k && (k = !1);
        null == g && (g = 1);
        null == f && (f = 2);
        null == d && (d = 6);
        null == c && (c = 6);
        null == b && (b = 1);
        null == a && (a = 16711680);
        Xg.call(this);
        this.__color = a;
        this.__alpha = b;
        this.__blurX = c;
        this.__blurY = d;
        this.__strength = f;
        this.__inner = k;
        this.__knockout = l;
        this.__quality = g;
        this.__updateSize();
        this.__renderDirty =
          this.__preserveObject =
          this.__needSecondBitmapData =
            !0;
      };
      h['openfl.filters.GlowFilter'] = dd;
      dd.__name__ = 'openfl.filters.GlowFilter';
      dd.__super__ = Xg;
      dd.prototype = u(Xg.prototype, {
        clone: function () {
          return new dd(
            this.__color,
            this.__alpha,
            this.__blurX,
            this.__blurY,
            this.__strength,
            this.__quality,
            this.__inner,
            this.__knockout,
          );
        },
        __applyFilter: function (a, b, c, d) {
          var f = (this.__color >> 16) & 255,
            g = (this.__color >> 8) & 255,
            k = this.__color & 255;
          c = fc.gaussianBlur(
            a.image,
            b.image,
            c.__toLimeRectangle(),
            d.__toLimeVector2(),
            this.__blurX,
            this.__blurY,
            this.__quality,
            this.__strength,
          );
          c.colorTransform(
            c.get_rect(),
            new Lb(0, 0, 0, this.__alpha, f, g, k, 0).__toLimeColorMatrix(),
          );
          return c == a.image ? a : b;
        },
        __initShader: function (a, b, c) {
          if (this.__inner && 0 == b) return dd.__invertAlphaShader;
          a = b - (this.__inner ? 1 : 0);
          b = this.__horizontalPasses + this.__verticalPasses;
          if (a < b) {
            var d = dd.__blurAlphaShader;
            a < this.__horizontalPasses
              ? ((c = 0.5 * Math.pow(0.5, a >> 1)),
                (d.uRadius.value[0] = this.get_blurX() * c),
                (d.uRadius.value[1] = 0))
              : ((c = 0.5 * Math.pow(0.5, (a - this.__horizontalPasses) >> 1)),
                (d.uRadius.value[0] = 0),
                (d.uRadius.value[1] = this.get_blurY() * c));
            d.uColor.value[0] = ((this.get_color() >> 16) & 255) / 255;
            d.uColor.value[1] = ((this.get_color() >> 8) & 255) / 255;
            d.uColor.value[2] = (this.get_color() & 255) / 255;
            d.uColor.value[3] = this.get_alpha();
            d.uStrength.value[0] = a == b - 1 ? this.__strength : 1;
            return d;
          }
          if (this.__inner) {
            if (this.__knockout)
              return (
                (d = dd.__innerCombineKnockoutShader),
                (d.sourceBitmap.input = c),
                (d.offset.value[0] = 0),
                (d.offset.value[1] = 0),
                d
              );
            d = dd.__innerCombineShader;
          } else {
            if (this.__knockout)
              return (
                (d = dd.__combineKnockoutShader),
                (d.sourceBitmap.input = c),
                (d.offset.value[0] = 0),
                (d.offset.value[1] = 0),
                d
              );
            d = dd.__combineShader;
          }
          d.sourceBitmap.input = c;
          d.offset.value[0] = 0;
          d.offset.value[1] = 0;
          return d;
        },
        __updateSize: function () {
          this.__rightExtension = this.__leftExtension =
            0 < this.__blurX ? Math.ceil(1.5 * this.__blurX) : 0;
          this.__bottomExtension = this.__topExtension =
            0 < this.__blurY ? Math.ceil(1.5 * this.__blurY) : 0;
          this.__calculateNumShaderPasses();
        },
        __calculateNumShaderPasses: function () {
          this.__horizontalPasses =
            0 >= this.__blurX
              ? 0
              : Math.round((this.__quality / 4) * this.__blurX) + 1;
          this.__verticalPasses =
            0 >= this.__blurY
              ? 0
              : Math.round((this.__quality / 4) * this.__blurY) + 1;
          this.__numShaderPasses =
            this.__horizontalPasses +
            this.__verticalPasses +
            (this.__inner ? 2 : 1);
        },
        get_alpha: function () {
          return this.__alpha;
        },
        get_blurX: function () {
          return this.__blurX;
        },
        get_blurY: function () {
          return this.__blurY;
        },
        get_color: function () {
          return this.__color;
        },
        __class__: dd,
        __properties__: {
          get_color: 'get_color',
          get_blurY: 'get_blurY',
          get_blurX: 'get_blurX',
          get_alpha: 'get_alpha',
        },
      });
      var Cj = function (a) {
        null != a && 16 == a.get_length()
          ? (this.rawData = a.concat(null))
          : (this.rawData = ra.toFloatVector(
              null,
              null,
              null,
              [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            ));
      };
      h['openfl.geom.Matrix3D'] = Cj;
      Cj.__name__ = 'openfl.geom.Matrix3D';
      Cj.prototype = {
        append: function (a) {
          var b = this.rawData.get(0),
            c = this.rawData.get(4),
            d = this.rawData.get(8),
            f = this.rawData.get(12),
            g = this.rawData.get(1),
            k = this.rawData.get(5),
            l = this.rawData.get(9),
            h = this.rawData.get(13),
            t = this.rawData.get(2),
            w = this.rawData.get(6),
            n = this.rawData.get(10),
            r = this.rawData.get(14),
            C = this.rawData.get(3),
            x = this.rawData.get(7),
            m = this.rawData.get(11),
            G = this.rawData.get(15),
            y = a.rawData.get(0),
            A = a.rawData.get(4),
            B = a.rawData.get(8),
            N = a.rawData.get(12),
            L = a.rawData.get(1),
            u = a.rawData.get(5),
            v = a.rawData.get(9),
            E = a.rawData.get(13),
            D = a.rawData.get(2),
            J = a.rawData.get(6),
            wa = a.rawData.get(10),
            P = a.rawData.get(14),
            Ta = a.rawData.get(3),
            I = a.rawData.get(7),
            ab = a.rawData.get(11);
          a = a.rawData.get(15);
          this.rawData.set(0, b * y + g * A + t * B + C * N);
          this.rawData.set(1, b * L + g * u + t * v + C * E);
          this.rawData.set(2, b * D + g * J + t * wa + C * P);
          this.rawData.set(3, b * Ta + g * I + t * ab + C * a);
          this.rawData.set(4, c * y + k * A + w * B + x * N);
          this.rawData.set(5, c * L + k * u + w * v + x * E);
          this.rawData.set(6, c * D + k * J + w * wa + x * P);
          this.rawData.set(7, c * Ta + k * I + w * ab + x * a);
          this.rawData.set(8, d * y + l * A + n * B + m * N);
          this.rawData.set(9, d * L + l * u + n * v + m * E);
          this.rawData.set(10, d * D + l * J + n * wa + m * P);
          this.rawData.set(11, d * Ta + l * I + n * ab + m * a);
          this.rawData.set(12, f * y + h * A + r * B + G * N);
          this.rawData.set(13, f * L + h * u + r * v + G * E);
          this.rawData.set(14, f * D + h * J + r * wa + G * P);
          this.rawData.set(15, f * Ta + h * I + r * ab + G * a);
        },
        appendTranslation: function (a, b, c) {
          var d = this.rawData;
          d.set(12, d.get(12) + a);
          d = this.rawData;
          d.set(13, d.get(13) + b);
          d = this.rawData;
          d.set(14, d.get(14) + c);
        },
        copyRawDataFrom: function (a, b, c) {
          null == c && (c = !1);
          null == b && (b = 0);
          c && this.transpose();
          for (var d = 0, f = a.get_length() - b; d < f; ) {
            var g = d++;
            this.rawData.set(g, a.get(g + b));
          }
          c && this.transpose();
        },
        identity: function () {
          this.rawData = ra.toFloatVector(
            null,
            null,
            null,
            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          );
        },
        transpose: function () {
          var a = this.rawData.copy();
          this.rawData.set(1, a.get(4));
          this.rawData.set(2, a.get(8));
          this.rawData.set(3, a.get(12));
          this.rawData.set(4, a.get(1));
          this.rawData.set(6, a.get(9));
          this.rawData.set(7, a.get(13));
          this.rawData.set(8, a.get(2));
          this.rawData.set(9, a.get(6));
          this.rawData.set(11, a.get(14));
          this.rawData.set(12, a.get(3));
          this.rawData.set(13, a.get(7));
          this.rawData.set(14, a.get(11));
        },
        __class__: Cj,
      };
      var Sh = function (a) {
        this.__colorTransform = new Lb();
        this.concatenatedColorTransform = new Lb();
        this.pixelBounds = new na();
        this.__displayObject = a;
        this.__hasMatrix = !0;
      };
      h['openfl.geom.Transform'] = Sh;
      Sh.__name__ = 'openfl.geom.Transform';
      Sh.prototype = {
        get_colorTransform: function () {
          return this.__colorTransform.__clone();
        },
        get_matrix: function () {
          return this.__hasMatrix
            ? this.__displayObject.__transform.clone()
            : null;
        },
        set_matrix: function (a) {
          if (null == a) return ((this.__hasMatrix = !1), null);
          this.__hasMatrix = !0;
          this.__hasMatrix3D = !1;
          null != this.__displayObject &&
            this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
          return a;
        },
        __setTransform: function (a, b, c, d, f, g) {
          if (null != this.__displayObject) {
            var k = this.__displayObject.__transform;
            if (
              k.a != a ||
              k.b != b ||
              k.c != c ||
              k.d != d ||
              k.tx != f ||
              k.ty != g
            ) {
              var l = 0 == b ? a : Math.sqrt(a * a + b * b);
              var h = 0 == c ? d : Math.sqrt(c * c + d * d);
              this.__displayObject.__scaleX = l;
              this.__displayObject.__scaleY = h;
              l = (180 / Math.PI) * Math.atan2(d, c) - 90;
              l != this.__displayObject.__rotation &&
                ((this.__displayObject.__rotation = l),
                (l *= Math.PI / 180),
                (this.__displayObject.__rotationSine = Math.sin(l)),
                (this.__displayObject.__rotationCosine = Math.cos(l)));
              k.a = a;
              k.b = b;
              k.c = c;
              k.d = d;
              k.tx = f;
              k.ty = g;
              this.__displayObject.__setTransformDirty();
            }
          }
        },
        __class__: Sh,
        __properties__: {
          set_matrix: 'set_matrix',
          get_matrix: 'get_matrix',
          get_colorTransform: 'get_colorTransform',
        },
      };
      var ci = function (a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c;
      };
      h['openfl.geom.Vector3D'] = ci;
      ci.__name__ = 'openfl.geom.Vector3D';
      ci.prototype = { __class__: ci };
      var Xk = function (a, b) {
        this.__webAudioContext = null;
        this.__urlLoading = !1;
        sa.call(this, this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.isBuffering = !1;
        this.url = null;
        null != a && this.load(a, b);
        null == a &&
          null != Re.context &&
          'web' == Re.context.type &&
          (this.__webAudioContext = Re.context.web);
      };
      h['openfl.media.Sound'] = Xk;
      Xk.__name__ = 'openfl.media.Sound';
      Xk.__super__ = sa;
      Xk.prototype = u(sa.prototype, {
        load: function (a, b) {
          var c = this;
          this.url = a.url;
          this.__urlLoading = !0;
          this.dispatchEvent(new za('open'));
          a = Ka.getLibrary('default');
          if (
            null != a &&
            Object.prototype.hasOwnProperty.call(
              a.cachedAudioBuffers.h,
              this.url,
            )
          )
            ((a = a.cachedAudioBuffers.h[this.url]),
              (b = null != a && null != a.data ? a.data.byteLength : 0),
              this.AudioBuffer_onURLProgress(b, b),
              this.AudioBuffer_onURLLoad(a));
          else
            Dc.loadFromFile(this.url)
              .onProgress(m(this, this.AudioBuffer_onURLProgress))
              .onComplete(m(this, this.AudioBuffer_onURLLoad))
              .onError(function (a) {
                c.AudioBuffer_onURLLoad(null);
              });
        },
        AudioBuffer_onURLLoad: function (a) {
          this.__urlLoading = !1;
          null == a
            ? this.dispatchEvent(new Vg('ioError'))
            : ((this.__buffer = a),
              this.dispatchEvent(new za('complete')),
              null != this.__pendingSoundChannel &&
                ((this.__pendingAudioSource.buffer = this.__buffer),
                this.__pendingAudioSource.init(),
                this.__pendingSoundChannel.__initAudioSource(
                  this.__pendingAudioSource,
                )));
          this.__pendingAudioSource = this.__pendingSoundChannel = null;
        },
        AudioBuffer_onURLProgress: function (a, b) {
          var c = new hg('progress');
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: Xk,
      });
      var Yk = function (a, b, c) {
        this.__firstRun = !0;
        sa.call(this, this);
        this.__sound = a;
        this.rightPeak = this.leftPeak = 1;
        this.__soundTransform = null != c ? c : new pg();
        this.__initAudioSource(b);
        Ce.__registerSoundChannel(this);
      };
      h['openfl.media.SoundChannel'] = Yk;
      Yk.__name__ = 'openfl.media.SoundChannel';
      Yk.__super__ = sa;
      Yk.prototype = u(sa.prototype, {
        stop: function () {
          Ce.__unregisterSoundChannel(this);
          this.__isValid &&
            (null != this.__processor &&
              (this.__processor.disconnect(),
              (this.__processor = this.__processor.onaudioprocess = null)),
            this.__audioSource.stop(),
            this.__dispose());
        },
        __dispose: function () {
          this.__isValid &&
            (this.__audioSource.onComplete.remove(
              m(this, this.audioSource_onComplete),
            ),
            this.__audioSource.dispose(),
            (this.__audioSource = null),
            (this.__isValid = !1));
        },
        __startSampleData: function () {
          var a = this,
            b = this.__sound.__webAudioContext;
          if (null != b) {
            this.__sampleDataEvent = new Jj('sampleData');
            this.__sound.dispatchEvent(this.__sampleDataEvent);
            var c = this.__sampleDataEvent.getBufferSize();
            0 == c
              ? Ra.setTimeout(function () {
                  a.stop();
                  a.dispatchEvent(new za('soundComplete'));
                }, 1)
              : ((this.__processor = b.createScriptProcessor(c, 0, 2)),
                this.__processor.connect(b.destination),
                (this.__processor.onaudioprocess = m(this, this.onSample)),
                b.resume());
          }
        },
        __updateTransform: function () {
          this.set_soundTransform(this.get_soundTransform());
        },
        __initAudioSource: function (a) {
          this.__audioSource = a;
          null != this.__audioSource &&
            (this.__audioSource.onComplete.add(
              m(this, this.audioSource_onComplete),
            ),
            (this.__isValid = !0),
            this.__audioSource.play());
        },
        get_position: function () {
          return this.__isValid
            ? this.__audioSource.get_currentTime() + this.__audioSource.offset
            : 0;
        },
        set_position: function (a) {
          if (!this.__isValid) return 0;
          this.__audioSource.set_currentTime(
            (a | 0) - this.__audioSource.offset,
          );
          return a;
        },
        get_soundTransform: function () {
          return this.__soundTransform.clone();
        },
        set_soundTransform: function (a) {
          if (null != a) {
            this.__soundTransform.pan = a.pan;
            this.__soundTransform.volume = a.volume;
            var b = Ce.__soundTransform.pan + this.__soundTransform.pan;
            -1 > b && (b = -1);
            1 < b && (b = 1);
            var c = Ce.__soundTransform.volume * this.__soundTransform.volume;
            this.__isValid &&
              (this.__audioSource.set_gain(c),
              (c = this.__audioSource.get_position()),
              (c.x = b),
              (c.z = -1 * Math.sqrt(1 - Math.pow(b, 2))),
              this.__audioSource.set_position(c));
          }
          return a;
        },
        audioSource_onComplete: function () {
          Ce.__unregisterSoundChannel(this);
          this.__dispose();
          this.dispatchEvent(new za('soundComplete'));
        },
        onSample: function (a) {
          if (this.__firstRun) {
            var b = !0;
            this.__firstRun = !1;
          } else
            (Nd.set_length(this.__sampleDataEvent.data, 0),
              this.__sound.dispatchEvent(this.__sampleDataEvent),
              (b = db.gt(Nd.get_length(this.__sampleDataEvent.data), 0)));
          b
            ? this.__sampleDataEvent.getSamples(a)
            : (this.stop(), this.dispatchEvent(new za('soundComplete')));
        },
        __class__: Yk,
        __properties__: {
          set_soundTransform: 'set_soundTransform',
          get_soundTransform: 'get_soundTransform',
          set_position: 'set_position',
          get_position: 'get_position',
        },
      });
      var Il = function () {};
      h['openfl.media.SoundLoaderContext'] = Il;
      Il.__name__ = 'openfl.media.SoundLoaderContext';
      var pg = function (a, b) {
        null == b && (b = 0);
        null == a && (a = 1);
        this.volume = a;
        this.pan = b;
        this.rightToRight =
          this.rightToLeft =
          this.leftToRight =
          this.leftToLeft =
            0;
      };
      h['openfl.media.SoundTransform'] = pg;
      pg.__name__ = 'openfl.media.SoundTransform';
      pg.prototype = {
        clone: function () {
          return new pg(this.volume, this.pan);
        },
        __class__: pg,
      };
      var Ce = function () {};
      h['openfl.media.SoundMixer'] = Ce;
      Ce.__name__ = 'openfl.media.SoundMixer';
      Ce.__registerSoundChannel = function (a) {
        Ce.__soundChannels.push(a);
      };
      Ce.__unregisterSoundChannel = function (a) {
        R.remove(Ce.__soundChannels, a);
      };
      var Zk = function (a, b) {
        null == b && (b = 240);
        null == a && (a = 320);
        ca.call(this);
        this.__drawableType = 8;
        this.__width = a;
        this.__height = b;
        this.__textureTime = -1;
        this.smoothing = !1;
        this.deblocking = 0;
      };
      h['openfl.media.Video'] = Zk;
      Zk.__name__ = 'openfl.media.Video';
      Zk.__super__ = ca;
      Zk.prototype = u(ca.prototype, {
        __enterFrame: function (a) {
          this.__renderable &&
            null != this.__stream &&
            !this.__renderDirty &&
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
        },
        __getBounds: function (a, b) {
          var c = na.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __getIndexBuffer: function (a) {
          if (
            null == this.__indexBuffer ||
            this.__indexBufferContext != a.__context
          )
            ((this.__indexBufferData = new Uint16Array(6)),
              (this.__indexBufferData[0] = 0),
              (this.__indexBufferData[1] = 1),
              (this.__indexBufferData[2] = 2),
              (this.__indexBufferData[3] = 2),
              (this.__indexBufferData[4] = 1),
              (this.__indexBufferData[5] = 3),
              (this.__indexBufferContext = a.__context),
              (this.__indexBuffer = a.createIndexBuffer(6)),
              this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData));
          return this.__indexBuffer;
        },
        __getTexture: function (a) {
          if (null == this.__stream || null == this.__stream.__video)
            return null;
          var b = a.__context.webgl,
            c = b.RGBA,
            d = b.RGBA;
          this.__stream.__closed ||
            this.__stream.__video.currentTime == this.__textureTime ||
            (null == this.__texture &&
              (this.__texture = a.createRectangleTexture(
                this.__stream.__video.videoWidth,
                this.__stream.__video.videoHeight,
                1,
                !1,
              )),
            a.__bindGLTexture2D(this.__texture.__textureID),
            Nc.texImage2D(
              b,
              b.TEXTURE_2D,
              0,
              c,
              d,
              b.UNSIGNED_BYTE,
              this.__stream.__video,
            ),
            (this.__textureTime = this.__stream.__video.currentTime));
          return this.__texture;
        },
        __getVertexBuffer: function (a) {
          if (
            null == this.__vertexBuffer ||
            this.__vertexBufferContext != a.__context ||
            this.__currentWidth != this.get_width() ||
            this.__currentHeight != this.get_height()
          )
            ((this.__currentWidth = this.get_width()),
              (this.__currentHeight = this.get_height()),
              (this.__vertexBufferData = new Float32Array(20)),
              (this.__vertexBufferData[0] = this.get_width()),
              (this.__vertexBufferData[1] = this.get_height()),
              (this.__vertexBufferData[3] = 1),
              (this.__vertexBufferData[4] = 1),
              (this.__vertexBufferData[6] = this.get_height()),
              (this.__vertexBufferData[9] = 1),
              (this.__vertexBufferData[10] = this.get_width()),
              (this.__vertexBufferData[13] = 1),
              (this.__vertexBufferContext = a.__context),
              (this.__vertexBuffer = a.createVertexBuffer(3, 5)),
              this.__vertexBuffer.uploadFromTypedArray(
                ih.toArrayBufferView(this.__vertexBufferData),
              ));
          return this.__vertexBuffer;
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (
            !g.get_visible() ||
            this.__isMask ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          var k = this.__renderTransform,
            l = k.a * k.d - k.b * k.c;
          c = 0 == l ? -k.tx : (1 / l) * (k.c * (k.ty - b) + k.d * (a - k.tx));
          k = this.__renderTransform;
          l = k.a * k.d - k.b * k.c;
          a = 0 == l ? -k.ty : (1 / l) * (k.a * (b - k.ty) + k.b * (k.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height
            ? (null == d || f || d.push(g), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          var c = B.__pool.get();
          c.setTo(a, b);
          this.__globalToLocal(c, c);
          a = 0 < c.x && 0 < c.y && c.x <= this.__width && c.y <= this.__height;
          B.__pool.release(c);
          return a;
        },
        get_height: function () {
          return this.__height * this.get_scaleY();
        },
        set_height: function (a) {
          if (1 != this.get_scaleY() || a != this.__height)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleY(1);
          return (this.__height = a);
        },
        get_width: function () {
          return this.__width * this.__scaleX;
        },
        set_width: function (a) {
          if (1 != this.__scaleX || this.__width != a)
            (this.__setTransformDirty(), (this.__dirty = !0));
          this.set_scaleX(1);
          return (this.__width = a);
        },
        __class__: Zk,
      });
      var ek = function (a, b, c) {
        this.description = a;
        this.extension = b;
        this.macType = c;
      };
      h['openfl.net.FileFilter'] = ek;
      ek.__name__ = 'openfl.net.FileFilter';
      ek.prototype = { __class__: ek };
      var fh = function () {
        sa.call(this);
        this.__inputControl = window.document.createElement('input');
        this.__inputControl.setAttribute('type', 'file');
        this.__inputControl.onclick = function (a) {
          a.cancelBubble = !0;
          a.stopPropagation();
        };
      };
      h['openfl.net.FileReference'] = fh;
      fh.__name__ = 'openfl.net.FileReference';
      fh.__super__ = sa;
      fh.prototype = u(sa.prototype, {
        browse: function (a) {
          var b = this,
            c = (this.__path = this.__data = null);
          if (null != a) {
            c = [];
            for (var d = 0; d < a.length; ) {
              var f = a[d];
              ++d;
              c.push(P.replace(P.replace(f.extension, '*.', '.'), ';', ','));
            }
            c = c.join(',');
          }
          null != c
            ? this.__inputControl.setAttribute('accept', c)
            : this.__inputControl.removeAttribute('accept');
          this.__inputControl.onchange = function () {
            if (0 == b.__inputControl.files.length)
              b.dispatchEvent(new za('cancel'));
            else {
              var a = b.__inputControl.files[0],
                c = new Date(a.lastModified);
              b.modificationDate = c;
              b.creationDate = b.get_modificationDate();
              b.size = a.size;
              c = Rd.extension(a.name);
              b.type = '.' + c;
              b.name = Rd.withoutDirectory(a.name);
              b.__path = a.name;
              b.dispatchEvent(new za('select'));
            }
          };
          this.__inputControl.click();
          return !0;
        },
        load: function () {
          var a = this,
            b = this.__inputControl.files[0],
            c = new FileReader();
          c.onload = function (b) {
            a.data = Nd.fromArrayBuffer(b.target.result);
            a.openFileDialog_onComplete();
          };
          c.onerror = function (b) {
            a.dispatchEvent(new Vg('ioError'));
          };
          c.readAsArrayBuffer(b);
        },
        openFileDialog_onComplete: function () {
          this.dispatchEvent(new za('complete'));
        },
        get_modificationDate: function () {
          return this.modificationDate;
        },
        __class__: fh,
        __properties__: { get_modificationDate: 'get_modificationDate' },
      });
      var $k = function () {
        sa.call(this);
      };
      h['openfl.net.NetConnection'] = $k;
      $k.__name__ = 'openfl.net.NetConnection';
      $k.__super__ = sa;
      $k.prototype = u(sa.prototype, { __class__: $k });
      var al = function (a, b) {
        sa.call(this);
        this.__connection = a;
        this.__soundTransform = new pg();
        this.__video = window.document.createElement('video');
        this.__video.setAttribute('playsinline', '');
        this.__video.setAttribute('webkit-playsinline', '');
        this.__video.setAttribute('crossorigin', 'anonymous');
        this.__video.addEventListener('error', m(this, this.video_onError), !1);
        this.__video.addEventListener(
          'waiting',
          m(this, this.video_onWaiting),
          !1,
        );
        this.__video.addEventListener('ended', m(this, this.video_onEnd), !1);
        this.__video.addEventListener('pause', m(this, this.video_onPause), !1);
        this.__video.addEventListener(
          'seeking',
          m(this, this.video_onSeeking),
          !1,
        );
        this.__video.addEventListener(
          'playing',
          m(this, this.video_onPlaying),
          !1,
        );
        this.__video.addEventListener(
          'timeupdate',
          m(this, this.video_onTimeUpdate),
          !1,
        );
        this.__video.addEventListener(
          'loadstart',
          m(this, this.video_onLoadStart),
          !1,
        );
        this.__video.addEventListener(
          'stalled',
          m(this, this.video_onStalled),
          !1,
        );
        this.__video.addEventListener(
          'durationchanged',
          m(this, this.video_onDurationChanged),
          !1,
        );
        this.__video.addEventListener(
          'canplay',
          m(this, this.video_onCanPlay),
          !1,
        );
        this.__video.addEventListener(
          'canplaythrough',
          m(this, this.video_onCanPlayThrough),
          !1,
        );
        this.__video.addEventListener(
          'loadedmetadata',
          m(this, this.video_onLoadMetaData),
          !1,
        );
      };
      h['openfl.net.NetStream'] = al;
      al.__name__ = 'openfl.net.NetStream';
      al.__super__ = sa;
      al.prototype = u(sa.prototype, {
        __dispatchStatus: function (a) {
          a = new Ij('netStatus', !1, !1, { code: a });
          this.__connection.dispatchEvent(a);
          this.dispatchEvent(a);
        },
        __playStatus: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onPlayStatus;
              b({
                code: a,
                duration: this.__video.duration,
                position: this.__video.currentTime,
                speed: this.__video.playbackRate,
                start: this.__video.startTime,
              });
            } catch (c) {
              Ua.lastError = c;
            }
        },
        video_onCanPlay: function (a) {
          this.__playStatus('NetStream.Play.canplay');
        },
        video_onCanPlayThrough: function (a) {
          this.__playStatus('NetStream.Play.canplaythrough');
        },
        video_onDurationChanged: function (a) {
          this.__playStatus('NetStream.Play.durationchanged');
        },
        video_onEnd: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__dispatchStatus('NetStream.Play.Complete');
          this.__playStatus('NetStream.Play.Complete');
        },
        video_onError: function (a) {
          this.__dispatchStatus('NetStream.Play.Stop');
          this.__playStatus('NetStream.Play.error');
        },
        video_onLoadMetaData: function (a) {
          if (null != this.__video && null != this.client)
            try {
              var b = this.client.onMetaData;
              b({
                width: this.__video.videoWidth,
                height: this.__video.videoHeight,
                duration: this.__video.duration,
              });
            } catch (c) {
              Ua.lastError = c;
            }
        },
        video_onLoadStart: function (a) {
          this.__playStatus('NetStream.Play.loadstart');
        },
        video_onPause: function (a) {
          this.__playStatus('NetStream.Play.pause');
        },
        video_onPlaying: function (a) {
          this.__dispatchStatus('NetStream.Play.Start');
          this.__playStatus('NetStream.Play.playing');
        },
        video_onSeeking: function (a) {
          this.__playStatus('NetStream.Play.seeking');
          this.__dispatchStatus('NetStream.Seek.Complete');
        },
        video_onStalled: function (a) {
          this.__playStatus('NetStream.Play.stalled');
        },
        video_onTimeUpdate: function (a) {
          null != this.__video &&
            ((this.time = this.__video.currentTime),
            this.__playStatus('NetStream.Play.timeupdate'));
        },
        video_onWaiting: function (a) {
          this.__playStatus('NetStream.Play.waiting');
        },
        __class__: al,
      });
      var fd = function () {
        sa.call(this);
        this.client = this;
        this.objectEncoding = fd.defaultObjectEncoding;
      };
      h['openfl.net.SharedObject'] = fd;
      fd.__name__ = 'openfl.net.SharedObject';
      fd.getLocal = function (a, b, c) {
        c = ' ~%&\\;:"\',<>?#'.split('');
        var d = !0;
        if (null == a || '' == a) d = !1;
        else
          for (var f = 0; f < c.length; ) {
            var g = c[f];
            ++f;
            if (-1 < a.indexOf(g)) {
              d = !1;
              break;
            }
          }
        if (!d) throw new gc('Error #2134: Cannot create SharedObject.');
        null == fd.__sharedObjects &&
          ((fd.__sharedObjects = new Ja()),
          null != F.current && F.current.onExit.add(fd.application_onExit));
        c = b + '/' + a;
        if (!Object.prototype.hasOwnProperty.call(fd.__sharedObjects.h, c)) {
          d = null;
          try {
            var k = Gf.getLocalStorage();
            null == b &&
              (null != k &&
                ((d = k.getItem(window.location.href + ':' + a)),
                k.removeItem(window.location.href + ':' + a)),
              (b = window.location.pathname));
            null != k && null == d && (d = k.getItem(b + ':' + a));
          } catch (p) {
            Ua.lastError = p;
          }
          k = new fd();
          k.data = {};
          k.__localPath = b;
          k.__name = a;
          if (null != d && '' != d)
            try {
              var l = new rd(d);
              l.setResolver({
                resolveEnum: y.resolveEnum,
                resolveClass: fd.__resolveClass,
              });
              k.data = l.unserialize();
            } catch (p) {
              Ua.lastError = p;
            }
          fd.__sharedObjects.h[c] = k;
        }
        return fd.__sharedObjects.h[c];
      };
      fd.__resolveClass = function (a) {
        return null != a
          ? (P.startsWith(a, 'neash.') &&
              (a = P.replace(a, 'neash.', 'openfl.')),
            P.startsWith(a, 'native.') &&
              (a = P.replace(a, 'native.', 'openfl.')),
            P.startsWith(a, 'flash.') &&
              (a = P.replace(a, 'flash.', 'openfl.')),
            P.startsWith(a, 'openfl._v2.') &&
              (a = P.replace(a, 'openfl._v2.', 'openfl.')),
            P.startsWith(a, 'openfl._legacy.') &&
              (a = P.replace(a, 'openfl._legacy.', 'openfl.')),
            h[a])
          : null;
      };
      fd.application_onExit = function (a) {
        a = fd.__sharedObjects.h;
        for (var b = Object.keys(a), c = b.length, d = 0; d < c; )
          a[b[d++]].flush();
      };
      fd.__super__ = sa;
      fd.prototype = u(sa.prototype, {
        flush: function (a) {
          if (0 == ya.fields(this.data).length) return 0;
          a = zd.run(this.data);
          try {
            var b = Gf.getLocalStorage();
            null != b &&
              (b.removeItem(this.__localPath + ':' + this.__name),
              b.setItem(this.__localPath + ':' + this.__name, a));
          } catch (c) {
            return ((Ua.lastError = c), 1);
          }
          return 0;
        },
        __class__: fd,
      });
      var bl = function (a) {
        sa.call(this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.dataFormat = 1;
        null != a && this.load(a);
      };
      h['openfl.net.URLLoader'] = bl;
      bl.__name__ = 'openfl.net.URLLoader';
      bl.__super__ = sa;
      bl.prototype = u(sa.prototype, {
        load: function (a) {
          var b = this,
            c = new za('open');
          this.dispatchEvent(c);
          0 == this.dataFormat
            ? ((c = new bj()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(m(this, this.httpRequest_onProgress))
                .onError(m(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = a;
                  a = new za('complete');
                  b.dispatchEvent(a);
                }))
            : ((c = new Kg()),
              this.__prepareRequest(c, a),
              c
                .load()
                .onProgress(m(this, this.httpRequest_onProgress))
                .onError(m(this, this.httpRequest_onError))
                .onComplete(function (a) {
                  b.__dispatchResponseStatus();
                  b.__dispatchStatus();
                  b.data = 2 == b.dataFormat ? Jl._new(a) : a;
                  a = new za('complete');
                  b.dispatchEvent(a);
                }));
        },
        __dispatchResponseStatus: function () {
          var a = new Mh(
            'httpResponseStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          a.responseURL = this.__httpRequest.uri;
          var b = [];
          if (
            this.__httpRequest.enableResponseHeaders &&
            null != this.__httpRequest.responseHeaders
          )
            for (
              var c = 0, d = this.__httpRequest.responseHeaders;
              c < d.length;

            ) {
              var f = d[c];
              ++c;
              b.push(new cl(f.name, f.value));
            }
          a.responseHeaders = b;
          this.dispatchEvent(a);
        },
        __dispatchStatus: function () {
          var a = new Mh(
            'httpStatus',
            !1,
            !1,
            this.__httpRequest.responseStatus,
          );
          this.dispatchEvent(a);
        },
        __prepareRequest: function (a, b) {
          this.__httpRequest = a;
          this.__httpRequest.uri = b.url;
          this.__httpRequest.method = b.method;
          if (null != b.data)
            if (y.typeof(b.data) == N.TObject) {
              var c = ya.fields(b.data);
              for (a = 0; a < c.length; ) {
                var d = c[a];
                ++a;
                this.__httpRequest.formData.h[d] = ya.field(b.data, d);
              }
            } else
              this.__httpRequest.data =
                b.data instanceof xb ? b.data : xb.ofString(I.string(b.data));
          this.__httpRequest.contentType = b.contentType;
          if (null != b.requestHeaders)
            for (a = 0, c = b.requestHeaders; a < c.length; )
              ((d = c[a]),
                ++a,
                this.__httpRequest.headers.push(new Ui(d.name, d.value)));
          this.__httpRequest.followRedirects = b.followRedirects;
          this.__httpRequest.timeout = b.idleTimeout | 0;
          this.__httpRequest.manageCookies = b.manageCookies;
          this.__httpRequest.withCredentials = b.withCredentials;
          this.__httpRequest.userAgent = b.userAgent;
          this.__httpRequest.enableResponseHeaders = !0;
        },
        httpRequest_onError: function (a) {
          this.__dispatchResponseStatus();
          this.__dispatchStatus();
          this.__httpRequest instanceof If
            ? (this.data = this.__httpRequest.responseData)
            : this.__httpRequest instanceof Kg &&
              (this.data = this.__httpRequest.responseData);
          var b = 403 == a ? new Kj('securityError') : new Vg('ioError');
          b.text = I.string(a);
          this.dispatchEvent(b);
        },
        httpRequest_onProgress: function (a, b) {
          var c = new hg('progress');
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c);
        },
        __class__: bl,
      });
      var Zf = function (a) {
        this.withCredentials = !1;
        null != a && (this.url = a);
        this.contentType = null;
        this.followRedirects = Of.followRedirects;
        this.idleTimeout = 0 < Of.idleTimeout ? Of.idleTimeout : 3e4;
        this.manageCookies = Of.manageCookies;
        this.method = 'GET';
        this.requestHeaders = [];
        this.userAgent = Of.userAgent;
      };
      h['openfl.net.URLRequest'] = Zf;
      Zf.__name__ = 'openfl.net.URLRequest';
      Zf.prototype = { __class__: Zf };
      var Of = function () {};
      h['openfl.net.URLRequestDefaults'] = Of;
      Of.__name__ = 'openfl.net.URLRequestDefaults';
      var cl = function (a, b) {
        null == b && (b = '');
        null == a && (a = '');
        this.name = a;
        this.value = b;
      };
      h['openfl.net.URLRequestHeader'] = cl;
      cl.__name__ = 'openfl.net.URLRequestHeader';
      cl.prototype = { __class__: cl };
      var Jl = {
          _new: function (a) {
            var b = {};
            null != a && Jl.decode(b, a);
            return b;
          },
          decode: function (a, b) {
            for (var c = ya.fields(a), d = 0; d < c.length; ) {
              var f = c[d];
              ++d;
              ya.deleteField(a, f);
            }
            c = b.split(';').join('&').split('&');
            for (d = 0; d < c.length; )
              if (((f = c[d]), ++d, (b = f.indexOf('=')), 0 < b)) {
                var g = R.substr(f, 0, b);
                g = decodeURIComponent(g.split('+').join(' '));
                f = R.substr(f, b + 1, null);
                a[g] = decodeURIComponent(f.split('+').join(' '));
              } else
                0 != b && (a[decodeURIComponent(f.split('+').join(' '))] = '');
          },
        },
        Ng = function (a) {
          this.parentDomain = null != a ? a : Ng.currentDomain;
        };
      h['openfl.system.ApplicationDomain'] = Ng;
      Ng.__name__ = 'openfl.system.ApplicationDomain';
      Ng.prototype = { __class__: Ng };
      var Th = function () {};
      h['openfl.system.Capabilities'] = Th;
      Th.__name__ = 'openfl.system.Capabilities';
      Th.__properties__ = { get_screenDPI: 'get_screenDPI' };
      Th.get_screenDPI = function () {
        var a = null != Fc.application ? Fc.application.__window : null,
          b = 72;
        null != a && (b *= a.__scale);
        return b;
      };
      var dl = function () {
        sa.call(this);
        this.clear();
      };
      h['openfl.text.StyleSheet'] = dl;
      dl.__name__ = 'openfl.text.StyleSheet';
      dl.__super__ = sa;
      dl.prototype = u(sa.prototype, {
        clear: function () {
          this.__styleNamesDirty = !1;
          this.__styleNames = null;
          this.__styles = new Ja();
        },
        __applyStyle: function (a, b) {
          a = a.toLowerCase();
          Object.prototype.hasOwnProperty.call(this.__styles.h, a) &&
            this.__applyStyleObject(this.__styles.h[a], b);
        },
        __applyStyleObject: function (a, b) {
          if (null != a) {
            var c = new Ba('[0-9A-Fa-f]+', ''),
              d = new Ba('[0-9]+', '');
            var f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'color')
              ? ((f = ge.__get(a, 'color')),
                (f = c.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.color = I.parseInt('0x' + c.matched(0)));
            f = a;
            null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontFamily') &&
              ((f = ge.__get(a, 'fontFamily')),
              (b.font = this.__parseFont(null == f ? null : I.string(f))));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'fontSize')
              ? ((f = ge.__get(a, 'fontSize')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.size = I.parseInt(d.matched(0)));
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontStyle')
            )
              switch (ge.__get(a, 'fontStyle')) {
                case 'italic':
                  b.italic = !0;
                  break;
                case 'normal':
                  b.italic = !1;
              }
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'fontWeight')
            )
              switch (ge.__get(a, 'fontWeight')) {
                case 'bold':
                  b.bold = !0;
                  break;
                case 'normal':
                  b.bold = !1;
              }
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'leading')
              ? ((f = ge.__get(a, 'leading')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.leading = I.parseInt(d.matched(0)));
            f = a;
            null != f &&
            Object.prototype.hasOwnProperty.call(f, 'letterSpacing')
              ? ((f = ge.__get(a, 'letterSpacing')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.letterSpacing = parseFloat(d.matched(0)));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'marginLeft')
              ? ((f = ge.__get(a, 'marginLeft')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.leftMargin = I.parseInt(d.matched(0)));
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'marginRight')
              ? ((f = ge.__get(a, 'marginRight')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.rightMargin = I.parseInt(d.matched(0)));
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'textAlign')
            )
              switch (ge.__get(a, 'textAlign')) {
                case 'center':
                  b.align = 0;
                  break;
                case 'justify':
                  b.align = 2;
                  break;
                case 'left':
                  b.align = 3;
                  break;
                case 'right':
                  b.align = 4;
              }
            f = a;
            if (
              null != f &&
              Object.prototype.hasOwnProperty.call(f, 'textDecoration')
            )
              switch (ge.__get(a, 'textDecoration')) {
                case 'none':
                  b.underline = !1;
                  break;
                case 'underline':
                  b.underline = !0;
              }
            f = a;
            null != f && Object.prototype.hasOwnProperty.call(f, 'textIndent')
              ? ((f = ge.__get(a, 'textIndent')),
                (f = d.match(null == f ? null : I.string(f))))
              : (f = !1);
            f && (b.blockIndent = I.parseInt(d.matched(0)));
          }
        },
        __parseFont: function (a) {
          if (null == a) return null;
          -1 < a.indexOf(',') && (a = R.substr(a, 0, a.indexOf(',')));
          switch (a) {
            case 'mono':
              return '_typewriter';
            case 'sans-serif':
              return '_sans';
            case 'serif':
              return '_serif';
            default:
              return a;
          }
        },
        __class__: dl,
      });
      var Qc = function () {
        this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
        this.__mouseScrollVCounter = 0;
        this.condenseWhite = !1;
        Aa.call(this);
        this.__wordSelection = !1;
        this.__drawableType = 7;
        this.__selectionIndex = this.__caretIndex = -1;
        this.__displayAsPassword = !1;
        this.__graphics = new Dd(this);
        this.__textEngine = new Eb(this);
        this.__layoutDirty = !0;
        this.__offsetY = this.__offsetX = 0;
        this.__mouseWheelEnabled = !0;
        this.__text = '';
        null == Qc.__defaultTextFormat &&
          ((Qc.__defaultTextFormat = new Fe(
            'Times New Roman',
            12,
            0,
            !1,
            !1,
            !1,
            '',
            '',
            3,
            0,
            0,
            0,
            0,
          )),
          (Qc.__defaultTextFormat.blockIndent = 0),
          (Qc.__defaultTextFormat.bullet = !1),
          (Qc.__defaultTextFormat.letterSpacing = 0),
          (Qc.__defaultTextFormat.kerning = !1));
        this.__textFormat = Qc.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(
          new vd(this.__textFormat, 0, 0),
        );
        this.addEventListener('mouseDown', m(this, this.this_onMouseDown));
        this.addEventListener('focusIn', m(this, this.this_onFocusIn));
        this.addEventListener('focusOut', m(this, this.this_onFocusOut));
        this.addEventListener('keyDown', m(this, this.this_onKeyDown));
        this.addEventListener('mouseWheel', m(this, this.this_onMouseWheel));
      };
      h['openfl.text.TextField'] = Qc;
      Qc.__name__ = 'openfl.text.TextField';
      Qc.__super__ = Aa;
      Qc.prototype = u(Aa.prototype, {
        getCharBoundaries: function (a) {
          if (0 > a || a > this.__text.length - 1) return null;
          var b = new na();
          return this.__getCharBoundaries(a, b) ? b : null;
        },
        getLineIndexOfChar: function (a) {
          if (0 > a || a > this.__text.length) return -1;
          this.__updateLayout();
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.startIndex <= a && c.endIndex >= a) return c.lineIndex;
          }
          return -1;
        },
        getLineLength: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return 0;
          for (
            var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (f.lineIndex == a) -1 == b && (b = f.startIndex);
            else if (f.lineIndex == a + 1) {
              c = f.startIndex;
              break;
            }
          }
          -1 == c && (c = this.__text.length);
          return c - b;
        },
        getLineMetrics: function (a) {
          this.__updateLayout();
          var b = this.__textEngine.lineAscents.get(a),
            c = this.__textEngine.lineDescents.get(a),
            d = this.__textEngine.lineLeadings.get(a),
            f = this.__textEngine.lineHeights.get(a);
          a = this.__textEngine.lineWidths.get(a);
          switch (this.__textFormat.align) {
            case 0:
              var g = (this.__textEngine.width - a) / 2;
              break;
            case 1:
            case 4:
              g = this.__textEngine.width - a - 2;
              break;
            case 2:
            case 3:
            case 5:
              g = 2;
          }
          return new el(g, a, f, b, c, d);
        },
        getLineOffset: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return -1;
          for (
            var b = this.__textEngine.layoutGroups.iterator();
            b.hasNext();

          ) {
            var c = b.next();
            if (c.lineIndex == a) return c.startIndex;
          }
          return 0;
        },
        getLineText: function (a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return null;
          for (
            var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator();
            d.hasNext();

          ) {
            var f = d.next();
            if (f.lineIndex == a) -1 == b && (b = f.startIndex);
            else if (f.lineIndex == a + 1) {
              c = f.startIndex;
              break;
            }
          }
          -1 == c && (c = this.__text.length);
          return this.__textEngine.text.substring(b, c);
        },
        replaceSelectedText: function (a) {
          this.__replaceSelectedText(a, !1);
        },
        replaceText: function (a, b, c) {
          this.__replaceText(a, b, c, !1);
        },
        setSelection: function (a, b) {
          this.__selectionIndex = a;
          this.__caretIndex = b;
          this.__updateScrollV();
          this.__updateScrollH();
          null != this.stage &&
            this.stage.get_focus() == this &&
            (this.__stopCursorTimer(), this.__startCursorTimer());
        },
        setTextFormat: function (a, b, c) {
          null == c && (c = -1);
          null == b && (b = -1);
          var d = this.get_text().length;
          -1 == b ? (-1 == c && (c = d), (b = 0)) : -1 == c && (c = b + 1);
          if (b != c) {
            if (0 > b || 0 >= c || c < b || b >= d || c > d) throw new dh();
            if (0 == b && c == d) {
              this.__textEngine.textFormatRanges.set_length(1);
              var f = this.__textEngine.textFormatRanges.get(0);
              f.start = 0;
              f.end = d;
              f.format.__merge(a);
            } else {
              d = 0;
              for (var g; d < this.__textEngine.textFormatRanges.get_length(); )
                if (
                  ((f = this.__textEngine.textFormatRanges.get(d)), f.end <= b)
                )
                  ++d;
                else if (f.start >= c) break;
                else if (f.start <= b && f.end >= c)
                  if (f.start == b && f.end == c) {
                    f.format = f.format.clone();
                    f.format.__merge(a);
                    break;
                  } else if (f.start == b)
                    ((g = new vd(f.format.clone(), b, c)),
                      g.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(d, g),
                      (f.start = c),
                      (d += 2));
                  else {
                    f.end == c
                      ? ((g = new vd(f.format.clone(), b, c)),
                        g.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(d + 1, g))
                      : ((g = new vd(f.format.clone(), b, c)),
                        g.format.__merge(a),
                        this.__textEngine.textFormatRanges.insertAt(d + 1, g),
                        (g = new vd(f.format.clone(), c, f.end)),
                        this.__textEngine.textFormatRanges.insertAt(d + 2, g));
                    f.end = b;
                    break;
                  }
                else if (f.start >= b && f.end <= c)
                  f.start == b
                    ? ((f.format = f.format.clone()),
                      f.format.__merge(a),
                      (f.end = c))
                    : this.__textEngine.textFormatRanges.removeAt(d);
                else if (f.start > b && f.end > b) {
                  f.start = c;
                  break;
                } else
                  f.start < b && f.end <= c
                    ? ((g = new vd(f.format.clone(), b, c)),
                      g.format.__merge(a),
                      this.__textEngine.textFormatRanges.insertAt(d + 1, g),
                      (f.end = b),
                      (d += 2))
                    : (++d,
                      La.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 1610,
                          className: 'openfl.text.TextField',
                          methodName: 'setTextFormat',
                        },
                      ));
            }
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __setStageReference: function (a) {
          this.__stopTextInput();
          Aa.prototype.__setStageReference.call(this, a);
        },
        __allowMouseFocus: function () {
          return this.mouseEnabled;
        },
        __caretBeginningOfLine: function () {
          this.__caretIndex = this.getLineOffset(
            this.getLineIndexOfChar(this.__caretIndex),
          );
        },
        __caretBeginningOfNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1)
              : this.__text.length;
        },
        __caretBeginningOfPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          if (0 < a) {
            var b = this.getLineOffset(
              this.getLineIndexOfChar(this.__caretIndex),
            );
            this.__caretIndex =
              this.__caretIndex == b ? this.getLineOffset(a - 1) : b;
          }
        },
        __caretEndOfLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex =
            a < this.__textEngine.numLines - 1
              ? this.getLineOffset(a + 1) - 1
              : this.__text.length;
        },
        __caretNextCharacter: function () {
          this.__caretIndex < this.__text.length && this.__caretIndex++;
        },
        __caretNextLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          a < this.__textEngine.numLines - 1 &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a + 1,
            ));
        },
        __caretPreviousCharacter: function () {
          0 < this.__caretIndex && this.__caretIndex--;
        },
        __caretPreviousLine: function () {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          0 < a &&
            (this.__caretIndex = this.__getCharIndexOnDifferentLine(
              this.get_caretIndex(),
              a - 1,
            ));
        },
        __disableInput: function () {
          this.__inputEnabled &&
            null != this.stage &&
            (this.stage.window.__backend.setTextInputEnabled(!1),
            this.stage.window.onTextInput.remove(
              m(this, this.window_onTextInput),
            ),
            this.stage.window.onKeyDown.remove(m(this, this.window_onKeyDown)),
            (this.__inputEnabled = !1),
            this.__stopCursorTimer());
        },
        __dispatch: function (a) {
          if (2 == a.eventPhase && 'mouseUp' == a.type) {
            var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            null != b &&
              ((b = b.format.url),
              null != b &&
                '' != b &&
                (P.startsWith(b, 'event:')
                  ? this.dispatchEvent(
                      new Pe('link', !0, !1, R.substr(b, 6, null)),
                    )
                  : Ra.getURL(new Zf(b))));
          }
          return Aa.prototype.__dispatch.call(this, a);
        },
        __enableInput: function () {
          if (null != this.stage) {
            var a = this.getBounds(this.stage);
            a = new Gd(a.x, a.y, a.width, a.height);
            this.stage.window.setTextInputRect(a);
            this.stage.window.__backend.setTextInputEnabled(!0);
            this.__inputEnabled ||
              (this.stage.window.__backend.setTextInputEnabled(!0),
              this.stage.window.onTextInput.has(
                m(this, this.window_onTextInput),
              ) ||
                (this.stage.window.onTextInput.add(
                  m(this, this.window_onTextInput),
                ),
                this.stage.window.onKeyDown.add(
                  m(this, this.window_onKeyDown),
                )),
              (this.__inputEnabled = !0),
              this.__stopCursorTimer(),
              this.__startCursorTimer());
          }
        },
        __getBounds: function (a, b) {
          this.__updateLayout();
          var c = na.__pool.get();
          c.copyFrom(this.__textEngine.bounds);
          c.offset(this.__offsetX, this.__offsetY);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          na.__pool.release(c);
        },
        __getCharBoundaries: function (a, b) {
          if (0 > a || a > this.__text.length - 1) return !1;
          this.__updateLayout();
          for (
            var c = this.__textEngine.layoutGroups.iterator();
            c.hasNext();

          ) {
            var d = c.next();
            if (a >= d.startIndex && a < d.endIndex)
              try {
                for (var f = d.offsetX, g = 0, k = a - d.startIndex; g < k; ) {
                  var l = g++;
                  f += d.positions[l];
                }
                b.setTo(
                  f,
                  d.offsetY,
                  d.positions[a - d.startIndex],
                  d.ascent + d.descent,
                );
                return !0;
              } catch (p) {
                Ua.lastError = p;
              }
          }
          return !1;
        },
        __getCharIndexOnDifferentLine: function (a, b) {
          if (
            0 > a ||
            a > this.__text.length ||
            0 > b ||
            b > this.__textEngine.numLines - 1
          )
            return -1;
          for (
            var c = null,
              d = null,
              f = this.__textEngine.layoutGroups.iterator();
            f.hasNext();

          ) {
            var g = f.next();
            if (a >= g.startIndex && a <= g.endIndex) {
              c = g.offsetX;
              for (var k = 0, l = a - g.startIndex; k < l; ) {
                var h = k++;
                c += g.positions[h];
              }
              if (null != d) return this.__getPosition(c, d);
            }
            if (g.lineIndex == b) {
              d = g.offsetY + g.height / 2;
              g = 0;
              for (k = this.get_scrollV() - 1; g < k; )
                ((l = g++), (d -= this.__textEngine.lineHeights.get(l)));
              if (null != c) return this.__getPosition(c, d);
            }
          }
          return -1;
        },
        __getCursor: function () {
          var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
          return null != a && '' != a.format.url
            ? 'button'
            : this.__textEngine.selectable
              ? 'ibeam'
              : null;
        },
        __getGroup: function (a, b, c) {
          null == c && (c = !1);
          this.__updateLayout();
          a += this.get_scrollH();
          for (var d = 0, f = this.get_scrollV() - 1; d < f; ) {
            var g = d++;
            b += this.__textEngine.lineHeights.get(g);
          }
          !c &&
            b > this.__textEngine.textHeight &&
            (b = this.__textEngine.textHeight);
          var k = !0;
          d = 0;
          for (f = this.__textEngine.layoutGroups.get_length(); d < f; ) {
            g = d++;
            var l = this.__textEngine.layoutGroups.get(g);
            g =
              g < this.__textEngine.layoutGroups.get_length() - 1
                ? this.__textEngine.layoutGroups.get(g + 1)
                : null;
            k &&
              (b < l.offsetY && (b = l.offsetY),
              a < l.offsetX && (a = l.offsetX),
              (k = !1));
            if (
              (b >= l.offsetY && b <= l.offsetY + l.height) ||
              (!c && null == g)
            )
              if (
                (a >= l.offsetX && a <= l.offsetX + l.width) ||
                (!c && (null == g || g.lineIndex != l.lineIndex))
              )
                return l;
          }
          return null;
        },
        __getPosition: function (a, b) {
          b = this.__getGroup(a, b);
          if (null == b) return this.__text.length;
          for (var c = 0, d = 0, f = b.positions.length; d < f; ) {
            var g = d++;
            c += b.positions[g];
            if (a <= b.offsetX + c) {
              if (a <= b.offsetX + (c - b.positions[g]) + b.positions[g] / 2)
                return b.startIndex + g;
              if (b.startIndex + g < b.endIndex) return b.startIndex + g + 1;
              break;
            }
          }
          return b.endIndex;
        },
        __getPositionByIdentifier: function (a, b, c) {
          a = this.__getPosition(a, b);
          c = c ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          b = this.__text.charAt(a);
          if (this.__specialSelectionInitialIndex <= a)
            for (; -1 == c.indexOf(b) && a < this.__text.length; )
              (++a, (b = this.__text.charAt(a)));
          else {
            for (; -1 == c.indexOf(b) && 0 < a; )
              (--a, (b = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          }
          return a;
        },
        __getOppositeIdentifierBound: function (a, b) {
          b = b ? '\n' : ' .,;:!?()[]{}<>/\\|-=+*&^%$#@~`\'"';
          var c = this.__text.charAt(a);
          if (a <= this.__caretIndex) {
            for (; -1 == b.indexOf(c) && 0 < a; )
              (--a, (c = this.__text.charAt(a)));
            if (0 == a) return a;
            ++a;
          } else
            for (; -1 == b.indexOf(c) && a < this.__text.length; )
              (++a, (c = this.__text.charAt(a)));
          return a;
        },
        __hitTest: function (a, b, c, d, f, g) {
          if (
            !g.get_visible() ||
            this.__isMask ||
            (f && !this.mouseEnabled) ||
            (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
          )
            return !1;
          this.__getRenderTransform();
          this.__updateLayout();
          c = this.__renderTransform;
          f = c.a * c.d - c.b * c.c;
          var k =
            0 == f ? -c.tx : (1 / f) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          f = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            k,
            0 == f ? -c.ty : (1 / f) * (c.a * (b - c.ty) + c.b * (c.tx - a)),
          )
            ? (null != d && d.push(g), !0)
            : !1;
        },
        __hitTestMask: function (a, b) {
          this.__getRenderTransform();
          this.__updateLayout();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            f =
              0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(
            f,
            0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a)),
          )
            ? !0
            : !1;
        },
        __replaceSelectedText: function (a, b) {
          null == b && (b = !0);
          null == a && (a = '');
          if ('' != a || this.__selectionIndex != this.__caretIndex) {
            var c =
                this.__caretIndex < this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex,
              d =
                this.__caretIndex > this.__selectionIndex
                  ? this.__caretIndex
                  : this.__selectionIndex;
            if (
              !(
                c == d &&
                0 < this.__textEngine.maxChars &&
                this.__text.length == this.__textEngine.maxChars
              )
            ) {
              c > this.__text.length && (c = this.__text.length);
              d > this.__text.length && (d = this.__text.length);
              if (d < c) {
                var f = d;
                d = c;
                c = f;
              }
              0 > c && (c = 0);
              this.__replaceText(c, d, a, b);
            }
          }
        },
        __replaceText: function (a, b, c, d) {
          if (!(b < a || 0 > a || b > this.__text.length || null == c)) {
            d &&
              ((c = this.__textEngine.restrictText(c)),
              0 < this.__textEngine.maxChars &&
                ((d =
                  this.__textEngine.maxChars - this.__text.length + (b - a)),
                0 >= d ? (c = '') : d < c.length && (c = R.substr(c, 0, d))));
            this.__updateText(
              this.__text.substring(0, a) + c + this.__text.substring(b),
            );
            d = c.length - (b - a);
            for (
              var f = 0, g;
              f < this.__textEngine.textFormatRanges.get_length();

            ) {
              g = this.__textEngine.textFormatRanges.get(f);
              if (a == b)
                g.start == g.end
                  ? 0 != g.start
                    ? La.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/TextField.hx',
                          lineNumber: 2184,
                          className: 'openfl.text.TextField',
                          methodName: '__replaceText',
                        },
                      )
                    : (g.end += d)
                  : g.end >= a &&
                    (g.start >= a
                      ? ((g.start += d), (g.end += d))
                      : g.start < a && g.end >= b && (g.end += d));
              else if (g.end > a)
                if (g.start > b) ((g.start += d), (g.end += d));
                else if (g.start <= a && g.end > b) g.end += d;
                else if (g.start >= a && g.end <= b) {
                  g = this.__textEngine.textFormatRanges;
                  g.__tempIndex = f--;
                  for (var k = 0, l = []; k < l.length; ) {
                    var h = l[k++];
                    g.insertAt(g.__tempIndex, h);
                    g.__tempIndex++;
                  }
                  g.splice(g.__tempIndex, 1);
                } else
                  g.end > b && g.start > a && g.start <= b
                    ? ((g.start = a), (g.end += d))
                    : g.start < a && g.end > a && g.end <= b && (g.end = a);
              ++f;
            }
            0 == this.__textEngine.textFormatRanges.get_length()
              ? this.__textEngine.textFormatRanges.push(
                  new vd(this.get_defaultTextFormat().clone(), 0, c.length),
                )
              : a == b && 0 < this.__textEngine.textFormatRanges.get(0).start
                ? this.__textEngine.textFormatRanges.unshift(
                    new vd(
                      this.get_defaultTextFormat().clone(),
                      0,
                      this.__textEngine.textFormatRanges.get(0).start,
                    ),
                  )
                : a != b &&
                  this.__textEngine.textFormatRanges.get(
                    this.__textEngine.textFormatRanges.get_length() - 1,
                  ).end < this.__text.length &&
                  this.__textEngine.textFormatRanges.push(
                    new vd(
                      this.get_defaultTextFormat().clone(),
                      this.__textEngine.textFormatRanges.get(
                        this.__textEngine.textFormatRanges.get_length() - 1,
                      ).end,
                      this.__text.length,
                    ),
                  );
            this.__selectionIndex = this.__caretIndex = a + c.length;
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty());
          }
        },
        __startCursorTimer: function () {
          1 == this.get_type()
            ? (this.__inputEnabled &&
                ((this.__cursorTimer = cg.delay(
                  m(this, this.__startCursorTimer),
                  600,
                )),
                (this.__showCursor = !this.__showCursor)),
              (this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()))
            : this.get_selectable() &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __startTextInput: function () {
          0 > this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex = this.__text.length);
          (ca.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__enableInput();
        },
        __stopCursorTimer: function () {
          null != this.__cursorTimer &&
            (this.__cursorTimer.stop(), (this.__cursorTimer = null));
          this.__showCursor &&
            ((this.__showCursor = !1),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        __stopTextInput: function () {
          (ca.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
            this.__disableInput();
        },
        __updateLayout: function () {
          if (this.__layoutDirty) {
            var a = this.__textEngine.width;
            this.__textEngine.update();
            if (2 != this.__textEngine.autoSize) {
              if (this.__textEngine.width != a)
                switch (this.__textEngine.autoSize) {
                  case 0:
                    this.set_x(
                      this.get_x() + (a - this.__textEngine.width) / 2,
                    );
                    break;
                  case 3:
                    this.set_x(this.get_x() + (a - this.__textEngine.width));
                }
              this.__textEngine.getBounds();
            }
            this.__layoutDirty = !1;
            this.setSelection(this.__selectionIndex, this.__caretIndex);
          }
        },
        __updateMouseDrag: function () {
          if (null != this.stage) {
            var a = this.getBounds(this);
            this.get_mouseX() > a.width - 1
              ? this.set_scrollH(
                  this.get_scrollH() +
                    (Math.max(
                      Math.min(0.1 * (this.get_mouseX() - a.width), 10),
                      1,
                    ) |
                      0),
                )
              : 1 > this.get_mouseX() &&
                this.set_scrollH(
                  this.get_scrollH() -
                    (Math.max(Math.min(-0.1 * this.get_mouseX(), 10), 1) | 0),
                );
            this.__mouseScrollVCounter++;
            this.__mouseScrollVCounter > this.stage.get_frameRate() / 10 &&
              (this.get_mouseY() > a.height - 2
                ? this.set_scrollV(
                    Math.min(
                      this.get_scrollV() +
                        Math.max(
                          Math.min(0.03 * (this.get_mouseY() - a.height), 5),
                          1,
                        ),
                      this.get_maxScrollV(),
                    ) | 0,
                  )
                : 2 > this.get_mouseY() &&
                  this.set_scrollV(
                    this.get_scrollV() -
                      (Math.max(Math.min(-0.03 * this.get_mouseY(), 5), 1) | 0),
                  ),
              (this.__mouseScrollVCounter = 0));
            this.stage_onMouseMove(null);
          }
        },
        __updateScrollH: function () {
          this.__updateLayout();
          var a = this.getBounds(this);
          if (this.get_textWidth() <= a.width - 4) this.set_scrollH(0);
          else {
            var b = this.get_scrollH();
            if (
              0 == this.__caretIndex ||
              this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) ==
                this.__caretIndex
            )
              b = 0;
            else {
              var c = na.__pool.get(),
                d = !1;
              this.__caretIndex < this.__text.length &&
                (d = this.__getCharBoundaries(this.__caretIndex, c));
              d ||
                (this.__getCharBoundaries(this.__caretIndex - 1, c),
                (c.x += c.width));
              for (; c.x < b && 0 < b; ) b -= 24;
              for (; c.x > b + a.width - 4; ) b += 24;
              na.__pool.release(c);
            }
            0 < b &&
              1 != this.get_type() &&
              ((c = this.getLineLength(
                this.getLineIndexOfChar(this.__caretIndex),
              )),
              this.get_scrollH() + a.width - 4 > c &&
                this.set_scrollH(Math.ceil(c - a.width + 4)));
            0 > b
              ? this.set_scrollH(0)
              : b > this.get_maxScrollH()
                ? this.set_scrollH(this.get_maxScrollH())
                : this.set_scrollH(b);
          }
        },
        __updateScrollV: function () {
          this.__updateLayout();
          if (this.get_textHeight() <= this.get_height() - 4)
            this.set_scrollV(1);
          else {
            var a = this.getLineIndexOfChar(this.__caretIndex);
            -1 == a &&
              0 < this.__caretIndex &&
              (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
            if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
            else if (a + 1 > this.get_bottomScrollV()) {
              var b = 0;
              for (
                a >= this.__textEngine.lineHeights.get_length() &&
                (a = this.__textEngine.lineHeights.get_length() - 1);
                0 <= a;

              ) {
                b += this.__textEngine.lineHeights.get(a);
                if (b > this.get_height() - 4) {
                  a += 0 > b - this.get_height() ? 1 : 2;
                  break;
                }
                --a;
              }
              this.set_scrollV(a);
            } else this.set_scrollV(this.get_scrollV());
          }
        },
        __updateText: function (a) {
          ca.__supportDOM &&
            this.__renderedOnCanvasWhileOnDOM &&
            (this.__forceCachedBitmapUpdate = this.__text != a);
          this.__textEngine.set_text(a);
          this.__text = this.__textEngine.text;
          null != this.stage && this.stage.get_focus() == this
            ? (this.__text.length < this.__selectionIndex &&
                (this.__selectionIndex = this.__text.length),
              this.__text.length < this.__caretIndex &&
                (this.__caretIndex = this.__text.length))
            : this.__isHTML
              ? (this.__selectionIndex = this.__caretIndex = this.__text.length)
              : (this.__caretIndex = this.__selectionIndex = 0);
          if (
            !this.__displayAsPassword ||
            (ca.__supportDOM && !this.__renderedOnCanvasWhileOnDOM)
          )
            this.__textEngine.set_text(this.__text);
          else {
            a = '';
            for (var b = 0, c = this.get_text().length; b < c; )
              (b++, (a += '*'));
            this.__textEngine.set_text(a);
          }
        },
        __updateTransforms: function (a) {
          Aa.prototype.__updateTransforms.call(this, a);
          a = this.__renderTransform;
          var b = this.__offsetX,
            c = this.__offsetY;
          a.tx = b * a.a + c * a.c + a.tx;
          a.ty = b * a.b + c * a.d + a.ty;
        },
        set_autoSize: function (a) {
          a != this.__textEngine.autoSize &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.autoSize = a);
        },
        set_background: function (a) {
          a != this.__textEngine.background &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.background = a);
        },
        set_backgroundColor: function (a) {
          a != this.__textEngine.backgroundColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.backgroundColor = a);
        },
        set_border: function (a) {
          a != this.__textEngine.border &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.border = a);
        },
        set_borderColor: function (a) {
          a != this.__textEngine.borderColor &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.borderColor = a);
        },
        get_bottomScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_bottomScrollV();
        },
        get_caretIndex: function () {
          return this.__caretIndex;
        },
        get_defaultTextFormat: function () {
          return this.__textFormat.clone();
        },
        set_defaultTextFormat: function (a) {
          this.__textFormat.__merge(a);
          this.__dirty = this.__layoutDirty = !0;
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
          return a;
        },
        get_displayAsPassword: function () {
          return this.__displayAsPassword;
        },
        get_height: function () {
          this.__updateLayout();
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        set_height: function (a) {
          a != this.__textEngine.height &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.height = a));
          return this.__textEngine.height * Math.abs(this.get_scaleY());
        },
        get_htmlText: function () {
          return this.__isHTML ? this.__htmlText : this.__text;
        },
        set_htmlText: function (a) {
          if (null == a)
            throw (
              (a = new Tf('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          (this.__isHTML && this.__text == a) ||
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          this.__isHTML = !0;
          this.condenseWhite && (a = a.replace(/\s+/g, ' '));
          this.__htmlText = a;
          a = Oa.parse(
            a,
            this.get_multiline(),
            this.__styleSheet,
            this.__textFormat,
            this.__textEngine.textFormatRanges,
          );
          this.__updateText(a);
          return a;
        },
        get_length: function () {
          return null != this.__text ? this.__text.length : 0;
        },
        get_maxScrollH: function () {
          this.__updateLayout();
          return this.__textEngine.maxScrollH;
        },
        get_maxScrollV: function () {
          this.__updateLayout();
          return this.__textEngine.get_maxScrollV();
        },
        get_mouseWheelEnabled: function () {
          return this.__mouseWheelEnabled;
        },
        get_multiline: function () {
          return this.__textEngine.multiline;
        },
        set_multiline: function (a) {
          return (this.__textEngine.multiline = a);
        },
        get_numLines: function () {
          this.__updateLayout();
          return this.__textEngine.numLines;
        },
        set_restrict: function (a) {
          this.__textEngine.restrict != a &&
            (this.__textEngine.set_restrict(a), this.__updateText(this.__text));
          return a;
        },
        get_scrollH: function () {
          return this.__textEngine.scrollH;
        },
        set_scrollH: function (a) {
          this.__updateLayout();
          a > this.__textEngine.maxScrollH &&
            (a = this.__textEngine.maxScrollH);
          0 > a && (a = 0);
          a != this.__textEngine.scrollH &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.scrollH = a),
            this.dispatchEvent(new za('scroll')));
          return this.__textEngine.scrollH;
        },
        get_scrollV: function () {
          return this.__textEngine.get_scrollV();
        },
        set_scrollV: function (a) {
          this.__updateLayout();
          a > this.__textEngine.get_maxScrollV() &&
            (a = this.__textEngine.get_maxScrollV());
          1 > a && (a = 1);
          if (
            a != this.__textEngine.get_scrollV() ||
            0 == this.__textEngine.get_scrollV()
          )
            ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()),
              this.__textEngine.set_scrollV(a),
              this.dispatchEvent(new za('scroll')));
          return this.__textEngine.get_scrollV();
        },
        get_selectable: function () {
          return this.__textEngine.selectable;
        },
        set_selectable: function (a) {
          a != this.__textEngine.selectable &&
            1 == this.get_type() &&
            (null != this.stage && this.stage.get_focus() == this
              ? this.__startTextInput()
              : a || this.__stopTextInput());
          return (this.__textEngine.selectable = a);
        },
        get_tabEnabled: function () {
          return null == this.__tabEnabled
            ? 1 == this.__textEngine.type
            : this.__tabEnabled;
        },
        get_text: function () {
          return this.__text;
        },
        set_text: function (a) {
          if (null == a)
            throw (
              (a = new Tf('Error #2007: Parameter text must be non-null.')),
              (a.errorID = 2007),
              a
            );
          if (null != this.__styleSheet) return this.set_htmlText(a);
          if (this.__isHTML || this.__text != a)
            ((this.__layoutDirty = this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          else return a;
          if (1 < this.__textEngine.textFormatRanges.get_length()) {
            var b = this.__textEngine.textFormatRanges,
              c = this.__textEngine.textFormatRanges.get_length() - 1;
            b.__tempIndex = 1;
            for (var d = 0, f = []; d < f.length; ) {
              var g = f[d++];
              b.insertAt(b.__tempIndex, g);
              b.__tempIndex++;
            }
            b.splice(b.__tempIndex, c);
          }
          b = this.__textEngine.textFormatRanges.get(0);
          b.format = this.__textFormat;
          b.start = 0;
          b.end = a.length;
          this.__isHTML = !1;
          this.__updateText(a);
          return a;
        },
        set_textColor: function (a) {
          a != this.__textFormat.color &&
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          for (
            var b = this.__textEngine.textFormatRanges.iterator();
            b.hasNext();

          )
            b.next().format.color = a;
          return (this.__textFormat.color = a);
        },
        get_textWidth: function () {
          this.__updateLayout();
          return this.__textEngine.textWidth;
        },
        get_textHeight: function () {
          this.__updateLayout();
          return this.__textEngine.textHeight;
        },
        get_type: function () {
          return this.__textEngine.type;
        },
        set_type: function (a) {
          null != this.__styleSheet && (a = 0);
          a != this.__textEngine.type &&
            ((this.__textEngine.type = a),
            1 == a
              ? (this.addEventListener(
                  'addedToStage',
                  m(this, this.this_onAddedToStage),
                ),
                this.this_onFocusIn(null),
                (this.__textEngine.__useIntAdvances = !0))
              : (this.removeEventListener(
                  'addedToStage',
                  m(this, this.this_onAddedToStage),
                ),
                this.__stopTextInput(),
                (this.__textEngine.__useIntAdvances = null)),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return this.__textEngine.type;
        },
        get_width: function () {
          this.__updateLayout();
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_width: function (a) {
          a != this.__textEngine.width &&
            (this.__setTransformDirty(),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            (this.__textEngine.width = a));
          return this.__textEngine.width * Math.abs(this.__scaleX);
        },
        set_wordWrap: function (a) {
          a != this.__textEngine.wordWrap &&
            ((this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          return (this.__textEngine.wordWrap = a);
        },
        get_x: function () {
          return this.__transform.tx + this.__offsetX;
        },
        set_x: function (a) {
          a != this.__transform.tx + this.__offsetX &&
            this.__setTransformDirty();
          this.__transform.tx = a - this.__offsetX;
          return a;
        },
        get_y: function () {
          return this.__transform.ty + this.__offsetY;
        },
        set_y: function (a) {
          a != this.__transform.ty + this.__offsetY &&
            this.__setTransformDirty();
          this.__transform.ty = a - this.__offsetY;
          return a;
        },
        stage_onMouseMove: function (a) {
          if (
            null != this.stage &&
            this.get_selectable() &&
            0 <= this.__selectionIndex &&
            (this.__updateLayout(),
            (a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  )),
            a != this.__caretIndex)
          ) {
            this.__caretIndex = a;
            if (this.__wordSelection || this.__lineSelection)
              this.__selectionIndex = this.__getOppositeIdentifierBound(
                this.__specialSelectionInitialIndex,
                this.__lineSelection,
              );
            a = !0;
            ca.__supportDOM &&
              (this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0),
              (a = !1));
            a &&
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
          }
        },
        stage_onMouseUp: function (a) {
          a = a.currentTarget;
          a.removeEventListener('enterFrame', m(this, this.this_onEnterFrame));
          a.removeEventListener('mouseMove', m(this, this.stage_onMouseMove));
          a.removeEventListener('mouseUp', m(this, this.stage_onMouseUp));
          if (this.stage == a && a.get_focus() == this) {
            this.__getWorldTransform();
            this.__updateLayout();
            a = this.__lineSelection
              ? this.__getPositionByIdentifier(
                  this.get_mouseX() + this.get_scrollH(),
                  this.get_mouseY(),
                  !0,
                )
              : this.__wordSelection
                ? this.__getPositionByIdentifier(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                    !1,
                  )
                : this.__getPosition(
                    this.get_mouseX() + this.get_scrollH(),
                    this.get_mouseY(),
                  );
            var b = Math.max(this.__selectionIndex, a) | 0;
            this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
            this.__caretIndex = b;
            this.__wordSelection = this.__lineSelection = !1;
            this.__inputEnabled &&
              (this.this_onFocusIn(null),
              this.__stopCursorTimer(),
              this.__startCursorTimer(),
              ca.__supportDOM &&
                this.__renderedOnCanvasWhileOnDOM &&
                (this.__forceCachedBitmapUpdate = !0));
          }
        },
        this_onAddedToStage: function (a) {
          this.this_onFocusIn(null);
        },
        this_onEnterFrame: function (a) {
          this.__updateMouseDrag();
        },
        this_onFocusIn: function (a) {
          1 == this.get_type() &&
          null != this.stage &&
          this.stage.get_focus() == this
            ? this.__startTextInput()
            : 1 != this.get_type() &&
              this.get_selectable() &&
              null != this.stage &&
              this.stage.get_focus() == this &&
              this.__startCursorTimer();
        },
        this_onFocusOut: function (a) {
          this.__stopCursorTimer();
          this.__stopTextInput();
          this.__selectionIndex != this.__caretIndex &&
            ((this.__selectionIndex = this.__caretIndex),
            (this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()));
        },
        this_onKeyDown: function (a) {
          this.get_selectable() &&
            1 != this.get_type() &&
            67 == a.keyCode &&
            (a.commandKey || a.ctrlKey) &&
            (this.__caretIndex == this.__selectionIndex ||
              this.get_displayAsPassword() ||
              zc.set_text(
                this.__text.substring(this.__caretIndex, this.__selectionIndex),
              ));
        },
        this_onMouseDown: function (a) {
          if (this.get_selectable() || 1 == this.get_type()) {
            this.__lineSelection = 3 == a.clickCount;
            this.__wordSelection = 2 == a.clickCount;
            if (this.__lineSelection) {
              var b = this.__caretIndex;
              this.__caretIndex = this.__getPositionByIdentifier(
                a.stageX + this.get_scrollH(),
                a.stageY,
                !0,
              );
              this.__selectionIndex = this.__getOppositeIdentifierBound(b, !0);
            } else
              this.__wordSelection
                ? ((b = this.__caretIndex),
                  (this.__caretIndex = this.__getPositionByIdentifier(
                    a.stageX + this.get_scrollH(),
                    a.stageY,
                    !1,
                  )),
                  (this.__selectionIndex = this.__getOppositeIdentifierBound(
                    b,
                    !1,
                  )),
                  (this.__specialSelectionInitialIndex = b))
                : (this.__selectionIndex = this.__caretIndex =
                    this.__getPosition(
                      this.get_mouseX() + this.get_scrollH(),
                      this.get_mouseY(),
                    ));
            this.setSelection(this.__caretIndex, this.__selectionIndex);
            this.__updateLayout();
            ca.__supportDOM ||
              ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()));
            null != this.stage &&
              (this.stage.addEventListener(
                'enterFrame',
                m(this, this.this_onEnterFrame),
              ),
              this.stage.addEventListener(
                'mouseMove',
                m(this, this.stage_onMouseMove),
              ),
              this.stage.addEventListener(
                'mouseUp',
                m(this, this.stage_onMouseUp),
              ));
          }
        },
        this_onMouseWheel: function (a) {
          this.get_mouseWheelEnabled() &&
            this.set_scrollV(
              Math.min(this.get_scrollV() - a.delta, this.get_maxScrollV()) | 0,
            );
        },
        window_onKeyDown: function (a, b) {
          switch (a) {
            case 8:
              this.__selectionIndex == this.__caretIndex &&
                0 < this.__caretIndex &&
                (this.__selectionIndex = this.__caretIndex - 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new za('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 97:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)) &&
                this.setSelection(0, this.__text.length);
              break;
            case 99:
              if (fb.get_metaKey(b) || fb.get_ctrlKey(b))
                this.__caretIndex == this.__selectionIndex ||
                  this.get_displayAsPassword() ||
                  zc.set_text(
                    this.__text.substring(
                      this.__caretIndex,
                      this.__selectionIndex,
                    ),
                  );
              break;
            case 120:
              (!fb.get_metaKey(b) && !fb.get_ctrlKey(b)) ||
                this.__caretIndex == this.__selectionIndex ||
                this.get_displayAsPassword() ||
                (zc.set_text(
                  this.__text.substring(
                    this.__caretIndex,
                    this.__selectionIndex,
                  ),
                ),
                this.replaceSelectedText(''),
                this.dispatchEvent(new za('change', !0)));
              break;
            case 127:
              this.__selectionIndex == this.__caretIndex &&
                this.__caretIndex < this.__text.length &&
                (this.__selectionIndex = this.__caretIndex + 1);
              this.__selectionIndex != this.__caretIndex
                ? (this.replaceSelectedText(''),
                  (this.__selectionIndex = this.__caretIndex),
                  this.dispatchEvent(new za('change', !0)))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 1073741898:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretBeginningOfLine(),
                fb.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741901:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretEndOfLine(),
                fb.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741903:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)
                  ? this.__caretBeginningOfNextLine()
                  : this.__caretNextCharacter(),
                fb.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741904:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)
                  ? this.__caretBeginningOfPreviousLine()
                  : this.__caretPreviousCharacter(),
                fb.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741905:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)
                  ? (this.__caretIndex = this.__text.length)
                  : this.__caretNextLine(),
                fb.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741906:
              this.get_selectable() &&
                (fb.get_metaKey(b) || fb.get_ctrlKey(b)
                  ? (this.__caretIndex = 0)
                  : this.__caretPreviousLine(),
                fb.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex),
                this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 13:
            case 1073741912:
              this.__textEngine.multiline
                ? ((a = new Pe('textInput', !0, !0, '\n')),
                  this.dispatchEvent(a),
                  a.isDefaultPrevented() ||
                    (this.__replaceSelectedText('\n', !0),
                    this.dispatchEvent(new za('change', !0))))
                : (this.__stopCursorTimer(), this.__startCursorTimer());
          }
        },
        window_onTextInput: function (a) {
          this.__replaceSelectedText(a, !0);
          this.dispatchEvent(new za('change', !0));
        },
        __class__: Qc,
        __properties__: u(Aa.prototype.__properties__, {
          set_wordWrap: 'set_wordWrap',
          set_textColor: 'set_textColor',
          set_restrict: 'set_restrict',
          set_borderColor: 'set_borderColor',
          set_border: 'set_border',
          set_backgroundColor: 'set_backgroundColor',
          set_background: 'set_background',
          set_autoSize: 'set_autoSize',
          set_type: 'set_type',
          get_type: 'get_type',
          get_textWidth: 'get_textWidth',
          get_textHeight: 'get_textHeight',
          set_text: 'set_text',
          get_text: 'get_text',
          set_selectable: 'set_selectable',
          get_selectable: 'get_selectable',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_scrollH: 'set_scrollH',
          get_scrollH: 'get_scrollH',
          get_numLines: 'get_numLines',
          set_multiline: 'set_multiline',
          get_multiline: 'get_multiline',
          get_mouseWheelEnabled: 'get_mouseWheelEnabled',
          get_maxScrollV: 'get_maxScrollV',
          get_maxScrollH: 'get_maxScrollH',
          get_length: 'get_length',
          set_htmlText: 'set_htmlText',
          get_htmlText: 'get_htmlText',
          get_displayAsPassword: 'get_displayAsPassword',
          set_defaultTextFormat: 'set_defaultTextFormat',
          get_defaultTextFormat: 'get_defaultTextFormat',
          get_caretIndex: 'get_caretIndex',
          get_bottomScrollV: 'get_bottomScrollV',
        }),
      });
      var Fe = function (a, b, c, d, f, g, k, l, h, t, w, n, r) {
        this.font = a;
        this.size = b;
        this.color = c;
        this.bold = d;
        this.italic = f;
        this.underline = g;
        this.url = k;
        this.target = l;
        this.align = h;
        this.leftMargin = t;
        this.rightMargin = w;
        this.indent = n;
        this.leading = r;
      };
      h['openfl.text.TextFormat'] = Fe;
      Fe.__name__ = 'openfl.text.TextFormat';
      Fe.prototype = {
        clone: function () {
          var a = new Fe(
            this.font,
            this.size,
            this.color,
            this.bold,
            this.italic,
            this.underline,
            this.url,
            this.target,
          );
          a.align = this.align;
          a.leftMargin = this.leftMargin;
          a.rightMargin = this.rightMargin;
          a.indent = this.indent;
          a.leading = this.leading;
          a.blockIndent = this.blockIndent;
          a.bullet = this.bullet;
          a.kerning = this.kerning;
          a.letterSpacing = this.letterSpacing;
          a.tabStops = this.tabStops;
          a.__ascent = this.__ascent;
          a.__descent = this.__descent;
          a.__cacheKey = this.__toCacheKey();
          return a;
        },
        __merge: function (a) {
          null != a.font && (this.font = a.font);
          null != a.size && (this.size = a.size);
          null != a.color && (this.color = a.color);
          null != a.bold && (this.bold = a.bold);
          null != a.italic && (this.italic = a.italic);
          null != a.underline && (this.underline = a.underline);
          null != a.url && (this.url = a.url);
          null != a.target && (this.target = a.target);
          null != a.align && (this.align = a.align);
          null != a.leftMargin && (this.leftMargin = a.leftMargin);
          null != a.rightMargin && (this.rightMargin = a.rightMargin);
          null != a.indent && (this.indent = a.indent);
          null != a.leading && (this.leading = a.leading);
          null != a.blockIndent && (this.blockIndent = a.blockIndent);
          null != a.bullet && (this.bullet = a.bullet);
          null != a.kerning && (this.kerning = a.kerning);
          null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
          null != a.tabStops && (this.tabStops = a.tabStops);
          null != a.__ascent && (this.__ascent = a.__ascent);
          null != a.__descent && (this.__descent = a.__descent);
          this.__toCacheKey();
        },
        __toCacheKey: function () {
          return (this.__cacheKey =
            '' +
            this.font +
            this.size +
            I.string(this.bold) +
            I.string(this.italic));
        },
        __class__: Fe,
      };
      var Vl = {
          fromString: function (a) {
            switch (a) {
              case 'center':
                return 0;
              case 'end':
                return 1;
              case 'justify':
                return 2;
              case 'left':
                return 3;
              case 'right':
                return 4;
              case 'start':
                return 5;
              default:
                return null;
            }
          },
        },
        el = function (a, b, c, d, f, g) {
          this.x = a;
          this.width = b;
          this.height = c;
          this.ascent = d;
          this.descent = f;
          this.leading = g;
        };
      h['openfl.text.TextLineMetrics'] = el;
      el.__name__ = 'openfl.text.TextLineMetrics';
      el.prototype = { __class__: el };
      var Nh = function (a, b) {
        this.__collisions = [];
        this.__wordMap = new tc();
        this.set(a, b);
      };
      h['openfl.text._internal.CacheMeasurement'] = Nh;
      Nh.__name__ = 'openfl.text._internal.CacheMeasurement';
      Nh.prototype = {
        set: function (a, b) {
          this.__addCollision(a, b);
        },
        get: function (a) {
          return 1 < this.__collisions.length
            ? this.__wordMap.h[this.__collisions.indexOf(a)]
            : this.__wordMap.h[0];
        },
        __addCollision: function (a, b) {
          if (!this.exists(a)) {
            var c = this.__wordMap;
            a = this.__collisions.push(a) - 1;
            c.h[a] = b;
          }
        },
        exists: function (a) {
          return 0 == this.__collisions.length
            ? !1
            : -1 < this.__collisions.indexOf(a);
        },
        __class__: Nh,
      };
      var Oa = function () {};
      h['openfl.text._internal.HTMLParser'] = Oa;
      Oa.__name__ = 'openfl.text._internal.HTMLParser';
      Oa.parse = function (a, b, c, d, f) {
        a = b
          ? a.replace(Oa.__regexBreakTag.r, '\n')
          : a.replace(Oa.__regexBreakTag.r, '');
        a = a.replace(Oa.__regexEntityNbsp.r, ' ');
        a = Oa.__regexCharEntity.map(a, function (a) {
          var b = a.matched(1),
            c = a.matched(2);
          return null != b && ((b = I.parseInt(b)), null != b)
            ? String.fromCodePoint(b)
            : null != c && ((c = I.parseInt('0' + c)), null != c)
              ? String.fromCodePoint(c)
              : a.matched(0);
        });
        var g = a.split('<');
        if (1 == g.length) {
          a = Oa.__htmlUnescape(a.replace(Oa.__regexHTMLTag.r, ''));
          if (1 < f.get_length()) {
            var k = f.get_length() - 1;
            f.__tempIndex = 1;
            for (var l = 0, h = []; l < h.length; ) {
              var t = h[l++];
              f.insertAt(f.__tempIndex, t);
              f.__tempIndex++;
            }
            f.splice(f.__tempIndex, k);
          }
          b = f.get(0);
          b.format = d;
          b.start = 0;
          b.end = a.length;
        } else {
          k = f.get_length();
          l = f.__tempIndex = 0;
          for (h = []; l < h.length; )
            ((t = h[l++]), f.insertAt(f.__tempIndex, t), f.__tempIndex++);
          f.splice(f.__tempIndex, k);
          a = '';
          k = [d.clone()];
          l = [];
          t = !1;
          for (h = 0; h < g.length; ) {
            var w = g[h];
            ++h;
            if ('' != w) {
              var n = '/' == R.substr(w, 0, 1),
                r = w.indexOf('>'),
                C = r + 1,
                x = w.indexOf(' ');
              x = w.substring(n ? 1 : 0, -1 < x && x < r ? x : r).toLowerCase();
              if (n)
                0 != l.length &&
                  x == l[l.length - 1] &&
                  (l.pop(),
                  k.pop(),
                  (n = k[k.length - 1].clone()),
                  ('p' == x || 'li' == x) &&
                    0 < f.get_length() &&
                    (b && (a += '\n'), (t = !0)),
                  C < w.length &&
                    ((t = Oa.__htmlUnescape(R.substr(w, C, null))),
                    f.push(new vd(n, a.length, a.length + t.length)),
                    (a += t),
                    (t = !1)));
              else if (((n = k[k.length - 1].clone()), -1 < r)) {
                null != c &&
                  (c.__applyStyle(x, n),
                  Oa.__regexClass.match(w) &&
                    (c.__applyStyle(
                      '.' + Oa.__getAttributeMatch(Oa.__regexClass),
                      n,
                    ),
                    c.__applyStyle(
                      x + '.' + Oa.__getAttributeMatch(Oa.__regexClass),
                      n,
                    )));
                switch (x) {
                  case 'a':
                    null != c && c.__applyStyle('a:link', n);
                    Oa.__regexHref.match(w) &&
                      (n.url = Oa.__getAttributeMatch(Oa.__regexHref));
                    break;
                  case 'b':
                    n.bold = !0;
                    break;
                  case 'em':
                  case 'i':
                    n.italic = !0;
                    break;
                  case 'font':
                    Oa.__regexFace.match(w) &&
                      (n.font = Oa.__getAttributeMatch(Oa.__regexFace));
                    Oa.__regexColor.match(w) &&
                      (n.color = I.parseInt(
                        '0x' + Oa.__getAttributeMatch(Oa.__regexColor),
                      ));
                    if (Oa.__regexSize.match(w)) {
                      r = Oa.__getAttributeMatch(Oa.__regexSize);
                      var m = R.cca(r, 0);
                      n.size =
                        43 == m || 45 == m
                          ? (2 <= k.length ? k[k.length - 2] : d).size +
                            I.parseInt(r)
                          : I.parseInt(r);
                    }
                    break;
                  case 'li':
                    0 < f.get_length() && !t && (a += '\n');
                    r = n.clone();
                    r.underline = !1;
                    f.push(new vd(r, a.length, a.length + 2));
                    a += '\u2022 ';
                    break;
                  case 'p':
                    0 < f.get_length() && !t && (a += '\n');
                    Oa.__regexAlign.match(w) &&
                      ((r = Oa.__getAttributeMatch(
                        Oa.__regexAlign,
                      ).toLowerCase()),
                      (n.align = Vl.fromString(r)));
                    break;
                  case 'textformat':
                    Oa.__regexBlockIndent.match(w) &&
                      (n.blockIndent = I.parseInt(
                        Oa.__getAttributeMatch(Oa.__regexBlockIndent),
                      ));
                    Oa.__regexIndent.match(w) &&
                      (n.indent = I.parseInt(
                        Oa.__getAttributeMatch(Oa.__regexIndent),
                      ));
                    Oa.__regexLeading.match(w) &&
                      (n.leading = I.parseInt(
                        Oa.__getAttributeMatch(Oa.__regexLeading),
                      ));
                    Oa.__regexLeftMargin.match(w) &&
                      (n.leftMargin = I.parseInt(
                        Oa.__getAttributeMatch(Oa.__regexLeftMargin),
                      ));
                    Oa.__regexRightMargin.match(w) &&
                      (n.rightMargin = I.parseInt(
                        Oa.__getAttributeMatch(Oa.__regexRightMargin),
                      ));
                    if (Oa.__regexTabStops.match(w)) {
                      r = Oa.__getAttributeMatch(Oa.__regexTabStops).split(' ');
                      m = [];
                      for (var G = 0; G < r.length; ) {
                        var y = r[G];
                        ++G;
                        m.push(I.parseInt(y));
                      }
                      n.tabStops = m;
                    }
                    break;
                  case 'u':
                    n.underline = !0;
                }
                k.push(n);
                l.push(x);
                C < w.length &&
                  ((t = Oa.__htmlUnescape(w.substring(C))),
                  f.push(new vd(n, a.length, a.length + t.length)),
                  (a += t),
                  (t = !1));
              } else
                ((t = Oa.__htmlUnescape(w)),
                  f.push(new vd(n, a.length, a.length + t.length)),
                  (a += t),
                  (t = !1));
            }
          }
          0 == f.get_length() && f.push(new vd(k[0], 0, 0));
        }
        return a;
      };
      Oa.__getAttributeMatch = function (a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3);
      };
      Oa.__htmlUnescape = function (a) {
        a = a.replace(Oa.__regexEntityApos.r, "'");
        return P.htmlUnescape(a);
      };
      var Yg = function () {
        this.__shortWordMap = new Ja();
        this.__longWordMap = new Ja();
      };
      h['openfl.text._internal.ShapeCache'] = Yg;
      Yg.__name__ = 'openfl.text._internal.ShapeCache';
      Yg.hashFunction = function (a) {
        for (var b = 0, c, d = 0, f = a.length; d < f; )
          ((c = d++), (c = R.cca(a, c)), (b = (b << 5) - b + c), (b |= 0));
        return b;
      };
      Yg.prototype = {
        cache: function (a, b, c) {
          a = a.format.__cacheKey;
          return 15 < c.length
            ? this.__cacheLongWord(c, a, b)
            : this.__cacheShortWord(c, a, b);
        },
        __cacheShortWord: function (a, b, c) {
          if (Object.prototype.hasOwnProperty.call(this.__shortWordMap.h, b)) {
            var d = this.__shortWordMap.h[b];
            if (Object.prototype.hasOwnProperty.call(d.h, a)) return d.h[a];
            var f = c();
            d.h[a] = f;
          } else
            ((d = new Ja()),
              (f = c()),
              (d.h[a] = f),
              (this.__shortWordMap.h[b] = d));
          return c();
        },
        __cacheLongWord: function (a, b, c) {
          var d = Yg.hashFunction(a);
          if (Object.prototype.hasOwnProperty.call(this.__longWordMap.h, b)) {
            var f = this.__longWordMap.h[b];
            if (f.h.hasOwnProperty(d)) {
              var g = f.h[d];
              if (g.exists(a)) return g.get(a);
              g.set(a, c());
            } else ((g = new Nh(a, c())), (f.h[d] = g));
          } else
            ((f = new tc()),
              (g = new Nh(a, c())),
              (g.hash = d),
              (f.h[d] = g),
              (this.__longWordMap.h[b] = f));
          return c();
        },
        __class__: Yg,
      };
      var Eb = function (a) {
        this.__shapeCache = new Yg();
        this.textField = a;
        this.height = this.width = 100;
        this.set_text('');
        this.bounds = new na(0, 0, 0, 0);
        this.textBounds = new na(0, 0, 0, 0);
        this.type = 0;
        this.autoSize = 2;
        this.embedFonts = !1;
        this.selectable = !0;
        this.borderColor = 0;
        this.border = !1;
        this.backgroundColor = 16777215;
        this.background = !1;
        this.gridFitType = 1;
        this.maxChars = 0;
        this.multiline = !1;
        this.numLines = 1;
        this.scrollH = this.sharpness = 0;
        this.set_scrollV(1);
        this.wordWrap = !1;
        this.lineAscents = ra.toFloatVector(null);
        this.lineBreaks = ra.toIntVector(null);
        this.lineDescents = ra.toFloatVector(null);
        this.lineLeadings = ra.toFloatVector(null);
        this.lineHeights = ra.toFloatVector(null);
        this.lineWidths = ra.toFloatVector(null);
        this.layoutGroups = ra.toObjectVector(null);
        this.textFormatRanges = ra.toObjectVector(null);
        null == Eb.__context &&
          (Eb.__context = window.document
            .createElement('canvas')
            .getContext('2d'));
      };
      h['openfl.text._internal.TextEngine'] = Eb;
      Eb.__name__ = 'openfl.text._internal.TextEngine';
      Eb.findFont = function (a) {
        return la.__fontByName.h[a];
      };
      Eb.findFontVariant = function (a) {
        var b = a.font,
          c = a.bold;
        a = a.italic;
        null == b && (b = '_serif');
        var d = P.replace(P.replace(b, ' Normal', ''), ' Regular', '');
        return c &&
          a &&
          Object.prototype.hasOwnProperty.call(
            la.__fontByName.h,
            d + ' Bold Italic',
          )
          ? Eb.findFont(d + ' Bold Italic')
          : c &&
              Object.prototype.hasOwnProperty.call(
                la.__fontByName.h,
                d + ' Bold',
              )
            ? Eb.findFont(d + ' Bold')
            : a &&
                Object.prototype.hasOwnProperty.call(
                  la.__fontByName.h,
                  d + ' Italic',
                )
              ? Eb.findFont(d + ' Italic')
              : Eb.findFont(b);
      };
      Eb.getFormatHeight = function (a) {
        var b = Eb.getFont(a);
        Eb.__context.font = b;
        b = Eb.getFontInstance(a);
        if (null != a.__ascent) {
          var c = a.size * a.__ascent;
          b = a.size * a.__descent;
        } else
          null != b && 0 != b.unitsPerEM
            ? ((c = (b.ascender / b.unitsPerEM) * a.size),
              (b = Math.abs((b.descender / b.unitsPerEM) * a.size)))
            : ((c = a.size), (b = 0.185 * a.size));
        return c + b + a.leading;
      };
      Eb.getFont = function (a) {
        var b = a.font,
          c = a.bold,
          d = a.italic;
        null == b && (b = '_serif');
        var f = P.replace(P.replace(b, ' Normal', ''), ' Regular', '');
        c &&
        d &&
        Object.prototype.hasOwnProperty.call(
          la.__fontByName.h,
          f + ' Bold Italic',
        )
          ? ((b = f + ' Bold Italic'), (d = c = !1))
          : c &&
              Object.prototype.hasOwnProperty.call(
                la.__fontByName.h,
                f + ' Bold',
              )
            ? ((b = f + ' Bold'), (c = !1))
            : d &&
                Object.prototype.hasOwnProperty.call(
                  la.__fontByName.h,
                  f + ' Italic',
                )
              ? ((b = f + ' Italic'), (d = !1))
              : (c &&
                  (-1 < b.indexOf(' Bold ') || P.endsWith(b, ' Bold')) &&
                  (c = !1),
                d &&
                  (-1 < b.indexOf(' Italic ') || P.endsWith(b, ' Italic')) &&
                  (d = !1));
        c = (d ? 'italic ' : 'normal ') + 'normal ' + (c ? 'bold ' : 'normal ');
        c += a.size + 'px';
        c += '/' + (a.size + 3) + 'px ';
        switch (b) {
          case '_sans':
            a = 'sans-serif';
            break;
          case '_serif':
            a = 'serif';
            break;
          case '_typewriter':
            a = 'monospace';
            break;
          default:
            a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, '$1') + "'";
        }
        return (c += '' + a);
      };
      Eb.getFontInstance = function (a) {
        return Eb.findFontVariant(a);
      };
      Eb.prototype = {
        createRestrictRegexp: function (a) {
          var b = '',
            c = !1;
          a = new Ba('\\^([^\\^]+)', 'gu').map(a, function (a) {
            if (c) return ((c = !c), a.matched(1));
            b += a.matched(1);
            c = !c;
            return '';
          });
          var d = [];
          0 < a.length && d.push('[^' + a + ']');
          0 < b.length && d.push('[' + b + ']');
          return new Ba('(' + d.join('|') + ')', 'g');
        },
        getBounds: function () {
          var a = this.border ? 1 : 0;
          this.bounds.width = this.width + a;
          this.bounds.height = this.height + a;
          a = this.width;
          for (
            var b = this.height,
              c = this.layoutGroups.get_length() - 1,
              d = 0,
              f = this.layoutGroups.get_length();
            d < f;

          ) {
            var g = d++,
              k = this.layoutGroups.get(g);
            if (g != c || k.startIndex != k.endIndex || 1 == this.type)
              (k.offsetX < a && (a = k.offsetX),
                k.offsetY < b && (b = k.offsetY));
          }
          a >= this.width && (a = 2);
          b >= this.height && (b = 2);
          this.textBounds.setTo(
            Math.max(a - 2, 0),
            Math.max(b - 2, 0),
            Math.min(this.textWidth + 4, this.bounds.width),
            Math.min(1.185 * this.textHeight + 4, this.bounds.height),
          );
        },
        getLineBreaks: function () {
          this.lineBreaks.set_length(0);
          for (var a = -1, b; a < this.text.length; )
            if (
              ((b = this.text.indexOf('\n', a + 1)),
              (a = this.text.indexOf('\r', a + 1)),
              (a = -1 == a ? b : -1 == b ? a : a < b ? a : b),
              -1 < a)
            )
              this.lineBreaks.push(a);
            else break;
        },
        getLineMeasurements: function () {
          this.lineAscents.set_length(0);
          this.lineDescents.set_length(0);
          this.lineLeadings.set_length(0);
          this.lineHeights.set_length(0);
          this.lineWidths.set_length(0);
          var a = 0,
            b = 0,
            c = null,
            d = 0,
            f = 0;
          this.textHeight = this.textWidth = 0;
          this.numLines = 1;
          this.maxScrollH = 0;
          for (
            var g = this.layoutGroups.get_length() - 1,
              k = 0,
              l = this.layoutGroups.get_length();
            k < l;

          ) {
            var h = k++;
            var t = this.layoutGroups.get(h);
            if (h != g || t.startIndex != t.endIndex || 1 == this.type) {
              for (; t.lineIndex > this.numLines - 1; )
                (this.lineAscents.push(a),
                  this.lineDescents.push(b),
                  this.lineLeadings.push(null != c ? c : 0),
                  this.lineHeights.push(d),
                  this.lineWidths.push(f),
                  (b = a = 0),
                  (c = null),
                  (f = d = 0),
                  this.numLines++);
              a = Math.max(a, t.ascent);
              b = Math.max(b, t.descent);
              c = null == c ? t.leading : Math.max(c, t.leading) | 0;
              d = Math.max(d, t.height);
              f = t.offsetX - 2 + t.width;
              f > this.textWidth && (this.textWidth = f);
              h = Math.ceil(t.offsetY - 2 + t.ascent + t.descent);
              h > this.textHeight && (this.textHeight = h);
            }
          }
          0 == this.textHeight &&
            null != this.textField &&
            1 == this.type &&
            ((a = this.textField.__textFormat),
            (b = Eb.getFontInstance(a)),
            null != a.__ascent
              ? ((g = a.size * a.__ascent), (k = a.size * a.__descent))
              : null != b && 0 != b.unitsPerEM
                ? ((g = (b.ascender / b.unitsPerEM) * a.size),
                  (k = Math.abs((b.descender / b.unitsPerEM) * a.size)))
                : ((g = a.size), (k = 0.185 * a.size)),
            (c = a.leading),
            (a = g),
            (b = k),
            (this.textHeight = h = Math.ceil(g + k)));
          this.lineAscents.push(a);
          this.lineDescents.push(b);
          this.lineLeadings.push(null != c ? c : 0);
          this.lineHeights.push(d);
          this.lineWidths.push(f);
          1 == this.numLines && 0 < c && (this.textHeight += c);
          if (2 != this.autoSize)
            switch (this.autoSize) {
              case 0:
              case 1:
              case 3:
                (this.wordWrap || (this.width = this.textWidth + 4),
                  (this.height = this.textHeight + 4),
                  (this.bottomScrollV = this.numLines));
            }
          this.maxScrollH =
            this.textWidth > this.width - 4
              ? (this.textWidth - this.width + 4) | 0
              : 0;
          this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH);
        },
        getLayoutGroups: function () {
          var a = this;
          this.layoutGroups.set_length(0);
          if (null != this.text && '' != this.text) {
            var b = -1,
              c = null,
              d = null,
              f = Qc.__defaultTextFormat.clone(),
              g = 0,
              k = 0,
              l = 0,
              h = 0,
              t = 3,
              w = 0,
              n = 0,
              r = 0,
              C = 0,
              x = !0,
              m = null,
              G = null,
              y = 0,
              A = 0,
              B = 0,
              N = -2,
              L = -1,
              u = this.text.indexOf(' '),
              v = 0,
              E =
                v < this.lineBreaks.get_length() ? this.lineBreaks.get(v) : -1,
              D = 0,
              J = 0,
              wa = 0,
              P = 0,
              Ta = function (b, d, g) {
                var k = function () {
                  var c = [];
                  if (null == a.__useIntAdvances) {
                    var f = new Ba('Trident/7.0', '');
                    a.__useIntAdvances = f.match(z.navigator.userAgent);
                  }
                  if (a.__useIntAdvances) {
                    var k = 0;
                    f = d;
                    for (var l = g; f < l; ) {
                      var h = f++;
                      h = a.measureText(b.substring(d, h + 1));
                      c.push(h - k);
                      k = h;
                    }
                  } else
                    for (f = d, l = g; f < l; )
                      ((h = f++),
                        h < b.length - 1
                          ? ((k = a.measureText(b.charAt(h + 1))),
                            (k = a.measureText(R.substr(b, h, 2)) - k))
                          : (k = Eb.__context.measureText(b.charAt(h)).width),
                        c.push(k));
                  return c;
                };
                return 2 == f.align
                  ? k()
                  : a.__shapeCache.cache(c, k, b.substring(d, g));
              },
              I = function (a) {
                for (var b = 0, c = 0; c < a.length; ) {
                  var d = a[c];
                  ++c;
                  b += d;
                }
                return b;
              },
              ab = function () {
                return 2 + r + w + (x ? n : 0);
              },
              M = function () {
                return a.width - 2 - C - ab();
              },
              qa = function (b, d) {
                null == m || m.startIndex != m.endIndex
                  ? ((m = new Rj(c.format, b, d)), a.layoutGroups.push(m))
                  : ((m.format = c.format),
                    (m.startIndex = b),
                    (m.endIndex = d));
              },
              oa = function () {
                null != f.__ascent
                  ? ((k = f.size * f.__ascent), (h = f.size * f.__descent))
                  : null != d && 0 != d.unitsPerEM
                    ? ((k = (d.ascender / d.unitsPerEM) * f.size),
                      (h = Math.abs((d.descender / d.unitsPerEM) * f.size)))
                    : ((k = f.size), (h = 0.185 * f.size));
                g = f.leading;
                A = Math.ceil(k + h + g);
                A > B && (B = A);
                k > l && (l = k);
              },
              ia = function () {
                x = !0;
                t = null != f.align ? f.align : 3;
                w = null != f.blockIndent ? f.blockIndent : 0;
                n = null != f.indent ? f.indent : 0;
                r = null != f.leftMargin ? f.leftMargin : 0;
                C = null != f.rightMargin ? f.rightMargin : 0;
              },
              F = function () {
                if (b < a.textFormatRanges.get_length() - 1) {
                  b += 1;
                  c = a.textFormatRanges.get(b);
                  f.__merge(c.format);
                  var g = Eb.getFont(f);
                  Eb.__context.font = g;
                  d = Eb.getFontInstance(f);
                  return !0;
                }
                return !1;
              },
              Ya = function (d, f) {
                if (d >= f) ((G = []), (y = 0));
                else if (f <= c.end) ((G = Ta(a.text, d, f)), (y = I(G)));
                else {
                  var g = d;
                  d = c.end;
                  var k = 0;
                  G = [];
                  for (y = 0; ; )
                    if (
                      (g != d && ((g = Ta(a.text, g, d)), (G = G.concat(g))),
                      d != f)
                    ) {
                      if (!F()) {
                        La.warn(
                          "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                          {
                            fileName: 'openfl/text/_internal/TextEngine.hx',
                            lineNumber: 1121,
                            className: 'openfl.text._internal.TextEngine',
                            methodName: 'getLayoutGroups',
                          },
                        );
                        break;
                      }
                      g = d;
                      d = f < c.end ? f : c.end;
                      ++k;
                    } else {
                      y = I(G);
                      break;
                    }
                  b -= k + 1;
                  F();
                }
              },
              db = function (b) {
                if (b <= c.end) {
                  G = Ta(a.text, wa, b);
                  y = I(G);
                  qa(wa, b);
                  m.positions = G;
                  var d = D,
                    f = ab();
                  m.offsetX = d + f;
                  m.ascent = k;
                  m.descent = h;
                  m.leading = g;
                  m.lineIndex = P;
                  m.offsetY = J + 2;
                  m.width = y;
                  m.height = A;
                  D += y;
                  b == c.end && ((m = null), F(), oa());
                } else
                  for (;;) {
                    var l = b < c.end ? b : c.end;
                    wa != l &&
                      ((G = Ta(a.text, wa, l)),
                      (y = I(G)),
                      qa(wa, l),
                      (m.positions = G),
                      (d = D),
                      (f = ab()),
                      (m.offsetX = d + f),
                      (m.ascent = k),
                      (m.descent = h),
                      (m.leading = g),
                      (m.lineIndex = P),
                      (m.offsetY = J + 2),
                      (m.width = y),
                      (m.height = A),
                      (D += y),
                      (wa = l));
                    l == c.end && (m = null);
                    if (l == b) break;
                    if (!F()) {
                      La.warn(
                        "You found a bug in OpenFL's text code! Please save a copy of your project and create an issue on GitHub so we can fix this.",
                        {
                          fileName: 'openfl/text/_internal/TextEngine.hx',
                          lineNumber: 1209,
                          className: 'openfl.text._internal.TextEngine',
                          methodName: 'getLayoutGroups',
                        },
                      );
                      break;
                    }
                    oa();
                  }
                wa = b;
              },
              K = function () {
                oa();
                for (var b = a.layoutGroups.get_length(); -1 < --b; ) {
                  var c = a.layoutGroups.get(b);
                  if (c.lineIndex < P) break;
                  c.lineIndex > P || ((c.ascent = l), (c.height = B));
                }
                J += B;
                B = l = 0;
                P += 1;
                D = 0;
                x = !1;
              },
              H = function (b) {
                if (4 <= a.width && a.wordWrap) {
                  var c = G;
                  var d = I(c);
                  for (var f = c.length - 1; 0 <= f; ) {
                    var g = R.cca(a.text, wa + f);
                    if (32 != g && 9 != g) break;
                    d -= c[f];
                    --f;
                  }
                  for (; 0 < c.length && D + d > M(); ) {
                    for (g = f = d = 0; D + g < M(); ) {
                      var k = c[f];
                      0 == k ? (++f, ++d) : ((g += k), ++f);
                    }
                    if (f == d) f = d + 1;
                    else
                      for (; 1 < f && D + g > M(); )
                        (--f,
                          0 < f - d
                            ? (Ya(wa, wa + f - d), (g = y))
                            : ((f = 1), (d = 0), Ya(wa, wa + 1), (g = 0)));
                    c = wa + f - d;
                    db(c);
                    K();
                    Ya(c, b);
                    c = G;
                    d = y;
                  }
                }
                db(b);
              };
            F();
            ia();
            oa();
            for (var V, Gb = this.text.length + 1; wa < Gb; )
              if (-1 < E && (-1 == u || E < u))
                (wa <= E
                  ? (Ya(wa, E), H(E), (m = null))
                  : null != m &&
                    m.startIndex != m.endIndex &&
                    (m.endIndex == u &&
                      (m.width -= m.positions[m.positions.length - 1]),
                    (m = null)),
                  K(),
                  c.end == E && (F(), oa()),
                  (wa = E + 1),
                  (L = E),
                  ++v,
                  (E =
                    v < this.lineBreaks.get_length()
                      ? this.lineBreaks.get(v)
                      : -1),
                  ia());
              else if (-1 < u)
                for (
                  null != m && m.startIndex != m.endIndex && (m = null), V = !1;
                  wa < this.text.length;

                ) {
                  var Q = -1;
                  -1 == u ? (Q = E) : ((Q = u + 1), -1 < E && E < Q && (Q = E));
                  -1 == Q && (Q = this.text.length);
                  Ya(wa, Q);
                  if (2 == t) {
                    if (0 < G.length && wa == N) {
                      wa += 1;
                      var S = G.shift();
                      y -= S;
                      D += S;
                    }
                    0 < G.length &&
                      Q == u + 1 &&
                      (--Q, (S = G.pop()), (y -= S));
                  }
                  this.wordWrap &&
                    D + y > M() &&
                    ((V = !0),
                    0 < G.length &&
                      Q == u + 1 &&
                      D + y - G[G.length - 1] <= M() &&
                      (V = !1));
                  if (V) {
                    2 != t &&
                      (null != m || 0 < this.layoutGroups.get_length()) &&
                      ((V = m),
                      null == V &&
                        (V = this.layoutGroups.get(
                          this.layoutGroups.get_length() - 1,
                        )),
                      (V.width -= V.positions[V.positions.length - 1]),
                      V.endIndex--);
                    V = this.layoutGroups.get_length() - 1;
                    for (S = 0; 0 <= V; ) {
                      m = this.layoutGroups.get(V);
                      if (0 < V && m.startIndex > N) ++S;
                      else break;
                      --V;
                    }
                    wa == N + 1 && K();
                    D = 0;
                    if (0 < S) {
                      V = this.layoutGroups.get(
                        this.layoutGroups.get_length() - S,
                      ).offsetX;
                      S = this.layoutGroups.get_length() - S;
                      for (var hb = this.layoutGroups.get_length(); S < hb; ) {
                        var ha = S++;
                        m = this.layoutGroups.get(ha);
                        m.offsetX -= V;
                        m.offsetY = J + 2;
                        m.lineIndex = P;
                        D += m.width;
                      }
                    }
                    H(Q);
                    V = !1;
                  } else
                    null != m && wa == u && N != u - 1
                      ? (2 != t &&
                          ((m.endIndex = u),
                          (m.positions = m.positions.concat(G)),
                          (m.width += y)),
                        (D += y),
                        (wa = Q))
                      : null == m || 2 == t
                        ? (H(Q), Q == this.text.length && K())
                        : ((S = Q < c.end ? Q : c.end),
                          S < Q && ((G = Ta(this.text, wa, S)), (y = I(G))),
                          (m.endIndex = S),
                          (m.positions = m.positions.concat(G)),
                          (m.width += y),
                          (D += y),
                          S == c.end &&
                            ((m = null), F(), oa(), (wa = S), S != Q && db(Q)),
                          E == Q && ++Q,
                          (wa = Q),
                          Q == this.text.length &&
                            (K(),
                            -1 != E &&
                              ((L = E),
                              ++v,
                              (E =
                                v < this.lineBreaks.get_length()
                                  ? this.lineBreaks.get(v)
                                  : -1))));
                  Q = this.text.indexOf(' ', wa);
                  E == N &&
                    ((m.endIndex = E),
                    0 > E - m.startIndex - m.positions.length &&
                      m.positions.push(0),
                    (wa = E + 1));
                  N = u;
                  u = Q;
                  if (
                    (-1 < E && E <= wa && (u > E || -1 == u)) ||
                    wa > this.text.length
                  )
                    break;
                }
              else
                (wa < this.text.length &&
                  (Ya(wa, this.text.length), H(this.text.length), K()),
                  (wa += 1));
            L == wa - 2 &&
              -1 < L &&
              (qa(wa - 1, wa - 1),
              (m.positions = []),
              (m.ascent = k),
              (m.descent = h),
              (m.leading = g),
              (m.lineIndex = P),
              (m.offsetX = ab()),
              (m.offsetY = J + 2),
              (m.width = 0),
              (m.height = A));
          }
        },
        measureText: function (a) {
          return Eb.__context.measureText(a).width;
        },
        restrictText: function (a) {
          if (null == a) return a;
          null != this.__restrictRegexp &&
            (a = this.__restrictRegexp.split(a).join(''));
          return a;
        },
        setTextAlignment: function () {
          for (
            var a = -1,
              b = 0,
              c,
              d,
              f = !1,
              g = 0,
              k = this.layoutGroups.get_length();
            g < k;

          ) {
            var l = g++;
            c = this.layoutGroups.get(l);
            if (c.lineIndex != a)
              switch (
                ((a = c.lineIndex),
                (b = this.width - 4 - c.format.rightMargin),
                c.format.align)
              ) {
                case 0:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round((b - this.lineWidths.get(a)) / 2)
                      : 0;
                  break;
                case 2:
                  if (this.lineWidths.get(a) < b) {
                    d = 1;
                    for (
                      var h = l + 1, t = this.layoutGroups.get_length();
                      h < t;

                    ) {
                      var w = h++;
                      if (this.layoutGroups.get(w).lineIndex == a)
                        (0 != w &&
                          32 !=
                            R.cca(
                              this.text,
                              this.layoutGroups.get(w).startIndex - 1,
                            )) ||
                          ++d;
                      else break;
                    }
                    if (
                      1 < d &&
                      ((c = this.layoutGroups.get(l + d - 1)),
                      (h = R.cca(this.text, c.endIndex)),
                      c.endIndex < this.text.length && 10 != h && 13 != h)
                    ) {
                      b = (b - this.lineWidths.get(a)) / (d - 1);
                      f = !0;
                      h = 1;
                      do this.layoutGroups.get(l + h).offsetX += b * h;
                      while (++h < d);
                    }
                  }
                  b = 0;
                  break;
                case 4:
                  b =
                    this.lineWidths.get(a) < b
                      ? Math.round(b - this.lineWidths.get(a))
                      : 0;
                  break;
                default:
                  b = 0;
              }
            0 < b && (c.offsetX += b);
          }
          f && this.getLineMeasurements();
        },
        update: function () {
          null == this.text || 0 == this.textFormatRanges.get_length()
            ? (this.lineAscents.set_length(0),
              this.lineBreaks.set_length(0),
              this.lineDescents.set_length(0),
              this.lineLeadings.set_length(0),
              this.lineHeights.set_length(0),
              this.lineWidths.set_length(0),
              this.layoutGroups.set_length(0),
              (this.textHeight = this.textWidth = 0),
              (this.numLines = 1),
              (this.maxScrollH = 0),
              (this.bottomScrollV = this.maxScrollV = 1))
            : (this.getLineBreaks(),
              this.getLayoutGroups(),
              this.getLineMeasurements(),
              this.setTextAlignment());
          this.getBounds();
        },
        get_bottomScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (
            var a = this.lineHeights.get_length(),
              b =
                this.lineLeadings.get_length() == a
                  ? -this.lineLeadings.get(a - 1)
                  : 0,
              c = (0 < this.get_scrollV() ? this.get_scrollV() : 1) - 1,
              d = this.lineHeights.get_length();
            c < d;

          ) {
            var f = c++,
              g = this.lineHeights.get(f);
            b += g;
            if (b > this.height - 4) {
              a = f + (0 <= b - this.height ? 0 : 1);
              break;
            }
          }
          return a < this.get_scrollV() ? this.get_scrollV() : a;
        },
        get_maxScrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (var a = this.numLines - 1, b = 0; 0 <= a; ) {
            b += this.lineHeights.get(a);
            if (b > this.height - 4) {
              a += 0 > b - this.height ? 1 : 2;
              break;
            }
            --a;
          }
          return 1 > a ? 1 : a;
        },
        set_restrict: function (a) {
          if (this.restrict == a) return this.restrict;
          this.restrict = a;
          this.__restrictRegexp =
            null == this.restrict || 0 == this.restrict.length
              ? null
              : this.createRestrictRegexp(a);
          return this.restrict;
        },
        get_scrollV: function () {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.get_maxScrollV();
          return this.scrollV > a ? a : this.scrollV;
        },
        set_scrollV: function (a) {
          1 > a
            ? (a = 1)
            : a > this.get_maxScrollV() && (a = this.get_maxScrollV());
          return (this.scrollV = a);
        },
        set_text: function (a) {
          return (this.text = a);
        },
        __class__: Eb,
        __properties__: {
          set_text: 'set_text',
          set_scrollV: 'set_scrollV',
          get_scrollV: 'get_scrollV',
          set_restrict: 'set_restrict',
          get_maxScrollV: 'get_maxScrollV',
          get_bottomScrollV: 'get_bottomScrollV',
        },
      };
      var vd = function (a, b, c) {
        this.format = a;
        this.start = b;
        this.end = c;
      };
      h['openfl.text._internal.TextFormatRange'] = vd;
      vd.__name__ = 'openfl.text._internal.TextFormatRange';
      vd.prototype = { __class__: vd };
      var Rj = function (a, b, c) {
        this.format = a;
        this.startIndex = b;
        this.endIndex = c;
      };
      h['openfl.text._internal.TextLayoutGroup'] = Rj;
      Rj.__name__ = 'openfl.text._internal.TextLayoutGroup';
      Rj.prototype = { __class__: Rj };
      var Va = function () {
        sa.call(this);
        Va.__instances.push(this);
      };
      h['openfl.ui.GameInput'] = Va;
      Va.__name__ = 'openfl.ui.GameInput';
      Va.__getDevice = function (a) {
        if (null == a) return null;
        if (null == Va.__devices.h.__keys__[a.__id__]) {
          var b = pc.__getDeviceData(),
            c = b[a.id].id;
          b = pc.__getDeviceData();
          b = new fl(c, b[a.id].id);
          Va.__deviceList.push(b);
          Va.__devices.set(a, b);
          Va.numDevices = Va.__deviceList.length;
        }
        return Va.__devices.h[a.__id__];
      };
      Va.__onGamepadAxisMove = function (a, b, c) {
        a = Va.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__axis.h.hasOwnProperty(b)) {
            if (null == b) var d = 'null';
            else
              switch (b) {
                case 0:
                  d = 'LEFT_X';
                  break;
                case 1:
                  d = 'LEFT_Y';
                  break;
                case 2:
                  d = 'RIGHT_X';
                  break;
                case 3:
                  d = 'RIGHT_Y';
                  break;
                case 4:
                  d = 'TRIGGER_LEFT';
                  break;
                case 5:
                  d = 'TRIGGER_RIGHT';
                  break;
                default:
                  d = 'UNKNOWN (' + b + ')';
              }
            d = new Xd(a, 'AXIS_' + d, -1, 1);
            a.__axis.h[b] = d;
            a.__controls.push(d);
          }
          d = a.__axis.h[b];
          d.value = c;
          d.dispatchEvent(new za('change'));
        }
      };
      Va.__onGamepadButtonDown = function (a, b) {
        a = Va.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = 'null';
            else
              switch (b) {
                case 0:
                  c = 'A';
                  break;
                case 1:
                  c = 'B';
                  break;
                case 2:
                  c = 'X';
                  break;
                case 3:
                  c = 'Y';
                  break;
                case 4:
                  c = 'BACK';
                  break;
                case 5:
                  c = 'GUIDE';
                  break;
                case 6:
                  c = 'START';
                  break;
                case 7:
                  c = 'LEFT_STICK';
                  break;
                case 8:
                  c = 'RIGHT_STICK';
                  break;
                case 9:
                  c = 'LEFT_SHOULDER';
                  break;
                case 10:
                  c = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  c = 'DPAD_UP';
                  break;
                case 12:
                  c = 'DPAD_DOWN';
                  break;
                case 13:
                  c = 'DPAD_LEFT';
                  break;
                case 14:
                  c = 'DPAD_RIGHT';
                  break;
                default:
                  c = 'UNKNOWN (' + b + ')';
              }
            c = new Xd(a, 'BUTTON_' + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 1;
          c.dispatchEvent(new za('change'));
        }
      };
      Va.__onGamepadButtonUp = function (a, b) {
        a = Va.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = 'null';
            else
              switch (b) {
                case 0:
                  c = 'A';
                  break;
                case 1:
                  c = 'B';
                  break;
                case 2:
                  c = 'X';
                  break;
                case 3:
                  c = 'Y';
                  break;
                case 4:
                  c = 'BACK';
                  break;
                case 5:
                  c = 'GUIDE';
                  break;
                case 6:
                  c = 'START';
                  break;
                case 7:
                  c = 'LEFT_STICK';
                  break;
                case 8:
                  c = 'RIGHT_STICK';
                  break;
                case 9:
                  c = 'LEFT_SHOULDER';
                  break;
                case 10:
                  c = 'RIGHT_SHOULDER';
                  break;
                case 11:
                  c = 'DPAD_UP';
                  break;
                case 12:
                  c = 'DPAD_DOWN';
                  break;
                case 13:
                  c = 'DPAD_LEFT';
                  break;
                case 14:
                  c = 'DPAD_RIGHT';
                  break;
                default:
                  c = 'UNKNOWN (' + b + ')';
              }
            c = new Xd(a, 'BUTTON_' + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c);
          }
          c = a.__button.h[b];
          c.value = 0;
          c.dispatchEvent(new za('change'));
        }
      };
      Va.__onGamepadConnect = function (a) {
        a = Va.__getDevice(a);
        if (null != a)
          for (var b = 0, c = Va.__instances; b < c.length; ) {
            var d = c[b];
            ++b;
            d.dispatchEvent(new Ug('deviceAdded', !0, !1, a));
          }
      };
      Va.__onGamepadDisconnect = function (a) {
        var b = Va.__devices.h[a.__id__];
        if (null != b) {
          null != Va.__devices.h.__keys__[a.__id__] &&
            (R.remove(Va.__deviceList, Va.__devices.h[a.__id__]),
            Va.__devices.remove(a));
          Va.numDevices = Va.__deviceList.length;
          a = 0;
          for (var c = Va.__instances; a < c.length; ) {
            var d = c[a];
            ++a;
            d.dispatchEvent(new Ug('deviceRemoved', !0, !1, b));
          }
        }
      };
      Va.__super__ = sa;
      Va.prototype = u(sa.prototype, {
        addEventListener: function (a, b, c, d, f) {
          null == f && (f = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          sa.prototype.addEventListener.call(this, a, b, c, d, f);
          if ('deviceAdded' == a)
            for (a = 0, b = Va.__deviceList; a < b.length; )
              ((c = b[a]),
                ++a,
                this.dispatchEvent(new Ug('deviceAdded', !0, !1, c)));
        },
        __class__: Va,
      });
      var Xd = function (a, b, c, d, f) {
        null == f && (f = 0);
        sa.call(this);
        this.device = a;
        this.id = b;
        this.minValue = c;
        this.maxValue = d;
        this.value = f;
      };
      h['openfl.ui.GameInputControl'] = Xd;
      Xd.__name__ = 'openfl.ui.GameInputControl';
      Xd.__super__ = sa;
      Xd.prototype = u(sa.prototype, { __class__: Xd });
      var fl = function (a, b) {
        this.__controls = [];
        this.__button = new tc();
        this.__axis = new tc();
        this.id = a;
        this.name = b;
        a = new Xd(this, 'AXIS_0', -1, 1);
        this.__axis.h[0] = a;
        this.__controls.push(a);
        a = new Xd(this, 'AXIS_1', -1, 1);
        this.__axis.h[1] = a;
        this.__controls.push(a);
        a = new Xd(this, 'AXIS_2', -1, 1);
        this.__axis.h[2] = a;
        this.__controls.push(a);
        a = new Xd(this, 'AXIS_3', -1, 1);
        this.__axis.h[3] = a;
        this.__controls.push(a);
        a = new Xd(this, 'AXIS_4', -1, 1);
        this.__axis.h[4] = a;
        this.__controls.push(a);
        a = new Xd(this, 'AXIS_5', -1, 1);
        this.__axis.h[5] = a;
        this.__controls.push(a);
        for (b = 0; 15 > b; ) {
          var c = b++;
          a = new Xd(this, 'BUTTON_' + c, 0, 1);
          this.__button.h[c] = a;
          this.__controls.push(a);
        }
      };
      h['openfl.ui.GameInputDevice'] = fl;
      fl.__name__ = 'openfl.ui.GameInputDevice';
      fl.prototype = { __class__: fl };
      var vl = function () {};
      h['openfl.ui.Keyboard'] = vl;
      vl.__name__ = 'openfl.ui.Keyboard';
      vl.__getCharCode = function (a, b) {
        null == b && (b = !1);
        if (b) {
          switch (a) {
            case 48:
              return 41;
            case 49:
              return 33;
            case 50:
              return 64;
            case 51:
              return 35;
            case 52:
              return 36;
            case 53:
              return 37;
            case 54:
              return 94;
            case 55:
              return 38;
            case 56:
              return 42;
            case 57:
              return 40;
            case 186:
              return 58;
            case 187:
              return 43;
            case 188:
              return 60;
            case 189:
              return 95;
            case 190:
              return 62;
            case 191:
              return 63;
            case 192:
              return 126;
            case 219:
              return 123;
            case 220:
              return 124;
            case 221:
              return 125;
            case 222:
              return 34;
          }
          if (65 <= a && 90 >= a) return a - 65 + 65;
        } else {
          switch (a) {
            case 8:
              return 8;
            case 9:
              return 9;
            case 13:
              return 13;
            case 27:
              return 27;
            case 32:
              return 32;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
          }
          if (48 <= a && 57 >= a) return a - 48 + 48;
          if (65 <= a && 90 >= a) return a - 65 + 97;
        }
        if (96 <= a && 105 >= a) return a - 96 + 48;
        switch (a) {
          case 8:
            return 8;
          case 13:
            return 13;
          case 46:
            return 127;
          case 106:
            return 42;
          case 107:
            return 43;
          case 108:
            return 44;
          case 110:
            return 45;
          case 111:
            return 46;
        }
        return 0;
      };
      var Rk = function () {};
      h['openfl.ui.Mouse'] = Rk;
      Rk.__name__ = 'openfl.ui.Mouse';
      var Tl = {
          toLimeCursor: function (a) {
            switch (a) {
              case 'arrow':
                return tb.ARROW;
              case 'auto':
                return tb.DEFAULT;
              case 'button':
                return tb.POINTER;
              case 'crosshair':
                return tb.CROSSHAIR;
              case 'custom':
                return tb.CUSTOM;
              case 'hand':
                return tb.MOVE;
              case 'ibeam':
                return tb.TEXT;
              case 'resize_nesw':
                return tb.RESIZE_NESW;
              case 'resize_ns':
                return tb.RESIZE_NS;
              case 'resize_nwse':
                return tb.RESIZE_NWSE;
              case 'resize_we':
                return tb.RESIZE_WE;
              case 'wait':
                return tb.WAIT;
              case 'waitarrow':
                return tb.WAIT_ARROW;
              default:
                return tb.DEFAULT;
            }
          },
        },
        ma = function (a) {
          null == a && (a = !1);
          this.debugEnabled = a;
          ma.initialized || ma.init();
        };
      h['openfl.utils.AGALMiniAssembler'] = ma;
      ma.__name__ = 'openfl.utils.AGALMiniAssembler';
      ma.init = function () {
        ma.initialized = !0;
        var a = ma.OPMAP,
          b = new pb('mov', 2, 0, 0);
        a.h.mov = b;
        a = ma.OPMAP;
        b = new pb('add', 3, 1, 0);
        a.h.add = b;
        a = ma.OPMAP;
        b = new pb('sub', 3, 2, 0);
        a.h.sub = b;
        a = ma.OPMAP;
        b = new pb('mul', 3, 3, 0);
        a.h.mul = b;
        a = ma.OPMAP;
        b = new pb('div', 3, 4, 0);
        a.h.div = b;
        a = ma.OPMAP;
        b = new pb('rcp', 2, 5, 0);
        a.h.rcp = b;
        a = ma.OPMAP;
        b = new pb('min', 3, 6, 0);
        a.h.min = b;
        a = ma.OPMAP;
        b = new pb('max', 3, 7, 0);
        a.h.max = b;
        a = ma.OPMAP;
        b = new pb('frc', 2, 8, 0);
        a.h.frc = b;
        a = ma.OPMAP;
        b = new pb('sqt', 2, 9, 0);
        a.h.sqt = b;
        a = ma.OPMAP;
        b = new pb('rsq', 2, 10, 0);
        a.h.rsq = b;
        a = ma.OPMAP;
        b = new pb('pow', 3, 11, 0);
        a.h.pow = b;
        a = ma.OPMAP;
        b = new pb('log', 2, 12, 0);
        a.h.log = b;
        a = ma.OPMAP;
        b = new pb('exp', 2, 13, 0);
        a.h.exp = b;
        a = ma.OPMAP;
        b = new pb('nrm', 2, 14, 0);
        a.h.nrm = b;
        a = ma.OPMAP;
        b = new pb('sin', 2, 15, 0);
        a.h.sin = b;
        a = ma.OPMAP;
        b = new pb('cos', 2, 16, 0);
        a.h.cos = b;
        a = ma.OPMAP;
        b = new pb('crs', 3, 17, 0);
        a.h.crs = b;
        a = ma.OPMAP;
        b = new pb('dp3', 3, 18, 0);
        a.h.dp3 = b;
        a = ma.OPMAP;
        b = new pb('dp4', 3, 19, 0);
        a.h.dp4 = b;
        a = ma.OPMAP;
        b = new pb('abs', 2, 20, 0);
        a.h.abs = b;
        a = ma.OPMAP;
        b = new pb('neg', 2, 21, 0);
        a.h.neg = b;
        a = ma.OPMAP;
        b = new pb('sat', 2, 22, 0);
        a.h.sat = b;
        a = ma.OPMAP;
        b = new pb('m33', 3, 23, 16);
        a.h.m33 = b;
        a = ma.OPMAP;
        b = new pb('m44', 3, 24, 16);
        a.h.m44 = b;
        a = ma.OPMAP;
        b = new pb('m34', 3, 25, 16);
        a.h.m34 = b;
        a = ma.OPMAP;
        b = new pb('ddx', 2, 26, 288);
        a.h.ddx = b;
        a = ma.OPMAP;
        b = new pb('ddy', 2, 27, 288);
        a.h.ddy = b;
        a = ma.OPMAP;
        b = new pb('ife', 2, 28, 897);
        a.h.ife = b;
        a = ma.OPMAP;
        b = new pb('ine', 2, 29, 897);
        a.h.ine = b;
        a = ma.OPMAP;
        b = new pb('ifg', 2, 30, 897);
        a.h.ifg = b;
        a = ma.OPMAP;
        b = new pb('ifl', 2, 31, 897);
        a.h.ifl = b;
        a = ma.OPMAP;
        b = new pb('els', 0, 32, 1921);
        a.h.els = b;
        a = ma.OPMAP;
        b = new pb('eif', 0, 33, 1409);
        a.h.eif = b;
        a = ma.OPMAP;
        b = new pb('kil', 1, 39, 160);
        a.h.kil = b;
        a = ma.OPMAP;
        b = new pb('tex', 3, 40, 40);
        a.h.tex = b;
        a = ma.OPMAP;
        b = new pb('sge', 3, 41, 0);
        a.h.sge = b;
        a = ma.OPMAP;
        b = new pb('slt', 3, 42, 0);
        a.h.slt = b;
        a = ma.OPMAP;
        b = new pb('sgn', 2, 43, 0);
        a.h.sgn = b;
        a = ma.OPMAP;
        b = new pb('seq', 3, 44, 0);
        a.h.seq = b;
        a = ma.OPMAP;
        b = new pb('sne', 3, 45, 0);
        a.h.sne = b;
        a = ma.SAMPLEMAP;
        b = new Yb('rgba', 8, 0);
        a.h.rgba = b;
        a = ma.SAMPLEMAP;
        b = new Yb('compressed', 8, 1);
        a.h.compressed = b;
        a = ma.SAMPLEMAP;
        b = new Yb('compressedalpha', 8, 2);
        a.h.compressedalpha = b;
        a = ma.SAMPLEMAP;
        b = new Yb('dxt1', 8, 1);
        a.h.dxt1 = b;
        a = ma.SAMPLEMAP;
        b = new Yb('dxt5', 8, 2);
        a.h.dxt5 = b;
        a = ma.SAMPLEMAP;
        b = new Yb('video', 8, 3);
        a.h.video = b;
        a = ma.SAMPLEMAP;
        b = new Yb('2d', 12, 0);
        a.h['2d'] = b;
        a = ma.SAMPLEMAP;
        b = new Yb('3d', 12, 2);
        a.h['3d'] = b;
        a = ma.SAMPLEMAP;
        b = new Yb('cube', 12, 1);
        a.h.cube = b;
        a = ma.SAMPLEMAP;
        b = new Yb('mipnearest', 24, 1);
        a.h.mipnearest = b;
        a = ma.SAMPLEMAP;
        b = new Yb('miplinear', 24, 2);
        a.h.miplinear = b;
        a = ma.SAMPLEMAP;
        b = new Yb('mipnone', 24, 0);
        a.h.mipnone = b;
        a = ma.SAMPLEMAP;
        b = new Yb('nomip', 24, 0);
        a.h.nomip = b;
        a = ma.SAMPLEMAP;
        b = new Yb('nearest', 28, 0);
        a.h.nearest = b;
        a = ma.SAMPLEMAP;
        b = new Yb('linear', 28, 1);
        a.h.linear = b;
        a = ma.SAMPLEMAP;
        b = new Yb('anisotropic2x', 28, 2);
        a.h.anisotropic2x = b;
        a = ma.SAMPLEMAP;
        b = new Yb('anisotropic4x', 28, 3);
        a.h.anisotropic4x = b;
        a = ma.SAMPLEMAP;
        b = new Yb('anisotropic8x', 28, 4);
        a.h.anisotropic8x = b;
        a = ma.SAMPLEMAP;
        b = new Yb('anisotropic16x', 28, 5);
        a.h.anisotropic16x = b;
        a = ma.SAMPLEMAP;
        b = new Yb('centroid', 16, 1);
        a.h.centroid = b;
        a = ma.SAMPLEMAP;
        b = new Yb('single', 16, 2);
        a.h.single = b;
        a = ma.SAMPLEMAP;
        b = new Yb('ignoresampler', 16, 4);
        a.h.ignoresampler = b;
        a = ma.SAMPLEMAP;
        b = new Yb('repeat', 20, 1);
        a.h.repeat = b;
        a = ma.SAMPLEMAP;
        b = new Yb('wrap', 20, 1);
        a.h.wrap = b;
        a = ma.SAMPLEMAP;
        b = new Yb('clamp', 20, 0);
        a.h.clamp = b;
        a = ma.SAMPLEMAP;
        b = new Yb('clamp_u_repeat_v', 20, 2);
        a.h.clamp_u_repeat_v = b;
        a = ma.SAMPLEMAP;
        b = new Yb('repeat_u_clamp_v', 20, 3);
        a.h.repeat_u_clamp_v = b;
      };
      ma.prototype = {
        assemble: function (a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = 1);
          var f = Ra.getTimer();
          this.agalcode = new Zc(0);
          this.error = '';
          var g = !1;
          'fragment' == a
            ? (g = !0)
            : 'vertex' != a &&
              (this.error =
                'ERROR: mode needs to be "fragment" or "vertex" but is "' +
                a +
                '".');
          this.agalcode.__endian = 1;
          this.agalcode.writeByte(160);
          this.agalcode.writeUnsignedInt(c);
          this.agalcode.writeByte(161);
          this.agalcode.writeByte(g ? 1 : 0);
          this.initregmap(c, d);
          a = P.replace(b, '\r', '\n').split('\n');
          b = 0;
          d = a.length;
          for (
            var k = new Ba('<.*>', 'g'),
              l = new Ba('([\\w\\.\\-\\+]+)', 'gi'),
              h = new Ba('^\\w{3}', 'ig'),
              t = new Ba(
                'vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?',
                'gi',
              ),
              w = new Ba('\\[.*\\]', 'ig'),
              n = new Ba('^\\b[A-Za-z]{1,3}', 'ig'),
              r = new Ba('\\d+', ''),
              m = new Ba('(\\.[xyzw]{1,4})', ''),
              C = new Ba('[A-Za-z]{1,3}', 'ig'),
              x = new Ba('(\\.[xyzw]{1,1})', ''),
              G = new Ba('\\+\\d{1,3}', 'ig'),
              y = 0;
            y < d && '' == this.error;

          ) {
            var A = P.trim(a[y]),
              B = A.indexOf('//');
            -1 != B && (A = R.substr(A, 0, B));
            var N = k.match(A) ? k.matchedPos().pos : -1;
            B = null;
            -1 != N &&
              ((B = this.match(R.substr(A, N, null), l)),
              (A = R.substr(A, 0, N)));
            var L = null;
            h.match(A) && ((N = h.matched(0)), (L = ma.OPMAP.h[N]));
            if (null == L)
              3 <= A.length &&
                La.warn('warning: bad line ' + y + ': ' + a[y], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 262,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else if (
              (this.debugEnabled &&
                La.info(L, {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 272,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                }),
              null == L)
            )
              3 <= A.length &&
                La.warn('warning: bad line ' + y + ': ' + a[y], {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 279,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
            else {
              A = R.substr(A, A.indexOf(L.name) + L.name.length, null);
              if (0 != (L.flags & 256) && 2 > c) {
                this.error = 'error: opcode requires version 2.';
                break;
              }
              if (0 != (L.flags & 64) && g) {
                this.error =
                  'error: opcode is only allowed in vertex programs.';
                break;
              }
              if (0 != (L.flags & 32) && !g) {
                this.error =
                  'error: opcode is only allowed in fragment programs.';
                break;
              }
              this.verbose &&
                La.info('emit opcode=' + I.string(L), {
                  fileName: 'openfl/utils/AGALMiniAssembler.hx',
                  lineNumber: 308,
                  className: 'openfl.utils.AGALMiniAssembler',
                  methodName: 'assemble',
                });
              this.agalcode.writeUnsignedInt(L.emitCode);
              ++b;
              if (4096 < b) {
                this.error = 'error: too many opcodes. maximum is 4096.';
                break;
              }
              var u = this.match(A, t);
              if (u.length != L.numRegister) {
                this.error =
                  'error: wrong number of operands. found ' +
                  u.length +
                  ' but expected ' +
                  L.numRegister +
                  '.';
                break;
              }
              var E = !1,
                v = 160;
              A = 0;
              for (N = u.length; A < N; ) {
                var D = A++,
                  wa = !1,
                  J = this.match(u[D], w);
                0 < J.length &&
                  ((u[D] = P.replace(u[D], J[0], '0')),
                  this.verbose &&
                    La.info('IS REL', {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 344,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    }),
                  (wa = !0));
                var Ta = this.match(u[D], n);
                if (0 == Ta.length) {
                  this.error =
                    'error: could not parse operand ' + D + ' (' + u[D] + ').';
                  E = !0;
                  break;
                }
                var ab = ma.REGMAP.h[Ta[0]];
                this.debugEnabled &&
                  La.info(ab, {
                    fileName: 'openfl/utils/AGALMiniAssembler.hx',
                    lineNumber: 363,
                    className: 'openfl.utils.AGALMiniAssembler',
                    methodName: 'assemble',
                  });
                if (null == ab) {
                  this.error =
                    'error: could not find register name for operand ' +
                    D +
                    ' (' +
                    u[D] +
                    ').';
                  E = !0;
                  break;
                }
                if (g) {
                  if (0 == (ab.flags & 32)) {
                    this.error =
                      'error: register operand ' +
                      D +
                      ' (' +
                      u[D] +
                      ') only allowed in vertex programs.';
                    E = !0;
                    break;
                  }
                  if (wa) {
                    this.error =
                      'error: register operand ' +
                      D +
                      ' (' +
                      u[D] +
                      ') relative adressing not allowed in fragment programs.';
                    E = !0;
                    break;
                  }
                } else if (0 == (ab.flags & 64)) {
                  this.error =
                    'error: register operand ' +
                    D +
                    ' (' +
                    u[D] +
                    ') only allowed in fragment programs.';
                  E = !0;
                  break;
                }
                u[D] = R.substr(
                  u[D],
                  u[D].indexOf(ab.name) + ab.name.length,
                  null,
                );
                var M = wa ? this.match(J[0], r) : this.match(u[D], r);
                Ta = 0;
                0 < M.length && (Ta = I.parseInt(M[0]));
                if (db.gt(Ta, ab.range)) {
                  A = ab.range + 1;
                  this.error =
                    'error: register operand ' +
                    D +
                    ' (' +
                    u[D] +
                    ') index exceeds limit of ' +
                    (null == A ? 'null' : I.string(db.toFloat(A))) +
                    '.';
                  E = !0;
                  break;
                }
                var qa = this.match(u[D], m),
                  z = 0 == D && 0 == (L.flags & 128),
                  oa = 2 == D && 0 != (L.flags & 8),
                  F = 0,
                  ia = 0,
                  Ya = 0;
                if (z && wa) {
                  this.error = 'error: relative can not be destination';
                  E = !0;
                  break;
                }
                if (0 < qa.length) {
                  for (var V = (M = 0), Q = qa[0].length, K = 1; K < Q; )
                    ((V = R.cca(qa[0], K) - 120),
                      db.gt(V, 2) && (V = 3),
                      (M = z ? M | (1 << V) : M | (V << ((K - 1) << 1))),
                      ++K);
                  if (!z) for (; 4 >= K; ) ((M |= V << ((K - 1) << 1)), ++K);
                } else M = z ? 15 : 228;
                if (wa) {
                  qa = this.match(J[0], C);
                  F = ma.REGMAP.h[qa[0]];
                  if (null == F) {
                    this.error = 'error: bad index register';
                    E = !0;
                    break;
                  }
                  F = F.emitCode;
                  V = this.match(J[0], x);
                  if (0 == V.length) {
                    this.error = 'error: bad index register select';
                    E = !0;
                    break;
                  }
                  ia = R.cca(V[0], 1) - 120;
                  db.gt(ia, 2) && (ia = 3);
                  J = this.match(J[0], G);
                  0 < J.length && (Ya = I.parseInt(J[0]));
                  if (0 > Ya || 255 < Ya) {
                    this.error =
                      'error: index offset ' + Ya + ' out of bounds. [0..255]';
                    E = !0;
                    break;
                  }
                  this.verbose &&
                    La.info(
                      'RELATIVE: type=' +
                        F +
                        '==' +
                        qa[0] +
                        ' sel=' +
                        (null == ia ? 'null' : I.string(db.toFloat(ia))) +
                        '==' +
                        V[0] +
                        ' idx=' +
                        (null == Ta ? 'null' : I.string(db.toFloat(Ta))) +
                        ' offset=' +
                        Ya,
                      {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 518,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      },
                    );
                }
                this.verbose &&
                  La.info(
                    '  emit argcode=' +
                      I.string(ab) +
                      '[' +
                      (null == Ta ? 'null' : I.string(db.toFloat(Ta))) +
                      '][' +
                      M +
                      ']',
                    {
                      fileName: 'openfl/utils/AGALMiniAssembler.hx',
                      lineNumber: 525,
                      className: 'openfl.utils.AGALMiniAssembler',
                      methodName: 'assemble',
                    },
                  );
                if (z)
                  (this.agalcode.writeShort(Ta),
                    this.agalcode.writeByte(M),
                    this.agalcode.writeByte(ab.emitCode),
                    (v -= 32));
                else {
                  if (oa) {
                    this.verbose &&
                      La.info('  emit sampler', {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 541,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                    D = 5;
                    J = wa = 0;
                    for (ab = null == B ? 0 : B.length; J < ab; )
                      ((M = J++),
                        this.verbose &&
                          La.info('    opt: ' + B[M], {
                            fileName: 'openfl/utils/AGALMiniAssembler.hx',
                            lineNumber: 552,
                            className: 'openfl.utils.AGALMiniAssembler',
                            methodName: 'assemble',
                          }),
                        (z = ma.SAMPLEMAP.h[B[M]]),
                        null == z
                          ? ((wa = parseFloat(B[M])),
                            this.verbose &&
                              La.info('    bias: ' + wa, {
                                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                                lineNumber: 565,
                                className: 'openfl.utils.AGALMiniAssembler',
                                methodName: 'assemble',
                              }))
                          : (16 != z.flag && (D &= ~(15 << z.flag)),
                            (D |= z.mask << z.flag)));
                    this.agalcode.writeShort(Ta);
                    this.agalcode.writeByte((8 * wa) | 0);
                    this.agalcode.writeByte(0);
                    this.agalcode.writeUnsignedInt(D);
                    this.verbose &&
                      La.info('    bits: ' + (D - 5), {
                        fileName: 'openfl/utils/AGALMiniAssembler.hx',
                        lineNumber: 586,
                        className: 'openfl.utils.AGALMiniAssembler',
                        methodName: 'assemble',
                      });
                  } else
                    (0 == D && (this.agalcode.writeUnsignedInt(0), (v -= 32)),
                      this.agalcode.writeShort(Ta),
                      this.agalcode.writeByte(Ya),
                      this.agalcode.writeByte(M),
                      this.agalcode.writeByte(ab.emitCode),
                      this.agalcode.writeByte(F),
                      this.agalcode.writeShort(wa ? ia | 32768 : 0));
                  v -= 64;
                }
              }
              for (A = 0; A < v; ) (this.agalcode.writeByte(0), (A += 8));
              if (E) break;
            }
            ++y;
          }
          '' != this.error &&
            ((this.error += '\n  at line ' + y + ' ' + a[y]),
            Nd.set_length(this.agalcode, 0),
            La.info(this.error, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 631,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            }));
          if (this.debugEnabled) {
            c = 'generated bytecode:';
            g = Nd.get_length(this.agalcode);
            A = 0;
            for (N = g; A < N; )
              ((g = A++),
                0 == g % 16 && (c += '\n'),
                0 == g % 4 && (c += ' '),
                (g = P.hex(this.agalcode.b[g], 2)),
                2 > g.length && (g = '0' + g),
                (c += g));
            La.info(c, {
              fileName: 'openfl/utils/AGALMiniAssembler.hx',
              lineNumber: 662,
              className: 'openfl.utils.AGALMiniAssembler',
              methodName: 'assemble',
            });
          }
          this.verbose &&
            La.info(
              'AGALMiniAssembler.assemble time: ' +
                (Ra.getTimer() - f) / 1e3 +
                's',
              {
                fileName: 'openfl/utils/AGALMiniAssembler.hx',
                lineNumber: 667,
                className: 'openfl.utils.AGALMiniAssembler',
                methodName: 'assemble',
              },
            );
          return this.agalcode;
        },
        initregmap: function (a, b) {
          var c = ma.REGMAP,
            d = new Id(
              'va',
              'vertex attribute',
              0,
              b ? 1024 : 1 == a || 2 == a ? 7 : 15,
              66,
            );
          c.h.va = d;
          c = ma.REGMAP;
          d = new Id(
            'vc',
            'vertex constant',
            1,
            b ? 1024 : 1 == a ? 127 : 249,
            66,
          );
          c.h.vc = d;
          c = ma.REGMAP;
          d = new Id(
            'vt',
            'vertex temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            67,
          );
          c.h.vt = d;
          c = ma.REGMAP;
          d = new Id('vo', 'vertex output', 3, b ? 1024 : 0, 65);
          c.h.vo = d;
          c = ma.REGMAP;
          d = new Id('vi', 'varying', 4, b ? 1024 : 1 == a ? 7 : 9, 99);
          c.h.vi = d;
          c = ma.REGMAP;
          d = new Id(
            'fc',
            'fragment constant',
            1,
            b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199,
            34,
          );
          c.h.fc = d;
          c = ma.REGMAP;
          d = new Id(
            'ft',
            'fragment temporary',
            2,
            b ? 1024 : 1 == a ? 7 : 25,
            35,
          );
          c.h.ft = d;
          c = ma.REGMAP;
          d = new Id('fs', 'texture sampler', 5, b ? 1024 : 7, 34);
          c.h.fs = d;
          c = ma.REGMAP;
          d = new Id('fo', 'fragment output', 3, b ? 1024 : 1 == a ? 0 : 3, 33);
          c.h.fo = d;
          c = ma.REGMAP;
          d = new Id(
            'fd',
            'fragment depth output',
            6,
            b ? 1024 : 1 == a ? -1 : 0,
            33,
          );
          c.h.fd = d;
          c = ma.REGMAP;
          d = new Id('iid', 'instance id', 7, b ? 1024 : 0, 66);
          c.h.iid = d;
          d = ma.REGMAP.h.vo;
          ma.REGMAP.h.op = d;
          d = ma.REGMAP.h.vi;
          ma.REGMAP.h.i = d;
          d = ma.REGMAP.h.vi;
          ma.REGMAP.h.v = d;
          d = ma.REGMAP.h.fo;
          ma.REGMAP.h.oc = d;
          d = ma.REGMAP.h.fd;
          ma.REGMAP.h.od = d;
          d = ma.REGMAP.h.vi;
          ma.REGMAP.h.fi = d;
        },
        match: function (a, b) {
          for (var c = [], d = 0; b.matchSub(a, d); )
            ((d = b.matched(0)),
              c.push(d),
              (d = b.matchedPos().pos + d.length));
          return c;
        },
        __class__: ma,
      };
      var pb = function (a, b, c, d) {
        this.name = a;
        this.numRegister = b;
        this.emitCode = c;
        this.flags = d;
      };
      h['openfl.utils._AGALMiniAssembler.OpCode'] = pb;
      pb.__name__ = 'openfl.utils._AGALMiniAssembler.OpCode';
      pb.prototype = {
        toString: function () {
          return (
            '[OpCode name="' +
            this.name +
            '", numRegister=' +
            this.numRegister +
            ', emitCode=' +
            this.emitCode +
            ', flags=' +
            this.flags +
            ']'
          );
        },
        __class__: pb,
      };
      var Id = function (a, b, c, d, f) {
        this.name = a;
        this.longName = b;
        this.emitCode = c;
        this.range = d;
        this.flags = f;
      };
      h['openfl.utils._AGALMiniAssembler.Register'] = Id;
      Id.__name__ = 'openfl.utils._AGALMiniAssembler.Register';
      Id.prototype = {
        toString: function () {
          return (
            '[Register name="' +
            this.name +
            '", longName="' +
            this.longName +
            '", emitCode=' +
            (null == this.emitCode
              ? 'null'
              : I.string(db.toFloat(this.emitCode))) +
            ', range=' +
            (null == this.range ? 'null' : I.string(db.toFloat(this.range))) +
            ', flags=' +
            (null == this.flags ? 'null' : I.string(db.toFloat(this.flags))) +
            ']'
          );
        },
        __class__: Id,
      };
      var Yb = function (a, b, c) {
        this.name = a;
        this.flag = b;
        this.mask = c;
      };
      h['openfl.utils._AGALMiniAssembler.Sampler'] = Yb;
      Yb.__name__ = 'openfl.utils._AGALMiniAssembler.Sampler';
      Yb.prototype = { __class__: Yb };
      var Sj = function () {};
      h['openfl.utils.IAssetCache'] = Sj;
      Sj.__name__ = 'openfl.utils.IAssetCache';
      Sj.__isInterface__ = !0;
      Sj.prototype = {
        __class__: Sj,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var Tj = function () {
        this.__enabled = !0;
        this.bitmapData = new Ja();
        this.font = new Ja();
        this.sound = new Ja();
      };
      h['openfl.utils.AssetCache'] = Tj;
      Tj.__name__ = 'openfl.utils.AssetCache';
      Tj.__interfaces__ = [Sj];
      Tj.prototype = {
        getFont: function (a) {
          return this.font.h[a];
        },
        hasFont: function (a) {
          return Object.prototype.hasOwnProperty.call(this.font.h, a);
        },
        setFont: function (a, b) {
          this.font.h[a] = b;
        },
        get_enabled: function () {
          return this.__enabled;
        },
        __class__: Tj,
        __properties__: { get_enabled: 'get_enabled' },
      };
      var nf = function () {
        Qb.call(this);
      };
      h['openfl.utils.AssetLibrary'] = nf;
      nf.__name__ = 'openfl.utils.AssetLibrary';
      nf.fromBundle = function (a) {
        a = Qb.fromBundle(a);
        if (null != a) {
          if (a instanceof nf) return a;
          var b = new nf();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      nf.fromManifest = function (a) {
        a = Qb.fromManifest(a);
        if (null != a) {
          if (a instanceof nf) return a;
          var b = new nf();
          b.__proxy = a;
          return b;
        }
        return null;
      };
      nf.__super__ = Qb;
      nf.prototype = u(Qb.prototype, {
        bind: function (a, b) {
          return !1;
        },
        exists: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.exists(a, b)
            : Qb.prototype.exists.call(this, a, b);
        },
        getAsset: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.getAsset(a, b)
            : Qb.prototype.getAsset.call(this, a, b);
        },
        getAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.getAudioBuffer(a)
            : Qb.prototype.getAudioBuffer.call(this, a);
        },
        getBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.getBytes(a)
            : Qb.prototype.getBytes.call(this, a);
        },
        getFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.getFont(a)
            : Qb.prototype.getFont.call(this, a);
        },
        getImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.getImage(a)
            : Qb.prototype.getImage.call(this, a);
        },
        getPath: function (a) {
          return null != this.__proxy
            ? this.__proxy.getPath(a)
            : Qb.prototype.getPath.call(this, a);
        },
        getText: function (a) {
          return null != this.__proxy
            ? this.__proxy.getText(a)
            : Qb.prototype.getText.call(this, a);
        },
        isLocal: function (a, b) {
          return null != this.__proxy
            ? this.__proxy.isLocal(a, b)
            : Qb.prototype.isLocal.call(this, a, b);
        },
        load: function () {
          return null != this.__proxy
            ? this.__proxy.load()
            : Qb.prototype.load.call(this);
        },
        loadAudioBuffer: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadAudioBuffer(a)
            : Qb.prototype.loadAudioBuffer.call(this, a);
        },
        loadBytes: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadBytes(a)
            : Qb.prototype.loadBytes.call(this, a);
        },
        loadFont: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadFont(a)
            : Qb.prototype.loadFont.call(this, a);
        },
        loadImage: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadImage(a)
            : Qb.prototype.loadImage.call(this, a);
        },
        loadText: function (a) {
          return null != this.__proxy
            ? this.__proxy.loadText(a)
            : Qb.prototype.loadText.call(this, a);
        },
        unload: function () {
          null != this.__proxy
            ? this.__proxy.unload()
            : Qb.prototype.unload.call(this);
        },
        __class__: nf,
      });
      var Rb = function () {};
      h['openfl.utils.Assets'] = Rb;
      Rb.__name__ = 'openfl.utils.Assets';
      Rb.exists = function (a, b) {
        return Ka.exists(a, b);
      };
      Rb.getFont = function (a, b) {
        null == b && (b = !0);
        if (b && Rb.cache.get_enabled() && Rb.cache.hasFont(a))
          return Rb.cache.getFont(a);
        var c = Ka.getFont(a, !1);
        if (null != c) {
          var d = new la();
          d.__fromLimeFont(c);
          b && Rb.cache.get_enabled() && Rb.cache.setFont(a, d);
          return d;
        }
        return new la();
      };
      Rb.getText = function (a) {
        return Ka.getText(a);
      };
      var Nd = {
          __properties__: {
            set_length: 'set_length',
            get_length: 'get_length',
          },
          fromArrayBuffer: function (a) {
            return null == a ? null : Zc.fromBytes(xb.ofData(a));
          },
          fromBytes: function (a) {
            return null == a ? null : a instanceof Zc ? a : Zc.fromBytes(a);
          },
          toArrayBuffer: function (a) {
            return a.b.bufferValue;
          },
          toBytes: function (a) {
            return a;
          },
          get_length: function (a) {
            return null == a ? 0 : a.length;
          },
          set_length: function (a, b) {
            0 <= b && (a.__resize(b), b < a.position && (a.position = b));
            return (a.length = b);
          },
        },
        yl = function () {};
      h['openfl.utils.IDataOutput'] = yl;
      yl.__name__ = 'openfl.utils.IDataOutput';
      yl.__isInterface__ = !0;
      var zl = function () {};
      h['openfl.utils.IDataInput'] = zl;
      zl.__name__ = 'openfl.utils.IDataInput';
      zl.__isInterface__ = !0;
      var Zc = function (a) {
        null == a && (a = 0);
        var b = new xb(new ArrayBuffer(a));
        xb.call(this, b.b.buffer);
        this.__allocated = a;
        null == Zc.__defaultEndian &&
          (Ec.get_endianness() == eg.LITTLE_ENDIAN
            ? (Zc.__defaultEndian = 1)
            : (Zc.__defaultEndian = 0));
        this.__endian = Zc.__defaultEndian;
        this.objectEncoding = Zc.defaultObjectEncoding;
        this.position = 0;
      };
      h['openfl.utils.ByteArrayData'] = Zc;
      Zc.__name__ = 'openfl.utils.ByteArrayData';
      Zc.__interfaces__ = [yl, zl];
      Zc.fromBytes = function (a) {
        var b = new Zc();
        b.__fromBytes(a);
        return b;
      };
      Zc.__super__ = xb;
      Zc.prototype = u(xb.prototype, {
        readByte: function () {
          var a = this.readUnsignedByte();
          return 0 != (a & 128) ? a - 256 : a;
        },
        readInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedByte: function () {
          if (this.position < this.length) return this.b[this.position++];
          throw new Lh();
        },
        readUnsignedInt: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian
            ? (d << 24) | (c << 16) | (b << 8) | a
            : (a << 24) | (b << 16) | (c << 8) | d;
        },
        readUnsignedShort: function () {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          return 1 == this.__endian ? (b << 8) + a : (a << 8) | b;
        },
        readUTF: function () {
          var a = this.readUnsignedShort();
          return this.readUTFBytes(a);
        },
        readUTFBytes: function (a) {
          if (this.position + a > this.length) throw new Lh();
          this.position += a;
          return this.getString(this.position - a, a);
        },
        writeByte: function (a) {
          this.__resize(this.position + 1);
          this.b[this.position++] = a & 255;
        },
        writeBytes: function (a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          0 != Nd.get_length(a) &&
            (0 == c && (c = Nd.get_length(a) - b),
            this.__resize(this.position + c),
            this.blit(this.position, a, b, c),
            (this.position += c));
        },
        writeInt: function (a) {
          this.__resize(this.position + 4);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 24) & 255))
            : ((this.b[this.position++] = (a >> 24) & 255),
              (this.b[this.position++] = (a >> 16) & 255),
              (this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeShort: function (a) {
          this.__resize(this.position + 2);
          1 == this.__endian
            ? ((this.b[this.position++] = a & 255),
              (this.b[this.position++] = (a >> 8) & 255))
            : ((this.b[this.position++] = (a >> 8) & 255),
              (this.b[this.position++] = a & 255));
        },
        writeUnsignedInt: function (a) {
          this.writeInt(a);
        },
        __fromBytes: function (a) {
          this.b = a.b;
          this.__allocated = a.length;
          this.data = a.data;
          this.length = a.length;
        },
        __resize: function (a) {
          if (a > this.__allocated) {
            var b = new xb(new ArrayBuffer((3 * (a + 1)) >> 1));
            if (0 < this.__allocated) {
              var c = this.length;
              this.length = this.__allocated;
              b.blit(0, this, 0, this.__allocated);
              this.length = c;
            }
            this.b = b.b;
            this.__allocated = b.length;
            this.data = b.data;
          }
          this.length < a && (this.length = a);
        },
        __class__: Zc,
      });
      var ge = {
          __get: function (a, b) {
            if (null == a || null == b) return null;
            if (Object.prototype.hasOwnProperty.call(a, b))
              return ya.field(a, b);
            if (a instanceof jb) {
              var c = a.getChildByName(b);
              if (null != c) return c;
            }
            return ya.getProperty(a, b);
          },
          __eq: function (a, b) {
            return a == b;
          },
        },
        Uj = function () {};
      h['haxe.lang.Iterator'] = Uj;
      Uj.__name__ = 'haxe.lang.Iterator';
      Uj.__isInterface__ = !0;
      Uj.prototype = { __class__: Uj };
      var Vj = function () {};
      h['haxe.lang.Iterable'] = Vj;
      Vj.__name__ = 'haxe.lang.Iterable';
      Vj.__isInterface__ = !0;
      Vj.prototype = { __class__: Vj };
      var Ni = function (a, b) {
        null == b && (b = 0);
        if (isNaN(a) || 0 > a)
          throw new gc(
            'The delay specified is negative or not a finite number',
          );
        sa.call(this);
        this.__delay = a;
        this.__repeatCount = b;
        this.running = !1;
        this.currentCount = 0;
      };
      h['openfl.utils.Timer'] = Ni;
      Ni.__name__ = 'openfl.utils.Timer';
      Ni.__super__ = sa;
      Ni.prototype = u(sa.prototype, {
        start: function () {
          this.running ||
            ((this.running = !0),
            (this.__timerID = window.setInterval(
              m(this, this.timer_onTimer),
              this.__delay | 0,
            )));
        },
        stop: function () {
          this.running = !1;
          null != this.__timerID &&
            (window.clearInterval(this.__timerID), (this.__timerID = null));
        },
        __handleUpdateAfterEvent: function () {
          null != Ra.get_current() &&
            null != Ra.get_current().stage &&
            Ra.get_current().stage.__renderAfterEvent();
        },
        timer_onTimer: function () {
          this.currentCount++;
          if (
            0 < this.__repeatCount &&
            this.currentCount >= this.__repeatCount
          ) {
            this.stop();
            var a = new Wg('timer');
            this.dispatchEvent(a);
            a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
            a = new Wg('timerComplete');
          } else a = new Wg('timer');
          this.dispatchEvent(a);
          a.__updateAfterEventFlag && this.__handleUpdateAfterEvent();
        },
        __class__: Ni,
      });
      var Fc = function () {};
      h['openfl.utils._internal.Lib'] = Fc;
      Fc.__name__ = 'openfl.utils._internal.Lib';
      var mg = function () {
        this.rollOutStack = [];
      };
      h['openfl.utils._internal.TouchData'] = mg;
      mg.__name__ = 'openfl.utils._internal.TouchData';
      mg.prototype = {
        reset: function () {
          this.touchOverTarget = this.touchDownTarget = this.touch = null;
          this.rollOutStack.splice(0, this.rollOutStack.length);
        },
        __class__: mg,
      };
      z.$haxeUID |= 0;
      'undefined' != typeof performance &&
        'function' == typeof performance.now &&
        (R.now = performance.now.bind(performance));
      h.Math = Math;
      null == String.fromCodePoint &&
        (String.fromCodePoint = function (a) {
          return 65536 > a
            ? String.fromCharCode(a)
            : String.fromCharCode((a >> 10) + 55232) +
                String.fromCharCode((a & 1023) + 56320);
        });
      Object.defineProperty(String.prototype, '__class__', {
        value: (h.String = String),
        enumerable: !1,
        writable: !0,
      });
      String.__name__ = 'String';
      h.Array = Array;
      Array.__name__ = 'Array';
      Date.prototype.__class__ = h.Date = Date;
      Date.__name__ = 'Date';
      var Bl = {},
        Nl = {},
        Ol = Number,
        Ml = Boolean,
        Dl = {},
        El = {};
      xa.__toStr = {}.toString;
      'undefined' == typeof window &&
        (z.onmessage = function (a) {
          a = a.data;
          try {
            ((z.onmessage = ((E = xd.__current), m(E, E.dispatchMessage))),
              Ll.toFunction(a)());
          } catch (b) {
            ((Ua.lastError = b), xd.__current.destroy());
          }
        });
      yd.NIL = new yd(null, null);
      Q.__alpha16 = new Uint32Array(256);
      for (var Zg = 0; 256 > Zg; ) {
        var Oh = Zg++;
        Q.__alpha16[Oh] = Math.ceil(257.00392156862745 * Oh);
      }
      Q.__clamp = new Uint8Array(511);
      for (Zg = 0; 255 > Zg; ) ((Oh = Zg++), (Q.__clamp[Oh] = Oh));
      for (Zg = 255; 511 > Zg; ) ((Oh = Zg++), (Q.__clamp[Oh] = 255));
      La.level = 3;
      'undefined' == typeof console && (console = {});
      null == console.log && (console.log = function () {});
      A.hitTestCanvas = Gf.get_supported()
        ? window.document.createElement('canvas')
        : null;
      A.hitTestContext = Gf.get_supported()
        ? A.hitTestCanvas.getContext('2d')
        : null;
      ca.__meta__ = {
        fields: {
          __cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
          removeEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      ca.__broadcastEvents = new Ja();
      ca.__instanceCount = 0;
      ca.__tempStack = new ub(
        function () {
          return ra.toObjectVector(null);
        },
        function (a) {
          a.set_length(0);
        },
      );
      la.__fontByName = new Ja();
      la.__registeredFonts = [];
      ia.Element = 0;
      ia.PCData = 1;
      ia.CData = 2;
      ia.Comment = 3;
      ia.DocType = 4;
      ia.ProcessingInstruction = 5;
      ia.Document = 6;
      t.offset = 10;
      t.delay = 4;
      w.windows = [];
      C.black = 0;
      C.dark = 4473924;
      C.medium = 8947848;
      C.light = 13421772;
      C.white = 16777215;
      C.uiFont = '_sans';
      C.uiFontMono = '_typewriter';
      C.smallSize = 20;
      C.normalSize = 24;
      Jc.okCancel = ['OK', 'Cancel'];
      Jd.maxFaceLength = 13;
      Kc.lastTab = 0;
      Ge.hintText = '* Shift+click a tag to learn its effect.';
      B.__pool = new ub(
        function () {
          return new B();
        },
        function (a) {
          a.setTo(0, 0);
        },
      );
      Ea._p0 = new B(-819.2, 0);
      Ea._p1 = new B(819.2, 0);
      Tb.lx = 0;
      Tb.ly = 0;
      ja.JOINTS = (function (a) {
        a = new tc();
        a.h[2] = 'round';
        a.h[1] = 'miter';
        a.h[0] = 'bevel';
        return a;
      })(this);
      ja.CAPS = (function (a) {
        a = new tc();
        a.h[1] = 'round';
        a.h[2] = 'square';
        a.h[0] = 'butt';
        return a;
      })(this);
      ja.BLEND_MODES = (function (a) {
        a = new tc();
        a.h[10] = 'normal';
        a.h[9] = 'multiply';
        a.h[0] = 'plus-lighter';
        return a;
      })(this);
      ja.gradients = [];
      ja.imports = [];
      ja.substituteFont = ja.substituteGenerics;
      ec.__meta__ = { obj: { generic: null } };
      Mb.allCons =
        'tnsrdlkmpbwfvgzjh\u0283\u02a4\u02a7\u0292x\u03b8\u00f0\u02a6\u02a3\u0263'.split(
          '',
        );
      Mb.allVows = ['e', 'a', 'o', 'i', 'u'];
      Mb.allSibs = 's\u0283\u0292z\u02a7\u02a4\u02a6\u02a3'.split('');
      Mb.allLiqs = ['r', 'l', 'j', 'w'];
      Mb.allNasal = ['n', 'm'];
      Mb.invalid = ['?'];
      Md.VOWELS =
        'you ye yo ya ie ee oo ea ei ey oi ou ai ay au oi oy ue ua u o a e i y'.split(
          ' ',
        );
      Md.CONSONANTS =
        'wh th ck ch sh gh ph qu b c d f g h j k l m n p q r s t v w x z'.split(
          ' ',
        );
      $b.__meta__ = {
        fields: {
          image: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __framebufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __indexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __surface: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __vertexBufferContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __fromImage: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      $b.__tempVector = new tg();
      na.__pool = new ub(
        function () {
          return new na();
        },
        function (a) {
          a.setTo(0, 0, 0, 0);
        },
      );
      xd.__current = new xd(z.location.href);
      xd.__isWorker = 'undefined' == typeof window;
      xd.__messages = new Xa();
      xd.__resolveMethods = new Xa();
      ua.__meta__ = {
        fields: {
          equals: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      ua.__identity = new ua();
      ua.__pool = new ub(
        function () {
          return new ua();
        },
        function (a) {
          a.identity();
        },
      );
      Lb.__pool = new ub(
        function () {
          return new Lb();
        },
        function (a) {
          a.__identity();
        },
      );
      bb.pixel = new $b(1, 1, !1, 0);
      bb.history = [];
      bb.menu = new dc();
      Db.hatching = B.polar(1, -Math.PI / 4);
      Db.min_trunk = 2;
      Db.max_trunk = 4;
      Db.min_width = 10;
      Db.max_width = 12;
      Db.min_height = 22.5;
      Db.max_height = 36;
      l.seed = 1;
      l.saved = -1;
      x.ultraThin = 0.4;
      x.thin = 0.8;
      x.normal = 1.4;
      x.thick = 3;
      x.river = 3;
      x.earth = 15460575;
      x.black = 5062454;
      x.water = 15065818;
      x.lightWood = 13159607;
      x.darkWood = 12173746;
      x.shallow = 15460575;
      x.contours = 10062723;
      x.routes = 10062723;
      x.rivers = 6708311;
      x.mountain = 14736853;
      x.walls = 15460575;
      x.roofs = 15045001;
      x.flags = 5062454;
      x.danger = 15921126;
      x.landBorderColor = 6708311;
      x.landBorderAlpha = 0.2;
      x.landBorderWidth = 0.333;
      x.shallowEdge = 1;
      x.shallowSize = 0.8;
      x.bandsNumber = 5;
      x.ruggedMountains = !0;
      x.treesDensity = 0.2;
      x.treesRegularity = 0.5;
      x.clutterScale = 0.7;
      x.townScale = 0.8;
      x.dangerScale = 0.6;
      x.textColor = x.black;
      x.outlineColor = x.earth;
      x.compass = 13421249;
      x.clouds = 16382194;
      x.banner = 15921126;
      x.matte = 15921126;
      x.shadings = ['Hatching', 'Transparent', 'Solid', 'None', 'No outlines'];
      x.fontSticker = {
        face: null,
        embedded: 'def_font',
        size: 20,
        bold: !1,
        italic: !1,
      };
      x.fontTown = {
        face: null,
        embedded: 'def_font',
        size: 32,
        bold: !1,
        italic: !1,
      };
      x.fontDanger = {
        face: null,
        embedded: 'def_font',
        size: 24,
        bold: !1,
        italic: !1,
      };
      x.fontArea = {
        face: null,
        embedded: 'def_font',
        size: 28,
        bold: !1,
        italic: !1,
      };
      x.fontTitle = {
        face: null,
        embedded: 'def_font',
        size: 40,
        bold: !1,
        italic: !1,
      };
      x.shadingMode = 0;
      x.alpha = 0.7;
      M.gridMode = 0;
      M.oceanTiles = !0;
      M.showNumbers = !1;
      M.showMatte = !0;
      M.showCompass = !0;
      M.showInfo = !0;
      M.showClouds = !1;
      M.showLight = !1;
      M.headerDecor = Sc.NONE;
      M.showTowns = !0;
      M.showDangers = !0;
      M.showLandmarks = !0;
      M.showMeadows = !0;
      M.showRoads = !0;
      M.showRoutes = !1;
      M.pinTowns = !1;
      M.uniformTowns = !1;
      M.individualTrees = !1;
      M.edgeTrees = !0;
      M.treeShadows = !1;
      M.revealRivers = !0;
      M.hollowRivers = !0;
      M.riverBanks = !0;
      cf.min_height = 24;
      cf.max_height = 40;
      fa.rugged = !1;
      fa.tiltMode = 0;
      fa.hexRadius = 50;
      fa.hexSqrR = fa.hexRadius * fa.hexRadius;
      fa.vantage = 1;
      Ob.hatching = B.polar(1, Math.PI / 6);
      Ob.min_trunk = 3;
      Ob.max_trunk = 5;
      Ob.min_width = 12;
      Ob.max_width = 15;
      Ob.min_height = 15;
      Ob.max_height = 24;
      Ia.inset = fa.hexRadius / 4;
      Ia.shadowHatching = new B(1, 0);
      Ia.lightTree = Ob.proto();
      Ia.darkTree = Db.proto();
      Ia.deadTree = cf.proto();
      Ia.frontTrees = !0;
      Jb.HIDDEN = 'hidden';
      Jb.STRAIGHT = 'straight';
      Jb.ARCED = 'arced';
      Jb.CURVED = 'curved';
      Jb.MODES = [Jb.HIDDEN, Jb.STRAIGHT, Jb.ARCED, Jb.CURVED];
      Jb.mode = Jb.ARCED;
      Vb.halfBase = fa.hexRadius;
      Vb.height = (4 * Vb.halfBase) / (1 + Math.sqrt(5));
      Vb.density = 1.6;
      pe.cache = new Ja();
      me.embeddedScanned = !1;
      me.embedded = (function (a) {
        a = new Ja();
        a.h.def_font = {
          name: 'Neucha',
          url: 'hhttps://fonts.googleapis.com/css2?family=Neucha&display=swap',
        };
        a.h.ui_font_mono = {
          name: 'Share Tech Mono',
          url: 'https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap',
        };
        return a;
      })(this);
      jc.fillColor = 16318463;
      jc.chord = 40;
      jc.swirlTurns = 1;
      jc.swirlDepth = 1;
      jc.fluffiness = 0.5;
      jc.chaos = 0.5;
      jc.minAngle = Math.PI / 24;
      se.fromAbove = new B(0, -1);
      Ma.o = new B();
      Ma.convexity = 0;
      Ma.secondary = 0;
      Ma.mainRing = 0;
      Ma.auxRing = 0;
      Ma.north = 0;
      Ma.south = 0;
      Ma.nipple = 0;
      Ma.showRhumbs = !0;
      yf.MARGIN = fa.hexRadius / 2;
      de.NLINES = 32;
      Ca.GREY = 5592405;
      Ca.FRONT = 'Front';
      Ca.SPOTLIGHT = 'Spotlight';
      Ca.type = Ca.SPOTLIGHT;
      Ca.balance = 0.7;
      Ca.clrLight = 7824964;
      Ca.opaLight = 0.2;
      Ca.satLight = 0.5;
      Ca.clrDark = 8952251;
      Ca.opaDark = 0.2;
      Ca.satDark = 0.5;
      Ca.spotFocus = new B();
      Ca.frontAnchor = new B(-1, -1);
      Pd.marks = [0.5, 0.333, 0.666];
      Ke.cache = [];
      od.cache = new Ja();
      Vc.dir = B.polar(1, Math.PI / 4);
      ic.o = new B();
      ic.ob = new B(0, 5);
      qd.showFlags = !0;
      qd.showPoles = !0;
      qd.darkDoors = !0;
      qd.sideView = !1;
      qd.rigid = !1;
      J.SHADE = 0.3;
      J.R = 50;
      J.design = new zf(!1);
      J.xSpan = 20;
      J.house_floor_height = 20;
      J.house_room_width = 15;
      J.house_door_height = 8;
      J.house_door_width = 3;
      J.house_window_height = 6;
      J.house_window_width = 2;
      J.house_window_shape = 0.4;
      J.house_min_height = 10;
      J.house_max_height = 30;
      J.house_min_width = 15;
      J.house_max_width = 30;
      J.house_roof_slope = 1.8;
      J.house_wall_slope = 0.05;
      J.house_spine_concave = 0.96;
      J.house_side = 10;
      J.house_spheric_roof = 0;
      J.tower_min_radius = 5;
      J.tower_max_radius = 7;
      J.tower_min_height = 40;
      J.tower_max_height = 60;
      J.tower_nub_ratio = 0.4;
      J.tower_roof_radius = 1.5;
      J.tower_roof_slope = 3;
      J.tower_roof_concave = 0.4;
      J.tower_roof_onion = 0;
      J.flag_length = 20;
      J.flag_width = 6;
      J.flag_swing = 1;
      J.flag_folds = 5;
      J.house_many_doors = !1;
      J.house_flat_roof = !1;
      J.tower_square = !1;
      J.tower_no_roof = !1;
      J.tower_crown = !1;
      J.hatching_dirSW = B.polar(1, 1.25 * Math.PI);
      J.hatching_dirNE = B.polar(1, 0.25 * Math.PI);
      J.hatching_dirE = new B(1, 0);
      J.hatching_dirW = new B(-1, 0);
      J.lastScale = 0;
      Ib.outline = !0;
      Ib.commonDesign = new zf(!1);
      Ib.sqrt2 = Math.sqrt(2);
      Hd.EDGE = new Hd(!0, !1);
      Hd.COAST = new Hd(!1, !0);
      Hd.NONE = new Hd(!1, !1);
      Z.TEMPLATE =
        'island coast lake land peninsula fjord bay archipelago'.split(' ');
      Z.DANGER = ['safe', 'perilous'];
      Z.width = 1800;
      Z.height = 1800;
      Z.ALIGNMENT = (function (a) {
        a = [];
        for (var b = 0, c = zb.__empty_constructs__.slice(); b < c.length; ) {
          var d = c[b];
          ++b;
          a.push(
            L[d.__enum__].__constructs__[d._hx_index]._hx_name.toLowerCase(),
          );
        }
        return a;
      })(this);
      Z.tags =
        'highland lowland wetland woodland barren civilized difficult safe perilous'
          .split(' ')
          .concat(Z.ALIGNMENT)
          .concat(Z.TEMPLATE);
      Z.lowlandArea = 0.5;
      Z.riverDensity = 0.05;
      Z.riverTortuosity = 1;
      Z.forestDensity = 0.1;
      Z.deadForestChance = 0.1;
      Z.swampDensity = 0.03333333333333333;
      Z.dessertDensity = 0.03333333333333333;
      Z.settlementDensity = 0.02702702702702703;
      Z.settlementChances = [
        cc.VILLAGE,
        cc.VILLAGE,
        cc.VILLAGE,
        cc.TOWN,
        cc.TOWN,
        cc.CITY,
      ];
      Z.alignment = zb.NEUTRAL;
      Z.dungeonDensity = 0.03333333333333333;
      Ha.PRIVACY = 'privacy';
      Ha.FREEDOM = 'freedom';
      Ha.SAFETY = 'safety';
      Ha.LEADERSHIP = 'leadership';
      Ha.DEFENCES = 'defences';
      Ha.PEOPLE = 'people';
      Ha.BEAUTY = 'beauty';
      Ha.HAPPYNESS = 'happyness';
      Ha.FOOD = 'food';
      Ha.WATER = 'water';
      Ha.SPACE = 'space';
      Ha.NATURE = 'nature';
      Ha.MAGIC = 'magic';
      Ha.CULTURE = 'culture';
      Ha.RELIGION = 'religion';
      Ha.KNOWLEDGE = 'knowledge';
      Ha.TRADE = 'trade';
      Ha.WEALTH = 'wealth';
      Ha.LABOUR = 'labour';
      Ha.resources = [
        Ha.PRIVACY,
        Ha.FREEDOM,
        Ha.SAFETY,
        Ha.LEADERSHIP,
        Ha.DEFENCES,
        Ha.PEOPLE,
        Ha.BEAUTY,
        Ha.HAPPYNESS,
        Ha.FOOD,
        Ha.WATER,
        Ha.SPACE,
        Ha.NATURE,
        Ha.MAGIC,
        Ha.RELIGION,
        Ha.CULTURE,
        Ha.KNOWLEDGE,
        Ha.TRADE,
        Ha.WEALTH,
        Ha.LABOUR,
      ];
      Nb.minR = 10;
      ka.useLang = !1;
      ka.terrNoun = !1;
      yc.concepts = ['town', 'wood', 'mountain', 'swamp', 'desert'];
      yc.minLen = 4;
      yc.maxLen = 20;
      Cf.REROLL = 'Reroll';
      Wb.MARGIN = 10;
      Wb.DISTANCE = 25;
      Wb.MAX_WIDTH = 300;
      xf.predefined = (function (a) {
        a = new Ja();
        a.h.Small = 800;
        a.h.Medium = 1200;
        a.h.Large = 1800;
        a.h.Huge = 2700;
        return a;
      })(this);
      Yf.presets = ['Common', 'Elvish', 'Exotic', 'Alien', 'Random'];
      ob.baseURL = 'https://watabou.github.io/';
      Za.plurals = (function (a) {
        a = new Ja();
        a.h.child = 'children';
        a.h.fish = 'fish';
        return a;
      })(this);
      ef.rng = Math.random;
      da.rnd = l.float;
      Zh.values = (function (a) {
        a = new Ja();
        a.h.aliceblue = 15792383;
        a.h.antiquewhite = 16444375;
        a.h.aqua = 65535;
        a.h.aquamarine = 8388564;
        a.h.azure = 15794175;
        a.h.beige = 16119260;
        a.h.bisque = 16770244;
        a.h.black = 0;
        a.h.blanchedalmond = 16772045;
        a.h.blue = 255;
        a.h.blueviolet = 9055202;
        a.h.brown = 10824234;
        a.h.burlywood = 14596231;
        a.h.cadetblue = 6266528;
        a.h.chartreuse = 8388352;
        a.h.chocolate = 13789470;
        a.h.coral = 16744272;
        a.h.cornflowerblue = 6591981;
        a.h.cornsilk = 16775388;
        a.h.crimson = 14423100;
        a.h.cyan = 65535;
        a.h.darkblue = 139;
        a.h.darkcyan = 35723;
        a.h.darkgoldenrod = 12092939;
        a.h.darkgreen = 25600;
        a.h.darkgrey = 11119017;
        a.h.darkkhaki = 12433259;
        a.h.darkmagenta = 9109643;
        a.h.darkolivegreen = 5597999;
        a.h.darkorange = 16747520;
        a.h.darkorchid = 10040012;
        a.h.darkred = 9109504;
        a.h.darksalmon = 15308410;
        a.h.darkseagreen = 9419919;
        a.h.darkslateblue = 4734347;
        a.h.darkslategrey = 3100495;
        a.h.darkturquoise = 52945;
        a.h.darkviolet = 9699539;
        a.h.deeppink = 16716947;
        a.h.deepskyblue = 49151;
        a.h.dimgrey = 6908265;
        a.h.dodgerblue = 2003199;
        a.h.firebrick = 11674146;
        a.h.floralwhite = 16775920;
        a.h.forestgreen = 2263842;
        a.h.fuchsia = 16711935;
        a.h.gainsboro = 14474460;
        a.h.ghostwhite = 16316671;
        a.h.goldenrod = 14329120;
        a.h.gold = 16766720;
        a.h.green = 32768;
        a.h.greenyellow = 11403055;
        a.h.grey = 8421504;
        a.h.honeydew = 15794160;
        a.h.hotpink = 16738740;
        a.h.indianred = 13458524;
        a.h.indigo = 4915330;
        a.h.ivory = 16777200;
        a.h.khaki = 15787660;
        a.h.lavenderblush = 16773365;
        a.h.lavender = 15132410;
        a.h.lawngreen = 8190976;
        a.h.lemonchiffon = 16775885;
        a.h.lightblue = 11393254;
        a.h.lightcoral = 15761536;
        a.h.lightcyan = 14745599;
        a.h.lightgoldenrodyellow = 16448210;
        a.h.lightgreen = 9498256;
        a.h.lightgrey = 13882323;
        a.h.lightpink = 16758465;
        a.h.lightsalmon = 16752762;
        a.h.lightseagreen = 2142890;
        a.h.lightskyblue = 8900346;
        a.h.lightslategrey = 7833753;
        a.h.lightsteelblue = 11584734;
        a.h.lightyellow = 16777184;
        a.h.lime = 65280;
        a.h.limegreen = 3329330;
        a.h.linen = 16445670;
        a.h.magenta = 16711935;
        a.h.maroon = 8388608;
        a.h.mediumaquamarine = 6737322;
        a.h.mediumblue = 205;
        a.h.mediumorchid = 12211667;
        a.h.mediumpurple = 9662683;
        a.h.mediumseagreen = 3978097;
        a.h.mediumslateblue = 8087790;
        a.h.mediumspringgreen = 64154;
        a.h.mediumturquoise = 4772300;
        a.h.mediumvioletred = 13047173;
        a.h.midnightblue = 1644912;
        a.h.mintcream = 16121850;
        a.h.mistyrose = 16770273;
        a.h.moccasin = 16770229;
        a.h.navajowhite = 16768685;
        a.h.navy = 128;
        a.h.oldlace = 16643558;
        a.h.olive = 8421376;
        a.h.olivedrab = 7048739;
        a.h.orange = 16753920;
        a.h.orangered = 16729344;
        a.h.orchid = 14315734;
        a.h.palegoldenrod = 15657130;
        a.h.palegreen = 10025880;
        a.h.paleturquoise = 11529966;
        a.h.palevioletred = 14381203;
        a.h.papayawhip = 16773077;
        a.h.peachpuff = 16767673;
        a.h.peru = 13468991;
        a.h.pink = 16761035;
        a.h.plum = 14524637;
        a.h.powderblue = 11591910;
        a.h.purple = 8388736;
        a.h.rebeccapurple = 6697881;
        a.h.red = 16711680;
        a.h.rosybrown = 12357519;
        a.h.royalblue = 4286945;
        a.h.saddlebrown = 9127187;
        a.h.salmon = 16416882;
        a.h.sandybrown = 16032864;
        a.h.seagreen = 3050327;
        a.h.seashell = 16774638;
        a.h.sienna = 10506797;
        a.h.silver = 12632256;
        a.h.skyblue = 8900331;
        a.h.slateblue = 6970061;
        a.h.slategrey = 7372944;
        a.h.snow = 16775930;
        a.h.springgreen = 65407;
        a.h.steelblue = 4620980;
        a.h.tan = 13808780;
        a.h.teal = 32896;
        a.h.thistle = 14204888;
        a.h.tomato = 16737095;
        a.h.turquoise = 4251856;
        a.h.violet = 15631086;
        a.h.wheat = 16113331;
        a.h.white = 16777215;
        a.h.whitesmoke = 16119285;
        a.h.yellow = 16776960;
        a.h.yellowgreen = 10145074;
        return a;
      })(this);
      ff.permutation = [
        151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225,
        140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247,
        120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57,
        177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74,
        165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122,
        60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54,
        65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169,
        200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3,
        64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85,
        212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170,
        213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43,
        172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185,
        112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191,
        179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31,
        181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150,
        254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195,
        78, 66, 215, 61, 156, 180,
      ];
      sb._tick = new Ac();
      sb.lastTime = 0;
      sb.timeScale = 1;
      zd.USE_CACHE = !1;
      zd.USE_ENUM_INDEX = !1;
      zd.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      rd.DEFAULT_RESOLVER = new Oi();
      rd.BASE64 =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:';
      pf.escapes = (function (a) {
        a = new Ja();
        a.h.lt = '<';
        a.h.gt = '>';
        a.h.amp = '&';
        a.h.quot = '"';
        a.h.apos = "'";
        return a;
      })(this);
      gd.LEN_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, -1, -1,
      ];
      gd.LEN_BASE_VAL_TBL = [
        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
        67, 83, 99, 115, 131, 163, 195, 227, 258,
      ];
      gd.DIST_EXTRA_BITS_TBL = [
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, -1, -1,
      ];
      gd.DIST_BASE_VAL_TBL = [
        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
        513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577,
      ];
      gd.CODE_LENGTHS_POS = [
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
      ];
      Ga.activeRequests = 0;
      Ga.requestLimit = 17;
      Ga.requestQueue = new Xa();
      Sa.dummyCharacter = '\u007f';
      Sa.windowID = 0;
      Ie.DICTIONARY =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split(
          '',
        );
      Ie.EXTENDED_DICTIONARY = (function (a) {
        a = [];
        for (var b = 0, c = Ie.DICTIONARY; b < c.length; ) {
          var d = c[b];
          ++b;
          for (var f = 0, g = Ie.DICTIONARY; f < g.length; ) {
            var k = g[f];
            ++f;
            a.push(d + k);
          }
        }
        return a;
      })(this);
      Bd.MUL_TABLE = [
        1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265,
        497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269,
        261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369,
        361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69,
        271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446,
        55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371,
        367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317,
        157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277,
        275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491,
        61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221,
        439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202,
        401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185,
        23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341,
        339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79,
        315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295,
        147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69,
        275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130,
        259, 129, 257, 1,
      ];
      Bd.SHG_TABLE = [
        0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14,
        14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15,
        15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15,
        12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14,
        16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16,
        16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16,
        14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16,
        15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16,
        17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16,
        17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15,
        16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17,
        17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17,
        16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14,
        17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16,
        17, 16, 17, 9,
      ];
      mb.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      zc.onUpdate = new Cc();
      zc.__updated = !1;
      Se.sensorByID = new tc();
      Se.sensors = [];
      uc.devices = new tc();
      uc.onConnect = new Fk();
      pc.devices = new tc();
      pc.onConnect = new Gk();
      hc.onCancel = new Jg();
      hc.onEnd = new Jg();
      hc.onMove = new Jg();
      hc.onStart = new Jg();
      Ka.cache = new Jk();
      Ka.onChange = new Cc();
      Ka.bundlePaths = new Ja();
      Ka.libraries = new Ja();
      Ka.libraryPaths = new Ja();
      La.throwErrors = !0;
      Ra.__lastTimerID = 0;
      Ra.__timers = new tc();
      jf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ej.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Te.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      fj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      ch.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      rg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          toJSON: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      $g.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      sd.__meta__ = {
        fields: {
          __context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __type: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      gj.__meta__ = {
        fields: {
          cairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix3: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applyMatrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeCairo: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Ze.__meta__ = {
        fields: {
          context: { SuppressWarnings: ['checkstyle:Dynamic'] },
          applySmoothing: { SuppressWarnings: ['checkstyle:Dynamic'] },
          setTransform: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __setBlendModeContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      kj.__meta__ = {
        fields: {
          __element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Ch.__meta__ = {
        fields: {
          element: { SuppressWarnings: ['checkstyle:Dynamic'] },
          _: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Cd.__meta__ = {
        fields: { glProgram: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Ae.__meta__ = {
        statics: {
          create: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
        fields: { parameters: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Ae.__rootURL = Gf.get_supported() ? window.document.URL : '';
      eb.__meta__ = {
        fields: {
          gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __gl: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __matrix: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projection: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __projectionFlipped: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      eb.__alphaValue = [1];
      eb.__colorMultipliersValue = [0, 0, 0, 0];
      eb.__colorOffsetsValue = [0, 0, 0, 0];
      eb.__emptyColorValue = [0, 0, 0, 0];
      eb.__hasColorTransformValue = [!1];
      eb.__scissorRectangle = new na();
      eb.__textureSizeValue = [0, 0];
      Ph.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { onComplete: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      ah.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      nj.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Mg.__meta__ = {
        fields: {
          index: { SuppressWarnings: ['checkstyle:Dynamic'] },
          name: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Pg.__meta__ = {
        fields: {
          __broadcastEvent: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __dispatchEvent: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchStack: {
            SuppressWarnings: [['checkstyle:Dynamic', 'checkstyle:LeftCurly']],
          },
          __dispatchTarget: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __handleError: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Dj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ah.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { _: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      Bh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      fg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ud.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { o: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      ud.empty = new ud();
      A.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          windingRule: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createBitmapFill: { SuppressWarnings: ['checkstyle:Dynamic'] },
          createGradientPattern: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      A.fillCommands = new ud();
      A.strokeCommands = new ud();
      ba.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      kf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        statics: {
          renderTileContainer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      gg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Td.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Hh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      jg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Sb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Sb.blankBitmapData = new $b(1, 1, !1, 0);
      Sb.tempColorTransform = new Lb(1, 1, 1, 1, 0, 0, 0, 0);
      ig.opaqueBitmapData = new $b(1, 1, !1, 0);
      Qe.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      mf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      X.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ud.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ud.__textureSizeValue = [0, 0];
      Xb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      td.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Nf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Jf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Kf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      lf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Be.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      ng.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      pj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: {
          overrideIntValues: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      rb.__glDepthStencil = -1;
      rb.__glMaxTextureMaxAnisotropy = -1;
      rb.__glMaxViewportDims = -1;
      rb.__glMemoryCurrentAvailable = -1;
      rb.__glMemoryTotalAvailable = -1;
      rb.__glTextureMaxAnisotropy = -1;
      Gj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Kh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      hd.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      hd.limitedProfile = !0;
      Qg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Hj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Rg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      og.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Ih.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Bb.__meta__ = {
        fields: {
          __textureContext: { SuppressWarnings: ['checkstyle:Dynamic'] },
          __getGLFramebuffer: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      bh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Sf.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Sf.supportsWeakReference = Object.prototype.hasOwnProperty.call(
        z,
        'WeakRef',
      );
      dd.__invertAlphaShader = new Qj();
      dd.__blurAlphaShader = new Lj();
      dd.__combineShader = new Nj();
      dd.__innerCombineShader = new Pj();
      dd.__combineKnockoutShader = new Mj();
      dd.__innerCombineKnockoutShader = new Oj();
      pg.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      Ce.__soundChannels = [];
      Ce.__soundTransform = new pg();
      fd.defaultObjectEncoding = 10;
      Of.followRedirects = !0;
      Of.idleTimeout = 0;
      Of.manageCookies = !0;
      Ng.currentDomain = new Ng(null);
      Fe.__meta__ = {
        fields: { clone: { SuppressWarnings: ['checkstyle:FieldDocComment'] } },
      };
      Nh.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Oa.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Oa.__regexAlign = new Ba('align\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Oa.__regexBreakTag = new Ba('<br\\s*/?>', 'gi');
      Oa.__regexBlockIndent = new Ba(
        'blockindent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Oa.__regexClass = new Ba('class\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Oa.__regexColor = new Ba('color\\s?=\\s?("#([^"]+)"|\'#([^\']+)\')', 'i');
      Oa.__regexEntityApos = new Ba('&apos;', 'g');
      Oa.__regexEntityNbsp = new Ba('&nbsp;', 'g');
      Oa.__regexCharEntity = new Ba('&#(?:([0-9]+)|(x[0-9a-fA-F]+));', 'g');
      Oa.__regexFace = new Ba('face\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Oa.__regexHTMLTag = new Ba('<.*?>', 'g');
      Oa.__regexHref = new Ba('href\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Oa.__regexIndent = new Ba(
        ' indent\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Oa.__regexLeading = new Ba(
        'leading\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Oa.__regexLeftMargin = new Ba(
        'leftmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Oa.__regexRightMargin = new Ba(
        'rightmargin\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Oa.__regexSize = new Ba('size\\s?=\\s?("([^"]+)"|\'([^\']+)\')', 'i');
      Oa.__regexTabStops = new Ba(
        'tabstops\\s?=\\s?("([^"]+)"|\'([^\']+)\')',
        'i',
      );
      Yg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Eb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Rj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Va.__meta__ = {
        fields: {
          addEventListener: { SuppressWarnings: ['checkstyle:Dynamic'] },
        },
      };
      Va.numDevices = 0;
      Va.__deviceList = [];
      Va.__instances = [];
      Va.__devices = new va();
      Rk.__cursor = 'auto';
      ma.__meta__ = {
        obj: {
          SuppressWarnings: [
            ['checkstyle:ConstantName', 'checkstyle:FieldDocComment'],
          ],
        },
      };
      ma.OPMAP = new Ja();
      ma.REGMAP = new Ja();
      ma.SAMPLEMAP = new Ja();
      ma.initialized = !1;
      pb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Id.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Yb.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Rb.cache = new Tj();
      Zc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Zc.defaultObjectEncoding = 10;
      ge.__meta__ = {
        statics: {
          __get: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        },
      };
      Uj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Vj.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      Fc.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
      };
      mg.__meta__ = {
        obj: { SuppressWarnings: ['checkstyle:FieldDocComment'] },
        fields: { touch: { SuppressWarnings: ['checkstyle:Dynamic'] } },
      };
      mg.__pool = new ub(
        function () {
          return new mg();
        },
        function (a) {
          a.reset();
        },
      );
      V.main();
    })(
      'undefined' != typeof v
        ? v
        : 'undefined' != typeof window
          ? window
          : 'undefined' != typeof self
            ? self
            : this,
      'undefined' != typeof window
        ? window
        : 'undefined' != typeof z
          ? z
          : 'undefined' != typeof self
            ? self
            : this,
    );
  };
  'undefined' !== typeof self && self.constructor.name.includes('Worker')
    ? z({}, v)
    : ((K.lime = K.lime || {}),
      (K.lime.$scripts = K.lime.$scripts || {}),
      (K.lime.$scripts.Perilous = z),
      (K.lime.embed = function (z) {
        var F = {},
          H = K.lime.$scripts[z];
        if (!H) throw Error('Cannot find project name "' + z + '"');
        H(F, v);
        for (var V in F) K[V] = K[V] || F[V];
        (H = F.lime || window.lime) &&
          H.embed &&
          this !== H.embed &&
          H.embed.apply(H, arguments);
        return F;
      }));
  'function' === typeof define &&
    define.amd &&
    (define([], function () {
      return K.lime;
    }),
    (define.__amd = define.amd),
    (define.amd = null));
};
$lime_init(
  'undefined' !== typeof exports
    ? exports
    : 'function' === typeof define && define.amd
      ? {}
      : 'undefined' !== typeof window
        ? window
        : 'undefined' !== typeof self
          ? self
          : this,
  'undefined' !== typeof window
    ? window
    : 'undefined' !== typeof global
      ? global
      : 'undefined' !== typeof self
        ? self
        : this,
);
('undefined' !== typeof self && self.constructor.name.includes('Worker')) ||
  (!(function () {
    var K = function () {
      this.init();
    };
    K.prototype = {
      init: function () {
        var h = this || v;
        return (
          (h._counter = 1e3),
          (h._html5AudioPool = []),
          (h.html5PoolSize = 10),
          (h._codecs = {}),
          (h._howls = []),
          (h._muted = !1),
          (h._volume = 1),
          (h._canPlayEvent = 'canplaythrough'),
          (h._navigator =
            'undefined' != typeof window && window.navigator
              ? window.navigator
              : null),
          (h.masterGain = null),
          (h.noAudio = !1),
          (h.usingWebAudio = !0),
          (h.autoSuspend = !0),
          (h.ctx = null),
          (h.autoUnlock = !0),
          h._setup(),
          h
        );
      },
      volume: function (h) {
        var r = this || v;
        if (
          ((h = parseFloat(h)), r.ctx || m(), void 0 !== h && 0 <= h && 1 >= h)
        ) {
          if (((r._volume = h), r._muted)) return r;
          r.usingWebAudio &&
            r.masterGain.gain.setValueAtTime(h, v.ctx.currentTime);
          for (var L = 0; L < r._howls.length; L++)
            if (!r._howls[L]._webAudio)
              for (
                var u = r._howls[L]._getSoundIds(), z = 0;
                z < u.length;
                z++
              ) {
                var qa = r._howls[L]._soundById(u[z]);
                qa && qa._node && (qa._node.volume = qa._volume * h);
              }
          return r;
        }
        return r._volume;
      },
      mute: function (h) {
        var r = this || v;
        r.ctx || m();
        r._muted = h;
        r.usingWebAudio &&
          r.masterGain.gain.setValueAtTime(
            h ? 0 : r._volume,
            v.ctx.currentTime,
          );
        for (var L = 0; L < r._howls.length; L++)
          if (!r._howls[L]._webAudio)
            for (var u = r._howls[L]._getSoundIds(), z = 0; z < u.length; z++) {
              var qa = r._howls[L]._soundById(u[z]);
              qa && qa._node && (qa._node.muted = !!h || qa._muted);
            }
        return r;
      },
      stop: function () {
        for (var h = this || v, r = 0; r < h._howls.length; r++)
          h._howls[r].stop();
        return h;
      },
      unload: function () {
        for (var h = this || v, r = h._howls.length - 1; 0 <= r; r--)
          h._howls[r].unload();
        return (
          h.usingWebAudio &&
            h.ctx &&
            void 0 !== h.ctx.close &&
            (h.ctx.close(), (h.ctx = null), m()),
          h
        );
      },
      codecs: function (h) {
        return (this || v)._codecs[h.replace(/^x-/, '')];
      },
      _setup: function () {
        var h = this || v;
        if (
          ((h.state = h.ctx ? h.ctx.state || 'suspended' : 'suspended'),
          h._autoSuspend(),
          !h.usingWebAudio)
        )
          if ('undefined' != typeof Audio)
            try {
              var r = new Audio();
              void 0 === r.oncanplaythrough && (h._canPlayEvent = 'canplay');
            } catch (L) {
              h.noAudio = !0;
            }
          else h.noAudio = !0;
        try {
          ((r = new Audio()), r.muted && (h.noAudio = !0));
        } catch (L) {}
        return (h.noAudio || h._setupCodecs(), h);
      },
      _setupCodecs: function () {
        var h = this || v,
          r = null;
        try {
          r = 'undefined' != typeof Audio ? new Audio() : null;
        } catch (Gb) {
          return h;
        }
        if (!r || 'function' != typeof r.canPlayType) return h;
        var m = r.canPlayType('audio/mpeg;').replace(/^no$/, ''),
          u = h._navigator ? h._navigator.userAgent : '',
          z = u.match(/OPR\/(\d+)/g);
        z = z && 33 > parseInt(z[0].split('/')[1], 10);
        var qa = -1 !== u.indexOf('Safari') && -1 === u.indexOf('Chrome');
        u = u.match(/Version\/(.*?) /);
        u = qa && u && 15 > parseInt(u[1], 10);
        return (
          (h._codecs = {
            mp3: !(
              z ||
              (!m && !r.canPlayType('audio/mp3;').replace(/^no$/, ''))
            ),
            mpeg: !!m,
            opus: !!r
              .canPlayType('audio/ogg; codecs="opus"')
              .replace(/^no$/, ''),
            ogg: !!r
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            oga: !!r
              .canPlayType('audio/ogg; codecs="vorbis"')
              .replace(/^no$/, ''),
            wav: !!(
              r.canPlayType('audio/wav; codecs="1"') ||
              r.canPlayType('audio/wav')
            ).replace(/^no$/, ''),
            aac: !!r.canPlayType('audio/aac;').replace(/^no$/, ''),
            caf: !!r.canPlayType('audio/x-caf;').replace(/^no$/, ''),
            m4a: !!(
              r.canPlayType('audio/x-m4a;') ||
              r.canPlayType('audio/m4a;') ||
              r.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            m4b: !!(
              r.canPlayType('audio/x-m4b;') ||
              r.canPlayType('audio/m4b;') ||
              r.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            mp4: !!(
              r.canPlayType('audio/x-mp4;') ||
              r.canPlayType('audio/mp4;') ||
              r.canPlayType('audio/aac;')
            ).replace(/^no$/, ''),
            weba: !(
              u ||
              !r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            webm: !(
              u ||
              !r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            ),
            dolby: !!r
              .canPlayType('audio/mp4; codecs="ec-3"')
              .replace(/^no$/, ''),
            flac: !!(
              r.canPlayType('audio/x-flac;') || r.canPlayType('audio/flac;')
            ).replace(/^no$/, ''),
          }),
          h
        );
      },
      _unlockAudio: function () {
        var h = this || v;
        if (!h._audioUnlocked && h.ctx) {
          h._audioUnlocked = !1;
          h.autoUnlock = !1;
          h._mobileUnloaded ||
            44100 === h.ctx.sampleRate ||
            ((h._mobileUnloaded = !0), h.unload());
          h._scratchBuffer = h.ctx.createBuffer(1, 1, 22050);
          var r = function (m) {
            for (; h._html5AudioPool.length < h.html5PoolSize; )
              try {
                var u = new Audio();
                u._unlocked = !0;
                h._releaseHtml5Audio(u);
              } catch (Hb) {
                h.noAudio = !0;
                break;
              }
            for (m = 0; m < h._howls.length; m++)
              if (!h._howls[m]._webAudio) {
                u = h._howls[m]._getSoundIds();
                for (var L = 0; L < u.length; L++) {
                  var v = h._howls[m]._soundById(u[L]);
                  v &&
                    v._node &&
                    !v._node._unlocked &&
                    ((v._node._unlocked = !0), v._node.load());
                }
              }
            h._autoResume();
            var z = h.ctx.createBufferSource();
            z.buffer = h._scratchBuffer;
            z.connect(h.ctx.destination);
            void 0 === z.start ? z.noteOn(0) : z.start(0);
            'function' == typeof h.ctx.resume && h.ctx.resume();
            z.onended = function () {
              z.disconnect(0);
              h._audioUnlocked = !0;
              document.removeEventListener('touchstart', r, !0);
              document.removeEventListener('touchend', r, !0);
              document.removeEventListener('click', r, !0);
              document.removeEventListener('keydown', r, !0);
              for (var m = 0; m < h._howls.length; m++)
                h._howls[m]._emit('unlock');
            };
          };
          return (
            document.addEventListener('touchstart', r, !0),
            document.addEventListener('touchend', r, !0),
            document.addEventListener('click', r, !0),
            document.addEventListener('keydown', r, !0),
            h
          );
        }
      },
      _obtainHtml5Audio: function () {
        var h = this || v;
        if (h._html5AudioPool.length) return h._html5AudioPool.pop();
        h = new Audio().play();
        return (
          h &&
            'undefined' != typeof Promise &&
            (h instanceof Promise || 'function' == typeof h.then) &&
            h.catch(function () {
              console.warn(
                'HTML5 Audio pool exhausted, returning potentially locked audio object.',
              );
            }),
          new Audio()
        );
      },
      _releaseHtml5Audio: function (h) {
        var r = this || v;
        return (h._unlocked && r._html5AudioPool.push(h), r);
      },
      _autoSuspend: function () {
        var h = this;
        if (
          h.autoSuspend &&
          h.ctx &&
          void 0 !== h.ctx.suspend &&
          v.usingWebAudio
        ) {
          for (var r = 0; r < h._howls.length; r++)
            if (h._howls[r]._webAudio)
              for (var m = 0; m < h._howls[r]._sounds.length; m++)
                if (!h._howls[r]._sounds[m]._paused) return h;
          return (
            h._suspendTimer && clearTimeout(h._suspendTimer),
            (h._suspendTimer = setTimeout(function () {
              if (h.autoSuspend) {
                h._suspendTimer = null;
                h.state = 'suspending';
                var r = function () {
                  h.state = 'suspended';
                  h._resumeAfterSuspend &&
                    (delete h._resumeAfterSuspend, h._autoResume());
                };
                h.ctx.suspend().then(r, r);
              }
            }, 3e4)),
            h
          );
        }
      },
      _autoResume: function () {
        var h = this;
        if (h.ctx && void 0 !== h.ctx.resume && v.usingWebAudio)
          return (
            'running' === h.state &&
            'interrupted' !== h.ctx.state &&
            h._suspendTimer
              ? (clearTimeout(h._suspendTimer), (h._suspendTimer = null))
              : 'suspended' === h.state ||
                  ('running' === h.state && 'interrupted' === h.ctx.state)
                ? (h.ctx.resume().then(function () {
                    h.state = 'running';
                    for (var r = 0; r < h._howls.length; r++)
                      h._howls[r]._emit('resume');
                  }),
                  h._suspendTimer &&
                    (clearTimeout(h._suspendTimer), (h._suspendTimer = null)))
                : 'suspending' === h.state && (h._resumeAfterSuspend = !0),
            h
          );
      },
    };
    var v = new K(),
      z = function (h) {
        if (!h.src || 0 === h.src.length)
          return void console.error(
            'An array of source files must be passed with any new Howl.',
          );
        this.init(h);
      };
    z.prototype = {
      init: function (h) {
        var r = this;
        return (
          v.ctx || m(),
          (r._autoplay = h.autoplay || !1),
          (r._format = 'string' != typeof h.format ? h.format : [h.format]),
          (r._html5 = h.html5 || !1),
          (r._muted = h.mute || !1),
          (r._loop = h.loop || !1),
          (r._pool = h.pool || 5),
          (r._preload =
            ('boolean' != typeof h.preload && 'metadata' !== h.preload) ||
            h.preload),
          (r._rate = h.rate || 1),
          (r._sprite = h.sprite || {}),
          (r._src = 'string' != typeof h.src ? h.src : [h.src]),
          (r._volume = void 0 !== h.volume ? h.volume : 1),
          (r._xhr = {
            method: h.xhr && h.xhr.method ? h.xhr.method : 'GET',
            headers: h.xhr && h.xhr.headers ? h.xhr.headers : null,
            withCredentials:
              !(!h.xhr || !h.xhr.withCredentials) && h.xhr.withCredentials,
          }),
          (r._duration = 0),
          (r._state = 'unloaded'),
          (r._sounds = []),
          (r._endTimers = {}),
          (r._queue = []),
          (r._playLock = !1),
          (r._onend = h.onend ? [{ fn: h.onend }] : []),
          (r._onfade = h.onfade ? [{ fn: h.onfade }] : []),
          (r._onload = h.onload ? [{ fn: h.onload }] : []),
          (r._onloaderror = h.onloaderror ? [{ fn: h.onloaderror }] : []),
          (r._onplayerror = h.onplayerror ? [{ fn: h.onplayerror }] : []),
          (r._onpause = h.onpause ? [{ fn: h.onpause }] : []),
          (r._onplay = h.onplay ? [{ fn: h.onplay }] : []),
          (r._onstop = h.onstop ? [{ fn: h.onstop }] : []),
          (r._onmute = h.onmute ? [{ fn: h.onmute }] : []),
          (r._onvolume = h.onvolume ? [{ fn: h.onvolume }] : []),
          (r._onrate = h.onrate ? [{ fn: h.onrate }] : []),
          (r._onseek = h.onseek ? [{ fn: h.onseek }] : []),
          (r._onunlock = h.onunlock ? [{ fn: h.onunlock }] : []),
          (r._onresume = []),
          (r._webAudio = v.usingWebAudio && !r._html5),
          void 0 !== v.ctx && v.ctx && v.autoUnlock && v._unlockAudio(),
          v._howls.push(r),
          r._autoplay &&
            r._queue.push({
              event: 'play',
              action: function () {
                r.play();
              },
            }),
          r._preload && 'none' !== r._preload && r.load(),
          r
        );
      },
      load: function () {
        var h = null;
        if (v.noAudio)
          return void this._emit('loaderror', null, 'No audio support.');
        'string' == typeof this._src && (this._src = [this._src]);
        for (var r = 0; r < this._src.length; r++) {
          var m;
          if (this._format && this._format[r]) var u = this._format[r];
          else {
            if ('string' != typeof (m = this._src[r])) {
              this._emit(
                'loaderror',
                null,
                'Non-string found in selected audio sources - ignoring.',
              );
              continue;
            }
            (u = /^data:audio\/([^;,]+);/i.exec(m)) ||
              (u = /\.([^.]+)$/.exec(m.split('?', 1)[0]));
            u && (u = u[1].toLowerCase());
          }
          if (
            (u ||
              console.warn(
                'No file extension was found. Consider using the "format" property or specify an extension.',
              ),
            u && v.codecs(u))
          ) {
            h = this._src[r];
            break;
          }
        }
        return h
          ? ((this._src = h),
            (this._state = 'loading'),
            'https:' === window.location.protocol &&
              'http:' === h.slice(0, 5) &&
              ((this._html5 = !0), (this._webAudio = !1)),
            new H(this),
            this._webAudio && O(this),
            this)
          : void this._emit(
              'loaderror',
              null,
              'No codec support for selected audio sources.',
            );
      },
      play: function (h, r) {
        var m = this,
          u = null;
        if ('number' == typeof h) ((u = h), (h = null));
        else {
          if ('string' == typeof h && 'loaded' === m._state && !m._sprite[h])
            return null;
          if (void 0 === h && ((h = '__default'), !m._playLock)) {
            for (var z = 0, qa = 0; qa < m._sounds.length; qa++)
              m._sounds[qa]._paused &&
                !m._sounds[qa]._ended &&
                (z++, (u = m._sounds[qa]._id));
            1 === z ? (h = null) : (u = null);
          }
        }
        var F = u ? m._soundById(u) : m._inactiveSound();
        if (!F) return null;
        if (
          (u && !h && (h = F._sprite || '__default'), 'loaded' !== m._state)
        ) {
          F._sprite = h;
          F._ended = !1;
          var V = F._id;
          return (
            m._queue.push({
              event: 'play',
              action: function () {
                m.play(V);
              },
            }),
            V
          );
        }
        if (u && !F._paused) return (r || m._loadQueue('play'), F._id);
        m._webAudio && v._autoResume();
        var K = Math.max(0, 0 < F._seek ? F._seek : m._sprite[h][0] / 1e3),
          H = Math.max(0, (m._sprite[h][0] + m._sprite[h][1]) / 1e3 - K),
          W = (1e3 * H) / Math.abs(F._rate),
          O = m._sprite[h][0] / 1e3,
          ra = (m._sprite[h][0] + m._sprite[h][1]) / 1e3;
        F._sprite = h;
        F._ended = !1;
        var ub = function () {
          F._paused = !1;
          F._seek = K;
          F._start = O;
          F._stop = ra;
          F._loop = !(!F._loop && !m._sprite[h][2]);
        };
        if (K >= ra) return void m._ended(F);
        var oa = F._node;
        if (m._webAudio)
          ((u = function () {
            m._playLock = !1;
            ub();
            m._refreshBuffer(F);
            oa.gain.setValueAtTime(
              F._muted || m._muted ? 0 : F._volume,
              v.ctx.currentTime,
            );
            F._playStart = v.ctx.currentTime;
            void 0 === oa.bufferSource.start
              ? F._loop
                ? oa.bufferSource.noteGrainOn(0, K, 86400)
                : oa.bufferSource.noteGrainOn(0, K, H)
              : F._loop
                ? oa.bufferSource.start(0, K, 86400)
                : oa.bufferSource.start(0, K, H);
            W !== 1 / 0 &&
              (m._endTimers[F._id] = setTimeout(m._ended.bind(m, F), W));
            r ||
              setTimeout(function () {
                m._emit('play', F._id);
                m._loadQueue();
              }, 0);
          }),
            'running' === v.state && 'interrupted' !== v.ctx.state
              ? u()
              : ((m._playLock = !0),
                m.once('resume', u),
                m._clearTimer(F._id)));
        else {
          var va = function () {
            oa.currentTime = K;
            oa.muted = F._muted || m._muted || v._muted || oa.muted;
            oa.volume = F._volume * v.volume();
            oa.playbackRate = F._rate;
            try {
              var u = oa.play();
              if (
                (u &&
                'undefined' != typeof Promise &&
                (u instanceof Promise || 'function' == typeof u.then)
                  ? ((m._playLock = !0),
                    ub(),
                    u
                      .then(function () {
                        m._playLock = !1;
                        oa._unlocked = !0;
                        r ? m._loadQueue() : m._emit('play', F._id);
                      })
                      .catch(function () {
                        m._playLock = !1;
                        m._emit(
                          'playerror',
                          F._id,
                          'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                        );
                        F._ended = !0;
                        F._paused = !0;
                      }))
                  : r || ((m._playLock = !1), ub(), m._emit('play', F._id)),
                (oa.playbackRate = F._rate),
                oa.paused)
              )
                return void m._emit(
                  'playerror',
                  F._id,
                  'Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.',
                );
              '__default' !== h || F._loop
                ? (m._endTimers[F._id] = setTimeout(m._ended.bind(m, F), W))
                : ((m._endTimers[F._id] = function () {
                    m._ended(F);
                    oa.removeEventListener('ended', m._endTimers[F._id], !1);
                  }),
                  oa.addEventListener('ended', m._endTimers[F._id], !1));
            } catch (Aa) {
              m._emit('playerror', F._id, Aa);
            }
          };
          'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA' ===
            oa.src && ((oa.src = m._src), oa.load());
          u =
            (window && window.ejecta) ||
            (!oa.readyState && v._navigator.isCocoonJS);
          if (3 <= oa.readyState || u) va();
          else {
            m._playLock = !0;
            m._state = 'loading';
            var Xa = function () {
              m._state = 'loaded';
              va();
              oa.removeEventListener(v._canPlayEvent, Xa, !1);
            };
            oa.addEventListener(v._canPlayEvent, Xa, !1);
            m._clearTimer(F._id);
          }
        }
        return F._id;
      },
      pause: function (h, r) {
        var m = this;
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'pause',
              action: function () {
                m.pause(h);
              },
            }),
            m
          );
        for (var u = m._getSoundIds(h), v = 0; v < u.length; v++) {
          m._clearTimer(u[v]);
          var z = m._soundById(u[v]);
          if (
            z &&
            !z._paused &&
            ((z._seek = m.seek(u[v])),
            (z._rateSeek = 0),
            (z._paused = !0),
            m._stopFade(u[v]),
            z._node)
          )
            if (m._webAudio) {
              if (!z._node.bufferSource) continue;
              void 0 === z._node.bufferSource.stop
                ? z._node.bufferSource.noteOff(0)
                : z._node.bufferSource.stop(0);
              m._cleanBuffer(z._node);
            } else
              (isNaN(z._node.duration) && z._node.duration !== 1 / 0) ||
                z._node.pause();
          r || m._emit('pause', z ? z._id : null);
        }
        return m;
      },
      stop: function (h, r) {
        var m = this;
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'stop',
              action: function () {
                m.stop(h);
              },
            }),
            m
          );
        for (var u = m._getSoundIds(h), v = 0; v < u.length; v++) {
          m._clearTimer(u[v]);
          var z = m._soundById(u[v]);
          z &&
            ((z._seek = z._start || 0),
            (z._rateSeek = 0),
            (z._paused = !0),
            (z._ended = !0),
            m._stopFade(u[v]),
            z._node &&
              (m._webAudio
                ? z._node.bufferSource &&
                  (void 0 === z._node.bufferSource.stop
                    ? z._node.bufferSource.noteOff(0)
                    : z._node.bufferSource.stop(0),
                  m._cleanBuffer(z._node))
                : (isNaN(z._node.duration) && z._node.duration !== 1 / 0) ||
                  ((z._node.currentTime = z._start || 0),
                  z._node.pause(),
                  z._node.duration === 1 / 0 && m._clearSound(z._node))),
            r || m._emit('stop', z._id));
        }
        return m;
      },
      mute: function (h, r) {
        var m = this;
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'mute',
              action: function () {
                m.mute(h, r);
              },
            }),
            m
          );
        if (void 0 === r) {
          if ('boolean' != typeof h) return m._muted;
          m._muted = h;
        }
        for (var u = m._getSoundIds(r), z = 0; z < u.length; z++) {
          var F = m._soundById(u[z]);
          F &&
            ((F._muted = h),
            F._interval && m._stopFade(F._id),
            m._webAudio && F._node
              ? F._node.gain.setValueAtTime(
                  h ? 0 : F._volume,
                  v.ctx.currentTime,
                )
              : F._node && (F._node.muted = !!v._muted || h),
            m._emit('mute', F._id));
        }
        return m;
      },
      volume: function () {
        var h,
          r,
          m = this,
          u = arguments;
        if (0 === u.length) return m._volume;
        1 === u.length || (2 === u.length && void 0 === u[1])
          ? 0 <= m._getSoundIds().indexOf(u[0])
            ? (r = parseInt(u[0], 10))
            : (h = parseFloat(u[0]))
          : 2 <= u.length && ((h = parseFloat(u[0])), (r = parseInt(u[1], 10)));
        var z;
        if (!(void 0 !== h && 0 <= h && 1 >= h))
          return ((z = r ? m._soundById(r) : m._sounds[0]), z ? z._volume : 0);
        if ('loaded' !== m._state || m._playLock)
          return (
            m._queue.push({
              event: 'volume',
              action: function () {
                m.volume.apply(m, u);
              },
            }),
            m
          );
        void 0 === r && (m._volume = h);
        r = m._getSoundIds(r);
        for (var F = 0; F < r.length; F++)
          (z = m._soundById(r[F])) &&
            ((z._volume = h),
            u[2] || m._stopFade(r[F]),
            m._webAudio && z._node && !z._muted
              ? z._node.gain.setValueAtTime(h, v.ctx.currentTime)
              : z._node && !z._muted && (z._node.volume = h * v.volume()),
            m._emit('volume', z._id));
        return m;
      },
      fade: function (h, r, m, u) {
        var E = this;
        if ('loaded' !== E._state || E._playLock)
          return (
            E._queue.push({
              event: 'fade',
              action: function () {
                E.fade(h, r, m, u);
              },
            }),
            E
          );
        h = Math.min(Math.max(0, parseFloat(h)), 1);
        r = Math.min(Math.max(0, parseFloat(r)), 1);
        m = parseFloat(m);
        E.volume(h, u);
        for (var L = E._getSoundIds(u), z = 0; z < L.length; z++) {
          var F = E._soundById(L[z]);
          if (F) {
            if ((u || E._stopFade(L[z]), E._webAudio && !F._muted)) {
              var K = v.ctx.currentTime,
                V = K + m / 1e3;
              F._volume = h;
              F._node.gain.setValueAtTime(h, K);
              F._node.gain.linearRampToValueAtTime(r, V);
            }
            E._startFadeInterval(F, h, r, m, L[z], void 0 === u);
          }
        }
        return E;
      },
      _startFadeInterval: function (h, m, u, v, z, F) {
        var r = this,
          E = m,
          L = u - m;
        z = Math.abs(L / 0.01);
        z = Math.max(4, 0 < z ? v / z : v);
        var K = Date.now();
        h._fadeTo = u;
        h._interval = setInterval(function () {
          var z = (Date.now() - K) / v;
          K = Date.now();
          E += L * z;
          E = Math.round(100 * E) / 100;
          E = 0 > L ? Math.max(u, E) : Math.min(u, E);
          r._webAudio ? (h._volume = E) : r.volume(E, h._id, !0);
          F && (r._volume = E);
          ((u < m && E <= u) || (u > m && E >= u)) &&
            (clearInterval(h._interval),
            (h._interval = null),
            (h._fadeTo = null),
            r.volume(u, h._id),
            r._emit('fade', h._id));
        }, z);
      },
      _stopFade: function (h) {
        var m = this._soundById(h);
        return (
          m &&
            m._interval &&
            (this._webAudio &&
              m._node.gain.cancelScheduledValues(v.ctx.currentTime),
            clearInterval(m._interval),
            (m._interval = null),
            this.volume(m._fadeTo, h),
            (m._fadeTo = null),
            this._emit('fade', h)),
          this
        );
      },
      loop: function () {
        var h,
          m,
          u,
          v = arguments;
        if (0 === v.length) return this._loop;
        if (1 === v.length) {
          if ('boolean' != typeof v[0])
            return !!(u = this._soundById(parseInt(v[0], 10))) && u._loop;
          this._loop = h = v[0];
        } else 2 === v.length && ((h = v[0]), (m = parseInt(v[1], 10)));
        m = this._getSoundIds(m);
        for (v = 0; v < m.length; v++)
          (u = this._soundById(m[v])) &&
            ((u._loop = h),
            this._webAudio &&
              u._node &&
              u._node.bufferSource &&
              ((u._node.bufferSource.loop = h),
              h &&
                ((u._node.bufferSource.loopStart = u._start || 0),
                (u._node.bufferSource.loopEnd = u._stop),
                this.playing(m[v]) &&
                  (this.pause(m[v], !0), this.play(m[v], !0)))));
        return this;
      },
      rate: function () {
        var h,
          m,
          u = this,
          E = arguments;
        0 === E.length
          ? (m = u._sounds[0]._id)
          : 1 === E.length
            ? 0 <= u._getSoundIds().indexOf(E[0])
              ? (m = parseInt(E[0], 10))
              : (h = parseFloat(E[0]))
            : 2 === E.length &&
              ((h = parseFloat(E[0])), (m = parseInt(E[1], 10)));
        var z;
        if ('number' != typeof h)
          return ((z = u._soundById(m)), z ? z._rate : u._rate);
        if ('loaded' !== u._state || u._playLock)
          return (
            u._queue.push({
              event: 'rate',
              action: function () {
                u.rate.apply(u, E);
              },
            }),
            u
          );
        void 0 === m && (u._rate = h);
        m = u._getSoundIds(m);
        for (var F = 0; F < m.length; F++)
          if ((z = u._soundById(m[F]))) {
            u.playing(m[F]) &&
              ((z._rateSeek = u.seek(m[F])),
              (z._playStart = u._webAudio ? v.ctx.currentTime : z._playStart));
            z._rate = h;
            u._webAudio && z._node && z._node.bufferSource
              ? z._node.bufferSource.playbackRate.setValueAtTime(
                  h,
                  v.ctx.currentTime,
                )
              : z._node && (z._node.playbackRate = h);
            var K = u.seek(m[F]);
            K =
              (1e3 *
                ((u._sprite[z._sprite][0] + u._sprite[z._sprite][1]) / 1e3 -
                  K)) /
              Math.abs(z._rate);
            (!u._endTimers[m[F]] && z._paused) ||
              (u._clearTimer(m[F]),
              (u._endTimers[m[F]] = setTimeout(u._ended.bind(u, z), K)));
            u._emit('rate', z._id);
          }
        return u;
      },
      seek: function () {
        var h,
          m,
          u = this,
          z = arguments;
        0 === z.length
          ? u._sounds.length && (m = u._sounds[0]._id)
          : 1 === z.length
            ? 0 <= u._getSoundIds().indexOf(z[0])
              ? (m = parseInt(z[0], 10))
              : u._sounds.length &&
                ((m = u._sounds[0]._id), (h = parseFloat(z[0])))
            : 2 === z.length &&
              ((h = parseFloat(z[0])), (m = parseInt(z[1], 10)));
        if (void 0 === m) return 0;
        if ('number' == typeof h && ('loaded' !== u._state || u._playLock))
          return (
            u._queue.push({
              event: 'seek',
              action: function () {
                u.seek.apply(u, z);
              },
            }),
            u
          );
        var F = u._soundById(m);
        if (F) {
          if (!('number' == typeof h && 0 <= h))
            return u._webAudio
              ? ((h = u.playing(m) ? v.ctx.currentTime - F._playStart : 0),
                F._seek +
                  ((F._rateSeek ? F._rateSeek - F._seek : 0) +
                    h * Math.abs(F._rate)))
              : F._node.currentTime;
          var K = u.playing(m);
          K && u.pause(m, !0);
          F._seek = h;
          F._ended = !1;
          u._clearTimer(m);
          u._webAudio ||
            !F._node ||
            isNaN(F._node.duration) ||
            (F._node.currentTime = h);
          var V = function () {
            K && u.play(m, !0);
            u._emit('seek', m);
          };
          if (K && !u._webAudio) {
            var H = function () {
              u._playLock ? setTimeout(H, 0) : V();
            };
            setTimeout(H, 0);
          } else V();
        }
        return u;
      },
      playing: function (h) {
        if ('number' == typeof h)
          return ((h = this._soundById(h)), !!h && !h._paused);
        for (h = 0; h < this._sounds.length; h++)
          if (!this._sounds[h]._paused) return !0;
        return !1;
      },
      duration: function (h) {
        var m = this._duration;
        h = this._soundById(h);
        return (h && (m = this._sprite[h._sprite][1] / 1e3), m);
      },
      state: function () {
        return this._state;
      },
      unload: function () {
        for (var h = this._sounds, m = 0; m < h.length; m++)
          (h[m]._paused || this.stop(h[m]._id),
            this._webAudio ||
              (this._clearSound(h[m]._node),
              h[m]._node.removeEventListener('error', h[m]._errorFn, !1),
              h[m]._node.removeEventListener(v._canPlayEvent, h[m]._loadFn, !1),
              h[m]._node.removeEventListener('ended', h[m]._endFn, !1),
              v._releaseHtml5Audio(h[m]._node)),
            delete h[m]._node,
            this._clearTimer(h[m]._id));
        m = v._howls.indexOf(this);
        0 <= m && v._howls.splice(m, 1);
        h = !0;
        for (m = 0; m < v._howls.length; m++)
          if (
            v._howls[m]._src === this._src ||
            0 <= this._src.indexOf(v._howls[m]._src)
          ) {
            h = !1;
            break;
          }
        return (
          F && h && delete F[this._src],
          (v.noAudio = !1),
          (this._state = 'unloaded'),
          (this._sounds = []),
          null
        );
      },
      on: function (h, m, u, v) {
        h = this['_on' + h];
        return (
          'function' == typeof m &&
            h.push(v ? { id: u, fn: m, once: v } : { id: u, fn: m }),
          this
        );
      },
      off: function (h, m, u) {
        var r = this['_on' + h];
        if (('number' == typeof m && ((u = m), (m = null)), m || u))
          for (h = 0; h < r.length; h++) {
            var v = u === r[h].id;
            if ((m === r[h].fn && v) || (!m && v)) {
              r.splice(h, 1);
              break;
            }
          }
        else if (h) this['_on' + h] = [];
        else
          for (m = Object.keys(this), h = 0; h < m.length; h++)
            0 === m[h].indexOf('_on') &&
              Array.isArray(this[m[h]]) &&
              (this[m[h]] = []);
        return this;
      },
      once: function (h, m, u) {
        return (this.on(h, m, u, 1), this);
      },
      _emit: function (h, m, u) {
        for (var r = this['_on' + h], v = r.length - 1; 0 <= v; v--)
          (r[v].id && r[v].id !== m && 'load' !== h) ||
            (setTimeout(
              function (h) {
                h.call(this, m, u);
              }.bind(this, r[v].fn),
              0,
            ),
            r[v].once && this.off(h, r[v].fn, r[v].id));
        return (this._loadQueue(h), this);
      },
      _loadQueue: function (h) {
        if (0 < this._queue.length) {
          var m = this._queue[0];
          m.event === h && (this._queue.shift(), this._loadQueue());
          h || m.action();
        }
        return this;
      },
      _ended: function (h) {
        var m = h._sprite;
        if (
          !this._webAudio &&
          h._node &&
          !h._node.paused &&
          !h._node.ended &&
          h._node.currentTime < h._stop
        )
          return (setTimeout(this._ended.bind(this, h), 100), this);
        m = !(!h._loop && !this._sprite[m][2]);
        if (
          (this._emit('end', h._id),
          !this._webAudio && m && this.stop(h._id, !0).play(h._id),
          this._webAudio && m)
        ) {
          this._emit('play', h._id);
          h._seek = h._start || 0;
          h._rateSeek = 0;
          h._playStart = v.ctx.currentTime;
          var u = (1e3 * (h._stop - h._start)) / Math.abs(h._rate);
          this._endTimers[h._id] = setTimeout(this._ended.bind(this, h), u);
        }
        return (
          this._webAudio &&
            !m &&
            ((h._paused = !0),
            (h._ended = !0),
            (h._seek = h._start || 0),
            (h._rateSeek = 0),
            this._clearTimer(h._id),
            this._cleanBuffer(h._node),
            v._autoSuspend()),
          this._webAudio || m || this.stop(h._id, !0),
          this
        );
      },
      _clearTimer: function (h) {
        if (this._endTimers[h]) {
          if ('function' != typeof this._endTimers[h])
            clearTimeout(this._endTimers[h]);
          else {
            var m = this._soundById(h);
            m &&
              m._node &&
              m._node.removeEventListener('ended', this._endTimers[h], !1);
          }
          delete this._endTimers[h];
        }
        return this;
      },
      _soundById: function (h) {
        for (var m = 0; m < this._sounds.length; m++)
          if (h === this._sounds[m]._id) return this._sounds[m];
        return null;
      },
      _inactiveSound: function () {
        this._drain();
        for (var h = 0; h < this._sounds.length; h++)
          if (this._sounds[h]._ended) return this._sounds[h].reset();
        return new H(this);
      },
      _drain: function () {
        var h = this._pool,
          m = 0,
          u;
        if (!(this._sounds.length < h)) {
          for (u = 0; u < this._sounds.length; u++)
            this._sounds[u]._ended && m++;
          for (u = this._sounds.length - 1; 0 <= u && !(m <= h); u--)
            this._sounds[u]._ended &&
              (this._webAudio &&
                this._sounds[u]._node &&
                this._sounds[u]._node.disconnect(0),
              this._sounds.splice(u, 1),
              m--);
        }
      },
      _getSoundIds: function (h) {
        if (void 0 === h) {
          h = [];
          for (var m = 0; m < this._sounds.length; m++)
            h.push(this._sounds[m]._id);
          return h;
        }
        return [h];
      },
      _refreshBuffer: function (h) {
        return (
          (h._node.bufferSource = v.ctx.createBufferSource()),
          (h._node.bufferSource.buffer = F[this._src]),
          h._panner
            ? h._node.bufferSource.connect(h._panner)
            : h._node.bufferSource.connect(h._node),
          (h._node.bufferSource.loop = h._loop),
          h._loop &&
            ((h._node.bufferSource.loopStart = h._start || 0),
            (h._node.bufferSource.loopEnd = h._stop || 0)),
          h._node.bufferSource.playbackRate.setValueAtTime(
            h._rate,
            v.ctx.currentTime,
          ),
          this
        );
      },
      _cleanBuffer: function (h) {
        var m = v._navigator && 0 <= v._navigator.vendor.indexOf('Apple');
        if (!h.bufferSource) return this;
        if (
          v._scratchBuffer &&
          h.bufferSource &&
          ((h.bufferSource.onended = null), h.bufferSource.disconnect(0), m)
        )
          try {
            h.bufferSource.buffer = v._scratchBuffer;
          } catch (L) {}
        return ((h.bufferSource = null), this);
      },
      _clearSound: function (h) {
        /MSIE |Trident\//.test(v._navigator && v._navigator.userAgent) ||
          (h.src =
            'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA');
      },
    };
    var H = function (h) {
      this._parent = h;
      this.init();
    };
    H.prototype = {
      init: function () {
        var h = this._parent;
        return (
          (this._muted = h._muted),
          (this._loop = h._loop),
          (this._volume = h._volume),
          (this._rate = h._rate),
          (this._seek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++v._counter),
          h._sounds.push(this),
          this.create(),
          this
        );
      },
      create: function () {
        var h = this._parent,
          m = v._muted || this._muted || this._parent._muted ? 0 : this._volume;
        return (
          h._webAudio
            ? ((this._node =
                void 0 === v.ctx.createGain
                  ? v.ctx.createGainNode()
                  : v.ctx.createGain()),
              this._node.gain.setValueAtTime(m, v.ctx.currentTime),
              (this._node.paused = !0),
              this._node.connect(v.masterGain))
            : v.noAudio ||
              ((this._node = v._obtainHtml5Audio()),
              (this._errorFn = this._errorListener.bind(this)),
              this._node.addEventListener('error', this._errorFn, !1),
              (this._loadFn = this._loadListener.bind(this)),
              this._node.addEventListener(v._canPlayEvent, this._loadFn, !1),
              (this._endFn = this._endListener.bind(this)),
              this._node.addEventListener('ended', this._endFn, !1),
              (this._node.src = h._src),
              (this._node.preload = !0 === h._preload ? 'auto' : h._preload),
              (this._node.volume = m * v.volume()),
              this._node.load()),
          this
        );
      },
      reset: function () {
        var h = this._parent;
        return (
          (this._muted = h._muted),
          (this._loop = h._loop),
          (this._volume = h._volume),
          (this._rate = h._rate),
          (this._seek = 0),
          (this._rateSeek = 0),
          (this._paused = !0),
          (this._ended = !0),
          (this._sprite = '__default'),
          (this._id = ++v._counter),
          this
        );
      },
      _errorListener: function () {
        this._parent._emit(
          'loaderror',
          this._id,
          this._node.error ? this._node.error.code : 0,
        );
        this._node.removeEventListener('error', this._errorFn, !1);
      },
      _loadListener: function () {
        var h = this._parent;
        h._duration = Math.ceil(10 * this._node.duration) / 10;
        0 === Object.keys(h._sprite).length &&
          (h._sprite = { __default: [0, 1e3 * h._duration] });
        'loaded' !== h._state &&
          ((h._state = 'loaded'), h._emit('load'), h._loadQueue());
        this._node.removeEventListener(v._canPlayEvent, this._loadFn, !1);
      },
      _endListener: function () {
        var h = this._parent;
        h._duration === 1 / 0 &&
          ((h._duration = Math.ceil(10 * this._node.duration) / 10),
          h._sprite.__default[1] === 1 / 0 &&
            (h._sprite.__default[1] = 1e3 * h._duration),
          h._ended(this));
        this._node.removeEventListener('ended', this._endFn, !1);
      },
    };
    var F = {},
      O = function (h) {
        var m = h._src;
        if (F[m]) return ((h._duration = F[m].duration), void W(h));
        if (/^data:[^;]+;base64,/.test(m)) {
          for (
            var v = atob(m.split(',')[1]), z = new Uint8Array(v.length), K = 0;
            K < v.length;
            ++K
          )
            z[K] = v.charCodeAt(K);
          u(z.buffer, h);
        } else {
          var H = new XMLHttpRequest();
          H.open(h._xhr.method, m, !0);
          H.withCredentials = h._xhr.withCredentials;
          H.responseType = 'arraybuffer';
          h._xhr.headers &&
            Object.keys(h._xhr.headers).forEach(function (m) {
              H.setRequestHeader(m, h._xhr.headers[m]);
            });
          H.onload = function () {
            var m = (H.status + '')[0];
            if ('0' !== m && '2' !== m && '3' !== m)
              return void h._emit(
                'loaderror',
                null,
                'Failed loading audio file with status: ' + H.status + '.',
              );
            u(H.response, h);
          };
          H.onerror = function () {
            h._webAudio &&
              ((h._html5 = !0),
              (h._webAudio = !1),
              (h._sounds = []),
              delete F[m],
              h.load());
          };
          V(H);
        }
      },
      V = function (h) {
        try {
          h.send();
        } catch (r) {
          h.onerror();
        }
      },
      u = function (h, m) {
        var r = function () {
            m._emit('loaderror', null, 'Decoding audio data failed.');
          },
          u = function (h) {
            h && 0 < m._sounds.length ? ((F[m._src] = h), W(m, h)) : r();
          };
        'undefined' != typeof Promise && 1 === v.ctx.decodeAudioData.length
          ? v.ctx.decodeAudioData(h).then(u).catch(r)
          : v.ctx.decodeAudioData(h, u, r);
      },
      W = function (h, m) {
        m && !h._duration && (h._duration = m.duration);
        0 === Object.keys(h._sprite).length &&
          (h._sprite = { __default: [0, 1e3 * h._duration] });
        'loaded' !== h._state &&
          ((h._state = 'loaded'), h._emit('load'), h._loadQueue());
      },
      m = function () {
        if (v.usingWebAudio) {
          try {
            'undefined' != typeof AudioContext
              ? (v.ctx = new AudioContext())
              : 'undefined' != typeof webkitAudioContext
                ? (v.ctx = new webkitAudioContext())
                : (v.usingWebAudio = !1);
          } catch (L) {
            v.usingWebAudio = !1;
          }
          v.ctx || (v.usingWebAudio = !1);
          var h = /iP(hone|od|ad)/.test(v._navigator && v._navigator.platform),
            m =
              v._navigator &&
              v._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
          m = m ? parseInt(m[1], 10) : null;
          h &&
            m &&
            9 > m &&
            ((h = /safari/.test(
              v._navigator && v._navigator.userAgent.toLowerCase(),
            )),
            v._navigator && !h && (v.usingWebAudio = !1));
          v.usingWebAudio &&
            ((v.masterGain =
              void 0 === v.ctx.createGain
                ? v.ctx.createGainNode()
                : v.ctx.createGain()),
            v.masterGain.gain.setValueAtTime(
              v._muted ? 0 : v._volume,
              v.ctx.currentTime,
            ),
            v.masterGain.connect(v.ctx.destination));
          v._setup();
        }
      };
    'function' == typeof define &&
      define.amd &&
      define([], function () {
        return { Howler: v, Howl: z };
      });
    'undefined' != typeof exports && ((exports.Howler = v), (exports.Howl = z));
    'undefined' != typeof global
      ? ((global.HowlerGlobal = K),
        (global.Howler = v),
        (global.Howl = z),
        (global.Sound = H))
      : 'undefined' != typeof window &&
        ((window.HowlerGlobal = K),
        (window.Howler = v),
        (window.Howl = z),
        (window.Sound = H));
  })(),
  !(function () {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function (v) {
      if (!this.ctx || !this.ctx.listener) return this;
      for (var z = this._howls.length - 1; 0 <= z; z--)
        this._howls[z].stereo(v);
      return this;
    };
    HowlerGlobal.prototype.pos = function (v, z, K) {
      return this.ctx && this.ctx.listener
        ? ((z = 'number' != typeof z ? this._pos[1] : z),
          (K = 'number' != typeof K ? this._pos[2] : K),
          'number' != typeof v
            ? this._pos
            : ((this._pos = [v, z, K]),
              void 0 !== this.ctx.listener.positionX
                ? (this.ctx.listener.positionX.setTargetAtTime(
                    this._pos[0],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionY.setTargetAtTime(
                    this._pos[1],
                    Howler.ctx.currentTime,
                    0.1,
                  ),
                  this.ctx.listener.positionZ.setTargetAtTime(
                    this._pos[2],
                    Howler.ctx.currentTime,
                    0.1,
                  ))
                : this.ctx.listener.setPosition(
                    this._pos[0],
                    this._pos[1],
                    this._pos[2],
                  ),
              this))
        : this;
    };
    HowlerGlobal.prototype.orientation = function (v, z, K, F, O, V) {
      if (!this.ctx || !this.ctx.listener) return this;
      var u = this._orientation;
      return (
        (z = 'number' != typeof z ? u[1] : z),
        (K = 'number' != typeof K ? u[2] : K),
        (F = 'number' != typeof F ? u[3] : F),
        (O = 'number' != typeof O ? u[4] : O),
        (V = 'number' != typeof V ? u[5] : V),
        'number' != typeof v
          ? u
          : ((this._orientation = [v, z, K, F, O, V]),
            void 0 !== this.ctx.listener.forwardX
              ? (this.ctx.listener.forwardX.setTargetAtTime(
                  v,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardY.setTargetAtTime(
                  z,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.forwardZ.setTargetAtTime(
                  K,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upX.setTargetAtTime(
                  F,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upY.setTargetAtTime(
                  O,
                  Howler.ctx.currentTime,
                  0.1,
                ),
                this.ctx.listener.upZ.setTargetAtTime(
                  V,
                  Howler.ctx.currentTime,
                  0.1,
                ))
              : this.ctx.listener.setOrientation(v, z, K, F, O, V),
            this)
      );
    };
    Howl.prototype.init = (function (v) {
      return function (z) {
        return (
          (this._orientation = z.orientation || [1, 0, 0]),
          (this._stereo = z.stereo || null),
          (this._pos = z.pos || null),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== z.coneInnerAngle ? z.coneInnerAngle : 360,
            coneOuterAngle:
              void 0 !== z.coneOuterAngle ? z.coneOuterAngle : 360,
            coneOuterGain: void 0 !== z.coneOuterGain ? z.coneOuterGain : 0,
            distanceModel:
              void 0 !== z.distanceModel ? z.distanceModel : 'inverse',
            maxDistance: void 0 !== z.maxDistance ? z.maxDistance : 1e4,
            panningModel: void 0 !== z.panningModel ? z.panningModel : 'HRTF',
            refDistance: void 0 !== z.refDistance ? z.refDistance : 1,
            rolloffFactor: void 0 !== z.rolloffFactor ? z.rolloffFactor : 1,
          }),
          (this._onstereo = z.onstereo ? [{ fn: z.onstereo }] : []),
          (this._onpos = z.onpos ? [{ fn: z.onpos }] : []),
          (this._onorientation = z.onorientation
            ? [{ fn: z.onorientation }]
            : []),
          v.call(this, z)
        );
      };
    })(Howl.prototype.init);
    Howl.prototype.stereo = function (v, z) {
      var H = this;
      if (!H._webAudio) return H;
      if ('loaded' !== H._state)
        return (
          H._queue.push({
            event: 'stereo',
            action: function () {
              H.stereo(v, z);
            },
          }),
          H
        );
      var F = void 0 === Howler.ctx.createStereoPanner ? 'spatial' : 'stereo';
      if (void 0 === z) {
        if ('number' != typeof v) return H._stereo;
        H._stereo = v;
        H._pos = [v, 0, 0];
      }
      for (var O = H._getSoundIds(z), V = 0; V < O.length; V++) {
        var u = H._soundById(O[V]);
        if (u) {
          if ('number' != typeof v) return u._stereo;
          u._stereo = v;
          u._pos = [v, 0, 0];
          u._node &&
            ((u._pannerAttr.panningModel = 'equalpower'),
            (u._panner && u._panner.pan) || K(u, F),
            'spatial' === F
              ? void 0 !== u._panner.positionX
                ? (u._panner.positionX.setValueAtTime(
                    v,
                    Howler.ctx.currentTime,
                  ),
                  u._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                  u._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime))
                : u._panner.setPosition(v, 0, 0)
              : u._panner.pan.setValueAtTime(v, Howler.ctx.currentTime));
          H._emit('stereo', u._id);
        }
      }
      return H;
    };
    Howl.prototype.pos = function (v, z, H, F) {
      var O = this;
      if (!O._webAudio) return O;
      if ('loaded' !== O._state)
        return (
          O._queue.push({
            event: 'pos',
            action: function () {
              O.pos(v, z, H, F);
            },
          }),
          O
        );
      if (
        ((z = 'number' != typeof z ? 0 : z),
        (H = 'number' != typeof H ? -0.5 : H),
        void 0 === F)
      ) {
        if ('number' != typeof v) return O._pos;
        O._pos = [v, z, H];
      }
      for (var V = O._getSoundIds(F), u = 0; u < V.length; u++) {
        var W = O._soundById(V[u]);
        if (W) {
          if ('number' != typeof v) return W._pos;
          W._pos = [v, z, H];
          W._node &&
            ((W._panner && !W._panner.pan) || K(W, 'spatial'),
            void 0 !== W._panner.positionX
              ? (W._panner.positionX.setValueAtTime(v, Howler.ctx.currentTime),
                W._panner.positionY.setValueAtTime(z, Howler.ctx.currentTime),
                W._panner.positionZ.setValueAtTime(H, Howler.ctx.currentTime))
              : W._panner.setPosition(v, z, H));
          O._emit('pos', W._id);
        }
      }
      return O;
    };
    Howl.prototype.orientation = function (v, z, H, F) {
      var O = this;
      if (!O._webAudio) return O;
      if ('loaded' !== O._state)
        return (
          O._queue.push({
            event: 'orientation',
            action: function () {
              O.orientation(v, z, H, F);
            },
          }),
          O
        );
      if (
        ((z = 'number' != typeof z ? O._orientation[1] : z),
        (H = 'number' != typeof H ? O._orientation[2] : H),
        void 0 === F)
      ) {
        if ('number' != typeof v) return O._orientation;
        O._orientation = [v, z, H];
      }
      for (var V = O._getSoundIds(F), u = 0; u < V.length; u++) {
        var W = O._soundById(V[u]);
        if (W) {
          if ('number' != typeof v) return W._orientation;
          W._orientation = [v, z, H];
          W._node &&
            (W._panner ||
              (W._pos || (W._pos = O._pos || [0, 0, -0.5]), K(W, 'spatial')),
            void 0 !== W._panner.orientationX
              ? (W._panner.orientationX.setValueAtTime(
                  v,
                  Howler.ctx.currentTime,
                ),
                W._panner.orientationY.setValueAtTime(
                  z,
                  Howler.ctx.currentTime,
                ),
                W._panner.orientationZ.setValueAtTime(
                  H,
                  Howler.ctx.currentTime,
                ))
              : W._panner.setOrientation(v, z, H));
          O._emit('orientation', W._id);
        }
      }
      return O;
    };
    Howl.prototype.pannerAttr = function () {
      var v,
        z,
        H = arguments;
      if (!this._webAudio) return this;
      if (0 === H.length) return this._pannerAttr;
      if (1 === H.length) {
        if ('object' != typeof H[0])
          return (
            (z = this._soundById(parseInt(H[0], 10))),
            z ? z._pannerAttr : this._pannerAttr
          );
        var F = H[0];
        void 0 === v &&
          (F.pannerAttr ||
            (F.pannerAttr = {
              coneInnerAngle: F.coneInnerAngle,
              coneOuterAngle: F.coneOuterAngle,
              coneOuterGain: F.coneOuterGain,
              distanceModel: F.distanceModel,
              maxDistance: F.maxDistance,
              refDistance: F.refDistance,
              rolloffFactor: F.rolloffFactor,
              panningModel: F.panningModel,
            }),
          (this._pannerAttr = {
            coneInnerAngle:
              void 0 !== F.pannerAttr.coneInnerAngle
                ? F.pannerAttr.coneInnerAngle
                : this._coneInnerAngle,
            coneOuterAngle:
              void 0 !== F.pannerAttr.coneOuterAngle
                ? F.pannerAttr.coneOuterAngle
                : this._coneOuterAngle,
            coneOuterGain:
              void 0 !== F.pannerAttr.coneOuterGain
                ? F.pannerAttr.coneOuterGain
                : this._coneOuterGain,
            distanceModel:
              void 0 !== F.pannerAttr.distanceModel
                ? F.pannerAttr.distanceModel
                : this._distanceModel,
            maxDistance:
              void 0 !== F.pannerAttr.maxDistance
                ? F.pannerAttr.maxDistance
                : this._maxDistance,
            refDistance:
              void 0 !== F.pannerAttr.refDistance
                ? F.pannerAttr.refDistance
                : this._refDistance,
            rolloffFactor:
              void 0 !== F.pannerAttr.rolloffFactor
                ? F.pannerAttr.rolloffFactor
                : this._rolloffFactor,
            panningModel:
              void 0 !== F.pannerAttr.panningModel
                ? F.pannerAttr.panningModel
                : this._panningModel,
          }));
      } else 2 === H.length && ((F = H[0]), (v = parseInt(H[1], 10)));
      v = this._getSoundIds(v);
      for (H = 0; H < v.length; H++)
        if ((z = this._soundById(v[H]))) {
          var O = z._pannerAttr;
          O = {
            coneInnerAngle:
              void 0 !== F.coneInnerAngle ? F.coneInnerAngle : O.coneInnerAngle,
            coneOuterAngle:
              void 0 !== F.coneOuterAngle ? F.coneOuterAngle : O.coneOuterAngle,
            coneOuterGain:
              void 0 !== F.coneOuterGain ? F.coneOuterGain : O.coneOuterGain,
            distanceModel:
              void 0 !== F.distanceModel ? F.distanceModel : O.distanceModel,
            maxDistance:
              void 0 !== F.maxDistance ? F.maxDistance : O.maxDistance,
            refDistance:
              void 0 !== F.refDistance ? F.refDistance : O.refDistance,
            rolloffFactor:
              void 0 !== F.rolloffFactor ? F.rolloffFactor : O.rolloffFactor,
            panningModel:
              void 0 !== F.panningModel ? F.panningModel : O.panningModel,
          };
          var V = z._panner;
          V ||
            (z._pos || (z._pos = this._pos || [0, 0, -0.5]),
            K(z, 'spatial'),
            (V = z._panner));
          V.coneInnerAngle = O.coneInnerAngle;
          V.coneOuterAngle = O.coneOuterAngle;
          V.coneOuterGain = O.coneOuterGain;
          V.distanceModel = O.distanceModel;
          V.maxDistance = O.maxDistance;
          V.refDistance = O.refDistance;
          V.rolloffFactor = O.rolloffFactor;
          V.panningModel = O.panningModel;
        }
      return this;
    };
    Sound.prototype.init = (function (v) {
      return function () {
        var z = this._parent;
        this._orientation = z._orientation;
        this._stereo = z._stereo;
        this._pos = z._pos;
        this._pannerAttr = z._pannerAttr;
        v.call(this);
        this._stereo
          ? z.stereo(this._stereo)
          : this._pos &&
            z.pos(this._pos[0], this._pos[1], this._pos[2], this._id);
      };
    })(Sound.prototype.init);
    Sound.prototype.reset = (function (v) {
      return function () {
        var z = this._parent;
        return (
          (this._orientation = z._orientation),
          (this._stereo = z._stereo),
          (this._pos = z._pos),
          (this._pannerAttr = z._pannerAttr),
          this._stereo
            ? z.stereo(this._stereo)
            : this._pos
              ? z.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
              : this._panner &&
                (this._panner.disconnect(0),
                (this._panner = void 0),
                z._refreshBuffer(this)),
          v.call(this)
        );
      };
    })(Sound.prototype.reset);
    var K = function (v, z) {
      'spatial' === (z || 'spatial')
        ? ((v._panner = Howler.ctx.createPanner()),
          (v._panner.coneInnerAngle = v._pannerAttr.coneInnerAngle),
          (v._panner.coneOuterAngle = v._pannerAttr.coneOuterAngle),
          (v._panner.coneOuterGain = v._pannerAttr.coneOuterGain),
          (v._panner.distanceModel = v._pannerAttr.distanceModel),
          (v._panner.maxDistance = v._pannerAttr.maxDistance),
          (v._panner.refDistance = v._pannerAttr.refDistance),
          (v._panner.rolloffFactor = v._pannerAttr.rolloffFactor),
          (v._panner.panningModel = v._pannerAttr.panningModel),
          void 0 !== v._panner.positionX
            ? (v._panner.positionX.setValueAtTime(
                v._pos[0],
                Howler.ctx.currentTime,
              ),
              v._panner.positionY.setValueAtTime(
                v._pos[1],
                Howler.ctx.currentTime,
              ),
              v._panner.positionZ.setValueAtTime(
                v._pos[2],
                Howler.ctx.currentTime,
              ))
            : v._panner.setPosition(v._pos[0], v._pos[1], v._pos[2]),
          void 0 !== v._panner.orientationX
            ? (v._panner.orientationX.setValueAtTime(
                v._orientation[0],
                Howler.ctx.currentTime,
              ),
              v._panner.orientationY.setValueAtTime(
                v._orientation[1],
                Howler.ctx.currentTime,
              ),
              v._panner.orientationZ.setValueAtTime(
                v._orientation[2],
                Howler.ctx.currentTime,
              ))
            : v._panner.setOrientation(
                v._orientation[0],
                v._orientation[1],
                v._orientation[2],
              ))
        : ((v._panner = Howler.ctx.createStereoPanner()),
          v._panner.pan.setValueAtTime(v._stereo, Howler.ctx.currentTime));
      v._panner.connect(v._node);
      v._paused || v._parent.pause(v._id, !0).play(v._id, !0);
    };
  })());
!(function (K) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = K())
    : 'function' == typeof define && define.amd
      ? define([], K)
      : (('undefined' != typeof window
          ? window
          : 'undefined' != typeof global
            ? global
            : 'undefined' != typeof self
              ? self
              : this
        ).pako = K());
})(function () {
  return (function F(v, z, H) {
    function O(u, m) {
      if (!z[u]) {
        if (!v[u]) {
          var h = 'function' == typeof require && require;
          if (!m && h) return h(u, !0);
          if (V) return V(u, !0);
          m = Error("Cannot find module '" + u + "'");
          throw ((m.code = 'MODULE_NOT_FOUND'), m);
        }
        m = z[u] = { exports: {} };
        v[u][0].call(
          m.exports,
          function (h) {
            var m = v[u][1][h];
            return O(m ? m : h);
          },
          m,
          m.exports,
          F,
          v,
          z,
          H,
        );
      }
      return z[u].exports;
    }
    for (
      var V = 'function' == typeof require && require, u = 0;
      u < H.length;
      u++
    )
      O(H[u]);
    return O;
  })(
    {
      1: [
        function (v, z, H) {
          function F(v) {
            if (!(this instanceof F)) return new F(v);
            v = this.options = u.assign(
              {
                level: E,
                method: qa,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: Ya,
                to: '',
              },
              v || {},
            );
            v.raw && 0 < v.windowBits
              ? (v.windowBits = -v.windowBits)
              : v.gzip &&
                0 < v.windowBits &&
                16 > v.windowBits &&
                (v.windowBits += 16);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new h();
            this.strm.avail_out = 0;
            var z = V.deflateInit2(
              this.strm,
              v.level,
              v.method,
              v.windowBits,
              v.memLevel,
              v.strategy,
            );
            if (z !== L) throw Error(m[z]);
            if (
              (v.header && V.deflateSetHeader(this.strm, v.header),
              v.dictionary)
            ) {
              var H;
              if (
                ((H =
                  'string' == typeof v.dictionary
                    ? W.string2buf(v.dictionary)
                    : '[object ArrayBuffer]' === r.call(v.dictionary)
                      ? new Uint8Array(v.dictionary)
                      : v.dictionary),
                (z = V.deflateSetDictionary(this.strm, H)),
                z !== L)
              )
                throw Error(m[z]);
              this._dict_set = !0;
            }
          }
          function O(h, m) {
            m = new F(m);
            if ((m.push(h, !0), m.err)) throw m.msg;
            return m.result;
          }
          var V = v('./zlib/deflate'),
            u = v('./utils/common'),
            W = v('./utils/strings'),
            m = v('./zlib/messages'),
            h = v('./zlib/zstream'),
            r = Object.prototype.toString,
            L = 0,
            E = -1,
            Ya = 0,
            qa = 8;
          F.prototype.push = function (h, m) {
            var v,
              z = this.strm,
              F = this.options.chunkSize;
            if (this.ended) return !1;
            m = m === ~~m ? m : !0 === m ? 4 : 0;
            'string' == typeof h
              ? (z.input = W.string2buf(h))
              : '[object ArrayBuffer]' === r.call(h)
                ? (z.input = new Uint8Array(h))
                : (z.input = h);
            z.next_in = 0;
            z.avail_in = z.input.length;
            do {
              if (
                (0 === z.avail_out &&
                  ((z.output = new u.Buf8(F)),
                  (z.next_out = 0),
                  (z.avail_out = F)),
                (v = V.deflate(z, m)),
                1 !== v && v !== L)
              )
                return (this.onEnd(v), (this.ended = !0), !1);
              (0 !== z.avail_out &&
                (0 !== z.avail_in || (4 !== m && 2 !== m))) ||
                ('string' === this.options.to
                  ? this.onData(
                      W.buf2binstring(u.shrinkBuf(z.output, z.next_out)),
                    )
                  : this.onData(u.shrinkBuf(z.output, z.next_out)));
            } while ((0 < z.avail_in || 0 === z.avail_out) && 1 !== v);
            return 4 === m
              ? ((v = V.deflateEnd(this.strm)),
                this.onEnd(v),
                (this.ended = !0),
                v === L)
              : 2 !== m || (this.onEnd(L), (z.avail_out = 0), !0);
          };
          F.prototype.onData = function (h) {
            this.chunks.push(h);
          };
          F.prototype.onEnd = function (h) {
            h === L &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = u.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = h;
            this.msg = this.strm.msg;
          };
          H.Deflate = F;
          H.deflate = O;
          H.deflateRaw = function (h, m) {
            return ((m = m || {}), (m.raw = !0), O(h, m));
          };
          H.gzip = function (h, m) {
            return ((m = m || {}), (m.gzip = !0), O(h, m));
          };
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/deflate': 8,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      2: [
        function (v, z, H) {
          function F(v) {
            if (!(this instanceof F)) return new F(v);
            var z = (this.options = u.assign(
              { chunkSize: 16384, windowBits: 0, to: '' },
              v || {},
            ));
            z.raw &&
              0 <= z.windowBits &&
              16 > z.windowBits &&
              ((z.windowBits = -z.windowBits),
              0 === z.windowBits && (z.windowBits = -15));
            !(0 <= z.windowBits && 16 > z.windowBits) ||
              (v && v.windowBits) ||
              (z.windowBits += 32);
            15 < z.windowBits &&
              48 > z.windowBits &&
              0 === (15 & z.windowBits) &&
              (z.windowBits |= 15);
            this.err = 0;
            this.msg = '';
            this.ended = !1;
            this.chunks = [];
            this.strm = new r();
            this.strm.avail_out = 0;
            v = V.inflateInit2(this.strm, z.windowBits);
            if (v !== m.Z_OK) throw Error(h[v]);
            this.header = new L();
            V.inflateGetHeader(this.strm, this.header);
          }
          function O(h, m) {
            m = new F(m);
            if ((m.push(h, !0), m.err)) throw m.msg;
            return m.result;
          }
          var V = v('./zlib/inflate'),
            u = v('./utils/common'),
            W = v('./utils/strings'),
            m = v('./zlib/constants'),
            h = v('./zlib/messages'),
            r = v('./zlib/zstream'),
            L = v('./zlib/gzheader'),
            E = Object.prototype.toString;
          F.prototype.push = function (h, r) {
            var v,
              z,
              F,
              L,
              H,
              O = this.strm,
              qa = this.options.chunkSize,
              Ya = this.options.dictionary,
              oa = !1;
            if (this.ended) return !1;
            r = r === ~~r ? r : !0 === r ? m.Z_FINISH : m.Z_NO_FLUSH;
            'string' == typeof h
              ? (O.input = W.binstring2buf(h))
              : '[object ArrayBuffer]' === E.call(h)
                ? (O.input = new Uint8Array(h))
                : (O.input = h);
            O.next_in = 0;
            O.avail_in = O.input.length;
            do {
              if (
                (0 === O.avail_out &&
                  ((O.output = new u.Buf8(qa)),
                  (O.next_out = 0),
                  (O.avail_out = qa)),
                (v = V.inflate(O, m.Z_NO_FLUSH)),
                v === m.Z_NEED_DICT &&
                  Ya &&
                  ((H =
                    'string' == typeof Ya
                      ? W.string2buf(Ya)
                      : '[object ArrayBuffer]' === E.call(Ya)
                        ? new Uint8Array(Ya)
                        : Ya),
                  (v = V.inflateSetDictionary(this.strm, H))),
                v === m.Z_BUF_ERROR && !0 === oa && ((v = m.Z_OK), (oa = !1)),
                v !== m.Z_STREAM_END && v !== m.Z_OK)
              )
                return (this.onEnd(v), (this.ended = !0), !1);
              O.next_out &&
                ((0 !== O.avail_out &&
                  v !== m.Z_STREAM_END &&
                  (0 !== O.avail_in ||
                    (r !== m.Z_FINISH && r !== m.Z_SYNC_FLUSH))) ||
                  ('string' === this.options.to
                    ? ((z = W.utf8border(O.output, O.next_out)),
                      (F = O.next_out - z),
                      (L = W.buf2string(O.output, z)),
                      (O.next_out = F),
                      (O.avail_out = qa - F),
                      F && u.arraySet(O.output, O.output, z, F, 0),
                      this.onData(L))
                    : this.onData(u.shrinkBuf(O.output, O.next_out))));
              0 === O.avail_in && 0 === O.avail_out && (oa = !0);
            } while (
              (0 < O.avail_in || 0 === O.avail_out) &&
              v !== m.Z_STREAM_END
            );
            return (
              v === m.Z_STREAM_END && (r = m.Z_FINISH),
              r === m.Z_FINISH
                ? ((v = V.inflateEnd(this.strm)),
                  this.onEnd(v),
                  (this.ended = !0),
                  v === m.Z_OK)
                : r !== m.Z_SYNC_FLUSH ||
                  (this.onEnd(m.Z_OK), (O.avail_out = 0), !0)
            );
          };
          F.prototype.onData = function (h) {
            this.chunks.push(h);
          };
          F.prototype.onEnd = function (h) {
            h === m.Z_OK &&
              ('string' === this.options.to
                ? (this.result = this.chunks.join(''))
                : (this.result = u.flattenChunks(this.chunks)));
            this.chunks = [];
            this.err = h;
            this.msg = this.strm.msg;
          };
          H.Inflate = F;
          H.inflate = O;
          H.inflateRaw = function (h, m) {
            return ((m = m || {}), (m.raw = !0), O(h, m));
          };
          H.ungzip = O;
        },
        {
          './utils/common': 3,
          './utils/strings': 4,
          './zlib/constants': 6,
          './zlib/gzheader': 9,
          './zlib/inflate': 11,
          './zlib/messages': 13,
          './zlib/zstream': 15,
        },
      ],
      3: [
        function (v, z, H) {
          v =
            'undefined' != typeof Uint8Array &&
            'undefined' != typeof Uint16Array &&
            'undefined' != typeof Int32Array;
          H.assign = function (v) {
            for (var u = Array.prototype.slice.call(arguments, 1); u.length; ) {
              var z = u.shift();
              if (z) {
                if ('object' != typeof z)
                  throw new TypeError(z + 'must be non-object');
                for (var m in z) z.hasOwnProperty(m) && (v[m] = z[m]);
              }
            }
            return v;
          };
          H.shrinkBuf = function (v, u) {
            return v.length === u
              ? v
              : v.subarray
                ? v.subarray(0, u)
                : ((v.length = u), v);
          };
          var F = {
              arraySet: function (v, u, z, m, h) {
                if (u.subarray && v.subarray)
                  return void v.set(u.subarray(z, z + m), h);
                for (var r = 0; r < m; r++) v[h + r] = u[z + r];
              },
              flattenChunks: function (v) {
                var u, z;
                var m = (z = 0);
                for (u = v.length; m < u; m++) z += v[m].length;
                var h = new Uint8Array(z);
                m = z = 0;
                for (u = v.length; m < u; m++) {
                  var r = v[m];
                  h.set(r, z);
                  z += r.length;
                }
                return h;
              },
            },
            O = {
              arraySet: function (v, u, z, m, h) {
                for (var r = 0; r < m; r++) v[h + r] = u[z + r];
              },
              flattenChunks: function (v) {
                return [].concat.apply([], v);
              },
            };
          H.setTyped = function (v) {
            v
              ? ((H.Buf8 = Uint8Array),
                (H.Buf16 = Uint16Array),
                (H.Buf32 = Int32Array),
                H.assign(H, F))
              : ((H.Buf8 = Array),
                (H.Buf16 = Array),
                (H.Buf32 = Array),
                H.assign(H, O));
          };
          H.setTyped(v);
        },
        {},
      ],
      4: [
        function (v, z, H) {
          function F(m, h) {
            if (65537 > h && ((m.subarray && u) || (!m.subarray && V)))
              return String.fromCharCode.apply(null, O.shrinkBuf(m, h));
            for (var r = '', v = 0; v < h; v++) r += String.fromCharCode(m[v]);
            return r;
          }
          var O = v('./common'),
            V = !0,
            u = !0;
          try {
            String.fromCharCode.apply(null, [0]);
          } catch (m) {
            V = !1;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (m) {
            u = !1;
          }
          var W = new O.Buf8(256);
          for (v = 0; 256 > v; v++)
            W[v] =
              252 <= v
                ? 6
                : 248 <= v
                  ? 5
                  : 240 <= v
                    ? 4
                    : 224 <= v
                      ? 3
                      : 192 <= v
                        ? 2
                        : 1;
          W[254] = W[254] = 1;
          H.string2buf = function (m) {
            var h,
              r,
              u,
              v = m.length,
              z = 0;
            for (r = 0; r < v; r++) {
              var F = m.charCodeAt(r);
              55296 === (64512 & F) &&
                r + 1 < v &&
                ((h = m.charCodeAt(r + 1)),
                56320 === (64512 & h) &&
                  ((F = 65536 + ((F - 55296) << 10) + (h - 56320)), r++));
              z += 128 > F ? 1 : 2048 > F ? 2 : 65536 > F ? 3 : 4;
            }
            var H = new O.Buf8(z);
            for (r = u = 0; u < z; r++)
              ((F = m.charCodeAt(r)),
                55296 === (64512 & F) &&
                  r + 1 < v &&
                  ((h = m.charCodeAt(r + 1)),
                  56320 === (64512 & h) &&
                    ((F = 65536 + ((F - 55296) << 10) + (h - 56320)), r++)),
                128 > F
                  ? (H[u++] = F)
                  : 2048 > F
                    ? ((H[u++] = 192 | (F >>> 6)), (H[u++] = 128 | (63 & F)))
                    : 65536 > F
                      ? ((H[u++] = 224 | (F >>> 12)),
                        (H[u++] = 128 | ((F >>> 6) & 63)),
                        (H[u++] = 128 | (63 & F)))
                      : ((H[u++] = 240 | (F >>> 18)),
                        (H[u++] = 128 | ((F >>> 12) & 63)),
                        (H[u++] = 128 | ((F >>> 6) & 63)),
                        (H[u++] = 128 | (63 & F))));
            return H;
          };
          H.buf2binstring = function (m) {
            return F(m, m.length);
          };
          H.binstring2buf = function (m) {
            for (var h = new O.Buf8(m.length), r = 0, u = h.length; r < u; r++)
              h[r] = m.charCodeAt(r);
            return h;
          };
          H.buf2string = function (m, h) {
            var r,
              u,
              v,
              z = h || m.length,
              H = Array(2 * z);
            for (h = r = 0; h < z; )
              if (((u = m[h++]), 128 > u)) H[r++] = u;
              else if (((v = W[u]), 4 < v)) ((H[r++] = 65533), (h += v - 1));
              else {
                for (u &= 2 === v ? 31 : 3 === v ? 15 : 7; 1 < v && h < z; )
                  ((u = (u << 6) | (63 & m[h++])), v--);
                1 < v
                  ? (H[r++] = 65533)
                  : 65536 > u
                    ? (H[r++] = u)
                    : ((u -= 65536),
                      (H[r++] = 55296 | ((u >> 10) & 1023)),
                      (H[r++] = 56320 | (1023 & u)));
              }
            return F(H, r);
          };
          H.utf8border = function (m, h) {
            var r;
            h = h || m.length;
            h > m.length && (h = m.length);
            for (r = h - 1; 0 <= r && 128 === (192 & m[r]); ) r--;
            return 0 > r ? h : 0 === r ? h : r + W[m[r]] > h ? r : h;
          };
        },
        { './common': 3 },
      ],
      5: [
        function (v, z, H) {
          z.exports = function (v, z, H, u) {
            var F = (65535 & v) | 0;
            v = ((v >>> 16) & 65535) | 0;
            for (var m; 0 !== H; ) {
              m = 2e3 < H ? 2e3 : H;
              H -= m;
              do ((F = (F + z[u++]) | 0), (v = (v + F) | 0));
              while (--m);
              F %= 65521;
              v %= 65521;
            }
            return F | (v << 16) | 0;
          };
        },
        {},
      ],
      6: [
        function (v, z, H) {
          z.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        },
        {},
      ],
      7: [
        function (v, z, H) {
          var F = (function () {
            for (var v, z = [], u = 0; 256 > u; u++) {
              v = u;
              for (var F = 0; 8 > F; F++)
                v = 1 & v ? 3988292384 ^ (v >>> 1) : v >>> 1;
              z[u] = v;
            }
            return z;
          })();
          z.exports = function (v, z, u, H) {
            u = H + u;
            for (v ^= -1; H < u; H++) v = (v >>> 8) ^ F[255 & (v ^ z[H])];
            return v ^ -1;
          };
        },
        {},
      ],
      8: [
        function (v, z, H) {
          function F(h, m) {
            return ((h.msg = ub[m]), m);
          }
          function O(h) {
            for (var m = h.length; 0 <= --m; ) h[m] = 0;
          }
          function V(h) {
            var m = h.state,
              r = m.pending;
            r > h.avail_out && (r = h.avail_out);
            0 !== r &&
              ($a.arraySet(
                h.output,
                m.pending_buf,
                m.pending_out,
                r,
                h.next_out,
              ),
              (h.next_out += r),
              (m.pending_out += r),
              (h.total_out += r),
              (h.avail_out -= r),
              (m.pending -= r),
              0 === m.pending && (m.pending_out = 0));
          }
          function u(h, m) {
            sa._tr_flush_block(
              h,
              0 <= h.block_start ? h.block_start : -1,
              h.strstart - h.block_start,
              m,
            );
            h.block_start = h.strstart;
            V(h.strm);
          }
          function W(h, m) {
            h.pending_buf[h.pending++] = m;
          }
          function m(h, m) {
            h.pending_buf[h.pending++] = (m >>> 8) & 255;
            h.pending_buf[h.pending++] = 255 & m;
          }
          function h(h, m) {
            var r,
              G,
              u = h.max_chain_length,
              v = h.strstart,
              z = h.prev_length,
              D = h.nice_match,
              F = h.strstart > h.w_size - Qa ? h.strstart - (h.w_size - Qa) : 0,
              E = h.window,
              I = h.w_mask,
              P = h.prev,
              H = h.strstart + Pa,
              oa = E[v + z - 1],
              L = E[v + z];
            h.prev_length >= h.good_match && (u >>= 2);
            D > h.lookahead && (D = h.lookahead);
            do
              if (
                ((r = m),
                E[r + z] === L &&
                  E[r + z - 1] === oa &&
                  E[r] === E[v] &&
                  E[++r] === E[v + 1])
              ) {
                v += 2;
                for (
                  r++;
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  E[++v] === E[++r] &&
                  v < H;

                );
                if (((G = Pa - (H - v)), (v = H - Pa), G > z)) {
                  if (((h.match_start = m), (z = G), G >= D)) break;
                  oa = E[v + z - 1];
                  L = E[v + z];
                }
              }
            while ((m = P[m & I]) > F && 0 !== --u);
            return z <= h.lookahead ? z : h.lookahead;
          }
          function r(h) {
            var m,
              r,
              u = h.w_size;
            do {
              if (
                ((r = h.window_size - h.lookahead - h.strstart),
                h.strstart >= u + (u - Qa))
              ) {
                $a.arraySet(h.window, h.window, u, u, 0);
                h.match_start -= u;
                h.strstart -= u;
                h.block_start -= u;
                var G = (m = h.hash_size);
                do {
                  var v = h.head[--G];
                  h.head[G] = v >= u ? v - u : 0;
                } while (--m);
                G = m = u;
                do ((v = h.prev[--G]), (h.prev[G] = v >= u ? v - u : 0));
                while (--m);
                r += u;
              }
              if (0 === h.strm.avail_in) break;
              G = h.strm;
              v = h.window;
              var z = h.strstart + h.lookahead,
                D = G.avail_in;
              if (
                ((m =
                  (D > r && (D = r),
                  0 === D
                    ? 0
                    : ((G.avail_in -= D),
                      $a.arraySet(v, G.input, G.next_in, D, z),
                      1 === G.state.wrap
                        ? (G.adler = qb(G.adler, v, D, z))
                        : 2 === G.state.wrap &&
                          (G.adler = ra(G.adler, v, D, z)),
                      (G.next_in += D),
                      (G.total_in += D),
                      D))),
                (h.lookahead += m),
                h.lookahead + h.insert >= Fa)
              )
                for (
                  r = h.strstart - h.insert,
                    h.ins_h = h.window[r],
                    h.ins_h =
                      ((h.ins_h << h.hash_shift) ^ h.window[r + 1]) &
                      h.hash_mask;
                  h.insert &&
                  ((h.ins_h =
                    ((h.ins_h << h.hash_shift) ^ h.window[r + Fa - 1]) &
                    h.hash_mask),
                  (h.prev[r & h.w_mask] = h.head[h.ins_h]),
                  (h.head[h.ins_h] = r),
                  r++,
                  h.insert--,
                  !(h.lookahead + h.insert < Fa));

                );
            } while (h.lookahead < Qa && 0 !== h.strm.avail_in);
          }
          function L(m, v) {
            for (var G, y; ; ) {
              if (m.lookahead < Qa) {
                if ((r(m), m.lookahead < Qa && v === oa)) return U;
                if (0 === m.lookahead) break;
              }
              if (
                ((G = 0),
                m.lookahead >= Fa &&
                  ((m.ins_h =
                    ((m.ins_h << m.hash_shift) ^
                      m.window[m.strstart + Fa - 1]) &
                    m.hash_mask),
                  (G = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                  (m.head[m.ins_h] = m.strstart)),
                0 !== G &&
                  m.strstart - G <= m.w_size - Qa &&
                  (m.match_length = h(m, G)),
                m.match_length >= Fa)
              )
                if (
                  ((y = sa._tr_tally(
                    m,
                    m.strstart - m.match_start,
                    m.match_length - Fa,
                  )),
                  (m.lookahead -= m.match_length),
                  m.match_length <= m.max_lazy_match && m.lookahead >= Fa)
                ) {
                  m.match_length--;
                  do
                    (m.strstart++,
                      (m.ins_h =
                        ((m.ins_h << m.hash_shift) ^
                          m.window[m.strstart + Fa - 1]) &
                        m.hash_mask),
                      (G = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                      (m.head[m.ins_h] = m.strstart));
                  while (0 !== --m.match_length);
                  m.strstart++;
                } else
                  ((m.strstart += m.match_length),
                    (m.match_length = 0),
                    (m.ins_h = m.window[m.strstart]),
                    (m.ins_h =
                      ((m.ins_h << m.hash_shift) ^ m.window[m.strstart + 1]) &
                      m.hash_mask));
              else
                ((y = sa._tr_tally(m, 0, m.window[m.strstart])),
                  m.lookahead--,
                  m.strstart++);
              if (y && (u(m, !1), 0 === m.strm.avail_out)) return U;
            }
            return (
              (m.insert = m.strstart < Fa - 1 ? m.strstart : Fa - 1),
              v === va
                ? (u(m, !0), 0 === m.strm.avail_out ? ya : I)
                : m.last_lit && (u(m, !1), 0 === m.strm.avail_out)
                  ? U
                  : id
            );
          }
          function E(m, v) {
            for (var G, y, z; ; ) {
              if (m.lookahead < Qa) {
                if ((r(m), m.lookahead < Qa && v === oa)) return U;
                if (0 === m.lookahead) break;
              }
              if (
                ((G = 0),
                m.lookahead >= Fa &&
                  ((m.ins_h =
                    ((m.ins_h << m.hash_shift) ^
                      m.window[m.strstart + Fa - 1]) &
                    m.hash_mask),
                  (G = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                  (m.head[m.ins_h] = m.strstart)),
                (m.prev_length = m.match_length),
                (m.prev_match = m.match_start),
                (m.match_length = Fa - 1),
                0 !== G &&
                  m.prev_length < m.max_lazy_match &&
                  m.strstart - G <= m.w_size - Qa &&
                  ((m.match_length = h(m, G)),
                  5 >= m.match_length &&
                    (m.strategy === jb ||
                      (m.match_length === Fa &&
                        4096 < m.strstart - m.match_start)) &&
                    (m.match_length = Fa - 1)),
                m.prev_length >= Fa && m.match_length <= m.prev_length)
              ) {
                z = m.strstart + m.lookahead - Fa;
                y = sa._tr_tally(
                  m,
                  m.strstart - 1 - m.prev_match,
                  m.prev_length - Fa,
                );
                m.lookahead -= m.prev_length - 1;
                m.prev_length -= 2;
                do
                  ++m.strstart <= z &&
                    ((m.ins_h =
                      ((m.ins_h << m.hash_shift) ^
                        m.window[m.strstart + Fa - 1]) &
                      m.hash_mask),
                    (G = m.prev[m.strstart & m.w_mask] = m.head[m.ins_h]),
                    (m.head[m.ins_h] = m.strstart));
                while (0 !== --m.prev_length);
                if (
                  ((m.match_available = 0),
                  (m.match_length = Fa - 1),
                  m.strstart++,
                  y && (u(m, !1), 0 === m.strm.avail_out))
                )
                  return U;
              } else if (m.match_available) {
                if (
                  ((y = sa._tr_tally(m, 0, m.window[m.strstart - 1])),
                  y && u(m, !1),
                  m.strstart++,
                  m.lookahead--,
                  0 === m.strm.avail_out)
                )
                  return U;
              } else ((m.match_available = 1), m.strstart++, m.lookahead--);
            }
            return (
              m.match_available &&
                (sa._tr_tally(m, 0, m.window[m.strstart - 1]),
                (m.match_available = 0)),
              (m.insert = m.strstart < Fa - 1 ? m.strstart : Fa - 1),
              v === va
                ? (u(m, !0), 0 === m.strm.avail_out ? ya : I)
                : m.last_lit && (u(m, !1), 0 === m.strm.avail_out)
                  ? U
                  : id
            );
          }
          function Ya(h, m, r, u, v) {
            this.good_length = h;
            this.max_lazy = m;
            this.nice_length = r;
            this.max_chain = u;
            this.func = v;
          }
          function qa() {
            this.strm = null;
            this.status = 0;
            this.pending_buf = null;
            this.wrap =
              this.pending =
              this.pending_out =
              this.pending_buf_size =
                0;
            this.gzhead = null;
            this.gzindex = 0;
            this.method = Gc;
            this.last_flush = -1;
            this.w_mask = this.w_bits = this.w_size = 0;
            this.window = null;
            this.window_size = 0;
            this.head = this.prev = null;
            this.nice_match =
              this.good_match =
              this.strategy =
              this.level =
              this.max_lazy_match =
              this.max_chain_length =
              this.prev_length =
              this.lookahead =
              this.match_start =
              this.strstart =
              this.match_available =
              this.prev_match =
              this.match_length =
              this.block_start =
              this.hash_shift =
              this.hash_mask =
              this.hash_bits =
              this.hash_size =
              this.ins_h =
                0;
            this.dyn_ltree = new $a.Buf16(2 * yb);
            this.dyn_dtree = new $a.Buf16(2 * (2 * R + 1));
            this.bl_tree = new $a.Buf16(2 * (2 * D + 1));
            O(this.dyn_ltree);
            O(this.dyn_dtree);
            O(this.bl_tree);
            this.bl_desc = this.d_desc = this.l_desc = null;
            this.bl_count = new $a.Buf16(cb + 1);
            this.heap = new $a.Buf16(2 * Ba + 1);
            O(this.heap);
            this.heap_max = this.heap_len = 0;
            this.depth = new $a.Buf16(2 * Ba + 1);
            O(this.depth);
            this.bi_valid =
              this.bi_buf =
              this.insert =
              this.matches =
              this.static_len =
              this.opt_len =
              this.d_buf =
              this.last_lit =
              this.lit_bufsize =
              this.l_buf =
                0;
          }
          function Gb(h) {
            var m;
            return h && h.state
              ? ((h.total_in = h.total_out = 0),
                (h.data_type = ib),
                (m = h.state),
                (m.pending = 0),
                (m.pending_out = 0),
                0 > m.wrap && (m.wrap = -m.wrap),
                (m.status = m.wrap ? la : S),
                (h.adler = 2 === m.wrap ? 0 : 1),
                (m.last_flush = oa),
                sa._tr_init(m),
                Xa)
              : F(h, ca);
          }
          function Hb(h) {
            var m = Gb(h);
            m === Xa &&
              ((h = h.state),
              (h.window_size = 2 * h.w_size),
              O(h.head),
              (h.max_lazy_match = vb[h.level].max_lazy),
              (h.good_match = vb[h.level].good_length),
              (h.nice_match = vb[h.level].nice_length),
              (h.max_chain_length = vb[h.level].max_chain),
              (h.strstart = 0),
              (h.block_start = 0),
              (h.lookahead = 0),
              (h.insert = 0),
              (h.match_length = h.prev_length = Fa - 1),
              (h.match_available = 0),
              (h.ins_h = 0));
            return m;
          }
          function Kb(h, m, r, u, v, z) {
            if (!h) return ca;
            var y = 1;
            if (
              (m === Aa && (m = 6),
              0 > u ? ((y = 0), (u = -u)) : 15 < u && ((y = 2), (u -= 16)),
              1 > v ||
                v > vc ||
                r !== Gc ||
                8 > u ||
                15 < u ||
                0 > m ||
                9 < m ||
                0 > z ||
                z > T)
            )
              return F(h, ca);
            8 === u && (u = 9);
            var N = new qa();
            return (
              (h.state = N),
              (N.strm = h),
              (N.wrap = y),
              (N.gzhead = null),
              (N.w_bits = u),
              (N.w_size = 1 << N.w_bits),
              (N.w_mask = N.w_size - 1),
              (N.hash_bits = v + 7),
              (N.hash_size = 1 << N.hash_bits),
              (N.hash_mask = N.hash_size - 1),
              (N.hash_shift = ~~((N.hash_bits + Fa - 1) / Fa)),
              (N.window = new $a.Buf8(2 * N.w_size)),
              (N.head = new $a.Buf16(N.hash_size)),
              (N.prev = new $a.Buf16(N.w_size)),
              (N.lit_bufsize = 1 << (v + 6)),
              (N.pending_buf_size = 4 * N.lit_bufsize),
              (N.pending_buf = new $a.Buf8(N.pending_buf_size)),
              (N.d_buf = 1 * N.lit_bufsize),
              (N.l_buf = 3 * N.lit_bufsize),
              (N.level = m),
              (N.strategy = z),
              (N.method = r),
              Hb(h)
            );
          }
          var $a = v('../utils/common'),
            sa = v('./trees'),
            qb = v('./adler32'),
            ra = v('./crc32'),
            ub = v('./messages'),
            oa = 0,
            va = 4,
            Xa = 0,
            ca = -2,
            Aa = -1,
            jb = 1,
            T = 4,
            ib = 2,
            Gc = 8,
            vc = 9,
            Ba = 286,
            R = 30,
            D = 19,
            yb = 2 * Ba + 1,
            cb = 15,
            Fa = 3,
            Pa = 258,
            Qa = Pa + Fa + 1,
            la = 42,
            S = 113,
            U = 1,
            id = 2,
            ya = 3,
            I = 4;
          var vb = [
            new Ya(0, 0, 0, 0, function (h, m) {
              var v = 65535;
              for (
                v > h.pending_buf_size - 5 && (v = h.pending_buf_size - 5);
                ;

              ) {
                if (1 >= h.lookahead) {
                  if ((r(h), 0 === h.lookahead && m === oa)) return U;
                  if (0 === h.lookahead) break;
                }
                h.strstart += h.lookahead;
                h.lookahead = 0;
                var y = h.block_start + v;
                if (
                  ((0 === h.strstart || h.strstart >= y) &&
                    ((h.lookahead = h.strstart - y),
                    (h.strstart = y),
                    u(h, !1),
                    0 === h.strm.avail_out)) ||
                  (h.strstart - h.block_start >= h.w_size - Qa &&
                    (u(h, !1), 0 === h.strm.avail_out))
                )
                  return U;
              }
              return (
                (h.insert = 0),
                m === va
                  ? (u(h, !0), 0 === h.strm.avail_out ? ya : I)
                  : (h.strstart > h.block_start && u(h, !1), U)
              );
            }),
            new Ya(4, 4, 8, 4, L),
            new Ya(4, 5, 16, 8, L),
            new Ya(4, 6, 32, 32, L),
            new Ya(4, 4, 16, 16, E),
            new Ya(8, 16, 32, 32, E),
            new Ya(8, 16, 128, 128, E),
            new Ya(8, 32, 128, 256, E),
            new Ya(32, 128, 258, 1024, E),
            new Ya(32, 258, 258, 4096, E),
          ];
          H.deflateInit = function (h, m) {
            return Kb(h, m, Gc, 15, 8, 0);
          };
          H.deflateInit2 = Kb;
          H.deflateReset = Hb;
          H.deflateResetKeep = Gb;
          H.deflateSetHeader = function (h, m) {
            return h && h.state
              ? 2 !== h.state.wrap
                ? ca
                : ((h.state.gzhead = m), Xa)
              : ca;
          };
          H.deflate = function (h, v) {
            var N, y;
            if (!h || !h.state || 5 < v || 0 > v) return h ? F(h, ca) : ca;
            if (
              ((y = h.state),
              !h.output ||
                (!h.input && 0 !== h.avail_in) ||
                (666 === y.status && v !== va))
            )
              return F(h, 0 === h.avail_out ? -5 : ca);
            if (
              ((y.strm = h),
              (N = y.last_flush),
              (y.last_flush = v),
              y.status === la)
            )
              if (2 === y.wrap)
                ((h.adler = 0),
                  W(y, 31),
                  W(y, 139),
                  W(y, 8),
                  y.gzhead
                    ? (W(
                        y,
                        (y.gzhead.text ? 1 : 0) +
                          (y.gzhead.hcrc ? 2 : 0) +
                          (y.gzhead.extra ? 4 : 0) +
                          (y.gzhead.name ? 8 : 0) +
                          (y.gzhead.comment ? 16 : 0),
                      ),
                      W(y, 255 & y.gzhead.time),
                      W(y, (y.gzhead.time >> 8) & 255),
                      W(y, (y.gzhead.time >> 16) & 255),
                      W(y, (y.gzhead.time >> 24) & 255),
                      W(
                        y,
                        9 === y.level
                          ? 2
                          : 2 <= y.strategy || 2 > y.level
                            ? 4
                            : 0,
                      ),
                      W(y, 255 & y.gzhead.os),
                      y.gzhead.extra &&
                        y.gzhead.extra.length &&
                        (W(y, 255 & y.gzhead.extra.length),
                        W(y, (y.gzhead.extra.length >> 8) & 255)),
                      y.gzhead.hcrc &&
                        (h.adler = ra(h.adler, y.pending_buf, y.pending, 0)),
                      (y.gzindex = 0),
                      (y.status = 69))
                    : (W(y, 0),
                      W(y, 0),
                      W(y, 0),
                      W(y, 0),
                      W(y, 0),
                      W(
                        y,
                        9 === y.level
                          ? 2
                          : 2 <= y.strategy || 2 > y.level
                            ? 4
                            : 0,
                      ),
                      W(y, 3),
                      (y.status = S)));
              else {
                var z = (Gc + ((y.w_bits - 8) << 4)) << 8;
                z |=
                  (2 <= y.strategy || 2 > y.level
                    ? 0
                    : 6 > y.level
                      ? 1
                      : 6 === y.level
                        ? 2
                        : 3) << 6;
                0 !== y.strstart && (z |= 32);
                y.status = S;
                m(y, z + (31 - (z % 31)));
                0 !== y.strstart &&
                  (m(y, h.adler >>> 16), m(y, 65535 & h.adler));
                h.adler = 1;
              }
            if (69 === y.status)
              if (y.gzhead.extra) {
                for (
                  z = y.pending;
                  y.gzindex < (65535 & y.gzhead.extra.length) &&
                  (y.pending !== y.pending_buf_size ||
                    (y.gzhead.hcrc &&
                      y.pending > z &&
                      (h.adler = ra(h.adler, y.pending_buf, y.pending - z, z)),
                    V(h),
                    (z = y.pending),
                    y.pending !== y.pending_buf_size));

                )
                  (W(y, 255 & y.gzhead.extra[y.gzindex]), y.gzindex++);
                y.gzhead.hcrc &&
                  y.pending > z &&
                  (h.adler = ra(h.adler, y.pending_buf, y.pending - z, z));
                y.gzindex === y.gzhead.extra.length &&
                  ((y.gzindex = 0), (y.status = 73));
              } else y.status = 73;
            if (73 === y.status)
              if (y.gzhead.name) {
                z = y.pending;
                do {
                  if (
                    y.pending === y.pending_buf_size &&
                    (y.gzhead.hcrc &&
                      y.pending > z &&
                      (h.adler = ra(h.adler, y.pending_buf, y.pending - z, z)),
                    V(h),
                    (z = y.pending),
                    y.pending === y.pending_buf_size)
                  ) {
                    var D = 1;
                    break;
                  }
                  D =
                    y.gzindex < y.gzhead.name.length
                      ? 255 & y.gzhead.name.charCodeAt(y.gzindex++)
                      : 0;
                  W(y, D);
                } while (0 !== D);
                y.gzhead.hcrc &&
                  y.pending > z &&
                  (h.adler = ra(h.adler, y.pending_buf, y.pending - z, z));
                0 === D && ((y.gzindex = 0), (y.status = 91));
              } else y.status = 91;
            if (91 === y.status)
              if (y.gzhead.comment) {
                z = y.pending;
                do {
                  if (
                    y.pending === y.pending_buf_size &&
                    (y.gzhead.hcrc &&
                      y.pending > z &&
                      (h.adler = ra(h.adler, y.pending_buf, y.pending - z, z)),
                    V(h),
                    (z = y.pending),
                    y.pending === y.pending_buf_size)
                  ) {
                    D = 1;
                    break;
                  }
                  D =
                    y.gzindex < y.gzhead.comment.length
                      ? 255 & y.gzhead.comment.charCodeAt(y.gzindex++)
                      : 0;
                  W(y, D);
                } while (0 !== D);
                y.gzhead.hcrc &&
                  y.pending > z &&
                  (h.adler = ra(h.adler, y.pending_buf, y.pending - z, z));
                0 === D && (y.status = 103);
              } else y.status = 103;
            if (
              (103 === y.status &&
                (y.gzhead.hcrc
                  ? (y.pending + 2 > y.pending_buf_size && V(h),
                    y.pending + 2 <= y.pending_buf_size &&
                      (W(y, 255 & h.adler),
                      W(y, (h.adler >> 8) & 255),
                      (h.adler = 0),
                      (y.status = S)))
                  : (y.status = S)),
              0 !== y.pending)
            ) {
              if ((V(h), 0 === h.avail_out)) return ((y.last_flush = -1), Xa);
            } else if (
              0 === h.avail_in &&
              (v << 1) - (4 < v ? 9 : 0) <= (N << 1) - (4 < N ? 9 : 0) &&
              v !== va
            )
              return F(h, -5);
            if (666 === y.status && 0 !== h.avail_in) return F(h, -5);
            if (
              0 !== h.avail_in ||
              0 !== y.lookahead ||
              (v !== oa && 666 !== y.status)
            ) {
              if (2 === y.strategy)
                a: {
                  for (var G; ; ) {
                    if (0 === y.lookahead && (r(y), 0 === y.lookahead)) {
                      if (v === oa) {
                        var E = U;
                        break a;
                      }
                      break;
                    }
                    if (
                      ((y.match_length = 0),
                      (G = sa._tr_tally(y, 0, y.window[y.strstart])),
                      y.lookahead--,
                      y.strstart++,
                      G && (u(y, !1), 0 === y.strm.avail_out))
                    ) {
                      E = U;
                      break a;
                    }
                  }
                  E =
                    ((y.insert = 0),
                    v === va
                      ? (u(y, !0), 0 === y.strm.avail_out ? ya : I)
                      : y.last_lit && (u(y, !1), 0 === y.strm.avail_out)
                        ? U
                        : id);
                }
              else if (3 === y.strategy)
                a: {
                  var H, L;
                  for (G = y.window; ; ) {
                    if (y.lookahead <= Pa) {
                      if ((r(y), y.lookahead <= Pa && v === oa)) {
                        E = U;
                        break a;
                      }
                      if (0 === y.lookahead) break;
                    }
                    if (
                      ((y.match_length = 0),
                      y.lookahead >= Fa &&
                        0 < y.strstart &&
                        ((L = y.strstart - 1),
                        (H = G[L]),
                        H === G[++L] && H === G[++L] && H === G[++L]))
                    ) {
                      for (
                        N = y.strstart + Pa;
                        H === G[++L] &&
                        H === G[++L] &&
                        H === G[++L] &&
                        H === G[++L] &&
                        H === G[++L] &&
                        H === G[++L] &&
                        H === G[++L] &&
                        H === G[++L] &&
                        L < N;

                      );
                      y.match_length = Pa - (N - L);
                      y.match_length > y.lookahead &&
                        (y.match_length = y.lookahead);
                    }
                    if (
                      (y.match_length >= Fa
                        ? ((E = sa._tr_tally(y, 1, y.match_length - Fa)),
                          (y.lookahead -= y.match_length),
                          (y.strstart += y.match_length),
                          (y.match_length = 0))
                        : ((E = sa._tr_tally(y, 0, y.window[y.strstart])),
                          y.lookahead--,
                          y.strstart++),
                      E && (u(y, !1), 0 === y.strm.avail_out))
                    ) {
                      E = U;
                      break a;
                    }
                  }
                  E =
                    ((y.insert = 0),
                    v === va
                      ? (u(y, !0), 0 === y.strm.avail_out ? ya : I)
                      : y.last_lit && (u(y, !1), 0 === y.strm.avail_out)
                        ? U
                        : id);
                }
              else E = vb[y.level].func(y, v);
              if (
                ((E !== ya && E !== I) || (y.status = 666), E === U || E === ya)
              )
                return (0 === h.avail_out && (y.last_flush = -1), Xa);
              if (
                E === id &&
                (1 === v
                  ? sa._tr_align(y)
                  : 5 !== v &&
                    (sa._tr_stored_block(y, 0, 0, !1),
                    3 === v &&
                      (O(y.head),
                      0 === y.lookahead &&
                        ((y.strstart = 0),
                        (y.block_start = 0),
                        (y.insert = 0)))),
                V(h),
                0 === h.avail_out)
              )
                return ((y.last_flush = -1), Xa);
            }
            return v !== va
              ? Xa
              : 0 >= y.wrap
                ? 1
                : (2 === y.wrap
                    ? (W(y, 255 & h.adler),
                      W(y, (h.adler >> 8) & 255),
                      W(y, (h.adler >> 16) & 255),
                      W(y, (h.adler >> 24) & 255),
                      W(y, 255 & h.total_in),
                      W(y, (h.total_in >> 8) & 255),
                      W(y, (h.total_in >> 16) & 255),
                      W(y, (h.total_in >> 24) & 255))
                    : (m(y, h.adler >>> 16), m(y, 65535 & h.adler)),
                  V(h),
                  0 < y.wrap && (y.wrap = -y.wrap),
                  0 !== y.pending ? Xa : 1);
          };
          H.deflateEnd = function (h) {
            var m;
            return h && h.state
              ? ((m = h.state.status),
                m !== la &&
                69 !== m &&
                73 !== m &&
                91 !== m &&
                103 !== m &&
                m !== S &&
                666 !== m
                  ? F(h, ca)
                  : ((h.state = null), m === S ? F(h, -3) : Xa))
              : ca;
          };
          H.deflateSetDictionary = function (h, m) {
            var u, v, z;
            var D = m.length;
            if (
              !h ||
              !h.state ||
              ((u = h.state),
              (v = u.wrap),
              2 === v || (1 === v && u.status !== la) || u.lookahead)
            )
              return ca;
            1 === v && (h.adler = qb(h.adler, m, D, 0));
            u.wrap = 0;
            D >= u.w_size &&
              (0 === v &&
                (O(u.head),
                (u.strstart = 0),
                (u.block_start = 0),
                (u.insert = 0)),
              (z = new $a.Buf8(u.w_size)),
              $a.arraySet(z, m, D - u.w_size, u.w_size, 0),
              (m = z),
              (D = u.w_size));
            z = h.avail_in;
            var G = h.next_in;
            var F = h.input;
            h.avail_in = D;
            h.next_in = 0;
            h.input = m;
            for (r(u); u.lookahead >= Fa; ) {
              m = u.strstart;
              D = u.lookahead - (Fa - 1);
              do
                ((u.ins_h =
                  ((u.ins_h << u.hash_shift) ^ u.window[m + Fa - 1]) &
                  u.hash_mask),
                  (u.prev[m & u.w_mask] = u.head[u.ins_h]),
                  (u.head[u.ins_h] = m),
                  m++);
              while (--D);
              u.strstart = m;
              u.lookahead = Fa - 1;
              r(u);
            }
            return (
              (u.strstart += u.lookahead),
              (u.block_start = u.strstart),
              (u.insert = u.lookahead),
              (u.lookahead = 0),
              (u.match_length = u.prev_length = Fa - 1),
              (u.match_available = 0),
              (h.next_in = G),
              (h.input = F),
              (h.avail_in = z),
              (u.wrap = v),
              Xa
            );
          };
          H.deflateInfo = 'pako deflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './messages': 13,
          './trees': 14,
        },
      ],
      9: [
        function (v, z, H) {
          z.exports = function () {
            this.os = this.xflags = this.time = this.text = 0;
            this.extra = null;
            this.extra_len = 0;
            this.comment = this.name = '';
            this.hcrc = 0;
            this.done = !1;
          };
        },
        {},
      ],
      10: [
        function (v, z, H) {
          z.exports = function (v, z) {
            var F, u, H;
            var m = v.state;
            var h = v.next_in;
            var r = v.input;
            var L = h + (v.avail_in - 5);
            var E = v.next_out;
            var O = v.output;
            z = E - (z - v.avail_out);
            var qa = E + (v.avail_out - 257);
            var Gb = m.dmax;
            var Hb = m.wsize;
            var Kb = m.whave;
            var $a = m.wnext;
            var sa = m.window;
            var qb = m.hold;
            var ra = m.bits;
            var ub = m.lencode;
            var oa = m.distcode;
            var va = (1 << m.lenbits) - 1;
            var Xa = (1 << m.distbits) - 1;
            a: do {
              15 > ra &&
                ((qb += r[h++] << ra),
                (ra += 8),
                (qb += r[h++] << ra),
                (ra += 8));
              var ca = ub[qb & va];
              b: for (;;) {
                if (
                  ((F = ca >>> 24),
                  (qb >>>= F),
                  (ra -= F),
                  (F = (ca >>> 16) & 255),
                  0 === F)
                )
                  O[E++] = 65535 & ca;
                else {
                  if (!(16 & F)) {
                    if (0 === (64 & F)) {
                      ca = ub[(65535 & ca) + (qb & ((1 << F) - 1))];
                      continue b;
                    }
                    if (32 & F) {
                      m.mode = 12;
                      break a;
                    }
                    v.msg = 'invalid literal/length code';
                    m.mode = 30;
                    break a;
                  }
                  var Aa = 65535 & ca;
                  (F &= 15) &&
                    (ra < F && ((qb += r[h++] << ra), (ra += 8)),
                    (Aa += qb & ((1 << F) - 1)),
                    (qb >>>= F),
                    (ra -= F));
                  15 > ra &&
                    ((qb += r[h++] << ra),
                    (ra += 8),
                    (qb += r[h++] << ra),
                    (ra += 8));
                  ca = oa[qb & Xa];
                  c: for (;;) {
                    if (
                      ((F = ca >>> 24),
                      (qb >>>= F),
                      (ra -= F),
                      (F = (ca >>> 16) & 255),
                      !(16 & F))
                    ) {
                      if (0 === (64 & F)) {
                        ca = oa[(65535 & ca) + (qb & ((1 << F) - 1))];
                        continue c;
                      }
                      v.msg = 'invalid distance code';
                      m.mode = 30;
                      break a;
                    }
                    if (
                      ((u = 65535 & ca),
                      (F &= 15),
                      ra < F &&
                        ((qb += r[h++] << ra),
                        (ra += 8),
                        ra < F && ((qb += r[h++] << ra), (ra += 8))),
                      (u += qb & ((1 << F) - 1)),
                      u > Gb)
                    ) {
                      v.msg = 'invalid distance too far back';
                      m.mode = 30;
                      break a;
                    }
                    if (((qb >>>= F), (ra -= F), (F = E - z), u > F)) {
                      if (((F = u - F), F > Kb && m.sane)) {
                        v.msg = 'invalid distance too far back';
                        m.mode = 30;
                        break a;
                      }
                      if (((ca = 0), (H = sa), 0 === $a)) {
                        if (((ca += Hb - F), F < Aa)) {
                          Aa -= F;
                          do O[E++] = sa[ca++];
                          while (--F);
                          ca = E - u;
                          H = O;
                        }
                      } else if ($a < F) {
                        if (((ca += Hb + $a - F), (F -= $a), F < Aa)) {
                          Aa -= F;
                          do O[E++] = sa[ca++];
                          while (--F);
                          if (((ca = 0), $a < Aa)) {
                            F = $a;
                            Aa -= F;
                            do O[E++] = sa[ca++];
                            while (--F);
                            ca = E - u;
                            H = O;
                          }
                        }
                      } else if (((ca += $a - F), F < Aa)) {
                        Aa -= F;
                        do O[E++] = sa[ca++];
                        while (--F);
                        ca = E - u;
                        H = O;
                      }
                      for (; 2 < Aa; )
                        ((O[E++] = H[ca++]),
                          (O[E++] = H[ca++]),
                          (O[E++] = H[ca++]),
                          (Aa -= 3));
                      Aa && ((O[E++] = H[ca++]), 1 < Aa && (O[E++] = H[ca++]));
                    } else {
                      ca = E - u;
                      do
                        ((O[E++] = O[ca++]),
                          (O[E++] = O[ca++]),
                          (O[E++] = O[ca++]),
                          (Aa -= 3));
                      while (2 < Aa);
                      Aa && ((O[E++] = O[ca++]), 1 < Aa && (O[E++] = O[ca++]));
                    }
                    break;
                  }
                }
                break;
              }
            } while (h < L && E < qa);
            Aa = ra >> 3;
            h -= Aa;
            ra -= Aa << 3;
            v.next_in = h;
            v.next_out = E;
            v.avail_in = h < L ? 5 + (L - h) : 5 - (h - L);
            v.avail_out = E < qa ? 257 + (qa - E) : 257 - (E - qa);
            m.hold = qb & ((1 << ra) - 1);
            m.bits = ra;
          };
        },
        {},
      ],
      11: [
        function (v, z, H) {
          function F(h) {
            return (
              ((h >>> 24) & 255) +
              ((h >>> 8) & 65280) +
              ((65280 & h) << 8) +
              ((255 & h) << 24)
            );
          }
          function O() {
            this.mode = 0;
            this.last = !1;
            this.wrap = 0;
            this.havedict = !1;
            this.total = this.check = this.dmax = this.flags = 0;
            this.head = null;
            this.wnext = this.whave = this.wsize = this.wbits = 0;
            this.window = null;
            this.extra = this.offset = this.length = this.bits = this.hold = 0;
            this.distcode = this.lencode = null;
            this.have =
              this.ndist =
              this.nlen =
              this.ncode =
              this.distbits =
              this.lenbits =
                0;
            this.next = null;
            this.lens = new E.Buf16(320);
            this.work = new E.Buf16(288);
            this.distdyn = this.lendyn = null;
            this.was = this.back = this.sane = 0;
          }
          function V(h) {
            var m;
            return h && h.state
              ? ((m = h.state),
                (h.total_in = h.total_out = m.total = 0),
                (h.msg = ''),
                m.wrap && (h.adler = 1 & m.wrap),
                (m.mode = sa),
                (m.last = 0),
                (m.havedict = 0),
                (m.dmax = 32768),
                (m.head = null),
                (m.hold = 0),
                (m.bits = 0),
                (m.lencode = m.lendyn = new E.Buf32(qb)),
                (m.distcode = m.distdyn = new E.Buf32(ra)),
                (m.sane = 1),
                (m.back = -1),
                Kb)
              : $a;
          }
          function u(h) {
            var m;
            return h && h.state
              ? ((m = h.state),
                (m.wsize = 0),
                (m.whave = 0),
                (m.wnext = 0),
                V(h))
              : $a;
          }
          function W(h, m) {
            var r, v;
            return h && h.state
              ? ((v = h.state),
                0 > m
                  ? ((r = 0), (m = -m))
                  : ((r = (m >> 4) + 1), 48 > m && (m &= 15)),
                m && (8 > m || 15 < m)
                  ? $a
                  : (null !== v.window && v.wbits !== m && (v.window = null),
                    (v.wrap = r),
                    (v.wbits = m),
                    u(h)))
              : $a;
          }
          function m(h, m) {
            var r, u;
            return h
              ? ((u = new O()),
                (h.state = u),
                (u.window = null),
                (r = W(h, m)),
                r !== Kb && (h.state = null),
                r)
              : $a;
          }
          function h(h, m, r, u) {
            var v;
            h = h.state;
            return (
              null === h.window &&
                ((h.wsize = 1 << h.wbits),
                (h.wnext = 0),
                (h.whave = 0),
                (h.window = new E.Buf8(h.wsize))),
              u >= h.wsize
                ? (E.arraySet(h.window, m, r - h.wsize, h.wsize, 0),
                  (h.wnext = 0),
                  (h.whave = h.wsize))
                : ((v = h.wsize - h.wnext),
                  v > u && (v = u),
                  E.arraySet(h.window, m, r - u, v, h.wnext),
                  (u -= v),
                  u
                    ? (E.arraySet(h.window, m, r - u, u, 0),
                      (h.wnext = u),
                      (h.whave = h.wsize))
                    : ((h.wnext += v),
                      h.wnext === h.wsize && (h.wnext = 0),
                      h.whave < h.wsize && (h.whave += v))),
              0
            );
          }
          var r,
            L,
            E = v('../utils/common'),
            Ya = v('./adler32'),
            qa = v('./crc32'),
            Gb = v('./inffast'),
            Hb = v('./inftrees'),
            Kb = 0,
            $a = -2,
            sa = 1,
            qb = 852,
            ra = 592,
            ub = !0;
          H.inflateReset = u;
          H.inflateReset2 = W;
          H.inflateResetKeep = V;
          H.inflateInit = function (h) {
            return m(h, 15);
          };
          H.inflateInit2 = m;
          H.inflate = function (m, u) {
            var v,
              z,
              H,
              O,
              T,
              V,
              oa,
              W = 0,
              Ba = new E.Buf8(4),
              R = [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];
            if (!m || !m.state || !m.output || (!m.input && 0 !== m.avail_in))
              return $a;
            var D = m.state;
            12 === D.mode && (D.mode = 13);
            var va = m.next_out;
            var ra = m.output;
            var Fa = m.avail_out;
            var Pa = m.next_in;
            var Qa = m.input;
            var la = m.avail_in;
            var S = D.hold;
            var U = D.bits;
            var qb = la;
            var ya = Fa;
            var I = Kb;
            a: for (;;)
              switch (D.mode) {
                case sa:
                  if (0 === D.wrap) {
                    D.mode = 13;
                    break;
                  }
                  for (; 16 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  if (2 & D.wrap && 35615 === S) {
                    D.check = 0;
                    Ba[0] = 255 & S;
                    Ba[1] = (S >>> 8) & 255;
                    D.check = qa(D.check, Ba, 2, 0);
                    U = S = 0;
                    D.mode = 2;
                    break;
                  }
                  if (
                    ((D.flags = 0),
                    D.head && (D.head.done = !1),
                    !(1 & D.wrap) || (((255 & S) << 8) + (S >> 8)) % 31)
                  ) {
                    m.msg = 'incorrect header check';
                    D.mode = 30;
                    break;
                  }
                  if (8 !== (15 & S)) {
                    m.msg = 'unknown compression method';
                    D.mode = 30;
                    break;
                  }
                  if (((S >>>= 4), (U -= 4), (V = (15 & S) + 8), 0 === D.wbits))
                    D.wbits = V;
                  else if (V > D.wbits) {
                    m.msg = 'invalid window size';
                    D.mode = 30;
                    break;
                  }
                  D.dmax = 1 << V;
                  m.adler = D.check = 1;
                  D.mode = 512 & S ? 10 : 12;
                  U = S = 0;
                  break;
                case 2:
                  for (; 16 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  if (((D.flags = S), 8 !== (255 & D.flags))) {
                    m.msg = 'unknown compression method';
                    D.mode = 30;
                    break;
                  }
                  if (57344 & D.flags) {
                    m.msg = 'unknown header flags set';
                    D.mode = 30;
                    break;
                  }
                  D.head && (D.head.text = (S >> 8) & 1);
                  512 & D.flags &&
                    ((Ba[0] = 255 & S),
                    (Ba[1] = (S >>> 8) & 255),
                    (D.check = qa(D.check, Ba, 2, 0)));
                  U = S = 0;
                  D.mode = 3;
                case 3:
                  for (; 32 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  D.head && (D.head.time = S);
                  512 & D.flags &&
                    ((Ba[0] = 255 & S),
                    (Ba[1] = (S >>> 8) & 255),
                    (Ba[2] = (S >>> 16) & 255),
                    (Ba[3] = (S >>> 24) & 255),
                    (D.check = qa(D.check, Ba, 4, 0)));
                  U = S = 0;
                  D.mode = 4;
                case 4:
                  for (; 16 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  D.head && ((D.head.xflags = 255 & S), (D.head.os = S >> 8));
                  512 & D.flags &&
                    ((Ba[0] = 255 & S),
                    (Ba[1] = (S >>> 8) & 255),
                    (D.check = qa(D.check, Ba, 2, 0)));
                  U = S = 0;
                  D.mode = 5;
                case 5:
                  if (1024 & D.flags) {
                    for (; 16 > U; ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    D.length = S;
                    D.head && (D.head.extra_len = S);
                    512 & D.flags &&
                      ((Ba[0] = 255 & S),
                      (Ba[1] = (S >>> 8) & 255),
                      (D.check = qa(D.check, Ba, 2, 0)));
                    U = S = 0;
                  } else D.head && (D.head.extra = null);
                  D.mode = 6;
                case 6:
                  if (
                    1024 & D.flags &&
                    ((v = D.length),
                    v > la && (v = la),
                    v &&
                      (D.head &&
                        ((V = D.head.extra_len - D.length),
                        D.head.extra ||
                          (D.head.extra = Array(D.head.extra_len)),
                        E.arraySet(D.head.extra, Qa, Pa, v, V)),
                      512 & D.flags && (D.check = qa(D.check, Qa, v, Pa)),
                      (la -= v),
                      (Pa += v),
                      (D.length -= v)),
                    D.length)
                  )
                    break a;
                  D.length = 0;
                  D.mode = 7;
                case 7:
                  if (2048 & D.flags) {
                    if (0 === la) break a;
                    v = 0;
                    do
                      ((V = Qa[Pa + v++]),
                        D.head &&
                          V &&
                          65536 > D.length &&
                          (D.head.name += String.fromCharCode(V)));
                    while (V && v < la);
                    if (
                      (512 & D.flags && (D.check = qa(D.check, Qa, v, Pa)),
                      (la -= v),
                      (Pa += v),
                      V)
                    )
                      break a;
                  } else D.head && (D.head.name = null);
                  D.length = 0;
                  D.mode = 8;
                case 8:
                  if (4096 & D.flags) {
                    if (0 === la) break a;
                    v = 0;
                    do
                      ((V = Qa[Pa + v++]),
                        D.head &&
                          V &&
                          65536 > D.length &&
                          (D.head.comment += String.fromCharCode(V)));
                    while (V && v < la);
                    if (
                      (512 & D.flags && (D.check = qa(D.check, Qa, v, Pa)),
                      (la -= v),
                      (Pa += v),
                      V)
                    )
                      break a;
                  } else D.head && (D.head.comment = null);
                  D.mode = 9;
                case 9:
                  if (512 & D.flags) {
                    for (; 16 > U; ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    if (S !== (65535 & D.check)) {
                      m.msg = 'header crc mismatch';
                      D.mode = 30;
                      break;
                    }
                    U = S = 0;
                  }
                  D.head &&
                    ((D.head.hcrc = (D.flags >> 9) & 1), (D.head.done = !0));
                  m.adler = D.check = 0;
                  D.mode = 12;
                  break;
                case 10:
                  for (; 32 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  m.adler = D.check = F(S);
                  U = S = 0;
                  D.mode = 11;
                case 11:
                  if (0 === D.havedict)
                    return (
                      (m.next_out = va),
                      (m.avail_out = Fa),
                      (m.next_in = Pa),
                      (m.avail_in = la),
                      (D.hold = S),
                      (D.bits = U),
                      2
                    );
                  m.adler = D.check = 1;
                  D.mode = 12;
                case 12:
                  if (5 === u || 6 === u) break a;
                case 13:
                  if (D.last) {
                    S >>>= 7 & U;
                    U -= 7 & U;
                    D.mode = 27;
                    break;
                  }
                  for (; 3 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  switch (((D.last = 1 & S), (S >>>= 1), --U, 3 & S)) {
                    case 0:
                      D.mode = 14;
                      break;
                    case 1:
                      var vb = D;
                      if (ub) {
                        r = new E.Buf32(512);
                        L = new E.Buf32(32);
                        for (H = 0; 144 > H; ) vb.lens[H++] = 8;
                        for (; 256 > H; ) vb.lens[H++] = 9;
                        for (; 280 > H; ) vb.lens[H++] = 7;
                        for (; 288 > H; ) vb.lens[H++] = 8;
                        Hb(1, vb.lens, 0, 288, r, 0, vb.work, { bits: 9 });
                        for (H = 0; 32 > H; ) vb.lens[H++] = 5;
                        Hb(2, vb.lens, 0, 32, L, 0, vb.work, { bits: 5 });
                        ub = !1;
                      }
                      vb.lencode = r;
                      vb.lenbits = 9;
                      vb.distcode = L;
                      vb.distbits = 5;
                      if (((D.mode = 20), 6 === u)) {
                        S >>>= 2;
                        U -= 2;
                        break a;
                      }
                      break;
                    case 2:
                      D.mode = 17;
                      break;
                    case 3:
                      ((m.msg = 'invalid block type'), (D.mode = 30));
                  }
                  S >>>= 2;
                  U -= 2;
                  break;
                case 14:
                  S >>>= 7 & U;
                  for (U -= 7 & U; 32 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  if ((65535 & S) !== ((S >>> 16) ^ 65535)) {
                    m.msg = 'invalid stored block lengths';
                    D.mode = 30;
                    break;
                  }
                  if (
                    ((D.length = 65535 & S),
                    (S = 0),
                    (U = 0),
                    (D.mode = 15),
                    6 === u)
                  )
                    break a;
                case 15:
                  D.mode = 16;
                case 16:
                  if ((v = D.length)) {
                    if ((v > la && (v = la), v > Fa && (v = Fa), 0 === v))
                      break a;
                    E.arraySet(ra, Qa, Pa, v, va);
                    la -= v;
                    Pa += v;
                    Fa -= v;
                    va += v;
                    D.length -= v;
                    break;
                  }
                  D.mode = 12;
                  break;
                case 17:
                  for (; 14 > U; ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  if (
                    ((D.nlen = (31 & S) + 257),
                    (S >>>= 5),
                    (U -= 5),
                    (D.ndist = (31 & S) + 1),
                    (S >>>= 5),
                    (U -= 5),
                    (D.ncode = (15 & S) + 4),
                    (S >>>= 4),
                    (U -= 4),
                    286 < D.nlen || 30 < D.ndist)
                  ) {
                    m.msg = 'too many length or distance symbols';
                    D.mode = 30;
                    break;
                  }
                  D.have = 0;
                  D.mode = 18;
                case 18:
                  for (; D.have < D.ncode; ) {
                    for (; 3 > U; ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    D.lens[R[D.have++]] = 7 & S;
                    S >>>= 3;
                    U -= 3;
                  }
                  for (; 19 > D.have; ) D.lens[R[D.have++]] = 0;
                  if (
                    ((D.lencode = D.lendyn),
                    (D.lenbits = 7),
                    (oa = { bits: D.lenbits }),
                    (I = Hb(0, D.lens, 0, 19, D.lencode, 0, D.work, oa)),
                    (D.lenbits = oa.bits),
                    I)
                  ) {
                    m.msg = 'invalid code lengths set';
                    D.mode = 30;
                    break;
                  }
                  D.have = 0;
                  D.mode = 19;
                case 19:
                  for (; D.have < D.nlen + D.ndist; ) {
                    for (
                      ;
                      (W = D.lencode[S & ((1 << D.lenbits) - 1)]),
                        (O = W >>> 24),
                        (vb = 65535 & W),
                        !(O <= U);

                    ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    if (16 > vb)
                      ((S >>>= O), (U -= O), (D.lens[D.have++] = vb));
                    else {
                      if (16 === vb) {
                        for (H = O + 2; U < H; ) {
                          if (0 === la) break a;
                          la--;
                          S += Qa[Pa++] << U;
                          U += 8;
                        }
                        if (((S >>>= O), (U -= O), 0 === D.have)) {
                          m.msg = 'invalid bit length repeat';
                          D.mode = 30;
                          break;
                        }
                        V = D.lens[D.have - 1];
                        v = 3 + (3 & S);
                        S >>>= 2;
                        U -= 2;
                      } else if (17 === vb) {
                        for (H = O + 3; U < H; ) {
                          if (0 === la) break a;
                          la--;
                          S += Qa[Pa++] << U;
                          U += 8;
                        }
                        S >>>= O;
                        U -= O;
                        V = 0;
                        v = 3 + (7 & S);
                        S >>>= 3;
                        U -= 3;
                      } else {
                        for (H = O + 7; U < H; ) {
                          if (0 === la) break a;
                          la--;
                          S += Qa[Pa++] << U;
                          U += 8;
                        }
                        S >>>= O;
                        U -= O;
                        V = 0;
                        v = 11 + (127 & S);
                        S >>>= 7;
                        U -= 7;
                      }
                      if (D.have + v > D.nlen + D.ndist) {
                        m.msg = 'invalid bit length repeat';
                        D.mode = 30;
                        break;
                      }
                      for (; v--; ) D.lens[D.have++] = V;
                    }
                  }
                  if (30 === D.mode) break;
                  if (0 === D.lens[256]) {
                    m.msg = 'invalid code -- missing end-of-block';
                    D.mode = 30;
                    break;
                  }
                  if (
                    ((D.lenbits = 9),
                    (oa = { bits: D.lenbits }),
                    (I = Hb(1, D.lens, 0, D.nlen, D.lencode, 0, D.work, oa)),
                    (D.lenbits = oa.bits),
                    I)
                  ) {
                    m.msg = 'invalid literal/lengths set';
                    D.mode = 30;
                    break;
                  }
                  if (
                    ((D.distbits = 6),
                    (D.distcode = D.distdyn),
                    (oa = { bits: D.distbits }),
                    (I = Hb(
                      2,
                      D.lens,
                      D.nlen,
                      D.ndist,
                      D.distcode,
                      0,
                      D.work,
                      oa,
                    )),
                    (D.distbits = oa.bits),
                    I)
                  ) {
                    m.msg = 'invalid distances set';
                    D.mode = 30;
                    break;
                  }
                  if (((D.mode = 20), 6 === u)) break a;
                case 20:
                  D.mode = 21;
                case 21:
                  if (6 <= la && 258 <= Fa) {
                    m.next_out = va;
                    m.avail_out = Fa;
                    m.next_in = Pa;
                    m.avail_in = la;
                    D.hold = S;
                    D.bits = U;
                    Gb(m, ya);
                    va = m.next_out;
                    ra = m.output;
                    Fa = m.avail_out;
                    Pa = m.next_in;
                    Qa = m.input;
                    la = m.avail_in;
                    S = D.hold;
                    U = D.bits;
                    12 === D.mode && (D.back = -1);
                    break;
                  }
                  for (
                    D.back = 0;
                    (W = D.lencode[S & ((1 << D.lenbits) - 1)]),
                      (O = W >>> 24),
                      (H = (W >>> 16) & 255),
                      (vb = 65535 & W),
                      !(O <= U);

                  ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  if (H && 0 === (240 & H)) {
                    var G = O;
                    var P = H;
                    for (
                      T = vb;
                      (W = D.lencode[T + ((S & ((1 << (G + P)) - 1)) >> G)]),
                        (O = W >>> 24),
                        (H = (W >>> 16) & 255),
                        (vb = 65535 & W),
                        !(G + O <= U);

                    ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    S >>>= G;
                    U -= G;
                    D.back += G;
                  }
                  if (
                    ((S >>>= O),
                    (U -= O),
                    (D.back += O),
                    (D.length = vb),
                    0 === H)
                  ) {
                    D.mode = 26;
                    break;
                  }
                  if (32 & H) {
                    D.back = -1;
                    D.mode = 12;
                    break;
                  }
                  if (64 & H) {
                    m.msg = 'invalid literal/length code';
                    D.mode = 30;
                    break;
                  }
                  D.extra = 15 & H;
                  D.mode = 22;
                case 22:
                  if (D.extra) {
                    for (H = D.extra; U < H; ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    D.length += S & ((1 << D.extra) - 1);
                    S >>>= D.extra;
                    U -= D.extra;
                    D.back += D.extra;
                  }
                  D.was = D.length;
                  D.mode = 23;
                case 23:
                  for (
                    ;
                    (W = D.distcode[S & ((1 << D.distbits) - 1)]),
                      (O = W >>> 24),
                      (H = (W >>> 16) & 255),
                      (vb = 65535 & W),
                      !(O <= U);

                  ) {
                    if (0 === la) break a;
                    la--;
                    S += Qa[Pa++] << U;
                    U += 8;
                  }
                  if (0 === (240 & H)) {
                    G = O;
                    P = H;
                    for (
                      T = vb;
                      (W = D.distcode[T + ((S & ((1 << (G + P)) - 1)) >> G)]),
                        (O = W >>> 24),
                        (H = (W >>> 16) & 255),
                        (vb = 65535 & W),
                        !(G + O <= U);

                    ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    S >>>= G;
                    U -= G;
                    D.back += G;
                  }
                  if (((S >>>= O), (U -= O), (D.back += O), 64 & H)) {
                    m.msg = 'invalid distance code';
                    D.mode = 30;
                    break;
                  }
                  D.offset = vb;
                  D.extra = 15 & H;
                  D.mode = 24;
                case 24:
                  if (D.extra) {
                    for (H = D.extra; U < H; ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    D.offset += S & ((1 << D.extra) - 1);
                    S >>>= D.extra;
                    U -= D.extra;
                    D.back += D.extra;
                  }
                  if (D.offset > D.dmax) {
                    m.msg = 'invalid distance too far back';
                    D.mode = 30;
                    break;
                  }
                  D.mode = 25;
                case 25:
                  if (0 === Fa) break a;
                  if (((v = ya - Fa), D.offset > v)) {
                    if (((v = D.offset - v), v > D.whave && D.sane)) {
                      m.msg = 'invalid distance too far back';
                      D.mode = 30;
                      break;
                    }
                    v > D.wnext
                      ? ((v -= D.wnext), (z = D.wsize - v))
                      : (z = D.wnext - v);
                    v > D.length && (v = D.length);
                    H = D.window;
                  } else ((H = ra), (z = va - D.offset), (v = D.length));
                  v > Fa && (v = Fa);
                  Fa -= v;
                  D.length -= v;
                  do ra[va++] = H[z++];
                  while (--v);
                  0 === D.length && (D.mode = 21);
                  break;
                case 26:
                  if (0 === Fa) break a;
                  ra[va++] = D.length;
                  Fa--;
                  D.mode = 21;
                  break;
                case 27:
                  if (D.wrap) {
                    for (; 32 > U; ) {
                      if (0 === la) break a;
                      la--;
                      S |= Qa[Pa++] << U;
                      U += 8;
                    }
                    if (
                      ((ya -= Fa),
                      (m.total_out += ya),
                      (D.total += ya),
                      ya &&
                        (m.adler = D.check =
                          D.flags
                            ? qa(D.check, ra, ya, va - ya)
                            : Ya(D.check, ra, ya, va - ya)),
                      (ya = Fa),
                      (D.flags ? S : F(S)) !== D.check)
                    ) {
                      m.msg = 'incorrect data check';
                      D.mode = 30;
                      break;
                    }
                    U = S = 0;
                  }
                  D.mode = 28;
                case 28:
                  if (D.wrap && D.flags) {
                    for (; 32 > U; ) {
                      if (0 === la) break a;
                      la--;
                      S += Qa[Pa++] << U;
                      U += 8;
                    }
                    if (S !== (4294967295 & D.total)) {
                      m.msg = 'incorrect length check';
                      D.mode = 30;
                      break;
                    }
                    U = S = 0;
                  }
                  D.mode = 29;
                case 29:
                  I = 1;
                  break a;
                case 30:
                  I = -3;
                  break a;
                case 31:
                  return -4;
                default:
                  return $a;
              }
            return (
              (m.next_out = va),
              (m.avail_out = Fa),
              (m.next_in = Pa),
              (m.avail_in = la),
              (D.hold = S),
              (D.bits = U),
              (D.wsize ||
                (ya !== m.avail_out &&
                  30 > D.mode &&
                  (27 > D.mode || 4 !== u))) &&
              h(m, m.output, m.next_out, ya - m.avail_out)
                ? ((D.mode = 31), -4)
                : ((qb -= m.avail_in),
                  (ya -= m.avail_out),
                  (m.total_in += qb),
                  (m.total_out += ya),
                  (D.total += ya),
                  D.wrap &&
                    ya &&
                    (m.adler = D.check =
                      D.flags
                        ? qa(D.check, ra, ya, m.next_out - ya)
                        : Ya(D.check, ra, ya, m.next_out - ya)),
                  (m.data_type =
                    D.bits +
                    (D.last ? 64 : 0) +
                    (12 === D.mode ? 128 : 0) +
                    (20 === D.mode || 15 === D.mode ? 256 : 0)),
                  ((0 === qb && 0 === ya) || 4 === u) && I === Kb && (I = -5),
                  I)
            );
          };
          H.inflateEnd = function (h) {
            if (!h || !h.state) return $a;
            var m = h.state;
            return (m.window && (m.window = null), (h.state = null), Kb);
          };
          H.inflateGetHeader = function (h, m) {
            var r;
            return h && h.state
              ? ((r = h.state),
                0 === (2 & r.wrap) ? $a : ((r.head = m), (m.done = !1), Kb))
              : $a;
          };
          H.inflateSetDictionary = function (m, r) {
            var u,
              v,
              z = r.length;
            return m && m.state
              ? ((u = m.state),
                0 !== u.wrap && 11 !== u.mode
                  ? $a
                  : 11 === u.mode &&
                      ((v = 1), (v = Ya(v, r, z, 0)), v !== u.check)
                    ? -3
                    : h(m, r, z, z)
                      ? ((u.mode = 31), -4)
                      : ((u.havedict = 1), Kb))
              : $a;
          };
          H.inflateInfo = 'pako inflate (from Nodeca project)';
        },
        {
          '../utils/common': 3,
          './adler32': 5,
          './crc32': 7,
          './inffast': 10,
          './inftrees': 12,
        },
      ],
      12: [
        function (v, z, H) {
          var F = v('../utils/common'),
            O = [
              3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43,
              51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
            ],
            V = [
              16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
              19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
            ],
            u = [
              1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257,
              385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289,
              16385, 24577, 0, 0,
            ],
            W = [
              16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
              23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
            ];
          z.exports = function (m, h, r, v, z, H, qa, Gb) {
            var E,
              L,
              $a,
              sa,
              Ya,
              ra,
              ub = Gb.bits,
              oa,
              va,
              Xa,
              ca,
              Aa,
              jb = 0,
              T,
              ib = null,
              Gc = 0,
              vc = new F.Buf16(16);
            var Ba = new F.Buf16(16);
            var R = null,
              D = 0;
            for (oa = 0; 15 >= oa; oa++) vc[oa] = 0;
            for (va = 0; va < v; va++) vc[h[r + va]]++;
            var yb = ub;
            for (Xa = 15; 1 <= Xa && 0 === vc[Xa]; Xa--);
            if ((yb > Xa && (yb = Xa), 0 === Xa))
              return (
                (z[H++] = 20971520),
                (z[H++] = 20971520),
                (Gb.bits = 1),
                0
              );
            for (ub = 1; ub < Xa && 0 === vc[ub]; ub++);
            yb < ub && (yb = ub);
            for (oa = E = 1; 15 >= oa; oa++)
              if (((E <<= 1), (E -= vc[oa]), 0 > E)) return -1;
            if (0 < E && (0 === m || 1 !== Xa)) return -1;
            Ba[1] = 0;
            for (oa = 1; 15 > oa; oa++) Ba[oa + 1] = Ba[oa] + vc[oa];
            for (va = 0; va < v; va++)
              0 !== h[r + va] && (qa[Ba[h[r + va]]++] = va);
            if (
              (0 === m
                ? ((ib = R = qa), (sa = 19))
                : 1 === m
                  ? ((ib = O), (Gc -= 257), (R = V), (D -= 257), (sa = 256))
                  : ((ib = u), (R = W), (sa = -1)),
              (T = 0),
              (va = 0),
              (oa = ub),
              (Ba = H),
              (ca = yb),
              (Aa = 0),
              ($a = -1),
              (jb = 1 << yb),
              (v = jb - 1),
              (1 === m && 852 < jb) || (2 === m && 592 < jb))
            )
              return 1;
            for (var cb = 0; ; ) {
              cb++;
              var Fa = oa - Aa;
              qa[va] < sa
                ? ((Ya = 0), (ra = qa[va]))
                : qa[va] > sa
                  ? ((Ya = R[D + qa[va]]), (ra = ib[Gc + qa[va]]))
                  : ((Ya = 96), (ra = 0));
              E = 1 << (oa - Aa);
              ub = L = 1 << ca;
              do
                ((L -= E),
                  (z[Ba + (T >> Aa) + L] = (Fa << 24) | (Ya << 16) | ra | 0));
              while (0 !== L);
              for (E = 1 << (oa - 1); T & E; ) E >>= 1;
              if (
                (0 !== E ? ((T &= E - 1), (T += E)) : (T = 0),
                va++,
                0 === --vc[oa])
              ) {
                if (oa === Xa) break;
                oa = h[r + qa[va]];
              }
              if (oa > yb && (T & v) !== $a) {
                0 === Aa && (Aa = yb);
                Ba += ub;
                ca = oa - Aa;
                for (
                  E = 1 << ca;
                  ca + Aa < Xa && ((E -= vc[ca + Aa]), !(0 >= E));

                )
                  (ca++, (E <<= 1));
                if (
                  ((jb += 1 << ca),
                  (1 === m && 852 < jb) || (2 === m && 592 < jb))
                )
                  return 1;
                $a = T & v;
                z[$a] = (yb << 24) | (ca << 16) | (Ba - H) | 0;
              }
            }
            return (
              0 !== T && (z[Ba + T] = ((oa - Aa) << 24) | 4194304),
              (Gb.bits = yb),
              0
            );
          };
        },
        { '../utils/common': 3 },
      ],
      13: [
        function (v, z, H) {
          z.exports = {
            2: 'need dictionary',
            1: 'stream end',
            0: '',
            '-1': 'file error',
            '-2': 'stream error',
            '-3': 'data error',
            '-4': 'insufficient memory',
            '-5': 'buffer error',
            '-6': 'incompatible version',
          };
        },
        {},
      ],
      14: [
        function (v, z, H) {
          function F(h) {
            for (var m = h.length; 0 <= --m; ) h[m] = 0;
          }
          function O(h, m, r, u, v) {
            this.static_tree = h;
            this.extra_bits = m;
            this.extra_base = r;
            this.elems = u;
            this.max_length = v;
            this.has_stree = h && h.length;
          }
          function V(h, m) {
            this.dyn_tree = h;
            this.max_code = 0;
            this.stat_desc = m;
          }
          function u(h, m) {
            h.pending_buf[h.pending++] = 255 & m;
            h.pending_buf[h.pending++] = (m >>> 8) & 255;
          }
          function W(h, m, r) {
            h.bi_valid > Gc - r
              ? ((h.bi_buf |= (m << h.bi_valid) & 65535),
                u(h, h.bi_buf),
                (h.bi_buf = m >> (Gc - h.bi_valid)),
                (h.bi_valid += r - Gc))
              : ((h.bi_buf |= (m << h.bi_valid) & 65535), (h.bi_valid += r));
          }
          function m(h, m, r) {
            W(h, r[2 * m], r[2 * m + 1]);
          }
          function h(h, m) {
            var r = 0;
            do ((r |= 1 & h), (h >>>= 1), (r <<= 1));
            while (0 < --m);
            return r >>> 1;
          }
          function r(m, r, u) {
            var v,
              y = Array(ib + 1),
              z = 0;
            for (v = 1; v <= ib; v++) y[v] = z = (z + u[v - 1]) << 1;
            for (u = 0; u <= r; u++)
              ((v = m[2 * u + 1]), 0 !== v && (m[2 * u] = h(y[v]++, v)));
          }
          function L(h) {
            var m;
            for (m = 0; m < ca; m++) h.dyn_ltree[2 * m] = 0;
            for (m = 0; m < Aa; m++) h.dyn_dtree[2 * m] = 0;
            for (m = 0; m < jb; m++) h.bl_tree[2 * m] = 0;
            h.dyn_ltree[2 * vc] = 1;
            h.opt_len = h.static_len = 0;
            h.last_lit = h.matches = 0;
          }
          function E(h) {
            8 < h.bi_valid
              ? u(h, h.bi_buf)
              : 0 < h.bi_valid && (h.pending_buf[h.pending++] = h.bi_buf);
            h.bi_buf = 0;
            h.bi_valid = 0;
          }
          function Ya(h, m, r, u) {
            var v = 2 * m,
              y = 2 * r;
            return h[v] < h[y] || (h[v] === h[y] && u[m] <= u[r]);
          }
          function qa(h, m, r) {
            for (
              var u = h.heap[r], v = r << 1;
              v <= h.heap_len &&
              (v < h.heap_len &&
                Ya(m, h.heap[v + 1], h.heap[v], h.depth) &&
                v++,
              !Ya(m, u, h.heap[v], h.depth));

            )
              ((h.heap[r] = h.heap[v]), (r = v), (v <<= 1));
            h.heap[r] = u;
          }
          function Gb(h, r, u) {
            var v,
              y,
              z = 0;
            if (0 !== h.last_lit) {
              do {
                var D =
                  (h.pending_buf[h.d_buf + 2 * z] << 8) |
                  h.pending_buf[h.d_buf + 2 * z + 1];
                var F = h.pending_buf[h.l_buf + z];
                z++;
                0 === D
                  ? m(h, F, r)
                  : ((v = U[F]),
                    m(h, v + Xa + 1, r),
                    (y = yb[v]),
                    0 !== y && ((F -= id[v]), W(h, F, y)),
                    D--,
                    (v = 256 > D ? S[D] : S[256 + (D >>> 7)]),
                    m(h, v, u),
                    (y = cb[v]),
                    0 !== y && ((D -= ya[v]), W(h, D, y)));
              } while (z < h.last_lit);
            }
            m(h, vc, r);
          }
          function Hb(h, m) {
            var u,
              v = m.dyn_tree;
            var y = m.stat_desc.static_tree;
            var z = m.stat_desc.has_stree,
              D = m.stat_desc.elems,
              F = -1;
            h.heap_len = 0;
            h.heap_max = T;
            for (u = 0; u < D; u++)
              0 !== v[2 * u]
                ? ((h.heap[++h.heap_len] = F = u), (h.depth[u] = 0))
                : (v[2 * u + 1] = 0);
            for (; 2 > h.heap_len; ) {
              var G = (h.heap[++h.heap_len] = 2 > F ? ++F : 0);
              v[2 * G] = 1;
              h.depth[G] = 0;
              h.opt_len--;
              z && (h.static_len -= y[2 * G + 1]);
            }
            m.max_code = F;
            for (u = h.heap_len >> 1; 1 <= u; u--) qa(h, v, u);
            G = D;
            do
              ((u = h.heap[1]),
                (h.heap[1] = h.heap[h.heap_len--]),
                qa(h, v, 1),
                (y = h.heap[1]),
                (h.heap[--h.heap_max] = u),
                (h.heap[--h.heap_max] = y),
                (v[2 * G] = v[2 * u] + v[2 * y]),
                (h.depth[G] =
                  (h.depth[u] >= h.depth[y] ? h.depth[u] : h.depth[y]) + 1),
                (v[2 * u + 1] = v[2 * y + 1] = G),
                (h.heap[1] = G++),
                qa(h, v, 1));
            while (2 <= h.heap_len);
            h.heap[--h.heap_max] = h.heap[1];
            var E, N;
            u = m.dyn_tree;
            G = m.max_code;
            D = m.stat_desc.static_tree;
            var H = m.stat_desc.has_stree,
              I = m.stat_desc.extra_bits,
              L = m.stat_desc.extra_base,
              O = m.stat_desc.max_length,
              P = 0;
            for (z = 0; z <= ib; z++) h.bl_count[z] = 0;
            u[2 * h.heap[h.heap_max] + 1] = 0;
            for (m = h.heap_max + 1; m < T; m++)
              ((y = h.heap[m]),
                (z = u[2 * u[2 * y + 1] + 1] + 1),
                z > O && ((z = O), P++),
                (u[2 * y + 1] = z),
                y > G ||
                  (h.bl_count[z]++,
                  (E = 0),
                  y >= L && (E = I[y - L]),
                  (N = u[2 * y]),
                  (h.opt_len += N * (z + E)),
                  H && (h.static_len += N * (D[2 * y + 1] + E))));
            if (0 !== P) {
              do {
                for (z = O - 1; 0 === h.bl_count[z]; ) z--;
                h.bl_count[z]--;
                h.bl_count[z + 1] += 2;
                h.bl_count[O]--;
                P -= 2;
              } while (0 < P);
              for (z = O; 0 !== z; z--)
                for (y = h.bl_count[z]; 0 !== y; )
                  ((E = h.heap[--m]),
                    E > G ||
                      (u[2 * E + 1] !== z &&
                        ((h.opt_len += (z - u[2 * E + 1]) * u[2 * E]),
                        (u[2 * E + 1] = z)),
                      y--));
            }
            r(v, F, h.bl_count);
          }
          function Kb(h, m, r) {
            var u,
              v = -1,
              y = m[1],
              z = 0,
              F = 7,
              G = 4;
            0 === y && ((F = 138), (G = 3));
            m[2 * (r + 1) + 1] = 65535;
            for (u = 0; u <= r; u++) {
              var E = y;
              y = m[2 * (u + 1) + 1];
              (++z < F && E === y) ||
                (z < G
                  ? (h.bl_tree[2 * E] += z)
                  : 0 !== E
                    ? (E !== v && h.bl_tree[2 * E]++, h.bl_tree[2 * Ba]++)
                    : 10 >= z
                      ? h.bl_tree[2 * R]++
                      : h.bl_tree[2 * D]++,
                (z = 0),
                (v = E),
                0 === y
                  ? ((F = 138), (G = 3))
                  : E === y
                    ? ((F = 6), (G = 3))
                    : ((F = 7), (G = 4)));
            }
          }
          function $a(h, r, u) {
            var v,
              y,
              z = -1,
              F = r[1],
              G = 0,
              E = 7,
              H = 4;
            0 === F && ((E = 138), (H = 3));
            for (v = 0; v <= u; v++)
              if (((y = F), (F = r[2 * (v + 1) + 1]), !(++G < E && y === F))) {
                if (G < H) {
                  do m(h, y, h.bl_tree);
                  while (0 !== --G);
                } else
                  0 !== y
                    ? (y !== z && (m(h, y, h.bl_tree), G--),
                      m(h, Ba, h.bl_tree),
                      W(h, G - 3, 2))
                    : 10 >= G
                      ? (m(h, R, h.bl_tree), W(h, G - 3, 3))
                      : (m(h, D, h.bl_tree), W(h, G - 11, 7));
                G = 0;
                z = y;
                0 === F
                  ? ((E = 138), (H = 3))
                  : y === F
                    ? ((E = 6), (H = 3))
                    : ((E = 7), (H = 4));
              }
          }
          function sa(h) {
            var m,
              r = 4093624447;
            for (m = 0; 31 >= m; m++, r >>>= 1)
              if (1 & r && 0 !== h.dyn_ltree[2 * m]) return ub;
            if (
              0 !== h.dyn_ltree[18] ||
              0 !== h.dyn_ltree[20] ||
              0 !== h.dyn_ltree[26]
            )
              return oa;
            for (m = 32; m < Xa; m++) if (0 !== h.dyn_ltree[2 * m]) return oa;
            return ub;
          }
          function qb(h, m, r, v) {
            W(h, (va << 1) + (v ? 1 : 0), 3);
            E(h);
            u(h, r);
            u(h, ~r);
            ra.arraySet(h.pending_buf, h.window, m, r, h.pending);
            h.pending += r;
          }
          var ra = v('../utils/common'),
            ub = 0,
            oa = 1,
            va = 0,
            Xa = 256,
            ca = Xa + 1 + 29,
            Aa = 30,
            jb = 19,
            T = 2 * ca + 1,
            ib = 15,
            Gc = 16,
            vc = 256,
            Ba = 16,
            R = 17,
            D = 18,
            yb = [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ],
            cb = [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ],
            Fa = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
            Pa = [
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ],
            Qa = Array(2 * (ca + 2));
          F(Qa);
          var la = Array(2 * Aa);
          F(la);
          var S = Array(512);
          F(S);
          var U = Array(256);
          F(U);
          var id = Array(29);
          F(id);
          var ya = Array(Aa);
          F(ya);
          var I,
            vb,
            G,
            P = !1;
          H._tr_init = function (m) {
            if (!P) {
              var u,
                v,
                z,
                D = Array(ib + 1);
              for (z = v = 0; 28 > z; z++)
                for (id[z] = v, u = 0; u < 1 << yb[z]; u++) U[v++] = z;
              U[v - 1] = z;
              for (z = v = 0; 16 > z; z++)
                for (ya[z] = v, u = 0; u < 1 << cb[z]; u++) S[v++] = z;
              for (v >>= 7; z < Aa; z++)
                for (ya[z] = v << 7, u = 0; u < 1 << (cb[z] - 7); u++)
                  S[256 + v++] = z;
              for (u = 0; u <= ib; u++) D[u] = 0;
              for (u = 0; 143 >= u; ) ((Qa[2 * u + 1] = 8), u++, D[8]++);
              for (; 255 >= u; ) ((Qa[2 * u + 1] = 9), u++, D[9]++);
              for (; 279 >= u; ) ((Qa[2 * u + 1] = 7), u++, D[7]++);
              for (; 287 >= u; ) ((Qa[2 * u + 1] = 8), u++, D[8]++);
              r(Qa, ca + 1, D);
              for (u = 0; u < Aa; u++)
                ((la[2 * u + 1] = 5), (la[2 * u] = h(u, 5)));
              I = new O(Qa, yb, Xa + 1, ca, ib);
              vb = new O(la, cb, 0, Aa, ib);
              G = new O([], Fa, 0, jb, 7);
              P = !0;
            }
            m.l_desc = new V(m.dyn_ltree, I);
            m.d_desc = new V(m.dyn_dtree, vb);
            m.bl_desc = new V(m.bl_tree, G);
            m.bi_buf = 0;
            m.bi_valid = 0;
            L(m);
          };
          H._tr_stored_block = qb;
          H._tr_flush_block = function (h, m, r, u) {
            var v = 0;
            if (0 < h.level) {
              2 === h.strm.data_type && (h.strm.data_type = sa(h));
              Hb(h, h.l_desc);
              Hb(h, h.d_desc);
              Kb(h, h.dyn_ltree, h.l_desc.max_code);
              Kb(h, h.dyn_dtree, h.d_desc.max_code);
              Hb(h, h.bl_desc);
              for (v = jb - 1; 3 <= v && 0 === h.bl_tree[2 * Pa[v] + 1]; v--);
              v = ((h.opt_len += 3 * (v + 1) + 14), v);
              var z = (h.opt_len + 3 + 7) >>> 3;
              var y = (h.static_len + 3 + 7) >>> 3;
              y <= z && (z = y);
            } else z = y = r + 5;
            if (r + 4 <= z && -1 !== m) qb(h, m, r, u);
            else if (4 === h.strategy || y === z)
              (W(h, 2 + (u ? 1 : 0), 3), Gb(h, Qa, la));
            else {
              W(h, 4 + (u ? 1 : 0), 3);
              m = h.l_desc.max_code + 1;
              r = h.d_desc.max_code + 1;
              v += 1;
              W(h, m - 257, 5);
              W(h, r - 1, 5);
              W(h, v - 4, 4);
              for (z = 0; z < v; z++) W(h, h.bl_tree[2 * Pa[z] + 1], 3);
              $a(h, h.dyn_ltree, m - 1);
              $a(h, h.dyn_dtree, r - 1);
              Gb(h, h.dyn_ltree, h.dyn_dtree);
            }
            L(h);
            u && E(h);
          };
          H._tr_tally = function (h, m, r) {
            return (
              (h.pending_buf[h.d_buf + 2 * h.last_lit] = (m >>> 8) & 255),
              (h.pending_buf[h.d_buf + 2 * h.last_lit + 1] = 255 & m),
              (h.pending_buf[h.l_buf + h.last_lit] = 255 & r),
              h.last_lit++,
              0 === m
                ? h.dyn_ltree[2 * r]++
                : (h.matches++,
                  m--,
                  h.dyn_ltree[2 * (U[r] + Xa + 1)]++,
                  h.dyn_dtree[2 * (256 > m ? S[m] : S[256 + (m >>> 7)])]++),
              h.last_lit === h.lit_bufsize - 1
            );
          };
          H._tr_align = function (h) {
            W(h, 2, 3);
            m(h, vc, Qa);
            16 === h.bi_valid
              ? (u(h, h.bi_buf), (h.bi_buf = 0), (h.bi_valid = 0))
              : 8 <= h.bi_valid &&
                ((h.pending_buf[h.pending++] = 255 & h.bi_buf),
                (h.bi_buf >>= 8),
                (h.bi_valid -= 8));
          };
        },
        { '../utils/common': 3 },
      ],
      15: [
        function (v, z, H) {
          z.exports = function () {
            this.input = null;
            this.total_in = this.avail_in = this.next_in = 0;
            this.output = null;
            this.total_out = this.avail_out = this.next_out = 0;
            this.msg = '';
            this.state = null;
            this.data_type = 2;
            this.adler = 0;
          };
        },
        {},
      ],
      '/': [
        function (v, z, H) {
          H = v('./lib/utils/common').assign;
          var F = v('./lib/deflate'),
            O = v('./lib/inflate');
          v = v('./lib/zlib/constants');
          var V = {};
          H(V, F, O, v);
          z.exports = V;
        },
        {
          './lib/deflate': 1,
          './lib/inflate': 2,
          './lib/utils/common': 3,
          './lib/zlib/constants': 6,
        },
      ],
    },
    {},
    [],
  )('/');
});
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var e = (function () {
    function K(h) {
      var m = [];
      return ((m[h - 1] = void 0), m);
    }
    function v(h, m) {
      return F(h[0] + m[0], h[1] + m[1]);
    }
    function z(h, m) {
      var t = V(h) & V(m),
        w,
        r;
      return (
        (w =
          (~~Math.max(Math.min(h[1] / wb, 2147483647), -2147483648) &
            ~~Math.max(Math.min(m[1] / wb, 2147483647), -2147483648)) *
          wb),
        (r = t),
        0 > t && (r += wb),
        [r, w]
      );
    }
    function H(h, m) {
      var t, w;
      return h[0] == m[0] && h[1] == m[1]
        ? 0
        : ((t = 0 > h[1]),
          (w = 0 > m[1]),
          t && !w
            ? -1
            : !t && w
              ? 1
              : 0 > F(h[0] - m[0], h[1] - m[1])[1]
                ? -1
                : 1);
    }
    function F(h, m) {
      m %= 1.8446744073709552e19;
      h %= 1.8446744073709552e19;
      var t = m % wb;
      var w = Math.floor(h / wb) * wb;
      m = m - t + w;
      for (h = h - w + t; 0 > h; ) ((h += wb), (m -= wb));
      for (; 4294967295 < h; ) ((h -= wb), (m += wb));
      for (m %= 1.8446744073709552e19; 0x7fffffff00000000 < m; )
        m -= 1.8446744073709552e19;
      for (; -9223372036854775808 > m; ) m += 1.8446744073709552e19;
      return [h, m];
    }
    function O(h) {
      return 0 <= h ? [h, 0] : [h + wb, -wb];
    }
    function V(h) {
      return 2147483648 <= h[0]
        ? ~~Math.max(Math.min(h[0] - wb, 2147483647), -2147483648)
        : ~~Math.max(Math.min(h[0], 2147483647), -2147483648);
    }
    function u(h) {
      return 30 >= h ? 1 << h : u(30) * u(h - 30);
    }
    function W(h, m) {
      var t, w, r, v;
      if (((m &= 63), h[0] == qf[0] && h[1] == qf[1])) return m ? Wa : h;
      if (0 > h[1]) throw Error('Neg');
      return (
        (v = u(m)),
        (w = (h[1] * v) % 1.8446744073709552e19),
        (r = h[0] * v),
        (t = r - (r % wb)),
        (w += t),
        (r -= t),
        0x7fffffffffffffff <= w && (w -= 1.8446744073709552e19),
        [r, w]
      );
    }
    function m(h, m) {
      var t;
      return ((m &= 63), (t = u(m)), F(Math.floor(h[0] / t), h[1] / t));
    }
    function h(h, m) {
      return ((h.Mc = m), (h.Lc = 0), (h.Yb = m.length), h);
    }
    function r(h) {
      return h.Lc >= h.Yb ? -1 : 255 & h.Mc[h.Lc++];
    }
    function L(h) {
      return ((h.Mc = K(32)), (h.Yb = 0), h);
    }
    function E(h) {
      var m = h.Mc;
      return ((m.length = h.Yb), m);
    }
    function Ya(h, m, r, u, v) {
      for (var t = 0; v > t; ++t) r[u + t] = h[m + t];
    }
    function qa(t, w, r) {
      t.Nb = L({});
      var u = h({}, w),
        v = t.Nb,
        C = O(w.length);
      if (0 > H(C, dc)) throw Error('invalid length ' + C);
      t.Tb = C;
      w = {};
      var z;
      w.v = K(4);
      w.a = [];
      w.d = {};
      w.C = K(192);
      w.bb = K(12);
      w.hb = K(12);
      w.Ub = K(12);
      w.vc = K(12);
      w._ = K(192);
      w.K = [];
      w.Sb = K(114);
      w.S = hb({}, 4);
      w.$ = I({});
      w.i = I({});
      w.A = {};
      w.m = [];
      w.P = [];
      w.lb = [];
      w.nc = K(16);
      w.x = K(4);
      w.Q = K(4);
      w.Xb = [Wa];
      w.uc = [Wa];
      w.Kc = [0];
      w.fc = K(5);
      w.yc = K(128);
      w.vb = 0;
      w.X = 1;
      w.D = 0;
      w.Hb = -1;
      for (z = w.mb = 0; 4096 > z; ++z) w.a[z] = {};
      for (z = 0; 4 > z; ++z) w.K[z] = hb({}, 6);
      z = 1 << r.s;
      w.ab = z;
      for (var y = 0; z > 1 << y; ++y);
      w.$b = 2 * y;
      w.n = r.f;
      z = w.X;
      w.X = r.m;
      w.b && z != w.X && ((w.wb = -1), (w.b = null));
      w.eb = 0;
      w.fb = 3;
      w.Y = 2;
      w.y = 3;
      w.Gc = void 0 === e.disableEndMark;
      w.fc[0] = ((9 * (5 * w.Y + w.eb) + w.fb) << 24) >> 24;
      for (r = 0; 4 > r; ++r) w.fc[1 + r] = ((w.ab >> (8 * r)) << 24) >> 24;
      Ya(w.fc, 0, v.Mc, v.Yb, 5);
      v.Yb += 5;
      for (r = 0; 64 > r; r += 8)
        ((z = 255 & V(m(C, r))), (v.Mc[v.Yb++] = (z << 24) >> 24));
      w.W = 0;
      w.oc = u;
      w.pc = 0;
      w.b ||
        ((u = {}),
        (C = 4),
        w.X || (C = 2),
        (u.qb = 2 < C),
        u.qb
          ? ((u.w = 0), (u.xb = 4), (u.R = 66560))
          : ((u.w = 2), (u.xb = 3), (u.R = 0)),
        (w.b = u));
      u = w.A;
      C = w.eb;
      r = w.fb;
      if (null == u.V || u.u != r || u.I != C)
        for (
          u.I = C,
            u.qc = (1 << C) - 1,
            u.u = r,
            r = 1 << (u.u + u.I),
            u.V = K(r),
            C = 0;
          r > C;
          ++C
        ) {
          z = u.V;
          y = C;
          var F = {};
          F = ((F.tb = K(768)), F);
          z[y] = F;
        }
      if (w.ab != w.wb || w.Hb != w.n)
        ((u = w.b),
          (C = w.ab),
          (r = w.n),
          1073741567 > C &&
            ((u.Fc = 16 + (r >> 1)),
            (y = C + 4096),
            (z = r + 274),
            (u.Bc = y),
            (u._b = z),
            (y = y + z + (~~((C + 4096 + r + 274) / 2) + 256)),
            (null == u.c || u.Kb != y) &&
              ((u.c = null), (u.Kb = y), (u.c = K(u.Kb))),
            (u.H = u.Kb - z),
            (u.ob = r),
            (r = C + 1),
            u.p != r && (u.L = K(2 * (u.p = r))),
            (r = 65536),
            u.qb &&
              ((r = C - 1),
              (r |= r >> 1),
              (r |= r >> 2),
              (r |= r >> 4),
              (r |= r >> 8),
              (r >>= 1),
              (r |= 65535),
              16777216 < r && (r >>= 1),
              (u.Ec = r),
              ++r,
              (r += u.R)),
            r != u.rc && (u.ub = K((u.rc = r)))),
          (w.wb = w.ab),
          (w.Hb = w.n));
      w.d.Ab = v;
      w.l = 0;
      for (v = w.J = 0; 4 > v; ++v) w.v[v] = 0;
      v = w.d;
      v.mc = Wa;
      v.xc = Wa;
      v.E = -1;
      v.Jb = 1;
      v.Oc = 0;
      kb(w.C);
      kb(w._);
      kb(w.bb);
      kb(w.hb);
      kb(w.Ub);
      kb(w.vc);
      kb(w.Sb);
      v = w.A;
      C = 1 << (v.u + v.I);
      for (u = 0; C > u; ++u) kb(v.V[u].tb);
      for (v = 0; 4 > v; ++v) kb(w.K[v].G);
      U(w.$, 1 << w.Y);
      U(w.i, 1 << w.Y);
      kb(w.S.G);
      w.N = 0;
      w.jb = 0;
      w.q = 0;
      w.s = 0;
      D(w);
      R(w);
      w.$.rb = w.n + 1 - 2;
      vb(w.$, 1 << w.Y);
      w.i.rb = w.n + 1 - 2;
      vb(w.i, 1 << w.Y);
      void (w.g = Wa);
      v = {};
      w = ((v.cb = w), (v.Z = null), (v.zc = 1), v);
      t.yb = w;
      return t;
    }
    function Gb(m, w) {
      m.Nb = L({});
      var t = h({}, w),
        u = m.Nb,
        v,
        z,
        D,
        F = '',
        G = [];
      for (v = 0; 5 > v; ++v) {
        if (((z = r(t)), -1 == z)) throw Error('truncated input');
        G[v] = (z << 24) >> 24;
      }
      w = { B: {}, e: {} };
      w.Gb = K(192);
      w.Zb = K(12);
      w.Cb = K(12);
      w.Db = K(12);
      w.Eb = K(12);
      w.pb = K(192);
      w.kb = K(4);
      w.kc = K(114);
      w.Fb = y({}, 4);
      w.Rb = Gc({});
      w.sb = Gc({});
      w.gb = {};
      for (v = 0; 4 > v; ++v) w.kb[v] = y({}, 6);
      var E;
      if (5 > G.length) v = 0;
      else {
        v = 255 & G[0];
        var H = v % 9;
        v = ~~(v / 9);
        var I = v % 5;
        var N = ~~(v / 5);
        for (E = v = 0; 4 > E; ++E) v += (255 & G[1 + E]) << (8 * E);
        if (!(G = 99999999 < v)) {
          if (8 < H || 4 < I || 4 < N) N = 0;
          else {
            G = w.gb;
            if (null == G.V || G.u != H || G.I != I)
              for (
                G.I = I,
                  G.qc = (1 << I) - 1,
                  G.u = H,
                  I = 1 << (G.u + G.I),
                  G.V = K(I),
                  H = 0;
                I > H;
                ++H
              ) {
                E = G.V;
                var P = H;
                var R = {};
                R = ((R.Ib = K(768)), R);
                E[P] = R;
              }
            N = 1 << N;
            N = (T(w.Rb, N), T(w.sb, N), (w.Dc = N - 1), 1);
          }
          G = !N;
        }
        G
          ? (v = 0)
          : 0 > v
            ? (v = 0)
            : (w.Ob != v &&
                ((w.Ob = v),
                (w.nb = Math.max(w.Ob, 1)),
                (v = w.B),
                (N = Math.max(w.nb, 4096)),
                (null != v.Lb && v.M == N) || (v.Lb = K(N)),
                (v.M = N),
                (v.o = 0),
                (v.h = 0)),
              (v = 1));
      }
      if (!v) throw Error('corrupted input');
      for (v = 0; 64 > v; v += 8) {
        if (((z = r(t)), -1 == z)) throw Error('truncated input');
        z = z.toString(16);
        1 == z.length && (z = '0' + z);
        F = z + '' + F;
      }
      /^0+$|^f+$/i.test(F)
        ? (m.Tb = dc)
        : ((D = parseInt(F, 16)), (m.Tb = 4294967295 < D ? dc : O(D)));
      z = m.Tb;
      w.e.Ab = t;
      t = w.B;
      va(t);
      t.cc = null;
      w.B.cc = u;
      w.B.h = 0;
      w.B.o = 0;
      kb(w.Gb);
      kb(w.pb);
      kb(w.Zb);
      kb(w.Cb);
      kb(w.Db);
      kb(w.Eb);
      kb(w.kc);
      u = w.gb;
      D = 1 << (u.u + u.I);
      for (t = 0; D > t; ++t) kb(u.V[t].Ib);
      for (u = 0; 4 > u; ++u) kb(w.kb[u].G);
      vc(w.Rb);
      vc(w.sb);
      kb(w.Fb.G);
      u = w.e;
      u.Bb = 0;
      u.E = -1;
      for (t = 0; 5 > t; ++t) u.Bb = (u.Bb << 8) | r(u.Ab);
      w.U = 0;
      w.ib = 0;
      w.Jc = 0;
      w.Ic = 0;
      w.Qc = 0;
      w.Nc = z;
      w.g = Wa;
      w.jc = 0;
      u = {};
      w = ((u.Z = w), (u.cb = null), (u.zc = 1), u);
      m.yb = w;
      return m;
    }
    function Hb(h, m) {
      return h.c[h.f + h.o + m];
    }
    function Kb(h, m, r, u) {
      h.T && h.o + m + u > h.h && (u = h.h - (h.o + m));
      ++r;
      var t = h.f + h.o + m;
      for (m = 0; u > m && h.c[t + m] == h.c[t + m - r]; ++m);
      return m;
    }
    function $a(h) {
      return h.h - h.o;
    }
    function sa(h) {
      var m, t, r;
      if (!h.T)
        for (; (r = -h.f + h.Kb - h.h), r; ) {
          var u = h.cc,
            v = r;
          if (
            ((m =
              u.Lc >= u.Yb
                ? -1
                : ((v = Math.min(v, u.Yb - u.Lc)),
                  Ya(u.Mc, u.Lc, h.c, h.f + h.h, v),
                  (u.Lc += v),
                  v)),
            -1 == m)
          )
            return (
              (h.zb = h.h),
              (t = h.f + h.zb),
              t > h.H && (h.zb = h.H - h.f),
              void (h.T = 1)
            );
          h.h += m;
          h.h >= h.o + h._b && (h.zb = h.h - h._b);
        }
    }
    function qb(h, m) {
      h.f += m;
      h.zb -= m;
      h.o -= m;
      h.h -= m;
    }
    function ra(h) {
      var m;
      ++h.k >= h.p && (h.k = 0);
      ++h.o;
      if (h.o > h.zb) {
        var t = h.f + h.o;
        if (t > h.H) {
          var r = h.f + h.o - h.Bc;
          0 < r && --r;
          var u = h.f + h.h - r;
          for (t = 0; u > t; ++t) h.c[t] = h.c[r + t];
          h.f -= r;
        }
        sa(h);
      }
      1073741823 == h.o &&
        ((m = h.o - h.p), ub(h.L, 2 * h.p, m), ub(h.ub, h.rc, m), qb(h, m));
    }
    function ub(h, m, r) {
      var t;
      for (t = 0; m > t; ++t) {
        var w = h[t] || 0;
        r >= w ? (w = 0) : (w -= r);
        h[t] = w;
      }
    }
    function oa(h, m) {
      var t, w, r, u, v, z, y, D, F, G;
      do {
        if (h.h >= h.o + h.ob) var E = h.ob;
        else if (((E = h.h - h.o), h.xb > E)) {
          ra(h);
          continue;
        }
        var H = h.o > h.p ? h.o - h.p : 0;
        var I = h.f + h.o;
        h.qb
          ? ((G = ie[255 & h.c[I]] ^ (255 & h.c[I + 1])),
            (u = 1023 & G),
            (h.ub[u] = h.o),
            (G ^= (255 & h.c[I + 2]) << 8),
            (v = 65535 & G),
            (h.ub[1024 + v] = h.o),
            (z = (G ^ (ie[255 & h.c[I + 3]] << 5)) & h.Ec))
          : (z = (255 & h.c[I]) ^ ((255 & h.c[I + 1]) << 8));
        var K = h.ub[h.R + z];
        h.ub[h.R + z] = h.o;
        var L = (h.k << 1) + 1;
        var N = h.k << 1;
        var O = (D = h.w);
        for (t = h.Fc; ; ) {
          if (H >= K || 0 == t--) {
            h.L[L] = h.L[N] = 0;
            break;
          }
          if (
            ((r = h.o - K),
            (w = (h.k >= r ? h.k - r : h.k - r + h.p) << 1),
            (F = h.f + K),
            (y = D > O ? O : D),
            h.c[F + y] == h.c[I + y])
          ) {
            for (; ++y != E && h.c[F + y] == h.c[I + y]; );
            if (y == E) {
              h.L[N] = h.L[w];
              h.L[L] = h.L[w + 1];
              break;
            }
          }
          (255 & h.c[I + y]) > (255 & h.c[F + y])
            ? ((h.L[N] = K), (N = w + 1), (K = h.L[N]), (D = y))
            : ((h.L[L] = K), (L = w), (K = h.L[L]), (O = y));
        }
        ra(h);
      } while (0 != --m);
    }
    function va(h) {
      var m = h.o - h.h;
      if (m) {
        var t = h.cc;
        Ya(h.Lb, h.h, t.Mc, t.Yb, m);
        t.Yb += m;
        h.o >= h.M && (h.o = 0);
        h.h = h.o;
      }
    }
    function Xa(h, m) {
      m = h.o - m - 1;
      return (0 > m && (m += h.M), h.Lb[m]);
    }
    function ca(h) {
      return ((h -= 2), 4 > h ? h : 3);
    }
    function Aa(h) {
      return 4 > h ? 0 : 10 > h ? h - 3 : h - 6;
    }
    function jb(h) {
      if (!h.zc) throw Error('bad state');
      if (h.cb) {
        a: {
          var m = h.cb,
            t = h.cb.Xb,
            u = h.cb.uc,
            z = h.cb.Kc,
            y,
            E;
          t[0] = Wa;
          u[0] = Wa;
          z[0] = 1;
          if (m.oc) {
            m.b.cc = m.oc;
            var I = m.b;
            I.f = 0;
            I.o = 0;
            I.h = 0;
            I.T = 0;
            sa(I);
            I.k = 0;
            qb(I, -1);
            m.W = 1;
            m.oc = null;
          }
          if (!m.pc) {
            m.pc = 1;
            var K = (I = m.g);
            if (K[0] == Wa[0] && K[1] == Wa[1]) {
              if (!$a(m.b)) {
                yb(m, V(m.g));
                break a;
              }
              Qa(m);
              var L = V(m.g) & m.y;
              gb(m.d, m.C, (m.l << 4) + L, 0);
              m.l = Aa(m.l);
              K = Hb(m.b, -m.s);
              P(G(m.A, V(m.g), m.J), m.d, K);
              m.J = K;
              --m.s;
              m.g = v(m.g, Ve);
            }
            if ($a(m.b))
              for (;;) {
                if (
                  ((y = cb(m, V(m.g))),
                  (E = m.mb),
                  (L = V(m.g) & m.y),
                  (K = (m.l << 4) + L),
                  1 == y && -1 == E)
                ) {
                  gb(m.d, m.C, K, 0);
                  K = Hb(m.b, -m.s);
                  var N = G(m.A, V(m.g), m.J);
                  if (7 > m.l) P(N, m.d, K);
                  else {
                    var U = Hb(m.b, -m.v[0] - 1 - m.s);
                    var T = void 0;
                    var W;
                    var oa = m.d;
                    var qa = U,
                      ra = K,
                      Ba = 1,
                      Fa = 1;
                    for (W = 7; 0 <= W; --W) {
                      var pa = (ra >> W) & 1;
                      U = Fa;
                      Ba &&
                        ((T = (qa >> W) & 1),
                        (U += (1 + T) << 8),
                        (Ba = T == pa));
                      gb(oa, N.tb, U, pa);
                      Fa = (Fa << 1) | pa;
                    }
                  }
                  m.J = K;
                  m.l = Aa(m.l);
                } else {
                  if ((gb(m.d, m.C, K, 1), 4 > E)) {
                    if (
                      (gb(m.d, m.bb, m.l, 1),
                      E
                        ? (gb(m.d, m.hb, m.l, 1),
                          1 == E
                            ? gb(m.d, m.Ub, m.l, 0)
                            : (gb(m.d, m.Ub, m.l, 1),
                              gb(m.d, m.vc, m.l, E - 2)))
                        : (gb(m.d, m.hb, m.l, 0),
                          1 == y ? gb(m.d, m._, K, 0) : gb(m.d, m._, K, 1)),
                      1 == y
                        ? (m.l = 7 > m.l ? 9 : 11)
                        : (ya(m.i, m.d, y - 2, L), (m.l = 7 > m.l ? 8 : 11)),
                      (K = m.v[E]),
                      0 != E)
                    ) {
                      for (T = E; 1 <= T; --T) m.v[T] = m.v[T - 1];
                      m.v[0] = K;
                    }
                  } else {
                    gb(m.d, m.bb, m.l, 0);
                    m.l = 7 > m.l ? 7 : 10;
                    ya(m.$, m.d, y - 2, L);
                    E -= 4;
                    T = S(E);
                    K = ca(y);
                    ia(m.K[K], m.d, T);
                    if (4 <= T)
                      if (
                        ((oa = (T >> 1) - 1),
                        (N = (2 | (1 & T)) << oa),
                        (U = E - N),
                        14 > T)
                      )
                        for (
                          K = m.Sb,
                            T = N - T - 1,
                            N = m.d,
                            pa = U,
                            qa = 1,
                            U = 0;
                          oa > U;
                          ++U
                        )
                          ((W = 1 & pa),
                            gb(N, K, T + qa, W),
                            (qa = (qa << 1) | W),
                            (pa >>= 1));
                      else
                        (ad(m.d, U >> 4, oa - 4), ha(m.S, m.d, 15 & U), ++m.Qb);
                    K = E;
                    for (T = 3; 1 <= T; --T) m.v[T] = m.v[T - 1];
                    m.v[0] = K;
                    ++m.Mb;
                  }
                  m.J = Hb(m.b, y - 1 - m.s);
                }
                if (((m.s -= y), (m.g = v(m.g, O(y))), !m.s)) {
                  128 <= m.Mb && D(m);
                  16 <= m.Qb && R(m);
                  t[0] = m.g;
                  K = m.d;
                  K = v(v(O(K.Jb), K.mc), [4, 0]);
                  if (((u[0] = K), !$a(m.b))) {
                    yb(m, V(m.g));
                    break a;
                  }
                  K = m.g;
                  K = F(K[0] - I[0], K[1] - I[1]);
                  if (0 <= H(K, [4096, 0])) {
                    m.pc = 0;
                    z[0] = 0;
                    break a;
                  }
                }
              }
            else yb(m, V(m.g));
          }
        }
        h.Pb = h.cb.Xb[0];
        h.cb.Kc[0] && ((y = h.cb), la(y), (y.d.Ab = null), (h.zc = 0));
      } else {
        a: {
          y = h.Z;
          if (((T = V(y.g) & y.Dc), Zb(y.e, y.Gb, (y.U << 4) + T))) {
            if (Zb(y.e, y.Zb, y.U))
              ((m = 0),
                Zb(y.e, y.Cb, y.U)
                  ? (Zb(y.e, y.Db, y.U)
                      ? (Zb(y.e, y.Eb, y.U)
                          ? ((K = y.Qc), (y.Qc = y.Ic))
                          : (K = y.Ic),
                        (y.Ic = y.Jc))
                      : (K = y.Jc),
                    (y.Jc = y.ib),
                    (y.ib = K))
                  : Zb(y.e, y.pb, (y.U << 4) + T) ||
                    ((y.U = 7 > y.U ? 9 : 11), (m = 1)),
                m || ((m = ib(y.sb, y.e, T) + 2), (y.U = 7 > y.U ? 8 : 11)));
            else if (
              ((y.Qc = y.Ic),
              (y.Ic = y.Jc),
              (y.Jc = y.ib),
              (m = 2 + ib(y.Rb, y.e, T)),
              (y.U = 7 > y.U ? 7 : 10),
              (I = db(y.kb[ca(m)], y.e)),
              4 <= I)
            )
              if (((t = (I >> 1) - 1), (y.ib = (2 | (1 & I)) << t), 14 > I)) {
                E = y.ib;
                L = y.kc;
                u = y.ib - I - 1;
                z = y.e;
                T = 1;
                for (K = N = 0; t > K; ++K)
                  ((I = Zb(z, L, u + T)), (T <<= 1), (T += I), (N |= I << K));
                y.ib = E + N;
              } else {
                E = y.ib;
                L = y.e;
                u = 0;
                for (t -= 4; 0 != t; --t)
                  ((L.E >>>= 1),
                    (z = (L.Bb - L.E) >>> 31),
                    (L.Bb -= L.E & (z - 1)),
                    (u = (u << 1) | (1 - z)),
                    -16777216 & L.E ||
                      ((L.Bb = (L.Bb << 8) | r(L.Ab)), (L.E <<= 8)));
                y.ib = E + (u << 4);
                E = y.ib;
                L = y.Fb;
                t = y.e;
                I = 1;
                for (z = K = 0; L.F > z; ++z)
                  ((u = Zb(t, L.G, I)), (I <<= 1), (I += u), (K |= u << z));
                if (((y.ib = E + K), 0 > y.ib)) {
                  y = -1 == y.ib ? 1 : -1;
                  break a;
                }
              }
            else y.ib = I;
            if (0 <= H(O(y.ib), y.g) || y.ib >= y.nb) {
              y = -1;
              break a;
            }
            E = y.B;
            L = m;
            t = E.o - y.ib - 1;
            for (0 > t && (t += E.M); 0 != L; --L)
              (t >= E.M && (t = 0),
                (E.Lb[E.o++] = E.Lb[t++]),
                E.o >= E.M && va(E));
            y.g = v(y.g, O(m));
            y.jc = Xa(y.B, 0);
          } else {
            E = y.gb;
            L = V(y.g);
            E = E.V[((L & E.qc) << E.u) + ((255 & y.jc) >>> (8 - E.u))];
            if (7 > y.U) {
              L = y.e;
              m = 1;
              do m = (m << 1) | Zb(L, E.Ib, m);
              while (256 > m);
              E = (m << 24) >> 24;
            } else {
              L = y.e;
              m = Xa(y.B, y.ib);
              t = 1;
              do
                if (
                  ((z = (m >> 7) & 1),
                  (m <<= 1),
                  (u = Zb(L, E.Ib, ((1 + z) << 8) + t)),
                  (t = (t << 1) | u),
                  z != u)
                ) {
                  for (; 256 > t; ) t = (t << 1) | Zb(L, E.Ib, t);
                  break;
                }
              while (256 > t);
              E = (t << 24) >> 24;
            }
            y.jc = E;
            E = y.B;
            L = y.jc;
            E.Lb[E.o++] = L;
            E.o >= E.M && va(E);
            y.U = Aa(y.U);
            y.g = v(y.g, Ve);
          }
          y = 0;
        }
        if (-1 == y) throw Error('corrupted input');
        h.Pb = dc;
        h.Pc = h.Z.g;
        if (y || (0 <= H(h.Z.Nc, Wa) && 0 <= H(h.Z.g, h.Z.Nc)))
          (va(h.Z.B),
            (y = h.Z.B),
            va(y),
            (y.cc = null),
            (h.Z.e.Ab = null),
            (h.zc = 0));
      }
      return h.zc;
    }
    function T(h, m) {
      for (; m > h.O; ++h.O) ((h.ec[h.O] = y({}, 3)), (h.hc[h.O] = y({}, 3)));
    }
    function ib(h, m, r) {
      return Zb(m, h.wc, 0)
        ? 8 + (Zb(m, h.wc, 1) ? 8 + db(h.tc, m) : db(h.hc[r], m))
        : db(h.ec[r], m);
    }
    function Gc(h) {
      return (
        (h.wc = K(2)),
        (h.ec = K(16)),
        (h.hc = K(16)),
        (h.tc = y({}, 8)),
        (h.O = 0),
        h
      );
    }
    function vc(h) {
      kb(h.wc);
      for (var m = 0; h.O > m; ++m) (kb(h.ec[m].G), kb(h.hc[m].G));
      kb(h.tc.G);
    }
    function Ba(h, m) {
      h.jb = m;
      var t = h.a[m].r;
      var r = h.a[m].j;
      do {
        if (h.a[m].t) {
          var w = h.a[t];
          w.j = -1;
          w.t = 0;
          h.a[t].r = t - 1;
          h.a[m].Ac &&
            ((h.a[t - 1].t = 0),
            (h.a[t - 1].r = h.a[m].r2),
            (h.a[t - 1].j = h.a[m].j2));
        }
        var u = t;
        w = r;
        r = h.a[u].j;
        t = h.a[u].r;
        h.a[u].j = w;
        h.a[u].r = m;
        m = u;
      } while (0 < m);
      return ((h.mb = h.a[0].j), (h.q = h.a[0].r));
    }
    function R(h) {
      for (var m = 0; 16 > m; ++m) {
        var t = h.nc,
          r = m,
          u,
          v = h.S,
          y = m,
          z = 1,
          D = 0;
        for (u = v.F; 0 != u; --u) {
          var E = 1 & y;
          y >>>= 1;
          D += bd(v.G[z], E);
          z = (z << 1) | E;
        }
        t[r] = D;
      }
      h.Qb = 0;
    }
    function D(h) {
      var m;
      for (m = 4; 128 > m; ++m) {
        var t = S(m);
        var r = (t >> 1) - 1;
        var u = (2 | (1 & t)) << r;
        var v = h.yc;
        for (var y = m, z, D = m - u, E = 1, F = 0; 0 != r; --r)
          ((z = 1 & D),
            (D >>>= 1),
            (F += Ab[(2047 & ((h.Sb[u - t - 1 + E] - z) ^ -z)) >>> 2]),
            (E = (E << 1) | z));
        v[y] = F;
      }
      for (u = 0; 4 > u; ++u) {
        m = h.K[u];
        v = u << 6;
        for (t = 0; h.$b > t; ++t) h.P[v + t] = Pc(m, t);
        for (t = 14; h.$b > t; ++t) h.P[v + t] += ((t >> 1) - 1 - 4) << 6;
        t = 128 * u;
        for (m = 0; 4 > m; ++m) h.lb[t + m] = h.P[v + m];
        for (; 128 > m; ++m) h.lb[t + m] = h.P[v + S(m)] + h.yc[m];
      }
      h.Mb = 0;
    }
    function yb(h, m) {
      la(h);
      m &= h.y;
      h.Gc &&
        (gb(h.d, h.C, (h.l << 4) + m, 1),
        gb(h.d, h.bb, h.l, 0),
        (h.l = 7 > h.l ? 7 : 10),
        ya(h.$, h.d, 0, m),
        (m = ca(2)),
        ia(h.K[m], h.d, 63),
        ad(h.d, 67108863, 26),
        ha(h.S, h.d, 15));
      for (m = 0; 5 > m; ++m) pa(h.d);
    }
    function cb(h, m) {
      var t,
        r,
        w,
        u,
        v,
        y,
        z,
        D,
        E,
        F,
        H,
        I,
        K,
        L,
        O,
        P,
        R,
        S,
        T,
        U,
        V,
        W,
        ca,
        ha,
        ia,
        la,
        qa,
        sa;
      if (h.jb != h.q)
        return (
          (F = h.a[h.q].r - h.q),
          (h.mb = h.a[h.q].j),
          (h.q = h.a[h.q].r),
          F
        );
      if (
        ((h.q = h.jb = 0),
        h.N ? ((E = h.vb), (h.N = 0)) : (E = Qa(h)),
        (F = h.D),
        (R = $a(h.b) + 1),
        2 > R)
      )
        return ((h.mb = -1), 1);
      273 < R && (R = 273);
      for (y = z = 0; 4 > y; ++y)
        ((h.x[y] = h.v[y]),
          (h.Q[y] = Kb(h.b, -1, h.x[y], 273)),
          h.Q[y] > h.Q[z] && (z = y));
      if (h.Q[z] >= h.n)
        return (
          (h.mb = z),
          (F = h.Q[z]),
          (m = F - 1),
          0 < m && (oa(h.b, m), (h.s += m)),
          F
        );
      if (E >= h.n)
        return (
          (h.mb = h.m[F - 1] + 4),
          (m = E - 1),
          0 < m && (oa(h.b, m), (h.s += m)),
          E
        );
      if (
        ((v = Hb(h.b, -1)),
        (L = Hb(h.b, -h.v[0] - 1 - 1)),
        2 > E && v != L && 2 > h.Q[z])
      )
        return ((h.mb = -1), 1);
      h.a[0].Hc = h.l;
      var ra = m & h.y;
      h.a[1].z =
        Ab[h.C[(h.l << 4) + ra] >>> 2] + N(G(h.A, m, h.J), 7 <= h.l, L, v);
      var va = h.a[1];
      va.j = -1;
      va.t = 0;
      va = Ab[(2048 - h.C[(h.l << 4) + ra]) >>> 2];
      var ya = va + Ab[(2048 - h.bb[h.l]) >>> 2];
      if (L == v) {
        var B = h.l;
        B = ya + (Ab[h.hb[B] >>> 2] + Ab[h._[(B << 4) + ra] >>> 2]);
        h.a[1].z > B && ((h.a[1].z = B), (y = h.a[1]), (y.j = 0), (y.t = 0));
      }
      if (((D = E >= h.Q[z] ? E : h.Q[z]), 2 > D))
        return ((h.mb = h.a[1].j), 1);
      h.a[1].r = 0;
      h.a[0].bc = h.x[0];
      h.a[0].ac = h.x[1];
      h.a[0].dc = h.x[2];
      h.a[0].lc = h.x[3];
      z = D;
      do h.a[z--].z = 268435455;
      while (2 <= z);
      for (y = 0; 4 > y; ++y)
        if (((K = h.Q[y]), !(2 > K))) {
          var Ea = ya + Pa(h, y, h.l, ra);
          do {
            var pa = Ea + h.i.Cc[272 * ra + (K - 2)];
            var ja = h.a[K];
            ja.z > pa && ((ja.z = pa), (ja.r = 0), (ja.j = y), (ja.t = 0));
          } while (2 <= --K);
        }
      if (
        ((K = va + Ab[h.bb[h.l] >>> 2]),
        (z = 2 <= h.Q[0] ? h.Q[0] + 1 : 2),
        E >= z)
      ) {
        for (E = 0; z > h.m[E]; ) E += 2;
        for (
          ;
          (t = h.m[E + 1]),
            (pa = K + Fa(h, t, z, ra)),
            (ja = h.a[z]),
            ja.z > pa && ((ja.z = pa), (ja.r = 0), (ja.j = t + 4), (ja.t = 0)),
            z != h.m[E] || ((E += 2), E != F);
          ++z
        );
      }
      for (t = 0; ; ) {
        if ((++t, t == D)) return Ba(h, t);
        if (((O = Qa(h)), (F = h.D), O >= h.n))
          return ((h.vb = O), (h.N = 1), Ba(h, t));
        if (
          (++m,
          (V = h.a[t].r),
          h.a[t].t
            ? (--V,
              h.a[t].Ac
                ? ((W = h.a[h.a[t].r2].Hc),
                  (W = 4 > h.a[t].j2 ? (7 > W ? 8 : 11) : 7 > W ? 7 : 10))
                : (W = h.a[V].Hc),
              (W = Aa(W)))
            : (W = h.a[V].Hc),
          V == t - 1
            ? (W = h.a[t].j ? Aa(W) : 7 > W ? 9 : 11)
            : (h.a[t].t && h.a[t].Ac
                ? ((V = h.a[t].r2), (U = h.a[t].j2), (W = 7 > W ? 8 : 11))
                : ((U = h.a[t].j),
                  (W = 4 > U ? (7 > W ? 8 : 11) : 7 > W ? 7 : 10)),
              (T = h.a[V]),
              4 > U
                ? U
                  ? 1 == U
                    ? ((h.x[0] = T.ac),
                      (h.x[1] = T.bc),
                      (h.x[2] = T.dc),
                      (h.x[3] = T.lc))
                    : 2 == U
                      ? ((h.x[0] = T.dc),
                        (h.x[1] = T.bc),
                        (h.x[2] = T.ac),
                        (h.x[3] = T.lc))
                      : ((h.x[0] = T.lc),
                        (h.x[1] = T.bc),
                        (h.x[2] = T.ac),
                        (h.x[3] = T.dc))
                  : ((h.x[0] = T.bc),
                    (h.x[1] = T.ac),
                    (h.x[2] = T.dc),
                    (h.x[3] = T.lc))
                : ((h.x[0] = U - 4),
                  (h.x[1] = T.bc),
                  (h.x[2] = T.ac),
                  (h.x[3] = T.dc))),
          (h.a[t].Hc = W),
          (h.a[t].bc = h.x[0]),
          (h.a[t].ac = h.x[1]),
          (h.a[t].dc = h.x[2]),
          (h.a[t].lc = h.x[3]),
          (u = h.a[t].z),
          (v = Hb(h.b, -1)),
          (L = Hb(h.b, -h.x[0] - 1 - 1)),
          (ra = m & h.y),
          (r =
            u +
            Ab[h.C[(W << 4) + ra] >>> 2] +
            N(G(h.A, m, Hb(h.b, -2)), 7 <= W, L, v)),
          (P = h.a[t + 1]),
          (E = 0),
          P.z > r && ((P.z = r), (P.r = t), (P.j = -1), (P.t = 0), (E = 1)),
          (va = u + Ab[(2048 - h.C[(W << 4) + ra]) >>> 2]),
          (ya = va + Ab[(2048 - h.bb[W]) >>> 2]),
          L != v ||
            (t > P.r && !P.j) ||
            ((B = ya + (Ab[h.hb[W] >>> 2] + Ab[h._[(W << 4) + ra] >>> 2])),
            P.z >= B && ((P.z = B), (P.r = t), (P.j = 0), (P.t = 0), (E = 1))),
          (S = $a(h.b) + 1),
          (S = S > 4095 - t ? 4095 - t : S),
          (R = S),
          !(2 > R))
        ) {
          if (
            (R > h.n && (R = h.n),
            !E &&
              L != v &&
              ((ca = Math.min(S - 1, h.n)),
              (I = Kb(h.b, 0, h.x[0], ca)),
              2 <= I))
          ) {
            y = Aa(W);
            ja = (m + 1) & h.y;
            pa =
              r +
              Ab[(2048 - h.C[(y << 4) + ja]) >>> 2] +
              Ab[(2048 - h.bb[y]) >>> 2];
            for (Ea = t + 1 + I; Ea > D; ) h.a[++D].z = 268435455;
            pa += ((ha = h.i.Cc[272 * ja + (I - 2)]), ha + Pa(h, 0, y, ja));
            ja = h.a[Ea];
            ja.z > pa &&
              ((ja.z = pa),
              (ja.r = t + 1),
              (ja.j = 0),
              (ja.t = 1),
              (ja.Ac = 0));
          }
          z = 2;
          for (E = 0; 4 > E; ++E)
            if (((H = Kb(h.b, -1, h.x[E], R)), !(2 > H))) {
              K = H;
              do {
                for (; t + H > D; ) h.a[++D].z = 268435455;
                pa =
                  ya +
                  ((ia = h.i.Cc[272 * ra + (H - 2)]), ia + Pa(h, E, W, ra));
                ja = h.a[t + H];
                ja.z > pa && ((ja.z = pa), (ja.r = t), (ja.j = E), (ja.t = 0));
              } while (2 <= --H);
              if (
                ((H = K),
                E || (z = H + 1),
                S > H &&
                  ((ca = Math.min(S - 1 - H, h.n)),
                  (I = Kb(h.b, H, h.x[E], ca)),
                  2 <= I))
              ) {
                y = 7 > W ? 8 : 11;
                ja = (m + H) & h.y;
                pa =
                  ya +
                  ((la = h.i.Cc[272 * ra + (H - 2)]), la + Pa(h, E, W, ra)) +
                  Ab[h.C[(y << 4) + ja] >>> 2] +
                  N(
                    G(h.A, m + H, Hb(h.b, H - 1 - 1)),
                    1,
                    Hb(h.b, H - 1 - (h.x[E] + 1)),
                    Hb(h.b, H - 1),
                  );
                y = Aa(y);
                ja = (m + H + 1) & h.y;
                pa += Ab[(2048 - h.C[(y << 4) + ja]) >>> 2];
                pa += Ab[(2048 - h.bb[y]) >>> 2];
                for (Ea = H + 1 + I; t + Ea > D; ) h.a[++D].z = 268435455;
                pa += ((qa = h.i.Cc[272 * ja + (I - 2)]), qa + Pa(h, 0, y, ja));
                ja = h.a[t + Ea];
                ja.z > pa &&
                  ((ja.z = pa),
                  (ja.r = t + H + 1),
                  (ja.j = 0),
                  (ja.t = 1),
                  (ja.Ac = 1),
                  (ja.r2 = t),
                  (ja.j2 = E));
              }
            }
          if (O > R) {
            O = R;
            for (F = 0; O > h.m[F]; F += 2);
            h.m[F] = O;
            F += 2;
          }
          if (O >= z) {
            for (K = va + Ab[h.bb[W] >>> 2]; t + O > D; )
              h.a[++D].z = 268435455;
            for (E = 0; z > h.m[E]; ) E += 2;
            for (H = z; ; ++H)
              if (
                ((w = h.m[E + 1]),
                (pa = K + Fa(h, w, H, ra)),
                (ja = h.a[t + H]),
                ja.z > pa &&
                  ((ja.z = pa), (ja.r = t), (ja.j = w + 4), (ja.t = 0)),
                H == h.m[E])
              ) {
                if (
                  S > H &&
                  ((ca = Math.min(S - 1 - H, h.n)),
                  (I = Kb(h.b, H, w, ca)),
                  2 <= I)
                ) {
                  y = 7 > W ? 7 : 10;
                  ja = (m + H) & h.y;
                  pa =
                    pa +
                    Ab[h.C[(y << 4) + ja] >>> 2] +
                    N(
                      G(h.A, m + H, Hb(h.b, H - 1 - 1)),
                      1,
                      Hb(h.b, H - (w + 1) - 1),
                      Hb(h.b, H - 1),
                    );
                  y = Aa(y);
                  ja = (m + H + 1) & h.y;
                  pa += Ab[(2048 - h.C[(y << 4) + ja]) >>> 2];
                  pa += Ab[(2048 - h.bb[y]) >>> 2];
                  for (Ea = H + 1 + I; t + Ea > D; ) h.a[++D].z = 268435455;
                  pa +=
                    ((sa = h.i.Cc[272 * ja + (I - 2)]), sa + Pa(h, 0, y, ja));
                  ja = h.a[t + Ea];
                  ja.z > pa &&
                    ((ja.z = pa),
                    (ja.r = t + H + 1),
                    (ja.j = 0),
                    (ja.t = 1),
                    (ja.Ac = 1),
                    (ja.r2 = t),
                    (ja.j2 = w + 4));
                }
                if (((E += 2), E == F)) break;
              }
          }
        }
      }
    }
    function Fa(h, m, r, u) {
      var t,
        w = ca(r);
      return (
        (t =
          128 > m
            ? h.lb[128 * w + m]
            : h.P[
                (w << 6) +
                  (131072 > m
                    ? ld[m >> 6] + 12
                    : 134217728 > m
                      ? ld[m >> 16] + 32
                      : ld[m >> 26] + 52)
              ] + h.nc[15 & m]),
        t + h.$.Cc[272 * u + (r - 2)]
      );
    }
    function Pa(h, m, r, u) {
      var t;
      return (
        m
          ? ((t = Ab[(2048 - h.hb[r]) >>> 2]),
            1 == m
              ? (t += Ab[h.Ub[r] >>> 2])
              : ((t += Ab[(2048 - h.Ub[r]) >>> 2]), (t += bd(h.vc[r], m - 2))))
          : ((t = Ab[h.hb[r] >>> 2]),
            (t += Ab[(2048 - h._[(r << 4) + u]) >>> 2])),
        t
      );
    }
    function Qa(h) {
      var m = 0;
      a: {
        var t = h.b;
        var r = h.m,
          u,
          v,
          y,
          z,
          E,
          D,
          F,
          G;
        if (t.h >= t.o + t.ob) var H = t.ob;
        else if (((H = t.h - t.o), t.xb > H)) {
          t = (ra(t), 0);
          break a;
        }
        var I = 0;
        var K = t.o > t.p ? t.o - t.p : 0;
        var L = t.f + t.o;
        var N = 1;
        var O = (E = 0);
        t.qb
          ? ((v = ie[255 & t.c[L]] ^ (255 & t.c[L + 1])),
            (E = 1023 & v),
            (v ^= (255 & t.c[L + 2]) << 8),
            (O = 65535 & v),
            (D = (v ^ (ie[255 & t.c[L + 3]] << 5)) & t.Ec))
          : (D = (255 & t.c[L]) ^ ((255 & t.c[L + 1]) << 8));
        v = t.ub[t.R + D] || 0;
        t.qb &&
          ((u = t.ub[E] || 0),
          (y = t.ub[1024 + O] || 0),
          (t.ub[E] = t.o),
          (t.ub[1024 + O] = t.o),
          u > K &&
            t.c[t.f + u] == t.c[L] &&
            ((r[I++] = N = 2), (r[I++] = t.o - u - 1)),
          y > K &&
            t.c[t.f + y] == t.c[L] &&
            (y == u && (I -= 2),
            (r[I++] = N = 3),
            (r[I++] = t.o - y - 1),
            (u = y)),
          0 != I && u == v && ((I -= 2), (N = 1)));
        t.ub[t.R + D] = t.o;
        D = (t.k << 1) + 1;
        var P = t.k << 1;
        E = O = t.w;
        0 != t.w &&
          v > K &&
          t.c[t.f + v + t.w] != t.c[L + t.w] &&
          ((r[I++] = N = t.w), (r[I++] = t.o - v - 1));
        for (u = t.Fc; ; ) {
          if (K >= v || 0 == u--) {
            t.L[D] = t.L[P] = 0;
            break;
          }
          if (
            ((z = t.o - v),
            (y = (t.k >= z ? t.k - z : t.k - z + t.p) << 1),
            (G = t.f + v),
            (F = O > E ? E : O),
            t.c[G + F] == t.c[L + F])
          ) {
            for (; ++F != H && t.c[G + F] == t.c[L + F]; );
            if (F > N && ((r[I++] = N = F), (r[I++] = z - 1), F == H)) {
              t.L[P] = t.L[y];
              t.L[D] = t.L[y + 1];
              break;
            }
          }
          (255 & t.c[L + F]) > (255 & t.c[G + F])
            ? ((t.L[P] = v), (P = y + 1), (v = t.L[P]), (O = F))
            : ((t.L[D] = v), (D = y), (v = t.L[D]), (E = F));
        }
        t = (ra(t), I);
      }
      return (
        (h.D = t),
        0 < h.D &&
          ((m = h.m[h.D - 2]),
          m == h.n && (m += Kb(h.b, m - 1, h.m[h.D - 1], 273 - m))),
        ++h.s,
        m
      );
    }
    function la(h) {
      h.b && h.W && ((h.b.cc = null), (h.W = 0));
    }
    function S(h) {
      return 2048 > h
        ? ld[h]
        : 2097152 > h
          ? ld[h >> 10] + 20
          : ld[h >> 20] + 40;
    }
    function U(h, m) {
      kb(h.db);
      for (var t = 0; m > t; ++t) (kb(h.Vb[t].G), kb(h.Wb[t].G));
      kb(h.ic.G);
    }
    function id(h, m, r, u, v) {
      var t;
      var w = Ab[h.db[0] >>> 2];
      var y = Ab[(2048 - h.db[0]) >>> 2];
      var z = y + Ab[h.db[1] >>> 2];
      y += Ab[(2048 - h.db[1]) >>> 2];
      for (t = 0; 8 > t; ++t) {
        if (t >= r) return;
        u[v + t] = w + Pc(h.Vb[m], t);
      }
      for (; 16 > t; ++t) {
        if (t >= r) return;
        u[v + t] = z + Pc(h.Wb[m], t - 8);
      }
      for (; r > t; ++t) u[v + t] = y + Pc(h.ic, t - 8 - 8);
    }
    function ya(h, m, r, u) {
      8 > r
        ? (gb(m, h.db, 0, 0), ia(h.Vb[u], m, r))
        : ((r -= 8),
          gb(m, h.db, 0, 1),
          8 > r
            ? (gb(m, h.db, 1, 0), ia(h.Wb[u], m, r))
            : (gb(m, h.db, 1, 1), ia(h.ic, m, r - 8)));
      0 == --h.sc[u] && (id(h, u, h.rb, h.Cc, 272 * u), (h.sc[u] = h.rb));
    }
    function I(h) {
      h.db = K(2);
      h.Vb = K(16);
      h.Wb = K(16);
      h.ic = hb({}, 8);
      for (var m = 0; 16 > m; ++m)
        ((h.Vb[m] = hb({}, 3)), (h.Wb[m] = hb({}, 3)));
      return ((h.Cc = []), (h.sc = []), h);
    }
    function vb(h, m) {
      for (var t = 0; m > t; ++t)
        (id(h, t, h.rb, h.Cc, 272 * t), (h.sc[t] = h.rb));
    }
    function G(h, m, r) {
      return h.V[((m & h.qc) << h.u) + ((255 & r) >>> (8 - h.u))];
    }
    function P(h, m, r) {
      var t,
        u = 1;
      for (t = 7; 0 <= t; --t) {
        var w = (r >> t) & 1;
        gb(m, h.tb, u, w);
        u = (u << 1) | w;
      }
    }
    function N(h, m, r, u) {
      var t,
        w,
        v = 1,
        y = 7,
        z = 0;
      if (m)
        for (; 0 <= y; --y)
          if (
            ((w = (r >> y) & 1),
            (t = (u >> y) & 1),
            (z += bd(h.tb[((1 + w) << 8) + v], t)),
            (v = (v << 1) | t),
            w != t)
          ) {
            --y;
            break;
          }
      for (; 0 <= y; --y)
        ((t = (u >> y) & 1), (z += bd(h.tb[v], t)), (v = (v << 1) | t));
      return z;
    }
    function y(h, m) {
      return ((h.F = m), (h.G = K(1 << m)), h);
    }
    function db(h, m) {
      var t,
        r = 1;
      for (t = h.F; 0 != t; --t) r = (r << 1) + Zb(m, h.G, r);
      return r - (1 << h.F);
    }
    function hb(h, m) {
      return ((h.F = m), (h.G = K(1 << m)), h);
    }
    function ia(h, m, r) {
      var t,
        u = 1;
      for (t = h.F; 0 != t; ) {
        --t;
        var w = (r >>> t) & 1;
        gb(m, h.G, u, w);
        u = (u << 1) | w;
      }
    }
    function Pc(h, m) {
      var t,
        r = 1,
        u = 0;
      for (t = h.F; 0 != t; ) {
        --t;
        var w = (m >>> t) & 1;
        u += bd(h.G[r], w);
        r = (r << 1) + w;
      }
      return u;
    }
    function ha(h, m, r) {
      var t,
        u = 1;
      for (t = 0; h.F > t; ++t) {
        var w = 1 & r;
        gb(m, h.G, u, w);
        u = (u << 1) | w;
        r >>= 1;
      }
    }
    function Zb(h, m, u) {
      var t,
        w = m[u];
      return (
        (t = (h.E >>> 11) * w),
        (-2147483648 ^ t) > (-2147483648 ^ h.Bb)
          ? ((h.E = t),
            (m[u] = ((w + ((2048 - w) >>> 5)) << 16) >> 16),
            -16777216 & h.E || ((h.Bb = (h.Bb << 8) | r(h.Ab)), (h.E <<= 8)),
            0)
          : ((h.E -= t),
            (h.Bb -= t),
            (m[u] = ((w - (w >>> 5)) << 16) >> 16),
            -16777216 & h.E || ((h.Bb = (h.Bb << 8) | r(h.Ab)), (h.E <<= 8)),
            1)
      );
    }
    function kb(h) {
      for (var m = h.length - 1; 0 <= m; --m) h[m] = 1024;
    }
    function gb(h, m, r, u) {
      var t = m[r];
      var w = (h.E >>> 11) * t;
      u
        ? ((h.xc = v(h.xc, z(O(w), [4294967295, 0]))),
          (h.E -= w),
          (m[r] = ((t - (t >>> 5)) << 16) >> 16))
        : ((h.E = w), (m[r] = ((t + ((2048 - t) >>> 5)) << 16) >> 16));
      -16777216 & h.E || ((h.E <<= 8), pa(h));
    }
    function ad(h, m, r) {
      for (--r; 0 <= r; --r)
        ((h.E >>>= 1),
          1 == ((m >>> r) & 1) && (h.xc = v(h.xc, O(h.E))),
          -16777216 & h.E || ((h.E <<= 8), pa(h)));
    }
    function pa(h) {
      var t = h.xc;
      var r = 32,
        u;
      t =
        ((r &= 63),
        (u = m(t, r)),
        0 > t[1] && (u = v(u, W([2, 0], 63 - r))),
        u);
      r = V(t);
      if (0 != r || 0 > H(h.xc, [4278190080, 0])) {
        h.mc = v(h.mc, O(h.Jb));
        t = h.Oc;
        do ((u = h.Ab), (t += r), (u.Mc[u.Yb++] = (t << 24) >> 24), (t = 255));
        while (0 != --h.Jb);
        h.Oc = V(h.xc) >>> 24;
      }
      ++h.Jb;
      h.xc = W(z(h.xc, [16777215, 0]), 8);
    }
    function bd(h, m) {
      return Ab[(2047 & ((h - m) ^ -m)) >>> 2];
    }
    function kd(h) {
      for (
        var m, t, r, u = 0, v = 0, y = h.length, z = [], E = [];
        y > u;
        ++u, ++v
      ) {
        if (((m = 255 & h[u]), 128 & m))
          if (192 == (224 & m)) {
            if (u + 1 >= y || ((t = 255 & h[++u]), 128 != (192 & t))) return h;
            E[v] = ((31 & m) << 6) | (63 & t);
          } else {
            if (
              224 != (240 & m) ||
              u + 2 >= y ||
              ((t = 255 & h[++u]), 128 != (192 & t)) ||
              ((r = 255 & h[++u]), 128 != (192 & r))
            )
              return h;
            E[v] = ((15 & m) << 12) | ((63 & t) << 6) | (63 & r);
          }
        else {
          if (!m) return h;
          E[v] = m;
        }
        16383 == v && (z.push(String.fromCharCode.apply(String, E)), (v = -1));
      }
      return (
        0 < v && ((E.length = v), z.push(String.fromCharCode.apply(String, E))),
        z.join('')
      );
    }
    function Ue(h) {
      var m,
        t,
        r = [],
        u = 0,
        v = h.length;
      if ('object' == typeof h) return h;
      for (t = m = 0; v > t; ++t) r[m++] = h.charCodeAt(t);
      for (t = 0; v > t; ++t)
        ((h = r[t]),
          1 <= h && 127 >= h
            ? ++u
            : (u += !h || (128 <= h && 2047 >= h) ? 2 : 3));
      m = [];
      for (t = u = 0; v > t; ++t)
        ((h = r[t]),
          1 <= h && 127 >= h
            ? (m[u++] = (h << 24) >> 24)
            : !h || (128 <= h && 2047 >= h)
              ? ((m[u++] = ((192 | ((h >> 6) & 31)) << 24) >> 24),
                (m[u++] = ((128 | (63 & h)) << 24) >> 24))
              : ((m[u++] = ((224 | ((h >> 12) & 15)) << 24) >> 24),
                (m[u++] = ((128 | ((h >> 6) & 63)) << 24) >> 24),
                (m[u++] = ((128 | (63 & h)) << 24) >> 24)));
      return m;
    }
    function cd(h) {
      return h[1] + h[0];
    }
    var Zd = 'function' == typeof setImmediate ? setImmediate : setTimeout,
      wb = 4294967296,
      dc = [4294967295, -wb],
      qf = [0, -9223372036854775808],
      Wa = [0, 0],
      Ve = [1, 0],
      ie = (function () {
        var h,
          m,
          r = [];
        for (h = 0; 256 > h; ++h) {
          var u = h;
          for (m = 0; 8 > m; ++m)
            0 != (1 & u) ? (u = (u >>> 1) ^ -306674912) : (u >>>= 1);
          r[h] = u;
        }
        return r;
      })(),
      ld = (function () {
        var h,
          m,
          r = 2,
          u = [0, 1];
        for (m = 2; 22 > m; ++m) {
          var v = 1 << ((m >> 1) - 1);
          for (h = 0; v > h; ++h, ++r) u[r] = (m << 24) >> 24;
        }
        return u;
      })(),
      Ab = (function () {
        var h,
          m,
          r = [];
        for (m = 8; 0 <= m; --m) {
          var u = 1 << (9 - m - 1);
          for (h = 1 << (9 - m); h > u; ++u)
            r[u] = (m << 6) + (((h - u) << 6) >>> (9 - m - 1));
        }
        return r;
      })(),
      mc = (function () {
        var h = [
          { s: 16, f: 64, m: 0 },
          { s: 20, f: 64, m: 0 },
          { s: 19, f: 64, m: 1 },
          { s: 20, f: 64, m: 1 },
          { s: 21, f: 128, m: 1 },
          { s: 22, f: 128, m: 1 },
          { s: 23, f: 128, m: 1 },
          { s: 24, f: 255, m: 1 },
          { s: 25, f: 255, m: 1 },
        ];
        return function (m) {
          return h[m - 1] || h[6];
        };
      })();
    return (
      'undefined' == typeof onmessage ||
        ('undefined' != typeof window && void 0 !== window.document) ||
        !(function () {
          onmessage = function (h) {
            h &&
              h.gc &&
              (2 == h.gc.action
                ? e.decompress(h.gc.gc, h.gc.cbn)
                : 1 == h.gc.action && e.compress(h.gc.gc, h.gc.Rc, h.gc.cbn));
          };
        })(),
      {
        compress: function (h, m, r, u) {
          function t() {
            try {
              for (var h, m = new Date().getTime(); jb(y.c.yb); )
                if (
                  ((v = cd(y.c.yb.Pb) / cd(y.c.Tb)),
                  200 < new Date().getTime() - m)
                )
                  return (u(v), Zd(t, 0), 0);
              u(1);
              h = E(y.c.Nb);
              Zd(r.bind(null, h), 0);
            } catch (We) {
              r(null, We);
            }
          }
          var v,
            w,
            y = {},
            z = void 0 === r && void 0 === u;
          if (
            ('function' != typeof r && ((w = r), (r = u = 0)),
            (u =
              u ||
              function (h) {
                void 0 !== w && postMessage({ action: 3, cbn: w, result: h });
              }),
            (r =
              r ||
              function (h, m) {
                return void 0 !== w
                  ? postMessage({ action: 1, cbn: w, result: h, error: m })
                  : void 0;
              }),
            z)
          ) {
            for (y.c = qa({}, Ue(h), mc(m)); jb(y.c.yb); );
            return E(y.c.Nb);
          }
          try {
            ((y.c = qa({}, Ue(h), mc(m))), u(0));
          } catch (Bc) {
            return r(null, Bc);
          }
          Zd(t, 0);
        },
        decompress: function (h, m, r) {
          function t() {
            try {
              for (var h, v = 0, y = new Date().getTime(); jb(w.d.yb); )
                if (0 == ++v % 1e3 && 200 < new Date().getTime() - y)
                  return (C && ((u = cd(w.d.yb.Z.g) / z), r(u)), Zd(t, 0), 0);
              r(1);
              h = kd(E(w.d.Nb));
              Zd(m.bind(null, h), 0);
            } catch (Jc) {
              m(null, Jc);
            }
          }
          var u,
            v,
            w = {},
            y = void 0 === m && void 0 === r;
          if (
            ('function' != typeof m && ((v = m), (m = r = 0)),
            (r =
              r ||
              function (h) {
                void 0 !== v &&
                  postMessage({ action: 3, cbn: v, result: C ? h : -1 });
              }),
            (m =
              m ||
              function (h, m) {
                return void 0 !== v
                  ? postMessage({ action: 2, cbn: v, result: h, error: m })
                  : void 0;
              }),
            y)
          ) {
            for (w.d = Gb({}, h); jb(w.d.yb); );
            return kd(E(w.d.Nb));
          }
          try {
            w.d = Gb({}, h);
            var z = cd(w.d.Tb);
            var C = -1 < z;
            r(0);
          } catch (Hc) {
            return m(null, Hc);
          }
          Zd(t, 0);
        },
      }
    );
  })();
  this.LZMA = this.LZMA_WORKER = e;
}
if ('undefined' === typeof self || !self.constructor.name.includes('Worker')) {
  var saveAs =
    saveAs ||
    (function (K) {
      if (
        !(
          'undefined' === typeof K ||
          ('undefined' !== typeof navigator &&
            /MSIE [1-9]\./.test(navigator.userAgent))
        )
      ) {
        var v = K.document.createElementNS('http://www.w3.org/1999/xhtml', 'a'),
          z = 'download' in v,
          H = /constructor/i.test(K.HTMLElement) || K.safari,
          F = /CriOS\/[\d]+/.test(navigator.userAgent),
          O = function (h) {
            (K.setImmediate || K.setTimeout)(function () {
              throw h;
            }, 0);
          },
          V = function (h) {
            setTimeout(function () {
              'string' === typeof h
                ? (K.URL || K.webkitURL || K).revokeObjectURL(h)
                : h.remove();
            }, 4e4);
          },
          u = function (h) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
              h.type,
            )
              ? new Blob([String.fromCharCode(65279), h], { type: h.type })
              : h;
          },
          W = function (h, m, L) {
            L || (h = u(h));
            var r = this,
              W = 'application/octet-stream' === h.type,
              qa = function () {
                var h = ['writestart', 'progress', 'write', 'writeend'];
                h = [].concat(h);
                for (var m = h.length; m--; ) {
                  var u = r['on' + h[m]];
                  if ('function' === typeof u)
                    try {
                      u.call(r, r);
                    } catch (sa) {
                      O(sa);
                    }
                }
              };
            r.readyState = r.INIT;
            if (z) {
              var Gb = (K.URL || K.webkitURL || K).createObjectURL(h);
              setTimeout(function () {
                v.href = Gb;
                v.download = m;
                var h = new MouseEvent('click');
                v.dispatchEvent(h);
                qa();
                V(Gb);
                r.readyState = r.DONE;
              });
            } else
              (function () {
                if ((F || (W && H)) && K.FileReader) {
                  var m = new FileReader();
                  m.onloadend = function () {
                    var h = F
                      ? m.result
                      : m.result.replace(
                          /^data:[^;]*;/,
                          'data:attachment/file;',
                        );
                    K.open(h, '_blank') || (K.location.href = h);
                    r.readyState = r.DONE;
                    qa();
                  };
                  m.readAsDataURL(h);
                  r.readyState = r.INIT;
                } else
                  (Gb || (Gb = (K.URL || K.webkitURL || K).createObjectURL(h)),
                    W
                      ? (K.location.href = Gb)
                      : K.open(Gb, '_blank') || (K.location.href = Gb),
                    (r.readyState = r.DONE),
                    qa(),
                    V(Gb));
              })();
          },
          m = W.prototype;
        if ('undefined' !== typeof navigator && navigator.msSaveOrOpenBlob)
          return function (h, m, v) {
            m = m || h.name || 'download';
            v || (h = u(h));
            return navigator.msSaveOrOpenBlob(h, m);
          };
        m.abort = function () {};
        m.readyState = m.INIT = 0;
        m.WRITING = 1;
        m.DONE = 2;
        m.error =
          m.onwritestart =
          m.onprogress =
          m.onwrite =
          m.onabort =
          m.onerror =
          m.onwriteend =
            null;
        return function (h, m, u) {
          return new W(h, m || h.name || 'download', u);
        };
      }
    })(
      ('undefined' !== typeof self && self) ||
        ('undefined' !== typeof window && window) ||
        this.content,
    );
  'undefined' !== typeof module && module.exports
    ? (module.exports.saveAs = saveAs)
    : 'undefined' !== typeof define &&
      null !== define &&
      null !== define.amd &&
      define('FileSaver.js', function () {
        return saveAs;
      });
}
'function' === typeof define &&
  define.__amd &&
  ((define.amd = define.__amd), delete define.__amd);
