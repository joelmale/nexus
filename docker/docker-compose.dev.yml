version: '3.8'

# Development Docker Compose configuration
# Start with: docker-compose -f docker-compose.dev.yml up

services:
  # Frontend dev server with hot reload
  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    volumes:
      - .:/app
      - /app/node_modules # Prevent overwriting node_modules
    ports:
      - "5173:5173" # Vite dev server
    environment:
      - NODE_ENV=development
      - VITE_WS_URL=ws://localhost:5000/ws
    networks:
      - nexus-dev

  # Backend dev server with hot reload
  backend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run server:dev"
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5000:5000" # WebSocket server
    environment:
      - NODE_ENV=development
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-secret-change-in-production
      - CORS_ORIGIN=http://localhost:5173
    networks:
      - nexus-dev
    depends_on:
      - redis

  # Redis for development
  redis:
    image: redis:7-alpine
    command: redis-server --loglevel debug
    ports:
      - "6379:6379"
    networks:
      - nexus-dev
    volumes:
      - redis-dev-data:/data

  # Asset server for development
  asset-server:
    image: nginx:alpine
    volumes:
      - ./assets:/usr/share/nginx/html:ro
    ports:
      - "8081:80"
    networks:
      - nexus-dev

  # Adminer for database inspection (if we add a DB later)
  # adminer:
  #   image: adminer
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - nexus-dev

  # PostgreSQL for development
  postgres-dev:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=nexus
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=nexus
    ports:
      - "5432:5432"
    networks:
      - nexus-dev
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data

networks:
  nexus-dev:
    driver: bridge

volumes:
  redis-dev-data:
  postgres-dev-data:
