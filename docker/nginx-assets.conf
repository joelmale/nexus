# nginx configuration for asset server
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/javascript application/vnd.ms-fontobject 
               application/x-font-ttf font/opentype;

    # Cache control
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    1M;
        ~audio/                    1M;
        ~video/                    1M;
    }

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # CORS headers for asset serving
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Range, Accept-Encoding" always;
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;

        # Asset locations
        location / {
            try_files $uri $uri/ =404;
            expires $expires;
        }

        # Maps directory
        location /maps/ {
            alias /usr/share/nginx/html/maps/;
            autoindex on;
            autoindex_format json;
            expires 7d;
            add_header Cache-Control "public, immutable";
        }

        # Tokens directory
        location /tokens/ {
            alias /usr/share/nginx/html/tokens/;
            autoindex on;
            autoindex_format json;
            expires 7d;
            add_header Cache-Control "public, immutable";
        }

        # Props directory
        location /props/ {
            alias /usr/share/nginx/html/props/;
            autoindex on;
            autoindex_format json;
            expires 7d;
            add_header Cache-Control "public, immutable";
        }

        # Sounds directory
        location /sounds/ {
            alias /usr/share/nginx/html/sounds/;
            autoindex on;
            autoindex_format json;
            expires 1d;
            
            # Enable range requests for audio streaming
            add_header Accept-Ranges bytes always;
        }

        # Thumbnails directory (smaller versions of assets)
        location /thumbnails/ {
            alias /usr/share/nginx/html/thumbnails/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Asset manifest/catalog
        location /manifest.json {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Optimize for specific file types
        location ~* \.(jpg|jpeg|png|gif|webp|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        location ~* \.(mp3|ogg|wav|m4a)$ {
            expires 7d;
            add_header Cache-Control "public";
            # Enable byte-range support for audio
            add_header Accept-Ranges bytes always;
        }

        location ~* \.(json|xml)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Error pages
        error_page 404 /404.html;
        location = /404.html {
            internal;
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            root /usr/share/nginx/html;
        }
    }
}
