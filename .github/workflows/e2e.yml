name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 4 * * *' # Daily at 4 AM UTC
  workflow_dispatch:

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        shard: [1, 2]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Start services with Docker Compose
        run: |
          cp .env.example .env
          docker-compose -f docker/docker-compose.test.yml up -d
          sleep 10 # Wait for services to start

      - name: Run E2E tests
        run: |
          npx playwright test \
            --browser=${{ matrix.browser }} \
            --shard=${{ matrix.shard }}/2 \
            --reporter=html
        env:
          CI: true
          BASE_URL: http://localhost:5173
          WS_URL: ws://localhost:5000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 7

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos-${{ matrix.browser }}-${{ matrix.shard }}
          path: test-results/
          retention-days: 7

      - name: Stop services
        if: always()
        run: docker-compose -f docker/docker-compose.test.yml down

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start services
        run: |
          cp .env.example .env
          docker-compose -f docker/docker-compose.test.yml up -d
          sleep 10

      - name: Run Percy visual tests
        run: npx percy exec -- npm run test:visual
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          CI: true

      - name: Stop services
        if: always()
        run: docker-compose -f docker/docker-compose.test.yml down

  lighthouse:
    name: Lighthouse Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Serve application
        run: |
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost:4173
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if a11y tests exist
        id: check-a11y
        run: |
          if npm run test:a11y --help > /dev/null 2>&1; then
            echo "has_a11y=true" >> $GITHUB_OUTPUT
          else
            echo "has_a11y=false" >> $GITHUB_OUTPUT
          fi

      - name: Start services
        if: steps.check-a11y.outputs.has_a11y == 'true'
        run: |
          cp .env.example .env
          docker-compose -f docker/docker-compose.test.yml up -d
          sleep 10

      - name: Run axe accessibility tests
        if: steps.check-a11y.outputs.has_a11y == 'true'
        run: npm run test:a11y
        env:
          CI: true

      - name: Upload accessibility report
        if: steps.check-a11y.outputs.has_a11y == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: a11y-report/
          retention-days: 7

      - name: Stop services
        if: steps.check-a11y.outputs.has_a11y == 'true' && always()
        run: docker-compose -f docker/docker-compose.test.yml down

      - name: Skip accessibility tests
        if: steps.check-a11y.outputs.has_a11y == 'false'
        run: echo "No accessibility tests configured, skipping..."
